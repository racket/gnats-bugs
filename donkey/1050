From nobody@cs.rice.edu  Wed Jun 23 11:00:57 1999
Received: from web.cs.rice.edu (web.cs.rice.edu [128.42.1.163])
	by cs.rice.edu (8.9.0/8.9.0) with ESMTP id LAA22470
	for <plt-gnats@cs.rice.edu>; Wed, 23 Jun 1999 11:00:57 -0500 (CDT)
Message-Id: <199906231600.LAA13730@web.cs.rice.edu>
Date: Wed, 23 Jun 1999 11:00:56 -0500 (CDT)
From: max@gustavus.edu
Reply-To: max@gustavus.edu
To: plt-gnats@cs.rice.edu
Subject: The Foot uses variable values from one invocation for all 

>Number:         1050
>Category:       donkey
>Synopsis:       The Foot uses variable values from one invocation for all
>Confidential:   no
>Severity:       serious
>Priority:       medium
>Responsible:    clements
>State:          closed
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Wed Jun 23 16:15:13 GMT 1999
>Last-Modified:  Thu Jul  8 13:47:02 CDT 1999
>Originator:     Max Hailperin
>Organization:
titan
>Release:        100alpha3
>Environment:
Linux
>Description:
When I tried using The Foot to step through a standard recursive factorial,
I found that it substituted a single value of n in for all the different
levels' ns, so that, for example, at the bottom-most point in evaluating
(factorial 5), when (factorial 0) is reached and expanded, I get

(* (* (* (* (* (if #t 1 (* (factorial (- 0 1)) 0)) 0) 0) 0) 0) 0)

but then a moment later

(* (* (* (* (* 1 1) 1) 1) 1) 1)

and then

(* (* (* (* 1 2) 2) 2) 2)

and so forth.
>How-To-Repeat:
I doubt this is specific to the definition I used, but it was

(define factorial
  (lambda (n)
    (if (= n 0)
        1
        (* (factorial (- n 1))
           n))))

>Fix:

>Audit-Trail:

State-Changed-From-To: open-closed
State-Changed-By: clements
State-Changed-When: Thu Jul  8 13:45:45 1999
State-Changed-Why:
Bug fixed.

Responsible-Changed-From-To: steck->clements
Responsible-Changed-By: clements
Responsible-Changed-When: Thu Jul  8 13:46:38 1999
Responsible-Changed-Why:
no change.
>Unformatted:
