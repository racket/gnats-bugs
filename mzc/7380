From apache@plt-scheme.org Sat May 14 13:36:55 2005
Received: from champlain.ccs.neu.edu (champlain.ccs.neu.edu [127.0.0.1])
	by champlain.ccs.neu.edu (8.12.10/8.12.10) with ESMTP id j4EHasQ0028602
	for <bugs@plt-scheme.org>; Sat, 14 May 2005 13:36:54 -0400
Message-Id: <200505141736.j4EHassB028600@champlain.ccs.neu.edu>
Date: Sat, 14 May 2005 13:36:54 -0400
From: offby1@blarg.net
To: bugs@plt-scheme.org
Subject: internal error in mzc

>Number:         7380
>Category:       mzc
>Synopsis:       internal error in mzc
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Sat May 14 13:40:00 -0400 2005
>Last-Modified:  Fri Nov 25 07:58:44 -0500 2005
>Originator:     Eric Hanchrow
>Organization:
plt
>Submitter-Id:   unknown
>Release:        299.105-cvs11may2005
>Environment:
unix "Linux debian 2.4.27-2-686 #1 Thu Jan 20 11:10:41 JST 2005 i686 GNU/Linux" (i386-linux) (get-display-depth) = 24
Docs Installed:
(#<path:/usr/local/stow/plt/collects/doc/help>)
Collections:
((#<path:/home/erich/.plt-scheme/299.105/collects> "non-existent path") (#<path:/usr/local/stow/plt/collects> (#<path:CVS> #<path:afm> #<path:algol60> #<path:browser> #<path:compiler> #<path:cvs-time-stamp> #<path:defaults> #<path:drscheme> #<path:dynext> #<path:embedded-gui> #<path:eopl> #<path:errortrace> #<path:ffi> #<path:finish-install> #<path:framework> #<path:frtime> #<path:games> #<path:graphics> #<path:guibuilder> #<path:handin-client> #<path:handin-server> #<path:help> #<path:hierlist> #<path:honu-module> #<path:htdch> #<path:htdp> #<path:html> #<path:icons> #<path:lang> #<path:launcher> #<path:make> #<path:mrdemo> #<path:mred> #<path:mrflow> #<path:mrlib> #<path:mysterx> #<path:mzcom> #<path:mzlib> #<path:mzscheme> #<path:net> #<path:openssl> #<path:parser-tools> #<path:planet> #<path:plot> #<path:preprocessor> #<path:profj> #<path:profjBoxes> #<path:profjWizard> #<path:readline> #<path:reduction-semantics> #<path:setup> #<path:sgl> #<path:sirmail> #<path:skipper> #<path:slatex> #<path:slibinit> #<path:slideshow> #<path:srfi> #<path:srpersist> #<path:ssax> #<path:stepper> #<path:string-constants> #<path:swindle> #<path:syntax> #<path:syntax-color> #<path:test-suite> #<path:tests> #<path:tex2page> #<path:texpict> #<path:trace> #<path:version> #<path:waterworld> #<path:web-server> #<path:xelda> #<path:xml> #<path:info-domain> #<path:doc>)))
Human Language: english
Teachpack filenames: ()
Computer Language: (("Professional Languages" "(module ...)") (#6(#t write mixed-fraction-e #f #t debug) (default) #0()))
>Description:
unpack the shar archive.
Run repro.sh.
You will probably see the same output I saw, which I've included in the file "output".
>How-To-Repeat:
#!/bin/sh
# This is a shell archive (produced by GNU sharutils 4.2.1).
# To extract the files from this archive, save it to some FILE, remove
# everything before the `!/bin/sh' line above, then type `sh FILE'.
#
# Made on 2005-05-14 10:34 PDT by <erich@debian>.
# Source directory was `/home/erich/doodles/bridge/bugs/mzc-internal-error'.
#
# Existing files will *not* be overwritten unless `-c' is specified.
#
# This shar contains:
# length mode       name
# ------ ---------- ------------------------------------------
#    277 -rw-r--r-- bug.ss
#   1301 -rw------- output
#     25 -rwxr-xr-x repro.sh
#
save_IFS="${IFS}"
IFS="${IFS}:"
gettext_dir=FAILED
locale_dir=FAILED
first_param="$1"
for dir in $PATH
do
  if test "$gettext_dir" = FAILED && test -f $dir/gettext \
     && ($dir/gettext --version >/dev/null 2>&1)
  then
    set `$dir/gettext --version 2>&1`
    if test "$3" = GNU
    then
      gettext_dir=$dir
    fi
  fi
  if test "$locale_dir" = FAILED && test -f $dir/shar \
     && ($dir/shar --print-text-domain-dir >/dev/null 2>&1)
  then
    locale_dir=`$dir/shar --print-text-domain-dir`
  fi
done
IFS="$save_IFS"
if test "$locale_dir" = FAILED || test "$gettext_dir" = FAILED
then
  echo=echo
else
  TEXTDOMAINDIR=$locale_dir
  export TEXTDOMAINDIR
  TEXTDOMAIN=sharutils
  export TEXTDOMAIN
  echo="$gettext_dir/gettext -s"
fi
if touch -am -t 200112312359.59 $$.touch >/dev/null 2>&1 && test ! -f 200112312359.59 -a -f $$.touch; then
  shar_touch='touch -am -t $1$2$3$4$5$6.$7 "$8"'
elif touch -am 123123592001.59 $$.touch >/dev/null 2>&1 && test ! -f 123123592001.59 -a ! -f 123123592001.5 -a -f $$.touch; then
  shar_touch='touch -am $3$4$5$6$1$2.$7 "$8"'
elif touch -am 1231235901 $$.touch >/dev/null 2>&1 && test ! -f 1231235901 -a -f $$.touch; then
  shar_touch='touch -am $3$4$5$6$2 "$8"'
else
  shar_touch=:
  echo
  $echo 'WARNING: not restoring timestamps.  Consider getting and'
  $echo "installing GNU \`touch', distributed in GNU File Utilities..."
  echo
fi
rm -f 200112312359.59 123123592001.59 123123592001.5 1231235901 $$.touch
#
if mkdir _sh09778; then
  $echo 'x -' 'creating lock directory'
else
  $echo 'failed to create lock directory'
  exit 1
fi
# ============= bug.ss ==============
if test -f 'bug.ss' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'bug.ss' '(file already exists)'
else
  $echo 'x -' extracting 'bug.ss' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'bug.ss' &&
(require (planet "test.ss" ("schematics" "schemeunit.plt" 1)))
X
(define (make-one-test N seq)
X  (let ((rv (group-by N seq)))
X    (make-test-suite
X     "grouping"
X     (make-test-case "input equals output"
X                     (assert-equal? (apply append rv) seq ))
X
X
X     )))
SHAR_EOF
  (set 20 05 05 14 10 27 31 'bug.ss'; eval "$shar_touch") &&
  chmod 0644 'bug.ss' ||
  $echo 'restore of' 'bug.ss' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'bug.ss:' 'MD5 check failed'
4b1f34d8364157899fd5ac10d2c9194b  bug.ss
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'bug.ss'`"
    test 277 -eq "$shar_count" ||
    $echo 'bug.ss:' 'original size' '277,' 'current size' "$shar_count!"
  fi
fi
# ============= output ==============
if test -f 'output' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'output' '(file already exists)'
else
  $echo 'x -' extracting 'output' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'output' &&
$ ./repro.sh 
MzScheme compiler (mzc) version 299.105, Copyright (c) 2005 PLT Scheme, Inc.
"bug.ss": 
X Reading...  expanding...
X      [cpu: 150ms, real: 202ms, gc: 60ms]
X pre-processing and scanning for errors
X      [cpu: 0ms, real: 1ms, gc: 0ms]
X transforming to a-normal form
X      [cpu: 0ms, real: 0ms, gc: 0ms]
X determining known bindings
X      [cpu: 0ms, real: 2ms, gc: 0ms]
X transforming to b-normal form, analyzing, and inlining
X      [cpu: 10ms, real: 33ms, gc: 0ms]
X finding static procedures
X      [cpu: 10ms, real: 5ms, gc: 0ms]
X #f [#f,#f]: Warning: found static procedure (per-load)
X #f [#f,#f]: Warning: found static procedure (per-load)
X closure conversion and explicit control transformation
X      [cpu: 0ms, real: 1ms, gc: 0ms]
X closure->vehicle mapping
X      [cpu: 0ms, real: 0ms, gc: 0ms]
X choosing data representations
X      [cpu: 0ms, real: 1ms, gc: 0ms]
X transforming to Virtual Machine form
X      [cpu: 10ms, real: 8ms, gc: 0ms]
X optimizing Virtual Machine code
X      [cpu: 0ms, real: 1ms, gc: 0ms]
X [emitting ANSI C to "/tmp/mzcTMPbug.c"]
X #f [#f,#f]: INTERNAL ERROR: vm:build-constant: not supported #<struct:zread>
X please report the bug using Help Desk
X  or http://bugs.plt-scheme.org/
X  and include a transcript in verbose mode
Errors encountered.  Compilation aborted.
$ 
SHAR_EOF
  (set 20 05 05 14 10 33 08 'output'; eval "$shar_touch") &&
  chmod 0600 'output' ||
  $echo 'restore of' 'output' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'output:' 'MD5 check failed'
5464f009d909de67f005b702ca82bb89  output
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'output'`"
    test 1301 -eq "$shar_count" ||
    $echo 'output:' 'original size' '1301,' 'current size' "$shar_count!"
  fi
fi
# ============= repro.sh ==============
if test -f 'repro.sh' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING 'repro.sh' '(file already exists)'
else
  $echo 'x -' extracting 'repro.sh' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > 'repro.sh' &&
#!/bin/sh
X
mzc -v bug.ss
SHAR_EOF
  (set 20 05 05 14 10 28 52 'repro.sh'; eval "$shar_touch") &&
  chmod 0755 'repro.sh' ||
  $echo 'restore of' 'repro.sh' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo 'repro.sh:' 'MD5 check failed'
d0e1707d6320846a8796de5b6549f87e  repro.sh
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < 'repro.sh'`"
    test 25 -eq "$shar_count" ||
    $echo 'repro.sh:' 'original size' '25,' 'current size' "$shar_count!"
  fi
fi
rm -fr _sh09778
exit 0
>Fix:
>Audit-Trail:
State changed from "open" to "closed" by mflatt at Fri, 25 Nov 2005 07:58:44 -0500
Reason>>> Instead of the internal error, mzc now reports

 write: cannot marshal constant that is embedded in compiled code:
 #<path:/Users/mflatt/tmp/bug.ss>

which is consistent with compiling to .zo.

Thanks,
Matthew

