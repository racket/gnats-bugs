From nobody@champlain.ccs.neu.edu  Tue Jun  4 11:51:06 2002
Received: (from nobody@localhost)
	by champlain.ccs.neu.edu (8.9.3/8.8.7) id LAA11504
	for bugs@plt-scheme.org; Tue, 4 Jun 2002 11:51:06 -0400
Message-Id: <200206041551.LAA11504@champlain.ccs.neu.edu>
Date: Tue, 4 Jun 2002 11:51:06 -0400
From: r.l.kooima@larc.nasa.gov
Reply-To:
To: bugs@plt-scheme.org
Subject: XP VS.Net extension riggamarole

>Number:         5452
>Category:       mzc
>Synopsis:       XP VS.Net extension riggamarole
>Confidential:   no
>Severity:       non-critical
>Priority:       low
>Responsible:    mflatt
>State:          closed
>Class:          support
>Submitter-Id:   unknown
>Arrival-Date:   Tue Jun 04 12:00:00 EDT 2002
>Closed-Date:    Wed Aug 21 15:10:26 EDT 2002
>Last-Modified:  Wed Aug 21 15:10:26 EDT 2002
>Originator:     Robert Kooima
>Release:        200alpha19
>Organization:
plt
>Environment:
windows-xp
>Description:
I find that building extensions "by hand" using Visual Studio .Net results in an unusable .dll.  A workaround is necessary.

To fix, I add mzdyn.c directly to the project, and include a .def file listing all 5 exported symbols, making sure that this file is referenced as the Module Definitions File of the linker properties.

EXPORTS
scheme_reload
scheme_initialize
scheme_module_name
scheme_extension_table
scheme_initialize_internal

Only then does the extension load and work properly.  Whether the problem lies in how mydyn.obj is linked in the .dll, or how it is compiled it the first place, I don't know.  I'm no expert on Windows linking.

I recognize I should be using mzc to build extensions, but this complicates the build of a large "solution", and I've never had trouble with VS6.

Have I missed something?

>How-To-Repeat:
Create a .dll project for an extension.  Add plt\lib\msvc to the library directory and mzdyn.obj to the dependancies.  Build.

> (load-extension "foo.dll")

load-extension: "foo.dll" is not an extension (The specified procedure could not be found.; errno=127)

>Fix:

>Release-Note:

>Audit-Trail:

From: "Paul Steckler" <steck@ccs.neu.edu>
To: <r.l.kooima@larc.nasa.gov>, <bugs@plt-scheme.org>
Cc:  
Subject: RE: all/5452: XP VS.Net extension riggamarole
Date: Tue, 4 Jun 2002 12:12:07 -0400

 > I find that building extensions "by hand" using Visual Studio .Net
 > results in an unusable .dll.  A workaround is necessary.
 > ...
 > Have I missed something?
 
 We haven't really tried to handle VS.net yet.  I found that building
 MzScheme built OK, but MrEd failed on startup.
 
 I expect we'll get to VS.net sometime post-v200.
 
 -- Paul
 
 

From: Matthew Flatt <mflatt@cs.utah.edu>
To: r.l.kooima@larc.nasa.gov
Cc: bugs@plt-scheme.org
Subject: Re: all/5452: XP VS.Net extension riggamarole
Date: Thu, 6 Jun 2002 10:13:54 -0600 (MDT)

 At Tue, 4 Jun 2002 11:51:06 -0400, r.l.kooima@larc.nasa.gov wrote:
 > I find that building extensions "by hand" using Visual Studio .Net results in 
 > an unusable .dll.  A workaround is necessary.
 > 
 > To fix, I add mzdyn.c directly to the project, and include a .def file listing 
 > all 5 exported symbols, making sure that this file is referenced as the Module 
 > Definitions File of the linker properties.
 > 
 > EXPORTS
 > scheme_reload
 > scheme_initialize
 > scheme_module_name
 > scheme_extension_table
 > scheme_initialize_internal
 > 
 > Only then does the extension load and work properly.  Whether the problem lies 
 > in how mydyn.obj is linked in the .dll, or how it is compiled it the first 
 > place, I don't know.  I'm no expert on Windows linking.
 > 
 > I recognize I should be using mzc to build extensions, but this complicates the 
 > build of a large "solution", and I've never had trouble with VS6.
 > 
 > Have I missed something?
 
 The exports file is the same thing that mzc does. I don't think you
 need scheme_extension_table in that list, though.
 
 FWIW, plt/src/mzscheme/dynsrc/mzdyn.def generates the .exp file that
 mzc uses.
 
 Matthew
 
Responsible-Changed-From-To: steck->mflatt
Responsible-Changed-By: mflatt
Responsible-Changed-When: Tue Jun 11 14:08:48 2002
Responsible-Changed-Why:
    mz
State-Changed-From-To: open->analyzed
State-Changed-By: mflatt
State-Changed-When: Tue Jun 11 14:08:48 2002
State-Changed-Why:
    could be better documented
State-Changed-From-To: analyzed->closed
State-Changed-By: mflatt
State-Changed-When: Wed Aug 21 15:10:26 2002
State-Changed-Why:
    using compiler tools directly is painful, but
    there's not much we can do other than provide
    mzc
>Unformatted:

