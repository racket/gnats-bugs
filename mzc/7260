From apache@plt-scheme.org Thu Feb 24 21:47:16 2005
Received: from champlain.ccs.neu.edu (champlain.ccs.neu.edu [127.0.0.1])
	by champlain.ccs.neu.edu (8.12.10/8.12.10) with ESMTP id j1P2lGnN007858
	for <bugs@plt-scheme.org>; Thu, 24 Feb 2005 21:47:16 -0500
Message-Id: <200502250247.j1P2lGWu007856@champlain.ccs.neu.edu>
Date: Thu, 24 Feb 2005 21:47:16 -0500
From: newton@mit.edu
To: bugs@plt-scheme.org
Subject: fluid-let seems broken for native code compilation

>Number:         7260
>Category:       mzc
>Synopsis:       fluid-let seems broken for native code compilation
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       critical
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Thu Feb 24 21:50:00 -0500 2005
>Last-Modified:  Sat Feb 26 23:04:19 -0500 2005
>Originator:     Ryan Newton
>Organization:
plt
>Submitter-Id:   unknown
>Release:        209
>Environment:
linux-redhat
>Description:
The following expressions work fine with the v 209 interpreter or byte-code compiler:

  (define a 1)
  (fluid-let ((a (lambda () 2))) 3)

BUT if I put them in a file and compile to native code with:

 mzc -v err.ss

I receive thefollowing error.  I get the same response from my Linux PC and my Mac OS laptop.

MzScheme compiler (mzc) version 209, Copyright (c) 2004 PLT Scheme, Inc.
"err.ss":
 Reading...  expanding...
      [cpu: 5ms, real: 5ms, gc: 0ms]
 pre-processing and scanning for errors
      [cpu: 0ms, real: 1ms, gc: 0ms]
 transforming to a-normal form
      [cpu: 1ms, real: 0ms, gc: 0ms]
 determining known bindings
      [cpu: 0ms, real: 0ms, gc: 0ms]
 transforming to b-normal form, analyzing, and inlining
      [cpu: 48ms, real: 49ms, gc: 46ms]
 finding static procedures
      [cpu: 1ms, real: 1ms, gc: 0ms]
 #f [#f,#f]: Warning: found static procedure
 "/home/newton/RegionStreams/compiler/src/plt/err.ss" [6,15]: Warning: found static procedure
 closure conversion and explicit control transformation
      [cpu: 0ms, real: 0ms, gc: 0ms]
 closure->vehicle mapping
      [cpu: 0ms, real: 0ms, gc: 0ms]
 choosing data representations
      [cpu: 1ms, real: 0ms, gc: 0ms]
 transforming to Virtual Machine form
      [cpu: 1ms, real: 1ms, gc: 0ms]
 optimizing Virtual Machine code
      [cpu: 0ms, real: 0ms, gc: 0ms]
 [emitting ANSI C to "/usr/tmp/mzcTMPerr.c"]
 [?,?]: INTERNAL ERROR: vm->c:convert-type-definition: #f not a valid representation
 please report the bug at http://www.cs.rice.edu/CS/PLT/Bugs/
  (or, as a last resort, send mail to plt-bugs@cs.rice.edu)
  and include a transcript in verbose mode
Errors encountered.  Compilation aborted.



Thank you!
 -Ryan

>How-To-Repeat:
>Fix:
>Audit-Trail:
Responsible changed from "nobody" to "mflatt" by mflatt at Sat, 26 Feb 2005 23:04:19 -0500
Reason>>> mzc

State changed from "open" to "closed" by mflatt at Sat, 26 Feb 2005 23:04:19 -0500
Reason>>> Fixed in CVS for v299. The bug was a classic sort of error:
a local-variable optimization that didn't check whether
the variable is mutated.

To fix v209, around line 372 of
"plt/collects/compiler/private/lift.ss",
change

  (top-level-varref/bind-from-lift? val))

to 

  (top-level-varref/bind-from-lift? val)
  (not (binding-mutable? 
        (get-annotation 
         (caar (zodiac:let-values-form-vars ast))))))

Thanks,
Matthew

