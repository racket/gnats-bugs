From john@john.hmt.yamaguchi-u.ac.jp  Sat Jun 16 03:11:26 2001
Return-Path: <john@john.hmt.yamaguchi-u.ac.jp>
Received: from localhost (john.hmt.yamaguchi-u.ac.jp [133.62.197.6])
	by cs.rice.edu (Postfix) with ESMTP id CC76417C4
	for <plt-gnats>; Sat, 16 Jun 2001 03:11:24 -0500 (CDT)
Message-Id: <20010616081124.CC76417C4@cs.rice.edu>
Date: Sat, 16 Jun 2001 03:11:24 -0500 (CDT)
From: john@john.hmt.yamaguchi-u.ac.jp
To: plt-gnats@cs.rice.edu
Subject: Source code works, native-code compilation causes segmentation fault & core dump.

>Number:         1981
>Category:       mzc
>Synopsis:       Source code works, native-code compilation causes segmentation fault & core dump.
>Confidential:   no
>Severity:       critical
>Priority:       high
>Responsible:    mflatt
>State:          closed
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Sat Jun 16 08:15:09 GMT 2001
>Last-Modified:  Thu Jul 12 17:31:23 CDT 2001
>Originator:     John Phillips
>Organization:
titan
>Release:        103
>Environment:
unix (i386-linux) (get-display-depth) = 16
Tools: ("syncheck" "project-manager")
Docs Installed:
("help" "mzscheme" "r5rs" "icons" "drscheme" "teachpack" "misclib" "mred" "beginning" "intermediate" "advanced")
Collections:
(("/home2/src/plt/collects" ("browser" "afm" "compiler" "drscheme" "graphics" "stepper" "hierlist" "icons" "make" "mzlib" "mred" "games" "mzscheme" "net" "help" "zodiac" "userspce" "dynext" "launcher" "drscheme-jr" "errortrace" "framework" "slibinit" "xml" "htdp" "setup" "defaults" "guserspce" "stepper-graphical" "doc")))
>Description:
I have a rather strange problem with mzc native code compilation. My
program works fine with source code loaded into Drscheme. When I compile
the core function of this program to native code, it causes Drscheme to
crash after running for a while, e.g.


> (time (parse '(yn yr dechrau gorwedd >ai hi yn llonydd ar glan yr afon qcoma) '(in the beginning she lie +ed quiet +ly on the river bank)))
(53.61107546288403)cpu time: 2100 real time: 2180 gc time: 180
(2663 . 47.21677530518707)
> (time (parse '(yn yr dechrau gorwedd >ai hi yn llonydd ar glan yr afon qcoma) '(in the beginning she lie +ed quiet +ly on the river bank)))
(53.61107546288403)cpu time: 2270 real time: 2271 gc time: 360
(2663 . 47.21677530518707)
> (time (parse '(yn yr dechrau gorwedd >ai hi yn llonydd ar glan yr afon qcoma) '(in the beginning she lie +ed quiet +ly on the river bank)))
(53.61107546288403)cpu time: 2250 real time: 2250 gc time: 390
(2663 . 47.21677530518707)
> (time (parse '(yn yr dechrau gorwedd >ai hi yn llonydd ar glan yr afon qcoma) '(in the beginning she lie +ed quiet +ly on the river bank)))
(53.61107546288403)cpu time: 2100 real time: 2094 gc time: 190
(2663 . 47.21677530518707)
> 

The thirteenth time:

    Segmentation fault            drscheme parser (core dumped)

The function "parse" does synchronised parsing of a sentence & its
translation using a chart parser. It returns the size of the chart and
the score of the best parse, putting the result of parsing in a global
variable.

Giving it a short sentence several times causes a crash, as does giving
it a long (i.e. time-consuming) sentence just once. The time at which
the crash occurs appears random - it doesn't always crash after 13 times
with the example above, though a sentence which takes longer than about
half a minute to parse crashes every time. If I load the program and
immediately run it over a file containing sentence pairs (i.e. running in
exactly the same context), the result is different each time - sometimes
it crashes immediately, sometimes after parsing a few sentences.
As far as I can see it doesn't crash from the same part of my program
each time.

Things which cause a crash with the .so file parse as expected with
its .ss file. I have been using the .ss file now for several months
and have run it on a large corpus of sentences (about a million words)
without problems.

The file which is causing the problem contains one large function with
many internal definitions. Removing the enclosing function and compiling
the internal definitions as separate top-level functions does not cure
the problem. I could try compiling one function as a time but they are a
lot of small functions and the problem is probably not due to a specific
function anyway I suppose.

Any ideas?

>How-To-Repeat:
I haven't the slightest idea I'm afraid
>Fix:
>Audit-Trail:

From: Matthew Flatt <mflatt@cs.utah.edu>
To: john@john.hmt.yamaguchi-u.ac.jp
Cc: plt-gnats@cs.rice.edu
Subject: Re: all/1981: Source code works, native-code compilation causes segmentation fault & core dump.
Date: Sat, 16 Jun 2001 08:19:39 -0600 (MDT)

 Quoting john@john.hmt.yamaguchi-u.ac.jp:
 > I have a rather strange problem with mzc native code compilation. My
 > program works fine with source code loaded into Drscheme. When I compile
 > the core function of this program to native code, it causes Drscheme to
 > crash after running for a while, e.g.
 
 Bug in MzScheme's support for the compiler, I think. We fixed a bug in
 103 that affects tail calls that have more than 5 arguments. It's a
 GC-related bug, so that's why you might have to run a program for a
 while to see a crash.
 
 One solution is to upgrade to 103.something (I forget the "something"
 number), which is available via anonymous CVS. See
 
   http://www.cs.utah.edu/plt/anoncvs/
 
 for details.
 
 Thanks for the report,
 Matthew

Responsible-Changed-From-To: steck->mflatt
Responsible-Changed-By: mflatt
Responsible-Changed-When: Thu Jul 12 17:31:17 2001
Responsible-Changed-Why:

State-Changed-From-To: open-closed
State-Changed-By: mflatt
State-Changed-When: Thu Jul 12 17:31:21 2001
State-Changed-Why:


 
>Unformatted:
