From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Fri Mar 20 00:52:40 2009
Received: from mail-qy0-f130.google.com (mail-qy0-f130.google.com [209.85.221.130])
	by champlain.ccs.neu.edu (8.14.2/8.14.2) with ESMTP id n2K4qSUI020649
	for <bugs@bugs.plt-scheme.org>; Fri, 20 Mar 2009 00:52:28 -0400
Message-Id: <200903200452.n2K4q89b020638@champlain.ccs.neu.edu>
Date: Fri, 20 Mar 2009 00:52:08 -0400
From: pnkfelix@ccs.neu.edu
To: bugs@plt-scheme.org
Subject: mzc cannot handle embedded images

>Number:         10142
>Category:       mzc
>Synopsis:       mzc cannot handle embedded images
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       non-critical
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Fri Mar 20 00:56:01 -0400 2009
>Last-Modified:  Sat May 09 14:17:57 -0400 2009
>Originator:     Felix S Klock II
>Organization:
plt
>Submitter-Id:   unknown
>Release:        4.1.4
>Environment:
macosx "Darwin Hercules.local 9.6.0 Darwin Kernel Version 9.6.0: Mon Nov 24 17:39:01 PST 2008; root:xnu-1228.9.59~1/RELEASE_PPC Power Macintosh powerpc" (ppc-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 213365256

Collections:
(("/Users/pnkfelix/Library/PLT Scheme/4.1.4/collects" non-existent-path) ("/Applications/PLT Scheme v4.1.4/collects" "2htdp" "afm" "algol60" "browser" "combinator-parser" "compiler" "config" "defaults" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "help" "hierlist" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profj" "r5rs" "r6rs" "readline" "redex" "rnrs" "s-exp" "scheme" "scribble" "scribblings" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tex2page" "texpict" "trace" "typed" "typed-scheme" "version" "web-server" "wxme" "xml"))
Computer Language: (("Module") (#(#t write mixed-fraction-e #f #t debug) (default) #() "#lang scheme\n" #t))
>Description:
I have some code with embedded images.  I wanted to compile the code to .zo's 
(to see if that would speed up some load time issues I was encountering)

I got this message from my mzc invocation:

write: cannot marshal constant that is embedded in compiled code: #(struct:object:cache-image% ...)

 === context ===
/Applications/PLT Scheme v4.1.4/collects/compiler/cm.ss:186:6
/Applications/PLT Scheme v4.1.4/collects/scheme/private/more-scheme.ss:155:2: call-with-break-parameterization
/Applications/PLT Scheme v4.1.4/collects/compiler/cm.ss:206:0: compile-zo
/Applications/PLT Scheme v4.1.4/collects/compiler/cm.ss:240:2: do-check
/Applications/PLT Scheme v4.1.4/collects/compiler/cm.ss:287:4
for-loop


I assume that this means that whatever trickery PLT uses to make images appear 
as literal constants is not universally handled by all of its tools.

However, I could not find any mention of such a limitation in the documentation
for mzc.  The docuemntation for compiler/zo-marshal and the zo-marshal procedure
mentions that modules and  syntax objects with ``top'' are not supported by that
procedure, but I do not see why an image snip would be considered either of
those.  (I searched for embed, marshal, and image in the search box, and also 
skimmed the table of contents and read sections 1 and 2 before giving up.
If there are better words to look for, then the error message above should use
them.)

My preferred outcome would be for mzc to support compiling files with embedded
images (and snips in general, I suppose), but if that is not going to happen,
then that limitation should be documented in the mzc guide.
>How-To-Repeat:
1.) From DrScheme's REPL:

Welcome to DrScheme, version 4.1.4 [3m].
Language: Module; memory limit: 1024 megabytes.
> (require htdp/image)
> (circle 30 'solid 'red)

2.) Copy and paste resulting circle snip into Definitons window.

3.) Save Definitions as "embed.ss"

4.) From a command line terminal, do:

% mzc embed.ss

5.) Observe error report.
>Fix:
