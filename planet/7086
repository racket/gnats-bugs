From apache@plt-scheme.org Mon Oct 18 19:55:48 2004
Received: from champlain.ccs.neu.edu (champlain.ccs.neu.edu [127.0.0.1])
	by champlain.ccs.neu.edu (8.12.10/8.12.10) with ESMTP id i9INtlnA010092
	for <bugs@plt-scheme.org>; Mon, 18 Oct 2004 19:55:47 -0400
Message-Id: <200410182355.i9INtlbY010090@champlain.ccs.neu.edu>
Date: Mon, 18 Oct 2004 19:55:47 -0400
From: jpalm@ccs.neu.edu
To: bugs@plt-scheme.org
Subject: contract broken

>Number:         7086
>Category:       planet
>Synopsis:       contract broken
>Class:          sw-bug
>Responsible:    jacobm
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Mon Oct 18 20:00:00 -0400 2004
>Last-Modified:  Wed Feb 09 10:12:21 -0500 2005
>Originator:     Jeffrey Palm
>Organization:
plt
>Submitter-Id:   unknown
>Release:        208
>Environment:
windows-2000
>Description:
I get the following message whenever I try to 'Run' and I receieve the same message for just loading a file.  The message is:

  hash-table-get: expects type <hash-table> as 1st argument, given:
  false; other arguments were: 'test-coverage-point1549

I've reinstalled dr scheme and I still get the same message.  I can't get a working version going.

This started after running the following program using John's itunes PLaneT pack.

(module itunes mzscheme 

  (require (planet "parse-playlist.ss" ("clements" "iTunes-helper.plt" 1 0))

           (planet "select-playlist.ss" ("clements" "iTunes-helper.plt" 1 0))

           (lib "contract.ss"))



  (define (get-itunes-list path)

    (music-db-records (parse-playlist path)))

  

  (provide/contract 

   (get-itunes-list (string? . -> . list?)))

  )

;;;  ----------------------------------- and this file

;; Language: Intermediate 

;; Author: MF 

;; Date: 10.17.2004

;; Teachpack: itunes.scm (on-line)



;; get-itunes-list : String -> (Listof Record)



;; A Record is (list ... ... ... ... ... ... ...)

;; Interpretation: list of strings and numbers and booleans that describe a song



;; Record -> String u false 

(define (r-artist r) (second r))

;; Record -> String u false 

(define (r-title r) (fourth r))

;; Record -> String 

(define (r-song r) (first r))



;; DO: -------------------------------------------------------------------------

;; 1. Save your playlist in iTunes via File | Export 

;; 2. Modify the following HOME variable to reflect where you changed this 

(define HOME "C:\\Library.txt")



;; 3. Run this program and watch in awe as it spits out your stuff, 

;; and possibly some of John's error messages 



;; Program ---------------------------------------------------------------------



(define-struct cd (artist title songs))

;; CD  = (make-cd String String Songs)

;; Lib = (Listof CD)

;; Songs = (Listof String)



;; String -> Lib

(define (main path)

  (itunes->lib (get-itunes-list path)))



;; MusicDB -> Lib 

(define (itunes->lib records) (list->lib records))



;; (Listof Record) -> Lib

;; convert list of Record into a Lib, partition by partition 

;; generative recursion: scan list and partition 

(define (list->lib l)

  (cond

    [(empty? l) empty]

    [else

     (cond

       [(boolean? (r-artist (first l))) (list->lib (rest l))]

       [else 

        (local ((define artist (r-artist (first l)))

                (define title  (r-title (first l)))

                (define songs  (same-artist-title artist title l))

                (define more   (remove-artist-title artist title l)))

          (cons (make-cd artist title songs) (list->lib more)))])]))



;; String String List-of-cds -> Songs

;; collect the list of song titles from the 

;; leading records with same artist and title 

(define (same-artist-title artist title l)

  (cond

    [(empty? l) empty]

    [else

     (local ((define r (first l)))

       (cond 

         [(boolean? (r-artist r)) empty]

         [(and (string=? (r-artist r) artist) (string=? (r-title r) title))

          (cons (r-song r) (same-artist-title artist title (rest l)))]

         [else empty]))]))



;; String String List-of-cds -> List-of-cds 

;; remove the leading records with same artist and title 

(define (remove-artist-title artist title l)           

  (cond

    [(empty? l) empty]

    [else

     (local ((define r (first l)))

       (cond

         [(boolean? (r-artist r)) l]

         [(and (string=? (r-artist r) artist) (string=? (r-title r) title))

          (remove-artist-title artist title (rest l))]

         [else l]))]))



;; RUN: ------------------------------------------------------------------------

(main HOME)
>How-To-Repeat:
>Fix:
>Audit-Trail:
From: Robby Findler <robby@cs.uchicago.edu>
To: jpalm@ccs.neu.edu, bugs@plt-scheme.org
Cc: nobody@plt-scheme.org, eli@plt-scheme.org, matthias@ccs.neu.edu,
        sk@cs.brown.edu, mflatt@cs.utah.edu, laminatedwastrel@brinckerhoff.org,
        gregp@ccs.neu.edu, meunier@ccs.neu.edu, sowens@cs.utah.edu,
        kathyg@cs.utah.edu, awick@cs.utah.edu, goldberg@cs.utah.edu,
        dskippy@ccs.neu.edu, jacobm@cs.uchicago.edu
Subject: Re: all/7086: contract broken
Date: Mon, 18 Oct 2004 19:25:32 -0500

 The problem is that there are some .zo files that have not been
 compiled. I believe that this is a problem with PLaneT.
 
 If you can compile the .zo files yourself (perhaps by running "Setup
 PLT"?) the error should go away.
 
 Robby

Responsible changed from "nobody" to "jacobm" by eli at Sat, 22 Jan 2005 00:06:50 -0500
Reason>>> planet


State changed from "open" to "closed" by jacobm at Wed, 09 Feb 2005 10:12:21 -0500
Reason>>> The problem was a mismatch between the test suite coverage
tool and PLaneT's habit of not compiling packages. PLaneT
now compiles packages, and the test suite coverage tool has
been changed to at least give a better error message,
starting with 299.30 this shouldn't be a problem anymore.

