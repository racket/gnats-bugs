From apache@plt-scheme.org Thu Mar  9 12:49:30 2006
Received: from champlain.ccs.neu.edu (champlain.ccs.neu.edu [127.0.0.1])
	by champlain.ccs.neu.edu (8.12.10/8.12.10) with ESMTP id k29HnRY1032390
	for <bugs@plt-scheme.org>; Thu, 9 Mar 2006 12:49:27 -0500
Message-Id: <200603091749.k29HnRvD032388@champlain.ccs.neu.edu>
Date: Thu, 9 Mar 2006 12:49:27 -0500
From: dalev@ccs.neu.edu
To: bugs@plt-scheme.org
Subject: planet installation behaves differently than manually using setup-plt

>Number:         7946
>Category:       planet
>Synopsis:       planet installation behaves differently than manually using setup-plt
>Class:          sw-bug
>Responsible:    jacobm
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Thu Mar 09 12:50:00 -0500 2006
>Last-Modified:  Fri May 02 22:56:16 -0400 2008
>Originator:     Dale Vaillancourt
>Organization:
plt
>Submitter-Id:   unknown
>Release:        301.9-svn8mar2006
>Environment:
macosx "Darwin mobiledv.local 8.5.0 Darwin Kernel Version 8.5.0: Sun Jan 22 10:38:46 PST 2006; root:xnu-792.6.61.obj~1/RELEASE_PPC Power Macintosh powerpc" (ppc-macosx) (get-display-depth) = 32
Docs Installed:
(#<path:/Users/dalev/Software/plt/collects/doc/r5rs> #<path:/Users/dalev/Software/plt/collects/doc/mzscheme> #<path:/Users/dalev/Software/plt/collects/doc/mred> #<path:/Users/dalev/Software/plt/collects/doc/help> #<path:/Users/dalev/Software/plt/collects/doc/tour> #<path:/Users/dalev/Software/plt/collects/doc/drscheme> #<path:/Users/dalev/Software/plt/collects/doc/srfi> #<path:/Users/dalev/Software/plt/collects/doc/mzlib> #<path:/Users/dalev/Software/plt/collects/doc/misclib> #<path:/Users/dalev/Software/plt/collects/doc/mrlib> #<path:/Users/dalev/Software/plt/collects/doc/framework> #<path:/Users/dalev/Software/plt/collects/doc/foreign> #<path:/Users/dalev/Software/plt/collects/doc/mzc> #<path:/Users/dalev/Software/plt/collects/doc/tools> #<path:/Users/dalev/Software/plt/collects/doc/insidemz> #<path:/Users/dalev/Software/plt/collects/doc/web-server> #<path:/Users/dalev/Software/plt/collects/doc/swindle> #<path:/Users/dalev/Software/plt/collects/doc/plot> #<path:/Users/dalev/Software/plt/collects/doc/t-y-scheme> #<path:/Users/dalev/Library/PLT Scheme/planet/300/301.9/cache/dalev/acl2.plt/1/0/doc> #<path:/Users/dalev/Software/plt/collects/doc/tex2page> #<path:/Users/dalev/Software/plt/collects/doc/beginning> #<path:/Users/dalev/Software/plt/collects/doc/beginning-abbr> #<path:/Users/dalev/Software/plt/collects/doc/intermediate> #<path:/Users/dalev/Software/plt/collects/doc/intermediate-lambda> #<path:/Users/dalev/Software/plt/collects/doc/advanced> #<path:/Users/dalev/Software/plt/collects/doc/teachpack> #<path:/Users/dalev/Software/plt/collects/doc/profj-beginner> #<path:/Users/dalev/Software/plt/collects/doc/profj-intermediate> #<path:/Users/dalev/Software/plt/collects/doc/profj-advanced>)
Collections:
((#<path:/Users/dalev/Library/PLT Scheme/301.9/collects> (#<path:.DS_Store> #<path:alpha> #<path:control> #<path:dpl> #<path:fresh> #<path:infer> #<path:kanren> #<path:kanren-old> #<path:kanren.svn-imported> #<path:poplmark> #<path:proof> #<path:struct> #<path:unification>)) (#<path:/Users/dalev/Software/plt/collects> (#<path:.svn> #<path:afm> #<path:algol60> #<path:browser> #<path:compiler> #<path:defaults> #<path:doc> #<path:drscheme> #<path:dynext> #<path:embedded-gui> #<path:eopl> #<path:errortrace> #<path:ffi> #<path:finish-install> #<path:framework> #<path:frtime> #<path:games> #<path:graphics> #<path:guibuilder> #<path:handin-client> #<path:handin-server> #<path:help> #<path:hierlist> #<path:honu-module> #<path:htdch> #<path:htdp> #<path:html> #<path:icons> #<path:info-domain> #<path:lang> #<path:launcher> #<path:make> #<path:mred> #<path:mrflow> #<path:mrlib> #<path:mysterx> #<path:mzcom> #<path:mzlib> #<path:mzscheme> #<path:mztake> #<path:net> #<path:openssl> #<path:parser-tools> #<path:plai> #<path:planet> #<path:plot> #<path:preprocessor> #<path:profj> #<path:profjBoxes> #<path:profjWizard> #<path:r5rs> #<path:r6rs> #<path:readline> #<path:repos-time-stamp> #<path:setup> #<path:sgl> #<path:sirmail> #<path:skipper> #<path:slatex> #<path:slibinit> #<path:slideshow> #<path:srfi> #<path:srpersist> #<path:stepper> #<path:string-constants> #<path:swindle> #<path:syntax> #<path:syntax-color> #<path:test-suite> #<path:tests> #<path:tex2page> #<path:texpict> #<path:trace> #<path:version> #<path:waterworld> #<path:web-server> #<path:xelda> #<path:xml>)))
Human Language: english
Teachpack filenames: ()
Computer Language: (("Professional Languages" "(module ...)") (#6(#t write mixed-fraction-e #f #t debug) (default) #0()))
>Description:
I attempted to install a planet archive I created, and it gives a strange error:

mobiledv:~/Projects/drscheme-acl2/planet-bug dalev$ planet -f acl2.plt dalev 1 0 
cadr: expects argument of type <cadrable value>; given #f
setup-plt: Error during Compiling .zos for ACL2 Teachpacks (/Users/dalev/Library/PLT Scheme/planet/300/301.9/cache/dalev/acl2.plt/1/0/teachpacks)
setup-plt:   cadr: expects argument of type <cadrable value>; given #f

If I install the collection into my plt collects, by: 
1. changing the two occurrences of (planet "acl2.scm" ("dalev" "acl2.plt" 1 0)) to
   (lib "acl2.scm" "acl2")

2. Move the files into my user-specific collection path

3. Run setup-plt -l acl2
then the installation finishes normally.
>How-To-Repeat:
There are two ways to reproduce the bug.

METHOD 1:
Unpack this tarball in your favorite directory:
 http://www.ccs.neu.edu/home/dalev/install-bug/acl2.tar.gz
It will expand into a directory named 'acl2'.

Then, create a PLaneT archive:
 planet -c acl2

Try to install it:
 planet -f acl2.plt dalev 1 0

You'll see the error message I quoted in the Description.
(end METHOD 1)

METHOD 2:
Unpack the same tarball into your favorite directory.

Create a development link:
 planet -a dalev acl2.plt 1 0 <your favorite directory>/acl2

Start DrScheme and switch to the (module ...) language.

In the interactions window, evaluate:
 > (require (planet "acl2.scm" ("dalev" "acl2.plt" 1 0)))

You'll see the error message
  cadr: expects argument of type <cadrable value>; given #f

Now, evaluate this expression a second time.  Same error.

Evaluate the expression a third time.  No error.  (!?)
(end METHOD 2)


If you wish to verify that manually using setup-plt behaves normally, then move the distribution into your personal PLT collects.  You'll need to make two modifications:

In acl2/private/acl2-language-unit.scm:
- change (planet "acl2.scm" ...) on line 27 to (lib "acl2.scm" "acl2")

In acl2/private/acl2-module-begin.scm:
- make the same change on line 12.
>Fix:
>Audit-Trail:
From: Robby Findler <robby@cs.uchicago.edu>
To: dalev@ccs.neu.edu, bugs@plt-scheme.org
Cc: matthias@ccs.neu.edu, jacobm@cs.uchicago.edu
Subject: Re: all/7946: planet installation behaves differently than manually using setup-plt
Date: Thu, 9 Mar 2006 11:56:00 -0600

 Thanks for the bug report. It is useful to see what is going on and
 that you're having problems.
 
 Still, I think we should have slightly higher standards for internal
 bug reports than this. In particular, this bug report doesn't make it
 clear that the bug is in PLaneT and not in your own code (just from the
 description, it could easily be a bug in your own code).
 
 In this case, to make it clear, the best thing is to produce a trimmed
 down version of the acl2 code to the point where it contains only
 generic and obvious legtimate stuff. You (Dale) are the best person to
 do this job, in any case, I'd guess. Start by deleting files and
 re-packaging until you get to the point where deleting something makes
 the problem go away. It's kind of a search process (and a useful
 technique for you to develop, regardless).
 
 Robby
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Robby Findler <robby@cs.uchicago.edu>
Cc: dalev@ccs.neu.edu, jacobm@cs.uchicago.edu, bugs@plt-scheme.org
Subject: Re: all/7946: planet installation behaves differently than manually using setup-plt
Date: Thu, 9 Mar 2006 13:00:56 -0500

 On Mar 9, 2006, at 12:56 PM, Robby Findler wrote:
 
 > Thanks for the bug report. It is useful to see what is going on and
 > that you're having problems.
 >
 > Still, I think we should have slightly higher standards for internal
 > bug reports than this. In particular, this bug report doesn't make it
 > clear that the bug is in PLaneT and not in your own code (just from the
 > description, it could easily be a bug in your own code).
 
 I agree with this part of your message.
 
 > In this case, to make it clear, the best thing is to produce a trimmed
 > down version of the acl2 code to the point where it contains only
 > generic and obvious legtimate stuff. You (Dale) are the best person to
 > do this job, in any case, I'd guess. Start by deleting files and
 > re-packaging until you get to the point where deleting something makes
 > the problem go away. It's kind of a search process (and a useful
 > technique for you to develop, regardless).
 
 For this second part you're making the assumption that Dale hasn't
 spent any time to whittle this down. So far he has lost a day and
 a night on it looking for a way to show you a small sample of 
 problematic
 code.
 
 
From: Robby Findler <robby@cs.uchicago.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: dalev@ccs.neu.edu, jacobm@cs.uchicago.edu, bugs@plt-scheme.org
Subject: Re: all/7946: planet installation behaves differently than manually using setup-plt
Date: Thu, 9 Mar 2006 12:02:54 -0600

 At Thu, 9 Mar 2006 13:00:56 -0500, Matthias Felleisen wrote:
 > > In this case, to make it clear, the best thing is to produce a trimmed
 > > down version of the acl2 code to the point where it contains only
 > > generic and obvious legtimate stuff. You (Dale) are the best person to
 > > do this job, in any case, I'd guess. Start by deleting files and
 > > re-packaging until you get to the point where deleting something makes
 > > the problem go away. It's kind of a search process (and a useful
 > > technique for you to develop, regardless).
 > 
 > For this second part you're making the assumption that Dale hasn't
 > spent any time to whittle this down. So far he has lost a day and
 > a night on it looking for a way to show you a small sample of 
 > problematic
 > code.
 
 Okay, sorry for the assumption. Thanks for the effort!
 
 Robby
From: Dale Vaillancourt <dalev@ccs.neu.edu>
To: Robby Findler <robby@cs.uchicago.edu>
Cc: bugs@plt-scheme.org, matthias@ccs.neu.edu, jacobm@cs.uchicago.edu
Subject: Re: all/7946: planet installation behaves differently than manually using setup-plt
Date: Thu, 9 Mar 2006 13:11:06 -0500

 I understand that it's not a great bug report, and I have already  
 spent a few unsuccessful hours trying to build a smaller example.
 
 Note though, that toward the end of the Steps to Reproduce I explain  
 how to get setup-plt to build my collection.  This seems to indicate  
 that setup-plt is behaving differently when PLaneT invokes it.  In  
 particular, the presence of (planet "acl2.scm" ...) (rather than (lib  
 "acl2.scm" "acl2")) appears to be at the root.
 
 I am continuing to try to build a smaller example, but I had thought  
 that this last bit of information would be somewhat helpful for you  
 in the meantime.
 
 Dale
 
 On Mar 9, 2006, at 12:56 PM, Robby Findler wrote:
 
 > Thanks for the bug report. It is useful to see what is going on and
 > that you're having problems.
 >
 > Still, I think we should have slightly higher standards for internal
 > bug reports than this. In particular, this bug report doesn't make it
 > clear that the bug is in PLaneT and not in your own code (just from  
 > the
 > description, it could easily be a bug in your own code).
 >
 > In this case, to make it clear, the best thing is to produce a trimmed
 > down version of the acl2 code to the point where it contains only
 > generic and obvious legtimate stuff. You (Dale) are the best person to
 > do this job, in any case, I'd guess. Start by deleting files and
 > re-packaging until you get to the point where deleting something makes
 > the problem go away. It's kind of a search process (and a useful
 > technique for you to develop, regardless).
 >
 > Robby
 
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Dale Vaillancourt <dalev@ccs.neu.edu>
Cc: Robby Findler <robby@cs.uchicago.edu>, jacobm@cs.uchicago.edu,
        bugs@plt-scheme.org
Subject: Re: all/7946: planet installation behaves differently than manually using setup-plt
Date: Thu, 9 Mar 2006 13:40:25 -0500

 1. Perhaps this is a situation where we have to sandwich the bug with 
 knowledge from both sides.
 
 2. I am looking forward to figuring out whether a contract could have 
 prevented or pinpointed the car of cdr bug.
 
 -- Matthias
 
From: Robby Findler <robby@cs.uchicago.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: Dale Vaillancourt <dalev@ccs.neu.edu>, jacobm@cs.uchicago.edu,
        bugs@plt-scheme.org
Subject: Re: all/7946: planet installation behaves differently than manually using setup-plt
Date: Thu, 9 Mar 2006 13:26:58 -0600

 At Thu, 9 Mar 2006 13:40:25 -0500, Matthias Felleisen wrote:
 > 1. Perhaps this is a situation where we have to sandwich the bug with 
 > knowledge from both sides.
 
 Makes sense.
 
 > 2. I am looking forward to figuring out whether a contract could have 
 > prevented or pinpointed the car of cdr bug.
 
 I consider this to be a contract violation (but not as precise as one
 might have liked). :)
 
 Robby
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Robby Findler <robby@cs.uchicago.edu>
Cc: jacobm@cs.uchicago.edu, Dale Vaillancourt <dalev@ccs.neu.edu>,
        bugs@plt-scheme.org
Subject: Re: all/7946: planet installation behaves differently than manually using setup-plt
Date: Thu, 9 Mar 2006 14:35:21 -0500

 On Mar 9, 2006, at 2:26 PM, Robby Findler wrote:
 
 >> 2. I am looking forward to figuring out whether a contract could have
 >> prevented or pinpointed the car of cdr bug.
 >
 > I consider this to be a contract violation (but not as precise as one
 > might have liked). :)
 
 Correct. I should have written "a more constraining contract"
 
From: Dale Vaillancourt <dalev@ccs.neu.edu>
To: Robby Findler <robby@cs.uchicago.edu>
Cc: Matthias Felleisen <matthias@ccs.neu.edu>, jacobm@cs.uchicago.edu,
        bugs@plt-scheme.org
Subject: Re: all/7946: planet installation behaves differently than manually using setup-plt
Date: Thu, 9 Mar 2006 17:09:30 -0500

 I have finally managed to condense the example down to about 20  
 lines, and the trigger is now an invocation of mzc rather than planet  
 (it still involves planet though).  I apologize for the mess that I  
 sent this morning.
 
 Bug Summary:
 The situation is that I have a module based language, and I would  
 like to distribute it with PLaneT.  This language needs to have a  
 custom #%module-begin that requires itself for syntax, and so the  
 code to which that expands uses a planet path:
 
    (define-syntax (acl2-module-begin stx)
      (syntax-case stx ()
        [(_ forms ...)
         #`(#%plain-module-begin
            (require-for-syntax
             #,(datum->syntax-object stx
                 '(planet "language.scm" ("dalev" "acl2.plt" 1 0))
                 ;'(lib "language.scm" "acl2")
                 ))
            forms ...)]))
 
 But I can neither execute in DrScheme nor byte compile a client  
 module whose initial import is my language.  However, if I take it  
 out of PLaneT and just drop it into my PLT collects, the client  
 module builds normally.  Details follow.
 
 To reproduce behavior:
 1. Unpack
      http://www.ccs.neu.edu/home/dalev/install-bug/acl2.tar.gz
     into any old directory.
 2. Set up a planet development link to it:
     planet -a dalev acl2.plt 1 0 <any old directory>/acl2
 3. Within the directory, execute
     mzc --zo client.scm
 
 You'll see an error and a trace (which I've pasted at the bottom of  
 this message).  Note that you can also see the error message if you  
 load client.scm into DrS and Run it in the module language.  But then  
 you don't get to see the trace that mzc produces.
 
 To verify that mzc builds client.scm when planet isn't used:
 1. Remove the development link from above.
     planet -u dalev acl2.plt 1 0
 
 2. Move the acl2 directory into your PLT collects.
 
 3. Change module-begin.scm:  on line 15, instead of
      '(planet "language.scm" ("dalev" "acl2.plt" 1 0))
     use
       '(lib "language.scm" "acl2")
 
 4. Execute
      mzc --zo client.scm
 
 No errors occur now.
 
 -Dale
 
 Error message from above:
 
 mobiledv:~/Projects/drscheme-acl2/planet-bug/acl2 dalev$ mzc --zo  
 client.scm
 mzc version 301.9, Copyright (c) 2004-2006 PLT Scheme Inc.
 cadr: expects argument of type <cadrable value>; given #f
 
 === context ===
 /Users/dalev/Software/plt/collects/syntax/moddep.ss:300:13: combine- 
 relative-elements
 /Users/dalev/Software/plt/collects/syntax/moddep.ss:384:2: collapse- 
 module-path-index
 /Users/dalev/Software/plt/collects/syntax/moddep.ss:384:2: collapse- 
 module-path-index
 /Users/dalev/Software/plt/collects/syntax/private/doctable.ss:7:2:  
 register-documentation
 /Users/dalev/Software/plt/collects/syntax/toplevel.ss:36:2: expand- 
 syntax-top-level-with-compile-time-evals
 /Users/dalev/Software/plt/collects/mzlib/compile.ss:45:25: loop
 /Users/dalev/Software/plt/collects/mzlib/compile.ss:44:23
 /Users/dalev/Software/plt/collects/mzlib/compile.ss:26:9
 /Users/dalev/Software/plt/collects/mzlib/compile.ss:10:4: compile-file
 /Users/dalev/Software/plt/collects/compiler/compiler-unit.ss:151:6:  
 compile-to-zo
 
From: Robby Findler <robby@cs.uchicago.edu>
To: Dale Vaillancourt <dalev@ccs.neu.edu>
Cc: Matthias Felleisen <matthias@ccs.neu.edu>, jacobm@cs.uchicago.edu,
        bugs@plt-scheme.org
Subject: Re: all/7946: planet installation behaves differently than manually using setup-plt
Date: Thu, 9 Mar 2006 16:14:21 -0600

 Ohhh.... very nice distillation of the problem.
 
 Thanks,
 Robby
 
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Dale Vaillancourt <dalev@ccs.neu.edu>, Matthew Flatt <mflatt@cs.utah.edu>
Cc: Jacob Matthews <jacobm@cs.uchicago.edu>,
        Robby Findler <robby@cs.uchicago.edu>, bugs@plt-scheme.org
Subject: Re: all/7946: planet installation behaves differently than manually using setup-plt
Date: Thu, 9 Mar 2006 17:18:29 -0500

 This looks like a Matthew bug to me. ?? -- Matthias
 	
 
 On Mar 9, 2006, at 5:09 PM, Dale Vaillancourt wrote:
 
 > I have finally managed to condense the example down to about 20 lines, 
 > and the trigger is now an invocation of mzc rather than planet (it 
 > still involves planet though).  I apologize for the mess that I sent 
 > this morning.
 >
 > Bug Summary:
 > The situation is that I have a module based language, and I would like 
 > to distribute it with PLaneT.  This language needs to have a custom 
 > #%module-begin that requires itself for syntax, and so the code to 
 > which that expands uses a planet path:
 >
 >   (define-syntax (acl2-module-begin stx)
 >     (syntax-case stx ()
 >       [(_ forms ...)
 >        #`(#%plain-module-begin
 >           (require-for-syntax
 >            #,(datum->syntax-object stx
 >                '(planet "language.scm" ("dalev" "acl2.plt" 1 0))
 >                ;'(lib "language.scm" "acl2")
 >                ))
 >           forms ...)]))
 >
 > But I can neither execute in DrScheme nor byte compile a client module 
 > whose initial import is my language.  However, if I take it out of 
 > PLaneT and just drop it into my PLT collects, the client module builds 
 > normally.  Details follow.
 >
 > To reproduce behavior:
 > 1. Unpack
 >     http://www.ccs.neu.edu/home/dalev/install-bug/acl2.tar.gz
 >    into any old directory.
 > 2. Set up a planet development link to it:
 >    planet -a dalev acl2.plt 1 0 <any old directory>/acl2
 > 3. Within the directory, execute
 >    mzc --zo client.scm
 >
 > You'll see an error and a trace (which I've pasted at the bottom of 
 > this message).  Note that you can also see the error message if you 
 > load client.scm into DrS and Run it in the module language.  But then 
 > you don't get to see the trace that mzc produces.
 >
 > To verify that mzc builds client.scm when planet isn't used:
 > 1. Remove the development link from above.
 >    planet -u dalev acl2.plt 1 0
 >
 > 2. Move the acl2 directory into your PLT collects.
 >
 > 3. Change module-begin.scm:  on line 15, instead of
 >     '(planet "language.scm" ("dalev" "acl2.plt" 1 0))
 >    use
 >      '(lib "language.scm" "acl2")
 >
 > 4. Execute
 >     mzc --zo client.scm
 >
 > No errors occur now.
 >
 > -Dale
 >
 > Error message from above:
 >
 > mobiledv:~/Projects/drscheme-acl2/planet-bug/acl2 dalev$ mzc --zo 
 > client.scm
 > mzc version 301.9, Copyright (c) 2004-2006 PLT Scheme Inc.
 > cadr: expects argument of type <cadrable value>; given #f
 >
 > === context ===
 > /Users/dalev/Software/plt/collects/syntax/moddep.ss:300:13: 
 > combine-relative-elements
 > /Users/dalev/Software/plt/collects/syntax/moddep.ss:384:2: 
 > collapse-module-path-index
 > /Users/dalev/Software/plt/collects/syntax/moddep.ss:384:2: 
 > collapse-module-path-index
 > /Users/dalev/Software/plt/collects/syntax/private/doctable.ss:7:2: 
 > register-documentation
 > /Users/dalev/Software/plt/collects/syntax/toplevel.ss:36:2: 
 > expand-syntax-top-level-with-compile-time-evals
 > /Users/dalev/Software/plt/collects/mzlib/compile.ss:45:25: loop
 > /Users/dalev/Software/plt/collects/mzlib/compile.ss:44:23
 > /Users/dalev/Software/plt/collects/mzlib/compile.ss:26:9
 > /Users/dalev/Software/plt/collects/mzlib/compile.ss:10:4: compile-file
 > /Users/dalev/Software/plt/collects/compiler/compiler-unit.ss:151:6: 
 > compile-to-zo
 >
 
From: Robby Findler <robby@cs.uchicago.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: Dale Vaillancourt <dalev@ccs.neu.edu>, Matthew Flatt <mflatt@cs.utah.edu>,
        Jacob Matthews <jacobm@cs.uchicago.edu>, bugs@plt-scheme.org
Subject: Re: all/7946: planet installation behaves differently than manually using setup-plt
Date: Thu, 9 Mar 2006 16:18:11 -0600

 At Thu, 9 Mar 2006 17:18:29 -0500, Matthias Felleisen wrote:
 > This looks like a Matthew bug to me. ?? -- Matthias
 
 Looks to me like the planet module resolve isn't re-entrant, but that's
 a complete guess.
 
 In any case, this seems like a very useful thing for Jacob to be able
 to stick in some printfs and be able to make figure out if he can pass
 the buck or not.
 
 Robby
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Robby Findler <robby@cs.uchicago.edu>
Cc: Jacob Matthews <jacobm@cs.uchicago.edu>,
        Matthew Flatt <mflatt@cs.utah.edu>,
        Dale Vaillancourt <dalev@ccs.neu.edu>, bugs@plt-scheme.org
Subject: Re: all/7946: planet installation behaves differently than manually using setup-plt
Date: Thu, 9 Mar 2006 17:21:22 -0500

 Oops. Sorry Matthew I'll eat my words.
 
 On Mar 9, 2006, at 5:18 PM, Robby Findler wrote:
 
 > At Thu, 9 Mar 2006 17:18:29 -0500, Matthias Felleisen wrote:
 >> This looks like a Matthew bug to me. ?? -- Matthias
 >
 > Looks to me like the planet module resolve isn't re-entrant, but that's
 > a complete guess.
 >
 > In any case, this seems like a very useful thing for Jacob to be able
 > to stick in some printfs and be able to make figure out if he can pass
 > the buck or not.
 >
 > Robby
 
From: Jacob Matthews <jacobm@cs.uchicago.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: Dale Vaillancourt <dalev@ccs.neu.edu>, Matthew Flatt <mflatt@cs.utah.edu>,
        Robby Findler <robby@cs.uchicago.edu>, bugs@plt-scheme.org
Subject: Re: all/7946: planet installation behaves differently than manually
 using setup-plt
Date: Thu, 09 Mar 2006 16:23:41 -0600

 Unclear. The actual (cadr #f) comes in syntax/moddep.ss because somebody 
 somebody is giving #f as the `relto-mp' argument to 
 collapse-module-path, where a comment on that function says that it 
 cannot accept #f. (So I can already say that a contract would have 
 helped, but it's not clear how much.) I think the root of the problem 
 might be that planet isn't respecting some invariant that a path 
 somewhere isn't allowed to be false.
 
 -jacob
 
 Matthias Felleisen wrote:
 
 > This looks like a Matthew bug to me. ?? -- Matthias
 >     
 >
 > On Mar 9, 2006, at 5:09 PM, Dale Vaillancourt wrote:
 >
 >> I have finally managed to condense the example down to about 20 
 >> lines, and the trigger is now an invocation of mzc rather than planet 
 >> (it still involves planet though).  I apologize for the mess that I 
 >> sent this morning.
 >>
 >> Bug Summary:
 >> The situation is that I have a module based language, and I would 
 >> like to distribute it with PLaneT.  This language needs to have a 
 >> custom #%module-begin that requires itself for syntax, and so the 
 >> code to which that expands uses a planet path:
 >>
 >>   (define-syntax (acl2-module-begin stx)
 >>     (syntax-case stx ()
 >>       [(_ forms ...)
 >>        #`(#%plain-module-begin
 >>           (require-for-syntax
 >>            #,(datum->syntax-object stx
 >>                '(planet "language.scm" ("dalev" "acl2.plt" 1 0))
 >>                ;'(lib "language.scm" "acl2")
 >>                ))
 >>           forms ...)]))
 >>
 >> But I can neither execute in DrScheme nor byte compile a client 
 >> module whose initial import is my language.  However, if I take it 
 >> out of PLaneT and just drop it into my PLT collects, the client 
 >> module builds normally.  Details follow.
 >>
 >> To reproduce behavior:
 >> 1. Unpack
 >>     http://www.ccs.neu.edu/home/dalev/install-bug/acl2.tar.gz
 >>    into any old directory.
 >> 2. Set up a planet development link to it:
 >>    planet -a dalev acl2.plt 1 0 <any old directory>/acl2
 >> 3. Within the directory, execute
 >>    mzc --zo client.scm
 >>
 >> You'll see an error and a trace (which I've pasted at the bottom of 
 >> this message).  Note that you can also see the error message if you 
 >> load client.scm into DrS and Run it in the module language.  But then 
 >> you don't get to see the trace that mzc produces.
 >>
 >> To verify that mzc builds client.scm when planet isn't used:
 >> 1. Remove the development link from above.
 >>    planet -u dalev acl2.plt 1 0
 >>
 >> 2. Move the acl2 directory into your PLT collects.
 >>
 >> 3. Change module-begin.scm:  on line 15, instead of
 >>     '(planet "language.scm" ("dalev" "acl2.plt" 1 0))
 >>    use
 >>      '(lib "language.scm" "acl2")
 >>
 >> 4. Execute
 >>     mzc --zo client.scm
 >>
 >> No errors occur now.
 >>
 >> -Dale
 >>
 >> Error message from above:
 >>
 >> mobiledv:~/Projects/drscheme-acl2/planet-bug/acl2 dalev$ mzc --zo 
 >> client.scm
 >> mzc version 301.9, Copyright (c) 2004-2006 PLT Scheme Inc.
 >> cadr: expects argument of type <cadrable value>; given #f
 >>
 >> === context ===
 >> /Users/dalev/Software/plt/collects/syntax/moddep.ss:300:13: 
 >> combine-relative-elements
 >> /Users/dalev/Software/plt/collects/syntax/moddep.ss:384:2: 
 >> collapse-module-path-index
 >> /Users/dalev/Software/plt/collects/syntax/moddep.ss:384:2: 
 >> collapse-module-path-index
 >> /Users/dalev/Software/plt/collects/syntax/private/doctable.ss:7:2: 
 >> register-documentation
 >> /Users/dalev/Software/plt/collects/syntax/toplevel.ss:36:2: 
 >> expand-syntax-top-level-with-compile-time-evals
 >> /Users/dalev/Software/plt/collects/mzlib/compile.ss:45:25: loop
 >> /Users/dalev/Software/plt/collects/mzlib/compile.ss:44:23
 >> /Users/dalev/Software/plt/collects/mzlib/compile.ss:26:9
 >> /Users/dalev/Software/plt/collects/mzlib/compile.ss:10:4: compile-file
 >> /Users/dalev/Software/plt/collects/compiler/compiler-unit.ss:151:6: 
 >> compile-to-zo
 >>
 >
 >
 
From: Jacob Matthews <jacobm@cs.uchicago.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>,
        Matthew Flatt <mflatt@cs.utah.edu>
Cc: Dale Vaillancourt <dalev@ccs.neu.edu>,
        Robby Findler <robby@cs.uchicago.edu>, bugs@plt-scheme.org
Subject: Re: all/7946: planet installation behaves differently than manually
 using setup-plt
Date: Thu, 09 Mar 2006 17:20:44 -0600

 Matthias Felleisen wrote:
 
 > This looks like a Matthew bug to me. ?? -- Matthias
 
 Okay, at this point I think Matthias may be right. Matthew, can you help 
 me with this?
 
 The problem is that the function collapse-module-path in 
 syntax/moddep.ss operates on require-specs, but doesn't know about 
 planet and returns #f if it gets a planet require. Through a complicated 
 series of events that #f gets fed back into it, and then we get the cadr 
 of #f error. So to answer Matthias's question, I'm pretty sure now that 
 a contract on collapse-module-path would have been useful in pinpointing 
 the bug.
 
 I would fix it, but honestly I'm not very confident that I understand 
 collapse-module-path well enough to start altering it. For instance, it 
 takes two arguments s and relto-mp, and while the comment describes what 
 relto-mp is supposed to be, I'm not sure about s, and I'm not sure 
 exactly what the logic behind combining them is either -- I would guess 
 that (collapse-module-path "z.ss" `(lib "a" "library" "sublibrary")) 
 would return `(lib "sublibrary/z.ss" "library") or `(lib "z.ss" 
 "library" "sublibrary") but it returns `(lib "z.ss" "library") instead, 
 which I can't understand the logic of.
 
 So, could someone who knows this code better than I (I presume Matthew 
 wrote it) tell me what's going on and what I need to change to let this 
 function understand planet requires?
 
 -jacob
From: Robby Findler <robby@cs.uchicago.edu>
To: Jacob Matthews <jacobm@cs.uchicago.edu>
Cc: Matthias Felleisen <matthias@ccs.neu.edu>,
        Matthew Flatt <mflatt@cs.utah.edu>,
        Dale Vaillancourt <dalev@ccs.neu.edu>, bugs@plt-scheme.org
Subject: Re: all/7946: planet installation behaves differently than manually
 using setup-plt
Date: Thu, 9 Mar 2006 17:31:24 -0600

 At Thu, 09 Mar 2006 17:20:44 -0600, Jacob Matthews wrote:
 > Matthias Felleisen wrote:
 > 
 > > This looks like a Matthew bug to me. ?? -- Matthias
 > 
 > Okay, at this point I think Matthias may be right. Matthew, can you help 
 > me with this?
 > 
 > The problem is that the function collapse-module-path in 
 > syntax/moddep.ss operates on require-specs, but doesn't know about 
 > planet and returns #f if it gets a planet require. 
 
 The docs for the function seem to start pretty clearly that it doesn't
 accept planet specs.
 
 Is it possible that the bug is that that function should not be being
 called (or someone should have been supplying a path instead of a
 module spec?)
 
 Robby
From: Matthew Flatt <mflatt@cs.utah.edu>
To: Jacob Matthews <jacobm@cs.uchicago.edu>
Cc: Matthias Felleisen <matthias@ccs.neu.edu>,
        Dale Vaillancourt <dalev@ccs.neu.edu>,
        Robby Findler <robby@cs.uchicago.edu>, bugs@plt-scheme.org
Subject: Re: all/7946: planet installation behaves differently than manually
 using setup-plt
Date: Thu, 9 Mar 2006 20:37:34 -0700

 At Thu, 09 Mar 2006 17:20:44 -0600, Jacob Matthews wrote:
 > I would fix it, but honestly I'm not very confident that I understand 
 > collapse-module-path well enough to start altering it. For instance, it 
 > takes two arguments s and relto-mp, and while the comment describes what 
 > relto-mp is supposed to be, I'm not sure about s, and I'm not sure 
 > exactly what the logic behind combining them is either -- I would guess 
 > that (collapse-module-path "z.ss" `(lib "a" "library" "sublibrary")) 
 > would return `(lib "sublibrary/z.ss" "library") or `(lib "z.ss" 
 > "library" "sublibrary") but it returns `(lib "z.ss" "library") instead, 
 > which I can't understand the logic of.
 
 The problem is that the rel-to argument must have the form `(lib <file>
 <collection>)', and sub-collections are not allowed.
 
 I've added contracts and adjusted the docs somewhat. The `planet' part
 still needs to be added, and I imagine the last argument needs to be
 generalized so that it can be a `planet' form.
 
 There's a new and improved test suite in collects/tests/mzscheme/moddep.ss.
 
 Matthew
 
From: Jacob Matthews <jacobm@cs.uchicago.edu>
To: Robby Findler <robby@cs.uchicago.edu>
Cc: Matthias Felleisen <matthias@ccs.neu.edu>,
        Matthew Flatt <mflatt@cs.utah.edu>,
        Dale Vaillancourt <dalev@ccs.neu.edu>, bugs@plt-scheme.org
Subject: Re: all/7946: planet installation behaves differently than manually
 using setup-plt
Date: Thu, 09 Mar 2006 17:52:10 -0600

 Robby Findler wrote:
 
 >The docs for the function seem to start pretty clearly that it doesn't
 >accept planet specs.
 >Is it possible that the bug is that that function should not be being
 >called (or someone should have been supplying a path instead of a
 >module spec?)
 >  
 >
 Well, the docs say that it expects a lib or file require spec, or a 
 thunk that produces one. I was assuming, based on a similar problem in 
 the syntax collection I found a long time ago, that the fact that it 
 doesn't accept a planet spec was the result of planet being added after 
 that code was written.
 
 -jacob
From: Robby Findler <robby@cs.uchicago.edu>
To: Jacob Matthews <jacobm@cs.uchicago.edu>
Cc: Matthias Felleisen <matthias@ccs.neu.edu>,
        Matthew Flatt <mflatt@cs.utah.edu>,
        Dale Vaillancourt <dalev@ccs.neu.edu>, bugs@plt-scheme.org
Subject: Re: all/7946: planet installation behaves differently than manually
 using setup-plt
Date: Thu, 9 Mar 2006 20:11:43 -0600

 At Thu, 09 Mar 2006 17:20:44 -0600, Jacob Matthews wrote:
 > So to answer Matthias's question, I'm pretty sure now that a contract
 > on collapse-module-path would have been useful in pinpointing the
 > bug.
 
 PS: if you haven't already, you can put one on ...
 
 Robby
From: Jacob Matthews <jacobm@cs.uchicago.edu>
To: Dale Vaillancourt <dalev@ccs.neu.edu>
Cc: Matthew Flatt <mflatt@cs.utah.edu>,
        Matthias Felleisen <matthias@ccs.neu.edu>,
        Robby Findler <robby@cs.uchicago.edu>, bugs@plt-scheme.org
Subject: Re: all/7946: planet installation behaves differently than manually
 using setup-plt
Date: Fri, 10 Mar 2006 11:03:43 -0600

 Matthew Flatt wrote:
 
 >I've added contracts and adjusted the docs somewhat. The `planet' part
 >still needs to be added, and I imagine the last argument needs to be
 >generalized so that it can be a `planet' form.
 >  
 >
 I've committed changes to the function to allow its first and second 
 arguments to be planet specs, and changed the contracts accordingly, and 
 now I can install Dale's original package as a planet package. Dale, one 
 thing -- the syntax you're using in info.ss to specify the tool icon is 
 deprecated because it doesn't work with planet. Use this:
 
 (define tool-icons (list "acl2.gif"))
 
 instead.
 
 -jacob

Responsible changed from "nobody" to "jacobm" by jacobm at Fri, 10 Mar 2006 12:06:38 -0500
Reason>>> planet-related

State changed from "open" to "closed" by jacobm at Fri, 10 Mar 2006 12:06:38 -0500
Reason>>> Fixed in SVN

From: Dale Vaillancourt <dalev@ccs.neu.edu>
To: Jacob Matthews <jacobm@cs.uchicago.edu>
Cc: Matthew Flatt <mflatt@cs.utah.edu>,
        Matthias Felleisen <matthias@ccs.neu.edu>,
        Robby Findler <robby@cs.uchicago.edu>, bugs@plt-scheme.org
Subject: Re: all/7946: planet installation behaves differently than manually
 using setup-plt
Date: Fri, 10 Mar 2006 13:09:20 -0500

 Jacob Matthews wrote:
 > Matthew Flatt wrote:
 > 
 >> I've added contracts and adjusted the docs somewhat. The `planet' part
 >> still needs to be added, and I imagine the last argument needs to be
 >> generalized so that it can be a `planet' form.
 >>  
 >>
 > I've committed changes to the function to allow its first and second 
 > arguments to be planet specs, and changed the contracts accordingly, and 
 > now I can install Dale's original package as a planet package. Dale, one 
 > thing -- the syntax you're using in info.ss to specify the tool icon is 
 > deprecated because it doesn't work with planet. Use this:
 > 
 > (define tool-icons (list "acl2.gif"))
 > 
 > instead.
 
 Great, thanks a lot!  -Dale

