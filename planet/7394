From apache@plt-scheme.org Wed May 25 15:03:39 2005
Received: from champlain.ccs.neu.edu (champlain.ccs.neu.edu [127.0.0.1])
	by champlain.ccs.neu.edu (8.12.10/8.12.10) with ESMTP id j4PJ3PAD008895
	for <bugs@plt-scheme.org>; Wed, 25 May 2005 15:03:25 -0400
Message-Id: <200505251903.j4PJ3PgR008893@champlain.ccs.neu.edu>
Date: Wed, 25 May 2005 15:03:25 -0400
From: cobbe@ccs.neu.edu
To: bugs@plt-scheme.org
Subject: PLaneT and SchemeUnit's require/expose don't get along

>Number:         7394
>Category:       planet
>Synopsis:       PLaneT and SchemeUnit's require/expose don't get along
>Class:          sw-bug
>Responsible:    jacobm
>Severity:       serious
>Priority:       medium
>State:          analyzed
>Confidential:   no
>Arrival-Date:   Wed May 25 15:05:00 -0400 2005
>Last-Modified:  Wed Feb 15 10:39:43 -0500 2006
>Originator:     Richard Cobbe
>Organization:
plt
>Submitter-Id:   unknown
>Release:        299.104-cvs6may2005
>Environment:
mac-ppc-osx
>Description:
A PLaneT package cannot use SchemeUnit's require/expose form to require another file in the same package.

Consider the package containing two files:

;; foo.ss:
(module foo mzscheme

  (provide x)

  (define x 3)
  (define y 4))

;; foo-tests.ss
(module foo-tests mzscheme

  (provide foo)

  (require (planet "util.ss" ("schematics" "schemeunit.plt" 1 1)))

  (require/expose "foo.ss" (y))

  (define foo (+ x y)))

Installing this PLaneT package in the right place gives you the following results:

Welcome to MzScheme version 299.104, Copyright (c) 2004-2005 PLT Scheme, Inc.
> (require (planet "foo.ss" ("cobbe" "planet-test.plt" 1 0)))
> (require (planet "foo-tests.ss" ("cobbe" "planet-test.plt" 1 0)))
default-load-handler: cannot open input file: "/Users/cobbe/tmp/foo.ss" (No such file or directory; errno=2)

If, however, you replace
  (require/expose "foo.ss" (y))
in foo-tests.ss with
  (require/expose (planet "foo.ss" ("cobbe" "planet-test.plt" 1 0))
                  (y))
then everything works.

Unfortunately, that's only a stopgap solution.  In general, the package's author still has to use the relative module path instead of the planet module path.  Otherwise, if the package uses structs, the author is likely to run into generativity issues.

Ryan Culpepper suggests that PLaneT isn't setting some parameter during compilation, but he didn't elaborate.

I've made the package containing the two files above available at <http://www.ccs.neu.edu/home/cobbe/misc/planet-tests.
>How-To-Repeat:
>Fix:
>Audit-Trail:
Responsible changed from "nobody" to "jacobm" by jacobm at Wed, 25 May 2005 15:08:00 -0400
Reason>>> planet

From: Richard Cobbe <cobbe@ccs.neu.edu>
To: bugs@plt-scheme.org
Cc: 
Subject: Re: planet/7394 PLaneT and SchemeUnit's require/expose don't get along
Date: Wed, 25 May 2005 16:01:20 -0400

 Let me finish that last paragraph:
 
 The correct URL is
     <http://www.ccs.neu.edu/home/cobbe/misc/planet-test.plt>
 and you should install it with
     planet -f planet-test.plt cobbe 1 0
 for it to work correctly.
 
 (And that's another problem with this bug -- if I use the planet
 references internally, then I have to predict what version numbers
 Jacob's going to give it, and that's not so good.)
 
 Richard

State changed from "open" to "analyzed" by jacobm at Wed, 15 Feb 2006 10:39:43 -0500
Reason>>> .

