From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Tue May 29 12:21:39 2012
Received: from mail-vc0-f172.google.com (mail-vc0-f172.google.com [209.85.220.172])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id q4TGLYYJ019360
	for <bugs@bugs.plt-scheme.org>; Tue, 29 May 2012 12:21:34 -0400
Message-Id: <201205291621.q4TGLT44019354@champlain.ccs.neu.edu>
Date: Tue, 29 May 2012 12:21:29 -0400
From: wolf@cs.ubc.ca
To: bugs@racket-lang.org
Subject: Stepper does not show (truly) fresh variable name when renaming local declaration

>Number:         12802
>Category:       stepper
>Synopsis:       Stepper does not show (truly) fresh variable name when renaming local declaration
>Class:          sw-bug
>Responsible:    clements
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Tue May 29 12:24:01 -0400 2012
>Closed-Date:    Wed Dec 12 18:05:06 -0500 2018
>Last-Modified:  Wed Dec 12 18:05:06 -0500 2018
>Originator:     Steve Wolfman
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.2.1
>Environment:
windows "Windows NT 6.1 (Build 7601) Service Pack 1" (win32\x86_64\3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 306122504
Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()


Collections:
("C:\\Users\\wolf\\AppData\\Roaming\\Racket\\5.2.1\\collects"
 (non-existent-path))
("C:\\Program Files\\Racket\\collects"
 ("2htdp" "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "data" "datalog" "db" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "help" "hierlist" "htdp" "html" "icons" "images" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "picturing-programs" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "redex" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tex2page" "texpict" "trace" "typed" "typed-racket" "typed-scheme" "unstable" "version" "web-server" "wxme" "xml" "xrepl"))

Computer Language: (("Teaching Languages" "How to Design Programs" "Intermediate Student") (#(#t constructor repeating-decimal #f #t none) #f ()))
>Description:
When evaluating a local, the stepper does not actually rename defined variables to fresh names.  For example, when locally defining a variable named b but with a global b_0 already defined, the stepper makes ANOTHER b_0 definition that behaves as if it were NOT the same b_0 as the other (i.e., we can successfully refer to both in an expression).

This is a serious bug causing student confusion and derailing a lecture on encapsulation that I'm observing right now.  (Just lost 10 minutes and lots of steam to discussion of this confusing point.)
>How-To-Repeat:
Step the following code in Intermediate Student:

(define b 1)
(define b_0 10)
(+ (local [(define b 100)] (+ b b_0)) b b_0)


Observe that the expression on the inside becomes (+ b_0 b_0) which evaluates (impossibly) to 110.
>Fix:
>Audit-Trail:
From: Steve Wolfman <wolf@cs.ubc.ca>
To: bugs@racket-lang.org
Cc: 
Subject: Re: all/12802: Stepper does not show (truly) fresh variable name
 when renaming local declaration
Date: Tue, 29 May 2012 10:30:57 -0700 (PDT)

 FYI, this bug is a repeat of 8987 and 9028.  I recommend someone with 
 permission close this (12802) and 9028, marking them as repeats of the 
 nicely-written 8987.
 
  		Cheers,
 
  		Steve
 
 
 
From: John Clements <clements@brinckerhoff.org>
To: wolf@cs.ubc.ca, bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12802: Stepper does not show (truly) fresh variable name when renaming local declaration
Date: Tue, 29 May 2012 17:19:56 -0700

 --Apple-Mail=_576F6C74-0124-45C0-9DEE-2D7170CB4CE0
 Content-Transfer-Encoding: quoted-printable
 Content-Type: text/plain;
 	charset=us-ascii
 
 
 On May 29, 2012, at 9:24 AM, wolf@cs.ubc.ca wrote:
 
 > A new problem report is waiting at
 >  http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D12802
 >=20
 > Reported by Steve Wolfman for release: 5.2.1
 >=20
 > *** Description:
 > When evaluating a local, the stepper does not actually rename defined =
 variables to fresh names.  For example, when locally defining a variable =
 named b but with a global b_0 already defined, the stepper makes ANOTHER =
 b_0 definition that behaves as if it were NOT the same b_0 as the other =
 (i.e., we can successfully refer to both in an expression).
 >=20
 > This is a serious bug causing student confusion and derailing a =
 lecture on encapsulation that I'm observing right now.  (Just lost 10 =
 minutes and lots of steam to discussion of this confusing point.)
 
 My sincere apologies. This is a long-standing bug--it has a PR #, =
 already--and I should set aside time to fix it.
 
 John Clements
 
 
 --Apple-Mail=_576F6C74-0124-45C0-9DEE-2D7170CB4CE0
 Content-Disposition: attachment;
 	filename=smime.p7s
 Content-Type: application/pkcs7-signature;
 	name=smime.p7s
 Content-Transfer-Encoding: base64
 
 MIAGCSqGSIb3DQEHAqCAMIACAQExCzAJBgUrDgMCGgUAMIAGCSqGSIb3DQEHAQAAoIIPEzCCBykw
 ggYRoAMCAQICAwPcUTANBgkqhkiG9w0BAQUFADCBjDELMAkGA1UEBhMCSUwxFjAUBgNVBAoTDVN0
 YXJ0Q29tIEx0ZC4xKzApBgNVBAsTIlNlY3VyZSBEaWdpdGFsIENlcnRpZmljYXRlIFNpZ25pbmcx
 ODA2BgNVBAMTL1N0YXJ0Q29tIENsYXNzIDEgUHJpbWFyeSBJbnRlcm1lZGlhdGUgQ2xpZW50IENB
 MB4XDTEyMDMwNzIxMjUzMVoXDTEzMDMwOTE2MTMxM1owaTEZMBcGA1UEDRMQRnZ2UldwVTBBWmJh
 N0xOdzEiMCAGA1UEAwwZY2xlbWVudHNAYnJpbmNrZXJob2ZmLm9yZzEoMCYGCSqGSIb3DQEJARYZ
 Y2xlbWVudHNAYnJpbmNrZXJob2ZmLm9yZzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB
 ANzG4UTqtJ5RQ05+IUzR2ozbby7hPkg/r7PJ9fho/kJFcb8AVlosUcczERcXgICBxNWi6m/4Ap8d
 TlRb986B5fFraMQnF7uFXsBuXMN8wqOIjNPhHW+Mxf9PRNparYjZMCT88hT5Rf+eXG3yUi2a+DC2
 rHClhtt4n9gt4K8vm8pSJRSmZZtuleXQKl0rnRpUHVemO8xDHr6cpn3d+npx/wFwjnGIAaCUSZqZ
 2FdjkrPOf24JbEWbzwq5XRms0nTmUTZFCdbgj0nyAQp2XFqgSVO3IFRvUtsxHO35958voZVjxPaK
 +nYnIs+jmvgVO5AuBvgXmr4QXUVmX+htehsZmCMCAwEAAaOCA7QwggOwMAkGA1UdEwQCMAAwCwYD
 VR0PBAQDAgSwMB0GA1UdJQQWMBQGCCsGAQUFBwMCBggrBgEFBQcDBDAdBgNVHQ4EFgQUu+N1Sv+R
 1NlG9RLqKsa0yT9tWyIwHwYDVR0jBBgwFoAUU3Ltkpzg2ssBXHx+ljVO8tS4UYIwJAYDVR0RBB0w
 G4EZY2xlbWVudHNAYnJpbmNrZXJob2ZmLm9yZzCCAiEGA1UdIASCAhgwggIUMIICEAYLKwYBBAGB
 tTcBAgIwggH/MC4GCCsGAQUFBwIBFiJodHRwOi8vd3d3LnN0YXJ0c3NsLmNvbS9wb2xpY3kucGRm
 MDQGCCsGAQUFBwIBFihodHRwOi8vd3d3LnN0YXJ0c3NsLmNvbS9pbnRlcm1lZGlhdGUucGRmMIH3
 BggrBgEFBQcCAjCB6jAnFiBTdGFydENvbSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTADAgEBGoG+
 VGhpcyBjZXJ0aWZpY2F0ZSB3YXMgaXNzdWVkIGFjY29yZGluZyB0byB0aGUgQ2xhc3MgMSBWYWxp
 ZGF0aW9uIHJlcXVpcmVtZW50cyBvZiB0aGUgU3RhcnRDb20gQ0EgcG9saWN5LCByZWxpYW5jZSBv
 bmx5IGZvciB0aGUgaW50ZW5kZWQgcHVycG9zZSBpbiBjb21wbGlhbmNlIG9mIHRoZSByZWx5aW5n
 IHBhcnR5IG9ibGlnYXRpb25zLjCBnAYIKwYBBQUHAgIwgY8wJxYgU3RhcnRDb20gQ2VydGlmaWNh
 dGlvbiBBdXRob3JpdHkwAwIBAhpkTGlhYmlsaXR5IGFuZCB3YXJyYW50aWVzIGFyZSBsaW1pdGVk
 ISBTZWUgc2VjdGlvbiAiTGVnYWwgYW5kIExpbWl0YXRpb25zIiBvZiB0aGUgU3RhcnRDb20gQ0Eg
 cG9saWN5LjA2BgNVHR8ELzAtMCugKaAnhiVodHRwOi8vY3JsLnN0YXJ0c3NsLmNvbS9jcnR1MS1j
 cmwuY3JsMIGOBggrBgEFBQcBAQSBgTB/MDkGCCsGAQUFBzABhi1odHRwOi8vb2NzcC5zdGFydHNz
 bC5jb20vc3ViL2NsYXNzMS9jbGllbnQvY2EwQgYIKwYBBQUHMAKGNmh0dHA6Ly9haWEuc3RhcnRz
 c2wuY29tL2NlcnRzL3N1Yi5jbGFzczEuY2xpZW50LmNhLmNydDAjBgNVHRIEHDAahhhodHRwOi8v
 d3d3LnN0YXJ0c3NsLmNvbS8wDQYJKoZIhvcNAQEFBQADggEBAHQX1t8P9NCkIlYtpVIyMONdoKu9
 nQLEMyAQH4/c40i1Ke063TJFAd6LxJfK5VbVh9arJ8oE+it8IwGcp0hTjDUjpyZ4fFI04VOsQadY
 oq1sHVZDw4++WlQSq2LoSYicsGaZZI71O13Vas1ldQwrVyfiXNZt9leXitAK24s5wleXk1PAE1lt
 N9QzK8+g1VjGoagqC5ON3+u0szrlZEZKXd0Br5bYLNrIgKJZMR1tn2F+VhljPDRkSc8kxnEGPotB
 bNKjLfP1AuoCWCyjk9fbROIS0gcplPo3sa1jyJZ4Rh6UfIyy5ejNy2m9JBOnEwuMZjqatGSamwzY
 Tgop8qH6RScwggfiMIIFyqADAgECAgENMA0GCSqGSIb3DQEBBQUAMH0xCzAJBgNVBAYTAklMMRYw
 FAYDVQQKEw1TdGFydENvbSBMdGQuMSswKQYDVQQLEyJTZWN1cmUgRGlnaXRhbCBDZXJ0aWZpY2F0
 ZSBTaWduaW5nMSkwJwYDVQQDEyBTdGFydENvbSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAeFw0w
 NzEwMjQyMTAxNTRaFw0xMjEwMjIyMTAxNTRaMIGMMQswCQYDVQQGEwJJTDEWMBQGA1UEChMNU3Rh
 cnRDb20gTHRkLjErMCkGA1UECxMiU2VjdXJlIERpZ2l0YWwgQ2VydGlmaWNhdGUgU2lnbmluZzE4
 MDYGA1UEAxMvU3RhcnRDb20gQ2xhc3MgMSBQcmltYXJ5IEludGVybWVkaWF0ZSBDbGllbnQgQ0Ew
 ggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDHCYPMzi3YGrEppC4Tq5a+ijKDjKaIQZZV
 R63UbxIP6uq/I0fhCu+cQhoUfE6ERKKnu8zPf1Jwuk0tsvVCk6U9b+0UjM0dLep3ZdE1gblK/1Fw
 YT5Pipsu2yOMluLqwvsuz9/9f1+1PKHG/FaR/wpbfuIqu54qzHDYeqiUfsYzoVflR80DAC7hmJ+S
 mZnNTWyUGHJbBpA8Q89lGxahNvuryGaC/o2/ceD2uYDX9U8Eg5DpIpGQdcbQeGarV04WgAUjjXX5
 r/2dabmtxWMZwhZna//jdiSyrrSMTGKkDiXm6/3/4ebfeZuCYKzN2P8O2F/Xe2AC/Y7zeEsnR7FO
 p+uXAgMBAAGjggNbMIIDVzAMBgNVHRMEBTADAQH/MAsGA1UdDwQEAwIBpjAdBgNVHQ4EFgQUU3Lt
 kpzg2ssBXHx+ljVO8tS4UYIwgagGA1UdIwSBoDCBnYAUTgvvGqRAW6UXaYcwyjRoQ9BBrvKhgYGk
 fzB9MQswCQYDVQQGEwJJTDEWMBQGA1UEChMNU3RhcnRDb20gTHRkLjErMCkGA1UECxMiU2VjdXJl
 IERpZ2l0YWwgQ2VydGlmaWNhdGUgU2lnbmluZzEpMCcGA1UEAxMgU3RhcnRDb20gQ2VydGlmaWNh
 dGlvbiBBdXRob3JpdHmCAQEwCQYDVR0SBAIwADA9BggrBgEFBQcBAQQxMC8wLQYIKwYBBQUHMAKG
 IWh0dHA6Ly93d3cuc3RhcnRzc2wuY29tL3Nmc2NhLmNydDBgBgNVHR8EWTBXMCygKqAohiZodHRw
 Oi8vY2VydC5zdGFydGNvbS5vcmcvc2ZzY2EtY3JsLmNybDAnoCWgI4YhaHR0cDovL2NybC5zdGFy
 dHNzbC5jb20vc2ZzY2EuY3JsMIIBXQYDVR0gBIIBVDCCAVAwggFMBgsrBgEEAYG1NwEBBDCCATsw
 LwYIKwYBBQUHAgEWI2h0dHA6Ly9jZXJ0LnN0YXJ0Y29tLm9yZy9wb2xpY3kucGRmMDUGCCsGAQUF
 BwIBFilodHRwOi8vY2VydC5zdGFydGNvbS5vcmcvaW50ZXJtZWRpYXRlLnBkZjCB0AYIKwYBBQUH
 AgIwgcMwJxYgU3RhcnQgQ29tbWVyY2lhbCAoU3RhcnRDb20pIEx0ZC4wAwIBARqBl0xpbWl0ZWQg
 TGlhYmlsaXR5LCByZWFkIHRoZSBzZWN0aW9uICpMZWdhbCBMaW1pdGF0aW9ucyogb2YgdGhlIFN0
 YXJ0Q29tIENlcnRpZmljYXRpb24gQXV0aG9yaXR5IFBvbGljeSBhdmFpbGFibGUgYXQgaHR0cDov
 L2NlcnQuc3RhcnRjb20ub3JnL3BvbGljeS5wZGYwEQYJYIZIAYb4QgEBBAQDAgAHMFAGCWCGSAGG
 +EIBDQRDFkFTdGFydENvbSBDbGFzcyAxIFByaW1hcnkgSW50ZXJtZWRpYXRlIEZyZWUgU1NMIEVt
 YWlsIENlcnRpZmljYXRlczANBgkqhkiG9w0BAQUFAAOCAgEAqprh4FuMzh0b/B3GLDAgoLeTJv3x
 ArbNESi/Kf/HMM//gf8FzwUUNOCglH6dfYuLQQ/dTtOyMb4JoiL3T7xiVKEAOmQ+t+b/xLOMa0m1
 8zoRqW4k6Glyoyvc7LMrdpgYk/lEh5nq8tPd9BoNmwiiheXphIVH/QelTgUkNzTC7IVpmYVsKuNO
 nxE1jJFZNNfqZZK/5Oto7C6PfOut11KmBQSLZarAz0b/mjghdBsYfHuhdO8vrOvD0g5g7dA4pkOA
 U2Ed4pSCowBSItyD/5aFwZ75ji6Yq7GCG3BpiyAP9st8h+inc0L+7kmrAMJaLMAmu6GZs5Xgsbzn
 0wUJvbD9h5jnnMM9UaZDcxl2uLB04quGUWM6NiKGabbxQc680PYbeQrQu+e6J4uqNAxzoa5RxkBA
 5a/3qlbgF9uJBekCqJswx5vQ9khJrs8UTMaIFzbEC5VGQziQH3/6KJ4DUP85OJEnCx/quShWA6w3
 18LDnba3M6a5V+KoNLhsVi/TSxf90UbBqwdRR/cOwuGkNJh16NvvhIqO26osMg64CbZsDVrEDr7u
 SMV40ieBJTo49Iyt77ECOhz/pyhowa2EUP6aKav+L/wXzAPB3LNqzujGR0K1pbyFWKvyYmdungJt
 ySWUMw+R5DqpA2bFIOE56pfWPLHZxOL+8+r79PLFX+y2V6ExggNvMIIDawIBATCBlDCBjDELMAkG
 A1UEBhMCSUwxFjAUBgNVBAoTDVN0YXJ0Q29tIEx0ZC4xKzApBgNVBAsTIlNlY3VyZSBEaWdpdGFs
 IENlcnRpZmljYXRlIFNpZ25pbmcxODA2BgNVBAMTL1N0YXJ0Q29tIENsYXNzIDEgUHJpbWFyeSBJ
 bnRlcm1lZGlhdGUgQ2xpZW50IENBAgMD3FEwCQYFKw4DAhoFAKCCAa8wGAYJKoZIhvcNAQkDMQsG
 CSqGSIb3DQEHATAcBgkqhkiG9w0BCQUxDxcNMTIwNTMwMDAxOTU3WjAjBgkqhkiG9w0BCQQxFgQU
 OLy3QLHHCVB5zSz9TAq6VjwCnt0wgaUGCSsGAQQBgjcQBDGBlzCBlDCBjDELMAkGA1UEBhMCSUwx
 FjAUBgNVBAoTDVN0YXJ0Q29tIEx0ZC4xKzApBgNVBAsTIlNlY3VyZSBEaWdpdGFsIENlcnRpZmlj
 YXRlIFNpZ25pbmcxODA2BgNVBAMTL1N0YXJ0Q29tIENsYXNzIDEgUHJpbWFyeSBJbnRlcm1lZGlh
 dGUgQ2xpZW50IENBAgMD3FEwgacGCyqGSIb3DQEJEAILMYGXoIGUMIGMMQswCQYDVQQGEwJJTDEW
 MBQGA1UEChMNU3RhcnRDb20gTHRkLjErMCkGA1UECxMiU2VjdXJlIERpZ2l0YWwgQ2VydGlmaWNh
 dGUgU2lnbmluZzE4MDYGA1UEAxMvU3RhcnRDb20gQ2xhc3MgMSBQcmltYXJ5IEludGVybWVkaWF0
 ZSBDbGllbnQgQ0ECAwPcUTANBgkqhkiG9w0BAQEFAASCAQCzrFGvsHyeOjlO+kK1RPvN/fGB0BrN
 FFKJr4urjZ4yyYWe47jWFjOSnatmvWf+qysWBd41T428ZKfo0eHOcmM7ZhQ4CLyyJuntPxrBtJEH
 K68LujhN+mz9ZsMze/ygJlBntrujaKtL7rwL5tv2VyMsxhIORIjkC8Js2dGTC1LaYJTw/tJJfvT2
 Xpm3xOl4hMUh9mwk+SriPqMJ793NekPr3/N7P9VaXTze4FscHmTkf6IfqC/WztyWINo10AweoDst
 Tv+GFNbcmXSePo9rnb3ahA8jvcuXk0gE3VoSxzi1uiM0gLEjnjC66I6rPiNLey7wsgoHTH6lqu1I
 1mmJs/gUAAAAAAAA
 
 --Apple-Mail=_576F6C74-0124-45C0-9DEE-2D7170CB4CE0--
From: Steve Wolfman <wolf@cs.ubc.ca>
To: John Clements <clements@brinckerhoff.org>
Cc: bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12802: Stepper does not show (truly) fresh
 variable name when renaming local declaration
Date: Wed, 30 May 2012 12:04:52 -0700 (PDT)

 I think a straightforward approach to make things better would be to alter 
 the colour of the renamed variables.
 
 The pedagogical explanation (which is perfectly reasonable and probably 
 technically accurate for the implementation) would be that the stepper has 
 available to it variable names that are (syntactically) unavailable to the 
 programmer.  That also keeps "backward compatibility" with whatever 
 materials people are already using.
 
  		Cheers,
 
  		Steve
 
 On Tue, 29 May 2012, John Clements wrote:
 
 >
 > On May 29, 2012, at 9:24 AM, wolf@cs.ubc.ca wrote:
 >
 >> A new problem report is waiting at
 >>  http://bugs.racket-lang.org/query/?cmd=view&pr=12802
 >>
 >> Reported by Steve Wolfman for release: 5.2.1
 >>
 >> *** Description:
 >> When evaluating a local, the stepper does not actually rename defined variables to fresh names.  For example, when locally defining a variable named b but with a global b_0 already defined, the stepper makes ANOTHER b_0 definition that behaves as if it were NOT the same b_0 as the other (i.e., we can successfully refer to both in an expression).
 >>
 >> This is a serious bug causing student confusion and derailing a lecture on encapsulation that I'm observing right now.  (Just lost 10 minutes and lots of steam to discussion of this confusing point.)
 >
 > My sincere apologies. This is a long-standing bug--it has a PR #, already--and I should set aside time to fix it.
 >
 > John Clements
 >
 >
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Steve Wolfman <wolf@cs.ubc.ca>
Cc: John Clements <clements@brinckerhoff.org>, bugs@racket-lang.org,
        nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12802: Stepper does not show (truly) fresh variable name when renaming local declaration
Date: Wed, 30 May 2012 15:23:43 -0400

 Steve, one of the guiding design principles for the stepper is that you can paste any intermediate stage into DrRacket, click run, and get the same result(s) as the original program. With color we wouldn't be able to live up to this principle. 
 
 
 On May 30, 2012, at 3:04 PM, Steve Wolfman wrote:
 
 > I think a straightforward approach to make things better would be to alter the colour of the renamed variables.
 > 
 > The pedagogical explanation (which is perfectly reasonable and probably technically accurate for the implementation) would be that the stepper has available to it variable names that are (syntactically) unavailable to the programmer.  That also keeps "backward compatibility" with whatever materials people are already using.
 > 
 > 		Cheers,
 > 
 > 		Steve
 > 
 > On Tue, 29 May 2012, John Clements wrote:
 > 
 >> 
 >> On May 29, 2012, at 9:24 AM, wolf@cs.ubc.ca wrote:
 >> 
 >>> A new problem report is waiting at
 >>> http://bugs.racket-lang.org/query/?cmd=view&pr=12802
 >>> 
 >>> Reported by Steve Wolfman for release: 5.2.1
 >>> 
 >>> *** Description:
 >>> When evaluating a local, the stepper does not actually rename defined variables to fresh names.  For example, when locally defining a variable named b but with a global b_0 already defined, the stepper makes ANOTHER b_0 definition that behaves as if it were NOT the same b_0 as the other (i.e., we can successfully refer to both in an expression).
 >>> 
 >>> This is a serious bug causing student confusion and derailing a lecture on encapsulation that I'm observing right now.  (Just lost 10 minutes and lots of steam to discussion of this confusing point.)
 >> 
 >> My sincere apologies. This is a long-standing bug--it has a PR #, already--and I should set aside time to fix it.
 >> 
 >> John Clements
 >> 
 >> 
 
 
From: Steve Wolfman <wolf@cs.ubc.ca>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: John Clements <clements@brinckerhoff.org>, bugs@racket-lang.org,
        nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12802: Stepper does not show (truly) fresh
 variable name when renaming local declaration
Date: Wed, 30 May 2012 12:28:32 -0700 (PDT)

 Definitely true and a good principle, if currently violated.  I only 
 tossed that solution in as an inferior but perhaps easier alternative in 
 case for some reason a better one is currently out of reach.
 
  		Cheers,
 
  		Steve
 
 On Wed, 30 May 2012, Matthias Felleisen wrote:
 
 >
 >
 > Steve, one of the guiding design principles for the stepper is that you can paste any intermediate stage into DrRacket, click run, and get the same result(s) as the original program. With color we wouldn't be able to live up to this principle.
 >
 >
 > On May 30, 2012, at 3:04 PM, Steve Wolfman wrote:
 >
 >> I think a straightforward approach to make things better would be to alter the colour of the renamed variables.
 >>
 >> The pedagogical explanation (which is perfectly reasonable and probably technically accurate for the implementation) would be that the stepper has available to it variable names that are (syntactically) unavailable to the programmer.  That also keeps "backward compatibility" with whatever materials people are already using.
 >>
 >> 		Cheers,
 >>
 >> 		Steve
 >>
 >> On Tue, 29 May 2012, John Clements wrote:
 >>
 >>>
 >>> On May 29, 2012, at 9:24 AM, wolf@cs.ubc.ca wrote:
 >>>
 >>>> A new problem report is waiting at
 >>>> http://bugs.racket-lang.org/query/?cmd=view&pr=12802
 >>>>
 >>>> Reported by Steve Wolfman for release: 5.2.1
 >>>>
 >>>> *** Description:
 >>>> When evaluating a local, the stepper does not actually rename defined variables to fresh names.  For example, when locally defining a variable named b but with a global b_0 already defined, the stepper makes ANOTHER b_0 definition that behaves as if it were NOT the same b_0 as the other (i.e., we can successfully refer to both in an expression).
 >>>>
 >>>> This is a serious bug causing student confusion and derailing a lecture on encapsulation that I'm observing right now.  (Just lost 10 minutes and lots of steam to discussion of this confusing point.)
 >>>
 >>> My sincere apologies. This is a long-standing bug--it has a PR #, already--and I should set aside time to fix it.
 >>>
 >>> John Clements
 >>>
 >>>
 >


State changed from "open" to "closed" by clements at Wed, 12 Dec 2018 18:05:06 -0500
Reason>>> fixed in racket/htdp commit #60ff811f6de1ebf5a3ac2e1

