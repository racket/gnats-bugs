From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Thu Apr 28 05:35:15 2016
Received: from mail-io0-f175.google.com (mail-io0-f175.google.com [209.85.223.175])
	by winooski.ccs.neu.edu (8.14.7/8.14.7) with ESMTP id u3S9ZC0x032763
	for <bugs@bugs.plt-scheme.org>; Thu, 28 Apr 2016 05:35:13 -0400
Message-Id: <201604280935.u3S9ZAhw032756@winooski.ccs.neu.edu>
Date: Thu, 28 Apr 2016 05:35:10 -0400
From: jesse@eecs.northwestern.edu
To: bugs@racket-lang.org
Subject: List abbreviations in stepper are confusing

>Number:         15296
>Category:       stepper
>Synopsis:       List abbreviations in stepper are confusing
>Class:          not-a-bug
>Responsible:    clements
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Thu Apr 28 05:36:01 -0400 2016
>Closed-Date:    Fri Apr 29 15:52:36 -0400 2016
>Last-Modified:  Fri Apr 29 15:52:36 -0400 2016
>Originator:     Jesse Tov
>Organization:
plt
>Submitter-Id:   unknown
>Release:        6.4
>Environment:
macosx "Darwin sublevel 15.4.0 Darwin Kernel Version 15.4.0: Fri Feb 26 22:08:05 PST 2016; root:xnu-3248.40.184~3/RELEASE_X86_64 x86_64" (x86_64-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 954207108
raco pkg (show):
Installation-wide:
 Package            Checksum     Source
 main-distribution  2820602f...  catalog main-distribution
 racket-lib         f678d8f6...  catalog racket-lib
 [188 auto-installed packages not shown]
User-specific for installation "6.4":
 Package            Checksum             Source
 drracket-vim-tool  cc63333d...          url...-vim-tool.git



Collections:
("/Users/tov/Library/Racket/6.4/collects"
 (non-existent-path))
("/Applications/Racket v6.4/collects"
 ("acks" "compiler" "data" "db" "dynext" "ffi" "file" "info" "info-domain" "json" "launcher" "net" "openssl" "pkg" "planet" "racket" "raco" "reader" "realm" "s-exp" "setup" "syntax" "unstable" "version" "xml"))

Recent Internal Errors: 
Computer Language: (("Teaching Languages" "How to Design Programs" "Intermediate Student") (#(#t constructor repeating-decimal #f #t none) #f () #f))
>Description:
When in BSL with list abbreviations or in ISL, it the stepper reduces empty to '() and cons to list:

(cons 3 (cons 4 empty))
=>
(cons 3 (cons 4 '()))
=>
(cons 3 (list 4))
=>
(list 3 4)

This is confusing to students trying to learn how to reduce programs by hand. Are those arithmetic steps? What is even happening?
>How-To-Repeat:
Paste (cons 3 (cons 4 empty)) into an empty definitions window set to Intermediate Student. Start the stepper and step.
>Fix:
>Audit-Trail:
From: "John Clements" <clements@brinckerhoff.org>
To: jesse@eecs.northwestern.edu, bugs@racket-lang.org
Cc: "nobody" <nobody@racket-lang.org>,
        "bug-notification" <bug-notification@racket-lang.org>,
        "Matthias Felleisen" <matthias@ccs.neu.edu>,
        "Robby Findler" <robby@eecs.northwestern.edu>
Subject: Re: [racket-bug] all/15296: List abbreviations in stepper are
 confusing
Date: Thu, 28 Apr 2016 11:48:58 -0400

 
 > On Apr 28, 2016, at 2:36 AM, jesse@eecs.northwestern.edu wrote:
 > 
 > A new problem report is waiting at
 >  http://bugs.racket-lang.org/query/?cmd=view&pr=15296
 > 
 > Reported by Jesse Tov for release: 6.4
 > 
 > *** Description:
 > When in BSL with list abbreviations or in ISL, it the stepper reduces empty to '() and cons to list:
 > 
 > (cons 3 (cons 4 empty))
 > =>
 > (cons 3 (cons 4 '()))
 > =>
 > (cons 3 (list 4))
 > =>
 > (list 3 4)
 
 This is deliberate, and I believe it matches the behavior of the printer in the interactions window, and in fact I think you can assemble a fairly sane algebraic semantics for this.
 
 Actually, I think there are two separate things here:
 
 1) HtDP now uses ‘() as the canonical representation of the empty list. If you take a look at HtDP/2e, I think you’ll see a consistent use of ‘() rather than ‘empty’. so that’s thing one.
 
 2) Starting with the “BSL with List Abbreviations” language, the set of lists is not (Rec Lst (U ‘() (cons Any Lst)), but rather (U ‘() (list Any Any …)). I believe the goal here is to allow reasonably concise representations of lists containing lists, etc., that would otherwise be difficult to read.
 
 As an aside… it does seem to me that it might be a wee bit simpler to use (list) as the representation of the empty list in these language levels.
 
 Really, at the end of the day, my goal is to support HtDP’s pedagogic decisions.
 
 Does this make sense?
 
 John
 
 
 
 > 
 > This is confusing to students trying to learn how to reduce programs by hand. Are those arithmetic steps? What is even happening?
 > 
 > *** How to repeat:
 > Paste (cons 3 (cons 4 empty)) into an empty definitions window set to Intermediate Student. Start the stepper and step.
 > 
 > *** Environment:
 > macosx "Darwin sublevel 15.4.0 Darwin Kernel Version 15.4.0: Fri Feb 26 22:08:05 PST 2016; root:xnu-3248.40.184~3/RELEASE_X86_64 x86_64" (x86_64-macosx/3m) (get-display-depth) = 32
 > Human Language: english
 > (current-memory-use) 954207108
 > raco pkg (show):
 > Installation-wide:
 > Package            Checksum     Source
 > main-distribution  2820602f...  catalog main-distribution
 > racket-lib         f678d8f6...  catalog racket-lib
 > [188 auto-installed packages not shown]
 > User-specific for installation "6.4":
 > Package            Checksum             Source
 > drracket-vim-tool  cc63333d...          url...-vim-tool.git
 > 
 > 
 > 
 > Collections:
 > ("/Users/tov/Library/Racket/6.4/collects"
 > (non-existent-path))
 > ("/Applications/Racket v6.4/collects"
 > ("acks" "compiler" "data" "db" "dynext" "ffi" "file" "info" "info-domain" "json" "launcher" "net" "openssl" "pkg" "planet" "racket" "raco" "reader" "realm" "s-exp" "setup" "syntax" "unstable" "version" "xml"))
 > 
 > Recent Internal Errors: 
 > Computer Language: (("Teaching Languages" "How to Design Programs" "Intermediate Student") (#(#t constructor repeating-decimal #f #t none) #f () #f))
 > 
 
 
 
 
From: "Jesse A. Tov" <jesse@eecs.northwestern.edu>
To: John Clements <clements@brinckerhoff.org>, bugs@racket-lang.org
Cc: nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>,
        Matthias Felleisen <matthias@ccs.neu.edu>,
        Robby Findler <robby@eecs.northwestern.edu>
Subject: Re: [racket-bug] all/15296: List abbreviations in stepper are confusing
Date: Fri, 29 Apr 2016 13:44:38 +0000

 --f46d04426cceaf045a05319fd8e0
 Content-Type: text/plain; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 Hi John,
 
 Thanks for the comprehensive response. Yes, it makes sense. I=E2=80=99ll ju=
 st have
 to figure out how to explain it.
 
 Thanks,
 Jesse
 
 On Thu, Apr 28, 2016 at 10:49 AM John Clements <clements@brinckerhoff.org>
 wrote:
 
 >
 > > On Apr 28, 2016, at 2:36 AM, jesse@eecs.northwestern.edu wrote:
 > >
 > > A new problem report is waiting at
 > >  http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D15296
 > >
 > > Reported by Jesse Tov for release: 6.4
 > >
 > > *** Description:
 > > When in BSL with list abbreviations or in ISL, it the stepper reduces
 > empty to '() and cons to list:
 > >
 > > (cons 3 (cons 4 empty))
 > > =3D>
 > > (cons 3 (cons 4 '()))
 > > =3D>
 > > (cons 3 (list 4))
 > > =3D>
 > > (list 3 4)
 >
 > This is deliberate, and I believe it matches the behavior of the printer
 > in the interactions window, and in fact I think you can assemble a fairly
 > sane algebraic semantics for this.
 >
 > Actually, I think there are two separate things here:
 >
 > 1) HtDP now uses =E2=80=98() as the canonical representation of the empty=
  list. If
 > you take a look at HtDP/2e, I think you=E2=80=99ll see a consistent use o=
 f =E2=80=98()
 > rather than =E2=80=98empty=E2=80=99. so that=E2=80=99s thing one.
 >
 > 2) Starting with the =E2=80=9CBSL with List Abbreviations=E2=80=9D langua=
 ge, the set of
 > lists is not (Rec Lst (U =E2=80=98() (cons Any Lst)), but rather (U =E2=
 =80=98() (list Any
 > Any =E2=80=A6)). I believe the goal here is to allow reasonably concise
 > representations of lists containing lists, etc., that would otherwise be
 > difficult to read.
 >
 > As an aside=E2=80=A6 it does seem to me that it might be a wee bit simple=
 r to use
 > (list) as the representation of the empty list in these language levels.
 >
 > Really, at the end of the day, my goal is to support HtDP=E2=80=99s pedag=
 ogic
 > decisions.
 >
 > Does this make sense?
 >
 > John
 >
 >
 >
 > >
 > > This is confusing to students trying to learn how to reduce programs by
 > hand. Are those arithmetic steps? What is even happening?
 > >
 > > *** How to repeat:
 > > Paste (cons 3 (cons 4 empty)) into an empty definitions window set to
 > Intermediate Student. Start the stepper and step.
 > >
 > > *** Environment:
 > > macosx "Darwin sublevel 15.4.0 Darwin Kernel Version 15.4.0: Fri Feb 26
 > 22:08:05 PST 2016; root:xnu-3248.40.184~3/RELEASE_X86_64 x86_64"
 > (x86_64-macosx/3m) (get-display-depth) =3D 32
 > > Human Language: english
 > > (current-memory-use) 954207108
 > > raco pkg (show):
 > > Installation-wide:
 > > Package            Checksum     Source
 > > main-distribution  2820602f...  catalog main-distribution
 > > racket-lib         f678d8f6...  catalog racket-lib
 > > [188 auto-installed packages not shown]
 > > User-specific for installation "6.4":
 > > Package            Checksum             Source
 > > drracket-vim-tool  cc63333d...          url...-vim-tool.git
 > >
 > >
 > >
 > > Collections:
 > > ("/Users/tov/Library/Racket/6.4/collects"
 > > (non-existent-path))
 > > ("/Applications/Racket v6.4/collects"
 > > ("acks" "compiler" "data" "db" "dynext" "ffi" "file" "info"
 > "info-domain" "json" "launcher" "net" "openssl" "pkg" "planet" "racket"
 > "raco" "reader" "realm" "s-exp" "setup" "syntax" "unstable" "version"
 > "xml"))
 > >
 > > Recent Internal Errors:
 > > Computer Language: (("Teaching Languages" "How to Design Programs"
 > "Intermediate Student") (#(#t constructor repeating-decimal #f #t none) #=
 f
 > () #f))
 > >
 >
 >
 >
 >
 
 --f46d04426cceaf045a05319fd8e0
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 <div dir=3D"ltr">Hi John,<div><br></div><div>Thanks for the comprehensive r=
 esponse. Yes, it makes sense. I=E2=80=99ll just have to figure out how to e=
 xplain it.</div><div><br></div><div>Thanks,</div><div>Jesse</div></div><br>=
 <div class=3D"gmail_quote"><div dir=3D"ltr">On Thu, Apr 28, 2016 at 10:49 A=
 M John Clements &lt;<a href=3D"mailto:clements@brinckerhoff.org">clements@b=
 rinckerhoff.org</a>&gt; wrote:<br></div><blockquote class=3D"gmail_quote" s=
 tyle=3D"margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><br>
 &gt; On Apr 28, 2016, at 2:36 AM, <a href=3D"mailto:jesse@eecs.northwestern=
 .edu" target=3D"_blank">jesse@eecs.northwestern.edu</a> wrote:<br>
 &gt;<br>
 &gt; A new problem report is waiting at<br>
 &gt;=C2=A0 <a href=3D"http://bugs.racket-lang.org/query/?cmd=3Dview&amp;pr=
 =3D15296" rel=3D"noreferrer" target=3D"_blank">http://bugs.racket-lang.org/=
 query/?cmd=3Dview&amp;pr=3D15296</a><br>
 &gt;<br>
 &gt; Reported by Jesse Tov for release: 6.4<br>
 &gt;<br>
 &gt; *** Description:<br>
 &gt; When in BSL with list abbreviations or in ISL, it the stepper reduces =
 empty to &#39;() and cons to list:<br>
 &gt;<br>
 &gt; (cons 3 (cons 4 empty))<br>
 &gt; =3D&gt;<br>
 &gt; (cons 3 (cons 4 &#39;()))<br>
 &gt; =3D&gt;<br>
 &gt; (cons 3 (list 4))<br>
 &gt; =3D&gt;<br>
 &gt; (list 3 4)<br>
 <br>
 This is deliberate, and I believe it matches the behavior of the printer in=
  the interactions window, and in fact I think you can assemble a fairly san=
 e algebraic semantics for this.<br>
 <br>
 Actually, I think there are two separate things here:<br>
 <br>
 1) HtDP now uses =E2=80=98() as the canonical representation of the empty l=
 ist. If you take a look at HtDP/2e, I think you=E2=80=99ll see a consistent=
  use of =E2=80=98() rather than =E2=80=98empty=E2=80=99. so that=E2=80=99s =
 thing one.<br>
 <br>
 2) Starting with the =E2=80=9CBSL with List Abbreviations=E2=80=9D language=
 , the set of lists is not (Rec Lst (U =E2=80=98() (cons Any Lst)), but rath=
 er (U =E2=80=98() (list Any Any =E2=80=A6)). I believe the goal here is to =
 allow reasonably concise representations of lists containing lists, etc., t=
 hat would otherwise be difficult to read.<br>
 <br>
 As an aside=E2=80=A6 it does seem to me that it might be a wee bit simpler =
 to use (list) as the representation of the empty list in these language lev=
 els.<br>
 <br>
 Really, at the end of the day, my goal is to support HtDP=E2=80=99s pedagog=
 ic decisions.<br>
 <br>
 Does this make sense?<br>
 <br>
 John<br>
 <br>
 <br>
 <br>
 &gt;<br>
 &gt; This is confusing to students trying to learn how to reduce programs b=
 y hand. Are those arithmetic steps? What is even happening?<br>
 &gt;<br>
 &gt; *** How to repeat:<br>
 &gt; Paste (cons 3 (cons 4 empty)) into an empty definitions window set to =
 Intermediate Student. Start the stepper and step.<br>
 &gt;<br>
 &gt; *** Environment:<br>
 &gt; macosx &quot;Darwin sublevel 15.4.0 Darwin Kernel Version 15.4.0: Fri =
 Feb 26 22:08:05 PST 2016; root:xnu-3248.40.184~3/RELEASE_X86_64 x86_64&quot=
 ; (x86_64-macosx/3m) (get-display-depth) =3D 32<br>
 &gt; Human Language: english<br>
 &gt; (current-memory-use) 954207108<br>
 &gt; raco pkg (show):<br>
 &gt; Installation-wide:<br>
 &gt; Package=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 Checksum=C2=A0 =C2=A0=
  =C2=A0Source<br>
 &gt; main-distribution=C2=A0 2820602f...=C2=A0 catalog main-distribution<br=
 >
 &gt; racket-lib=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0f678d8f6...=C2=A0 catalog =
 racket-lib<br>
 &gt; [188 auto-installed packages not shown]<br>
 &gt; User-specific for installation &quot;6.4&quot;:<br>
 &gt; Package=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 Checksum=C2=A0 =C2=A0=
  =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Source<br>
 &gt; drracket-vim-tool=C2=A0 cc63333d...=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =
 url...-vim-tool.git<br>
 &gt;<br>
 &gt;<br>
 &gt;<br>
 &gt; Collections:<br>
 &gt; (&quot;/Users/tov/Library/Racket/6.4/collects&quot;<br>
 &gt; (non-existent-path))<br>
 &gt; (&quot;/Applications/Racket v6.4/collects&quot;<br>
 &gt; (&quot;acks&quot; &quot;compiler&quot; &quot;data&quot; &quot;db&quot;=
  &quot;dynext&quot; &quot;ffi&quot; &quot;file&quot; &quot;info&quot; &quot=
 ;info-domain&quot; &quot;json&quot; &quot;launcher&quot; &quot;net&quot; &q=
 uot;openssl&quot; &quot;pkg&quot; &quot;planet&quot; &quot;racket&quot; &qu=
 ot;raco&quot; &quot;reader&quot; &quot;realm&quot; &quot;s-exp&quot; &quot;=
 setup&quot; &quot;syntax&quot; &quot;unstable&quot; &quot;version&quot; &qu=
 ot;xml&quot;))<br>
 &gt;<br>
 &gt; Recent Internal Errors:<br>
 &gt; Computer Language: ((&quot;Teaching Languages&quot; &quot;How to Desig=
 n Programs&quot; &quot;Intermediate Student&quot;) (#(#t constructor repeat=
 ing-decimal #f #t none) #f () #f))<br>
 &gt;<br>
 <br>
 <br>
 <br>
 </blockquote></div>
 
 --f46d04426cceaf045a05319fd8e0--
From: Robby Findler <robby@eecs.northwestern.edu>
To: "Jesse A. Tov" <jesse@eecs.northwestern.edu>
Cc: John Clements <clements@brinckerhoff.org>, bugs <bugs@racket-lang.org>,
        nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>,
        Matthias Felleisen <matthias@ccs.neu.edu>
Subject: Re: [racket-bug] all/15296: List abbreviations in stepper are confusing
Date: Fri, 29 Apr 2016 09:29:48 -0500

 One way would be to not use "empty" but instead write '() everywhere.
 
 This will have the advantage that you won't get confused things like:
 
   '(1 empty true 3)
 
 later on.
 
 Robby
 
 
 On Fri, Apr 29, 2016 at 8:44 AM, Jesse A. Tov
 <jesse@eecs.northwestern.edu> wrote:
 > Hi John,
 >
 > Thanks for the comprehensive response. Yes, it makes sense. I’ll just have
 > to figure out how to explain it.
 >
 > Thanks,
 > Jesse
 >
 > On Thu, Apr 28, 2016 at 10:49 AM John Clements <clements@brinckerhoff.org>
 > wrote:
 >>
 >>
 >> > On Apr 28, 2016, at 2:36 AM, jesse@eecs.northwestern.edu wrote:
 >> >
 >> > A new problem report is waiting at
 >> >  http://bugs.racket-lang.org/query/?cmd=view&pr=15296
 >> >
 >> > Reported by Jesse Tov for release: 6.4
 >> >
 >> > *** Description:
 >> > When in BSL with list abbreviations or in ISL, it the stepper reduces
 >> > empty to '() and cons to list:
 >> >
 >> > (cons 3 (cons 4 empty))
 >> > =>
 >> > (cons 3 (cons 4 '()))
 >> > =>
 >> > (cons 3 (list 4))
 >> > =>
 >> > (list 3 4)
 >>
 >> This is deliberate, and I believe it matches the behavior of the printer
 >> in the interactions window, and in fact I think you can assemble a fairly
 >> sane algebraic semantics for this.
 >>
 >> Actually, I think there are two separate things here:
 >>
 >> 1) HtDP now uses ‘() as the canonical representation of the empty list. If
 >> you take a look at HtDP/2e, I think you’ll see a consistent use of ‘()
 >> rather than ‘empty’. so that’s thing one.
 >>
 >> 2) Starting with the “BSL with List Abbreviations” language, the set of
 >> lists is not (Rec Lst (U ‘() (cons Any Lst)), but rather (U ‘() (list Any
 >> Any …)). I believe the goal here is to allow reasonably concise
 >> representations of lists containing lists, etc., that would otherwise be
 >> difficult to read.
 >>
 >> As an aside… it does seem to me that it might be a wee bit simpler to use
 >> (list) as the representation of the empty list in these language levels.
 >>
 >> Really, at the end of the day, my goal is to support HtDP’s pedagogic
 >> decisions.
 >>
 >> Does this make sense?
 >>
 >> John
 >>
 >>
 >>
 >> >
 >> > This is confusing to students trying to learn how to reduce programs by
 >> > hand. Are those arithmetic steps? What is even happening?
 >> >
 >> > *** How to repeat:
 >> > Paste (cons 3 (cons 4 empty)) into an empty definitions window set to
 >> > Intermediate Student. Start the stepper and step.
 >> >
 >> > *** Environment:
 >> > macosx "Darwin sublevel 15.4.0 Darwin Kernel Version 15.4.0: Fri Feb 26
 >> > 22:08:05 PST 2016; root:xnu-3248.40.184~3/RELEASE_X86_64 x86_64"
 >> > (x86_64-macosx/3m) (get-display-depth) = 32
 >> > Human Language: english
 >> > (current-memory-use) 954207108
 >> > raco pkg (show):
 >> > Installation-wide:
 >> > Package            Checksum     Source
 >> > main-distribution  2820602f...  catalog main-distribution
 >> > racket-lib         f678d8f6...  catalog racket-lib
 >> > [188 auto-installed packages not shown]
 >> > User-specific for installation "6.4":
 >> > Package            Checksum             Source
 >> > drracket-vim-tool  cc63333d...          url...-vim-tool.git
 >> >
 >> >
 >> >
 >> > Collections:
 >> > ("/Users/tov/Library/Racket/6.4/collects"
 >> > (non-existent-path))
 >> > ("/Applications/Racket v6.4/collects"
 >> > ("acks" "compiler" "data" "db" "dynext" "ffi" "file" "info"
 >> > "info-domain" "json" "launcher" "net" "openssl" "pkg" "planet" "racket"
 >> > "raco" "reader" "realm" "s-exp" "setup" "syntax" "unstable" "version"
 >> > "xml"))
 >> >
 >> > Recent Internal Errors:
 >> > Computer Language: (("Teaching Languages" "How to Design Programs"
 >> > "Intermediate Student") (#(#t constructor repeating-decimal #f #t none) #f
 >> > () #f))
 >> >
 >>
 >>
 >>
 >
 

Class changed from "sw-bug" to "not-a-bug" by clements at Fri, 29 Apr 2016 15:52:36 -0400
Reason>>> stepper's behavior matches that of interactions window

Responsible changed from "nobody" to "clements" by clements at Fri, 29 Apr 2016 15:52:36 -0400
Reason>>> stepper issue

State changed from "open" to "closed" by clements at Fri, 29 Apr 2016 15:52:36 -0400
Reason>>> issue resolved

