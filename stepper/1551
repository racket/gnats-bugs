From robby@cs.rice.edu  Thu Jun 29 10:12:14 2000
Received: from localhost (quincy.rice.edu [128.42.18.232])
	by cs.rice.edu (8.9.0/8.9.0) with ESMTP id KAA22846
	for <plt-gnats>; Thu, 29 Jun 2000 10:12:13 -0500 (CDT)
Message-Id: <200006291512.KAA22846@cs.rice.edu>
Date: Thu, 29 Jun 2000 10:12:13 -0500 (CDT)
From: robby@cs.rice.edu
To: plt-gnats@cs.rice.edu
Subject: stepper internal error

>Number:         1551
>Category:       stepper
>Synopsis:       stepper internal error
>Class:          sw-bug
>Responsible:    steck
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Thu Jun 29 11:15:04 -0400 2000
>Last-Modified:  Mon May 05 15:46:54 -0400 2008
>Originator:     Robert Bruce Findler
>Organization:
titan
>Submitter-Id:   unknown
>Release:        101
>Environment:
windows (win32\i386)
Tools: ("stepper" "syncheck" "teachscheme-survey" "unit-bundle")
Docs Installed:
("drscheme" "help" "icons" "misclib" "mred" "mzscheme" "r5rs" "teachpack")
Collections:
(("C:\\Program Files\\PLT\\collects" ("afm" "browser" "cogen" "compiler" "doc" "drscheme" "drscheme-jr" "dynext" "errortrace" "framework" "games" "graphics" "help" "hierlist" "htdp" "icons" "launcher" "make" "mred" "mzlib" "mzscheme" "net" "slibinit" "stepper" "userspce" "xml" "zodiac")))
>Description:
Try to step the program below 
>How-To-Repeat:
;Web exercise

;an atom is either a symbol, a number or a string;

;A list of atoms is either
;  1. empty or
;  2. (cons a loa) where a is an atom and loa is a list of atoms.

;Exercise 0.0.1
;begin: atom a-loa -> aloa

;wrap: atom a-loa atom -> aloa
;to consume an HTML start tag a, a list of atoms aloa, and an HTML end tag z.  It produces  a list of atoms starting with (a) followed by all the atoms in aloa ending with (z).

; function template...
;(define (wrap a aloa) 
;   (cond
;     [(empty? aloa)...]
;     [(cons? aloa)  
;       ... (first aloa)
;       ... (wrap (rest aloa))]
;     ))

;begin: atom a-loa -> aloa
;appends an atom to the beginning of a list
(define (begin a aloa) 
      (cons a aloa)
     )

;end: a-loa atom -> aloa
;appends an atom to the end of a list
(define (end aloa a)
  (cond
    [(empty? aloa) (cons a empty)]
    [(cons? aloa) (cons (first aloa) (end (rest aloa) a))])) 

(define (wrap a aloa z)
  (begin a (end aloa z)))

;Examples

(equal? (wrap '<html> empty '</html>) (cons '<html> (cons '</html> empty)))
;(equal? (wrap '<html> (cons '<title> (cons (cons 'My (cons 'First (cons 'Web (cons 'Page empty))))
;                                           (cons '</title> empty))) '</html>) 
;   (cons '<html> (cons '<title> (cons '(My First Web Page) (cons '</title> (cons '</html> empty))))))
>Fix:
>Audit-Trail:
State-Changed-From-To: open-closed
State-Changed-By: clements
State-Changed-When: Thu Jun 29 10:23:02 2000
State-Changed-Why:
... problem no longer exists in 102

>Unformatted:
