From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Tue Oct  2 14:15:50 2007
Received: from nf-out-0910.google.com (nf-out-0910.google.com [64.233.182.187])
	by champlain.ccs.neu.edu (8.13.8/8.13.7) with ESMTP id l92IFnTG025549
	for <bugs@bugs.plt-scheme.org>; Tue, 2 Oct 2007 14:15:50 -0400
Message-Id: <200710021815.l92IFiE3025543@champlain.ccs.neu.edu>
Date: Tue, 2 Oct 2007 14:15:44 -0400
From: cce@ccs.neu.edu
To: bugs@plt-scheme.org
Subject: Beginning Student allows lambda and list

>Number:         8973
>Category:       htdp
>Synopsis:       Beginning Student allows lambda and list
>Class:          sw-bug
>Responsible:    matthias
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Tue Oct 02 14:20:01 -0400 2007
>Closed-Date:    Mon Oct 08 20:02:37 -0400 2007
>Last-Modified:  Sun Apr 06 10:55:59 -0400 2008
>Originator:     Carl Eastlund
>Organization:
plt
>Submitter-Id:   unknown
>Release:        371.3-svn2oct2007
>Environment:
macosx "Darwin Kauai.ccs.neu.edu 8.10.0 Darwin Kernel Version 8.10.0: Wed May 23 16:50:59 PDT 2007; root:xnu-792.21.3~1/RELEASE_PPC Power Macintosh powerpc" (ppc-macosx/3m) (get-display-depth) = 16
Docs Installed:
(("/Users/cce/Projects/plt-trunk/doc" "r5rs" "mzscheme" "mred" "help" "tour" "drscheme" "srfi" "mzlib" "misclib" "mrlib" "framework" "foreign" "mzc" "tools" "insidemz" "web-server" "swindle" "plot" "gui" "guide" "quick" "reference" "release-notes" "scribble" "t-y-scheme" "tex2page" "beginning" "beginning-abbr" "intermediate" "intermediate-lambda" "advanced" "teachpack" "teachpack-htdc" "profj-beginner" "profj-intermediate" "profj-intermediate-access" "profj-advanced") (* "/Users/cce/Library/PLT Scheme/planet/300/371.3/cache/cce/dracula.plt/1/7/language/acl2-html-docs"))
Human Language: english
(current-memory-use) 62842536

Collections:
(("/Users/cce/Library/PLT Scheme/371.3/collects" non-existent-path) ("/Users/cce/Projects/plt-trunk/collects" ".svn" "afm" "algol60" "big" "browser" "combinator-parser" "compiler" "config" "defaults" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "framework" "frtime" "games" "graphics" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu-module" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrflow" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "mztake" "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profj" "profjWizard" "r5rs" "readline" "repos-time-stamp" "scribble" "scribblings" "setup" "sgl" "sirmail" "skipper" "slatex" "slideshow" "srfi" "srpersist" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "tests" "tex2page" "texpict" "trace" "version" "waterworld" "web-server" "wxme" "xelda" "xml"))
Computer Language: (("Teaching Languages" "How to Design Programs" "Beginning Student") (#6(#t constructor repeating-decimal #f #t none) #f ()))
>Description:
The 'list' function works in Beginning Student; I expected it to be disabled until Beginning Student with List Abbreviations.

While 'lambda' does not work in general, it is allowed for function bodies.  I expected it to be disabled until Intermediate Student with Lambda.
>How-To-Repeat:
(define list3 (lambda (x y z) (list x y z)))
(list3 'a 'b 'c)
>Fix:
>Audit-Trail:
From: Eli Barzilay <eli@barzilay.org>
To: cce@ccs.neu.edu, bugs@plt-scheme.org
Cc: matthias@plt-scheme.org, sk@plt-scheme.org, mflatt@plt-scheme.org,
        robby@plt-scheme.org, clements@plt-scheme.org, jay@plt-scheme.org,
        meunier@plt-scheme.org, sowens@plt-scheme.org, kathyg@plt-scheme.org,
        awick@plt-scheme.org, jacobm@plt-scheme.org, cce@plt-scheme.org,
        dalev@plt-scheme.org, samth@plt-scheme.org, ryanc@plt-scheme.org
Subject: Re: [plt-bug] all/8973: Beginning Student allows lambda and list
Date: Tue, 2 Oct 2007 14:33:21 -0400

 On Oct  2, cce@ccs.neu.edu wrote:
 > While 'lambda' does not work in general, it is allowed for function
 > bodies.  I expected it to be disabled until Intermediate Student
 > with Lambda.
 
 This part of your report is a feature.  It's accommodating people who
 insist on teaching students to always (define foo (lambda ...)) when
 they define functions.  (And `lambda' shouldn't work anywhere else.)
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                   http://www.barzilay.org/                 Maze is Life!
From: "Carl Eastlund" <cce@ccs.neu.edu>
To: "Eli Barzilay" <eli@barzilay.org>
Cc: bugs@plt-scheme.org, matthias@plt-scheme.org, sk@plt-scheme.org,
        mflatt@plt-scheme.org, robby@plt-scheme.org, clements@plt-scheme.org,
        jay@plt-scheme.org, meunier@plt-scheme.org, sowens@plt-scheme.org,
        kathyg@plt-scheme.org, awick@plt-scheme.org, jacobm@plt-scheme.org,
        dalev@plt-scheme.org, samth@plt-scheme.org, ryanc@plt-scheme.org
Subject: Re: [plt-bug] all/8973: Beginning Student allows lambda and list
Date: Tue, 2 Oct 2007 14:37:39 -0400

 On 10/2/07, Eli Barzilay <eli@barzilay.org> wrote:
 > On Oct  2, cce@ccs.neu.edu wrote:
 > > While 'lambda' does not work in general, it is allowed for function
 > > bodies.  I expected it to be disabled until Intermediate Student
 > > with Lambda.
 >
 > This part of your report is a feature.  It's accommodating people who
 > insist on teaching students to always (define foo (lambda ...)) when
 > they define functions.  (And `lambda' shouldn't work anywhere else.)
 
 Thanks.  This is why I put "I expect it to" rather than "It should", I
 figured there might be some reason these things are enabled.  But one
 of the TAs here corrected students for using these things, thinking
 they were not beginning features, and was confused to find that they
 are.
 
 -- 
 Carl Eastlund
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Carl Eastlund <cce@ccs.neu.edu>
Cc: Eli Barzilay <eli@barzilay.org>, bugs@plt-scheme.org
Subject: Re: [plt-bug] all/8973: Beginning Student allows lambda and list
Date: Sun, 7 Oct 2007 14:33:56 -0400

 We have to stick to this decision for now. Let's close off the report  
 -- Matthias
 
 
 On Oct 2, 2007, at 2:37 PM, Carl Eastlund wrote:
 
 > On 10/2/07, Eli Barzilay <eli@barzilay.org> wrote:
 >> On Oct  2, cce@ccs.neu.edu wrote:
 >>> While 'lambda' does not work in general, it is allowed for function
 >>> bodies.  I expected it to be disabled until Intermediate Student
 >>> with Lambda.
 >>
 >> This part of your report is a feature.  It's accommodating people who
 >> insist on teaching students to always (define foo (lambda ...)) when
 >> they define functions.  (And `lambda' shouldn't work anywhere else.)
 >
 > Thanks.  This is why I put "I expect it to" rather than "It should", I
 > figured there might be some reason these things are enabled.  But one
 > of the TAs here corrected students for using these things, thinking
 > they were not beginning features, and was confused to find that they
 > are.
 >
 > -- 
 > Carl Eastlund
 
From: "Carl Eastlund" <cce@ccs.neu.edu>
To: "Matthias Felleisen" <matthias@ccs.neu.edu>
Cc: "Eli Barzilay" <eli@barzilay.org>, bugs@plt-scheme.org
Subject: Re: [plt-bug] all/8973: Beginning Student allows lambda and list
Date: Sun, 7 Oct 2007 20:35:13 -0400

 What about list?
 
 On 10/7/07, Matthias Felleisen <matthias@ccs.neu.edu> wrote:
 > We have to stick to this decision for now. Let's close off the report
 > -- Matthias
 >
 >
 > On Oct 2, 2007, at 2:37 PM, Carl Eastlund wrote:
 >
 > > On 10/2/07, Eli Barzilay <eli@barzilay.org> wrote:
 > >> On Oct  2, cce@ccs.neu.edu wrote:
 > >>> While 'lambda' does not work in general, it is allowed for function
 > >>> bodies.  I expected it to be disabled until Intermediate Student
 > >>> with Lambda.
 > >>
 > >> This part of your report is a feature.  It's accommodating people who
 > >> insist on teaching students to always (define foo (lambda ...)) when
 > >> they define functions.  (And `lambda' shouldn't work anywhere else.)
 > >
 > > Thanks.  This is why I put "I expect it to" rather than "It should", I
 > > figured there might be some reason these things are enabled.  But one
 > > of the TAs here corrected students for using these things, thinking
 > > they were not beginning features, and was confused to find that they
 > > are.
 > >
 > > --
 > > Carl Eastlund
 >
 >
 >
 
 
 -- 
 Carl Eastlund
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: "Carl Eastlund" <cce@ccs.neu.edu>
Cc: Eli Barzilay <eli@barzilay.org>, bugs@plt-scheme.org,
        Matthew Flatt <mflatt@cs.utah.edu>
Subject: Re: [plt-bug] all/8973: Beginning Student allows lambda and list
Date: Sun, 7 Oct 2007 20:59:17 -0400

 Matthew included it and had a reason to do so. I forgot why but I do  
 recall that I agreed eventually.
 
 On Oct 7, 2007, at 8:35 PM, Carl Eastlund wrote:
 
 > What about list?
 >
 > On 10/7/07, Matthias Felleisen <matthias@ccs.neu.edu> wrote:
 >> We have to stick to this decision for now. Let's close off the report
 >> -- Matthias
 >>
 >>
 >> On Oct 2, 2007, at 2:37 PM, Carl Eastlund wrote:
 >>
 >>> On 10/2/07, Eli Barzilay <eli@barzilay.org> wrote:
 >>>> On Oct  2, cce@ccs.neu.edu wrote:
 >>>>> While 'lambda' does not work in general, it is allowed for  
 >>>>> function
 >>>>> bodies.  I expected it to be disabled until Intermediate Student
 >>>>> with Lambda.
 >>>>
 >>>> This part of your report is a feature.  It's accommodating  
 >>>> people who
 >>>> insist on teaching students to always (define foo (lambda ...))  
 >>>> when
 >>>> they define functions.  (And `lambda' shouldn't work anywhere  
 >>>> else.)
 >>>
 >>> Thanks.  This is why I put "I expect it to" rather than "It  
 >>> should", I
 >>> figured there might be some reason these things are enabled.  But  
 >>> one
 >>> of the TAs here corrected students for using these things, thinking
 >>> they were not beginning features, and was confused to find that they
 >>> are.
 >>>
 >>> --
 >>> Carl Eastlund
 >>
 >>
 >>
 >
 >
 > -- 
 > Carl Eastlund
 
From: Matthew Flatt <mflatt@cs.utah.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: "Carl Eastlund" <cce@ccs.neu.edu>, Eli Barzilay <eli@barzilay.org>,
        bugs@plt-scheme.org
Subject: Re: [plt-bug] all/8973: Beginning Student allows lambda and list
Date: Mon, 8 Oct 2007 05:01:56 -0600

 At Sun, 7 Oct 2007 20:59:17 -0400, Matthias Felleisen wrote:
 > Matthew included it and had a reason to do so. I forgot why but I do  
 > recall that I agreed eventually.
 
 In my class, I wanted to use `list' only on input for a while, to help
 reinforce that `list' produces `cons'es.
 
 Matthew
 
From: "Robby Findler" <robby@cs.uchicago.edu>
To: "Matthias Felleisen" <matthias@ccs.neu.edu>
Cc: "Matthew Flatt" <mflatt@cs.utah.edu>, "Carl Eastlund" <cce@ccs.neu.edu>,
        "Eli Barzilay" <eli@barzilay.org>, bugs@plt-scheme.org
Subject: Re: [plt-bug] all/8973: Beginning Student allows lambda and list
Date: Mon, 8 Oct 2007 08:17:25 -0500

 I think we should leave `list' in.
 
 Robby
 
 On 10/8/07, Matthias Felleisen <matthias@ccs.neu.edu> wrote:
 > Yes, showing (list 1 2 3) printed as (cons 1 (cons 2 (cons 3 empty)))
 > as you switch is a good idea. I guess it could be accomplished via a
 > preference switch.
 >
 > Should we leave it in? -- Matthias
 >
 >
 >
 >
 > On Oct 8, 2007, at 7:01 AM, Matthew Flatt wrote:
 >
 > > At Sun, 7 Oct 2007 20:59:17 -0400, Matthias Felleisen wrote:
 > >> Matthew included it and had a reason to do so. I forgot why but I do
 > >> recall that I agreed eventually.
 > >
 > > In my class, I wanted to use `list' only on input for a while, to help
 > > reinforce that `list' produces `cons'es.
 > >
 > > Matthew
 > >
 >
 >
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: Carl Eastlund <cce@ccs.neu.edu>, Eli Barzilay <eli@barzilay.org>,
        bugs@plt-scheme.org, Robby Findler <robby@cs.uchicago.edu>
Subject: Re: [plt-bug] all/8973: Beginning Student allows lambda and list
Date: Mon, 8 Oct 2007 09:15:40 -0400

 Yes, showing (list 1 2 3) printed as (cons 1 (cons 2 (cons 3 empty)))  
 as you switch is a good idea. I guess it could be accomplished via a  
 preference switch.
 
 Should we leave it in? -- Matthias
 
 
 
 
 On Oct 8, 2007, at 7:01 AM, Matthew Flatt wrote:
 
 > At Sun, 7 Oct 2007 20:59:17 -0400, Matthias Felleisen wrote:
 >> Matthew included it and had a reason to do so. I forgot why but I do
 >> recall that I agreed eventually.
 >
 > In my class, I wanted to use `list' only on input for a while, to help
 > reinforce that `list' produces `cons'es.
 >
 > Matthew
 >
 

State changed from "open" to "closed" by cce at Mon, 08 Oct 2007 20:02:37 -0400
Reason>>> Not a bug.

From: "Carl Eastlund" <cce@ccs.neu.edu>
To: "Robby Findler" <robby@cs.uchicago.edu>
Cc: "Matthias Felleisen" <matthias@ccs.neu.edu>,
        "Matthew Flatt" <mflatt@cs.utah.edu>,
        "Eli Barzilay" <eli@barzilay.org>, bugs@plt-scheme.org
Subject: Re: [plt-bug] all/8973: Beginning Student allows lambda and list
Date: Mon, 8 Oct 2007 20:01:37 -0400

 Ok, everything's been addressed, I'll close the bug report if it's still open.
 
 --Carl
 
 On 10/8/07, Robby Findler <robby@cs.uchicago.edu> wrote:
 > I think we should leave `list' in.
 >
 > Robby
 >
 > On 10/8/07, Matthias Felleisen <matthias@ccs.neu.edu> wrote:
 > > Yes, showing (list 1 2 3) printed as (cons 1 (cons 2 (cons 3 empty)))
 > > as you switch is a good idea. I guess it could be accomplished via a
 > > preference switch.
 > >
 > > Should we leave it in? -- Matthias
 > >
 > >
 > >
 > >
 > > On Oct 8, 2007, at 7:01 AM, Matthew Flatt wrote:
 > >
 > > > At Sun, 7 Oct 2007 20:59:17 -0400, Matthias Felleisen wrote:
 > > >> Matthew included it and had a reason to do so. I forgot why but I do
 > > >> recall that I agreed eventually.
 > > >
 > > > In my class, I wanted to use `list' only on input for a while, to help
 > > > reinforce that `list' produces `cons'es.
 > > >
 > > > Matthew


