From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Mon Feb 14 11:23:59 2011
Received: from mail-fx0-f44.google.com (mail-fx0-f44.google.com [209.85.161.44])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id p1EGNunD022177
	for <bugs@bugs.plt-scheme.org>; Mon, 14 Feb 2011 11:23:57 -0500
Message-Id: <201102141623.p1EGNqBG022172@champlain.ccs.neu.edu>
Date: Mon, 14 Feb 2011 11:23:52 -0500
From: samth@ccs.neu.edu
To: bugs@racket-lang.org
Subject: circular data prints with 'make-signature' in advanced student

>Number:         11737
>Category:       htdp
>Synopsis:       circular data prints with 'make-signature' in advanced student
>Class:          sw-bug
>Responsible:    sperber
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Mon Feb 14 11:24:01 -0500 2011
>Closed-Date:    Wed Apr 06 09:52:20 -0400 2011
>Last-Modified:  Wed Apr 06 09:52:20 -0400 2011
>Originator:     Sam TH
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.1.0.2--2011-02-09(6b1112a/g)
>Environment:
unix "Linux punge 2.6.32-28-generic #55-Ubuntu SMP Mon Jan 10 21:21:01 UTC 2011 i686 GNU/Linux" (i386-linux/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 149034220

Collections:
("/home/samth/sw/plt/add-on/5.1.0.2/collects"
 (non-existent-path))
("/home/samth/sw/plt/collects"
 ("honu" "eopl" "tests" "typed" "test-engine" "errortrace" "sgl" "plot" "combinator-parser" "mzcom" "test-box-recovery" "version" ".gitignore" "defaults" "deinprogramm" "s-exp" "handin-client" "srpersist" "launcher" "scriblib" "browser" "unstable" "r5rs" "gui-debugger" "at-exp" "swindle" "scheme" "reader" "frtime" "meta" "racket" "file" "racklog" "data" "slatex" "net" "wxme" "syntax" "scribblings" "parser-tools" "ffi" "hierlist" "handin-server" "2htdp" "framework" "mz" "openssl" "dynext" "datalog" "slideshow" "games" "raco" "picturing-programs" "xml" "texpict" "graphics" "mzscheme" "profile" "help" "web-server" "schelog" "trace" "make" "algol60" "mzlib" "rackunit" "icons" "plai" "sirmail" "lazy" "mrlib" "setup" "string-constants" "syntax-color" "r6rs" "drscheme" "lang" "repo-time-stamp" "afm" "planet" "typed-scheme" "info-domain" "config" "guibuilder" "stepper" "mred" "embedded-gui" "preprocessor" "readline" "htdp" "compiler" "srfi" "waterworld" "macro-debugger" "html" "scri!
 bble" "mysterx" "redex" "drracket" "rnrs" "teachpack" "tex2page" "schemeunit"))
("/home/samth/work/teaching/213-11/trunk/"
 ("progs1" ".svn" "classN" "inarow.rkt~" "admin" "class2" "svn_authz.conf~" "web" "progsN" "gen-pairs.rkt~" "quizzes" "bugs" "lab-solutions" "info-domain" "student-list~" "exam1" "progs0" "progs2" "notes" "class3" "lol" "class1" "class0" "class-system-02-07.plt" "class0.plt"))

Computer Language: (("Teaching Languages" "How to Design Programs" "Advanced Student") (#(#t constructor repeating-decimal #t #t none) #f ()))
>Description:
This program (in Advanced Student)

(define-struct f (x))
(define z (make-f 1))
(set-f-x! z f)
z

prints:

(make-f (make-signature ...))

'make-signature' should not appear in the output.
>How-To-Repeat:
>Fix:
>Audit-Trail:
Responsible changed from "nobody" to "sperber" by ryanc at Wed, 16 Feb 2011 17:17:10 -0500
Reason>>> signatures -- please reassign if incorrect

From: Michael Sperber <sperber@deinprogramm.de>
To: bugs@racket-lang.org, samth@ccs.neu.edu
Cc: 
Subject: Re: htdp/11737: circular data prints with 'make-signature' in advanced student
Date: Wed, 23 Feb 2011 15:53:56 +0100

 Why should `make-signature' not appear in the output?  What should
 appear instead?  (It's a real question - I don't know that there's a
 general approach in the teaching languages to printing opaque values.)
 
 -- 
 Cheers =8-} Mike
 Friede, Völkerverständigung und überhaupt blabla
From: Sam Tobin-Hochstadt <samth@ccs.neu.edu>
To: Michael Sperber <sperber@deinprogramm.de>
Cc: bugs@racket-lang.org
Subject: Re: htdp/11737: circular data prints with 'make-signature' in
 advanced student
Date: Wed, 23 Feb 2011 10:34:08 -0500

 On Wed, Feb 23, 2011 at 9:53 AM, Michael Sperber
 <sperber@deinprogramm.de> wrote:
 >
 > Why should `make-signature' not appear in the output?  What should
 > appear instead?  (It's a real question - I don't know that there's a
 > general approach in the teaching languages to printing opaque values.)
 
 `make-signature' does not appear in the documentation or in the
 program. How am I supposed to know why it's there, or what it means?
 -- 
 sam th
 samth@ccs.neu.edu
 
From: Michael Sperber <sperber@deinprogramm.de>
To: Sam Tobin-Hochstadt <samth@ccs.neu.edu>
Cc: bugs@racket-lang.org
Subject: Re: htdp/11737: circular data prints with 'make-signature' in advanced student
Date: Wed, 23 Feb 2011 17:16:40 +0100

 Sam Tobin-Hochstadt <samth@ccs.neu.edu> writes:
 
 > On Wed, Feb 23, 2011 at 9:53 AM, Michael Sperber
 > <sperber@deinprogramm.de> wrote:
 >>
 >> Why should `make-signature' not appear in the output?  What should
 >> appear instead?  (It's a real question - I don't know that there's a
 >> general approach in the teaching languages to printing opaque values.)
 >
 > `make-signature' does not appear in the documentation or in the
 > program. How am I supposed to know why it's there, or what it means?
 
 In *SL, constructors for compound data always have a `make-' prefix
 (well, they used to) - so I'd assume that students know that
 `(make-signature ...)' denotes a signature, made by some internal
 constructor.  Anyway, what about the second question?
 
 -- 
 Cheers =8-} Mike
 Friede, Völkerverständigung und überhaupt blabla
From: Michael Sperber <sperber@deinprogramm.de>
To: Sam Tobin-Hochstadt <samth@ccs.neu.edu>
Cc: bugs@racket-lang.org, bug-notification <bug-notification@racket-lang.org>
Subject: Re: htdp/11737: circular data prints with 'make-signature' in advanced student
Date: Wed, 23 Feb 2011 17:50:21 +0100

 Sam Tobin-Hochstadt <samth@ccs.neu.edu> writes:
 
 > I don't think there's any other internal data structures that ever
 > appear in the output of *SL programs, which is an invariant that I
 > think we should preserve.  Also, signatures are a feature that doesn't
 > appear in the program, and I don't know of any other cases where a
 > feature appears in a printout that wasn't used in the program.
 
 I don't understand - of course, signatures appear in a program, and I
 don't know where you'd see them if you didn't use them.
 
 -- 
 Cheers =8-} Mike
 Friede, Völkerverständigung und überhaupt blabla
From: Sam Tobin-Hochstadt <samth@ccs.neu.edu>
To: Michael Sperber <sperber@deinprogramm.de>
Cc: bugs@racket-lang.org, bug-notification <bug-notification@racket-lang.org>
Subject: Re: htdp/11737: circular data prints with 'make-signature' in
 advanced student
Date: Wed, 23 Feb 2011 11:44:50 -0500

 [readded bug-notification]
 
 On Wed, Feb 23, 2011 at 11:16 AM, Michael Sperber
 <sperber@deinprogramm.de> wrote:
 >
 > Sam Tobin-Hochstadt <samth@ccs.neu.edu> writes:
 >
 >> On Wed, Feb 23, 2011 at 9:53 AM, Michael Sperber
 >> <sperber@deinprogramm.de> wrote:
 >>>
 >>> Why should `make-signature' not appear in the output?  What should
 >>> appear instead?  (It's a real question - I don't know that there's a
 >>> general approach in the teaching languages to printing opaque values.)
 >>
 >> `make-signature' does not appear in the documentation or in the
 >> program. How am I supposed to know why it's there, or what it means?
 >
 > In *SL, constructors for compound data always have a `make-' prefix
 > (well, they used to) - so I'd assume that students know that
 > `(make-signature ...)' denotes a signature, made by some internal
 > constructor.  Anyway, what about the second question?
 
 I don't think there's any other internal data structures that ever
 appear in the output of *SL programs, which is an invariant that I
 think we should preserve.  Also, signatures are a feature that doesn't
 appear in the program, and I don't know of any other cases where a
 feature appears in a printout that wasn't used in the program.
 
 If the teaching languages are going to use '...' for circular parts,
 then we should use that for the whole omitted part.  I don't know what
 the right story for circular values is, though.
 -- 
 sam th
 samth@ccs.neu.edu
 
From: Sam Tobin-Hochstadt <samth@ccs.neu.edu>
To: Michael Sperber <sperber@deinprogramm.de>
Cc: bugs@racket-lang.org, bug-notification <bug-notification@racket-lang.org>
Subject: Re: htdp/11737: circular data prints with 'make-signature' in
 advanced student
Date: Wed, 23 Feb 2011 12:04:20 -0500

 On Wed, Feb 23, 2011 at 11:50 AM, Michael Sperber
 <sperber@deinprogramm.de> wrote:
 >
 > Sam Tobin-Hochstadt <samth@ccs.neu.edu> writes:
 >
 >> I don't think there's any other internal data structures that ever
 >> appear in the output of *SL programs, which is an invariant that I
 >> think we should preserve.  Also, signatures are a feature that doesn't
 >> appear in the program, and I don't know of any other cases where a
 >> feature appears in a printout that wasn't used in the program.
 >
 > I don't understand - of course, signatures appear in a program, and I
 > don't know where you'd see them if you didn't use them.
 
 My original program was:
 
 (define-struct f (x))
 (define z (make-f 1))
 (set-f-x! z f)
 z
 
 which has no signatures whatsoever.
 -- 
 sam th
 samth@ccs.neu.edu
 
From: Michael Sperber <sperber@deinprogramm.de>
To: Sam Tobin-Hochstadt <samth@ccs.neu.edu>
Cc: bugs@racket-lang.org, bug-notification <bug-notification@racket-lang.org>
Subject: Re: htdp/11737: circular data prints with 'make-signature' in advanced student
Date: Wed, 23 Feb 2011 18:15:21 +0100

 Sam Tobin-Hochstadt <samth@ccs.neu.edu> writes:
 
 > My original program was:
 >
 > (define-struct f (x))
 > (define z (make-f 1))
 > (set-f-x! z f)
 > z
 >
 > which has no signatures whatsoever.
 
 Yes, it does: `f' is a signature.
 
 -- 
 Cheers =8-} Mike
 Friede, Völkerverständigung und überhaupt blabla
From: Sam Tobin-Hochstadt <samth@ccs.neu.edu>
To: Michael Sperber <sperber@deinprogramm.de>
Cc: bugs@racket-lang.org, bug-notification <bug-notification@racket-lang.org>
Subject: Re: htdp/11737: circular data prints with 'make-signature' in
 advanced student
Date: Wed, 23 Feb 2011 12:40:05 -0500

 On Wed, Feb 23, 2011 at 12:15 PM, Michael Sperber
 <sperber@deinprogramm.de> wrote:
 >
 > Sam Tobin-Hochstadt <samth@ccs.neu.edu> writes:
 >
 >> My original program was:
 >>
 >> (define-struct f (x))
 >> (define z (make-f 1))
 >> (set-f-x! z f)
 >> z
 >>
 >> which has no signatures whatsoever.
 >
 > Yes, it does: `f' is a signature.
 
 Ah, of course, what a silly typo on my part.
 
 -- 
 sam th
 samth@ccs.neu.edu

State changed from "open" to "closed" by sperber at Wed, 06 Apr 2011 09:52:20 -0400
Reason>>> Sam acknowledged there was an unintentional typo in the 
program meant to show the problem.

