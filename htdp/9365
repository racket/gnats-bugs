From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Thu May  8 09:38:40 2008
Received: from wf-out-1314.google.com (wf-out-1314.google.com [209.85.200.171])
	by champlain.ccs.neu.edu (8.13.8/8.13.7) with ESMTP id m48Dcdpu027872
	for <bugs@bugs.plt-scheme.org>; Thu, 8 May 2008 09:38:40 -0400
Message-Id: <200805081338.m48Dcaio027867@champlain.ccs.neu.edu>
Date: Thu, 8 May 2008 09:38:36 -0400
From: mflatt@cs.utah.edu
To: bugs@plt-scheme.org
Subject: HtDP Advanced: explicit print of set! result produces `(make-set!-result ...)'

>Number:         9365
>Category:       htdp
>Synopsis:       HtDP Advanced: explicit print of set! result produces `(make-set!-result ...)'
>Class:          sw-bug
>Responsible:    robby
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Thu May 08 09:40:01 -0400 2008
>Last-Modified:  Mon Mar 16 21:52:01 -0400 2009
>Originator:     Matthew
>Organization:
plt
>Submitter-Id:   unknown
>Release:        372
>Environment:
macosx "Darwin apples-computer.local 9.2.2 Darwin Kernel Version 9.2.2: Tue Mar  4 21:17:34 PST 2008; root:xnu-1228.4.31~1/RELEASE_I386 i386 i386" (i386-macosx/3m) (get-display-depth) = 32
Docs Installed:
(("/Applications/PLT Scheme v372/doc" "r5rs" "mzscheme" "mred" "help" "tour" "drscheme" "srfi" "mzlib" "misclib" "mrlib" "framework" "foreign" "mzc" "tools" "insidemz" "web-server" "swindle" "plot" "release-notes" "t-y-scheme" "tex2page" "beginning" "beginning-abbr" "intermediate" "intermediate-lambda" "advanced" "teachpack" "teachpack-htdc" "profj-beginner" "profj-intermediate" "profj-intermediate-access" "profj-advanced"))
Human Language: english
(current-memory-use) 84876260

Collections:
(("/Users/mflatt/Library/PLT Scheme/372/collects" "afm" "algol60" "big" "browser" "collects" "combinator-parser" "compiler" "config" "defaults" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "framework" "frtime" "games" "graphics" "help" "hierlist" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mzlib" "mzscheme" "mztake" "net" "openssl" "parser-tools" "planet" "plot" "PLT" "preprocessor" "profj" "profjWizard" "r5rs" "readline" "scribble" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "tex2page" "texpict" "trace" "version" "web-server" "wxme" "xml") ("/Applications/PLT Scheme v372/collects" "afm" "algol60" "big" "browser" "collects" "combinator-parser" "compiler" "config" "defaults" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "framework" "frtime" "games" "graphics" "help" "hierlist" "htdch" "htdp!
 " "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mzlib" "mzscheme" "mztake" "net" "openssl" "parser-tools" "planet" "plot" "PLT" "preprocessor" "profj" "profjWizard" "r5rs" "readline" "scribble" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "tex2page" "texpict" "trace" "version" "web-server" "wxme" "xml"))
Computer Language: (("Teaching Languages" "How to Design Programs" "Advanced Student") (#6(#t constructor repeating-decimal #t #t none) #f ()))
>Description:
see below
>How-To-Repeat:
1. Set language to Advanced

2. Put

    (define x 12)
    (print (set! x 5))

  in the defns window

3. Click execute: the interactions window shows
   `(make-set!-result ...)' instead of `(void)'
>Fix:
>Audit-Trail:
From: "Robby Findler" <robby@cs.uchicago.edu>
To: mflatt@cs.utah.edu, bugs@plt-scheme.org
Cc: nobody@plt-scheme.org, eli@plt-scheme.org, matthias@plt-scheme.org,
        sk@plt-scheme.org, mflatt@plt-scheme.org, clements@plt-scheme.org,
        jay@plt-scheme.org, meunier@plt-scheme.org, sowens@plt-scheme.org,
        kathyg@plt-scheme.org, jacobm@plt-scheme.org, cce@plt-scheme.org,
        samth@plt-scheme.org, ryanc@plt-scheme.org
Subject: Re: [plt-bug] all/9365: HtDP Advanced: explicit print of set! result produces `(make-set!-result ...)'
Date: Thu, 8 May 2008 11:33:15 -0500

 Whose bug is this? Is it mine?
 
 Robby
 
 On Thu, May 8, 2008 at 8:40 AM,  <mflatt@cs.utah.edu> wrote:
 > A new problem report is waiting at
 >  http://bugs.plt-scheme.org/query/?cmd=view&pr=9365
 >
 > Reported by Matthew for release: 372
 >
 > *** Description:
 > see below
 >
 > *** How to repeat:
 > 1. Set language to Advanced
 >
 > 2. Put
 >
 >    (define x 12)
 >    (print (set! x 5))
 >
 >  in the defns window
 >
 > 3. Click execute: the interactions window shows
 >   `(make-set!-result ...)' instead of `(void)'
 >
 > *** Environment:
 > macosx "Darwin apples-computer.local 9.2.2 Darwin Kernel Version 9.2.2: Tue Mar  4 21:17:34 PST 2008; root:xnu-1228.4.31~1/RELEASE_I386 i386 i386" (i386-macosx/3m) (get-display-depth) = 32
 > Docs Installed:
 > (("/Applications/PLT Scheme v372/doc" "r5rs" "mzscheme" "mred" "help" "tour" "drscheme" "srfi" "mzlib" "misclib" "mrlib" "framework" "foreign" "mzc" "tools" "insidemz" "web-server" "swindle" "plot" "release-notes" "t-y-scheme" "tex2page" "beginning" "beginning-abbr" "intermediate" "intermediate-lambda" "advanced" "teachpack" "teachpack-htdc" "profj-beginner" "profj-intermediate" "profj-intermediate-access" "profj-advanced"))
 > Human Language: english
 > (current-memory-use) 84876260
 >
 > Collections:
 > (("/Users/mflatt/Library/PLT Scheme/372/collects" "afm" "algol60" "big" "browser" "collects" "combinator-parser" "compiler" "config" "defaults" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "framework" "frtime" "games" "graphics" "help" "hierlist" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mzlib" "mzscheme" "mztake" "net" "openssl" "parser-tools" "planet" "plot" "PLT" "preprocessor" "profj" "profjWizard" "r5rs" "readline" "scribble" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "tex2page" "texpict" "trace" "version" "web-server" "wxme" "xml") ("/Applications/PLT Scheme v372/collects" "afm" "algol60" "big" "browser" "collects" "combinator-parser" "compiler" "config" "defaults" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "framework" "frtime" "games" "graphics" "help" "hierlist" "htdch" "htdp!
 >  " "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mzlib" "mzscheme" "mztake" "net" "openssl" "parser-tools" "planet" "plot" "PLT" "preprocessor" "profj" "profjWizard" "r5rs" "readline" "scribble" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "tex2page" "texpict" "trace" "version" "web-server" "wxme" "xml"))
 > Computer Language: (("Teaching Languages" "How to Design Programs" "Advanced Student") (#6(#t constructor repeating-decimal #t #t none) #f ()))
 >
 >
From: Matthew Flatt <mflatt@cs.utah.edu>
To: "Robby Findler" <robby@cs.uchicago.edu>
Cc: bugs@plt-scheme.org, nobody@plt-scheme.org, eli@plt-scheme.org,
        matthias@plt-scheme.org, sk@plt-scheme.org, clements@plt-scheme.org,
        jay@plt-scheme.org, meunier@plt-scheme.org, sowens@plt-scheme.org,
        kathyg@plt-scheme.org, jacobm@plt-scheme.org, cce@plt-scheme.org,
        samth@plt-scheme.org, ryanc@plt-scheme.org
Subject: Re: [plt-bug] all/9365: HtDP Advanced: explicit print of set! result produces `(make-set!-result ...)'
Date: Thu, 15 May 2008 10:42:58 -0600

 At Thu, 8 May 2008 11:33:15 -0500, "Robby Findler" wrote:
 > > 1. Set language to Advanced
 > >
 > > 2. Put
 > >
 > >    (define x 12)
 > >    (print (set! x 5))
 > >
 > >  in the defns window
 > >
 > > 3. Click execute: the interactions window shows
 > >   `(make-set!-result ...)' instead of `(void)'
 
 This is fixed now that DrScheme sets `current-print'.
 
 The change also "fixes" a mismatch between definition-window behavior
 and interaction-window behavior. In v372, `(display 1)' as a
 definition-window expression prints the result `(void)', but it prints
 no result as an interaction expression. Now it consistently prints no
 result --- in contrast to `(set! x 5)' which (assuming `x' is defined)
 consistently prints `(void)'.
 
 I'm not sure that `(display 10)' and `(set! x 10)' should have results
 that print differently. But, then, I've forgotten the reason behind
 `set!-result', anyway.
 
 Matthew
 
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: Robby Findler <robby@cs.uchicago.edu>, bugs@plt-scheme.org
Subject: Re: [plt-bug] all/9365: HtDP Advanced: explicit print of set! result produces `(make-set!-result ...)'
Date: Thu, 15 May 2008 15:17:17 -0400

 On May 15, 2008, at 12:42 PM, Matthew Flatt wrote:
 
 > But, then, I've forgotten the reason behind
 > `set!-result', anyway.
 
 
 I didn't know it existed. Is it possible that we checked the "must be  
 in a begin sequence" dynamically before?
 
 
From: John Clements <clements@brinckerhoff.org>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: "Robby Findler" <robby@cs.uchicago.edu>, bugs@plt-scheme.org,
        nobody@plt-scheme.org, eli@plt-scheme.org, matthias@plt-scheme.org,
        sk@plt-scheme.org, clements@plt-scheme.org, jay@plt-scheme.org,
        meunier@plt-scheme.org, sowens@plt-scheme.org, kathyg@plt-scheme.org,
        jacobm@plt-scheme.org, cce@plt-scheme.org, samth@plt-scheme.org,
        ryanc@plt-scheme.org
Subject: Re: [plt-bug] all/9365: HtDP Advanced: explicit print of set! result produces `(make-set!-result ...)'
Date: Thu, 15 May 2008 14:05:26 -0700

 On May 15, 2008, at 9:42 AM, Matthew Flatt wrote:
 
 > At Thu, 8 May 2008 11:33:15 -0500, "Robby Findler" wrote:
 >>> 1. Set language to Advanced
 >>>
 >>> 2. Put
 >>>
 >>>   (define x 12)
 >>>   (print (set! x 5))
 >>>
 >>> in the defns window
 >>>
 >>> 3. Click execute: the interactions window shows
 >>>  `(make-set!-result ...)' instead of `(void)'
 >
 > This is fixed now that DrScheme sets `current-print'.
 >
 > The change also "fixes" a mismatch between definition-window behavior
 > and interaction-window behavior. In v372, `(display 1)' as a
 > definition-window expression prints the result `(void)', but it prints
 > no result as an interaction expression. Now it consistently prints no
 > result --- in contrast to `(set! x 5)' which (assuming `x' is defined)
 > consistently prints `(void)'.
 >
 > I'm not sure that `(display 10)' and `(set! x 10)' should have results
 > that print differently. But, then, I've forgotten the reason behind
 > `set!-result', anyway.
 
 I believe this was to improve the appearance of stepper steps where an  
 expression reduced to (void).  In particular, IIRC the right-hand  
 window will have nothing highlighted.
 
 John Clements
 
 
Responsible changed from "matthias" to "robby" by matthias at Mon, 16 Mar 2009 14:29:37 -0400
Reason>>> robby's bug? 

From: Robby Findler <robby@eecs.northwestern.edu>
To: bugs@plt-scheme.org
Cc: matthias@plt-scheme.org, sk@plt-scheme.org, mflatt@plt-scheme.org,
        mflatt@cs.utah.edu
Subject: Re: [plt-bug] htdp/9365 HtDP Advanced: explicit print of set! result 
	produces `(make-set!-result ...)'
Date: Mon, 16 Mar 2009 20:48:45 -0500

 Matthew: you wrote in the transcript that this should be fixed now
 that drscheme is setting current-print. But it doesn't seem to be
 fixed.
 
 Also, I can do this at the repl (in advanced student):
 
 > (require scheme/base)
 > (current-print)
 (lambda (a1) ...)
 > ((current-print) (set! x 3))
 
 which suggests that current-print is doing the right thing.
 
 Robby
 
 On Mon, Mar 16, 2009 at 1:29 PM,  <matthias@plt-scheme.org> wrote:
 >
 > Responsible changed from "matthias" to "robby" by matthias at Mon, 16 Mar=
  2009 14:29:37 -0400
 > Reason>>> robby's bug?
 >
 >
 > View:
 > =C2=A0http://bugs.plt-scheme.org/query/?cmd=3Dview&pr=3D9365
 >
 >
