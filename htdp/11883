From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Thu Apr 28 10:07:31 2011
Received: from mail-fx0-f44.google.com (mail-fx0-f44.google.com [209.85.161.44])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id p3SE7S2f026207
	for <bugs@bugs.plt-scheme.org>; Thu, 28 Apr 2011 10:07:28 -0400
Message-Id: <201104281407.p3SE79DA026122@champlain.ccs.neu.edu>
Date: Thu, 28 Apr 2011 10:07:09 -0400
From: matthias@ccs.neu.edu
To: bugs@racket-lang.org
Subject: portability bug in simple graphics? 

>Number:         11883
>Category:       htdp
>Synopsis:       portability bug in simple graphics?
>Class:          sw-bug
>Responsible:    matthias
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Thu Apr 28 10:08:01 -0400 2011
>Closed-Date:    Tue Sep 27 14:31:09 -0400 2011
>Last-Modified:  Tue Sep 27 17:25:14 -0400 2011
>Originator:     matthias
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.1.1.3--2011-04-25(6b7e844/g)
>Environment:
macosx "Darwin antarctica.ccs.neu.edu 10.7.0 Darwin Kernel Version 10.7.0: Sat Jan 29 15:17:16 PST 2011; root:xnu-1504.9.37~1/RELEASE_I386 i386" (i386-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 285965820

Collections:
("/Users/matthias/0Unison/collects/"
 (".DS_Store" "compiled" "date" "finance" "info-domain" "info.ss" "pdf.ss~" "session" "short" "testing" "tll-collects" "utils" "web"))
("/Users/matthias/Library/Racket/5.1.1.3/collects"
 (non-existent-path))
("/Users/matthias/plt/collects"
 (".gitignore" "2htdp" "afm" "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "data" "datalog" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "meta" "mred" "mrlib" "mysterx" "mz" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "picturing-programs" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raclog" "raco" "racunit" "reader" "readline" "redex" "repo-time-stamp" "repos-time-stamp" "rnrs" "s-exp" "schelog" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "sirmail" "slatex" "slideshow" "srfi" "srpersist" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tes!
 ts" "tex2page" "texpict" "tool" "trace" "typed" "typed-scheme" "unstable" "version" "waterworld" "web-server" "wxme" "xml"))

Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t))
>Description:
The code below produces #t in DrRacket on OS X 
and raises an exception on Linux. 

I left it intact as much as possible to show the
intent hoping it will help with debugging. I'll
make it even smaller for the follow-up.
>How-To-Repeat:
#lang racket

(require 2htdp/image)

(define font-size 10)
(define x-options 10)
(define y-options (+ 10 10 10))

(define spacer-width  (* 2 font-size))
(define spacer-height (inexact->exact (floor (* 1.5 font-size))))
(define spacer        (rectangle spacer-width spacer-height 'solid 'white))

(define *layer0 #false)
(define *angle0 #false)
(define *layer1 #false)
(define *angle1 #false)

(define *options '())

(define (options-image)
  (define as-images 
    (map (lambda (i) (frame (overlay (text (number->string i) 10 'black) spacer))) *options))
  (foldr above (circle 0 'solid 'red) as-images))

(define (option-clicked x y)
  (if (and (<= x-options x (+ x-options spacer-width))
           (<= y-options y (+ y-options (* (length *options) spacer-height))))
      (list-ref *options (quotient (- y y-options) spacer-height))
      #false))

;; ---------------------------------------------------------------------------------------------------
;; TEST 

(set! *options (build-list 10 add1))
(define i (options-image))
          
(= (option-clicked (+ x-options (/ spacer-width 2)) (+ y-options (- (image-height i) 1))) 10)
>Fix:
>Audit-Trail:
From: Robby Findler <robby@eecs.northwestern.edu>
To: "matthias@ccs.neu.edu" <matthias@ccs.neu.edu>,
        "bugs@racket-lang.org" <bugs@racket-lang.org>
Cc: "nobody@racket-lang.org" <nobody@racket-lang.org>,
        "bug-notification@racket-lang.org" <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/11883: portability bug in simple graphics?
Date: Thu, 28 Apr 2011 09:23:14 -0500

 Do you have the exn message and stacktrace handy?
 
 On Thursday, April 28, 2011,  <matthias@ccs.neu.edu> wrote:
 > A new problem report is waiting at
 >   http://bugs.racket-lang.org/query/?cmd=view&pr=11883
 >
 > Reported by matthias for release: 5.1.1.3--2011-04-25(6b7e844/g)
 >
 > *** Description:
 > The code below produces #t in DrRacket on OS X
 > and raises an exception on Linux.
 >
 > I left it intact as much as possible to show the
 > intent hoping it will help with debugging. I'll
 > make it even smaller for the follow-up.
 >
 > *** How to repeat:
 > #lang racket
 >
 > (require 2htdp/image)
 >
 > (define font-size 10)
 > (define x-options 10)
 > (define y-options (+ 10 10 10))
 >
 > (define spacer-width  (* 2 font-size))
 > (define spacer-height (inexact->exact (floor (* 1.5 font-size))))
 > (define spacer        (rectangle spacer-width spacer-height 'solid 'white))
 >
 > (define *layer0 #false)
 > (define *angle0 #false)
 > (define *layer1 #false)
 > (define *angle1 #false)
 >
 > (define *options '())
 >
 > (define (options-image)
 >   (define as-images
 >     (map (lambda (i) (frame (overlay (text (number->string i) 10 'black) spacer))) *options))
 >   (foldr above (circle 0 'solid 'red) as-images))
 >
 > (define (option-clicked x y)
 >   (if (and (<= x-options x (+ x-options spacer-width))
 >            (<= y-options y (+ y-options (* (length *options) spacer-height))))
 >       (list-ref *options (quotient (- y y-options) spacer-height))
 >       #false))
 >
 > ;; ---------------------------------------------------------------------------------------------------
 > ;; TEST
 >
 > (set! *options (build-list 10 add1))
 > (define i (options-image))
 >
 > (= (option-clicked (+ x-options (/ spacer-width 2)) (+ y-options (- (image-height i) 1))) 10)
 >
 > *** Environment:
 > macosx "Darwin antarctica.ccs.neu.edu 10.7.0 Darwin Kernel Version 10.7.0: Sat Jan 29 15:17:16 PST 2011; root:xnu-1504.9.37~1/RELEASE_I386 i386" (i386-macosx/3m) (get-display-depth) = 32
 > Human Language: english
 > (current-memory-use) 285965820
 >
 > Collections:
 > ("/Users/matthias/0Unison/collects/"
 >  (".DS_Store" "compiled" "date" "finance" "info-domain" "info.ss" "pdf.ss~" "session" "short" "testing" "tll-collects" "utils" "web"))
 > ("/Users/matthias/Library/Racket/5.1.1.3/collects"
 >  (non-existent-path))
 > ("/Users/matthias/plt/collects"
 >  (".gitignore" "2htdp" "afm" "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "data" "datalog" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "meta" "mred" "mrlib" "mysterx" "mz" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "picturing-programs" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raclog" "raco" "racunit" "reader" "readline" "redex" "repo-time-stamp" "repos-time-stamp" "rnrs" "s-exp" "schelog" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "sirmail" "slatex" "slideshow" "srfi" "srpersist" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tes!
 >  ts" "tex2page" "texpict" "tool" "trace" "typed" "typed-scheme" "unstable" "version" "waterworld" "web-server" "wxme" "xml"))
 >
 > Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t))
 >
 >
 
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: "bugs@racket-lang.org" <bugs@racket-lang.org>,
        "nobody@racket-lang.org" <nobody@racket-lang.org>,
        "bug-notification@racket-lang.org" <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/11883: portability bug in simple graphics?
Date: Thu, 28 Apr 2011 10:24:37 -0400

 The Linux bugs are reported by Stevie and Asumu. 
 
 As I scanned the code a second time, I am beginning to wonder whether it has nothing to do with images but with rounding errors due to a different word size.
 
 
 On Apr 28, 2011, at 10:23 AM, Robby Findler wrote:
 
 > Do you have the exn message and stacktrace handy?
 > 
 > On Thursday, April 28, 2011,  <matthias@ccs.neu.edu> wrote:
 >> A new problem report is waiting at
 >>  http://bugs.racket-lang.org/query/?cmd=view&pr=11883
 >> 
 >> Reported by matthias for release: 5.1.1.3--2011-04-25(6b7e844/g)
 >> 
 >> *** Description:
 >> The code below produces #t in DrRacket on OS X
 >> and raises an exception on Linux.
 >> 
 >> I left it intact as much as possible to show the
 >> intent hoping it will help with debugging. I'll
 >> make it even smaller for the follow-up.
 >> 
 >> *** How to repeat:
 >> #lang racket
 >> 
 >> (require 2htdp/image)
 >> 
 >> (define font-size 10)
 >> (define x-options 10)
 >> (define y-options (+ 10 10 10))
 >> 
 >> (define spacer-width  (* 2 font-size))
 >> (define spacer-height (inexact->exact (floor (* 1.5 font-size))))
 >> (define spacer        (rectangle spacer-width spacer-height 'solid 'white))
 >> 
 >> (define *layer0 #false)
 >> (define *angle0 #false)
 >> (define *layer1 #false)
 >> (define *angle1 #false)
 >> 
 >> (define *options '())
 >> 
 >> (define (options-image)
 >>  (define as-images
 >>    (map (lambda (i) (frame (overlay (text (number->string i) 10 'black) spacer))) *options))
 >>  (foldr above (circle 0 'solid 'red) as-images))
 >> 
 >> (define (option-clicked x y)
 >>  (if (and (<= x-options x (+ x-options spacer-width))
 >>           (<= y-options y (+ y-options (* (length *options) spacer-height))))
 >>      (list-ref *options (quotient (- y y-options) spacer-height))
 >>      #false))
 >> 
 >> ;; ---------------------------------------------------------------------------------------------------
 >> ;; TEST
 >> 
 >> (set! *options (build-list 10 add1))
 >> (define i (options-image))
 >> 
 >> (= (option-clicked (+ x-options (/ spacer-width 2)) (+ y-options (- (image-height i) 1))) 10)
 >> 
 >> *** Environment:
 >> macosx "Darwin antarctica.ccs.neu.edu 10.7.0 Darwin Kernel Version 10.7.0: Sat Jan 29 15:17:16 PST 2011; root:xnu-1504.9.37~1/RELEASE_I386 i386" (i386-macosx/3m) (get-display-depth) = 32
 >> Human Language: english
 >> (current-memory-use) 285965820
 >> 
 >> Collections:
 >> ("/Users/matthias/0Unison/collects/"
 >>  (".DS_Store" "compiled" "date" "finance" "info-domain" "info.ss" "pdf.ss~" "session" "short" "testing" "tll-collects" "utils" "web"))
 >> ("/Users/matthias/Library/Racket/5.1.1.3/collects"
 >>  (non-existent-path))
 >> ("/Users/matthias/plt/collects"
 >>  (".gitignore" "2htdp" "afm" "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "data" "datalog" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "meta" "mred" "mrlib" "mysterx" "mz" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "picturing-programs" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raclog" "raco" "racunit" "reader" "readline" "redex" "repo-time-stamp" "repos-time-stamp" "rnrs" "s-exp" "schelog" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "sirmail" "slatex" "slideshow" "srfi" "srpersist" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tes!
 >>  ts" "tex2page" "texpict" "tool" "trace" "typed" "typed-scheme" "unstable" "version" "waterworld" "web-server" "wxme" "xml"))
 >> 
 >> Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t))
 >> 
 >> 
 
 
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: Robby Findler <robby@eecs.northwestern.edu>,
        "bugs@racket-lang.org" <bugs@racket-lang.org>,
        "nobody@racket-lang.org" <nobody@racket-lang.org>,
        "bug-notification@racket-lang.org" <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/11883: portability bug in simple graphics?
Date: Thu, 28 Apr 2011 10:35:19 -0400

 Sorry the exception just says that = expected numbers and received #false as the result of option-clicked
 
 Let me explain the program: 
 
 options-image creates a 'stack' of boxed images of 1, ..., 10
 	the images are frames of size spacer-width x spacer-height, at font-size for the text
 
 option-clicked receives the 'mouse coordinates' that indicate bottom right 
 
 On my Mac, option-clicked correctly determines that the mouse coordinates indicate the bottom box 
 On the Linux box, they indicate that the mouse click isn't even in the range of the entire stack. 
 
 (So the exception is inessential.) 
 
 
 #lang racket
 
 (require 2htdp/image)
 
 (define font-size 10)
 (define x-options 10)
 (define y-options 30)
 
 (define spacer-width  (* 2 font-size))
 (define spacer-height (inexact->exact (floor (* 1.5 font-size))))
 (define spacer        (rectangle spacer-width spacer-height 'solid 'white))
 
 (define (options-image)  
   (for/fold ([final-image empty-image #;(circle 0 'solid 'red)]) ([i (in-range 10)])
     (define image (frame (overlay (text (number->string (- 10 i)) 10 'black) spacer)))
     (above image final-image)))
 
 (define (option-clicked x y)
   (if (and (<= x-options x (+ x-options spacer-width))
            (<= y-options y (+ y-options (* 10 spacer-height))))
       (list-ref (build-list 10 add1) (quotient (- y y-options) spacer-height))
       #false))
 
 ;; ---------------------------------------------------------------------------------------------------
 ;; TEST 
 (define i (options-image))
           
 (= (option-clicked (+ x-options (/ spacer-width 2)) (+ y-options (- (image-height i) 1))) 10)
 
 i
 
 
 
 

Responsible changed from "nobody" to "robby" by ryanc at Tue, 03 May 2011 16:24:25 -0400
Reason>>> images

From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: "bugs@racket-lang.org" <bugs@racket-lang.org>,
        "nobody@racket-lang.org" <nobody@racket-lang.org>,
        "bug-notification@racket-lang.org" <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/11883: portability bug in simple graphics?
Date: Tue, 27 Sep 2011 10:23:15 -0500

 I did a bunch of algebraic simplifications on the smaller program from
 the PR to arrive at the program below. Carrying over from the
 discussion, the claim is that the boolean at the end should always be
 either #t or #f, but not one sometimes and one other times.
 
 The boolean seems to depend on the font size actually matching up to a
 number of pixels, but that is not guaranteed; a font size of 10 does
 not mean that the font necc. takes up 10 pixels of height.
 
 So I'll move this PR to Matthias and he can close it if he wants or do
 something else with it.
 
 (Sorry for the long delay in getting back to this.)
 
 Robby
 
 #lang racket
 
 (require 2htdp/image)
 
 (define font-size 10)
 (define x-options 10)
 (define y-options 30)
 
 (define spacer-width  (* 2 font-size))
 (define spacer-height (inexact->exact (floor (* 1.5 font-size))))
 (define spacer        (rectangle spacer-width spacer-height 'solid 'white))
 
 (define (options-image)
   (for/fold ([final-image empty-image #;(circle 0 'solid 'red)]) ([i
 (in-range 10)])
     (define image (frame (overlay (text (number->string (- 10 i)) 10
 'black) spacer)))
     (above image final-image)))
 
 (define i (options-image))
 
 (<= 0 (- (image-height i) 1) (* 10 spacer-height))
 
 
 On Thu, Apr 28, 2011 at 9:35 AM, Matthias Felleisen
 <matthias@ccs.neu.edu> wrote:
 >
 > Sorry the exception just says that = expected numbers and received #false as the result of option-clicked
 >
 > Let me explain the program:
 >
 > options-image creates a 'stack' of boxed images of 1, ..., 10
 >        the images are frames of size spacer-width x spacer-height, at font-size for the text
 >
 > option-clicked receives the 'mouse coordinates' that indicate bottom right
 >
 > On my Mac, option-clicked correctly determines that the mouse coordinates indicate the bottom box
 > On the Linux box, they indicate that the mouse click isn't even in the range of the entire stack.
 >
 > (So the exception is inessential.)
 >
 >
 > #lang racket
 >
 > (require 2htdp/image)
 >
 > (define font-size 10)
 > (define x-options 10)
 > (define y-options 30)
 >
 > (define spacer-width  (* 2 font-size))
 > (define spacer-height (inexact->exact (floor (* 1.5 font-size))))
 > (define spacer        (rectangle spacer-width spacer-height 'solid 'white))
 >
 > (define (options-image)
 >  (for/fold ([final-image empty-image #;(circle 0 'solid 'red)]) ([i (in-range 10)])
 >    (define image (frame (overlay (text (number->string (- 10 i)) 10 'black) spacer)))
 >    (above image final-image)))
 >
 > (define (option-clicked x y)
 >  (if (and (<= x-options x (+ x-options spacer-width))
 >           (<= y-options y (+ y-options (* 10 spacer-height))))
 >      (list-ref (build-list 10 add1) (quotient (- y y-options) spacer-height))
 >      #false))
 >
 > ;; ---------------------------------------------------------------------------------------------------
 > ;; TEST
 > (define i (options-image))
 >
 > (= (option-clicked (+ x-options (/ spacer-width 2)) (+ y-options (- (image-height i) 1))) 10)
 >
 > i
 >
 >
 >
 >
 

Responsible changed from "robby" to "matthias" by robby at Tue, 27 Sep 2011 11:24:28 -0400
Reason>>> as far as I can tell, not a bug. But I won't close it, but
let Matthias respond instead.


State changed from "open" to "closed" by matthias at Tue, 27 Sep 2011 14:31:09 -0400
Reason>>> Robby is right. It depends on how (text "9" 10 'black)  is actually rendered. 
On OS X, the height of this image is 10, on Asumu's Linux box it is 17. 


----------
A commit by robby@racket-lang.org was marked as relevant
  http://git.racket-lang.org/plt/commit/a5b729421a

----------
A commit by robby@racket-lang.org was marked as relevant
  http://git.racket-lang.org/plt/commit/34581b7050
