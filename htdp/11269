From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Wed Sep 29 22:11:45 2010
Received: from mail-gy0-f172.google.com (mail-gy0-f172.google.com [209.85.160.172])
	by champlain.ccs.neu.edu (8.14.3/8.14.3) with ESMTP id o8U2BhTU028997
	for <bugs@bugs.plt-scheme.org>; Wed, 29 Sep 2010 22:11:43 -0400
Message-Id: <201009300211.o8U2Beo1028990@champlain.ccs.neu.edu>
Date: Wed, 29 Sep 2010 22:11:40 -0400
From: sk@cs.brown.edu
To: bugs@racket-lang.org
Subject: check-error too late for static errors

>Number:         11269
>Category:       htdp
>Synopsis:       check-error too late for static errors
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Wed Sep 29 22:12:01 -0400 2010
>Last-Modified:  Wed Jan 11 11:16:08 -0500 2017
>Originator:     Shriram Krishnamurthi
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.0.1
>Environment:
windows "Windows NT 6.1 (Build 7600)" (win32\i386\3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 312053372

Collections:
(("C:\\Users\\sk\\AppData\\Roaming\\Racket\\5.0.1\\collects" "info-domain" "installed-teachpacks" "margrave" "plai") ("C:\\Program Files (x86)\\Racket\\5.0.1\\collects" "2htdp" "afm" "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "datalog" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "help" "hierlist" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "redex" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tex2page" "texpict" "trace" "!
 typed" "typed-scheme" "unstable" "version" "web-server" "wxme" "xml"))
Computer Language: (("Teaching Languages" "How to Design Programs" "Advanced Student") (#(#t constructor repeating-decimal #f #t none) #f ((lib "cs019.rkt" "installed-teachpacks"))))
>Description:
To test that a module is not exporting a hidden operation, one would like to write, eg,

(check-error node-v "node-v: name is not defined, not a parameter, and not a primitive name")

or

(check-error node-v "reference to an identifier before its definition: node-v") 

But this doesn't work, because the first position of check-error is an *expression* position, so this is signaled as a static (parse) error -- check-error never gets its hands on the exception.

Perhaps check-error should use an explicit eval instead, deferring even parsing until it has had a chance to set up its handlers?
>How-To-Repeat:
>Fix:
>Audit-Trail:
From: Jay McCarthy <jay.mccarthy@gmail.com>
To: "sk@cs.brown.edu" <sk@cs.brown.edu>,
        "bugs@racket-lang.org" <bugs@racket-lang.org>
Cc: "nobody@racket-lang.org" <nobody@racket-lang.org>,
        "bug-notification@racket-lang.org" <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/11269: check-error too late for static errors
Date: Wed, 29 Sep 2010 20:16:31 -0600

 The wonderful Eli tester does this :)
 
 Sent from my iPhone
 
 On Sep 29, 2010, at 8:12 PM, sk@cs.brown.edu wrote:
 
 > A new problem report is waiting at
 >  http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D11269
 >=20
 > Reported by Shriram Krishnamurthi for release: 5.0.1
 >=20
 > *** Description:
 > To test that a module is not exporting a hidden operation, one would like t=
 o write, eg,
 >=20
 > (check-error node-v "node-v: name is not defined, not a parameter, and not=
  a primitive name")
 >=20
 > or
 >=20
 > (check-error node-v "reference to an identifier before its definition: nod=
 e-v")=20
 >=20
 > But this doesn't work, because the first position of check-error is an *ex=
 pression* position, so this is signaled as a static (parse) error -- check-e=
 rror never gets its hands on the exception.
 >=20
 > Perhaps check-error should use an explicit eval instead, deferring even pa=
 rsing until it has had a chance to set up its handlers?
 >=20
 > *** How to repeat:
 >=20
 >=20
 > *** Environment:
 > windows "Windows NT 6.1 (Build 7600)" (win32\i386\3m) (get-display-depth) =3D=
  32
 > Human Language: english
 > (current-memory-use) 312053372
 >=20
 > Collections:
 > (("C:\\Users\\sk\\AppData\\Roaming\\Racket\\5.0.1\\collects" "info-domain"=
  "installed-teachpacks" "margrave" "plai") ("C:\\Program Files (x86)\\Racket=
 \\5.0.1\\collects" "2htdp" "afm" "algol60" "at-exp" "browser" "combinator-pa=
 rser" "compiler" "config" "datalog" "defaults" "deinprogramm" "drracket" "dr=
 scheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework"=
  "frtime" "games" "graphics" "gui-debugger" "help" "hierlist" "htdp" "html" "=
 icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred"=
  "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools"=
  "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "rac=
 klog" "rackunit" "raco" "reader" "readline" "redex" "rnrs" "s-exp" "scheme" "=
 schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "slatex" "slid=
 eshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color"=
  "teachpack" "test-box-recovery" "test-engine" "tex2page" "texpict" "trace" "=
 !
 > typed" "typed-scheme" "unstable" "version" "web-server" "wxme" "xml"))
 > Computer Language: (("Teaching Languages" "How to Design Programs" "Advanc=
 ed Student") (#(#t constructor repeating-decimal #f #t none) #f ((lib "cs019=
 .rkt" "installed-teachpacks"))))
 >=20

From: Matthias Felleisen <matthias@ccs.neu.edu>
To: sk@cs.brown.edu, bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11269: check-error too late for static errors
Date: Thu, 30 Sep 2010 14:05:30 -0400

 check-* are constructs intended for beginner-level testing. I believe =
 that asking more from them is wrong.=20
 
 Robby headed the last test-unification committee. Any volunteers for a =
 second attempt?=20
 
 To Eli it's all just a macro, so perhaps we should introduce macros =
 first and then teach kids how to program.=20
 
 
 
 
 On Sep 29, 2010, at 10:12 PM, sk@cs.brown.edu wrote:
 
 > A new problem report is waiting at
 >  http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D11269
 >=20
 > Reported by Shriram Krishnamurthi for release: 5.0.1
 >=20
 > *** Description:
 > To test that a module is not exporting a hidden operation, one would =
 like to write, eg,
 >=20
 > (check-error node-v "node-v: name is not defined, not a parameter, and =
 not a primitive name")
 >=20
 > or
 >=20
 > (check-error node-v "reference to an identifier before its definition: =
 node-v")=20
 >=20
 > But this doesn't work, because the first position of check-error is an =
 *expression* position, so this is signaled as a static (parse) error -- =
 check-error never gets its hands on the exception.
 >=20
 > Perhaps check-error should use an explicit eval instead, deferring =
 even parsing until it has had a chance to set up its handlers?
 >=20
 > *** How to repeat:
 >=20
 >=20
 > *** Environment:
 > windows "Windows NT 6.1 (Build 7600)" (win32\i386\3m) =
 (get-display-depth) =3D 32
 > Human Language: english
 > (current-memory-use) 312053372
 >=20
 > Collections:
 > (("C:\\Users\\sk\\AppData\\Roaming\\Racket\\5.0.1\\collects" =
 "info-domain" "installed-teachpacks" "margrave" "plai") ("C:\\Program =
 Files (x86)\\Racket\\5.0.1\\collects" "2htdp" "afm" "algol60" "at-exp" =
 "browser" "combinator-parser" "compiler" "config" "datalog" "defaults" =
 "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" =
 "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" =
 "gui-debugger" "help" "hierlist" "htdp" "html" "icons" "info-domain" =
 "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" =
 "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" =
 "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" =
 "racklog" "rackunit" "raco" "reader" "readline" "redex" "rnrs" "s-exp" =
 "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" =
 "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" =
 "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" =
 "tex2page" "texpict" "trace" "!
 > typed" "typed-scheme" "unstable" "version" "web-server" "wxme" "xml"))
 > Computer Language: (("Teaching Languages" "How to Design Programs" =
 "Advanced Student") (#(#t constructor repeating-decimal #f #t none) #f =
 ((lib "cs019.rkt" "installed-teachpacks"))))
 >=20
 

Responsible changed from "matthias" to "kathyg" by matthias at Thu, 30 Sep 2010 14:14:01 -0400
Reason>>> If anyone is going to address this, it's Kathy. I consider this not a but a feature 
request and as a  request inapprpropriate. 

From: Kathy Gray <kathryn.gray@cl.cam.ac.uk>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: sk@cs.brown.edu, bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11269: check-error too late for static errors
Date: Thu, 30 Sep 2010 20:31:22 +0100

 On 30 Sep 2010, at 7:05:30, Matthias Felleisen wrote:
 
 >=20
 > check-* are constructs intended for beginner-level testing. I believe =
 that asking more from them is wrong.=20
 >=20
 > Robby headed the last test-unification committee. Any volunteers for a =
 second attempt?=20
 
 Considering I'm planning on embarking on new test development, perhaps I =
 should give it a go.=20
 
 On the other hand, for the teaching languages I've considered before =
 catching syntactic errors and in the end it didn't seem like a good idea =
 (it came up before because of various teach packs generating syntax =
 errors for arity mistakes instead of runtime errors).
 
 -Kathy
 
 >=20
 > To Eli it's all just a macro, so perhaps we should introduce macros =
 first and then teach kids how to program.=20
 >=20
 >=20
 >=20
 >=20
 > On Sep 29, 2010, at 10:12 PM, sk@cs.brown.edu wrote:
 >=20
 >> A new problem report is waiting at
 >> http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D11269
 >>=20
 >> Reported by Shriram Krishnamurthi for release: 5.0.1
 >>=20
 >> *** Description:
 >> To test that a module is not exporting a hidden operation, one would =
 like to write, eg,
 >>=20
 >> (check-error node-v "node-v: name is not defined, not a parameter, =
 and not a primitive name")
 >>=20
 >> or
 >>=20
 >> (check-error node-v "reference to an identifier before its =
 definition: node-v")=20
 >>=20
 >> But this doesn't work, because the first position of check-error is =
 an *expression* position, so this is signaled as a static (parse) error =
 -- check-error never gets its hands on the exception.
 >>=20
 >> Perhaps check-error should use an explicit eval instead, deferring =
 even parsing until it has had a chance to set up its handlers?
 >>=20
 >> *** How to repeat:
 >>=20
 >>=20
 >> *** Environment:
 >> windows "Windows NT 6.1 (Build 7600)" (win32\i386\3m) =
 (get-display-depth) =3D 32
 >> Human Language: english
 >> (current-memory-use) 312053372
 >>=20
 >> Collections:
 >> (("C:\\Users\\sk\\AppData\\Roaming\\Racket\\5.0.1\\collects" =
 "info-domain" "installed-teachpacks" "margrave" "plai") ("C:\\Program =
 Files (x86)\\Racket\\5.0.1\\collects" "2htdp" "afm" "algol60" "at-exp" =
 "browser" "combinator-parser" "compiler" "config" "datalog" "defaults" =
 "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" =
 "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" =
 "gui-debugger" "help" "hierlist" "htdp" "html" "icons" "info-domain" =
 "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" =
 "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" =
 "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" =
 "racklog" "rackunit" "raco" "reader" "readline" "redex" "rnrs" "s-exp" =
 "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" =
 "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" =
 "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" =
 "tex2page" "texpict" "trace" "!
 >> typed" "typed-scheme" "unstable" "version" "web-server" "wxme" =
 "xml"))
 >> Computer Language: (("Teaching Languages" "How to Design Programs" =
 "Advanced Student") (#(#t constructor repeating-decimal #f #t none) #f =
 ((lib "cs019.rkt" "installed-teachpacks"))))
 >>=20
 >=20
 
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Kathy Gray <kathryn.gray@cl.cam.ac.uk>
Cc: sk@cs.brown.edu, bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11269: check-error too late for static errors
Date: Thu, 30 Sep 2010 20:34:04 -0400

 When Robby volunteered, I was hoping for the following evolution:=20
 
 1. You target rackunit in the check-expect library and you gradually =
 integrate the two (as in levels; see 5).=20
 
 2. You maintain the GUI and you gradually extend it to all of rackunit.=20=
 
 
 3. You integrate it more closely with #lang racket, kind of like the *sl =
 languages.=20
 
 4. You use the infrastructure as your research vehicle as far as =
 possible.=20
 
 5. You write a paper on testing levels.=20
 
 -- Matthias
 
 p.s. Every time Shriam asks for a feature for the *sl languages, you =
 reply with "It's in the full testing system, and it sounds like your =
 students would benefit from the full languages." You may automate this =
 task and you may consider making it possible to load the full rackunit =
 works into *sl eventually, at least asl.=20
 
 
 
 
 On Sep 30, 2010, at 3:31 PM, Kathy Gray wrote:
 
 >=20
 > On 30 Sep 2010, at 7:05:30, Matthias Felleisen wrote:
 >=20
 >>=20
 >> check-* are constructs intended for beginner-level testing. I believe =
 that asking more from them is wrong.=20
 >>=20
 >> Robby headed the last test-unification committee. Any volunteers for =
 a second attempt?=20
 >=20
 > Considering I'm planning on embarking on new test development, perhaps =
 I should give it a go.=20
 >=20
 > On the other hand, for the teaching languages I've considered before =
 catching syntactic errors and in the end it didn't seem like a good idea =
 (it came up before because of various teach packs generating syntax =
 errors for arity mistakes instead of runtime errors).
 >=20
 > -Kathy
 >=20
 >>=20
 >> To Eli it's all just a macro, so perhaps we should introduce macros =
 first and then teach kids how to program.=20
 >>=20
 >>=20
 >>=20
 >>=20
 >> On Sep 29, 2010, at 10:12 PM, sk@cs.brown.edu wrote:
 >>=20
 >>> A new problem report is waiting at
 >>> http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D11269
 >>>=20
 >>> Reported by Shriram Krishnamurthi for release: 5.0.1
 >>>=20
 >>> *** Description:
 >>> To test that a module is not exporting a hidden operation, one would =
 like to write, eg,
 >>>=20
 >>> (check-error node-v "node-v: name is not defined, not a parameter, =
 and not a primitive name")
 >>>=20
 >>> or
 >>>=20
 >>> (check-error node-v "reference to an identifier before its =
 definition: node-v")=20
 >>>=20
 >>> But this doesn't work, because the first position of check-error is =
 an *expression* position, so this is signaled as a static (parse) error =
 -- check-error never gets its hands on the exception.
 >>>=20
 >>> Perhaps check-error should use an explicit eval instead, deferring =
 even parsing until it has had a chance to set up its handlers?
 >>>=20
 >>> *** How to repeat:
 >>>=20
 >>>=20
 >>> *** Environment:
 >>> windows "Windows NT 6.1 (Build 7600)" (win32\i386\3m) =
 (get-display-depth) =3D 32
 >>> Human Language: english
 >>> (current-memory-use) 312053372
 >>>=20
 >>> Collections:
 >>> (("C:\\Users\\sk\\AppData\\Roaming\\Racket\\5.0.1\\collects" =
 "info-domain" "installed-teachpacks" "margrave" "plai") ("C:\\Program =
 Files (x86)\\Racket\\5.0.1\\collects" "2htdp" "afm" "algol60" "at-exp" =
 "browser" "combinator-parser" "compiler" "config" "datalog" "defaults" =
 "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" =
 "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" =
 "gui-debugger" "help" "hierlist" "htdp" "html" "icons" "info-domain" =
 "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" =
 "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" =
 "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" =
 "racklog" "rackunit" "raco" "reader" "readline" "redex" "rnrs" "s-exp" =
 "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" =
 "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" =
 "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" =
 "tex2page" "texpict" "trace" "!
 >>> typed" "typed-scheme" "unstable" "version" "web-server" "wxme" =
 "xml"))
 >>> Computer Language: (("Teaching Languages" "How to Design Programs" =
 "Advanced Student") (#(#t constructor repeating-decimal #f #t none) #f =
 ((lib "cs019.rkt" "installed-teachpacks"))))
 >>>=20
 >>=20
 >=20
 
From: Shriram Krishnamurthi <sk@cs.brown.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: Kathy Gray <kathryn.gray@cl.cam.ac.uk>, bugs@racket-lang.org,
        nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11269: check-error too late for static errors
Date: Thu, 30 Sep 2010 21:43:22 -0400

 > p.s. Every time Shriam asks for a feature for the *sl languages, you
 > reply with "It's in the full testing system, and it sounds like your
 > students would benefit from the full languages."
 
 Google's ad engine automatically suggested this link:
 
   "Child Behaviour"
 
 Shriram

Responsible changed from "kathyg" to "mflatt" by mflatt at Wed, 11 Jan 2017 11:16:08 -0500
Reason>>> taking over Kathy's old reports

