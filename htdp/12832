From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Fri Jun  8 15:37:13 2012
Received: from mail-ob0-f172.google.com (mail-ob0-f172.google.com [209.85.214.172])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id q58Jb9fp023724
	for <bugs@bugs.plt-scheme.org>; Fri, 8 Jun 2012 15:37:09 -0400
Message-Id: <201206081937.q58Jb6P5023719@champlain.ccs.neu.edu>
Date: Fri, 8 Jun 2012 15:37:06 -0400
From: kos@informatik.uni-marburg.de
To: bugs@racket-lang.org
Subject: Quoting booleans in HTDP languages yields wrong result

>Number:         12832
>Category:       htdp
>Synopsis:       Quoting booleans in HTDP languages yields wrong result
>Class:          sw-bug
>Responsible:    matthias
>Severity:       non-critical
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Fri Jun 08 15:40:01 -0400 2012
>Closed-Date:    Wed Jul 25 10:48:24 -0400 2012
>Last-Modified:  Wed Jul 25 10:48:24 -0400 2012
>Originator:     Klaus Ostermann
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.2.1
>Environment:
windows "Windows NT 6.1 (Build 7601) Service Pack 1" (win32\x86_64\3m) (get-display-depth) = 32
Human Language: german
(current-memory-use) 334080168
Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()


Collections:
("C:\\Users\\klaus\\AppData\\Roaming\\Racket\\5.2.1\\collects"
 (non-existent-path))
("C:\\Program Files\\Racket\\collects"
 ("2htdp" "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "data" "datalog" "db" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "help" "hierlist" "htdp" "html" "icons" "images" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "picturing-programs" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "redex" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tex2page" "texpict" "trace" "typed" "typed-racket" "typed-scheme" "unstable" "version" "web-server" "wxme" "xml" "xrepl"))

Computer Language: (("Lehrsprachen" "How to Design Programs" "Zwischenstufe mit lambda") (#(#t constructor repeating-decimal #f #t none) #f ((lib "image.ss" "teachpack" "2htdp") (lib "universe.ss" "teachpack" "2htdp"))))
>Description:
In the HTDP languages, #t and #f are renamed to true and false, but this has not been reflected in the reader:

Evaluating 'true yields the symbol 'true but not the boolean value true
>How-To-Repeat:
Evaluate 'true in a HTDP language.
>Fix:
>Audit-Trail:
From: John Clements <aoeuclements@brinckerhoff.org>
To: kos@informatik.uni-marburg.de, bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12832: Quoting booleans in HTDP languages yields wrong result
Date: Fri, 8 Jun 2012 16:55:38 -0700

 On Jun 8, 2012, at 12:40 PM, kos@informatik.uni-marburg.de wrote:
 
 > A new problem report is waiting at
 >  http://bugs.racket-lang.org/query/?cmd=view&pr=12832
 > 
 > Reported by Klaus Ostermann for release: 5.2.1
 > 
 > *** Description:
 > In the HTDP languages, #t and #f are renamed to true and false, but this has not been reflected in the reader:
 > 
 > Evaluating 'true yields the symbol 'true but not the boolean value true
 
 Unless I misunderstand you, this is not a bug.  There are very few terms like #f that are "self-quoting"; for the vast majority of identifiers--true, false, +, -, lambda--the quoted identifier produces a symbol, and the non-quoted identifier does not. Adding a binding from the identifier "true" to the boolean value doesn't mean that the quoted identifier's meaning should change.
 
 John Clements
 
 
From: Klaus Ostermann <kos@informatik.uni-marburg.de>
To: John Clements <aoeuclements@brinckerhoff.org>
Cc: kos@Mathematik.Uni-Marburg.de, bugs@racket-lang.org,
        nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12832: Quoting booleans in HTDP languages yields
 wrong result
Date: Sat, 09 Jun 2012 17:30:06 +0200

 I can't say whether this is the desired behavior, but I think it would 
 be strange to keep it the way it is:
 
 As far as I understand the Scheme tradtion of s-expressions and quoting, 
 quoting any literal yields the value of that literal.
 Currently this holds for all literals (numbers, images, strings) except
 boolean literals.
 
 The current behavior also makes it cumbersome to implement the parser 
 for a meta-circular interpreter. In the Scheme tradition, parsing 
 s-expressions is so simple because quoting literals results in the
 literal. When 'true is 'true, then one has to have an extra branch
 in the parser to deal with boolean literals.
 
 I think the underlying question here is whether "true" is an identifier 
 or a literal.
 
 Klaus
 
 Am 09.06.2012 01:55, schrieb John Clements:
 >
 > On Jun 8, 2012, at 12:40 PM, kos@informatik.uni-marburg.de wrote:
 >
 >> A new problem report is waiting at
 >>   http://bugs.racket-lang.org/query/?cmd=view&pr=12832
 >>
 >> Reported by Klaus Ostermann for release: 5.2.1
 >>
 >> *** Description:
 >> In the HTDP languages, #t and #f are renamed to true and false, but this has not been reflected in the reader:
 >>
 >> Evaluating 'true yields the symbol 'true but not the boolean value true
 >
 > Unless I misunderstand you, this is not a bug.  There are very few terms like #f that are "self-quoting"; for the vast majority of identifiers--true, false, +, -, lambda--the quoted identifier produces a symbol, and the non-quoted identifier does not. Adding a binding from the identifier "true" to the boolean value doesn't mean that the quoted identifier's meaning should change.
 >
 > John Clements
 >
 
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Klaus Ostermann <kos@informatik.uni-marburg.de>
Cc: John Clements <aoeuclements@brinckerhoff.org>,
        kos@Mathematik.Uni-Marburg.de, bugs@racket-lang.org,
        nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12832: Quoting booleans in HTDP languages yields wrong result
Date: Sat, 9 Jun 2012 11:33:25 -0400

 It is definitely wrong for empty too, and I may have forgotten about others. 
 
 As I said, my plan is to go '() for empty, #true for true, etc. 
 
 
 On Jun 9, 2012, at 11:30 AM, Klaus Ostermann wrote:
 
 > I can't say whether this is the desired behavior, but I think it would be strange to keep it the way it is:
 > 
 > As far as I understand the Scheme tradtion of s-expressions and quoting, quoting any literal yields the value of that literal.
 > Currently this holds for all literals (numbers, images, strings) except
 > boolean literals.
 > 
 > The current behavior also makes it cumbersome to implement the parser for a meta-circular interpreter. In the Scheme tradition, parsing s-expressions is so simple because quoting literals results in the
 > literal. When 'true is 'true, then one has to have an extra branch
 > in the parser to deal with boolean literals.
 > 
 > I think the underlying question here is whether "true" is an identifier or a literal.
 > 
 > Klaus
 > 
 > Am 09.06.2012 01:55, schrieb John Clements:
 >> 
 >> On Jun 8, 2012, at 12:40 PM, kos@informatik.uni-marburg.de wrote:
 >> 
 >>> A new problem report is waiting at
 >>>  http://bugs.racket-lang.org/query/?cmd=view&pr=12832
 >>> 
 >>> Reported by Klaus Ostermann for release: 5.2.1
 >>> 
 >>> *** Description:
 >>> In the HTDP languages, #t and #f are renamed to true and false, but this has not been reflected in the reader:
 >>> 
 >>> Evaluating 'true yields the symbol 'true but not the boolean value true
 >> 
 >> Unless I misunderstand you, this is not a bug.  There are very few terms like #f that are "self-quoting"; for the vast majority of identifiers--true, false, +, -, lambda--the quoted identifier produces a symbol, and the non-quoted identifier does not. Adding a binding from the identifier "true" to the boolean value doesn't mean that the quoted identifier's meaning should change.
 >> 
 >> John Clements
 >> 
 > 
 
 


State changed from "open" to "closed" by matthias at Wed, 25 Jul 2012 10:48:24 -0400
Reason>>> We will replace booleans with #t and #f. Until then, the feature will persist. 

