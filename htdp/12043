From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Thu Jul 14 09:29:09 2011
Received: from mail-vx0-f172.google.com (mail-vx0-f172.google.com [209.85.220.172])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id p6EDT5ef004111
	for <bugs@bugs.plt-scheme.org>; Thu, 14 Jul 2011 09:29:06 -0400
Message-Id: <201107141329.p6EDT2aC004105@champlain.ccs.neu.edu>
Date: Thu, 14 Jul 2011 09:29:02 -0400
From: sbloch@adelphi.edu
To: bugs@racket-lang.org
Subject: getting mouse status without mouse handler in universe

>Number:         12043
>Category:       htdp
>Synopsis:       getting mouse status without mouse handler in universe
>Class:          change-request
>Responsible:    matthias
>Severity:       non-critical
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Thu Jul 14 09:32:01 -0400 2011
>Closed-Date:    Fri Sep 02 10:09:17 -0400 2011
>Last-Modified:  Fri Sep 02 10:16:01 -0400 2011
>Originator:     Stephen Bloch
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.1.2.3--2011-07-12(52527d8/g)
>Environment:
macosx "Darwin Winchester.local 10.7.0 Darwin Kernel Version 10.7.0: Sat Jan 29 15:17:16 PST 2011; root:xnu-1504.9.37~1/RELEASE_I386 i386" (i386-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 146938092

Collections:
("/Users/bloch/Library/Racket/5.1.2.3/collects"
 (non-existent-path))
("/Users/bloch/programming/teachpacks/racket/plt/collects"
 (".DS_Store" ".gitignore" "2htdp" "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "data" "datalog" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "meta" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "picturing-programs" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "redex" "repo-time-stamp" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "sirmail" "slatex" "slideshow" "srfi" "srpersist" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tests" "tex2page" "texpict" "trace" "typed" "typed!
 -scheme" "unstable" "version" "waterworld" "web-server" "wxme" "xml"))

Computer Language: (("Teaching Languages" "How to Design Programs" "Beginning Student") (#(#t constructor repeating-decimal #f #t none) #f ()))
>Description:
Suggestion: add to 2htdp/universe the functions
; current-mouse-location : nothing -> posn or false
; returns false if the mouse is outside the animation window
; mouse-button-pressed? : nothing -> boolean

In many animations, you need to know the current mouse position in, say, a tick or draw handler.  One can get the above functionality at present by adding a posn field to the model and writing a mouse handler that updates that field, so that the information is available in other handlers, but that's a lot of hassle for something that (arguably) should be directly queryable.

(I'm not sure what to do with multiple-button mice: perhaps an optional argument to mouse-button-pressed?.)
>How-To-Repeat:
>Fix:
>Audit-Trail:
Responsible changed from "nobody" to "matthias" by matthias at Thu, 14 Jul 2011 10:55:53 -0400
Reason>>> .

State changed from "open" to "suspended" by matthias at Thu, 14 Jul 2011 10:55:53 -0400
Reason>>> Adding a function like this turns world programs into non-deterministic programs 
because the mouse position can change during the extent of an event handler call. 
That is, two calls in a row do not produce the same output. (Yes, I know that we also 
have random and that universe programs depend on network traffic in a similar sense. 
I still think this is violating the spirit of the teachpack.) I'll think about it. 

From: Robby Findler <robby@eecs.northwestern.edu>
To: bugs@racket-lang.org
Cc: matthias@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org, sbloch@adelphi.edu
Subject: Re: [racket-bug] all/12043 getting mouse status without mouse handler
 in universe
Date: Thu, 14 Jul 2011 11:22:11 -0600

 You could avoid that by making the "world" that is recorded internally
 actually be a pair of the mouse state (and other things maybe) and the
 student's world and then consult that pair.
 
 (In other words, you could do what you'd expect the student should do,
 but do it internally.)
 
 Robby
 
 On Thu, Jul 14, 2011 at 8:55 AM,  <matthias@racket-lang.org> wrote:
 >
 > Responsible changed from "nobody" to "matthias" by matthias at Thu, 14 Jul 2011 10:55:53 -0400
 > Reason>>> .
 >
 > State changed from "open" to "suspended" by matthias at Thu, 14 Jul 2011 10:55:53 -0400
 > Reason>>> Adding a function like this turns world programs into non-deterministic programs
 > because the mouse position can change during the extent of an event handler call.
 > That is, two calls in a row do not produce the same output. (Yes, I know that we also
 > have random and that universe programs depend on network traffic in a similar sense.
 > I still think this is violating the spirit of the teachpack.) I'll think about it.
 >
 >
 > View:
 >  http://bugs.racket-lang.org/query/?cmd=view&pr=12043
 >
 >
 
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: bugs@racket-lang.org, matthias@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org, sbloch@adelphi.edu
Subject: Re: [racket-bug] all/12043 getting mouse status without mouse handler in universe
Date: Thu, 14 Jul 2011 13:58:15 -0400

 Do you mean on entry to an event handler? Or on an exit? When do you think I should record the mouse position? 
 
 
 On Jul 14, 2011, at 1:22 PM, Robby Findler wrote:
 
 > You could avoid that by making the "world" that is recorded internally
 > actually be a pair of the mouse state (and other things maybe) and the
 > student's world and then consult that pair.
 > 
 > (In other words, you could do what you'd expect the student should do,
 > but do it internally.)
 > 
 > Robby
 > 
 > On Thu, Jul 14, 2011 at 8:55 AM,  <matthias@racket-lang.org> wrote:
 >> 
 >> Responsible changed from "nobody" to "matthias" by matthias at Thu, 14 Jul 2011 10:55:53 -0400
 >> Reason>>> .
 >> 
 >> State changed from "open" to "suspended" by matthias at Thu, 14 Jul 2011 10:55:53 -0400
 >> Reason>>> Adding a function like this turns world programs into non-deterministic programs
 >> because the mouse position can change during the extent of an event handler call.
 >> That is, two calls in a row do not produce the same output. (Yes, I know that we also
 >> have random and that universe programs depend on network traffic in a similar sense.
 >> I still think this is violating the spirit of the teachpack.) I'll think about it.
 >> 
 >> 
 >> View:
 >>  http://bugs.racket-lang.org/query/?cmd=view&pr=12043
 >> 
 >> 
 
 
From: Stephen Bloch <sbloch@adelphi.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: bugs@racket-lang.org, matthias@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12043 getting mouse status without mouse handler in universe
Date: Thu, 14 Jul 2011 14:09:21 -0400

 On Jul 14, 2011, at 1:22 PM, Robby Findler wrote:
 
 > You could avoid that by making the "world" that is recorded internally
 > actually be a pair of the mouse state (and other things maybe) and the
 > student's world and then consult that pair.
 
 Yes, that's the solution I thought of.  On entry to any event handler, capture the mouse position and status, so they don't change during the execution of the handler even if the mouse moves.
 
 One might, of course, ask whether it's worth that much trouble....
 
 
 Stephen Bloch
 sbloch@adelphi.edu
 
 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: bugs@racket-lang.org, matthias@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org, sbloch@adelphi.edu
Subject: Re: [racket-bug] all/12043 getting mouse status without mouse handler
 in universe
Date: Thu, 14 Jul 2011 13:26:09 -0600

 On all events that get sent to the student's program is what I had
 imagined, yes.
 
 Robby
 
 On Thu, Jul 14, 2011 at 11:58 AM, Matthias Felleisen
 <matthias@ccs.neu.edu> wrote:
 >
 > Do you mean on entry to an event handler? Or on an exit? When do you think I should record the mouse position?
 >
 >
 > On Jul 14, 2011, at 1:22 PM, Robby Findler wrote:
 >
 >> You could avoid that by making the "world" that is recorded internally
 >> actually be a pair of the mouse state (and other things maybe) and the
 >> student's world and then consult that pair.
 >>
 >> (In other words, you could do what you'd expect the student should do,
 >> but do it internally.)
 >>
 >> Robby
 >>
 >> On Thu, Jul 14, 2011 at 8:55 AM,  <matthias@racket-lang.org> wrote:
 >>>
 >>> Responsible changed from "nobody" to "matthias" by matthias at Thu, 14 Jul 2011 10:55:53 -0400
 >>> Reason>>> .
 >>>
 >>> State changed from "open" to "suspended" by matthias at Thu, 14 Jul 2011 10:55:53 -0400
 >>> Reason>>> Adding a function like this turns world programs into non-deterministic programs
 >>> because the mouse position can change during the extent of an event handler call.
 >>> That is, two calls in a row do not produce the same output. (Yes, I know that we also
 >>> have random and that universe programs depend on network traffic in a similar sense.
 >>> I still think this is violating the spirit of the teachpack.) I'll think about it.
 >>>
 >>>
 >>> View:
 >>>  http://bugs.racket-lang.org/query/?cmd=view&pr=12043
 >>>
 >>>
 >
 >
 


State changed from "suspended" to "closed" by matthias at Fri, 02 Sep 2011 10:09:17 -0400
Reason>>> After implementing a version I have concluded that supporting this service is a bad idea. 

Here is why. (1) At the moment, universe installs an event-handler for mouse events only when 
big-bang specifications come with an on-mouse clause. This design eliminates a really bad 
performance error reported last year (JPR). The exercise that produced this bug is supposedly a 
part of the reporter's book on drracket. I therefore decided to publish the mouse status only 
when a mouse clause exists. But then I realized that this means the mouse handler is called 
anyway. So why bother keeping track of the status? 

(2) Next we cannot abstract libraries such as universe over the context in which they are 
deployed. Hence whatever I do must be useful for *SL <= ISL+ because sooner or later every 
feature I introduced is used by someone at every existing language level. At these levels we do 
not have null-ary functions. Ergo, the mouse status must be published via variables. 

(3) The first obvious solution is to provide global variable whose value changes. OUCH. We no 
longer live in a functional world. It also means I have prohibited all forms of re-entrant nestable 
worlds. 

(4) The second obvious solution is to provide programmer-specified (in big-bang) variable 
names. This eliminates the re-entry problem (somewhat) but does not eliminate the statefulness 
of the approach. Worse, the big-bang API has to change. Worst, if I ask for this separate 
specification, once again I question why because the on-mouse clause already exists. 

At this point I do not know how to implement an elegant functional re-entrant solution. 

If someone has an idea, please let me know. (The only idea I have is to supply the world object 
and functions that extract such status information.. But the idea of THIS in BSL is mind-
boggling. Even for ISL I am not sure.) 

(5) Then I decided to think about examples. I can't come up with an example where I need this 
kind of thing. If you have a decent example, let me know. 

I am closing the request for now. If something new develops, we will re-open it. 

From: Robby Findler <robby@eecs.northwestern.edu>
To: bugs@racket-lang.org
Cc: matthias@racket-lang.org, sk@racket-lang.org, mflatt@racket-lang.org,
        sbloch@adelphi.edu
Subject: Re: [racket-bug] htdp/12043 getting mouse status without mouse
 handler in universe
Date: Fri, 2 Sep 2011 09:15:31 -0500

 Lack of thunks seems to be hard to overcome, I agree.
 
 Robby
 
 On Fri, Sep 2, 2011 at 9:09 AM,  <matthias@racket-lang.org> wrote:
 >
 > State changed from "suspended" to "closed" by matthias at Fri, 02 Sep 2011 10:09:17 -0400
 > Reason>>> After implementing a version I have concluded that supporting this service is a bad idea.
 >
 > Here is why. (1) At the moment, universe installs an event-handler for mouse events only when
 > big-bang specifications come with an on-mouse clause. This design eliminates a really bad
 > performance error reported last year (JPR). The exercise that produced this bug is supposedly a
 > part of the reporter's book on drracket. I therefore decided to publish the mouse status only
 > when a mouse clause exists. But then I realized that this means the mouse handler is called
 > anyway. So why bother keeping track of the status?
 >
 > (2) Next we cannot abstract libraries such as universe over the context in which they are
 > deployed. Hence whatever I do must be useful for *SL <= ISL+ because sooner or later every
 > feature I introduced is used by someone at every existing language level. At these levels we do
 > not have null-ary functions. Ergo, the mouse status must be published via variables.
 >
 > (3) The first obvious solution is to provide global variable whose value changes. OUCH. We no
 > longer live in a functional world. It also means I have prohibited all forms of re-entrant nestable
 > worlds.
 >
 > (4) The second obvious solution is to provide programmer-specified (in big-bang) variable
 > names. This eliminates the re-entry problem (somewhat) but does not eliminate the statefulness
 > of the approach. Worse, the big-bang API has to change. Worst, if I ask for this separate
 > specification, once again I question why because the on-mouse clause already exists.
 >
 > At this point I do not know how to implement an elegant functional re-entrant solution.
 >
 > If someone has an idea, please let me know. (The only idea I have is to supply the world object
 > and functions that extract such status information.. But the idea of THIS in BSL is mind-
 > boggling. Even for ISL I am not sure.)
 >
 > (5) Then I decided to think about examples. I can't come up with an example where I need this
 > kind of thing. If you have a decent example, let me know.
 >
 > I am closing the request for now. If something new develops, we will re-open it.
 >
 >
 > View:
 >  http://bugs.racket-lang.org/query/?cmd=view&pr=12043
 >
 >
 
