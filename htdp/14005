From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Sat Sep  7 14:21:09 2013
Received: from mail-pa0-f46.google.com (mail-pa0-f46.google.com [209.85.220.46])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id r87IL5aw015755
	for <bugs@bugs.plt-scheme.org>; Sat, 7 Sep 2013 14:21:05 -0400
Message-Id: <201309071821.r87IL1VF015749@champlain.ccs.neu.edu>
Date: Sat, 7 Sep 2013 14:21:01 -0400
From: nr@cs.tufts.edu
To: bugs@racket-lang.org
Subject: big-bang does not stop when Stop button is pressed

>Number:         14005
>Category:       htdp
>Synopsis:       big-bang does not stop when Stop button is pressed
>Class:          sw-bug
>Responsible:    matthias
>Severity:       non-critical
>Priority:       medium
>State:          analyzed
>Confidential:   no
>Arrival-Date:   Sat Sep 07 14:24:02 -0400 2013
>Closed-Date:    
>Last-Modified:  Wed Oct 30 11:55:52 -0400 2013
>Originator:     Norman Ramsey
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.3.6
>Environment:
unix "Linux homedog 3.2.0-4-686-pae #1 SMP Debian 3.2.46-1+deb7u1 i686 GNU/Linux" (i386-linux/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 132247572
Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()
raco pkg (show):
Installation-wide:
 [none]
User-specific, all-version:
 [none]
User-specific, version-specific (5.3.6):
 [none]



Collections:
("/home/nr/.racket/5.3.6/collects"
 (non-existent-path))
("/usr/local/lib/racket/collects"
 ("pkg" "reader" "compatibility" "sgl" "picturing-programs" "s-exp" "hierlist" "parser-tools" "schemeunit" "typed" "info-domain" "mzlib" "typed-racket" "version" "db" "data" "launcher" "browser" "wxme" "help" "unstable" "setup" "net" "mysterx" "plai" "math" "string-constants" "r5rs" "defaults" "macro-debugger" "make" "redex" "typed-scheme" "srfi" "icons" "config" "scriblib" "file" "raco" "framework" "realm" "tests" "lazy" "mzcom" "readline" "swindle" "openssl" "html" "future-visualizer" "xrepl" "embedded-gui" "r6rs" "rackunit" "htdp" "algol60" "xml" "planet" "games" "mrlib" "profile" "mzscheme" "drscheme" "racklog" "lang" "teachpack" "mred" "graphics" "web-server" "scribble" "images" "plot" "test-engine" "gui-debugger" "scheme" "drracket" "trace" "errortrace" "syntax-color" "2htdp" "frtime" "syntax" "texpict" "slideshow" "at-exp" "eopl" "scribblings" "slatex" "deinprogramm" "datalog" "preprocessor" "rnrs" "racket" "ffi" "json" "stepper" "compiler" "dynext"))

Computer Language: (("Teaching Languages" "How to Design Programs" "Beginning Student") (#(#t constructor repeating-decimal #f #t none) #f ((lib "image.rkt" "teachpack" "2htdp") (lib "universe.rkt" "teachpack" "2htdp"))))
>Description:
The documentation for 2htdp/universe says
that when the Stop button is pressed, big-bang
stops and returns the world.  But for me it 
simply says "user break" in the interactions window and the animation keeps going.
>How-To-Repeat:
Load http://www.cs.tufts.edu/~nr/drop/01traffic.rkt and run (demo 0.8)
>Fix:
>Audit-Trail:
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: nr@cs.tufts.edu, bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/14005: big-bang does not stop when Stop button is pressed
Date: Sun, 8 Sep 2013 20:00:50 +0200

 Click several time rapidly on Stop and you get an kill or break dialog. You want kill. 
 
 
 But yes, this program confirms the behavior: 
 
 (require 2htdp/image)
 (require 2htdp/universe)
 (define (f x) (circle (+ 10 x) 'solid 'red))
 (big-bang 222 (to-draw f) (on-tick sub1) (stop-when zero?))
 
 I should check into this. 
 
 
 On Sep 7, 2013, at 8:24 PM, nr@cs.tufts.edu wrote:
 
 > A new problem report is waiting at
 >  http://bugs.racket-lang.org/query/?cmd=view&pr=14005
 > 
 > Reported by Norman Ramsey for release: 5.3.6
 > 
 > *** Description:
 > The documentation for 2htdp/universe says
 > that when the Stop button is pressed, big-bang
 > stops and returns the world.  But for me it 
 > simply says "user break" in the interactions window and the animation keeps going.
 > 
 > *** How to repeat:
 > Load http://www.cs.tufts.edu/~nr/drop/01traffic.rkt and run (demo 0.8)
 > 
 > *** Environment:
 > unix "Linux homedog 3.2.0-4-686-pae #1 SMP Debian 3.2.46-1+deb7u1 i686 GNU/Linux" (i386-linux/3m) (get-display-depth) = 32
 > Human Language: english
 > (current-memory-use) 132247572
 > Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()
 > raco pkg (show):
 > Installation-wide:
 > [none]
 > User-specific, all-version:
 > [none]
 > User-specific, version-specific (5.3.6):
 > [none]
 > 
 > 
 > 
 > Collections:
 > ("/home/nr/.racket/5.3.6/collects"
 > (non-existent-path))
 > ("/usr/local/lib/racket/collects"
 > ("pkg" "reader" "compatibility" "sgl" "picturing-programs" "s-exp" "hierlist" "parser-tools" "schemeunit" "typed" "info-domain" "mzlib" "typed-racket" "version" "db" "data" "launcher" "browser" "wxme" "help" "unstable" "setup" "net" "mysterx" "plai" "math" "string-constants" "r5rs" "defaults" "macro-debugger" "make" "redex" "typed-scheme" "srfi" "icons" "config" "scriblib" "file" "raco" "framework" "realm" "tests" "lazy" "mzcom" "readline" "swindle" "openssl" "html" "future-visualizer" "xrepl" "embedded-gui" "r6rs" "rackunit" "htdp" "algol60" "xml" "planet" "games" "mrlib" "profile" "mzscheme" "drscheme" "racklog" "lang" "teachpack" "mred" "graphics" "web-server" "scribble" "images" "plot" "test-engine" "gui-debugger" "scheme" "drracket" "trace" "errortrace" "syntax-color" "2htdp" "frtime" "syntax" "texpict" "slideshow" "at-exp" "eopl" "scribblings" "slatex" "deinprogramm" "datalog" "preprocessor" "rnrs" "racket" "ffi" "json" "stepper" "compiler" "dynext"))
 > 
 > Computer Language: (("Teaching Languages" "How to Design Programs" "Beginning Student") (#(#t constructor repeating-decimal #f #t none) #f ((lib "image.rkt" "teachpack" "2htdp") (lib "universe.rkt" "teachpack" "2htdp"))))
 > 
 
 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: Norman Ramsey <nr@cs.tufts.edu>, bugs <bugs@racket-lang.org>,
        nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/14005: big-bang does not stop when Stop button
 is pressed
Date: Sun, 8 Sep 2013 13:23:20 -0500

 --047d7b2e477cc8885004e5e35dff
 Content-Type: text/plain; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 Probably <menu-shortcut-key>-k is a better work around than repeatedly
 clicking on the break button.
 
 FWIW, the break button calls break-thread on the user's eventspace's
 handler thread (or at least, it is supposed to). So you can work on this
 bug without relying on non-buggyness of DrRacket, with something like this:
 
 #lang racket/gui
 
 (let ()
   (define thread-to-break (current-thread))
   (define eventspace (make-eventspace))
   (define f
     (parameterize ([current-eventspace eventspace])
       (new frame% [label ""])))
   (parameterize ([current-eventspace eventspace])
     (queue-callback
      (=CE=BB ()
        (new button%
             [label "Break"]
             [parent f]
             [callback
              (=CE=BB x (break-thread thread-to-break))])
        (send f show #t)))))
 
 
 #|
 (require 2htdp/image)
 (require 2htdp/universe)
 (define (f x) (circle (+ 10 x) 'solid 'red))
 (big-bang 222 (to-draw f) (on-tick sub1) (stop-when zero?))
 |#
 
 'before
 (with-handlers ([exn:break? void])
   (semaphore-wait (make-semaphore 0)))
 'after
 
 There is some subtlety in getting the thread over to the break button that
 can go wrong .... this will help avoid confusion as bugs here should be
 only 2htdp/universe's fault.
 
 hth,
 Robby
 
 --047d7b2e477cc8885004e5e35dff
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 <div dir=3D"ltr"><div>Probably &lt;menu-shortcut-key&gt;-k is a better work=
  around than repeatedly clicking on the break button.</div><div><br></div>F=
 WIW, the break button calls break-thread on the user&#39;s eventspace&#39;s=
  handler thread (or at least, it is supposed to). So you can work on this b=
 ug without relying on non-buggyness of DrRacket, with something like this:<=
 div>
 <br></div><div><div>#lang racket/gui</div><div><br></div><div>(let ()</div>=
 <div>=C2=A0 (define thread-to-break (current-thread))</div><div>=C2=A0 (def=
 ine eventspace (make-eventspace))</div><div>=C2=A0 (define f=C2=A0</div><di=
 v>=C2=A0 =C2=A0 (parameterize ([current-eventspace eventspace])</div>
 <div>=C2=A0 =C2=A0 =C2=A0 (new frame% [label &quot;&quot;])))</div><div>=C2=
 =A0 (parameterize ([current-eventspace eventspace])</div><div>=C2=A0 =C2=A0=
  (queue-callback</div><div>=C2=A0 =C2=A0 =C2=A0(=CE=BB ()=C2=A0</div><div>=
 =C2=A0 =C2=A0 =C2=A0 =C2=A0(new button%=C2=A0</div><div>=C2=A0 =C2=A0 =C2=
 =A0 =C2=A0 =C2=A0 =C2=A0 [label &quot;Break&quot;]</div>
 <div>=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 [parent f]</div><div>=C2=A0 =
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 [callback=C2=A0</div><div>=C2=A0 =C2=A0 =
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(=CE=BB x (break-thread thread-to-break))=
 ])</div><div>=C2=A0 =C2=A0 =C2=A0 =C2=A0(send f show #t)))))</div><div>=C2=
 =A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=C2=A0</div><div><br></div><div>#|</d=
 iv><div>
 (require 2htdp/image)</div><div>(require 2htdp/universe)</div><div>(define =
 (f x) (circle (+ 10 x) &#39;solid &#39;red))</div><div>(big-bang 222 (to-dr=
 aw f) (on-tick sub1) (stop-when zero?))</div><div>|#</div><div><br></div>
 <div>&#39;before</div><div>(with-handlers ([exn:break? void])</div><div>=C2=
 =A0 (semaphore-wait (make-semaphore 0)))</div><div>&#39;after</div></div><d=
 iv><br></div><div>There is some subtlety in getting the thread over to the =
 break button that can go wrong .... this will help avoid confusion as bugs =
 here should be only 2htdp/universe&#39;s fault.</div>
 <div><br></div><div>hth,</div><div>Robby</div><div><br></div></div>
 
 --047d7b2e477cc8885004e5e35dff--


State changed from "open" to "analyzed" by matthias at Wed, 30 Oct 2013 11:55:52 -0400
Reason>>> .

