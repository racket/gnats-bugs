From apache@plt-scheme.org Mon Apr 24 10:51:22 2006
Received: from champlain.ccs.neu.edu (champlain.ccs.neu.edu [127.0.0.1])
	by champlain.ccs.neu.edu (8.12.10/8.12.10) with ESMTP id k3OEpFZ4009641
	for <bugs@plt-scheme.org>; Mon, 24 Apr 2006 10:51:15 -0400
Message-Id: <200604241451.k3OEpF7Y009639@champlain.ccs.neu.edu>
Date: Mon, 24 Apr 2006 10:51:15 -0400
From: charlotte.ealick@gmail.com
To: bugs@plt-scheme.org
Subject: problem adding Matthias' new teachpack for hangman

>Number:         8018
>Category:       htdp
>Synopsis:       problem adding Matthias' new teachpack for hangman
>Class:          support
>Responsible:    matthias
>Severity:       non-critical
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Mon Apr 24 10:55:00 -0400 2006
>Last-Modified:  Mon May 05 17:04:27 -0400 2008
>Originator:     Charlotte Ealick
>Organization:
plt
>Submitter-Id:   unknown
>Release:        300
>Environment:
windows-xp
>Description:
I am trying to add the hangman-world teachpack which Matthias posted to the list.
I get this error message:
The teachpack file C:\Program Files\PLT\teachpack\htdp\hangman-world.ss did not load properly.
text-editor-load-handler: expected only a `module' declaration for `hangman-world', but found an extra expression.

Can you tell me what I am doing wrong?  I have copied the file to the teachpacks folder as is.  Then using the Language/ Add teachpack option within DrScheme

Thanks,
Charlotte

>How-To-Repeat:
>Fix:
>Audit-Trail:
Responsible changed from "nobody" to "matthias" by matthias at Mon, 24 Apr 2006 13:22:01 -0400
Reason>>> .

State changed from "open" to "closed" by matthias at Mon, 24 Apr 2006 13:22:01 -0400
Reason>>> mf, not a bug, explained 

From: Matthias Felleisen <matthias@ccs.neu.edu>
To: charlotte.ealick@gmail.com, bugs@plt-scheme.org
Cc: gnats@brinckerhoff.org, eli@barzilay.org, dalev@ccs.neu.edu,
        kathyg@cs.utah.edu, goldberg@cs.utah.edu, nobody@plt-scheme.org,
        sk@cs.brown.edu, jacobm@cs.uchicago.edu, meunier@ccs.neu.edu,
        jay@kenyamountain.com, mflatt@cs.utah.edu, dskippy@ccs.neu.edu,
        robby@cs.uchicago.edu, awick@cs.utah.edu, sowens@cs.utah.edu,
        cce@ccs.neu.edu
Subject: Re: all/8018: problem adding Matthias' new teachpack for hangman
Date: Mon, 24 Apr 2006 13:25:36 -0400

 Not a bug.
 
 I can't reproduce this report at all, neither on v300 nor on v301.
 
 On Apr 24, 2006, at 10:55 AM, charlotte.ealick@gmail.com wrote:
 
 > A new problem report is waiting at
 >   http://bugs.plt-scheme.org/query/?cmd=view&pr=8018
 >
 > Reported by Charlotte Ealick for release: 300
 >
 > *** Description:
 > I am trying to add the hangman-world teachpack which Matthias posted 
 > to the list.
 > I get this error message:
 > The teachpack file C:\Program 
 > Files\PLT\teachpack\htdp\hangman-world.ss did not load properly.
 > text-editor-load-handler: expected only a `module' declaration for 
 > `hangman-world', but found an extra expression.
 
 This suggests you saved it from email and didn't eliminate the mail 
 header or the signature or something like that.
 
 > Can you tell me what I am doing wrong?  I have copied the file to the 
 > teachpacks folder as is.  Then using the Language/ Add teachpack 
 > option within DrScheme
 
 hangman-world.ss is a teachpack.
 
 hangman-world-play.ss is a file in the module Scheme language for 
 testing the teachpack. I am attaching a file in Intermediate plus 
 Lambda, which is the same file but comments out the first three lines 
 (and the last).
 
 To run  the game, place the teachpack in the teachpack directory. Add 
 world.ss and hangman-world.ss as teachpacks. Play by pressing the keys 
 on your keyboard.
 
 -- Matthias
 
 
 
 
 >
 > Thanks,
 > Charlotte
 >
 >
 > *** How to repeat:
 >
 >
 > *** Environment:
 > windows-xp
 >
 
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: charlotte.ealick@gmail.com, bugs@plt-scheme.org
Cc: 
Subject: Re: all/8018: problem adding Matthias' new teachpack for hangman
Date: Mon, 24 Apr 2006 13:28:47 -0400

 --Apple-Mail-1-88803193
 Content-Transfer-Encoding: 7bit
 Content-Type: application/text;
 	x-mac-type=54455854;
 	x-unix-mode=0644;
 	x-mac-creator=44725363;
 	name="hangman-world-play.ss"
 Content-Disposition: attachment;
 	filename=hangman-world-play.ss
 
 ;(module hangman-world-play mzscheme 
 ;  (require "hangman-world.ss"
 ;           (lib "world.ss" "htdp")
 ;           (lib "etc.ss"))
 ;  
   #| ------------------------------------------------------------------------
   add-next-part :
   { 'noose 'head 'right-arm 'left-arm 'body 'right-leg 'left-leg } scene -> scene
   result: #t if things went okay
   effect: to add the specified body part in a canvas of size W x H
   credit: John Clements 
   |#
   (define (add-next-part body-part s)
     (cond ((eq? body-part 'body)
            (add-line s 100 60 100 130 'black))
           ((eq? body-part 'right-leg)
            (add-line s 100 130 30 170 'black))
           ((eq? body-part 'left-leg)
            (add-line s 100 130 170 170 'black))
           ((eq? body-part 'right-arm)
            (add-line s 100 75 40 65 'black))
           ((eq? body-part 'left-arm)
            (add-line s 100 75 160 65 'black))
           ((eq? body-part 'head)
            (place-image (circle 10 'outline 'black) 100 50 s))
           ((eq? body-part 'noose)
            (local ((define s1 (add-line s  100 30 100 10 'black))
                    (define s2 (add-line s1 100 10   0 10 'black))
                    (define s3 (add-line s2 115 35 123 43 'black))
                    (define s4 (add-line s3 123 35 115 43 'black))
                    (define s5 (add-line s4 131 40 139 48 'black))
                    (define s6 (add-line s5 139 40 131 48 'black)))
              (place-image (circle 30 'outline 'red) 120 50 s6)))
           (else (error 'ouch))))
   
   ;; reveal-list : list-of-letters list-of-letters letter -> list-of-letters
   (define (reveal-list l1 l2 gu)
     (map (lambda (x1 x2)
            (cond
              [(symbol=? x1 gu) gu]
              [else x2]))
          l1 l2))
   
   (define (go-list x) (hangman-list reveal-list add-next-part))
   
   ;; reveal : Word Words Letter -> Word 
   (define (reveal l1 l2 gu)
     (make-word 
      (reveal1 (word-one l1) (word-one l2) gu)
      (reveal1 (word-two l1) (word-two l2) gu)
      (reveal1 (word-three l1) (word-three l2) gu)))
   
   (define (reveal1 x1 x2 gu)
     (cond
       [(symbol=? x1 gu) gu]
       [else x2]))
   
   (define (go x) (hangman reveal add-next-part))
   ;)
 
 --Apple-Mail-1-88803193--
 

