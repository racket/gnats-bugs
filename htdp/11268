From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Wed Sep 29 17:38:49 2010
Received: from mail-gw0-f44.google.com (mail-gw0-f44.google.com [74.125.83.44])
	by champlain.ccs.neu.edu (8.14.3/8.14.3) with ESMTP id o8TLcli6022380
	for <bugs@bugs.plt-scheme.org>; Wed, 29 Sep 2010 17:38:47 -0400
Message-Id: <201009292138.o8TLciX2022372@champlain.ccs.neu.edu>
Date: Wed, 29 Sep 2010 17:38:44 -0400
From: asumu@ccs.neu.edu
To: bugs@racket-lang.org
Subject: check-expect breaks in BSL if you require racket

>Number:         11268
>Category:       htdp
>Synopsis:       check-expect breaks in BSL if you require racket
>Class:          sw-bug
>Responsible:    matthias
>Severity:       non-critical
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Wed Sep 29 17:40:01 -0400 2010
>Closed-Date:    Wed Jun 01 11:07:12 -0400 2011
>Last-Modified:  Wed Jun 01 11:07:12 -0400 2011
>Originator:     Asumu Takikawa
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.0.1
>Environment:
unix "Linux calcifer 2.6.32-5-amd64 #1 SMP Fri Sep 17 21:50:19 UTC 2010 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 24
Human Language: english
(current-memory-use) 207399608

Collections:
(("/home/asumu/.racket/5.0.1/collects" non-existent-path) ("/home/asumu/plt/current/collects" "teachpack" "planet" "mred" "redex" "slideshow" "htdp" "mzscheme" "scribblings" "ffi" "lang" "help" "racklog" "games" "lazy" "typed-scheme" "version" "mrlib" "openssl" "scribble" "launcher" "profile" "unstable" "errortrace" "drscheme" "wxme" "plai" "datalog" "at-exp" "eopl" "typed" "test-box-recovery" "web-server" "scheme" "stepper" "setup" "file" "embedded-gui" "tests" "deinprogramm" "rackunit" "schemeunit" "drracket" "srfi" "compiler" "afm" "r6rs" "reader" "config" "html" "gui-debugger" "readline" "syntax-color" "hierlist" "info-domain" "string-constants" "plot" "trace" "r5rs" "macro-debugger" "preprocessor" "mysterx" "algol60" "parser-tools" "2htdp" "slatex" "icons" "defaults" "swindle" "s-exp" "xml" "make" "raco" "rnrs" "browser" "racket" "frtime" "net" "graphics" "tex2page" "combinator-parser" "mzcom" "texpict" "sgl" "test-engine" "scriblib" "framework" "mzlib" "dynext" "syntax!
 "))
Computer Language: (("Teaching Languages" "How to Design Programs" "Beginning Student") (#(#t constructor repeating-decimal #f #t none) #f ()))
>Description:
Requiring racket/base breaks check-expect in BSL (also ISL, ASL).
Presumably, this is caused by making structures become opaque.

The behaviour I would expect in this case is that BSL wouldn't let you
require racket/base or other core racket libraries at all.

I've also reproduced this issue in 5.0.1.6.
>How-To-Repeat:
Run the following code in DrRacket:

(require racket/base)

(define-struct foo (a b))

(check-expect (foo 3 4)
              (foo 3 4))

This will raise a test error that the expressions don't evaluate to equal values.
>Fix:
>Audit-Trail:
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: asumu@ccs.neu.edu, bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11268: check-expect breaks in BSL if you require racket
Date: Thu, 30 Sep 2010 09:14:50 -0400

 How did this come about?  The idea of requiring racket/base into a *SL =
 language is exactly what we don't want. require used to be restricted so =
 that you couldn't do it.=20
 
 
 On Sep 29, 2010, at 5:40 PM, asumu@ccs.neu.edu wrote:
 
 > A new problem report is waiting at
 >  http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D11268
 >=20
 > Reported by Asumu Takikawa for release: 5.0.1
 >=20
 > *** Description:
 > Requiring racket/base breaks check-expect in BSL (also ISL, ASL).
 > Presumably, this is caused by making structures become opaque.
 >=20
 > The behaviour I would expect in this case is that BSL wouldn't let you
 > require racket/base or other core racket libraries at all.
 >=20
 > I've also reproduced this issue in 5.0.1.6.
 >=20
 > *** How to repeat:
 > Run the following code in DrRacket:
 >=20
 > (require racket/base)
 >=20
 > (define-struct foo (a b))
 >=20
 > (check-expect (foo 3 4)
 >              (foo 3 4))
 >=20
 > This will raise a test error that the expressions don't evaluate to =
 equal values.
 >=20
 > *** Environment:
 > unix "Linux calcifer 2.6.32-5-amd64 #1 SMP Fri Sep 17 21:50:19 UTC =
 2010 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) =3D 24
 > Human Language: english
 > (current-memory-use) 207399608
 >=20
 > Collections:
 > (("/home/asumu/.racket/5.0.1/collects" non-existent-path) =
 ("/home/asumu/plt/current/collects" "teachpack" "planet" "mred" "redex" =
 "slideshow" "htdp" "mzscheme" "scribblings" "ffi" "lang" "help" =
 "racklog" "games" "lazy" "typed-scheme" "version" "mrlib" "openssl" =
 "scribble" "launcher" "profile" "unstable" "errortrace" "drscheme" =
 "wxme" "plai" "datalog" "at-exp" "eopl" "typed" "test-box-recovery" =
 "web-server" "scheme" "stepper" "setup" "file" "embedded-gui" "tests" =
 "deinprogramm" "rackunit" "schemeunit" "drracket" "srfi" "compiler" =
 "afm" "r6rs" "reader" "config" "html" "gui-debugger" "readline" =
 "syntax-color" "hierlist" "info-domain" "string-constants" "plot" =
 "trace" "r5rs" "macro-debugger" "preprocessor" "mysterx" "algol60" =
 "parser-tools" "2htdp" "slatex" "icons" "defaults" "swindle" "s-exp" =
 "xml" "make" "raco" "rnrs" "browser" "racket" "frtime" "net" "graphics" =
 "tex2page" "combinator-parser" "mzcom" "texpict" "sgl" "test-engine" =
 "scriblib" "framework" "mzlib" "dynext" "syntax!
 > "))
 > Computer Language: (("Teaching Languages" "How to Design Programs" =
 "Beginning Student") (#(#t constructor repeating-decimal #f #t none) #f =
 ()))
 >=20
 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: asumu@ccs.neu.edu, bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11268: check-expect breaks in BSL if you require racket
Date: Thu, 30 Sep 2010 08:32:07 -0500

 How was require restricted?
 
 Robby
 
 On Thu, Sep 30, 2010 at 8:14 AM, Matthias Felleisen
 <matthias@ccs.neu.edu> wrote:
 >
 > How did this come about? =C2=A0The idea of requiring racket/base into a *=
 SL language is exactly what we don't want. require used to be restricted so=
  that you couldn't do it.
 >
 >
 > On Sep 29, 2010, at 5:40 PM, asumu@ccs.neu.edu wrote:
 >
 >> A new problem report is waiting at
 >> =C2=A0http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D11268
 >>
 >> Reported by Asumu Takikawa for release: 5.0.1
 >>
 >> *** Description:
 >> Requiring racket/base breaks check-expect in BSL (also ISL, ASL).
 >> Presumably, this is caused by making structures become opaque.
 >>
 >> The behaviour I would expect in this case is that BSL wouldn't let you
 >> require racket/base or other core racket libraries at all.
 >>
 >> I've also reproduced this issue in 5.0.1.6.
 >>
 >> *** How to repeat:
 >> Run the following code in DrRacket:
 >>
 >> (require racket/base)
 >>
 >> (define-struct foo (a b))
 >>
 >> (check-expect (foo 3 4)
 >> =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(foo 3 4))
 >>
 >> This will raise a test error that the expressions don't evaluate to equa=
 l values.
 >>
 >> *** Environment:
 >> unix "Linux calcifer 2.6.32-5-amd64 #1 SMP Fri Sep 17 21:50:19 UTC 2010 =
 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) =3D 24
 >> Human Language: english
 >> (current-memory-use) 207399608
 >>
 >> Collections:
 >> (("/home/asumu/.racket/5.0.1/collects" non-existent-path) ("/home/asumu/=
 plt/current/collects" "teachpack" "planet" "mred" "redex" "slideshow" "htdp=
 " "mzscheme" "scribblings" "ffi" "lang" "help" "racklog" "games" "lazy" "ty=
 ped-scheme" "version" "mrlib" "openssl" "scribble" "launcher" "profile" "un=
 stable" "errortrace" "drscheme" "wxme" "plai" "datalog" "at-exp" "eopl" "ty=
 ped" "test-box-recovery" "web-server" "scheme" "stepper" "setup" "file" "em=
 bedded-gui" "tests" "deinprogramm" "rackunit" "schemeunit" "drracket" "srfi=
 " "compiler" "afm" "r6rs" "reader" "config" "html" "gui-debugger" "readline=
 " "syntax-color" "hierlist" "info-domain" "string-constants" "plot" "trace"=
  "r5rs" "macro-debugger" "preprocessor" "mysterx" "algol60" "parser-tools" =
 "2htdp" "slatex" "icons" "defaults" "swindle" "s-exp" "xml" "make" "raco" "=
 rnrs" "browser" "racket" "frtime" "net" "graphics" "tex2page" "combinator-p=
 arser" "mzcom" "texpict" "sgl" "test-engine" "scriblib" "framework" "mzlib"=
  "dynext" "syntax!
 >> "))
 >> Computer Language: (("Teaching Languages" "How to Design Programs" "Begi=
 nning Student") (#(#t constructor repeating-decimal #f #t none) #f ()))
 >>
 >
 >
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: asumu@ccs.neu.edu, bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11268: check-expect breaks in BSL if you require racket
Date: Thu, 30 Sep 2010 09:41:56 -0400

 Initially there wasn't one. And then there as a syntactic restriction =
 (just strings) that made it difficult to load such files.=20
 
 BTW, in general this suggests a problem with loading language A into =
 language B. Another place where we drop the ball.=20
 
 
 
 On Sep 30, 2010, at 9:32 AM, Robby Findler wrote:
 
 > How was require restricted?
 >=20
 > Robby
 >=20
 > On Thu, Sep 30, 2010 at 8:14 AM, Matthias Felleisen
 > <matthias@ccs.neu.edu> wrote:
 >>=20
 >> How did this come about?  The idea of requiring racket/base into a =
 *SL language is exactly what we don't want. require used to be =
 restricted so that you couldn't do it.
 >>=20
 >>=20
 >> On Sep 29, 2010, at 5:40 PM, asumu@ccs.neu.edu wrote:
 >>=20
 >>> A new problem report is waiting at
 >>>  http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D11268
 >>>=20
 >>> Reported by Asumu Takikawa for release: 5.0.1
 >>>=20
 >>> *** Description:
 >>> Requiring racket/base breaks check-expect in BSL (also ISL, ASL).
 >>> Presumably, this is caused by making structures become opaque.
 >>>=20
 >>> The behaviour I would expect in this case is that BSL wouldn't let =
 you
 >>> require racket/base or other core racket libraries at all.
 >>>=20
 >>> I've also reproduced this issue in 5.0.1.6.
 >>>=20
 >>> *** How to repeat:
 >>> Run the following code in DrRacket:
 >>>=20
 >>> (require racket/base)
 >>>=20
 >>> (define-struct foo (a b))
 >>>=20
 >>> (check-expect (foo 3 4)
 >>>              (foo 3 4))
 >>>=20
 >>> This will raise a test error that the expressions don't evaluate to =
 equal values.
 >>>=20
 >>> *** Environment:
 >>> unix "Linux calcifer 2.6.32-5-amd64 #1 SMP Fri Sep 17 21:50:19 UTC =
 2010 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) =3D 24
 >>> Human Language: english
 >>> (current-memory-use) 207399608
 >>>=20
 >>> Collections:
 >>> (("/home/asumu/.racket/5.0.1/collects" non-existent-path) =
 ("/home/asumu/plt/current/collects" "teachpack" "planet" "mred" "redex" =
 "slideshow" "htdp" "mzscheme" "scribblings" "ffi" "lang" "help" =
 "racklog" "games" "lazy" "typed-scheme" "version" "mrlib" "openssl" =
 "scribble" "launcher" "profile" "unstable" "errortrace" "drscheme" =
 "wxme" "plai" "datalog" "at-exp" "eopl" "typed" "test-box-recovery" =
 "web-server" "scheme" "stepper" "setup" "file" "embedded-gui" "tests" =
 "deinprogramm" "rackunit" "schemeunit" "drracket" "srfi" "compiler" =
 "afm" "r6rs" "reader" "config" "html" "gui-debugger" "readline" =
 "syntax-color" "hierlist" "info-domain" "string-constants" "plot" =
 "trace" "r5rs" "macro-debugger" "preprocessor" "mysterx" "algol60" =
 "parser-tools" "2htdp" "slatex" "icons" "defaults" "swindle" "s-exp" =
 "xml" "make" "raco" "rnrs" "browser" "racket" "frtime" "net" "graphics" =
 "tex2page" "combinator-parser" "mzcom" "texpict" "sgl" "test-engine" =
 "scriblib" "framework" "mzlib" "dynext" "syntax!
 >>> "))
 >>> Computer Language: (("Teaching Languages" "How to Design Programs" =
 "Beginning Student") (#(#t constructor repeating-decimal #f #t none) #f =
 ()))
 >>>=20
 >>=20
 >>=20
 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: asumu@ccs.neu.edu, bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11268: check-expect breaks in BSL if you require racket
Date: Thu, 30 Sep 2010 08:54:19 -0500

 I don't understand. That restriction seems wrong, since it rules out
 (require 2htdp/image).
 
 Robby
 
 On Thu, Sep 30, 2010 at 8:41 AM, Matthias Felleisen
 <matthias@ccs.neu.edu> wrote:
 >
 > Initially there wasn't one. And then there as a syntactic restriction (ju=
 st strings) that made it difficult to load such files.
 >
 > BTW, in general this suggests a problem with loading language A into lang=
 uage B. Another place where we drop the ball.
 >
 >
 >
 > On Sep 30, 2010, at 9:32 AM, Robby Findler wrote:
 >
 >> How was require restricted?
 >>
 >> Robby
 >>
 >> On Thu, Sep 30, 2010 at 8:14 AM, Matthias Felleisen
 >> <matthias@ccs.neu.edu> wrote:
 >>>
 >>> How did this come about? =C2=A0The idea of requiring racket/base into a=
  *SL language is exactly what we don't want. require used to be restricted =
 so that you couldn't do it.
 >>>
 >>>
 >>> On Sep 29, 2010, at 5:40 PM, asumu@ccs.neu.edu wrote:
 >>>
 >>>> A new problem report is waiting at
 >>>> =C2=A0http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D11268
 >>>>
 >>>> Reported by Asumu Takikawa for release: 5.0.1
 >>>>
 >>>> *** Description:
 >>>> Requiring racket/base breaks check-expect in BSL (also ISL, ASL).
 >>>> Presumably, this is caused by making structures become opaque.
 >>>>
 >>>> The behaviour I would expect in this case is that BSL wouldn't let you
 >>>> require racket/base or other core racket libraries at all.
 >>>>
 >>>> I've also reproduced this issue in 5.0.1.6.
 >>>>
 >>>> *** How to repeat:
 >>>> Run the following code in DrRacket:
 >>>>
 >>>> (require racket/base)
 >>>>
 >>>> (define-struct foo (a b))
 >>>>
 >>>> (check-expect (foo 3 4)
 >>>> =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(foo 3 4))
 >>>>
 >>>> This will raise a test error that the expressions don't evaluate to eq=
 ual values.
 >>>>
 >>>> *** Environment:
 >>>> unix "Linux calcifer 2.6.32-5-amd64 #1 SMP Fri Sep 17 21:50:19 UTC 201=
 0 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) =3D 24
 >>>> Human Language: english
 >>>> (current-memory-use) 207399608
 >>>>
 >>>> Collections:
 >>>> (("/home/asumu/.racket/5.0.1/collects" non-existent-path) ("/home/asum=
 u/plt/current/collects" "teachpack" "planet" "mred" "redex" "slideshow" "ht=
 dp" "mzscheme" "scribblings" "ffi" "lang" "help" "racklog" "games" "lazy" "=
 typed-scheme" "version" "mrlib" "openssl" "scribble" "launcher" "profile" "=
 unstable" "errortrace" "drscheme" "wxme" "plai" "datalog" "at-exp" "eopl" "=
 typed" "test-box-recovery" "web-server" "scheme" "stepper" "setup" "file" "=
 embedded-gui" "tests" "deinprogramm" "rackunit" "schemeunit" "drracket" "sr=
 fi" "compiler" "afm" "r6rs" "reader" "config" "html" "gui-debugger" "readli=
 ne" "syntax-color" "hierlist" "info-domain" "string-constants" "plot" "trac=
 e" "r5rs" "macro-debugger" "preprocessor" "mysterx" "algol60" "parser-tools=
 " "2htdp" "slatex" "icons" "defaults" "swindle" "s-exp" "xml" "make" "raco"=
  "rnrs" "browser" "racket" "frtime" "net" "graphics" "tex2page" "combinator=
 -parser" "mzcom" "texpict" "sgl" "test-engine" "scriblib" "framework" "mzli=
 b" "dynext" "syntax!
 >>>> "))
 >>>> Computer Language: (("Teaching Languages" "How to Design Programs" "Be=
 ginning Student") (#(#t constructor repeating-decimal #f #t none) #f ()))
 >>>>
 >>>
 >>>
 >
 >
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: asumu@ccs.neu.edu, bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11268: check-expect breaks in BSL if you require racket
Date: Thu, 30 Sep 2010 10:06:56 -0400

 At the time we had this restriction, we thought Add teachpacks was all =
 we needed.=20
 
 
 
 On Sep 30, 2010, at 9:54 AM, Robby Findler wrote:
 
 > I don't understand. That restriction seems wrong, since it rules out
 > (require 2htdp/image).
 >=20
 > Robby
 >=20
 > On Thu, Sep 30, 2010 at 8:41 AM, Matthias Felleisen
 > <matthias@ccs.neu.edu> wrote:
 >>=20
 >> Initially there wasn't one. And then there as a syntactic restriction =
 (just strings) that made it difficult to load such files.
 >>=20
 >> BTW, in general this suggests a problem with loading language A into =
 language B. Another place where we drop the ball.
 >>=20
 >>=20
 >>=20
 >> On Sep 30, 2010, at 9:32 AM, Robby Findler wrote:
 >>=20
 >>> How was require restricted?
 >>>=20
 >>> Robby
 >>>=20
 >>> On Thu, Sep 30, 2010 at 8:14 AM, Matthias Felleisen
 >>> <matthias@ccs.neu.edu> wrote:
 >>>>=20
 >>>> How did this come about?  The idea of requiring racket/base into a =
 *SL language is exactly what we don't want. require used to be =
 restricted so that you couldn't do it.
 >>>>=20
 >>>>=20
 >>>> On Sep 29, 2010, at 5:40 PM, asumu@ccs.neu.edu wrote:
 >>>>=20
 >>>>> A new problem report is waiting at
 >>>>>  http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D11268
 >>>>>=20
 >>>>> Reported by Asumu Takikawa for release: 5.0.1
 >>>>>=20
 >>>>> *** Description:
 >>>>> Requiring racket/base breaks check-expect in BSL (also ISL, ASL).
 >>>>> Presumably, this is caused by making structures become opaque.
 >>>>>=20
 >>>>> The behaviour I would expect in this case is that BSL wouldn't let =
 you
 >>>>> require racket/base or other core racket libraries at all.
 >>>>>=20
 >>>>> I've also reproduced this issue in 5.0.1.6.
 >>>>>=20
 >>>>> *** How to repeat:
 >>>>> Run the following code in DrRacket:
 >>>>>=20
 >>>>> (require racket/base)
 >>>>>=20
 >>>>> (define-struct foo (a b))
 >>>>>=20
 >>>>> (check-expect (foo 3 4)
 >>>>>              (foo 3 4))
 >>>>>=20
 >>>>> This will raise a test error that the expressions don't evaluate =
 to equal values.
 >>>>>=20
 >>>>> *** Environment:
 >>>>> unix "Linux calcifer 2.6.32-5-amd64 #1 SMP Fri Sep 17 21:50:19 UTC =
 2010 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) =3D 24
 >>>>> Human Language: english
 >>>>> (current-memory-use) 207399608
 >>>>>=20
 >>>>> Collections:
 >>>>> (("/home/asumu/.racket/5.0.1/collects" non-existent-path) =
 ("/home/asumu/plt/current/collects" "teachpack" "planet" "mred" "redex" =
 "slideshow" "htdp" "mzscheme" "scribblings" "ffi" "lang" "help" =
 "racklog" "games" "lazy" "typed-scheme" "version" "mrlib" "openssl" =
 "scribble" "launcher" "profile" "unstable" "errortrace" "drscheme" =
 "wxme" "plai" "datalog" "at-exp" "eopl" "typed" "test-box-recovery" =
 "web-server" "scheme" "stepper" "setup" "file" "embedded-gui" "tests" =
 "deinprogramm" "rackunit" "schemeunit" "drracket" "srfi" "compiler" =
 "afm" "r6rs" "reader" "config" "html" "gui-debugger" "readline" =
 "syntax-color" "hierlist" "info-domain" "string-constants" "plot" =
 "trace" "r5rs" "macro-debugger" "preprocessor" "mysterx" "algol60" =
 "parser-tools" "2htdp" "slatex" "icons" "defaults" "swindle" "s-exp" =
 "xml" "make" "raco" "rnrs" "browser" "racket" "frtime" "net" "graphics" =
 "tex2page" "combinator-parser" "mzcom" "texpict" "sgl" "test-engine" =
 "scriblib" "framework" "mzlib" "dynext" "syntax!
 >>>>> "))
 >>>>> Computer Language: (("Teaching Languages" "How to Design Programs" =
 "Beginning Student") (#(#t constructor repeating-decimal #f #t none) #f =
 ()))
 >>>>>=20
 >>>>=20
 >>>>=20
 >>=20
 >>=20
 

State changed from "open" to "analyzed" by matthias at Thu, 30 Sep 2010 14:18:37 -0400
Reason>>> .


State changed from "analyzed" to "closed" by matthias at Wed, 01 Jun 2011 11:07:12 -0400
Reason>>> once we allow requires in teaching languages, there is no hope to prevent this 
problem. 

