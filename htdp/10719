From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Wed Jan 27 14:47:14 2010
Received: from mail-yx0-f171.google.com (mail-yx0-f171.google.com [209.85.210.171])
	by champlain.ccs.neu.edu (8.14.3/8.14.3) with ESMTP id o0RJlC4a011921
	for <bugs@bugs.plt-scheme.org>; Wed, 27 Jan 2010 14:47:12 -0500
Message-Id: <201001271947.o0RJl9GL011913@champlain.ccs.neu.edu>
Date: Wed, 27 Jan 2010 14:47:09 -0500
From: maukm052@hsd.k12.or.us
To: bugs@plt-scheme.org
Subject: string defintion bug

>Number:         10719
>Category:       htdp
>Synopsis:       string defintion bug
>Class:          sw-bug
>Responsible:    matthias
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Wed Jan 27 14:48:01 -0500 2010
>Closed-Date:    Mon Feb 01 11:06:12 -0500 2010
>Last-Modified:  Fri Feb 05 22:57:25 -0500 2010
>Originator:     Melissa
>Organization:
plt
>Submitter-Id:   unknown
>Release:        4.2.1
>Environment:
windows "Windows NT 5.1 (Build 2600) Service Pack 3" (win32\i386\3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 121102708

Collections:
(("C:\\Documents and Settings\\maukm052\\Application Data\\PLT Scheme\\4.2.1\\collects" non-existent-path) ("C:\\Program Files\\PLT\\collects" "2htdp" "afm" "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "defaults" "deinprogramm" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "help" "hierlist" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profile" "profj" "r5rs" "r6rs" "readline" "redex" "rnrs" "s-exp" "scheme" "scribble" "scribblings" "scriblib" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "stxclass" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tex2page" "texpict" "trace" "typed" "typed-scheme" "version" "web-server" "wxme" "xml"))
Computer Language: (("Teaching Languages" "How to Design Programs" "Beginning Student") (#(#t constructor repeating-decimal #f #t none) #f ((lib "universe.ss" "teachpack" "2htdp"))))
>Description:
when you run "leave" it doesn't do what you are telling it. if it does it is inconsistant and only works if the mouse laves the screen to the top.
if you look at "enter", it also has problems. it rarely moves the box to the mouse position and if it does the box stays on the side of the scene. the code is not there so the reprodution of the problems will be simmpler and you can test them seperatly.
 i believe the prblem is in the defintions of the strings "leave" and "enter", because when you run "button-up" with the same posn as "leave" it works fine. 
>How-To-Repeat:
;a world is a  posn
(define world1 (make-posn 50 50))

; (define (fun-for-a-world  a-world)
;   ....(posn-x  a-world)....(posn-y  a-world)....)



;consumes a world and returns a scene in which a box is drawn at the world position
;draw: world -> scene
;(define (draw w).....)

;(check-expect (draw world1)(place-image (rectangle 10 10 'solid 'black)50 50 (empty-scene 500 500)))

(define (draw a-world)
  (place-image (rectangle 10 10 'solid 'black)(posn-x a-world)(posn-y a-world)(empty-scene 500 500)))





(define (mouse-handler w x y me)
  (cond
    [(string=? "button-down" me)w]
    [(string=? "button-up" me)w]
    [(string=? "drag" me)w]
    [(string=? "move" me)w]
    [(string=? "enter" me) w]
    [(string=? "leave" me)(make-posn 250 250)]))
    


(big-bang world1(on-draw draw)(on-mouse mouse-handler))
>Fix:
>Audit-Trail:
Responsible changed from "nobody" to "matthias" by matthias at Wed, 27 Jan 2010 16:59:43 -0500
Reason>>> .

State changed from "open" to "analyzed" by matthias at Wed, 27 Jan 2010 16:59:43 -0500
Reason>>> (require 2htdp/universe)
(require htdp/image)

;a world is a  posn
(define world1 (make-posn 50 50))

; (define (fun-for-a-world  a-world)
;   ....(posn-x  a-world)....(posn-y  a-world)....)



;consumes a world and returns a scene in which a box is drawn at the world 
position
;draw: world -> scene
;(define (draw w).....)

;(check-expect (draw world1)(place-image (rectangle 10 10 'solid 'black)50 
50 (empty-scene 500 500)))

(define (draw a-world)
 (place-image (rectangle 10 10 'solid 'black)(posn-x a-world)(posn-y a-
world)(empty-scene 500 500)))




(check-expect (mouse-handler 'w 100 100 "leave") (make-posn 250 250))

(define (mouse-handler w x y me)
 (cond
   [(string=? "button-down" me) w]
   [(string=? "button-up" me) w]
   [(string=? "drag" me) w]
   [(string=? "move" me) w]
   [(string=? "enter" me) w]
   [(string=? "leave" me) (make-posn 250 250)]))



(define (main w)
  (big-bang world1(on-draw draw) (state true) (on-mouse mouse-handler)))


State changed from "analyzed" to "closed" by matthias at Mon, 01 Feb 2010 11:06:12 -0500
Reason>>> fixed and committed (conversion from symbols to strings failed at one place; 
SPC failure?)


