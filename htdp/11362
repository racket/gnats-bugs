From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Wed Oct 27 22:02:20 2010
Received: from mail-gw0-f44.google.com (mail-gw0-f44.google.com [74.125.83.44])
	by champlain.ccs.neu.edu (8.14.3/8.14.3) with ESMTP id o9S22Go8002864
	for <bugs@bugs.plt-scheme.org>; Wed, 27 Oct 2010 22:02:16 -0400
Message-Id: <201010280202.o9S22EUn002852@champlain.ccs.neu.edu>
Date: Wed, 27 Oct 2010 22:02:14 -0400
From: matthias@ccs.neu.edu
To: bugs@racket-lang.org
Subject: image=? and/or bitmap and/or save-image fail to live up basic identity law

>Number:         11362
>Category:       htdp
>Synopsis:       image=? and/or bitmap and/or save-image fail to live up basic identity law
>Class:          sw-bug
>Responsible:    robby
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Wed Oct 27 22:04:01 -0400 2010
>Last-Modified:  Mon Jan 24 17:32:01 -0500 2011
>Originator:     matthias
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.0.2.1--2010-10-26(1ca7ac4/g)
>Environment:
macosx "Darwin africa.local 10.4.0 Darwin Kernel Version 10.4.0: Fri Apr 23 18:28:53 PDT 2010; root:xnu-1504.7.4~1/RELEASE_I386 i386" (i386-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 186517736

Collections:
(("/Users/matthias/0Unison/collects/" "._.DS_Store" ".DS_Store" "compiled" "date" "finance" "info-domain" "info.ss" "pdf.ss~" "session" "short" "testing" "tll-collects" "utils" "web") ("/Users/matthias/Library/Racket/5.0.2.1/collects" non-existent-path) ("/Users/matthias/plt/collects" ".gitignore" "2htdp" "afm" "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "data" "datalog" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "meta" "mred" "mrlib" "mysterx" "mz" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raclog" "raco" "racunit" "reader" "readline" "redex" "repo-time-stamp" "repos-time-stam!
 p" "rnrs" "s-exp" "schelog" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "sirmail" "slatex" "slideshow" "srfi" "srpersist" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tests" "tex2page" "texpict" "tool" "trace" "typed" "typed-scheme" "unstable" "version" "waterworld" "web-server" "wxme" "xml"))
Computer Language: (("Teaching Languages" "How to Design Programs" "Beginning Student with List Abbreviations") (#(#t constructor repeating-decimal #f #t none) #f ()))
>Description:
subject says it all 
>How-To-Repeat:
(require 2htdp/image)
(define txt (text "hell no" 11 'red))
(save-image txt "i0.png")
(image=? (bitmap "images0/i0.png") txt)
>Fix:
>Audit-Trail:
From: Robby Findler <robby@eecs.northwestern.edu>
To: matthias@ccs.neu.edu, bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11362: image=? and/or bitmap and/or save-image
 fail to live up basic identity law
Date: Thu, 28 Oct 2010 16:11:49 -0500

 On Wed, Oct 27, 2010 at 9:04 PM,  <matthias@ccs.neu.edu> wrote:
 > *** How to repeat:
 > (require 2htdp/image)
 > (define txt (text "hell no" 11 'red))
 > (save-image txt "i0.png")
 > (image=? (bitmap "images0/i0.png") txt)
 
 Turns out this is a consequence of a (possibly bad) design decision.
 
 Specifically, when saving an image, the .png file gets one extra
 column of pixels on the right and an extra row along the bottom,
 beyond the bounding box.
 
 This accommodates someone that tries to, do, eg:
 
   (save-image (rectangle 100 100 'outline 'black) "sq.png")
 
 to avoid them being confused.
 
 How about we get rid of those +1s and then add optional arguments to
 save-image that lets someone specify the width and the height?
 
 Robby
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11362: image=? and/or bitmap and/or save-image fail to live up basic identity law
Date: Thu, 28 Oct 2010 17:16:05 -0400

 Sounds like a great plan! Thanks. 
 
 One of the test fails currently fails pointing to save-image. 
 When you're done, I'll fix it. 
 
 
 On Oct 28, 2010, at 5:11 PM, Robby Findler wrote:
 
 > On Wed, Oct 27, 2010 at 9:04 PM,  <matthias@ccs.neu.edu> wrote:
 >> *** How to repeat:
 >> (require 2htdp/image)
 >> (define txt (text "hell no" 11 'red))
 >> (save-image txt "i0.png")
 >> (image=? (bitmap "images0/i0.png") txt)
 > 
 > Turns out this is a consequence of a (possibly bad) design decision.
 > 
 > Specifically, when saving an image, the .png file gets one extra
 > column of pixels on the right and an extra row along the bottom,
 > beyond the bounding box.
 > 
 > This accommodates someone that tries to, do, eg:
 > 
 >  (save-image (rectangle 100 100 'outline 'black) "sq.png")
 > 
 > to avoid them being confused.
 > 
 > How about we get rid of those +1s and then add optional arguments to
 > save-image that lets someone specify the width and the height?
 > 
 > Robby
 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11362: image=? and/or bitmap and/or save-image
 fail to live up basic identity law
Date: Thu, 28 Oct 2010 16:25:45 -0500

 Whoops, there is more wrong that I don't think can be fixed until gr2
 is in use. Specifically, I can't make a properly alpha-channeled
 bitmap with save-image yet, but the regular old image is that way.
 
 I'll fix the size part for now and leave the rest until I adjust
 2htdp/image for gr2.
 
 Robby
 
 On Thu, Oct 28, 2010 at 4:16 PM, Matthias Felleisen
 <matthias@ccs.neu.edu> wrote:
 >
 >
 > Sounds like a great plan! Thanks.
 >
 > One of the test fails currently fails pointing to save-image.
 > When you're done, I'll fix it.
 >
 >
 > On Oct 28, 2010, at 5:11 PM, Robby Findler wrote:
 >
 >> On Wed, Oct 27, 2010 at 9:04 PM, =C2=A0<matthias@ccs.neu.edu> wrote:
 >>> *** How to repeat:
 >>> (require 2htdp/image)
 >>> (define txt (text "hell no" 11 'red))
 >>> (save-image txt "i0.png")
 >>> (image=3D? (bitmap "images0/i0.png") txt)
 >>
 >> Turns out this is a consequence of a (possibly bad) design decision.
 >>
 >> Specifically, when saving an image, the .png file gets one extra
 >> column of pixels on the right and an extra row along the bottom,
 >> beyond the bounding box.
 >>
 >> This accommodates someone that tries to, do, eg:
 >>
 >> =C2=A0(save-image (rectangle 100 100 'outline 'black) "sq.png")
 >>
 >> to avoid them being confused.
 >>
 >> How about we get rid of those +1s and then add optional arguments to
 >> save-image that lets someone specify the width and the height?
 >>
 >> Robby
 >
 >


Responsible changed from "matthias" to "robby" by matthias at Wed, 10 Nov 2010 09:52:05 -0500
Reason>>> robby does images


----------
A commit by robby@racket-lang.org was marked as relevant
  http://git.racket-lang.org/plt/commit/0dc71e9405
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: matthias@ccs.neu.edu, bugs@racket-lang.org
Subject: Re: [racket-bug] all/11362: image=? and/or bitmap and/or save-image
 fail to live up basic identity law
Date: Mon, 24 Jan 2011 16:28:56 -0600

 On Wed, Oct 27, 2010 at 8:04 PM,  <matthias@ccs.neu.edu> wrote:
 > A new problem report is waiting at
 > =C2=A0http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D11362
 >
 > Reported by matthias for release: 5.0.2.1--2010-10-26(1ca7ac4/g)
 
 I've been looking into this. Here's some context to explain where I'm
 stuck. Matthias's original bug report contains (roughly) this code:
 
 #lang racket/gui
 (require 2htdp/image)
 (define txt (text "hell no" 11 'red))
 (save-image txt "i0.png")
 (define b (bitmap "i0.png"))
 b txt
 (equal? b txt)
 
 If you run it, you'll see that the answer if #f (if you change the
 text to a circle, the answer is #t with a change I just pushed).
 
 I think that this means that I have to use make-screen-bitmap to
 create the bitmap that I'm going to draw into to implement the
 'bitmap' function. But I'm not sure if that's what we really want and,
 even if it is, that would mean that make-screen-bitmap has to move
 into racket/draw. (Is that possible?)
 
 Meanwhile, the code below, when run under windows 7 shows three
 occurrences of the words "hell no" where the second one (the one drawn
 into a make-bitmap) looks wrong. The two "l"s are grey, instead of red
 lke the rest of the letters.
 
 (define (draw dc)
   (send dc set-font (send the-font-list find-or-create-font 11 'swiss
 'normal 'normal #f))
   (send dc set-text-foreground "red")
   (send dc draw-text "hell no" 0 0))
 
 (define bmp (make-bitmap 200 200))
 (define bdc (make-object bitmap-dc% bmp))
 (draw bdc)
 
 (define sbmp (make-screen-bitmap 200 200))
 (send bdc set-bitmap sbmp)
 (draw bdc)
 
 (send bdc set-bitmap #f)
 
 (define f (new frame% [label ""]))
 (define c (new canvas%
                [parent f]
                [min-width 200]
                [min-height 600]
                [paint-callback
                 (=CE=BB (c dc)
                   (draw dc)
                   (send dc draw-bitmap bmp 0 200)
                   (send dc draw-bitmap sbmp 0 400))]))
 (send f show #t)
 
 Robby
