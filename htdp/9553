From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Thu Jun 26 15:59:17 2008
Received: from gv-out-0910.google.com (gv-out-0910.google.com [216.239.58.188])
	by champlain.ccs.neu.edu (8.14.2/8.14.2) with ESMTP id m5QJx9lU006109
	for <bugs@bugs.plt-scheme.org>; Thu, 26 Jun 2008 15:59:09 -0400
Message-Id: <200806261959.m5QJx2kR006102@champlain.ccs.neu.edu>
Date: Thu, 26 Jun 2008 15:59:02 -0400
From: sbloch@adelphi.edu
To: bugs@plt-scheme.org
Subject: keep end-of-time as well as stop-when

>Number:         9553
>Category:       htdp
>Synopsis:       keep end-of-time as well as stop-when
>Class:          change-request
>Responsible:    matthias
>Severity:       non-critical
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Thu Jun 26 16:00:01 -0400 2008
>Closed-Date:    Tue Nov 10 15:11:25 -0500 2009
>Last-Modified:  Fri Feb 05 23:10:07 -0500 2010
>Originator:     Stephen Bloch
>Organization:
plt
>Submitter-Id:   unknown
>Release:        4.0.1
>Environment:
macosx "Darwin 048410-Bloch-Core-2-Duo-iMac.local 8.11.1 Darwin Kernel Version 8.11.1: Wed Oct 10 18:23:28 PDT 2007; root:xnu-792.25.20~1/RELEASE_I386 i386 i386" (i386-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 147691672

Collections:
(("/Users/bloch/Library/PLT Scheme/4.0.1/collects" "installed-teachpacks") ("/Applications/PLT Scheme v4.0.1/collects" "afm" "algol60" "browser" "combinator-parser" "compiler" "config" "defaults" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "help" "hierlist" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profj" "r5rs" "r6rs" "readline" "rnrs" "s-exp" "scheme" "scribble" "scribblings" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tex2page" "texpict" "trace" "typed-scheme" "version" "web-server" "wxme" "xml"))
Computer Language: (("Teaching Languages" "How to Design Programs" "Beginning Student") (#(#t constructor mixed-fraction #f #t none) #f ((lib "372-tiles.ss" "installed-teachpacks") (lib "401-sb-world.ss" "installed-teachpacks"))))
>Description:
In revising my textbook today, I came across some interesting and natural animation exercises that relied on end-of-time's ability to specify a message.  (To wit: a dot appears at a random location on the screen every tick.  Your job is to click on it before it teleports somewhere else.  Once you succeed, you get a message like "Congratulations!  It took you 13 clicks.") 

In addition, there are times that the termination condition for an animation comes up naturally in the middle of a tick handler, mouse handler, or key handler, e.g. "stop as soon as the user presses the 'q key".

I suggest restoring end-of-time to the world teachpack, while still teaching primarily the stop-when approach.
>How-To-Repeat:
>Fix:
>Audit-Trail:
From: "Carl Eastlund" <cce@plt-scheme.org>
To: sbloch@adelphi.edu, bugs@plt-scheme.org
Cc: nobody@plt-scheme.org, eli@plt-scheme.org, matthias@plt-scheme.org,
        sk@plt-scheme.org, mflatt@plt-scheme.org, robby@plt-scheme.org,
        clements@plt-scheme.org, jay@plt-scheme.org, meunier@plt-scheme.org,
        kathyg@plt-scheme.org, jacobm@plt-scheme.org, samth@plt-scheme.org,
        ryanc@plt-scheme.org, gcooper@plt-scheme.org
Subject: Re: [plt-bug] all/9553: keep end-of-time as well as stop-when
Date: Thu, 26 Jun 2008 16:10:07 -0400

 On Thu, Jun 26, 2008 at 4:00 PM,  <sbloch@adelphi.edu> wrote:
 > In revising my textbook today, I came across some interesting and natural animation exercises that relied on
 > end-of-time's ability to specify a message.  (To wit: a dot appears at a random location on the screen every tick.
 > Your job is to click on it before it teleports somewhere else.  Once you succeed, you get a message like
 > "Congratulations!  It took you 13 clicks.")
 >
 > In addition, there are times that the termination condition for an animation comes up naturally in the middle of a
 > tick handler, mouse handler, or key handler, e.g. "stop as soon as the user presses the 'q key".
 
 These cases can be handled by appropriate choice of a world
 representation.  In the first case:
 
 ;; A World is one of:
 ;; - (make-world Posn Number), representing the dot to click on and
 the number of clicks so far
 ;; - A Number, representing the number of clicks it took the user to hit the dot
 The render function would show a dot in the first case, and the
 game-over message in the second.
 
 The second case could be similar: choose a representation for a "done"
 world, produce that when the user types "q", and render whatever is
 appropriate.  If the appropriate thing to render is the previous
 world, keep the information around along with the "game-over" flag.
 
 -- 
 Carl Eastlund
From: Stephen Bloch <bloch@adelphi.edu>
To: "Carl Eastlund" <cce@plt-scheme.org>
Cc: bugs@plt-scheme.org, nobody@plt-scheme.org, eli@plt-scheme.org,
        matthias@plt-scheme.org, sk@plt-scheme.org, mflatt@plt-scheme.org,
        robby@plt-scheme.org, clements@plt-scheme.org, jay@plt-scheme.org,
        meunier@plt-scheme.org, kathyg@plt-scheme.org, jacobm@plt-scheme.org,
        samth@plt-scheme.org, ryanc@plt-scheme.org, gcooper@plt-scheme.org
Subject: Re: [plt-bug] all/9553: keep end-of-time as well as stop-when
Date: Thu, 26 Jun 2008 16:24:32 -0400

 > On Jun 26, 2008, at 4:10 PM, Carl Eastlund wrote:
 > These cases can be handled by appropriate choice of a world
 > representation.  In the first case:
 >
 > ;; A World is one of:
 > ;; - (make-world Posn Number), representing the dot to click on and
 > the number of clicks so far
 > ;; - A Number, representing the number of clicks it took the user  
 > to hit the dot
 > The render function would show a dot in the first case, and the
 > game-over message in the second.
 >
 > The second case could be similar: choose a representation for a "done"
 > world, produce that when the user types "q", and render whatever is
 > appropriate.  If the appropriate thing to render is the previous
 > world, keep the information around along with the "game-over" flag.
 
 Yes, I thought of both of those, but they're considerably more hassle  
 than doing it with "end-of-time".  What was a fairly straightforward  
 exercise has just become an extra-credit problem that my best  
 students might be able to do.
 
 
 
 Stephen Bloch
 sbloch@adelphi.edu
 
 
 

Responsible changed from "nobody" to "matthias" by matthias at Thu, 26 Jun 2008 16:50:24 -0400
Reason>>> .

State changed from "open" to "analyzed" by matthias at Thu, 26 Jun 2008 16:50:24 -0400
Reason>>> .


State changed from "analyzed" to "suspended" by matthias at Sat, 01 Aug 2009 11:21:52 -0400
Reason>>> .


State changed from "suspended" to "closed" by matthias at Tue, 10 Nov 2009 15:11:25 -0500
Reason>>> i have added a "last image" option to stop-when and that solves this problem
with a better design than the proposed one. (closing old reports)

From: Stephen Bloch <sbloch@adelphi.edu>
To: "bugs@plt-scheme.org" <bugs@plt-scheme.org>
Cc: 
Subject: Re: [plt-bug] all/9553 keep end-of-time as well as stop-when
Date: Tue, 10 Nov 2009 16:37:42 -0500

 > Reason>>> i have added a "last image" option to stop-when and that  
 > solves this problem
 > with a better design than the proposed one. (closing old reports)
 
 That solves the problem of specifying a last image, and universe  
 already has a way to specify the "return value" of an animation.  But  
 neither addresses the fact that sometimes it's much more natural to  
 end an animation from within another handler.  For example, end the  
 animation when the user hits the "q" key, or when the user clicks the  
 mouse inside the target.  You can do both of those by returning a  
 special "finished" value as the new world, but that messes up the  
 "world" data type and every function that uses it.
 
 Or am I missing some obvious, elegant solution?
 
 I guess what I'm arguing for is analogous to the "break" statement in  
 structured programming: yes, you can theoretically do everything with  
 "while" loops, but sometimes "break" is much more natural and makes  
 the code shorter and clearer.
 
 Steve
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Stephen Bloch <sbloch@adelphi.edu>, bugs@plt-scheme.org
Cc: matthias@plt-scheme.org
Subject: Re: [plt-bug] all/9553 keep end-of-time as well as stop-when
Date: Tue, 10 Nov 2009 16:50:58 -0500

 I understand the problem. But it's about Moore vs Mealey machines in  
 the end, and it isn't so much a bug but an alternative design that  
 you're asking for.
 
 Shriram is thinking about the same problem. No worries, we'll get  
 there. -- Matthias
 
 
 
 
 
 On Nov 10, 2009, at 4:40 PM, Stephen Bloch wrote:
 
 > The following reply was made to PR all/9553 (noted by Gnats).
 >
 > View this PR at:
 >  http://bugs.plt-scheme.org/query/?cmd=view&pr=9553
 >
 > ====================
 > From: Stephen Bloch <sbloch@adelphi.edu>
 > To: "bugs@plt-scheme.org" <bugs@plt-scheme.org>
 > Cc:
 > Subject: Re: [plt-bug] all/9553 keep end-of-time as well as stop-when
 > Date: Tue, 10 Nov 2009 16:37:42 -0500
 >
 >> Reason>>> i have added a "last image" option to stop-when and that
 >> solves this problem
 >> with a better design than the proposed one. (closing old reports)
 >
 > That solves the problem of specifying a last image, and universe
 > already has a way to specify the "return value" of an animation.  But
 > neither addresses the fact that sometimes it's much more natural to
 > end an animation from within another handler.  For example, end the
 > animation when the user hits the "q" key, or when the user clicks the
 > mouse inside the target.  You can do both of those by returning a
 > special "finished" value as the new world, but that messes up the
 > "world" data type and every function that uses it.
 >
 > Or am I missing some obvious, elegant solution?
 >
 > I guess what I'm arguing for is analogous to the "break" statement in
 > structured programming: yes, you can theoretically do everything with
 > "while" loops, but sometimes "break" is much more natural and makes
 > the code shorter and clearer.
 >
 > Steve
 

