From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Thu Dec 16 14:21:07 2010
Received: from mail-fx0-f49.google.com (mail-fx0-f49.google.com [209.85.161.49])
	by champlain.ccs.neu.edu (8.14.3/8.14.3) with ESMTP id oBGJL5uU023138
	for <bugs@bugs.plt-scheme.org>; Thu, 16 Dec 2010 14:21:05 -0500
Message-Id: <201012161921.oBGJL20c023130@champlain.ccs.neu.edu>
Date: Thu, 16 Dec 2010 14:21:02 -0500
From: zarcher@gmail.com
To: bugs@racket-lang.org
Subject: slow application response

>Number:         11550
>Category:       htdp
>Synopsis:       slow application response
>Class:          sw-bug
>Responsible:    robby
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Thu Dec 16 14:24:01 -0500 2010
>Closed-Date:    Thu Jan 06 08:20:00 -0500 2011
>Last-Modified:  Thu Jan 06 08:20:00 -0500 2011
>Originator:     Matthew Blakley
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.0.99.4--2010-12-14(0542d3c/g)
>Environment:
macosx "Darwin ranger.home 10.5.0 Darwin Kernel Version 10.5.0: Fri Nov  5 23:19:13 PDT 2010; root:xnu-1504.9.17~1/RELEASE_X86_64 x86_64" (x86_64-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 215593192

Collections:
("/Users/zarcher/Library/Racket/5.0.99.4/collects"
 (non-existent-path))
("/Users/zarcher/Development/plt/collects"
 (".gitignore" "2htdp" "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "data" "datalog" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "meta" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "redex" "repo-time-stamp" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "sirmail" "slatex" "slideshow" "srfi" "srpersist" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tests" "tex2page" "texpict" "trace" "typed" "typed-scheme" "unstable" "version" "wa!
 terworld" "web-server" "wxme" "xml"))

Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t))
>Description:
The DrRacket application becomes very slow to respond to actions, update cursor state, and other gui events.
>How-To-Repeat:
#racket
>Fix:
>Audit-Trail:
From: "Matthew Blakley" <matthewb@veriwave.com>
To: <bugs@racket-lang.org>
Cc: 
Subject: Re: all/11550: slow application response
Date: Thu, 16 Dec 2010 16:49:39 -0800

 This is a multi-part message in MIME format.
 
 ------=_NextPart_000_0001_01CB9D41.3B269350
 Content-Type: text/plain;
 	charset="us-ascii"
 Content-Transfer-Encoding: 7bit
 
 Using the following definitions to reproduce
 
 #lang racket
 
 (require 2htdp/image)
 
 (define (carpet size c)
 
 (if (<= size 2)
 
      (square size "outline" c)
 
      (local [(define sub (carpet (/ size 3) c))
 
              (define ctr (square (/ size 3) "solid" "white"))]
 
        (overlay (square size "outline" c)
 
                 (above (beside sub sub sub)
 
                        (beside sub ctr sub)
 
                        (beside sub sub sub))))))
 
  
 
 (carpet 200 "red")
 
 Running the last form in the interactions seems to be worse, but problem
 exists if these definitions are run directly.
 
  
 
 
 ------=_NextPart_000_0001_01CB9D41.3B269350
 Content-Type: text/html;
 	charset="us-ascii"
 Content-Transfer-Encoding: quoted-printable
 
 <html xmlns:v=3D"urn:schemas-microsoft-com:vml" =
 xmlns:o=3D"urn:schemas-microsoft-com:office:office" =
 xmlns:w=3D"urn:schemas-microsoft-com:office:word" =
 xmlns:m=3D"http://schemas.microsoft.com/office/2004/12/omml" =
 xmlns=3D"http://www.w3.org/TR/REC-html40"><head><META =
 HTTP-EQUIV=3D"Content-Type" CONTENT=3D"text/html; =
 charset=3Dus-ascii"><meta name=3DGenerator content=3D"Microsoft Word 12 =
 (filtered medium)"><style><!--
 /* Font Definitions */
 @font-face
 	{font-family:"Cambria Math";
 	panose-1:2 4 5 3 5 4 6 3 2 4;}
 @font-face
 	{font-family:Calibri;
 	panose-1:2 15 5 2 2 2 4 3 2 4;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
 	{margin:0in;
 	margin-bottom:.0001pt;
 	font-size:11.0pt;
 	font-family:"Calibri","sans-serif";}
 a:link, span.MsoHyperlink
 	{mso-style-priority:99;
 	color:blue;
 	text-decoration:underline;}
 a:visited, span.MsoHyperlinkFollowed
 	{mso-style-priority:99;
 	color:purple;
 	text-decoration:underline;}
 pre
 	{mso-style-priority:99;
 	mso-style-link:"HTML Preformatted Char";
 	margin:0in;
 	margin-bottom:.0001pt;
 	font-size:10.0pt;
 	font-family:"Courier New";}
 span.EmailStyle17
 	{mso-style-type:personal-compose;
 	font-family:"Calibri","sans-serif";
 	color:windowtext;}
 span.HTMLPreformattedChar
 	{mso-style-name:"HTML Preformatted Char";
 	mso-style-priority:99;
 	mso-style-link:"HTML Preformatted";
 	font-family:"Courier New";}
 .MsoChpDefault
 	{mso-style-type:export-only;}
 @page WordSection1
 	{size:8.5in 11.0in;
 	margin:1.0in 1.0in 1.0in 1.0in;}
 div.WordSection1
 	{page:WordSection1;}
 --></style><!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext=3D"edit" spidmax=3D"1026" />
 </xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext=3D"edit">
 <o:idmap v:ext=3D"edit" data=3D"1" />
 </o:shapelayout></xml><![endif]--></head><body lang=3DEN-US link=3Dblue =
 vlink=3Dpurple><div class=3DWordSection1><p class=3DMsoNormal><span =
 style=3D'font-size:10.0pt;font-family:"Courier New";color:black'>Using =
 the following definitions to reproduce<o:p></o:p></span></p><p =
 class=3DMsoNormal><span style=3D'font-size:10.0pt;font-family:"Courier =
 New";color:black'> <o:p></o:p></span></p><p class=3DMsoNormal><span =
 style=3D'font-size:10.0pt;font-family:"Courier New";color:black'>#lang =
 racket<o:p></o:p></span></p><p class=3DMsoNormal><span =
 style=3D'font-size:10.0pt;font-family:"Courier New";color:black'> =
 <o:p></o:p></span></p><p class=3DMsoNormal><span =
 style=3D'font-size:10.0pt;font-family:"Courier =
 New";color:black'>(require 2htdp/image)<o:p></o:p></span></p><p =
 class=3DMsoNormal><span style=3D'font-size:10.0pt;font-family:"Courier =
 New";color:black'> <o:p></o:p></span></p><p class=3DMsoNormal><span =
 style=3D'font-size:10.0pt;font-family:"Courier New";color:black'>(define =
 (carpet size c)<o:p></o:p></span></p><p class=3DMsoNormal><span =
 style=3D'font-size:10.0pt;font-family:"Courier New";color:black'> (if =
 (&lt;=3D size 2)<o:p></o:p></span></p><p class=3DMsoNormal><span =
 style=3D'font-size:10.0pt;font-family:"Courier =
 New";color:black'>&nbsp;&nbsp;&nbsp;&nbsp; (square size =
 &quot;outline&quot; c)<o:p></o:p></span></p><p class=3DMsoNormal><span =
 style=3D'font-size:10.0pt;font-family:"Courier =
 New";color:black'>&nbsp;&nbsp;&nbsp;&nbsp; (local [(define sub (carpet =
 (/ size 3) c))<o:p></o:p></span></p><p class=3DMsoNormal><span =
 style=3D'font-size:10.0pt;font-family:"Courier =
 New";color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
 nbsp;&nbsp;&nbsp; (define ctr (square (/ size 3) &quot;solid&quot; =
 &quot;white&quot;))]<o:p></o:p></span></p><p class=3DMsoNormal><span =
 style=3D'font-size:10.0pt;font-family:"Courier =
 New";color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (overlay (square =
 size &quot;outline&quot; c)<o:p></o:p></span></p><p =
 class=3DMsoNormal><span style=3D'font-size:10.0pt;font-family:"Courier =
 New";color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
 nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (above (beside sub sub =
 sub)<o:p></o:p></span></p><p class=3DMsoNormal><span =
 style=3D'font-size:10.0pt;font-family:"Courier =
 New";color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
 nbsp;(beside sub ctr sub)<o:p></o:p></span></p><p =
 class=3DMsoNormal><span style=3D'font-size:10.0pt;font-family:"Courier =
 New";color:black'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
 nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
 bsp; (beside sub sub sub))))))<o:p></o:p></span></p><p =
 class=3DMsoNormal><span style=3D'font-size:10.0pt;font-family:"Courier =
 New";color:black'><o:p>&nbsp;</o:p></span></p><p class=3DMsoNormal><span =
 style=3D'font-size:10.0pt;font-family:"Courier New";color:black'>(carpet =
 200 &quot;red&quot;)<o:p></o:p></span></p><p class=3DMsoNormal><span =
 style=3D'font-size:10.0pt;font-family:"Courier New";color:black'> =
 <o:p></o:p></span></p><p class=3DMsoNormal><span =
 style=3D'font-size:10.0pt;font-family:"Courier New";color:black'>Running =
 the last form in the interactions seems to be worse, but problem exists =
 if these definitions are run directly.<o:p></o:p></span></p><p =
 class=3DMsoNormal><o:p>&nbsp;</o:p></p></div></body></html>
 ------=_NextPart_000_0001_01CB9D41.3B269350--
 
From: Eli Barzilay <eli@barzilay.org>
To: zarcher@gmail.com, bugs@racket-lang.org
Cc: bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11550: slow application response
Date: Thu, 16 Dec 2010 20:04:45 -0500

 6 hours ago, zarcher@gmail.com wrote:
 > A new problem report is waiting at
 >   http://bugs.racket-lang.org/query/?cmd=view&pr=11550
 > 
 > Reported by Matthew Blakley for release: 5.0.99.4--2010-12-14(0542d3c/g)
 > 
 > *** Description:
 > The DrRacket application becomes very slow to respond to actions,
 > update cursor state, and other gui events.
 
 JFYI, further details that were not sent to bug-notification:
 
 
  Using the following definitions to reproduce
  
  #lang racket
  (require 2htdp/image)
  (define (carpet size c)
  (if (<= size 2)
       (square size "outline" c)
       (local [(define sub (carpet (/ size 3) c))
               (define ctr (square (/ size 3) "solid" "white"))]
         (overlay (square size "outline" c)
                  (above (beside sub sub sub)
                         (beside sub ctr sub)
                         (beside sub sub sub))))))
  
  (carpet 200 "red")
  
  Running the last form in the interactions seems to be worse, but problem
  exists if these definitions are run directly.
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!
From: Robby Findler <robby@eecs.northwestern.edu>
To: Eli Barzilay <eli@barzilay.org>
Cc: zarcher@gmail.com, bugs@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11550: slow application response
Date: Thu, 16 Dec 2010 19:12:00 -0600

 Well, what that does is run a very long, complex computation on the
 DrRacket eventspace main thread which will keep DrRacket from
 responding to other events while it tries to draw that thing.
 
 This would seem to be an argument for DrRAcket to use the convertable
 interface to turn values into bitmaps on the user's thread and then
 just sending the bitmap over. Anyone disagree?
 
 Robby
 
 On Thu, Dec 16, 2010 at 7:04 PM, Eli Barzilay <eli@barzilay.org> wrote:
 > 6 hours ago, zarcher@gmail.com wrote:
 >> A new problem report is waiting at
 >> =C2=A0 http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D11550
 >>
 >> Reported by Matthew Blakley for release: 5.0.99.4--2010-12-14(0542d3c/g)
 >>
 >> *** Description:
 >> The DrRacket application becomes very slow to respond to actions,
 >> update cursor state, and other gui events.
 >
 > JFYI, further details that were not sent to bug-notification:
 >
 >
 > =C2=A0Using the following definitions to reproduce
 >
 > =C2=A0#lang racket
 > =C2=A0(require 2htdp/image)
 > =C2=A0(define (carpet size c)
 > =C2=A0(if (<=3D size 2)
 > =C2=A0 =C2=A0 =C2=A0(square size "outline" c)
 > =C2=A0 =C2=A0 =C2=A0(local [(define sub (carpet (/ size 3) c))
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(define ctr (square (/ si=
 ze 3) "solid" "white"))]
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0(overlay (square size "outline" c)
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 (above (beside su=
 b sub sub)
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
 =A0 =C2=A0(beside sub ctr sub)
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
 =A0 =C2=A0(beside sub sub sub))))))
 >
 > =C2=A0(carpet 200 "red")
 >
 > =C2=A0Running the last form in the interactions seems to be worse, but pr=
 oblem
 > =C2=A0exists if these definitions are run directly.
 >
 > --
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0((lambda (x) (x x)) (lambda (x) (x x)))=
  =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Eli Barzilay:
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0http=
 ://barzilay.org/ =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =
 =C2=A0 Maze is Life!
 >
From: Matthew Blakley <zarcher@gmail.com>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: Eli Barzilay <eli@barzilay.org>, bugs@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11550: slow application response
Date: Thu, 16 Dec 2010 17:53:12 -0800

 --0016364edb0cd427d40497916e75
 Content-Type: text/plain; charset=UTF-8
 
 A clarification, the sluggish response is after the image is displayed and
 the REPL prompt is back.
 
 I had assumed when I posted the bug earlier that this snippet, recently
 posted on the user list, probably ran fine in the release version and that
 this was therefor a regression on the dev branch. I just tested this
 assumption with the 5.0.2 32-bit Mac OS X release version; the snippet works
 just fine there and DrRacket remains quite responsive afterwards.
 
 On Thu, Dec 16, 2010 at 5:12 PM, Robby Findler
 <robby@eecs.northwestern.edu>wrote:
 
 > Well, what that does is run a very long, complex computation on the
 > DrRacket eventspace main thread which will keep DrRacket from
 > responding to other events while it tries to draw that thing.
 >
 > This would seem to be an argument for DrRAcket to use the convertable
 > interface to turn values into bitmaps on the user's thread and then
 > just sending the bitmap over. Anyone disagree?
 >
 > Robby
 >
 > On Thu, Dec 16, 2010 at 7:04 PM, Eli Barzilay <eli@barzilay.org> wrote:
 > > 6 hours ago, zarcher@gmail.com wrote:
 > >> A new problem report is waiting at
 > >>   http://bugs.racket-lang.org/query/?cmd=view&pr=11550
 > >>
 > >> Reported by Matthew Blakley for release: 5.0.99.4--2010-12-14(0542d3c/g)
 > >>
 > >> *** Description:
 > >> The DrRacket application becomes very slow to respond to actions,
 > >> update cursor state, and other gui events.
 > >
 > > JFYI, further details that were not sent to bug-notification:
 > >
 > >
 > >  Using the following definitions to reproduce
 > >
 > >  #lang racket
 > >  (require 2htdp/image)
 > >  (define (carpet size c)
 > >  (if (<= size 2)
 > >      (square size "outline" c)
 > >      (local [(define sub (carpet (/ size 3) c))
 > >              (define ctr (square (/ size 3) "solid" "white"))]
 > >        (overlay (square size "outline" c)
 > >                 (above (beside sub sub sub)
 > >                        (beside sub ctr sub)
 > >                        (beside sub sub sub))))))
 > >
 > >  (carpet 200 "red")
 > >
 > >  Running the last form in the interactions seems to be worse, but problem
 > >  exists if these definitions are run directly.
 > >
 > > --
 > >          ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
 > >                    http://barzilay.org/                   Maze is Life!
 > >
 >
 
 --0016364edb0cd427d40497916e75
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 A clarification, the sluggish response is after the image is displayed and =
 the REPL prompt is back.<div><br></div><div>I had assumed when I posted the=
  bug earlier that this snippet, recently posted on the user list, probably =
 ran fine in the release version and that this was therefor a regression on =
 the dev branch.=C2=A0I just tested this assumption with the 5.0.2 32-bit Ma=
 c OS X release version; the snippet works just fine there and DrRacket rema=
 ins quite responsive afterwards.</div>
 <div><br><div class=3D"gmail_quote">On Thu, Dec 16, 2010 at 5:12 PM, Robby =
 Findler <span dir=3D"ltr">&lt;<a href=3D"mailto:robby@eecs.northwestern.edu=
 ">robby@eecs.northwestern.edu</a>&gt;</span> wrote:<br><blockquote class=3D=
 "gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1px #ccc solid;padding=
 -left:1ex;">
 Well, what that does is run a very long, complex computation on the<br>
 DrRacket eventspace main thread which will keep DrRacket from<br>
 responding to other events while it tries to draw that thing.<br>
 <br>
 This would seem to be an argument for DrRAcket to use the convertable<br>
 interface to turn values into bitmaps on the user&#39;s thread and then<br>
 just sending the bitmap over. Anyone disagree?<br>
 <font color=3D"#888888"><br>
 Robby<br>
 </font><div><div></div><div class=3D"h5"><br>
 On Thu, Dec 16, 2010 at 7:04 PM, Eli Barzilay &lt;<a href=3D"mailto:eli@bar=
 zilay.org">eli@barzilay.org</a>&gt; wrote:<br>
 &gt; 6 hours ago, <a href=3D"mailto:zarcher@gmail.com">zarcher@gmail.com</a=
 > wrote:<br>
 &gt;&gt; A new problem report is waiting at<br>
 &gt;&gt; =C2=A0 <a href=3D"http://bugs.racket-lang.org/query/?cmd=3Dview&am=
 p;pr=3D11550" target=3D"_blank">http://bugs.racket-lang.org/query/?cmd=3Dvi=
 ew&amp;pr=3D11550</a><br>
 &gt;&gt;<br>
 &gt;&gt; Reported by Matthew Blakley for release: 5.0.99.4--2010-12-14(0542=
 d3c/g)<br>
 &gt;&gt;<br>
 &gt;&gt; *** Description:<br>
 &gt;&gt; The DrRacket application becomes very slow to respond to actions,<=
 br>
 &gt;&gt; update cursor state, and other gui events.<br>
 &gt;<br>
 &gt; JFYI, further details that were not sent to bug-notification:<br>
 &gt;<br>
 &gt;<br>
 &gt; =C2=A0Using the following definitions to reproduce<br>
 &gt;<br>
 &gt; =C2=A0#lang racket<br>
 &gt; =C2=A0(require 2htdp/image)<br>
 &gt; =C2=A0(define (carpet size c)<br>
 &gt; =C2=A0(if (&lt;=3D size 2)<br>
 &gt; =C2=A0 =C2=A0 =C2=A0(square size &quot;outline&quot; c)<br>
 &gt; =C2=A0 =C2=A0 =C2=A0(local [(define sub (carpet (/ size 3) c))<br>
 &gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(define ctr (square (/=
  size 3) &quot;solid&quot; &quot;white&quot;))]<br>
 &gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0(overlay (square size &quot;outline&quot; c=
 )<br>
 &gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 (above (beside=
  sub sub sub)<br>
 &gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =
 =C2=A0 =C2=A0(beside sub ctr sub)<br>
 &gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =
 =C2=A0 =C2=A0(beside sub sub sub))))))<br>
 &gt;<br>
 &gt; =C2=A0(carpet 200 &quot;red&quot;)<br>
 &gt;<br>
 &gt; =C2=A0Running the last form in the interactions seems to be worse, but=
  problem<br>
 &gt; =C2=A0exists if these definitions are run directly.<br>
 &gt;<br>
 &gt; --<br>
 &gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0((lambda (x) (x x)) (lambda (x) (x x=
 ))) =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Eli Barzilay:<br>
 &gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0<=
 a href=3D"http://barzilay.org/" target=3D"_blank">http://barzilay.org/</a> =
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 Maze is Life=
 !<br>
 &gt;<br>
 </div></div></blockquote></div><br></div>
 
 --0016364edb0cd427d40497916e75--
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthew Blakley <zarcher@gmail.com>
Cc: Eli Barzilay <eli@barzilay.org>, bugs@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11550: slow application response
Date: Thu, 16 Dec 2010 20:59:10 -0600

 Well, there are still several other subtle things that can trigger the
 slowdown that would be common to the two versions. For example, if the
 cursor (blinking vertical line / insertion point) is on the same line
 as the image, that will trigger a redraw for each time the cursor
 blinks which can easily overwhelm things in both versions. Similarly,
 depending on the os, resizing the window can trigger multiple calls to
 the drawing processes which could cause problems in both versions.
 
 My experiments suggest that both versions suffer from this flaw
 equally, but I could easily be missing some more subtle thing that
 you're doing to both to see the bad behavior in only one?
 
 Robby
 
 On Thu, Dec 16, 2010 at 7:53 PM, Matthew Blakley <zarcher@gmail.com> wrote:
 > A clarification, the sluggish response is after the image is displayed an=
 d
 > the REPL prompt is back.
 > I had assumed when I posted the bug earlier that this snippet, recently
 > posted on the user list, probably ran fine in the release version and tha=
 t
 > this was therefor a regression on the dev branch.=C2=A0I just tested this
 > assumption with the 5.0.2 32-bit Mac OS X release version; the snippet wo=
 rks
 > just fine there and DrRacket remains quite responsive afterwards.
 > On Thu, Dec 16, 2010 at 5:12 PM, Robby Findler <robby@eecs.northwestern.e=
 du>
 > wrote:
 >>
 >> Well, what that does is run a very long, complex computation on the
 >> DrRacket eventspace main thread which will keep DrRacket from
 >> responding to other events while it tries to draw that thing.
 >>
 >> This would seem to be an argument for DrRAcket to use the convertable
 >> interface to turn values into bitmaps on the user's thread and then
 >> just sending the bitmap over. Anyone disagree?
 >>
 >> Robby
 >>
 >> On Thu, Dec 16, 2010 at 7:04 PM, Eli Barzilay <eli@barzilay.org> wrote:
 >> > 6 hours ago, zarcher@gmail.com wrote:
 >> >> A new problem report is waiting at
 >> >> =C2=A0 http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D11550
 >> >>
 >> >> Reported by Matthew Blakley for release:
 >> >> 5.0.99.4--2010-12-14(0542d3c/g)
 >> >>
 >> >> *** Description:
 >> >> The DrRacket application becomes very slow to respond to actions,
 >> >> update cursor state, and other gui events.
 >> >
 >> > JFYI, further details that were not sent to bug-notification:
 >> >
 >> >
 >> > =C2=A0Using the following definitions to reproduce
 >> >
 >> > =C2=A0#lang racket
 >> > =C2=A0(require 2htdp/image)
 >> > =C2=A0(define (carpet size c)
 >> > =C2=A0(if (<=3D size 2)
 >> > =C2=A0 =C2=A0 =C2=A0(square size "outline" c)
 >> > =C2=A0 =C2=A0 =C2=A0(local [(define sub (carpet (/ size 3) c))
 >> > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(define ctr (square (/=
  size 3) "solid" "white"))]
 >> > =C2=A0 =C2=A0 =C2=A0 =C2=A0(overlay (square size "outline" c)
 >> > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 (above (beside=
  sub sub sub)
 >> > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =
 =C2=A0 =C2=A0(beside sub ctr sub)
 >> > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =
 =C2=A0 =C2=A0(beside sub sub sub))))))
 >> >
 >> > =C2=A0(carpet 200 "red")
 >> >
 >> > =C2=A0Running the last form in the interactions seems to be worse, but
 >> > problem
 >> > =C2=A0exists if these definitions are run directly.
 >> >
 >> > --
 >> > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0((lambda (x) (x x)) (lambda (x) (x x=
 ))) =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Eli Barzilay:
 >> > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0h=
 ttp://barzilay.org/ =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=
  =C2=A0 Maze is Life!
 >> >
 >
 >
From: Matthew Blakley <zarcher@gmail.com>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: Eli Barzilay <eli@barzilay.org>, bugs@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11550: slow application response
Date: Thu, 16 Dec 2010 20:03:54 -0800

 I ran some wall clock timings on the 5.0.99.4 version. After running the =
 snippet, with the cursor on the REPL line below the image, pressing the =
 "(" key in the interactions takes ~15 seconds to display. The text =
 cursor blink rate is also ~ 5s on and then 5s off. The blink rate =
 appears to be about an order of magnitude slower than when DrRacket =
 first started. In 5.0.2, there is no noticeable difference in the cursor =
 blink rate before or after running the snippet and response to pressing =
 the "(" is immediate.
 
 I do see the cursor redraw issue you mention in 5.0.2 when the cursor is =
 on the same line as the image. I also notice a number of flickers of the =
 image during resize. Neither of these appear directly related to what I =
 was noticing.
 
 One other observation of the 5.0.99.4 build that I don't notice in the =
 5.0.2 build is that the recycle indicator is flashing about 1-3 times =
 per second (varies, not steady) in the 5.0.99.4 build after the problem =
 occurs.
 
 I'm going to look at a 32-bit Mac build of the dev branch as well to see =
 what, if any difference that makes.
 
 On Dec 16, 2010, at 6:59 PM, Robby Findler wrote:
 
 > Well, there are still several other subtle things that can trigger the
 > slowdown that would be common to the two versions. For example, if the
 > cursor (blinking vertical line / insertion point) is on the same line
 > as the image, that will trigger a redraw for each time the cursor
 > blinks which can easily overwhelm things in both versions. Similarly,
 > depending on the os, resizing the window can trigger multiple calls to
 > the drawing processes which could cause problems in both versions.
 >=20
 > My experiments suggest that both versions suffer from this flaw
 > equally, but I could easily be missing some more subtle thing that
 > you're doing to both to see the bad behavior in only one?
 >=20
 > Robby
 >=20
 > On Thu, Dec 16, 2010 at 7:53 PM, Matthew Blakley <zarcher@gmail.com> =
 wrote:
 >> A clarification, the sluggish response is after the image is =
 displayed and
 >> the REPL prompt is back.
 >> I had assumed when I posted the bug earlier that this snippet, =
 recently
 >> posted on the user list, probably ran fine in the release version and =
 that
 >> this was therefor a regression on the dev branch. I just tested this
 >> assumption with the 5.0.2 32-bit Mac OS X release version; the =
 snippet works
 >> just fine there and DrRacket remains quite responsive afterwards.
 >> On Thu, Dec 16, 2010 at 5:12 PM, Robby Findler =
 <robby@eecs.northwestern.edu>
 >> wrote:
 >>>=20
 >>> Well, what that does is run a very long, complex computation on the
 >>> DrRacket eventspace main thread which will keep DrRacket from
 >>> responding to other events while it tries to draw that thing.
 >>>=20
 >>> This would seem to be an argument for DrRAcket to use the =
 convertable
 >>> interface to turn values into bitmaps on the user's thread and then
 >>> just sending the bitmap over. Anyone disagree?
 >>>=20
 >>> Robby
 >>>=20
 >>> On Thu, Dec 16, 2010 at 7:04 PM, Eli Barzilay <eli@barzilay.org> =
 wrote:
 >>>> 6 hours ago, zarcher@gmail.com wrote:
 >>>>> A new problem report is waiting at
 >>>>>   http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D11550
 >>>>>=20
 >>>>> Reported by Matthew Blakley for release:
 >>>>> 5.0.99.4--2010-12-14(0542d3c/g)
 >>>>>=20
 >>>>> *** Description:
 >>>>> The DrRacket application becomes very slow to respond to actions,
 >>>>> update cursor state, and other gui events.
 >>>>=20
 >>>> JFYI, further details that were not sent to bug-notification:
 >>>>=20
 >>>>=20
 >>>>  Using the following definitions to reproduce
 >>>>=20
 >>>>  #lang racket
 >>>>  (require 2htdp/image)
 >>>>  (define (carpet size c)
 >>>>  (if (<=3D size 2)
 >>>>      (square size "outline" c)
 >>>>      (local [(define sub (carpet (/ size 3) c))
 >>>>              (define ctr (square (/ size 3) "solid" "white"))]
 >>>>        (overlay (square size "outline" c)
 >>>>                 (above (beside sub sub sub)
 >>>>                        (beside sub ctr sub)
 >>>>                        (beside sub sub sub))))))
 >>>>=20
 >>>>  (carpet 200 "red")
 >>>>=20
 >>>>  Running the last form in the interactions seems to be worse, but
 >>>> problem
 >>>>  exists if these definitions are run directly.
 >>>>=20
 >>>> --
 >>>>          ((lambda (x) (x x)) (lambda (x) (x x)))          Eli =
 Barzilay:
 >>>>                    http://barzilay.org/                   Maze is =
 Life!
 >>>>=20
 >>=20
 >>=20
 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthew Blakley <zarcher@gmail.com>
Cc: Eli Barzilay <eli@barzilay.org>, bugs@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11550: slow application response
Date: Wed, 22 Dec 2010 12:07:36 -0600

 (Sorry for the delay'd response.)
 
 I'm not seeing this behavior. If I wait for the cpu load to die down
 after the first time the image is drawn (there are various ways to
 know when this happens; tell me the os you're using and I can tell you
 how; on the mac you can open a Terminal and type "top -u" to get some
 information about what's taking cpu time), then typing the open paren
 appears instantly and the cursor blinks normally.
 
 In general, what seems to be happening is that redrawing that image
 takes a long time (and there's nothing really OS specific about that).
 Resizing the window can certainly trigger such a redraw, for example.
 
 With images like that, you might want to try using the 'freeze'
 primitive. I think you'll find that evaluating this in the REPL:
 
   (freeze (carpet 200 "red"))
 
 will take a long time to display but that subsequent redraws will take
 no time (the cursor will blink happily next to the frozen version of
 the image without a long delay).
 
 Robby
 
 On Thu, Dec 16, 2010 at 10:03 PM, Matthew Blakley <zarcher@gmail.com> wrote=
 :
 > I ran some wall clock timings on the 5.0.99.4 version. After running the =
 snippet, with the cursor on the REPL line below the image, pressing the "("=
  key in the interactions takes ~15 seconds to display. The text cursor blin=
 k rate is also ~ 5s on and then 5s off. The blink rate appears to be about =
 an order of magnitude slower than when DrRacket first started. In 5.0.2, th=
 ere is no noticeable difference in the cursor blink rate before or after ru=
 nning the snippet and response to pressing the "(" is immediate.
 >
 > I do see the cursor redraw issue you mention in 5.0.2 when the cursor is =
 on the same line as the image. I also notice a number of flickers of the im=
 age during resize. Neither of these appear directly related to what I was n=
 oticing.
 >
 > One other observation of the 5.0.99.4 build that I don't notice in the 5.=
 0.2 build is that the recycle indicator is flashing about 1-3 times per sec=
 ond (varies, not steady) in the 5.0.99.4 build after the problem occurs.
 >
 > I'm going to look at a 32-bit Mac build of the dev branch as well to see =
 what, if any difference that makes.
 >
 > On Dec 16, 2010, at 6:59 PM, Robby Findler wrote:
 >
 >> Well, there are still several other subtle things that can trigger the
 >> slowdown that would be common to the two versions. For example, if the
 >> cursor (blinking vertical line / insertion point) is on the same line
 >> as the image, that will trigger a redraw for each time the cursor
 >> blinks which can easily overwhelm things in both versions. Similarly,
 >> depending on the os, resizing the window can trigger multiple calls to
 >> the drawing processes which could cause problems in both versions.
 >>
 >> My experiments suggest that both versions suffer from this flaw
 >> equally, but I could easily be missing some more subtle thing that
 >> you're doing to both to see the bad behavior in only one?
 >>
 >> Robby
 >>
 >> On Thu, Dec 16, 2010 at 7:53 PM, Matthew Blakley <zarcher@gmail.com> wro=
 te:
 >>> A clarification, the sluggish response is after the image is displayed =
 and
 >>> the REPL prompt is back.
 >>> I had assumed when I posted the bug earlier that this snippet, recently
 >>> posted on the user list, probably ran fine in the release version and t=
 hat
 >>> this was therefor a regression on the dev branch. I just tested this
 >>> assumption with the 5.0.2 32-bit Mac OS X release version; the snippet =
 works
 >>> just fine there and DrRacket remains quite responsive afterwards.
 >>> On Thu, Dec 16, 2010 at 5:12 PM, Robby Findler <robby@eecs.northwestern=
 .edu>
 >>> wrote:
 >>>>
 >>>> Well, what that does is run a very long, complex computation on the
 >>>> DrRacket eventspace main thread which will keep DrRacket from
 >>>> responding to other events while it tries to draw that thing.
 >>>>
 >>>> This would seem to be an argument for DrRAcket to use the convertable
 >>>> interface to turn values into bitmaps on the user's thread and then
 >>>> just sending the bitmap over. Anyone disagree?
 >>>>
 >>>> Robby
 >>>>
 >>>> On Thu, Dec 16, 2010 at 7:04 PM, Eli Barzilay <eli@barzilay.org> wrote=
 :
 >>>>> 6 hours ago, zarcher@gmail.com wrote:
 >>>>>> A new problem report is waiting at
 >>>>>> =C2=A0 http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D11550
 >>>>>>
 >>>>>> Reported by Matthew Blakley for release:
 >>>>>> 5.0.99.4--2010-12-14(0542d3c/g)
 >>>>>>
 >>>>>> *** Description:
 >>>>>> The DrRacket application becomes very slow to respond to actions,
 >>>>>> update cursor state, and other gui events.
 >>>>>
 >>>>> JFYI, further details that were not sent to bug-notification:
 >>>>>
 >>>>>
 >>>>> =C2=A0Using the following definitions to reproduce
 >>>>>
 >>>>> =C2=A0#lang racket
 >>>>> =C2=A0(require 2htdp/image)
 >>>>> =C2=A0(define (carpet size c)
 >>>>> =C2=A0(if (<=3D size 2)
 >>>>> =C2=A0 =C2=A0 =C2=A0(square size "outline" c)
 >>>>> =C2=A0 =C2=A0 =C2=A0(local [(define sub (carpet (/ size 3) c))
 >>>>> =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(define ctr (square (=
 / size 3) "solid" "white"))]
 >>>>> =C2=A0 =C2=A0 =C2=A0 =C2=A0(overlay (square size "outline" c)
 >>>>> =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 (above (besid=
 e sub sub sub)
 >>>>> =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=
  =C2=A0 =C2=A0(beside sub ctr sub)
 >>>>> =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=
  =C2=A0 =C2=A0(beside sub sub sub))))))
 >>>>>
 >>>>> =C2=A0(carpet 200 "red")
 >>>>>
 >>>>> =C2=A0Running the last form in the interactions seems to be worse, bu=
 t
 >>>>> problem
 >>>>> =C2=A0exists if these definitions are run directly.
 >>>>>
 >>>>> --
 >>>>> =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0((lambda (x) (x x)) (lambda (x) (x =
 x))) =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Eli Barzilay:
 >>>>> =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=
 http://barzilay.org/ =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
 =A0 =C2=A0 Maze is Life!
 >>>>>
 >>>
 >>>
 >
 >
From: Matthew Blakley <zarcher@gmail.com>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: Eli Barzilay <eli@barzilay.org>, bugs@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11550: slow application response
Date: Thu, 23 Dec 2010 10:54:04 -0800

 I''m running a MacPro with 2 quad-core xeon processors, ATI Radeon HD =
 5870, 12GB RAM; running OS X 10.6.5. Also have Windows 7 32-bit and =
 Ubuntu 10.10 32-bit running in Fusion VM's. I'm using the Activity =
 Monitor on the Mac to watch CPU load and Process Explorer on Windows. =
 Below, the -gr2 builds are from the nightly build page taken this =
 morning, the -stable build is 5.0.2.
 
 The freeze works as expected in the mac-gr2 build: the application =
 responds normally after (freeze (carpet 200 "red")) and cpu load stays =
 low even on resize.
 
 With the mac-gr2 build, I'm not seeing the load ever go down after =
 running (carpet 200...) while the application window is active. The =
 mac-gr2 build recovers if I clear the interactions, it drops back down =
 to low load. In the mac-stable build it will go down after a few seconds =
 and only pops back up on resize. On the win-gr2 build, it also goes down =
 after a few seconds and only pops back up on resize.
 
 Just from rough timings and using the freeze time as a reference, it =
 would appear that in the win-gr2 build, there are 3 renderings of the =
 image for initial display and resize, 2 renderings for restore window, =
 and 1 rendering for minimization. The mac-stable build seems to have 2 =
 renderings initially and 1 rendering on resize (none for minimize or =
 restore). Something about the mac-gr2 seems to be causing it to =
 persistently render. The cursor blink is in increments of the render =
 time.
 
 My main interest here is putting some QA pressure on the -gr2 builds and =
 this snippet was one I noticed in the user list as potentially useful =
 for that purpose.
 


Responsible changed from "matthias" to "robby" by matthias at Wed, 05 Jan 2011 13:03:27 -0500
Reason>>> image is for robby


State changed from "open" to "closed" by robby at Thu, 06 Jan 2011 08:20:00 -0500
Reason>>> 

I've changed 2htdp/image so that it caches the images in a
bitmap when they are drawn and thus only computes them once.

Thanks for the report.

