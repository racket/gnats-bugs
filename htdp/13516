From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Tue Feb 12 13:36:02 2013
Received: from mail-ob0-f178.google.com (mail-ob0-f178.google.com [209.85.214.178])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id r1CIZwvK007358
	for <bugs@bugs.plt-scheme.org>; Tue, 12 Feb 2013 13:35:58 -0500
Message-Id: <201302121835.r1CIZtj2007351@champlain.ccs.neu.edu>
Date: Tue, 12 Feb 2013 13:35:55 -0500
From: hiebk300@hsd.k12.or.us
To: bugs@racket-lang.org
Subject: Key holding delay in universe.ss

>Number:         13516
>Category:       htdp
>Synopsis:       Key holding delay in universe.ss
>Class:          sw-bug
>Responsible:    matthias
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Tue Feb 12 13:40:01 -0500 2013
>Closed-Date:    Tue Feb 12 13:48:45 -0500 2013
>Last-Modified:  Mon Feb 18 22:58:02 -0500 2013
>Originator:     Kyle H.
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.3
>Environment:
windows "Windows NT 6.1 (Build 7601) Service Pack 1" (win32\x86_64\3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 310325744
Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()


Collections:
("C:\\Users\\hiebk300\\AppData\\Roaming\\Racket\\5.3\\collects"
 (non-existent-path))
("C:\\Program Files\\Racket\\collects"
 ("2htdp" "algol60" "at-exp" "browser" "compiler" "config" "data" "datalog" "db" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "future-visualizer" "games" "graphics" "gui-debugger" "help" "hierlist" "htdp" "html" "icons" "images" "info-domain" "json" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "picturing-programs" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "redex" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-engine" "texpict" "trace" "typed" "typed-racket" "typed-scheme" "unstable" "version" "web-server" "wxme" "xml" "xrepl"))

Computer Language: (("Teaching Languages" "How to Design Programs" "Beginning Student with List Abbreviations") (#(#t constructor repeating-decimal #f #t none) #f ((lib "image.ss" "teachpack" "2htdp") (lib "universe.ss" "teachpack" "2htdp"))))
>Description:
The universe.ss teachpack has the big-bang function in it.  One of the clauses in this funtion is on-key.  This is where I am having the problem.  When I do a single press, it works as desired.  But, when I hold down a key, it runs the correct clause once and then waits.  After a short moment, it runs the holding part properly.  I was hoping I could eliminate that pause.  In the steps to reproduce, I have put some code that would allow you to try out the problem.  Simply use the left and right arrow keys to rotate the box.  You should notice a delay if you hold down one of the keys.
>How-To-Repeat:
(require 2htdp/image)
(require 2htdp/universe)

(define-struct world (direction position))

(define WORLD-IMAGE (square 60 "solid" "orange"))

(define world0 (make-world 0 (make-posn 250 250)))

(define (draw a-world)
  (place-image
    (rotate (world-direction a-world) WORLD-IMAGE)
    (posn-x (world-position a-world))
    (posn-y (world-position a-world))
    (empty-scene 500 500)))


(define (key-handler a-world a-key)
  (cond
    [(key=? a-key "right")(make-world
                           (- (world-direction a-world) 5)
                           (world-position a-world))]
    
    [(key=? a-key "left")(make-world
                           (+ (world-direction a-world) 5)
                           (world-position a-world))]
    [else a-world]))


(big-bang
 world0
 (to-draw draw)
 (on-key key-handler))
>Fix:
>Audit-Trail:
From: Robby Findler <robby@eecs.northwestern.edu>
To: hiebk300@hsd.k12.or.us, bugs <bugs@racket-lang.org>
Cc: nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/13516: Key holding delay in universe.ss
Date: Tue, 12 Feb 2013 12:43:56 -0600

 --f46d044518497dae7f04d58b68e5
 Content-Type: text/plain; charset=UTF-8
 
 This has to do with how the operating system delivers the keystrokes to
 Racket. Try the same thing in your mail editor: hold down the left key and
 you'll see that same pause.
 
 Depending on your OS, it may be configurable. But I think you need to just
 find a different way to get input to your program somehow.
 
 Robby
 
 
 On Tue, Feb 12, 2013 at 12:40 PM, <hiebk300@hsd.k12.or.us> wrote:
 
 > A new problem report is waiting at
 >   http://bugs.racket-lang.org/query/?cmd=view&pr=13516
 >
 > Reported by Kyle H. for release: 5.3
 >
 > *** Description:
 > The universe.ss teachpack has the big-bang function in it.  One of the
 > clauses in this funtion is on-key.  This is where I am having the problem.
 >  When I do a single press, it works as desired.  But, when I hold down a
 > key, it runs the correct clause once and then waits.  After a short moment,
 > it runs the holding part properly.  I was hoping I could eliminate that
 > pause.  In the steps to reproduce, I have put some code that would allow
 > you to try out the problem.  Simply use the left and right arrow keys to
 > rotate the box.  You should notice a delay if you hold down one of the keys.
 >
 > *** How to repeat:
 > (require 2htdp/image)
 > (require 2htdp/universe)
 >
 > (define-struct world (direction position))
 >
 > (define WORLD-IMAGE (square 60 "solid" "orange"))
 >
 > (define world0 (make-world 0 (make-posn 250 250)))
 >
 > (define (draw a-world)
 >   (place-image
 >     (rotate (world-direction a-world) WORLD-IMAGE)
 >     (posn-x (world-position a-world))
 >     (posn-y (world-position a-world))
 >     (empty-scene 500 500)))
 >
 >
 > (define (key-handler a-world a-key)
 >   (cond
 >     [(key=? a-key "right")(make-world
 >                            (- (world-direction a-world) 5)
 >                            (world-position a-world))]
 >
 >     [(key=? a-key "left")(make-world
 >                            (+ (world-direction a-world) 5)
 >                            (world-position a-world))]
 >     [else a-world]))
 >
 >
 > (big-bang
 >  world0
 >  (to-draw draw)
 >  (on-key key-handler))
 >
 > *** Environment:
 > windows "Windows NT 6.1 (Build 7601) Service Pack 1" (win32\x86_64\3m)
 > (get-display-depth) = 32
 > Human Language: english
 > (current-memory-use) 310325744
 > Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = ();
 > (links #:user? #f #:root? #t) = ()
 >
 >
 > Collections:
 > ("C:\\Users\\hiebk300\\AppData\\Roaming\\Racket\\5.3\\collects"
 >  (non-existent-path))
 > ("C:\\Program Files\\Racket\\collects"
 >  ("2htdp" "algol60" "at-exp" "browser" "compiler" "config" "data"
 > "datalog" "db" "defaults" "deinprogramm" "drracket" "drscheme" "dynext"
 > "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime"
 > "future-visualizer" "games" "graphics" "gui-debugger" "help" "hierlist"
 > "htdp" "html" "icons" "images" "info-domain" "json" "lang" "launcher"
 > "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib"
 > "mzscheme" "net" "openssl" "parser-tools" "picturing-programs" "plai"
 > "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog"
 > "rackunit" "raco" "reader" "readline" "redex" "rnrs" "s-exp" "scheme"
 > "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "slatex"
 > "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax"
 > "syntax-color" "teachpack" "test-engine" "texpict" "trace" "typed"
 > "typed-racket" "typed-scheme" "unstable" "version" "web-server" "wxme"
 > "xml" "xrepl"))
 >
 > Computer Language: (("Teaching Languages" "How to Design Programs"
 > "Beginning Student with List Abbreviations") (#(#t constructor
 > repeating-decimal #f #t none) #f ((lib "image.ss" "teachpack" "2htdp") (lib
 > "universe.ss" "teachpack" "2htdp"))))
 >
 >
 
 --f46d044518497dae7f04d58b68e5
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 <div dir=3D"ltr">This has to do with how the operating system delivers the =
 keystrokes to Racket. Try the same thing in your mail editor: hold down the=
  left key and you&#39;ll see that same pause.<div><br></div><div style>Depe=
 nding on your OS, it may be configurable. But I think you need to just find=
  a different way to get input to your program somehow.</div>
 <div><br></div><div>Robby</div></div><div class=3D"gmail_extra"><br><br><di=
 v class=3D"gmail_quote">On Tue, Feb 12, 2013 at 12:40 PM,  <span dir=3D"ltr=
 ">&lt;<a href=3D"mailto:hiebk300@hsd.k12.or.us" target=3D"_blank">hiebk300@=
 hsd.k12.or.us</a>&gt;</span> wrote:<br>
 <blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1p=
 x #ccc solid;padding-left:1ex">A new problem report is waiting at<br>
 =C2=A0 <a href=3D"http://bugs.racket-lang.org/query/?cmd=3Dview&amp;pr=3D13=
 516" target=3D"_blank">http://bugs.racket-lang.org/query/?cmd=3Dview&amp;pr=
 =3D13516</a><br>
 <br>
 Reported by Kyle H. for release: 5.3<br>
 <br>
 *** Description:<br>
 The universe.ss teachpack has the big-bang function in it. =C2=A0One of the=
  clauses in this funtion is on-key. =C2=A0This is where I am having the pro=
 blem. =C2=A0When I do a single press, it works as desired. =C2=A0But, when =
 I hold down a key, it runs the correct clause once and then waits. =C2=A0Af=
 ter a short moment, it runs the holding part properly. =C2=A0I was hoping I=
  could eliminate that pause. =C2=A0In the steps to reproduce, I have put so=
 me code that would allow you to try out the problem. =C2=A0Simply use the l=
 eft and right arrow keys to rotate the box. =C2=A0You should notice a delay=
  if you hold down one of the keys.<br>
 
 <br>
 *** How to repeat:<br>
 (require 2htdp/image)<br>
 (require 2htdp/universe)<br>
 <br>
 (define-struct world (direction position))<br>
 <br>
 (define WORLD-IMAGE (square 60 &quot;solid&quot; &quot;orange&quot;))<br>
 <br>
 (define world0 (make-world 0 (make-posn 250 250)))<br>
 <br>
 (define (draw a-world)<br>
 =C2=A0 (place-image<br>
 =C2=A0 =C2=A0 (rotate (world-direction a-world) WORLD-IMAGE)<br>
 =C2=A0 =C2=A0 (posn-x (world-position a-world))<br>
 =C2=A0 =C2=A0 (posn-y (world-position a-world))<br>
 =C2=A0 =C2=A0 (empty-scene 500 500)))<br>
 <br>
 <br>
 (define (key-handler a-world a-key)<br>
 =C2=A0 (cond<br>
 =C2=A0 =C2=A0 [(key=3D? a-key &quot;right&quot;)(make-world<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
 =A0 =C2=A0 =C2=A0 =C2=A0(- (world-direction a-world) 5)<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
 =A0 =C2=A0 =C2=A0 =C2=A0(world-position a-world))]<br>
 <br>
 =C2=A0 =C2=A0 [(key=3D? a-key &quot;left&quot;)(make-world<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
 =A0 =C2=A0 =C2=A0 =C2=A0(+ (world-direction a-world) 5)<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
 =A0 =C2=A0 =C2=A0 =C2=A0(world-position a-world))]<br>
 =C2=A0 =C2=A0 [else a-world]))<br>
 <br>
 <br>
 (big-bang<br>
 =C2=A0world0<br>
 =C2=A0(to-draw draw)<br>
 =C2=A0(on-key key-handler))<br>
 <br>
 *** Environment:<br>
 windows &quot;Windows NT 6.1 (Build 7601) Service Pack 1&quot; (win32\x86_6=
 4\3m) (get-display-depth) =3D 32<br>
 Human Language: english<br>
 (current-memory-use) 310325744<br>
 Links: (links) =3D (); (links #:user? #f) =3D (); (links #:root? #t) =3D ()=
 ; (links #:user? #f #:root? #t) =3D ()<br>
 <br>
 <br>
 Collections:<br>
 (&quot;C:\\Users\\hiebk300\\AppData\\Roaming\\Racket\\5.3\\collects&quot;<b=
 r>
 =C2=A0(non-existent-path))<br>
 (&quot;C:\\Program Files\\Racket\\collects&quot;<br>
 =C2=A0(&quot;2htdp&quot; &quot;algol60&quot; &quot;at-exp&quot; &quot;brows=
 er&quot; &quot;compiler&quot; &quot;config&quot; &quot;data&quot; &quot;dat=
 alog&quot; &quot;db&quot; &quot;defaults&quot; &quot;deinprogramm&quot; &qu=
 ot;drracket&quot; &quot;drscheme&quot; &quot;dynext&quot; &quot;embedded-gu=
 i&quot; &quot;eopl&quot; &quot;errortrace&quot; &quot;ffi&quot; &quot;file&=
 quot; &quot;framework&quot; &quot;frtime&quot; &quot;future-visualizer&quot=
 ; &quot;games&quot; &quot;graphics&quot; &quot;gui-debugger&quot; &quot;hel=
 p&quot; &quot;hierlist&quot; &quot;htdp&quot; &quot;html&quot; &quot;icons&=
 quot; &quot;images&quot; &quot;info-domain&quot; &quot;json&quot; &quot;lan=
 g&quot; &quot;launcher&quot; &quot;lazy&quot; &quot;macro-debugger&quot; &q=
 uot;make&quot; &quot;mred&quot; &quot;mrlib&quot; &quot;mysterx&quot; &quot=
 ;mzcom&quot; &quot;mzlib&quot; &quot;mzscheme&quot; &quot;net&quot; &quot;o=
 penssl&quot; &quot;parser-tools&quot; &quot;picturing-programs&quot; &quot;=
 plai&quot; &quot;planet&quot; &quot;plot&quot; &quot;preprocessor&quot; &qu=
 ot;profile&quot; &quot;r5rs&quot; &quot;r6rs&quot; &quot;racket&quot; &quot=
 ;racklog&quot; &quot;rackunit&quot; &quot;raco&quot; &quot;reader&quot; &qu=
 ot;readline&quot; &quot;redex&quot; &quot;rnrs&quot; &quot;s-exp&quot; &quo=
 t;scheme&quot; &quot;schemeunit&quot; &quot;scribble&quot; &quot;scribbling=
 s&quot; &quot;scriblib&quot; &quot;setup&quot; &quot;sgl&quot; &quot;slatex=
 &quot; &quot;slideshow&quot; &quot;srfi&quot; &quot;stepper&quot; &quot;str=
 ing-constants&quot; &quot;swindle&quot; &quot;syntax&quot; &quot;syntax-col=
 or&quot; &quot;teachpack&quot; &quot;test-engine&quot; &quot;texpict&quot; =
 &quot;trace&quot; &quot;typed&quot; &quot;typed-racket&quot; &quot;typed-sc=
 heme&quot; &quot;unstable&quot; &quot;version&quot; &quot;web-server&quot; =
 &quot;wxme&quot; &quot;xml&quot; &quot;xrepl&quot;))<br>
 
 <br>
 Computer Language: ((&quot;Teaching Languages&quot; &quot;How to Design Pro=
 grams&quot; &quot;Beginning Student with List Abbreviations&quot;) (#(#t co=
 nstructor repeating-decimal #f #t none) #f ((lib &quot;image.ss&quot; &quot=
 ;teachpack&quot; &quot;2htdp&quot;) (lib &quot;universe.ss&quot; &quot;teac=
 hpack&quot; &quot;2htdp&quot;))))<br>
 
 <br>
 </blockquote></div><br></div>
 
 --f46d044518497dae7f04d58b68e5--
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: hiebk300@hsd.k12.or.us, bugs <bugs@racket-lang.org>,
        nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/13516: Key holding delay in universe.ss
Date: Tue, 12 Feb 2013 13:47:01 -0500

 Well on my Mac and in Mail, I get the exact same pause as in the program below. 
 
 
 On Feb 12, 2013, at 1:43 PM, Robby Findler wrote:
 
 > This has to do with how the operating system delivers the keystrokes to Racket. Try the same thing in your mail editor: hold down the left key and you'll see that same pause.
 > 
 > Depending on your OS, it may be configurable. But I think you need to just find a different way to get input to your program somehow.
 > 
 > Robby
 > 
 > 
 > On Tue, Feb 12, 2013 at 12:40 PM, <hiebk300@hsd.k12.or.us> wrote:
 > A new problem report is waiting at
 >   http://bugs.racket-lang.org/query/?cmd=view&pr=13516
 > 
 > Reported by Kyle H. for release: 5.3
 > 
 > *** Description:
 > The universe.ss teachpack has the big-bang function in it.  One of the clauses in this funtion is on-key.  This is where I am having the problem.  When I do a single press, it works as desired.  But, when I hold down a key, it runs the correct clause once and then waits.  After a short moment, it runs the holding part properly.  I was hoping I could eliminate that pause.  In the steps to reproduce, I have put some code that would allow you to try out the problem.  Simply use the left and right arrow keys to rotate the box.  You should notice a delay if you hold down one of the keys.
 > 
 > *** How to repeat:
 > (require 2htdp/image)
 > (require 2htdp/universe)
 > 
 > (define-struct world (direction position))
 > 
 > (define WORLD-IMAGE (square 60 "solid" "orange"))
 > 
 > (define world0 (make-world 0 (make-posn 250 250)))
 > 
 > (define (draw a-world)
 >   (place-image
 >     (rotate (world-direction a-world) WORLD-IMAGE)
 >     (posn-x (world-position a-world))
 >     (posn-y (world-position a-world))
 >     (empty-scene 500 500)))
 > 
 > 
 > (define (key-handler a-world a-key)
 >   (cond
 >     [(key=? a-key "right")(make-world
 >                            (- (world-direction a-world) 5)
 >                            (world-position a-world))]
 > 
 >     [(key=? a-key "left")(make-world
 >                            (+ (world-direction a-world) 5)
 >                            (world-position a-world))]
 >     [else a-world]))
 > 
 > 
 > (big-bang
 >  world0
 >  (to-draw draw)
 >  (on-key key-handler))
 > 
 > *** Environment:
 > windows "Windows NT 6.1 (Build 7601) Service Pack 1" (win32\x86_64\3m) (get-display-depth) = 32
 > Human Language: english
 > (current-memory-use) 310325744
 > Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()
 > 
 > 
 > Collections:
 > ("C:\\Users\\hiebk300\\AppData\\Roaming\\Racket\\5.3\\collects"
 >  (non-existent-path))
 > ("C:\\Program Files\\Racket\\collects"
 >  ("2htdp" "algol60" "at-exp" "browser" "compiler" "config" "data" "datalog" "db" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "future-visualizer" "games" "graphics" "gui-debugger" "help" "hierlist" "htdp" "html" "icons" "images" "info-domain" "json" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "picturing-programs" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "redex" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-engine" "texpict" "trace" "typed" "typed-racket" "typed-scheme" "unstable" "version" "web-server" "wxme" "xml" "xrepl"))
 > 
 > Computer Language: (("Teaching Languages" "How to Design Programs" "Beginning Student with List Abbreviations") (#(#t constructor repeating-decimal #f #t none) #f ((lib "image.ss" "teachpack" "2htdp") (lib "universe.ss" "teachpack" "2htdp"))))
 > 
 > 
 
 

State changed from "open" to "closed" by matthias at Tue, 12 Feb 2013 13:48:45 -0500
Reason>>> OS delivery of key events, not a Racket or DrRacket problem. 

From: Danny Yoo <dyoo@hashcollision.org>
To: bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org,
        matthias@racket-lang.org, hiebk300@hsd.k12.or.us
Subject: Re: [racket-bug] all/13516: Key holding delay in universe.ss
Date: Tue, 12 Feb 2013 12:16:55 -0700

 Given that big-bang is often used for games, and not just textual
 applications, perhaps hooking into a "keydown" for some polling
 duration might be appropriate in some future iteration of World?
 
 That is, real event-driven games do not do what big-bang is doing when
 reading the keyboard.  Arcade-style games don't watch for the
 equivalent of "keypress".  Rather, real video games watch the keyboard
 at the rate of the game loop.
From: Robby Findler <robby@eecs.northwestern.edu>
To: Danny Yoo <dyoo@hashcollision.org>
Cc: bugs <bugs@racket-lang.org>, nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>,
        "matthias@racket-lang.org" <matthias@racket-lang.org>,
        hiebk300@hsd.k12.or.us
Subject: Re: [racket-bug] all/13516: Key holding delay in universe.ss
Date: Tue, 12 Feb 2013 13:40:43 -0600

 --e89a8fb201ac8a7c6504d58c33b5
 Content-Type: text/plain; charset=UTF-8
 
 Is that something that racket/gui supports?
 
 
 On Tue, Feb 12, 2013 at 1:16 PM, Danny Yoo <dyoo@hashcollision.org> wrote:
 
 > Given that big-bang is often used for games, and not just textual
 > applications, perhaps hooking into a "keydown" for some polling
 > duration might be appropriate in some future iteration of World?
 >
 > That is, real event-driven games do not do what big-bang is doing when
 > reading the keyboard.  Arcade-style games don't watch for the
 > equivalent of "keypress".  Rather, real video games watch the keyboard
 > at the rate of the game loop.
 >
 
 --e89a8fb201ac8a7c6504d58c33b5
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 <div dir=3D"ltr">Is that something that racket/gui supports?</div><div clas=
 s=3D"gmail_extra"><br><br><div class=3D"gmail_quote">On Tue, Feb 12, 2013 a=
 t 1:16 PM, Danny Yoo <span dir=3D"ltr">&lt;<a href=3D"mailto:dyoo@hashcolli=
 sion.org" target=3D"_blank">dyoo@hashcollision.org</a>&gt;</span> wrote:<br=
 >
 <blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1p=
 x #ccc solid;padding-left:1ex">Given that big-bang is often used for games,=
  and not just textual<br>
 applications, perhaps hooking into a &quot;keydown&quot; for some polling<b=
 r>
 duration might be appropriate in some future iteration of World?<br>
 <br>
 That is, real event-driven games do not do what big-bang is doing when<br>
 reading the keyboard. =C2=A0Arcade-style games don&#39;t watch for the<br>
 equivalent of &quot;keypress&quot;. =C2=A0Rather, real video games watch th=
 e keyboard<br>
 at the rate of the game loop.<br>
 </blockquote></div><br></div>
 
 --e89a8fb201ac8a7c6504d58c33b5--
From: Matthew Flatt <mflatt@cs.utah.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: Danny Yoo <dyoo@hashcollision.org>, bugs <bugs@racket-lang.org>,
        nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>,
        "matthias@racket-lang.org" <matthias@racket-lang.org>,
        hiebk300@hsd.k12.or.us
Subject: Re: [racket-bug] all/13516: Key holding delay in universe.ss
Date: Tue, 12 Feb 2013 12:50:44 -0700

 A universe program gets key-down and key-release events, so you can
 keep track of the keys that are pressed by watching those two --- and
 that's as much as `racket/gui' currently supports.
 
 At Tue, 12 Feb 2013 13:40:43 -0600, Robby Findler wrote:
 > Is that something that racket/gui supports?
 > 
 > 
 > On Tue, Feb 12, 2013 at 1:16 PM, Danny Yoo <dyoo@hashcollision.org> wrote:
 > 
 > > Given that big-bang is often used for games, and not just textual
 > > applications, perhaps hooking into a "keydown" for some polling
 > > duration might be appropriate in some future iteration of World?
 > >
 > > That is, real event-driven games do not do what big-bang is doing when
 > > reading the keyboard.  Arcade-style games don't watch for the
 > > equivalent of "keypress".  Rather, real video games watch the keyboard
 > > at the rate of the game loop.
 > >
From: Neil Toronto <neil.toronto@gmail.com>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: Robby Findler <robby@eecs.northwestern.edu>,
        Danny Yoo <dyoo@hashcollision.org>, bugs <bugs@racket-lang.org>,
        nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>,
        "matthias@racket-lang.org" <matthias@racket-lang.org>,
        hiebk300@hsd.k12.or.us
Subject: Re: [racket-bug] all/13516: Key holding delay in universe.ss
Date: Tue, 12 Feb 2013 13:20:17 -0700

 That's pretty much what you have to do to make a portable PC game anyway.
 
 On 02/12/2013 12:50 PM, Matthew Flatt wrote:
 > A universe program gets key-down and key-release events, so you can
 > keep track of the keys that are pressed by watching those two --- and
 > that's as much as `racket/gui' currently supports.
 >
 > At Tue, 12 Feb 2013 13:40:43 -0600, Robby Findler wrote:
 >> Is that something that racket/gui supports?
 >>
 >>
 >> On Tue, Feb 12, 2013 at 1:16 PM, Danny Yoo <dyoo@hashcollision.org> wrote:
 >>
 >>> Given that big-bang is often used for games, and not just textual
 >>> applications, perhaps hooking into a "keydown" for some polling
 >>> duration might be appropriate in some future iteration of World?
 >>>
 >>> That is, real event-driven games do not do what big-bang is doing when
 >>> reading the keyboard.  Arcade-style games don't watch for the
 >>> equivalent of "keypress".  Rather, real video games watch the keyboard
 >>> at the rate of the game loop.
 >>>
 
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Neil Toronto <neil.toronto@gmail.com>
Cc: Matthew Flatt <mflatt@cs.utah.edu>,
        Robby Findler <robby@eecs.northwestern.edu>,
        Danny Yoo <dyoo@hashcollision.org>, bugs <bugs@racket-lang.org>,
        nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>,
        "matthias@racket-lang.org" <matthias@racket-lang.org>,
        hiebk300@hsd.k12.or.us
Subject: Re: [racket-bug] all/13516: Key holding delay in universe.ss
Date: Tue, 12 Feb 2013 17:03:07 -0500

 This is what it does: 
 
 >               (define/override (on-char e) 
 >                 (when live
 >                   (let ([e:str (key-event->parts e)])
 >                     (cond
 > 		      [(string=? e:str "release") (prelease (key-release->parts e))]
 > 		      [(and pad (pad-event? e:str)) (ppad e:str)]
 > 		      [else (pkey e:str)])))))))
 
 [pkey, ppad, and prelease are callbacks specified in a world description.]
 
 
 
 
 
 
 On Feb 12, 2013, at 3:20 PM, Neil Toronto wrote:
 
 > That's pretty much what you have to do to make a portable PC game anyway.
 > 
 > On 02/12/2013 12:50 PM, Matthew Flatt wrote:
 >> A universe program gets key-down and key-release events, so you can
 >> keep track of the keys that are pressed by watching those two --- and
 >> that's as much as `racket/gui' currently supports.
 >> 
 >> At Tue, 12 Feb 2013 13:40:43 -0600, Robby Findler wrote:
 >>> Is that something that racket/gui supports?
 >>> 
 >>> 
 >>> On Tue, Feb 12, 2013 at 1:16 PM, Danny Yoo <dyoo@hashcollision.org> wrote:
 >>> 
 >>>> Given that big-bang is often used for games, and not just textual
 >>>> applications, perhaps hooking into a "keydown" for some polling
 >>>> duration might be appropriate in some future iteration of World?
 >>>> 
 >>>> That is, real event-driven games do not do what big-bang is doing when
 >>>> reading the keyboard.  Arcade-style games don't watch for the
 >>>> equivalent of "keypress".  Rather, real video games watch the keyboard
 >>>> at the rate of the game loop.
 >>>> 
 > 
 
 

Responsible changed from "nobody" to "matthias" by eli at Mon, 18 Feb 2013 22:58:02 -0500
Reason>>> matthias closed

