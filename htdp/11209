From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Tue Sep 14 07:59:06 2010
Received: from mail-gw0-f44.google.com (mail-gw0-f44.google.com [74.125.83.44])
	by champlain.ccs.neu.edu (8.14.3/8.14.3) with ESMTP id o8EBx4F2018593
	for <bugs@bugs.plt-scheme.org>; Tue, 14 Sep 2010 07:59:04 -0400
Message-Id: <201009141159.o8EBx1Dj018585@champlain.ccs.neu.edu>
Date: Tue, 14 Sep 2010 07:59:01 -0400
From: sk@cs.brown.edu
To: bugs@racket-lang.org
Subject: signatures in value positions

>Number:         11209
>Category:       htdp
>Synopsis:       signatures in value positions
>Class:          sw-bug
>Responsible:    sperber
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Tue Sep 14 08:00:01 -0400 2010
>Closed-Date:    Sun Jan 16 10:01:02 -0500 2011
>Last-Modified:  Sun Jan 16 10:01:02 -0500 2011
>Originator:     Shriram Krishnamurthi
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.0.1
>Environment:
windows "Windows NT 6.1 (Build 7600)" (win32\i386\3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 202869992

Collections:
(("C:\\Users\\sk\\AppData\\Roaming\\Racket\\5.0.1\\collects" "info-domain" "installed-teachpacks" "plai") ("C:\\Program Files (x86)\\Racket\\5.0.1\\collects" "2htdp" "afm" "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "datalog" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "help" "hierlist" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "redex" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tex2page" "texpict" "trace" "typed" "typ!
 ed-scheme" "unstable" "version" "web-server" "wxme" "xml"))
Computer Language: (("Teaching Languages" "How to Design Programs" "Advanced Student") (#(#t constructor repeating-decimal #t #t none) #f ((lib "cs019.rkt" "installed-teachpacks"))))
>Description:
One of my students wrote the code below.  (It didn't help that the violations window went into the background, a problem that Robby says has been fixed.)  It took even me a few seconds to figure out what the problem is.  

Why is True legal in expression positions?  I would have preferred an error that said (in better words) "this is not inside a signature, so this expression is illegal".  I realize that signatures are constructed using define, rather than (say) define-signature, but do they have to be?  Can we separate these namespaces, using just the predicate sub-form to import functions into signatures?
>How-To-Repeat:
(define-struct cow (posn going-right?))
(define Cow (signature (predicate cow?)))
(: make-cow (posn Boolean -> Cow))
(: cow-posn (Cow -> posn))
(: cow-going-right? (Cow -> Boolean))

(cow-going-right? (make-cow (make-posn 2 1) True))
>Fix:
>Audit-Trail:
From: Michael Sperber <sperber@deinprogramm.de>
To: sk@cs.brown.edu
Cc: bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11209: signatures in value positions
Date: Wed, 15 Sep 2010 09:04:45 +0200

 sk@cs.brown.edu writes:
 
 > Why is True legal in expression positions?
 
 Because signatures are values, and you can abstract over them.  We
 experimented with having them more exalted status in the first year
 (including specialized parameterization syntax), but this did not go
 down well with the students.  For last year, we switched to the present
 system, which allows you to use regular abstraction, and that worked
 much better.
 
 -- 
 Cheers =8-} Mike
 Friede, Völkerverständigung und überhaupt blabla
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Michael Sperber <sperber@deinprogramm.de>
Cc: sk@cs.brown.edu, bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11209: signatures in value positions
Date: Wed, 15 Sep 2010 07:40:39 -0400

 On Sep 15, 2010, at 3:04 AM, Michael Sperber wrote:
 
 > For last year, we switched to the present
 > system, which allows you to use regular abstraction, and that worked
 > much better.
 
 
 Could you send an example of how you used this abstraction in the =
 course? Thanks -- Matthias
 
From: Michael Sperber <sperber@deinprogramm.de>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: sk@cs.brown.edu, bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11209: signatures in value positions
Date: Thu, 16 Sep 2010 09:33:40 +0200

 Matthias Felleisen <matthias@ccs.neu.edu> writes:
 
 > On Sep 15, 2010, at 3:04 AM, Michael Sperber wrote:
 >
 >> For last year, we switched to the present
 >> system, which allows you to use regular abstraction, and that worked
 >> much better.
 >
 >
 > Could you send an example of how you used this abstraction in the
 > course? Thanks -- Matthias
 
 Binary trees, for example:
 
 ; Ein leerer Baum 
 ;(: make-empty-tree empty-tree)
 (: empty-tree? (%a -> boolean))
 
 (define-record-procedures empty-tree
   make-empty-tree empty-tree?
   ())
 
 (define the-empty-tree (make-empty-tree))
 
 ; Ein Knoten besteht aus
 ; - einem Label
 ; - einem linken Baum
 ; - einem rechten Baum
 (: make-node (%a (tree-of %a) (tree-of %a) -> (node-of %a)))
 (: node? (%b -> boolean))
 (: node-label ((node-of %a) -> %a))
 (: node-left-branch ((node-of %a) -> (tree-of %a)))
 (: node-right-branch ((node-of %a) -> (tree-of %a)))
 
 (define-record-procedures-parametric node node-of*
   make-node node?
   (node-label
    node-left-branch node-right-branch))
 
 (define node-of
   (lambda (x)
     (signature
      (node-of* x (tree-of x) (tree-of x)))))
 
 ; Ein Binärbaum ist entweder ein leerer Baum oder ein Knoten
 (define tree-of
   (lambda (x)
     (signature (mixed empty-tree (node-of x)))))
 
 -- 
 Cheers =8-} Mike
 Friede, Völkerverständigung und überhaupt blabla
From: Shriram Krishnamurthi <sk@cs.brown.edu>
To: Michael Sperber <sperber@deinprogramm.de>
Cc: Matthias Felleisen <matthias@ccs.neu.edu>, bugs@racket-lang.org,
        nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11209: signatures in value positions
Date: Thu, 16 Sep 2010 18:38:24 -0400

 Thanks.  If I'm reading this right, it's letting you use procedures
 for a parametric contract.  If that were built in, would this
 mechanism still be of much use?
 
 Shriram
From: Shriram Krishnamurthi <sk@cs.brown.edu>
To: Michael Sperber <sperber@deinprogramm.de>
Cc: Matthias Felleisen <matthias@ccs.neu.edu>, bugs@racket-lang.org,
        nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11209: signatures in value positions
Date: Thu, 16 Sep 2010 19:17:09 -0400

 Would a richer data predicate be a better example?  Maybe whether a
 binary tree is balanced, or whether the parents of a child are older
 than the child, whether a heap is in heap-order, etc?
From: Michael Sperber <sperber@deinprogramm.de>
To: Shriram Krishnamurthi <sk@cs.brown.edu>
Cc: Matthias Felleisen <matthias@ccs.neu.edu>, bugs@racket-lang.org,
        nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11209: signatures in value positions
Date: Fri, 17 Sep 2010 09:23:12 +0200

 Shriram Krishnamurthi <sk@cs.brown.edu> writes:
 
 > Thanks.  If I'm reading this right, it's letting you use procedures
 > for a parametric contract.
 
 Exactly.
 
 > If that were built in, would this mechanism still be of much use?
 
 If *what* were built in?
 
 -- 
 Cheers =8-} Mike
 Friede, Völkerverständigung und überhaupt blabla


State changed from "open" to "analyzed" by matthias at Thu, 30 Sep 2010 14:18:04 -0400
Reason>>> .


Responsible changed from "matthias" to "sperber" by matthias at Mon, 01 Nov 2010 09:58:29 -0400
Reason>>> .


State changed from "analyzed" to "closed" by sperber at Sun, 16 Jan 2011 10:01:02 -0500
Reason>>> There doesn't seem to be an open bug here, just clarification 
and discussion.  Re-open if this is mistaken.

