From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Wed Feb 16 10:55:11 2011
Received: from mail-ew0-f44.google.com (mail-ew0-f44.google.com [209.85.215.44])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id p1GFt8R7011513
	for <bugs@bugs.plt-scheme.org>; Wed, 16 Feb 2011 10:55:09 -0500
Message-Id: <201102161555.p1GFt2mW011508@champlain.ccs.neu.edu>
Date: Wed, 16 Feb 2011 10:55:02 -0500
From: clklein@eecs.northwestern.edu
To: bugs@racket-lang.org
Subject: ISL `filter' contract

>Number:         11745
>Category:       htdp
>Synopsis:       ISL `filter' contract
>Class:          sw-bug
>Responsible:    matthias
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Wed Feb 16 10:56:01 -0500 2011
>Closed-Date:    Wed May 25 14:05:53 -0400 2011
>Last-Modified:  Wed May 25 14:08:02 -0400 2011
>Originator:     Casey Klein
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.1
>Environment:
macosx "Darwin spaghetti.cs.northwestern.edu 10.6.0 Darwin Kernel Version 10.6.0: Wed Nov 10 18:13:17 PST 2010; root:xnu-1504.9.26~3/RELEASE_I386 i386 i386" (i386-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 142971920

Collections:
("/Users/clklein/Library/Racket/5.1/collects"
 (non-existent-path))
("/Applications/Racket v5.1/collects"
 ("2htdp" "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "data" "datalog" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "help" "hierlist" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "picturing-programs" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "redex" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tex2page" "texpict" "trace" "typed" "typed-scheme" "unstable" "version" "web-server" "wxme" "xml"))

Computer Language: (("Teaching Languages" "How to Design Programs" "Intermediate Student with lambda") (#(#t constructor repeating-decimal #f #t none) #f ()))
>Description:
The documentation gives `filter' the contract

filter : ((X -> boolean) (listof X) -> (listof X))

but the following call does not raise an error

(filter (lambda (x) x) (list 1 2 3))

Is that behavior intentional?

(memf (lambda (x) x) (list 1 2 3)) is not an error either, but (ormap (lambda (x) x) (list 1 2 3)) is (though the error message mentions `or' not `ormap').
>How-To-Repeat:
>Fix:
>Audit-Trail:
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: clklein@eecs.northwestern.edu, bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11745: ISL `filter' contract
Date: Wed, 16 Feb 2011 11:03:20 -0500

 I assume that this is about *SL only not about Racket in general. 
 
 I am not sure yet whether I want to fix this. I really like the idea of retaining such attributes from 'scripting' language attributes in HtDP. The question is whether this is good or whether I should just point to full Racket for this. 
 
 
 
 On Feb 16, 2011, at 10:56 AM, clklein@eecs.northwestern.edu wrote:
 
 > A new problem report is waiting at
 >  http://bugs.racket-lang.org/query/?cmd=view&pr=11745
 > 
 > Reported by Casey Klein for release: 5.1
 > 
 > *** Description:
 > The documentation gives `filter' the contract
 > 
 > filter : ((X -> boolean) (listof X) -> (listof X))
 > 
 > but the following call does not raise an error
 > 
 > (filter (lambda (x) x) (list 1 2 3))
 > 
 > Is that behavior intentional?
 > 
 > (memf (lambda (x) x) (list 1 2 3)) is not an error either, but (ormap (lambda (x) x) (list 1 2 3)) is (though the error message mentions `or' not `ormap').
 > 
 > *** How to repeat:
 > 
 > 
 > *** Environment:
 > macosx "Darwin spaghetti.cs.northwestern.edu 10.6.0 Darwin Kernel Version 10.6.0: Wed Nov 10 18:13:17 PST 2010; root:xnu-1504.9.26~3/RELEASE_I386 i386 i386" (i386-macosx/3m) (get-display-depth) = 32
 > Human Language: english
 > (current-memory-use) 142971920
 > 
 > Collections:
 > ("/Users/clklein/Library/Racket/5.1/collects"
 > (non-existent-path))
 > ("/Applications/Racket v5.1/collects"
 > ("2htdp" "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "data" "datalog" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "help" "hierlist" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "picturing-programs" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "redex" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tex2page" "texpict" "trace" "typed" "typed-scheme" "unstable" "version" "web-server" "wxme" "xml"))
 > 
 > Computer Language: (("Teaching Languages" "How to Design Programs" "Intermediate Student with lambda") (#(#t constructor repeating-decimal #f #t none) #f ()))
 > 
 
 
From: Casey Klein <clklein@eecs.northwestern.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11745: ISL `filter' contract
Date: Wed, 16 Feb 2011 10:10:11 -0600

 On Wed, Feb 16, 2011 at 10:03 AM, Matthias Felleisen
 <matthias@ccs.neu.edu> wrote:
 >
 > I assume that this is about *SL only not about Racket in general.
 >
 
 That's right.
 
 > I am not sure yet whether I want to fix this. I really like the idea of retaining such attributes from 'scripting' language attributes in HtDP. The question is whether this is good or whether I should just point to full Racket for this.
 >
 >
 >
 > On Feb 16, 2011, at 10:56 AM, clklein@eecs.northwestern.edu wrote:
 >
 >> A new problem report is waiting at
 >> Â http://bugs.racket-lang.org/query/?cmd=view&pr=11745
 >>
 >> Reported by Casey Klein for release: 5.1
 >>
 >> *** Description:
 >> The documentation gives `filter' the contract
 >>
 >> filter : ((X -> boolean) (listof X) -> (listof X))
 >>
 >> but the following call does not raise an error
 >>
 >> (filter (lambda (x) x) (list 1 2 3))
 >>
 >> Is that behavior intentional?
 >>
 >> (memf (lambda (x) x) (list 1 2 3)) is not an error either, but (ormap (lambda (x) x) (list 1 2 3)) is (though the error message mentions `or' not `ormap').
 >>
 >> *** How to repeat:
 >>
 >>
 >> *** Environment:
 >> macosx "Darwin spaghetti.cs.northwestern.edu 10.6.0 Darwin Kernel Version 10.6.0: Wed Nov 10 18:13:17 PST 2010; root:xnu-1504.9.26~3/RELEASE_I386 i386 i386" (i386-macosx/3m) (get-display-depth) = 32
 >> Human Language: english
 >> (current-memory-use) 142971920
 >>
 >> Collections:
 >> ("/Users/clklein/Library/Racket/5.1/collects"
 >> (non-existent-path))
 >> ("/Applications/Racket v5.1/collects"
 >> ("2htdp" "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "data" "datalog" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "help" "hierlist" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "picturing-programs" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "redex" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tex2page" "texpict" "trace" "typed" "typed-scheme" "unstable" "version" "web-server" "wxme" "xml"))
 >>
 >> Computer Language: (("Teaching Languages" "How to Design Programs" "Intermediate Student with lambda") (#(#t constructor repeating-decimal #f #t none) #f ()))
 >>
 >
 >
 
From: Sam Tobin-Hochstadt <samth@ccs.neu.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: clklein@eecs.northwestern.edu, bugs@racket-lang.org,
        nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11745: ISL `filter' contract
Date: Wed, 16 Feb 2011 11:16:28 -0500

 On Wed, Feb 16, 2011 at 11:03 AM, Matthias Felleisen
 <matthias@ccs.neu.edu> wrote:
 >
 > I am not sure yet whether I want to fix this. I really like the idea of retaining such attributes from 'scripting' language attributes in HtDP. The question is whether this is good or whether I should just point to full Racket for this.
 
 I think we should be consistent -- either `if' should allow
 generalized booleans, or `filter' should reject them.  Personally, I'd
 be happy with allowing them everywhere, but perhaps BSL shouldn't.
 -- 
 sam th
 samth@ccs.neu.edu
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Sam Tobin-Hochstadt <samth@ccs.neu.edu>
Cc: clklein@eecs.northwestern.edu, bugs@racket-lang.org,
        nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11745: ISL `filter' contract
Date: Wed, 16 Feb 2011 11:21:44 -0500

 >>  I'd
 >> be happy with allowing them everywhere, but perhaps BSL shouldn't.
 
 
 That's the key question: do you want such inconsistencies across *SL layers? 
 
 The other one is that boolean-ness introduces serious performance problems here. 
From: Stevie Strickland <sstrickl@ccs.neu.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: Sam Tobin-Hochstadt <samth@ccs.neu.edu>, clklein@eecs.northwestern.edu,
        bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11745: ISL `filter' contract
Date: Wed, 16 Feb 2011 11:39:28 -0500

 On Feb 16, 2011, at 11:21 AM, Matthias Felleisen wrote:
 >>> I'd be happy with allowing them everywhere, but perhaps BSL shouldn't.
 > 
 > That's the key question: do you want such inconsistencies across *SL layers? 
 
 It's not an inconsistency, but just a restriction for BSL, right?  That is, all BSL programs that use the assumption that `if' only works with booleans will still function without change in ISL and ASL, right?
 
 Stevie
From: Robby Findler <robby@eecs.northwestern.edu>
To: Sam Tobin-Hochstadt <samth@ccs.neu.edu>
Cc: Matthias Felleisen <matthias@ccs.neu.edu>, clklein@eecs.northwestern.edu,
        bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11745: ISL `filter' contract
Date: Wed, 16 Feb 2011 10:46:49 -0600

 I also think there should be some general rule that gets followed in
 how booleannes is treated. The current state (ormap signalling an
 error from or) doesn't seem good.
 
 Robby
 
 On Wed, Feb 16, 2011 at 10:16 AM, Sam Tobin-Hochstadt <samth@ccs.neu.edu> wrote:
 > On Wed, Feb 16, 2011 at 11:03 AM, Matthias Felleisen
 > <matthias@ccs.neu.edu> wrote:
 >>
 >> I am not sure yet whether I want to fix this. I really like the idea of retaining such attributes from 'scripting' language attributes in HtDP. The question is whether this is good or whether I should just point to full Racket for this.
 >
 > I think we should be consistent -- either `if' should allow
 > generalized booleans, or `filter' should reject them. Â Personally, I'd
 > be happy with allowing them everywhere, but perhaps BSL shouldn't.
 > --
 > sam th
 > samth@ccs.neu.edu
 >
 
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Stevie Strickland <sstrickl@ccs.neu.edu>
Cc: Sam Tobin-Hochstadt <samth@ccs.neu.edu>, clklein@eecs.northwestern.edu,
        bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11745: ISL `filter' contract
Date: Wed, 16 Feb 2011 11:47:20 -0500

 On Feb 16, 2011, at 11:39 AM, Stevie Strickland wrote:
 
 > On Feb 16, 2011, at 11:21 AM, Matthias Felleisen wrote:
 >>>> I'd be happy with allowing them everywhere, but perhaps BSL shouldn't.
 >> 
 >> That's the key question: do you want such inconsistencies across *SL layers? 
 > 
 > It's not an inconsistency, but just a restriction for BSL, right?  That is, all BSL programs that use the assumption that `if' only works with booleans will still function without change in ISL and ASL, right?
 > 
 > Stevie
 
 
 In the past we had the guideline that positive behavior doesn't change as you go up, but negative behavior (errors) may disappear. I conjecture the rule has been broken before but I really like it. 
From: Stevie Strickland <sstrickl@ccs.neu.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: Sam Tobin-Hochstadt <samth@ccs.neu.edu>, clklein@eecs.northwestern.edu,
        bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11745: ISL `filter' contract
Date: Wed, 16 Feb 2011 11:48:34 -0500

 On Feb 16, 2011, at 11:47 AM, Matthias Felleisen wrote:
 > On Feb 16, 2011, at 11:39 AM, Stevie Strickland wrote:
 >> On Feb 16, 2011, at 11:21 AM, Matthias Felleisen wrote:
 >>>>> I'd be happy with allowing them everywhere, but perhaps BSL shouldn't.
 >>> 
 >>> That's the key question: do you want such inconsistencies across *SL layers? 
 >> 
 >> It's not an inconsistency, but just a restriction for BSL, right?  That is, all BSL programs that use the assumption that `if' only works with booleans will still function without change in ISL and ASL, right?
 >> 
 > 
 > In the past we had the guideline that positive behavior doesn't change as you go up, but negative behavior (errors) may disappear. I conjecture the rule has been broken before but I really like it.
 
 But here that's exactly what we have, right?  Errors that might occur in BSL (due to use of non-booleans in the test position of an if) would disappear as you go up.  I don't see any positive behavior changing, just negative, but I could be mistaken.
 
 Stevie
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: Sam Tobin-Hochstadt <samth@ccs.neu.edu>, clklein@eecs.northwestern.edu,
        bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11745: ISL `filter' contract
Date: Wed, 16 Feb 2011 11:47:51 -0500

 That's the other kind of consistency and I am beginning to think that it is the more important kind for teaching. 
 
 
 On Feb 16, 2011, at 11:46 AM, Robby Findler wrote:
 
 > I also think there should be some general rule that gets followed in
 > how booleannes is treated. The current state (ormap signalling an
 > error from or) doesn't seem good.
 > 
 > Robby
 > 
 > On Wed, Feb 16, 2011 at 10:16 AM, Sam Tobin-Hochstadt <samth@ccs.neu.edu> wrote:
 >> On Wed, Feb 16, 2011 at 11:03 AM, Matthias Felleisen
 >> <matthias@ccs.neu.edu> wrote:
 >>> 
 >>> I am not sure yet whether I want to fix this. I really like the idea of retaining such attributes from 'scripting' language attributes in HtDP. The question is whether this is good or whether I should just point to full Racket for this.
 >> 
 >> I think we should be consistent -- either `if' should allow
 >> generalized booleans, or `filter' should reject them.  Personally, I'd
 >> be happy with allowing them everywhere, but perhaps BSL shouldn't.
 >> --
 >> sam th
 >> samth@ccs.neu.edu
 >> 
 
 


State changed from "open" to "analyzed" by matthias at Wed, 16 Mar 2011 13:27:53 -0400
Reason>>> .

State changed from "analyzed" to "closed" by matthias@racket-lang.org at Wed, 25 May 2011 14:05:53 -0400
Reason>>> A commit by matthias@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/e3c552b785
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: bugs@racket-lang.org
Cc: matthias@racket-lang.org, sk@racket-lang.org, robby@racket-lang.org,
        mflatt@racket-lang.org, clklein@eecs.northwestern.edu
Subject: Re: [racket-bug] htdp/11745 ISL `filter' contract
Date: Wed, 25 May 2011 14:07:26 -0400

 For the record, I have changed several functions not just filter: 
 
 
 Welcome to DrRacket, version 5.1.1.5--2011-05-24(c7d2f13/g) [3m].
 Language: Intermediate Student with lambda; memory limit: 256 MB.
 > (filter add1 '(1 2 3))
 filter: the results of add1 (the function given to filter) must be of type <boolean>, produced 2
 > (quicksort '(2 0 1) list)
 quicksort: the results of list (the function given to quicksort) must be of type <boolean>, produced (list 0 2)
 > (andmap (lambda (x) (add1 x)) '(1 2 3))
 andmap: the results of the function given to andmap must be of type <boolean>, produced 2
 > (ormap (lambda (x) (add1 x)) '(1 2 3))
 ormap: the results of the function given to ormap must be of type <boolean>, produced 2
 
 
 
 For memf, I changed the documentation. So one element of dynamically typed behavior is in. 
