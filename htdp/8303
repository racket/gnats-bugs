From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Thu Sep 28 12:07:59 2006
Received: from nf-out-f131.google.com (nf-out-0910.google.com [64.233.182.131])
	by champlain.ccs.neu.edu (8.13.7/8.13.7) with ESMTP id k8SG7w4C013078
	for <bugs@bugs.plt-scheme.org>; Thu, 28 Sep 2006 12:07:58 -0400
Message-Id: <200609281607.k8SG7unb013071@champlain.ccs.neu.edu>
Date: Thu, 28 Sep 2006 12:07:56 -0400
From: ghamel@cs.wpi.edu
To: bugs@plt-scheme.org
Subject: set! gives error in Interactions window

>Number:         8303
>Category:       htdp
>Synopsis:       set! gives error in Interactions window
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       critical
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Thu Sep 28 12:10:01 -0400 2006
>Closed-Date:    Mon Oct 23 03:16:49 -0400 2006
>Last-Modified:  Mon Oct 23 03:16:49 -0400 2006
>Originator:     Glynis Hamel
>Organization:
plt
>Submitter-Id:   unknown
>Release:        352
>Environment:
windows "Windows NT 5.1 (Build 2600) Service Pack 2" (win32\i386) (get-display-depth) = 32
Docs Installed:
(("C:\\Program Files\\PLT\\doc" "r5rs" "mzscheme" "mred" "help" "tour" "drscheme" "srfi" "mzlib" "misclib" "mrlib" "framework" "foreign" "mzc" "tools" "insidemz" "web-server" "swindle" "plot" "release-notes" "t-y-scheme" "tex2page" "beginning" "beginning-abbr" "intermediate" "intermediate-lambda" "advanced" "teachpack" "teachpack-htdc" "profj-beginner" "profj-intermediate" "profj-advanced"))
Human Language: english
(current-memory-use) 76476416

Collections:
(("C:\\Documents and Settings\\ghamel\\Application Data\\PLT Scheme\\352\\collects" non-existent-path) ("C:\\Program Files\\PLT\\collects" "afm" "algol60" "browser" "compiler" "config" "defaults" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "framework" "frtime" "games" "graphics" "help" "hierlist" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "mztake" "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profj" "profjBoxes" "profjWizard" "r5rs" "setup" "sgl" "slatex" "slibinit" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-suite" "tex2page" "texpict" "trace" "version" "web-server" "xml"))
Teachpack filenames: ()
Computer Language: (("Teaching Languages" "How to Design Programs" "Advanced Student") (#6(#t constructor repeating-decimal #t #t none) #f))
>Description:
Using Advanced Student under v 352, an error occurs when using set! in the Interactions window:

set!:  cannot change identifier that is instantiated as a module constant

This error does not occur if the language level chosen is "Essentials of programming languages".  It also does not occur if you do the set! in the definitions window.

I have .scm files from last year which work fine (the call to set! returns void, as expected, and the change is recorded).  I use Advanced Language level, v352 on last year's files with no problem.
>How-To-Repeat:
Choose Language Advanced Student.
Definitions window:

(define number 5)


Hit "Run".  In Interactions window:

(set! number 12)
>Fix:
>Audit-Trail:
From: Eli Barzilay <eli@barzilay.org>
To: "Kathi Fisler" <kfisler@cs.wpi.edu>
Cc: Matthias Felleisen <matthias@ccs.neu.edu>,
        Matthew Flatt <mflatt@cs.utah.edu>,
        Robby Findler <robby@cs.uchicago.edu>, bugs@plt-scheme.org
Subject: Re: all/8303: set! gives error in Interactions window
Date: Thu, 28 Sep 2006 19:03:56 -0400

 On Sep 28, Kathi Fisler wrote:
 > Hi Eli,
 > 
 > Bug report 8303 was submitted by one of my WPI colleagues today, and
 > it affects the running of her course this term.  Is the inability to
 > use set! in the defs window under Advanced a design decision or a bug?
 >  A preliminary assessment of the problem ASAP would help, as it
 > affects her class materials for tomorrow morning.  (Shriram said you
 > were the one to ask about this).
 
 The problem is that the new JIT enforces constants -- because with
 that assumption it can inline values.  This enforcement can be
 disabled (together with the optimizations) using the
 `compile-enforce-module-constants' parameter which DrScheme does not
 use by default.  So when a module is defined (as happens with the
 advanced language):
 
   (module foo mzscheme
     (define a 3))
 
 The value of `a' cannot change later when the repl goes into the
 module's namespace.  The problem wouldn't happen with something like:
 
   (module foo mzscheme
     (define a 3)
     (define (whatever) (set! a 0)))
 
 because the compiler knows that `a' will be modified.
 
 Ways to solve this for now: either have a stub function like the
 above, or use boxes.  (I asked Matthias who'se in charge of the
 teaching languages, and his reply was that you shouldn't use mutation
 three weeks into the semester...)
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                   http://www.barzilay.org/                 Maze is Life!
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Eli Barzilay <eli@barzilay.org>
Cc: "Kathi Fisler" <kfisler@cs.wpi.edu>, Matthew Flatt <mflatt@cs.utah.edu>,
        Robby Findler <robby@cs.uchicago.edu>, bugs@plt-scheme.org
Subject: Re: all/8303: set! gives error in Interactions window
Date: Thu, 28 Sep 2006 19:49:52 -0400

 Kathi, in clear speak: the Advanced language that your colleague
 is using after 3 weeks already is using module-like things behind
 the students' back. This is what introduces the problems.
 
 I don't know why the test suite didn't catch that.
 
 -- Matthias
 
 
 On Sep 28, 2006, at 7:03 PM, Eli Barzilay wrote:
 
 > On Sep 28, Kathi Fisler wrote:
 >> Hi Eli,
 >>
 >> Bug report 8303 was submitted by one of my WPI colleagues today, and
 >> it affects the running of her course this term.  Is the inability to
 >> use set! in the defs window under Advanced a design decision or a  
 >> bug?
 >>  A preliminary assessment of the problem ASAP would help, as it
 >> affects her class materials for tomorrow morning.  (Shriram said you
 >> were the one to ask about this).
 >
 > The problem is that the new JIT enforces constants -- because with
 > that assumption it can inline values.  This enforcement can be
 > disabled (together with the optimizations) using the
 > `compile-enforce-module-constants' parameter which DrScheme does not
 > use by default.  So when a module is defined (as happens with the
 > advanced language):
 >
 >   (module foo mzscheme
 >     (define a 3))
 >
 > The value of `a' cannot change later when the repl goes into the
 > module's namespace.  The problem wouldn't happen with something like:
 >
 >   (module foo mzscheme
 >     (define a 3)
 >     (define (whatever) (set! a 0)))
 >
 > because the compiler knows that `a' will be modified.
 >
 > Ways to solve this for now: either have a stub function like the
 > above, or use boxes.  (I asked Matthias who'se in charge of the
 > teaching languages, and his reply was that you shouldn't use mutation
 > three weeks into the semester...)
 >
 > -- 
 >           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli  
 > Barzilay:
 >                   http://www.barzilay.org/                 Maze is  
 > Life!
 
From: Matthew Flatt <mflatt@cs.utah.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: Eli Barzilay <eli@barzilay.org>, "Kathi Fisler" <kfisler@cs.wpi.edu>,
        Robby Findler <robby@cs.uchicago.edu>, bugs@plt-scheme.org
Subject: Re: all/8303: set! gives error in Interactions window
Date: Fri, 29 Sep 2006 08:11:50 0800

 At Thu, 28 Sep 2006 19:49:52 -0400, Matthias Felleisen wrote:
 > I don't know why the test suite didn't catch that.
 
 It's only testing whole programs right now. I'll add REPL-like
 interaction to the set of modes that the test driver tries.
 
 (Or maybe you don't know why I didn't make it test REPL interaction
 before. I overlooked that part.)
 
 Matthew
 
From: "Kathi Fisler" <kfisler@cs.wpi.edu>
To: "Eli Barzilay" <eli@barzilay.org>
Cc: "Matthias Felleisen" <matthias@ccs.neu.edu>,
        "Matthew Flatt" <mflatt@cs.utah.edu>,
        "Robby Findler" <robby@cs.uchicago.edu>, bugs@plt-scheme.org
Subject: Re: all/8303: set! gives error in Interactions window
Date: Thu, 28 Sep 2006 20:27:50 -0400

 I take it the compile-enforce-module-constants parameter isn't
 something we can set as a DrScheme preference, right?  If there's a
 way, that would do the trick.   If not, I think there's only one more
 lecture until they start embedding set! in functions anyway.
 
 This issue isn't in the third week of the semester, incidentally.  WPI
 is in the penultimate week of the term.
 
 Kathi
 
 On 9/28/06, Eli Barzilay <eli@barzilay.org> wrote:
 > On Sep 28, Kathi Fisler wrote:
 > > Hi Eli,
 > >
 > > Bug report 8303 was submitted by one of my WPI colleagues today, and
 > > it affects the running of her course this term.  Is the inability to
 > > use set! in the defs window under Advanced a design decision or a bug?
 > >  A preliminary assessment of the problem ASAP would help, as it
 > > affects her class materials for tomorrow morning.  (Shriram said you
 > > were the one to ask about this).
 >
 > The problem is that the new JIT enforces constants -- because with
 > that assumption it can inline values.  This enforcement can be
 > disabled (together with the optimizations) using the
 > `compile-enforce-module-constants' parameter which DrScheme does not
 > use by default.  So when a module is defined (as happens with the
 > advanced language):
 >
 >   (module foo mzscheme
 >     (define a 3))
 >
 > The value of `a' cannot change later when the repl goes into the
 > module's namespace.  The problem wouldn't happen with something like:
 >
 >   (module foo mzscheme
 >     (define a 3)
 >     (define (whatever) (set! a 0)))
 >
 > because the compiler knows that `a' will be modified.
 >
 > Ways to solve this for now: either have a stub function like the
 > above, or use boxes.  (I asked Matthias who'se in charge of the
 > teaching languages, and his reply was that you shouldn't use mutation
 > three weeks into the semester...)
 >
 > --
 >           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
 >                   http://www.barzilay.org/                 Maze is Life!
 >
 >
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: Eli Barzilay <eli@barzilay.org>, "Kathi Fisler" <kfisler@cs.wpi.edu>,
        Robby Findler <robby@cs.uchicago.edu>, bugs@plt-scheme.org
Subject: Re: all/8303: set! gives error in Interactions window
Date: Thu, 28 Sep 2006 20:38:17 -0400

 Sorry but I thought that Robby's drscheme test suite for language  
 levels would catch this. After all, how often did we watch Joe Warren  
 play monkey-at-the-keyboard in the REPL. -- Matthias
 
 
 On Sep 28, 2006, at 8:11 PM, Matthew Flatt wrote:
 
 > At Thu, 28 Sep 2006 19:49:52 -0400, Matthias Felleisen wrote:
 >> I don't know why the test suite didn't catch that.
 >
 > It's only testing whole programs right now. I'll add REPL-like
 > interaction to the set of modes that the test driver tries.
 >
 > (Or maybe you don't know why I didn't make it test REPL interaction
 > before. I overlooked that part.)
 >
 > Matthew
 >
 
From: Robby Findler <robby@cs.uchicago.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: Matthew Flatt <mflatt@cs.utah.edu>, Eli Barzilay <eli@barzilay.org>,
        "Kathi Fisler" <kfisler@cs.wpi.edu>, bugs@plt-scheme.org
Subject: Re: all/8303: set! gives error in Interactions window
Date: Thu, 28 Sep 2006 20:18:23 -0500

 On Sep 28, 2006, at 7:38 PM, Matthias Felleisen wrote:
 > Sorry but I thought that Robby's drscheme test suite for language  
 > levels would catch this. After all, how often did we watch Joe  
 > Warren play monkey-at-the-keyboard in the REPL. -- Matthias
 
 
 The drscheme test suite is designed to catch bugs at the integration- 
 with-drscheme level, and this isn't an issue there. My test suite has  
 accidentally caught such things before, but I guess no luck this time!
 
 I think Matthew's test suite is the right place for this test, now  
 that we've realized we should add it.
 
 I think that it might be possible to give them a .plt  file that  
 could be installed via the web that would patch things, if that were  
 necessary.
 
 Robby
 
 
From: "Kathi Fisler" <kfisler@cs.wpi.edu>
To: "Robby Findler" <robby@cs.uchicago.edu>
Cc: "Matthias Felleisen" <matthias@ccs.neu.edu>,
        "Matthew Flatt" <mflatt@cs.utah.edu>,
        "Eli Barzilay" <eli@barzilay.org>, bugs@plt-scheme.org
Subject: Re: all/8303: set! gives error in Interactions window
Date: Fri, 29 Sep 2006 06:12:22 -0400

 Depends how long this would take on your end, and whether one needs
 machine administrator privileges to install .plt files.  I'm not sure
 this is a short-term issue past Monday, though that question should
 really go to Glynis.  A patch for spring semester would be great.
 
 In the meantime, I've told Glynis to bury a dummy function that set!s
 the variable in the demo file she's using for class --  at least the
 interaction will work in lecture this way and she can explain the
 problem to students on an as-need basis.
 
 Kathi
 
 On 9/28/06, Robby Findler <robby@cs.uchicago.edu> wrote:
 > I think that it might be possible to give them a .plt  file that
 > could be installed via the web that would patch things, if that were
 > necessary.
 >
 > Robby
 >
 >
 >


Responsible changed from "matthias" to "mflatt" by matthias at Wed, 18 Oct 2006 21:07:02 -0400
Reason>>> matthew said he'd change the test suite
robby will change the language level then (i think) 


State changed from "open" to "closed" by mflatt at Mon, 23 Oct 2006 03:16:49 -0400
Reason>>> Fixed for the next release.

Thanks very much for the report,
Matthew

