From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Tue Oct  8 12:04:03 2013
Received: from mail-oa0-f42.google.com (mail-oa0-f42.google.com [209.85.219.42])
	by winooski.ccs.neu.edu (8.14.7/8.14.7) with ESMTP id r98G41ho014234
	for <bugs@bugs.plt-scheme.org>; Tue, 8 Oct 2013 12:04:01 -0400
Message-Id: <201310081603.r98G3v6S014206@winooski.ccs.neu.edu>
Date: Tue, 8 Oct 2013 12:03:57 -0400
From: matthias@ccs.neu.edu
To: bugs@racket-lang.org
Subject: check-syntax fails to work properly on templates

>Number:         14085
>Category:       htdp
>Synopsis:       check-syntax fails to work properly on templates
>Class:          sw-bug
>Responsible:    matthias
>Severity:       serious
>Priority:       medium
>State:          analyzed
>Confidential:   no
>Arrival-Date:   Tue Oct 08 12:08:01 -0400 2013
>Closed-Date:    
>Last-Modified:  Wed Oct 16 10:47:43 -0400 2013
>Originator:     matthias
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.90.0.9--2013-09-23(f1e240d1/d)
>Environment:
macosx "Darwin antarctica.ccs.neu.edu 12.5.0 Darwin Kernel Version 12.5.0: Mon Jul 29 16:33:49 PDT 2013; root:xnu-2050.48.11~1/RELEASE_X86_64 x86_64" (x86_64-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 255311764
Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()
raco pkg (show):
/Users/matthias/plt/racket/share/devel-pkgs:
 Package              Checksum    Source
 main-distribution    #f          (static-link ../../../pkgs/main-distribution)
 plt-services         #f          (static-link ../../../pkgs/plt-services)
 racket-lib           #f          (static-link ../../../pkgs/racket-pkgs/racket-lib)
 [173 auto-installed packages not shown]
Installation-wide:
 [none]
User-specific for installation "5.90.0.9":
 [none]



Collections:
("/Users/matthias/0Unison/collects/"
 (".DS_Store" "compiled" "date" "finance" "info-domain" "info.ss" "pdf.ss~" "session" "short" "testing" "tll-collects" "utils" "web"))
("/Users/matthias/Library/Racket/5.90.0.9/collects"
 (non-existent-path))
("/Users/matthias/plt/racket/collects"
 (".gitignore" "acks" "compiler" "data" "db" "dynext" "ffi" "file" "info" "info-domain" "json" "launcher" "net" "openssl" "pkg" "planet" "racket" "rackunit" "raco" "reader" "realm" "s-exp" "scheme" "setup" "srfi" "syntax" "unstable" "version" "xml"))

Recent Internal Errors: 
Computer Language: (("Teaching Languages" "How to Design Programs" "Beginning Student with List Abbreviations") (#(#t constructor repeating-decimal #f #t none) #f ((lib "teachpack/2htdp/image.rkt") (lib "teachpack/2htdp/universe.rkt"))))
>Description:
>How-To-Repeat:
1. enter this program in BSL+

(define (template-for-list aln)
  (cond
    [(empty? aln) ...]
    [else (... (first aln) ... (template-for-list (rest aln)) ...)]))

2. Run [just to check that it is accepted as legal BSL+ syntax].

3. Check syntax. 

4. Mouse over the aln parameter. Observe: 

-- all you get is an arrow from the parameter to the occurrence in the first line
-- when you try to rename, it renames only the first occurrence and the parameter 
>Fix:
>Audit-Trail:
From: Sam Tobin-Hochstadt <samth@cs.indiana.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>, bugs <bugs@racket-lang.org>
Cc: nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/14085: check-syntax fails to work properly on templates
Date: Tue, 8 Oct 2013 12:12:43 -0400

 On Tue, Oct 8, 2013 at 12:08 PM,  <matthias@ccs.neu.edu> wrote:
 >
 > 4. Mouse over the aln parameter. Observe:
 >
 > -- all you get is an arrow from the parameter to the occurrence in the first line
 > -- when you try to rename, it renames only the first occurrence and the parameter
 
 I predict that this is an issue with the `...` form.  I bet it's just
 throwing away all of its subforms.
 
 Sam
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>, bugs <bugs@racket-lang.org>
Cc: nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/14085: check-syntax fails to work properly on templates
Date: Tue, 8 Oct 2013 17:05:37 -0500

 --001a11c3235af18d5304e841f71d
 Content-Type: text/plain; charset=UTF-8
 
 The code for this is, I believe, the beginner-dots/proc (that's the macro
 transformer) and one possible change to this would be to turn the call to
 'error' in dots-error into  (begin (error ...)
  the-other-args-to-the-dots-go-here).
 
 But this is a backwards incompatible change (or probably one anyways) since
 things that were legal before, eg
 
 (define (f x) (... y))
 
 would become syntax errors.
 
 Doing this would probably be necessary, however, to check syntax to work
 since it needs the real code.
 
 Anyways, I'll leave this to the BSL designer to ponder.
 
 Robby
 
 
 
 On Tue, Oct 8, 2013 at 11:08 AM, <matthias@ccs.neu.edu> wrote:
 
 > A new problem report is waiting at
 >   http://bugs.racket-lang.org/query/?cmd=view&pr=14085
 >
 > Reported by matthias for release: 5.90.0.9--2013-09-23(f1e240d1/d)
 >
 > *** Description:
 >
 >
 > *** How to repeat:
 > 1. enter this program in BSL+
 >
 > (define (template-for-list aln)
 >   (cond
 >     [(empty? aln) ...]
 >     [else (... (first aln) ... (template-for-list (rest aln)) ...)]))
 >
 > 2. Run [just to check that it is accepted as legal BSL+ syntax].
 >
 > 3. Check syntax.
 >
 > 4. Mouse over the aln parameter. Observe:
 >
 > -- all you get is an arrow from the parameter to the occurrence in the
 > first line
 > -- when you try to rename, it renames only the first occurrence and the
 > parameter
 >
 > *** Environment:
 > macosx "Darwin antarctica.ccs.neu.edu 12.5.0 Darwin Kernel Version
 > 12.5.0: Mon Jul 29 16:33:49 PDT 2013; root:xnu-2050.48.11~1/RELEASE_X86_64
 > x86_64" (x86_64-macosx/3m) (get-display-depth) = 32
 > Human Language: english
 > (current-memory-use) 255311764
 > Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = ();
 > (links #:user? #f #:root? #t) = ()
 > raco pkg (show):
 > /Users/matthias/plt/racket/share/devel-pkgs:
 >  Package              Checksum    Source
 >  main-distribution    #f          (static-link
 > ../../../pkgs/main-distribution)
 >  plt-services         #f          (static-link ../../../pkgs/plt-services)
 >  racket-lib           #f          (static-link
 > ../../../pkgs/racket-pkgs/racket-lib)
 >  [173 auto-installed packages not shown]
 > Installation-wide:
 >  [none]
 > User-specific for installation "5.90.0.9":
 >  [none]
 >
 >
 >
 > Collections:
 > ("/Users/matthias/0Unison/collects/"
 >  (".DS_Store" "compiled" "date" "finance" "info-domain" "info.ss"
 > "pdf.ss~" "session" "short" "testing" "tll-collects" "utils" "web"))
 > ("/Users/matthias/Library/Racket/5.90.0.9/collects"
 >  (non-existent-path))
 > ("/Users/matthias/plt/racket/collects"
 >  (".gitignore" "acks" "compiler" "data" "db" "dynext" "ffi" "file" "info"
 > "info-domain" "json" "launcher" "net" "openssl" "pkg" "planet" "racket"
 > "rackunit" "raco" "reader" "realm" "s-exp" "scheme" "setup" "srfi" "syntax"
 > "unstable" "version" "xml"))
 >
 > Recent Internal Errors:
 > Computer Language: (("Teaching Languages" "How to Design Programs"
 > "Beginning Student with List Abbreviations") (#(#t constructor
 > repeating-decimal #f #t none) #f ((lib "teachpack/2htdp/image.rkt") (lib
 > "teachpack/2htdp/universe.rkt"))))
 >
 >
 
 --001a11c3235af18d5304e841f71d
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 <div dir=3D"ltr">The code for this is, I believe, the beginner-dots/proc (t=
 hat&#39;s the macro transformer) and one possible change to this would be t=
 o turn the call to &#39;error&#39; in dots-error into =C2=A0(begin (error .=
 ..) =C2=A0the-other-args-to-the-dots-go-here).<div>
 <br></div><div>But this is a backwards incompatible change (or probably one=
  anyways) since things that were legal before, eg</div><div><br></div><div>=
 (define (f x) (... y))</div><div><br></div><div>would become syntax errors.=
 </div>
 <div><br></div><div>Doing this would probably be necessary, however, to che=
 ck syntax to work since it needs the real code.</div><div><br></div><div>An=
 yways, I&#39;ll leave this to the BSL designer to ponder.<br></div><div>
 <br></div><div>Robby</div><div><br></div></div><div class=3D"gmail_extra"><=
 br><br><div class=3D"gmail_quote">On Tue, Oct 8, 2013 at 11:08 AM,  <span d=
 ir=3D"ltr">&lt;<a href=3D"mailto:matthias@ccs.neu.edu" target=3D"_blank">ma=
 tthias@ccs.neu.edu</a>&gt;</span> wrote:<br>
 <blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1p=
 x #ccc solid;padding-left:1ex">A new problem report is waiting at<br>
 =C2=A0 <a href=3D"http://bugs.racket-lang.org/query/?cmd=3Dview&amp;pr=3D14=
 085" target=3D"_blank">http://bugs.racket-lang.org/query/?cmd=3Dview&amp;pr=
 =3D14085</a><br>
 <br>
 Reported by matthias for release: 5.90.0.9--2013-09-23(f1e240d1/d)<br>
 <br>
 *** Description:<br>
 <br>
 <br>
 *** How to repeat:<br>
 1. enter this program in BSL+<br>
 <br>
 (define (template-for-list aln)<br>
 =C2=A0 (cond<br>
 =C2=A0 =C2=A0 [(empty? aln) ...]<br>
 =C2=A0 =C2=A0 [else (... (first aln) ... (template-for-list (rest aln)) ...=
 )]))<br>
 <br>
 2. Run [just to check that it is accepted as legal BSL+ syntax].<br>
 <br>
 3. Check syntax.<br>
 <br>
 4. Mouse over the aln parameter. Observe:<br>
 <br>
 -- all you get is an arrow from the parameter to the occurrence in the firs=
 t line<br>
 -- when you try to rename, it renames only the first occurrence and the par=
 ameter<br>
 <br>
 *** Environment:<br>
 macosx &quot;Darwin <a href=3D"http://antarctica.ccs.neu.edu" target=3D"_bl=
 ank">antarctica.ccs.neu.edu</a> 12.5.0 Darwin Kernel Version 12.5.0: Mon Ju=
 l 29 16:33:49 PDT 2013; root:xnu-2050.48.11~1/RELEASE_X86_64 x86_64&quot; (=
 x86_64-macosx/3m) (get-display-depth) =3D 32<br>
 
 Human Language: english<br>
 (current-memory-use) 255311764<br>
 Links: (links) =3D (); (links #:user? #f) =3D (); (links #:root? #t) =3D ()=
 ; (links #:user? #f #:root? #t) =3D ()<br>
 raco pkg (show):<br>
 /Users/matthias/plt/racket/share/devel-pkgs:<br>
 =C2=A0Package =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Checksum =C2=
 =A0 =C2=A0Source<br>
 =C2=A0main-distribution =C2=A0 =C2=A0#f =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(=
 static-link ../../../pkgs/main-distribution)<br>
 =C2=A0plt-services =C2=A0 =C2=A0 =C2=A0 =C2=A0 #f =C2=A0 =C2=A0 =C2=A0 =C2=
 =A0 =C2=A0(static-link ../../../pkgs/plt-services)<br>
 =C2=A0racket-lib =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 #f =C2=A0 =C2=A0 =C2=A0=
  =C2=A0 =C2=A0(static-link ../../../pkgs/racket-pkgs/racket-lib)<br>
 =C2=A0[173 auto-installed packages not shown]<br>
 Installation-wide:<br>
 =C2=A0[none]<br>
 User-specific for installation &quot;5.90.0.9&quot;:<br>
 =C2=A0[none]<br>
 <br>
 <br>
 <br>
 Collections:<br>
 (&quot;/Users/matthias/0Unison/collects/&quot;<br>
 =C2=A0(&quot;.DS_Store&quot; &quot;compiled&quot; &quot;date&quot; &quot;fi=
 nance&quot; &quot;info-domain&quot; &quot;info.ss&quot; &quot;pdf.ss~&quot;=
  &quot;session&quot; &quot;short&quot; &quot;testing&quot; &quot;tll-collec=
 ts&quot; &quot;utils&quot; &quot;web&quot;))<br>
 
 (&quot;/Users/matthias/Library/Racket/<a href=3D"http://5.90.0.9/collects" =
 target=3D"_blank">5.90.0.9/collects</a>&quot;<br>
 =C2=A0(non-existent-path))<br>
 (&quot;/Users/matthias/plt/racket/collects&quot;<br>
 =C2=A0(&quot;.gitignore&quot; &quot;acks&quot; &quot;compiler&quot; &quot;d=
 ata&quot; &quot;db&quot; &quot;dynext&quot; &quot;ffi&quot; &quot;file&quot=
 ; &quot;info&quot; &quot;info-domain&quot; &quot;json&quot; &quot;launcher&=
 quot; &quot;net&quot; &quot;openssl&quot; &quot;pkg&quot; &quot;planet&quot=
 ; &quot;racket&quot; &quot;rackunit&quot; &quot;raco&quot; &quot;reader&quo=
 t; &quot;realm&quot; &quot;s-exp&quot; &quot;scheme&quot; &quot;setup&quot;=
  &quot;srfi&quot; &quot;syntax&quot; &quot;unstable&quot; &quot;version&quo=
 t; &quot;xml&quot;))<br>
 
 <br>
 Recent Internal Errors:<br>
 Computer Language: ((&quot;Teaching Languages&quot; &quot;How to Design Pro=
 grams&quot; &quot;Beginning Student with List Abbreviations&quot;) (#(#t co=
 nstructor repeating-decimal #f #t none) #f ((lib &quot;teachpack/2htdp/imag=
 e.rkt&quot;) (lib &quot;teachpack/2htdp/universe.rkt&quot;))))<br>
 
 <br>
 </blockquote></div><br></div>
 
 --001a11c3235af18d5304e841f71d--
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>, bugs <bugs@racket-lang.org>
Cc: nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/14085: check-syntax fails to work properly on templates
Date: Tue, 8 Oct 2013 17:05:49 -0500

 --001a11c30920ae339e04e841f8d2
 Content-Type: text/plain; charset=UTF-8
 
 (Oh, the file is teach.rkt)
 
 
 On Tue, Oct 8, 2013 at 5:05 PM, Robby Findler
 <robby@eecs.northwestern.edu>wrote:
 
 > The code for this is, I believe, the beginner-dots/proc (that's the macro
 > transformer) and one possible change to this would be to turn the call to
 > 'error' in dots-error into  (begin (error ...)
 >  the-other-args-to-the-dots-go-here).
 >
 > But this is a backwards incompatible change (or probably one anyways)
 > since things that were legal before, eg
 >
 > (define (f x) (... y))
 >
 > would become syntax errors.
 >
 > Doing this would probably be necessary, however, to check syntax to work
 > since it needs the real code.
 >
 > Anyways, I'll leave this to the BSL designer to ponder.
 >
 > Robby
 >
 >
 >
 > On Tue, Oct 8, 2013 at 11:08 AM, <matthias@ccs.neu.edu> wrote:
 >
 >> A new problem report is waiting at
 >>   http://bugs.racket-lang.org/query/?cmd=view&pr=14085
 >>
 >> Reported by matthias for release: 5.90.0.9--2013-09-23(f1e240d1/d)
 >>
 >> *** Description:
 >>
 >>
 >> *** How to repeat:
 >> 1. enter this program in BSL+
 >>
 >> (define (template-for-list aln)
 >>   (cond
 >>     [(empty? aln) ...]
 >>     [else (... (first aln) ... (template-for-list (rest aln)) ...)]))
 >>
 >> 2. Run [just to check that it is accepted as legal BSL+ syntax].
 >>
 >> 3. Check syntax.
 >>
 >> 4. Mouse over the aln parameter. Observe:
 >>
 >> -- all you get is an arrow from the parameter to the occurrence in the
 >> first line
 >> -- when you try to rename, it renames only the first occurrence and the
 >> parameter
 >>
 >> *** Environment:
 >> macosx "Darwin antarctica.ccs.neu.edu 12.5.0 Darwin Kernel Version
 >> 12.5.0: Mon Jul 29 16:33:49 PDT 2013; root:xnu-2050.48.11~1/RELEASE_X86_64
 >> x86_64" (x86_64-macosx/3m) (get-display-depth) = 32
 >> Human Language: english
 >> (current-memory-use) 255311764
 >> Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = ();
 >> (links #:user? #f #:root? #t) = ()
 >> raco pkg (show):
 >> /Users/matthias/plt/racket/share/devel-pkgs:
 >>  Package              Checksum    Source
 >>  main-distribution    #f          (static-link
 >> ../../../pkgs/main-distribution)
 >>  plt-services         #f          (static-link ../../../pkgs/plt-services)
 >>  racket-lib           #f          (static-link
 >> ../../../pkgs/racket-pkgs/racket-lib)
 >>  [173 auto-installed packages not shown]
 >> Installation-wide:
 >>  [none]
 >> User-specific for installation "5.90.0.9":
 >>  [none]
 >>
 >>
 >>
 >> Collections:
 >> ("/Users/matthias/0Unison/collects/"
 >>  (".DS_Store" "compiled" "date" "finance" "info-domain" "info.ss"
 >> "pdf.ss~" "session" "short" "testing" "tll-collects" "utils" "web"))
 >> ("/Users/matthias/Library/Racket/5.90.0.9/collects"
 >>  (non-existent-path))
 >> ("/Users/matthias/plt/racket/collects"
 >>  (".gitignore" "acks" "compiler" "data" "db" "dynext" "ffi" "file" "info"
 >> "info-domain" "json" "launcher" "net" "openssl" "pkg" "planet" "racket"
 >> "rackunit" "raco" "reader" "realm" "s-exp" "scheme" "setup" "srfi" "syntax"
 >> "unstable" "version" "xml"))
 >>
 >> Recent Internal Errors:
 >> Computer Language: (("Teaching Languages" "How to Design Programs"
 >> "Beginning Student with List Abbreviations") (#(#t constructor
 >> repeating-decimal #f #t none) #f ((lib "teachpack/2htdp/image.rkt") (lib
 >> "teachpack/2htdp/universe.rkt"))))
 >>
 >>
 >
 
 --001a11c30920ae339e04e841f8d2
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 <div dir=3D"ltr">(Oh, the file is teach.rkt)</div><div class=3D"gmail_extra=
 "><br><br><div class=3D"gmail_quote">On Tue, Oct 8, 2013 at 5:05 PM, Robby =
 Findler <span dir=3D"ltr">&lt;<a href=3D"mailto:robby@eecs.northwestern.edu=
 " target=3D"_blank">robby@eecs.northwestern.edu</a>&gt;</span> wrote:<br>
 <blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1p=
 x #ccc solid;padding-left:1ex"><div dir=3D"ltr">The code for this is, I bel=
 ieve, the beginner-dots/proc (that&#39;s the macro transformer) and one pos=
 sible change to this would be to turn the call to &#39;error&#39; in dots-e=
 rror into =C2=A0(begin (error ...) =C2=A0the-other-args-to-the-dots-go-here=
 ).<div>
 
 <br></div><div>But this is a backwards incompatible change (or probably one=
  anyways) since things that were legal before, eg</div><div><br></div><div>=
 (define (f x) (... y))</div><div><br></div><div>would become syntax errors.=
 </div>
 
 <div><br></div><div>Doing this would probably be necessary, however, to che=
 ck syntax to work since it needs the real code.</div><div><br></div><div>An=
 yways, I&#39;ll leave this to the BSL designer to ponder.<span class=3D"HOE=
 nZb"><font color=3D"#888888"><br>
 </font></span></div><span class=3D"HOEnZb"><font color=3D"#888888"><div>
 <br></div><div>Robby</div><div><br></div></font></span></div><div class=3D"=
 HOEnZb"><div class=3D"h5"><div class=3D"gmail_extra"><br><br><div class=3D"=
 gmail_quote">On Tue, Oct 8, 2013 at 11:08 AM,  <span dir=3D"ltr">&lt;<a hre=
 f=3D"mailto:matthias@ccs.neu.edu" target=3D"_blank">matthias@ccs.neu.edu</a=
 >&gt;</span> wrote:<br>
 
 <blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1p=
 x #ccc solid;padding-left:1ex">A new problem report is waiting at<br>
 =C2=A0 <a href=3D"http://bugs.racket-lang.org/query/?cmd=3Dview&amp;pr=3D14=
 085" target=3D"_blank">http://bugs.racket-lang.org/query/?cmd=3Dview&amp;pr=
 =3D14085</a><br>
 <br>
 Reported by matthias for release: 5.90.0.9--2013-09-23(f1e240d1/d)<br>
 <br>
 *** Description:<br>
 <br>
 <br>
 *** How to repeat:<br>
 1. enter this program in BSL+<br>
 <br>
 (define (template-for-list aln)<br>
 =C2=A0 (cond<br>
 =C2=A0 =C2=A0 [(empty? aln) ...]<br>
 =C2=A0 =C2=A0 [else (... (first aln) ... (template-for-list (rest aln)) ...=
 )]))<br>
 <br>
 2. Run [just to check that it is accepted as legal BSL+ syntax].<br>
 <br>
 3. Check syntax.<br>
 <br>
 4. Mouse over the aln parameter. Observe:<br>
 <br>
 -- all you get is an arrow from the parameter to the occurrence in the firs=
 t line<br>
 -- when you try to rename, it renames only the first occurrence and the par=
 ameter<br>
 <br>
 *** Environment:<br>
 macosx &quot;Darwin <a href=3D"http://antarctica.ccs.neu.edu" target=3D"_bl=
 ank">antarctica.ccs.neu.edu</a> 12.5.0 Darwin Kernel Version 12.5.0: Mon Ju=
 l 29 16:33:49 PDT 2013; root:xnu-2050.48.11~1/RELEASE_X86_64 x86_64&quot; (=
 x86_64-macosx/3m) (get-display-depth) =3D 32<br>
 
 
 Human Language: english<br>
 (current-memory-use) 255311764<br>
 Links: (links) =3D (); (links #:user? #f) =3D (); (links #:root? #t) =3D ()=
 ; (links #:user? #f #:root? #t) =3D ()<br>
 raco pkg (show):<br>
 /Users/matthias/plt/racket/share/devel-pkgs:<br>
 =C2=A0Package =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Checksum =C2=
 =A0 =C2=A0Source<br>
 =C2=A0main-distribution =C2=A0 =C2=A0#f =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(=
 static-link ../../../pkgs/main-distribution)<br>
 =C2=A0plt-services =C2=A0 =C2=A0 =C2=A0 =C2=A0 #f =C2=A0 =C2=A0 =C2=A0 =C2=
 =A0 =C2=A0(static-link ../../../pkgs/plt-services)<br>
 =C2=A0racket-lib =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 #f =C2=A0 =C2=A0 =C2=A0=
  =C2=A0 =C2=A0(static-link ../../../pkgs/racket-pkgs/racket-lib)<br>
 =C2=A0[173 auto-installed packages not shown]<br>
 Installation-wide:<br>
 =C2=A0[none]<br>
 User-specific for installation &quot;5.90.0.9&quot;:<br>
 =C2=A0[none]<br>
 <br>
 <br>
 <br>
 Collections:<br>
 (&quot;/Users/matthias/0Unison/collects/&quot;<br>
 =C2=A0(&quot;.DS_Store&quot; &quot;compiled&quot; &quot;date&quot; &quot;fi=
 nance&quot; &quot;info-domain&quot; &quot;info.ss&quot; &quot;pdf.ss~&quot;=
  &quot;session&quot; &quot;short&quot; &quot;testing&quot; &quot;tll-collec=
 ts&quot; &quot;utils&quot; &quot;web&quot;))<br>
 
 
 (&quot;/Users/matthias/Library/Racket/<a href=3D"http://5.90.0.9/collects" =
 target=3D"_blank">5.90.0.9/collects</a>&quot;<br>
 =C2=A0(non-existent-path))<br>
 (&quot;/Users/matthias/plt/racket/collects&quot;<br>
 =C2=A0(&quot;.gitignore&quot; &quot;acks&quot; &quot;compiler&quot; &quot;d=
 ata&quot; &quot;db&quot; &quot;dynext&quot; &quot;ffi&quot; &quot;file&quot=
 ; &quot;info&quot; &quot;info-domain&quot; &quot;json&quot; &quot;launcher&=
 quot; &quot;net&quot; &quot;openssl&quot; &quot;pkg&quot; &quot;planet&quot=
 ; &quot;racket&quot; &quot;rackunit&quot; &quot;raco&quot; &quot;reader&quo=
 t; &quot;realm&quot; &quot;s-exp&quot; &quot;scheme&quot; &quot;setup&quot;=
  &quot;srfi&quot; &quot;syntax&quot; &quot;unstable&quot; &quot;version&quo=
 t; &quot;xml&quot;))<br>
 
 
 <br>
 Recent Internal Errors:<br>
 Computer Language: ((&quot;Teaching Languages&quot; &quot;How to Design Pro=
 grams&quot; &quot;Beginning Student with List Abbreviations&quot;) (#(#t co=
 nstructor repeating-decimal #f #t none) #f ((lib &quot;teachpack/2htdp/imag=
 e.rkt&quot;) (lib &quot;teachpack/2htdp/universe.rkt&quot;))))<br>
 
 
 <br>
 </blockquote></div><br></div>
 </div></div></blockquote></div><br></div>
 
 --001a11c30920ae339e04e841f8d2--

From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>, bugs <bugs@racket-lang.org>
Cc: nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/14085: check-syntax fails to work properly on templates
Date: Wed, 9 Oct 2013 09:38:21 -0500

 --089e0118476847d6ac04e84fd6d4
 Content-Type: text/plain; charset=UTF-8
 
 Okay, here's a diff that does what I was suggesting (I didn't run/extend
 the test suites tho, just tried the one example from the PR):
 
 iff --git a/pkgs/htdp-pkgs/htdp-lib/lang/private/teach.rkt
 b/pkgs/htdp-pkgs/htdp-lib/lang/private/teach.rkt
 index 87bc284..085b262 100644
 --- a/pkgs/htdp-pkgs/htdp-lib/lang/private/teach.rkt
 +++ b/pkgs/htdp-pkgs/htdp-lib/lang/private/teach.rkt
 @@ -1610,10 +1610,12 @@
 
      ;; Syntax Identifier -> Expression
      ;; Produces an expression which raises an error reporting unfinished
 code.
 -    (define (dots-error stx name)
 +    (define (dots-error stx name extra)
        (quasisyntax/loc stx
 -        (error (quote (unsyntax name))
 -               "expected a finished expression, but found a template")))
 +        (begin
 +          (error (quote (unsyntax name))
 +                 "expected a finished expression, but found a template")
 +          #,extra)))
 
      ;; Expression -> Expression
      ;; Transforms unfinished code (... and the like) to code
 @@ -1627,9 +1629,9 @@
           (syntax-local-lift-expression (datum->syntax #'here 1 stx))
 
           (syntax-case stx (set!)
 -           [(set! form expr) (dots-error stx (syntax form))]
 -           [(form . rest) (dots-error stx (syntax form))]
 -           [form (dots-error stx stx)]))))
 +           [(set! form expr) (dots-error stx (syntax form) #'(begin form
 expr))]
 +           [(form . rest) (dots-error stx (syntax form) #'(begin . rest))]
 +           [form (dots-error stx stx #'(void))]))))
 
      ;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
      ;; local
 
 --089e0118476847d6ac04e84fd6d4
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 <div dir=3D"ltr">Okay, here&#39;s a diff that does what I was suggesting (I=
  didn&#39;t run/extend the test suites tho, just tried the one example from=
  the PR):<div><br></div><div><div>iff --git a/pkgs/htdp-pkgs/htdp-lib/lang/=
 private/teach.rkt b/pkgs/htdp-pkgs/htdp-lib/lang/private/teach.rkt</div>
 <div>index 87bc284..085b262 100644</div><div>--- a/pkgs/htdp-pkgs/htdp-lib/=
 lang/private/teach.rkt</div><div>+++ b/pkgs/htdp-pkgs/htdp-lib/lang/private=
 /teach.rkt</div><div>@@ -1610,10 +1610,12 @@</div><div>=C2=A0</div><div>=C2=
 =A0 =C2=A0 =C2=A0;; Syntax Identifier -&gt; Expression</div>
 <div>=C2=A0 =C2=A0 =C2=A0;; Produces an expression which raises an error re=
 porting unfinished code.</div><div>- =C2=A0 =C2=A0(define (dots-error stx n=
 ame)</div><div>+ =C2=A0 =C2=A0(define (dots-error stx name extra)</div><div=
 >=C2=A0 =C2=A0 =C2=A0 =C2=A0(quasisyntax/loc stx</div>
 <div>- =C2=A0 =C2=A0 =C2=A0 =C2=A0(error (quote (unsyntax name))</div><div>=
 - =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 &quot;expected a finishe=
 d expression, but found a template&quot;)))</div><div>+ =C2=A0 =C2=A0 =C2=
 =A0 =C2=A0(begin</div><div>+ =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(error (quot=
 e (unsyntax name))</div>
 <div>+ =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 &quot;expect=
 ed a finished expression, but found a template&quot;)</div><div>+ =C2=A0 =
 =C2=A0 =C2=A0 =C2=A0 =C2=A0#,extra)))</div><div>=C2=A0</div><div>=C2=A0 =C2=
 =A0 =C2=A0;; Expression -&gt; Expression</div><div>=C2=A0 =C2=A0 =C2=A0;; T=
 ransforms unfinished code (... and the like) to code</div>
 <div>@@ -1627,9 +1629,9 @@</div><div>=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 (sy=
 ntax-local-lift-expression (datum-&gt;syntax #&#39;here 1 stx))</div><div>=
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=C2=A0</div><div>=C2=A0 =C2=A0 =C2=A0 =C2=
 =A0 =C2=A0 (syntax-case stx (set!)</div><div>- =C2=A0 =C2=A0 =C2=A0 =C2=A0 =
 =C2=A0 [(set! form expr) (dots-error stx (syntax form))]</div>
 <div>- =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 [(form . rest) (dots-error stx (s=
 yntax form))]</div><div>- =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 [form (dots-er=
 ror stx stx)]))))</div><div>+ =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 [(set! for=
 m expr) (dots-error stx (syntax form) #&#39;(begin form expr))]</div><div>
 + =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 [(form . rest) (dots-error stx (syntax=
  form) #&#39;(begin . rest))]</div><div>+ =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
 =A0 [form (dots-error stx stx #&#39;(void))]))))</div><div>=C2=A0</div><div=
 >=C2=A0 =C2=A0 =C2=A0;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;<=
 /div>
 <div>=C2=A0 =C2=A0 =C2=A0;; local</div></div><div><br></div></div>
 
 --089e0118476847d6ac04e84fd6d4--
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: bugs <bugs@racket-lang.org>, nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/14085: check-syntax fails to work properly on templates
Date: Wed, 9 Oct 2013 11:19:49 -0400

 On Oct 8, 2013, at 6:05 PM, Robby Findler <robby@eecs.northwestern.edu> wrote:
 
 > Anyways, I'll leave this to the BSL designer to ponder.
 
 
 Who's that? 
 
 > But this is a backwards incompatible change (or probably one anyways) since things that were legal before, eg
 > 
 > (define (f x) (... y))
 > 
 > would become syntax errors.
 
 
 That's precisely how ... is used in templates so that would be a bad patch. 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: bugs <bugs@racket-lang.org>, nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/14085: check-syntax fails to work properly on templates
Date: Wed, 9 Oct 2013 10:27:46 -0500

 --047d7b2e4eda02f99104e850870f
 Content-Type: text/plain; charset=UTF-8
 
 On Wed, Oct 9, 2013 at 10:19 AM, Matthias Felleisen <matthias@ccs.neu.edu>wrote:
 
 >
 > On Oct 8, 2013, at 6:05 PM, Robby Findler <robby@eecs.northwestern.edu>
 > wrote:
 >
 > > Anyways, I'll leave this to the BSL designer to ponder.
 >
 >
 > Who's that?
 >
 >
 Excellent question! :)
 
 
 > > But this is a backwards incompatible change (or probably one anyways)
 > since things that were legal before, eg
 > >
 > > (define (f x) (... y))
 > >
 > > would become syntax errors.
 >
 >
 > That's precisely how ... is used in templates so that would be a bad
 > patch.
 
 
 Maybe something could be done for free variables somehow by collaborating
 with other parts of BSL.
 
 What about this:
 
 (define (f x) (... (lambda 1))
 
 Robby
 
 --047d7b2e4eda02f99104e850870f
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 <div dir=3D"ltr"><br><div class=3D"gmail_extra"><br><br><div class=3D"gmail=
 _quote">On Wed, Oct 9, 2013 at 10:19 AM, Matthias Felleisen <span dir=3D"lt=
 r">&lt;<a href=3D"mailto:matthias@ccs.neu.edu" target=3D"_blank">matthias@c=
 cs.neu.edu</a>&gt;</span> wrote:<br>
 <blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1p=
 x #ccc solid;padding-left:1ex"><div class=3D"im"><br>
 On Oct 8, 2013, at 6:05 PM, Robby Findler &lt;<a href=3D"mailto:robby@eecs.=
 northwestern.edu">robby@eecs.northwestern.edu</a>&gt; wrote:<br>
 <br>
 &gt; Anyways, I&#39;ll leave this to the BSL designer to ponder.<br>
 <br>
 <br>
 </div>Who&#39;s that?<br>
 <div class=3D"im"><br></div></blockquote><div><br></div><div>Excellent ques=
 tion! :)</div><div>=C2=A0</div><blockquote class=3D"gmail_quote" style=3D"m=
 argin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div class=3D=
 "im">
 &gt; But this is a backwards incompatible change (or probably one anyways) =
 since things that were legal before, eg<br>
 &gt;<br>
 &gt; (define (f x) (... y))<br>
 &gt;<br>
 &gt; would become syntax errors.<br>
 <br>
 <br>
 </div>That&#39;s precisely how ... is used in templates so that would be a =
 bad patch. </blockquote></div><br></div><div class=3D"gmail_extra">Maybe so=
 mething could be done for free variables somehow by collaborating with othe=
 r parts of BSL.</div>
 <div class=3D"gmail_extra"><br></div><div class=3D"gmail_extra">What about =
 this:</div><div class=3D"gmail_extra"><br></div><div class=3D"gmail_extra">=
 (define (f x) (... (lambda 1))</div><div class=3D"gmail_extra"><br></div><d=
 iv class=3D"gmail_extra">
 Robby</div><div class=3D"gmail_extra"><br></div></div>
 
 --047d7b2e4eda02f99104e850870f--
From: Stephen Bloch <bloch@adelphi.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: Robby Findler <robby@eecs.northwestern.edu>, bugs <bugs@racket-lang.org>,
        nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/14085: check-syntax fails to work properly on templates
Date: Wed, 9 Oct 2013 11:33:58 -0400

 --Apple-Mail=_5D70A185-30CA-4158-B17C-BBE8D142125D
 Content-Transfer-Encoding: quoted-printable
 Content-Type: text/plain;
 	charset=windows-1252
 
 
 On Oct 9, 2013, at 11:19 AM, Matthias Felleisen <matthias@ccs.neu.edu> =
 wrote:
 
 >> But this is a backwards incompatible change (or probably one anyways) =
 since things that were legal before, eg
 >>=20
 >> (define (f x) (... y))
 >>=20
 >> would become syntax errors.
 >=20
 >=20
 > That's precisely how ... is used in templates so that would be a bad =
 patch.
 
 Is "=85" really used that often with unbound variables?  The templates =
 that Gregor used in his MOOC used "=85" as a place-holder for a function =
 call, but IIRC all the arguments were valid expressions in the context =
 of the function body.
 
 
 Stephen Bloch
 sbloch@adelphi.edu
 GPG key at http://home.adelphi.edu/sbloch/sbloch.pubkey.asc
 
 
 --Apple-Mail=_5D70A185-30CA-4158-B17C-BBE8D142125D
 Content-Transfer-Encoding: 7bit
 Content-Disposition: attachment;
 	filename=signature.asc
 Content-Type: application/pgp-signature;
 	name=signature.asc
 Content-Description: Message signed with OpenPGP using GPGMail
 
 -----BEGIN PGP SIGNATURE-----
 
 iQEcBAEBAgAGBQJSVXdmAAoJEFpYErlTRMKOxKYH/3rcthcCRBTu3EvId7290y9Z
 VShfIF//zsRhU/4t+UtSFxug1FEYHFO+6kdZGqZNc8SKkhxLEwJr2r/Dtk8p7epq
 Fn9bL/i6aPv97i/WDauQMCae04+/HUz1Zbi9H+Era8TiZbjDclXPqZQQWz05g0M6
 WIGJ74ccFi4c0/B7u0cex/pjHSxsmcmDanOio7MtVQFf70chXIT7bLgUx7F5IdBA
 9FXPwIdY9pv82qM7DbULl8zCAsK7SBehUNPd8JMTLLW6TQMwuoIQebdkOUfqq9l3
 jWPX/rYxkyto579O+7RzldYguS08GNuk0xuD9a7fbWyKgtTIoZevsoC2j7qux50=
 =eI47
 -----END PGP SIGNATURE-----
 
 --Apple-Mail=_5D70A185-30CA-4158-B17C-BBE8D142125D--
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Stephen Bloch <bloch@adelphi.edu>
Cc: Robby Findler <robby@eecs.northwestern.edu>, bugs <bugs@racket-lang.org>,
        nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/14085: check-syntax fails to work properly on templates
Date: Wed, 9 Oct 2013 11:36:24 -0400

 If I understood the patch correctly, y is any expression not just a free variable. Otherwise I agree we can apply Robby's patch. 
 
 BUT, I am not 100% sure how to write a test case for the actual problem (that enough syntax information survives for Robby's syntax check). 
 
 
 
 On Oct 9, 2013, at 11:33 AM, Stephen Bloch <bloch@adelphi.edu> wrote:
 
 > 
 > On Oct 9, 2013, at 11:19 AM, Matthias Felleisen <matthias@ccs.neu.edu> wrote:
 > 
 >>> But this is a backwards incompatible change (or probably one anyways) since things that were legal before, eg
 >>> 
 >>> (define (f x) (... y))
 >>> 
 >>> would become syntax errors.
 >> 
 >> 
 >> That's precisely how ... is used in templates so that would be a bad patch.
 > 
 > Is "�" really used that often with unbound variables?  The templates that Gregor used in his MOOC used "�" as a place-holder for a function call, but IIRC all the arguments were valid expressions in the context of the function body.
 > 
 > 
 > Stephen Bloch
 > sbloch@adelphi.edu
 > GPG key at http://home.adelphi.edu/sbloch/sbloch.pubkey.asc
 > 
 
 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: Stephen Bloch <bloch@adelphi.edu>, bugs <bugs@racket-lang.org>,
        nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/14085: check-syntax fails to work properly on templates
Date: Wed, 9 Oct 2013 10:48:51 -0500

 --047d7b33d54869c4a904e850d2c4
 Content-Type: text/plain; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 You could write a test case that tests that syntax errors are caught in
 ellipses.
 
 Robby
 
 
 On Wed, Oct 9, 2013 at 10:36 AM, Matthias Felleisen <matthias@ccs.neu.edu>w=
 rote:
 
 >
 > If I understood the patch correctly, y is any expression not just a free
 > variable. Otherwise I agree we can apply Robby's patch.
 >
 > BUT, I am not 100% sure how to write a test case for the actual problem
 > (that enough syntax information survives for Robby's syntax check).
 >
 >
 >
 > On Oct 9, 2013, at 11:33 AM, Stephen Bloch <bloch@adelphi.edu> wrote:
 >
 > >
 > > On Oct 9, 2013, at 11:19 AM, Matthias Felleisen <matthias@ccs.neu.edu>
 > wrote:
 > >
 > >>> But this is a backwards incompatible change (or probably one anyways)
 > since things that were legal before, eg
 > >>>
 > >>> (define (f x) (... y))
 > >>>
 > >>> would become syntax errors.
 > >>
 > >>
 > >> That's precisely how ... is used in templates so that would be a bad
 > patch.
 > >
 > > Is "=E2=80=A6" really used that often with unbound variables?  The temp=
 lates
 > that Gregor used in his MOOC used "=E2=80=A6" as a place-holder for a fun=
 ction
 > call, but IIRC all the arguments were valid expressions in the context of
 > the function body.
 > >
 > >
 > > Stephen Bloch
 > > sbloch@adelphi.edu
 > > GPG key at http://home.adelphi.edu/sbloch/sbloch.pubkey.asc
 > >
 >
 >
 
 --047d7b33d54869c4a904e850d2c4
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 <div dir=3D"ltr">You could write a test case that tests that syntax errors =
 are caught in ellipses.<div><br></div><div>Robby</div></div><div class=3D"g=
 mail_extra"><br><br><div class=3D"gmail_quote">On Wed, Oct 9, 2013 at 10:36=
  AM, Matthias Felleisen <span dir=3D"ltr">&lt;<a href=3D"mailto:matthias@cc=
 s.neu.edu" target=3D"_blank">matthias@ccs.neu.edu</a>&gt;</span> wrote:<br>
 <blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1p=
 x #ccc solid;padding-left:1ex"><br>
 If I understood the patch correctly, y is any expression not just a free va=
 riable. Otherwise I agree we can apply Robby&#39;s patch.<br>
 <br>
 BUT, I am not 100% sure how to write a test case for the actual problem (th=
 at enough syntax information survives for Robby&#39;s syntax check).<br>
 <div class=3D"HOEnZb"><div class=3D"h5"><br>
 <br>
 <br>
 On Oct 9, 2013, at 11:33 AM, Stephen Bloch &lt;<a href=3D"mailto:bloch@adel=
 phi.edu">bloch@adelphi.edu</a>&gt; wrote:<br>
 <br>
 &gt;<br>
 &gt; On Oct 9, 2013, at 11:19 AM, Matthias Felleisen &lt;<a href=3D"mailto:=
 matthias@ccs.neu.edu">matthias@ccs.neu.edu</a>&gt; wrote:<br>
 &gt;<br>
 &gt;&gt;&gt; But this is a backwards incompatible change (or probably one a=
 nyways) since things that were legal before, eg<br>
 &gt;&gt;&gt;<br>
 &gt;&gt;&gt; (define (f x) (... y))<br>
 &gt;&gt;&gt;<br>
 &gt;&gt;&gt; would become syntax errors.<br>
 &gt;&gt;<br>
 &gt;&gt;<br>
 &gt;&gt; That&#39;s precisely how ... is used in templates so that would be=
  a bad patch.<br>
 &gt;<br>
 &gt; Is &quot;=E2=80=A6&quot; really used that often with unbound variables=
 ? =C2=A0The templates that Gregor used in his MOOC used &quot;=E2=80=A6&quo=
 t; as a place-holder for a function call, but IIRC all the arguments were v=
 alid expressions in the context of the function body.<br>
 
 &gt;<br>
 &gt;<br>
 &gt; Stephen Bloch<br>
 &gt; <a href=3D"mailto:sbloch@adelphi.edu">sbloch@adelphi.edu</a><br>
 &gt; GPG key at <a href=3D"http://home.adelphi.edu/sbloch/sbloch.pubkey.asc=
 " target=3D"_blank">http://home.adelphi.edu/sbloch/sbloch.pubkey.asc</a><br=
 >
 &gt;<br>
 <br>
 </div></div></blockquote></div><br></div>
 
 --047d7b33d54869c4a904e850d2c4--
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: Stephen Bloch <bloch@adelphi.edu>, bugs <bugs@racket-lang.org>,
        nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/14085: check-syntax fails to work properly on templates
Date: Wed, 9 Oct 2013 15:13:46 -0400

 But that's not the bug that I reported. 
 
 
 
 
 On Oct 9, 2013, at 11:48 AM, Robby Findler <robby@eecs.northwestern.edu> wrote:
 
 > You could write a test case that tests that syntax errors are caught in ellipses.
 > 
 > Robby
 > 
 > 
 > On Wed, Oct 9, 2013 at 10:36 AM, Matthias Felleisen <matthias@ccs.neu.edu> wrote:
 > 
 > If I understood the patch correctly, y is any expression not just a free variable. Otherwise I agree we can apply Robby's patch.
 > 
 > BUT, I am not 100% sure how to write a test case for the actual problem (that enough syntax information survives for Robby's syntax check).
 > 
 > 
 > 
 > On Oct 9, 2013, at 11:33 AM, Stephen Bloch <bloch@adelphi.edu> wrote:
 > 
 > >
 > > On Oct 9, 2013, at 11:19 AM, Matthias Felleisen <matthias@ccs.neu.edu> wrote:
 > >
 > >>> But this is a backwards incompatible change (or probably one anyways) since things that were legal before, eg
 > >>>
 > >>> (define (f x) (... y))
 > >>>
 > >>> would become syntax errors.
 > >>
 > >>
 > >> That's precisely how ... is used in templates so that would be a bad patch.
 > >
 > > Is "�" really used that often with unbound variables?  The templates that Gregor used in his MOOC used "�" as a place-holder for a function call, but IIRC all the arguments were valid expressions in the context of the function body.
 > >
 > >
 > > Stephen Bloch
 > > sbloch@adelphi.edu
 > > GPG key at http://home.adelphi.edu/sbloch/sbloch.pubkey.asc
 > >
 > 
 > 
 
 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: Robby Findler <robby@eecs.northwestern.edu>,
        Stephen Bloch <bloch@adelphi.edu>, bugs <bugs@racket-lang.org>,
        nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/14085: check-syntax fails to work properly on templates
Date: Wed, 9 Oct 2013 14:25:36 -0500

 --089e0158a92e85978004e853d9e2
 Content-Type: text/plain; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 I believe that in situations like this where the bug report is pretty
 directly a problem with a specific macro that it makes send to test that
 macro.
 
 It could also make sense to have an "integration" test for check syntax
 here but I don't see as much value in that.
 
 Your response, however, applied to all CS and DrRacket PRs would lead to a
 test suite for drr that is far too big. Already drr's tests are the
 sequential bottleneck for drdr.
 
 Robby
 
 On Wednesday, October 9, 2013, Matthias Felleisen wrote:
 
 >
 > But that's not the bug that I reported.
 >
 >
 >
 >
 > On Oct 9, 2013, at 11:48 AM, Robby Findler <robby@eecs.northwestern.edu<j=
 avascript:;>>
 > wrote:
 >
 > > You could write a test case that tests that syntax errors are caught in
 > ellipses.
 > >
 > > Robby
 > >
 > >
 > > On Wed, Oct 9, 2013 at 10:36 AM, Matthias Felleisen <
 > matthias@ccs.neu.edu <javascript:;>> wrote:
 > >
 > > If I understood the patch correctly, y is any expression not just a fre=
 e
 > variable. Otherwise I agree we can apply Robby's patch.
 > >
 > > BUT, I am not 100% sure how to write a test case for the actual problem
 > (that enough syntax information survives for Robby's syntax check).
 > >
 > >
 > >
 > > On Oct 9, 2013, at 11:33 AM, Stephen Bloch <bloch@adelphi.edu<javascrip=
 t:;>>
 > wrote:
 > >
 > > >
 > > > On Oct 9, 2013, at 11:19 AM, Matthias Felleisen <matthias@ccs.neu.edu=
 <javascript:;>>
 > wrote:
 > > >
 > > >>> But this is a backwards incompatible change (or probably one
 > anyways) since things that were legal before, eg
 > > >>>
 > > >>> (define (f x) (... y))
 > > >>>
 > > >>> would become syntax errors.
 > > >>
 > > >>
 > > >> That's precisely how ... is used in templates so that would be a bad
 > patch.
 > > >
 > > > Is "=E2=80=A6" really used that often with unbound variables?  The te=
 mplates
 > that Gregor used in his MOOC used "=E2=80=A6" as a place-holder for a fun=
 ction
 > call, but IIRC all the arguments were valid expressions in the context of
 > the function body.
 > > >
 > > >
 > > > Stephen Bloch
 > > > sbloch@adelphi.edu <javascript:;>
 > > > GPG key at http://home.adelphi.edu/sbloch/sbloch.pubkey.asc
 > > >
 > >
 > >
 >
 >
 
 --089e0158a92e85978004e853d9e2
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 I believe that in situations like this where the bug report is pretty direc=
 tly a problem with a specific macro that it makes send to test that macro.=
 =C2=A0<div><br></div><div>It could also make sense to have an &quot;integra=
 tion&quot; test for check syntax here but I don&#39;t see as much value in =
 that.=C2=A0</div>
 <div><br></div><div>Your response, however, applied=C2=A0<span></span>to al=
 l CS and DrRacket PRs would lead to a test suite for drr that is far too bi=
 g. Already drr&#39;s tests are the sequential bottleneck for drdr.=C2=A0</d=
 iv><div>
 <br></div><div>Robby<br><br>On Wednesday, October 9, 2013, Matthias Felleis=
 en  wrote:<br><blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;=
 border-left:1px #ccc solid;padding-left:1ex"><br>
 But that&#39;s not the bug that I reported.<br>
 <br>
 <br>
 <br>
 <br>
 On Oct 9, 2013, at 11:48 AM, Robby Findler &lt;<a href=3D"javascript:;" onc=
 lick=3D"_e(event, &#39;cvml&#39;, &#39;robby@eecs.northwestern.edu&#39;)">r=
 obby@eecs.northwestern.edu</a>&gt; wrote:<br>
 <br>
 &gt; You could write a test case that tests that syntax errors are caught i=
 n ellipses.<br>
 &gt;<br>
 &gt; Robby<br>
 &gt;<br>
 &gt;<br>
 &gt; On Wed, Oct 9, 2013 at 10:36 AM, Matthias Felleisen &lt;<a href=3D"jav=
 ascript:;" onclick=3D"_e(event, &#39;cvml&#39;, &#39;matthias@ccs.neu.edu&#=
 39;)">matthias@ccs.neu.edu</a>&gt; wrote:<br>
 &gt;<br>
 &gt; If I understood the patch correctly, y is any expression not just a fr=
 ee variable. Otherwise I agree we can apply Robby&#39;s patch.<br>
 &gt;<br>
 &gt; BUT, I am not 100% sure how to write a test case for the actual proble=
 m (that enough syntax information survives for Robby&#39;s syntax check).<b=
 r>
 &gt;<br>
 &gt;<br>
 &gt;<br>
 &gt; On Oct 9, 2013, at 11:33 AM, Stephen Bloch &lt;<a href=3D"javascript:;=
 " onclick=3D"_e(event, &#39;cvml&#39;, &#39;bloch@adelphi.edu&#39;)">bloch@=
 adelphi.edu</a>&gt; wrote:<br>
 &gt;<br>
 &gt; &gt;<br>
 &gt; &gt; On Oct 9, 2013, at 11:19 AM, Matthias Felleisen &lt;<a href=3D"ja=
 vascript:;" onclick=3D"_e(event, &#39;cvml&#39;, &#39;matthias@ccs.neu.edu&=
 #39;)">matthias@ccs.neu.edu</a>&gt; wrote:<br>
 &gt; &gt;<br>
 &gt; &gt;&gt;&gt; But this is a backwards incompatible change (or probably =
 one anyways) since things that were legal before, eg<br>
 &gt; &gt;&gt;&gt;<br>
 &gt; &gt;&gt;&gt; (define (f x) (... y))<br>
 &gt; &gt;&gt;&gt;<br>
 &gt; &gt;&gt;&gt; would become syntax errors.<br>
 &gt; &gt;&gt;<br>
 &gt; &gt;&gt;<br>
 &gt; &gt;&gt; That&#39;s precisely how ... is used in templates so that wou=
 ld be a bad patch.<br>
 &gt; &gt;<br>
 &gt; &gt; Is &quot;=E2=80=A6&quot; really used that often with unbound vari=
 ables? =C2=A0The templates that Gregor used in his MOOC used &quot;=E2=80=
 =A6&quot; as a place-holder for a function call, but IIRC all the arguments=
  were valid expressions in the context of the function body.<br>
 
 &gt; &gt;<br>
 &gt; &gt;<br>
 &gt; &gt; Stephen Bloch<br>
 &gt; &gt; <a href=3D"javascript:;" onclick=3D"_e(event, &#39;cvml&#39;, &#3=
 9;sbloch@adelphi.edu&#39;)">sbloch@adelphi.edu</a><br>
 &gt; &gt; GPG key at <a href=3D"http://home.adelphi.edu/sbloch/sbloch.pubke=
 y.asc" target=3D"_blank">http://home.adelphi.edu/sbloch/sbloch.pubkey.asc</=
 a><br>
 &gt; &gt;<br>
 &gt;<br>
 &gt;<br>
 <br>
 </blockquote></div>
 
 --089e0158a92e85978004e853d9e2--

State changed from "open" to "analyzed" by matthias at Wed, 16 Oct 2013 10:47:43 -0400
Reason>>> http://docs.racket-lang.org/tools/Check_Syntax.html?
q=check%20syntax#%28part._.Accessing_.Check_.Syntax_.Programmatically%29

