From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Fri Jun  8 15:47:05 2012
Received: from mail-yx0-f172.google.com (mail-yx0-f172.google.com [209.85.213.172])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id q58Jl2dw024031
	for <bugs@bugs.plt-scheme.org>; Fri, 8 Jun 2012 15:47:02 -0400
Message-Id: <201206081947.q58Jl0YP024017@champlain.ccs.neu.edu>
Date: Fri, 8 Jun 2012 15:47:00 -0400
From: kos@informatik.uni-marburg.de
To: bugs@racket-lang.org
Subject: Failed test in HTDP languages clears bindings but it shouldn't

>Number:         12833
>Category:       htdp
>Synopsis:       Failed test in HTDP languages clears bindings but it shouldn't
>Class:          change-request
>Responsible:    matthias
>Severity:       non-critical
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Fri Jun 08 15:48:01 -0400 2012
>Closed-Date:    Wed Jul 25 10:49:11 -0400 2012
>Last-Modified:  Wed Jul 25 10:49:11 -0400 2012
>Originator:     Klaus Ostermann
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.2.1
>Environment:
windows "Windows NT 6.1 (Build 7601) Service Pack 1" (win32\x86_64\3m) (get-display-depth) = 32
Human Language: german
(current-memory-use) 353785232
Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()


Collections:
("C:\\Users\\klaus\\AppData\\Roaming\\Racket\\5.2.1\\collects"
 (non-existent-path))
("C:\\Program Files\\Racket\\collects"
 ("2htdp" "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "data" "datalog" "db" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "help" "hierlist" "htdp" "html" "icons" "images" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "picturing-programs" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "redex" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tex2page" "texpict" "trace" "typed" "typed-racket" "typed-scheme" "unstable" "version" "web-server" "wxme" "xml" "xrepl"))

Computer Language: (("Lehrsprachen" "How to Design Programs" "Zwischenstufe mit lambda") (#(#t constructor repeating-decimal #f #t none) #f ((lib "image.ss" "teachpack" "2htdp") (lib "universe.ss" "teachpack" "2htdp"))))
>Description:
When an error occurs during a test in the HTDP languages, all variable bindings are cleared.

Example: After executing this program, the binding for x is gone.

(define x 1)
(check-expect (/ 1 0) true)

This makes debugging harder than necessary, since one has to comment out all failing test case and restart before one can make use of the REPL again. 

My suggestion is to change the behavior of check-expect et al in such a way that execution is continued and all bindings are retained.
>How-To-Repeat:
>Fix:
>Audit-Trail:
From: John Clements <aoeuclements@brinckerhoff.org>
To: kos@informatik.uni-marburg.de, bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12833: Failed test in HTDP languages clears bindings but it shouldn't
Date: Fri, 8 Jun 2012 16:51:56 -0700

 On Jun 8, 2012, at 12:48 PM, kos@informatik.uni-marburg.de wrote:
 
 > A new problem report is waiting at
 >  http://bugs.racket-lang.org/query/?cmd=view&pr=12833
 > 
 > Reported by Klaus Ostermann for release: 5.2.1
 > 
 > *** Description:
 > When an error occurs during a test in the HTDP languages, all variable bindings are cleared.
 > 
 > Example: After executing this program, the binding for x is gone.
 > 
 > (define x 1)
 > (check-expect (/ 1 0) true)
 > 
 > This makes debugging harder than necessary, since one has to comment out all failing test case and restart before one can make use of the REPL again. 
 > 
 > My suggestion is to change the behavior of check-expect et al in such a way that execution is continued and all bindings are retained.
 
 To clarify: the underlying issue here is not that bindings are cleared; it's that test case failures halt execution just as errors outside of test cases. It sounds like you would like to continue running test cases even after an error occurs. 
 
 My first guess is that the existing behavior is a result of a desire to trigger DrRacket's helpful error-signalling-and-locating mechanisms; the location of the offending division (in your example) is highlighted in pink. 
 
 Would it be possible to do the highlighting and continue running? Maybe--I dunno.
 
 John
 
 
From: Stephen Bloch <bloch@adelphi.edu>
To: John Clements <aoeuclements@brinckerhoff.org>
Cc: kos@informatik.uni-marburg.de, bugs@racket-lang.org,
        nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12833: Failed test in HTDP languages clears bindings but it shouldn't
Date: Fri, 8 Jun 2012 20:34:10 -0400

 On Jun 8, 2012, at 7:51 PM, John Clements wrote:
 
 > To clarify: the underlying issue here is not that bindings are cleared; it's that test case failures halt execution just as errors outside of test cases. It sounds like you would like to continue running test cases even after an error occurs.
 
 One of the things I like best about check-expect and friends (as compared with, say, JUnit) is that when a check-expect test case "fails" (in the sense of producing a wrong answer), it goes on and runs the subsequent test cases anyway and reports their results.  It's unfortunate that the same can't be said when a check-expect test case "fails" by crashing.  In other words, we could justify the requested behavior on grounds of consistency and reporting as much testing information as possible to the user.
 
 > My first guess is that the existing behavior is a result of a desire to trigger DrRacket's helpful error-signalling-and-locating mechanisms; the location of the offending division (in your example) is highlighted in pink. 
 > 
 > Would it be possible to do the highlighting and continue running? Maybe--I dunno.
 
 Interesting question.  And what happens when several different test cases crash?  Do you highlight the union of the offending areas?
 
 Or should we just capture the source locations of each of the crashes (sans stack dumps), and then report them as part of the corresponding test-case-failure message?
 
 
 Stephen Bloch
 sbloch@adelphi.edu
 
 


State changed from "open" to "closed" by matthias at Wed, 25 Jul 2012 10:49:11 -0400
Reason>>> This is the desired behavior. 

