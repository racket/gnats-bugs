From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Fri Jul 13 16:25:28 2012
Received: from mail-vc0-f172.google.com (mail-vc0-f172.google.com [209.85.220.172])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id q6DKPOSh023034
	for <bugs@bugs.plt-scheme.org>; Fri, 13 Jul 2012 16:25:24 -0400
Message-Id: <201207132025.q6DKPLd3023029@champlain.ccs.neu.edu>
Date: Fri, 13 Jul 2012 16:25:21 -0400
From: jay@racket-lang.org
To: bugs@racket-lang.org
Subject: setup/unpack contract violations

>Number:         12904
>Category:       setup-plt
>Synopsis:       setup/unpack contract violations
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Fri Jul 13 16:28:01 -0400 2012
>Closed-Date:    Fri Aug 10 10:00:36 -0400 2012
>Last-Modified:  Fri Aug 10 10:00:36 -0400 2012
>Originator:     Jay McCarthy
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.3.0.14--2012-07-12(e71cbbe7/d)
>Environment:
unix "Linux lightning 3.0.0-22-generic #36-Ubuntu SMP Tue Jun 12 17:37:42 UTC 2012 x86_64 x86_64 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 232232848
Links: (links) = ("org-mode"); (links #:user? #f) = (); (links #:root? #t) = (#<path:/home/jay/Dev/scm/github.jeapostrophe/get-bonus> #<path:/home/jay/Dev/scm/github.jeapostrophe/galaxy>); (links #:user? #f #:root? #t) = ()


Collections:
("/home/jay/.racket/5.3.0.14/collects"
 ("info-domain"))
("/home/jay/Dev/scm/plt/collects"
 ("at-exp" "make" "algol60" "plot" "typed-scheme" "syntax-color" "typed-racket" "stepper" "hierlist" "errortrace" "schemeunit" "icons" "tests" "version" "embedded-gui" "unstable" "slatex" "racunit" "texpict" "profile" "lang" "mred" "planet" "info-domain" "scheme" "redex" "wxme" "macro-debugger" "sgl" "test-box-recovery" "preprocessor" "scriblib" "repo-time-stamp" "r6rs" "picturing-programs" ".gitignore" "html" "scribblings" "syntax" "readline" "browser" "framework" "srpersist" "swindle" "net" "plai" "openssl" "htdp" "rackunit" "combinator-parser" "games" "file" "mzscheme" "honu" "racklog" "2htdp" "graphics" "mysterx" "images" "frtime" "trace" "dynext" "defaults" "datalog" "deinprogramm" "r5rs" "teachpack" "handin-server" "test-engine" "waterworld" "mzlib" "mzcom" "xml" "scribble" "raco" "guibuilder" "ffi" "rktunit" "repos-time-stamp" "drracket" "mrlib" "rico" "eopl" "web-server" "lazy" "racket" "meta" "config" "drscheme" "parser-tools" "mz" "launcher" "reader" "sirmail" "hel!
 p" "compiler" "db" "string-constants" "data" "xrepl" "rnrs" "setup" "s-exp" "schelog" "gui-debugger" "json" "tex2page" "slideshow" "srfi" "afm" "typed" "handin-client"))

Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((main) (test))))
>Description:
See the comments in the following file.
>How-To-Repeat:
#lang racket/base
(module+ main
  (require racket/file
           setup/unpack
           setup/pack
           rackunit)

  ;; Create a directory structure
  (define tmp-src-dir
    (make-temporary-file "example~a" 'directory))

  (write-to-file 0 (build-path tmp-src-dir "foo"))
  (write-to-file 1 (build-path tmp-src-dir "bar"))
  (make-directory (build-path tmp-src-dir "zog"))
  (write-to-file 2 (build-path tmp-src-dir "zog" "zip"))

  ;; The structure is...
  ;; root
  ;;  + foo => 0
  ;;  + bar => 1
  ;;  - zog
  ;;    + zip => 2

  ;; Turn it into a .plt archive
  (define tmp-plt
    (make-temporary-file "example~a.plt"))

  (pack-plt tmp-plt "example" (list tmp-src-dir)
            #:as-paths (list "."))

  ;; Now unpack it
  (define tmp-dest-dir
    (make-temporary-file "example~a" 'directory))

  ;; This errors because #f is given to build-path, because target-dir
  ;; is bound to #f at some point, because of the (values #f 'same) is
  ;; the result when v is just '(same) to shuffle-path
  (check-not-exn
   (λ ()
     (parameterize ([current-directory tmp-dest-dir])
       (unpack tmp-plt))))

  ;; Try to unpack it a different way
  (fold-plt-archive
   tmp-plt
   void
   void
   (λ (dir _)
     ;; Each of these fails because the values are actually `(same
     ;; ,path), despite the contract claiming to give path-string?
     ;; values (same with below)
     ;;
     ;; The code calls expr->path-descriptor which returns this and
     ;; another list'd value
     ;;
     ;; The only use of fold-plt-archive in the tree, planet/util,
     ;; works around this by just pulling out the path component or
     ;; erroring.
     (check-pred path-string? dir))
   (λ (file content-p _1 [_2 #f])
     (check-pred path-string? file))
   #f))
>Fix:
>Audit-Trail:
State changed from "open" to "closed" by mflatt@racket-lang.org at Fri, 10 Aug 2012 10:00:36 -0400
Reason>>> A commit by mflatt@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/9d6cb8e50e
