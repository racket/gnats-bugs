From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Thu May  1 09:28:37 2008
Received: from rv-out-0506.google.com (rv-out-0708.google.com [209.85.198.248])
	by champlain.ccs.neu.edu (8.13.8/8.13.7) with ESMTP id m41DSb7P023758
	for <bugs@bugs.plt-scheme.org>; Thu, 1 May 2008 09:28:37 -0400
Message-Id: <200805011328.m41DSX6t023752@champlain.ccs.neu.edu>
Date: Thu, 1 May 2008 09:28:33 -0400
From: plt-scheme@blinker.net
To: bugs@plt-scheme.org
Subject: bitmap% should provide ports based load and save operations

>Number:         9335
>Category:       mred
>Synopsis:       bitmap% should provide ports based load and save operations
>Class:          change-request
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Thu May 01 09:30:01 -0400 2008
>Closed-Date:    Mon Jan 17 19:43:21 -0500 2011
>Last-Modified:  Mon Jan 17 19:43:21 -0500 2011
>Originator:     Björn Günzel
>Organization:
plt
>Submitter-Id:   unknown
>Release:        MrEd 372
>Environment:
Linux i686 / Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9b5) Gecko/2008041514 Firefox/3.0b5
>Description:
Since the bitmap% class in the MrEd Graphical Toolbox does not seem to support ports based load and save methods, it is hard to use them for example for a web server that renders images on the fly. 

Since the save-file and load-file methods of bitmap% probably use ports internally, it would probably be easy to expose ports based equivalents. 

My apologies if I misinterpret the situation, I am only learning MzScheme and have been trying to determine wether MrEd could be suitable to my application. 
>How-To-Repeat:
Nothing to reproduce since it is a change request
>Fix:
>Audit-Trail:
From: Matthew Flatt <mflatt@cs.utah.edu>
To: plt-scheme@blinker.net, bugs@plt-scheme.org
Cc: nobody@plt-scheme.org, eli@plt-scheme.org, matthias@plt-scheme.org,
        sk@plt-scheme.org, robby@plt-scheme.org, clements@plt-scheme.org,
        jay@plt-scheme.org, meunier@plt-scheme.org, sowens@plt-scheme.org,
        kathyg@plt-scheme.org, jacobm@plt-scheme.org, cce@plt-scheme.org,
        samth@plt-scheme.org, ryanc@plt-scheme.org
Subject: Re: [plt-bug] all/9335: bitmap% should provide ports based load and save operations
Date: Thu, 1 May 2008 09:36:34 -0600

 At Thu, 1 May 2008 09:30:01 -0400, plt-scheme@blinker.net wrote:
 > Since the bitmap% class in the MrEd Graphical Toolbox does not seem to support 
 > ports based load and save methods, it is hard to use them for example for a 
 > web server that renders images on the fly. 
 > 
 > Since the save-file and load-file methods of bitmap% probably use ports 
 > internally, it would probably be easy to expose ports based equivalents. 
 
 They don't, unfortunately; different file formats use different
 libraries, and it's tedious to make them all work with ports.
 
 So that's why we've never gotten around to this, though we'd all agree
 that a port-based interface would be much better.
 
 Matthew
 
From: Bjoern Guenzel <guenzel@blinker.net>
To: bugs@plt-scheme.org, plt-scheme@blinker.net
Cc: 
Subject: Re: mred/9335: bitmap% should provide ports based load and save operations
Date: Fri, 02 May 2008 10:55:59 +0200

 >  At Thu, 1 May 2008 09:30:01 -0400, plt-scheme@blinker.net wrote:
 >  > Since the bitmap% class in the MrEd Graphical Toolbox does not seem to support 
 >  > ports based load and save methods, it is hard to use them for example for a 
 >  > web server that renders images on the fly. 
 >  > 
 >  > Since the save-file and load-file methods of bitmap% probably use ports 
 >  > internally, it would probably be easy to expose ports based equivalents. 
 >  
 >  They don't, unfortunately; different file formats use different
 >  libraries, and it's tedious to make them all work with ports.
 >  
 >  So that's why we've never gotten around to this, though we'd all agree
 >  that a port-based interface would be much better.
 
 I see - so the libraries themselves are file based? What about byte
 arrays, would that be a possibility?
 
 
 Bjoern


State changed from "open" to "closed" by eli at Mon, 17 Jan 2011 19:43:21 -0500
Reason>>> closed as "obsolete" with respect to v5.0.99.6 and later;
either the bug is long-since fixed, the relevant code
doesn't exist anymore, the relevant platform hasn't been
supported recently, or a new bug report is needed if the
problem really isn't fixed and someone actually cares

