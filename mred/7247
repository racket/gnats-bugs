From apache@plt-scheme.org Sat Feb 19 14:52:44 2005
Received: from champlain.ccs.neu.edu (champlain.ccs.neu.edu [127.0.0.1])
	by champlain.ccs.neu.edu (8.12.10/8.12.10) with ESMTP id j1JJqinN007516
	for <bugs@plt-scheme.org>; Sat, 19 Feb 2005 14:52:44 -0500
Message-Id: <200502191952.j1JJqiCC007514@champlain.ccs.neu.edu>
Date: Sat, 19 Feb 2005 14:52:44 -0500
From: robby@cs.uchicago.edu
To: bugs@plt-scheme.org
Subject: menu-item% or new, bad error reporting for duplicate init args

>Number:         7247
>Category:       mred
>Synopsis:       menu-item% or new, bad error reporting for duplicate init args
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Sat Feb 19 14:55:00 -0500 2005
>Last-Modified:  Mon Mar 14 17:13:59 -0500 2005
>Originator:     Robby Findler
>Organization:
plt
>Submitter-Id:   unknown
>Release:        299.31-cvs19feb2005
>Environment:
macosx "Darwin hualien.local 7.8.0 Darwin Kernel Version 7.8.0: Wed Dec 22 14:26:17 PST 2004; root:xnu/xnu-517.11.1.obj~1/RELEASE_PPC  Power Macintosh powerpc" (ppc-macosx) (get-display-depth) = 32
Docs Installed:
(#<path:/Users/robby/cvs/exp/plt/collects/doc/web-server> #<path:/Users/robby/cvs/exp/plt/collects/doc/tour> #<path:/Users/robby/cvs/exp/plt/collects/doc/tools> #<path:/Users/robby/cvs/exp/plt/collects/doc/tex2page> #<path:/Users/robby/cvs/exp/plt/collects/doc/teachpack> #<path:/Users/robby/cvs/exp/plt/collects/doc/t-y-scheme> #<path:/Users/robby/cvs/exp/plt/collects/doc/swindle> #<path:/Users/robby/cvs/exp/plt/collects/doc/srfi> #<path:/Users/robby/cvs/exp/plt/collects/doc/r5rs> #<path:/Users/robby/cvs/exp/plt/collects/doc/profj-intermediate> #<path:/Users/robby/cvs/exp/plt/collects/doc/profj-beginner> #<path:/Users/robby/cvs/exp/plt/collects/doc/profj-advanced> #<path:/Users/robby/cvs/exp/plt/collects/doc/plot> #<path:/Users/robby/cvs/exp/plt/collects/doc/mzscheme> #<path:/Users/robby/cvs/exp/plt/collects/doc/mzlib> #<path:/Users/robby/cvs/exp/plt/collects/doc/mzc> #<path:/Users/robby/cvs/exp/plt/collects/doc/mred> #<path:/Users/robby/cvs/exp/plt/collects/doc/misclib> #<path:/Users/robby/cvs/exp/plt/collects/doc/intermediate-lambda> #<path:/Users/robby/cvs/exp/plt/collects/doc/intermediate> #<path:/Users/robby/cvs/exp/plt/collects/doc/insidemz> #<path:/Users/robby/cvs/exp/plt/collects/doc/help> #<path:/Users/robby/cvs/exp/plt/collects/doc/framework> #<path:/Users/robby/cvs/exp/plt/collects/doc/foreign> #<path:/Users/robby/cvs/exp/plt/collects/doc/drscheme> #<path:/Users/robby/cvs/exp/plt/collects/doc/beginning-abbr> #<path:/Users/robby/cvs/exp/plt/collects/doc/beginning> #<path:/Users/robby/cvs/exp/plt/collects/doc/advanced>)
Collections:
((#<path:/Users/robby/Library/PLT Scheme/299.31/collects> "non-existent path") (#<path:/Users/robby/cvs/exp/plt/collects> (#<path:afm> #<path:algol60> #<path:browser> #<path:compiler> #<path:CVS> #<path:cvs-time-stamp> #<path:defaults> #<path:doc> #<path:dromedary> #<path:drscheme> #<path:dynext> #<path:embedded-gui> #<path:eopl> #<path:errortrace> #<path:ffi> #<path:finish-install> #<path:framework> #<path:frtime> #<path:games> #<path:graphics> #<path:guibuilder> #<path:handin-client> #<path:handin-server> #<path:help> #<path:hierlist> #<path:honu-module> #<path:htdp> #<path:html> #<path:icons> #<path:info-domain> #<path:lang> #<path:launcher> #<path:make> #<path:mrdemo> #<path:mred> #<path:mrflow> #<path:mrlib> #<path:mysterx> #<path:mzcom> #<path:mzlib> #<path:mzscheme> #<path:net> #<path:openssl> #<path:parser-tools> #<path:planet> #<path:plot> #<path:preprocessor> #<path:profj> #<path:profjBoxes> #<path:readline> #<path:reduction-semantics> #<path:setup> #<path:sgl> #<path:sirmail> #<path:skipper> #<path:slatex> #<path:slibinit> #<path:slideshow> #<path:srfi> #<path:srpersist> #<path:ssax> #<path:stepper> #<path:string-constants> #<path:swindle> #<path:syntax> #<path:syntax-color> #<path:test-suite> #<path:tests> #<path:tex2page> #<path:texpict> #<path:trace> #<path:version> #<path:waterworld> #<path:web-server> #<path:xelda> #<path:xml>)))
Human Language: english
Teachpack filenames: ()
Computer Language: (("Professional Languages" "(module ...)") (#6(#t write mixed-fraction-e #f #t debug) (default) #0()))
>Description:
>How-To-Repeat:
(new menu-item%
       (demand-callback void)
       (demand-callback void)
       (label "")
       (callback void)
       (parent (new menu%
                    (parent (new menu-bar% (parent (new frame% (label "")))))
                    (label ""))))

gives 

  instantiate: unused initialization arguments: (demand-callback #<primitive:void>) for instantiated class: menu-item%

but there's two problems there: 
1) it says "instantiate" not "new" and
2) the error is a duplicate argument
>Fix:
>Audit-Trail:
From: Matthew Flatt <mflatt@cs.utah.edu>
To: robby@cs.uchicago.edu, bugs@plt-scheme.org
Cc: matthias@ccs.neu.edu
Subject: Re: all/7247: menu-item% or new, bad error reporting for duplicate init args
Date: Sat, 19 Feb 2005 21:05:28 -0700

 At Sat, 19 Feb 2005 14:55:01 -0500, robby@cs.uchicago.edu wrote:
 > (new menu-item%
 >        (demand-callback void)
 >        (demand-callback void)
 >        (label "")
 >        (callback void)
 >        (parent (new menu%
 >                     (parent (new menu-bar% (parent (new frame% (label "")))))
 >                     (label ""))))
 > 
 > gives 
 > 
 >   instantiate: unused initialization arguments: (demand-callback 
 > #<primitive:void>) for instantiated class: menu-item%
 > 
 > but there's two problems there: 
 > 1) it says "instantiate" not "new" and
 > 2) the error is a duplicate argument
 
 This is a run-time error, so it's similar to the "missing superclass
 method" problem. We could pass a form name to the run-time support, but
 that feels wrong to me.
 
 As for (2), it's not necessarily an error to have duplicate arguments,
 at least not the way things are defined right now. See the next-to-last
 para of section 4.3.1 in the MzLib manual. Of course, I remain open to
 changing the class system at some point in the future.
 
 Matthew
 
From: Robby Findler <robby@cs.uchicago.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: bugs@plt-scheme.org, matthias@ccs.neu.edu
Subject: Re: all/7247: menu-item% or new, bad error reporting for duplicate init args
Date: Sat, 19 Feb 2005 22:26:48 -0600

 At Sat, 19 Feb 2005 21:05:28 -0700, Matthew Flatt wrote:
 > As for (2), it's not necessarily an error to have duplicate arguments,
 > at least not the way things are defined right now. See the next-to-last
 > para of section 4.3.1 in the MzLib manual. Of course, I remain open to
 > changing the class system at some point in the future.
 
 Ah, sorry.
 
 Do we actually use this feature? (I assume you see how this can easily
 be buggy code -- in fact, I ran across this message and took it at face
 value, but was quite confused and spent a while trying to figure out
 how I had misspelled demand-callback ...)
 
 Robby
From: Matthew Flatt <mflatt@cs.utah.edu>
To: Robby Findler <robby@cs.uchicago.edu>
Cc: bugs@plt-scheme.org, matthias@ccs.neu.edu
Subject: Re: all/7247: menu-item% or new, bad error reporting for duplicate init args
Date: Sat, 19 Feb 2005 21:31:14 -0700

 At Sat, 19 Feb 2005 22:26:48 -0600, Robby Findler wrote:
 > At Sat, 19 Feb 2005 21:05:28 -0700, Matthew Flatt wrote:
 > > As for (2), it's not necessarily an error to have duplicate arguments,
 > > at least not the way things are defined right now. See the next-to-last
 > > para of section 4.3.1 in the MzLib manual. Of course, I remain open to
 > > changing the class system at some point in the future.
 > 
 > Ah, sorry.
 > 
 > Do we actually use this feature?
 
 I hope not. It's more a corollary of how keyword handling is defined
 than a feature we actually want.
 
 Matthew
 
From: Robby Findler <robby@cs.uchicago.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: bugs@plt-scheme.org, matthias@ccs.neu.edu
Subject: Re: all/7247: menu-item% or new, bad error reporting for duplicate init args
Date: Sat, 19 Feb 2005 22:35:32 -0600

 At Sat, 19 Feb 2005 21:31:14 -0700, Matthew Flatt wrote:
 > At Sat, 19 Feb 2005 22:26:48 -0600, Robby Findler wrote:
 > > At Sat, 19 Feb 2005 21:05:28 -0700, Matthew Flatt wrote:
 > > > As for (2), it's not necessarily an error to have duplicate arguments,
 > > > at least not the way things are defined right now. See the next-to-last
 > > > para of section 4.3.1 in the MzLib manual. Of course, I remain open to
 > > > changing the class system at some point in the future.
 > > 
 > > Ah, sorry.
 > > 
 > > Do we actually use this feature?
 > 
 > I hope not. It's more a corollary of how keyword handling is defined
 > than a feature we actually want.
 
 Would it be possible to add a check into `new' and `super-new' (or
 perhaps instantiate) that made sure there weren't any duplicates before
 handing on the arguments?
 
 Robby
From: Matthew Flatt <mflatt@cs.utah.edu>
To: Robby Findler <robby@cs.uchicago.edu>
Cc: bugs@plt-scheme.org, matthias@ccs.neu.edu
Subject: Re: all/7247: menu-item% or new, bad error reporting for duplicate init args
Date: Sat, 19 Feb 2005 22:07:09 -0700

 At Sat, 19 Feb 2005 22:35:32 -0600, Robby Findler wrote:
 > Would it be possible to add a check into `new' and `super-new' (or
 > perhaps instantiate) that made sure there weren't any duplicates before
 > handing on the arguments?
 
 Yes, but that's an O(n^2) check, which is probably not a good thing to
 have for every object instantiation.
 
 Matthew
 
From: Robby Findler <robby@cs.uchicago.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: bugs@plt-scheme.org, matthias@ccs.neu.edu
Subject: Re: all/7247: menu-item% or new, bad error reporting for duplicate init args
Date: Sat, 19 Feb 2005 23:22:54 -0600

 At Sat, 19 Feb 2005 22:07:09 -0700, Matthew Flatt wrote:
 > At Sat, 19 Feb 2005 22:35:32 -0600, Robby Findler wrote:
 > > Would it be possible to add a check into `new' and `super-new' (or
 > > perhaps instantiate) that made sure there weren't any duplicates before
 > > handing on the arguments?
 > 
 > Yes, but that's an O(n^2) check, which is probably not a good thing to
 > have for every object instantiation.
 
 Isn't it O(n * hash-table-lookup-time(n))? And I would certainly be
 happy with the check happening at compile time. I'm not sure how
 deferring it to runtime would help, but I'm not sure what the primitive
 object instantiation is doing, either.
 
 Robby
From: Robby Findler <robby@cs.uchicago.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: bugs@plt-scheme.org, matthias@ccs.neu.edu
Subject: Re: all/7247: menu-item% or new, bad error reporting for duplicate init args
Date: Sat, 19 Feb 2005 23:23:26 -0600

 At Sat, 19 Feb 2005 22:07:09 -0700, Matthew Flatt wrote:
 > At Sat, 19 Feb 2005 22:35:32 -0600, Robby Findler wrote:
 > > Would it be possible to add a check into `new' and `super-new' (or
 > > perhaps instantiate) that made sure there weren't any duplicates before
 > > handing on the arguments?
 > 
 > Yes, but that's an O(n^2) check, which is probably not a good thing to
 > have for every object instantiation.
 
 PS: isn't there a built-in helper function that would be used here? The
 one that gets used for checking let and lambda don't have duplicate
 variable names?
 
 Robby
From: Matthew Flatt <mflatt@cs.utah.edu>
To: Robby Findler <robby@cs.uchicago.edu>
Cc: bugs@plt-scheme.org, matthias@ccs.neu.edu
Subject: Re: all/7247: menu-item% or new, bad error reporting for duplicate init args
Date: Sun, 20 Feb 2005 06:25:12 -0700

 At Sat, 19 Feb 2005 23:22:54 -0600, Robby Findler wrote:
 > At Sat, 19 Feb 2005 22:07:09 -0700, Matthew Flatt wrote:
 > > At Sat, 19 Feb 2005 22:35:32 -0600, Robby Findler wrote:
 > > > Would it be possible to add a check into `new' and `super-new' (or
 > > > perhaps instantiate) that made sure there weren't any duplicates before
 > > > handing on the arguments?
 > > 
 > > Yes, but that's an O(n^2) check, which is probably not a good thing to
 > > have for every object instantiation.
 > 
 > Isn't it O(n * hash-table-lookup-time(n))?
 
 Good point. (Allocating a hash table is even worse for small n, but it
 could be balanced.)
 
 > And I would certainly be happy with the check happening at compile
 > time. I'm not sure how deferring it to runtime would help, 
 
 If you provide a keyword `x', if the immediate class doesn't consume
 `x', and if the immediate class also provides `x' via `super-new', then
 you have two `x's that wouldn't be caught by a syntactic check.
 
 I guess I misunderstood your intent, but the syntactic check seems a
 little too arbitrary to me, since it doesn't disallow duplicates in
 general.
 
 Matthew
 
From: Robby Findler <robby@cs.uchicago.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: bugs@plt-scheme.org, matthias@ccs.neu.edu
Subject: Re: all/7247: menu-item% or new, bad error reporting for duplicate init args
Date: Sun, 20 Feb 2005 07:27:42 -0600

 At Sun, 20 Feb 2005 06:25:12 -0700, Matthew Flatt wrote:
 > If you provide a keyword `x', if the immediate class doesn't consume
 > `x', and if the immediate class also provides `x' via `super-new', then
 > you have two `x's that wouldn't be caught by a syntactic check.
 > 
 > I guess I misunderstood your intent, but the syntactic check seems a
 > little too arbitrary to me, since it doesn't disallow duplicates in
 > general.
 
 Ah, right. Still, you know that when you call super-new in this
 example, only `x' could possibly be duplicated, which seems like it
 could help.
 
 But I'm starting to think it doesn't matter, now.
 
 Robby

Responsible changed from "nobody" to "mflatt" by eli at Mon, 14 Mar 2005 17:13:59 -0500
Reason>>> mred

