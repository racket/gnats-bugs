From nobody@cs.rice.edu  Tue May 11 16:59:21 1999
Received: from web.cs.rice.edu (web.cs.rice.edu [128.42.1.163])
	by cs.rice.edu (8.9.0/8.9.0) with ESMTP id QAA26913
	for <plt-gnats@cs.rice.edu>; Tue, 11 May 1999 16:59:21 -0500 (CDT)
Message-Id: <199905112159.QAA20184@web.cs.rice.edu>
Date: Tue, 11 May 1999 16:59:20 -0500 (CDT)
From: robby@cs.rice.edu
Reply-To: robby@cs.rice.edu
To: plt-gnats@cs.rice.edu
Subject: problems with embedded pasteboard%s 

>Number:         995
>Category:       mred
>Synopsis:       problems with embedded pasteboard%s
>Class:          sw-bug
>Responsible:    steck
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Tue May 11 18:00:17 -0400 1999
>Last-Modified:  Mon May 05 14:50:48 -0400 2008
>Originator:     Robert Bruce Findler
>Organization:
titan
>Submitter-Id:   unknown
>Release:        100alpha2
>Environment:
unknown
>Description:
When first created (as below) the pasteboards do not draw themselves
correctly. It seems that several clicks in the outermost pasteboard
eventually makes them draw.

Also, the click->selection mechanism is not very good. In order to select
the innermost pasteboard, I must click many times on the innermost one
(the selection moves in and in until it gets there (usually -- sometimes
it just gets stuck and nothing is selected))

I propose that the selected pasteboard be the innermost visible one that
overlaps with the (x,y) position.
>How-To-Repeat:
(define frame (make-object frame% "frame"))

(define pb (make-object pasteboard%))
(define editor-canvas (make-object editor-canvas% frame pb))

(let loop ([n 10]
	   [pb pb])
  (unless (zero? n)
    (let ([new-pb (make-object pasteboard%)])
      (send pb insert (make-object editor-snip% new-pb))
      (loop (- n 1)
	    new-pb))))

(send frame show #t)
>Fix:
>Audit-Trail:
State-Changed-From-To: open-closed
State-Changed-By: mflatt
State-Changed-When: Tue May 11 18:03:14 1999
State-Changed-Why:
The update bug is fixed. Update plt/src/mred/wxme/wx_mpbrd.cxx

The default click handling is designed to permit dragging
focus-handling snips by clicking anywhere on them. Double-clicking
moves the keyboard and mouse focus to the snip. So tripple-clicking
moves the selection in one level in the above example. I wasn't able
to make the focus get stuck, but triple-click --- with specific timing
requirements on the first two clicks --- could certainly be confusing.

The default works well for many programs, and I'd prefer not to change
the default for the sake of existing programs. For other programs,
it's fairly easy to override pasteboard%'s `on-event' to implement a
different policy. (All the hard work is in `on-default-event'; the
`on-event' part only decides whether the mouse event should go to a
snip.)

>Unformatted:
