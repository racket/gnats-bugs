From nobody@cs.rice.edu  Tue Feb 23 09:09:01 1999
Received: from web.cs.rice.edu (web.cs.rice.edu [128.42.1.163])
	by cs.rice.edu (8.9.0/8.9.0) with ESMTP id JAA06963
	for <plt-gnats@cs.rice.edu>; Tue, 23 Feb 1999 09:09:01 -0600 (CST)
Message-Id: <199902231509.JAA13712@web.cs.rice.edu>
Date: Tue, 23 Feb 1999 09:09:00 -0600 (CST)
From: robby@cs.rice.edu
Reply-To: robby@cs.rice.edu
To: plt-gnats@cs.rice.edu
Subject: drawing in canvas with xor-pen and xor-brush broken 

>Number:         895
>Category:       mred
>Synopsis:       drawing in canvas with xor-pen and xor-brush broken
>Confidential:   no
>Severity:       serious
>Priority:       medium
>Responsible:    mflatt
>State:          closed
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Tue Feb 23 10:15:03 -0500 1999
>Last-Modified:  Sun Mar 28 02:39:09 -0500 2004
>Originator:     Robert Bruce Findler
>Release:        100/29
>Organization:
titan
>Environment:
unknown
>Description:
When using an xor-pen and an xor-brush to draw over a black retangle,
the border of the rectangle is left behind.

When using an xor-pen and a solid brush to draw over the same black
retangle, the edge is erased.

So, somehow the brush is affecting the drawing of the border of the
shape.

My guess is that the xor is being applied twice to the border of the
rectangle. Once by the pen and once by the brush.
>How-To-Repeat:
(define solid-pen (make-object pen% "BLACK" 1 'solid))
(define solid-brush (make-object brush% "BLACK" 'solid))
(define xor-pen (make-object pen% "BLACK" 1 'xor))
(define xor-brush (make-object brush% "BLACK" 'xor))

(define frame (make-object frame% "frame"))
(make-object (class canvas% ()
	       (inherit get-dc)
	       (override
		[on-paint
		 (lambda ()
		   (let ([dc (get-dc)])
		     (send dc set-pen solid-pen)
		     (send dc set-brush solid-brush)
		     (send dc draw-rectangle 10 10 80 80)

		     (send dc set-pen xor-pen)
		     (send dc set-brush xor-brush)
		     (send dc draw-rectangle 10 10 80 80)))])
	       (inherit min-width min-height)
	       (sequence
		 (super-init frame)
		 (min-width 100)
		 (min-height 100))))

(make-object (class canvas% ()
	       (inherit get-dc)
	       (override
		[on-paint
		 (lambda ()
		   (let ([dc (get-dc)])
		     (send dc set-pen solid-pen)
		     (send dc set-brush solid-brush)
		     (send dc draw-rectangle 10 10 80 80)

		     (send dc set-pen xor-pen)
		     (send dc set-brush solid-brush)
		     (send dc draw-rectangle 10 10 80 80)

		     (send dc set-brush xor-brush)
		     (send dc set-pen xor-pen)
		     (send dc draw-rectangle 10 10 80 80)))])
	       (inherit min-width min-height)
	       (sequence
		 (super-init frame)
		 (min-width 100)
		 (min-height 100))))

(send frame show #t)

>Fix:

>Release-Note:

>Audit-Trail:

From: Matthew Flatt <mflatt@cs.rice.edu>
To: robby@cs.rice.edu
Cc: plt-gnats@cs.rice.edu
Subject: Re: all/895: drawing in canvas with xor-pen and xor-brush broken 
Date: Tue, 23 Feb 1999 07:20:45 -0800 (PST)

 Quoting robby@cs.rice.edu:
 > When using an xor-pen and an xor-brush to draw over a black retangle,
 > the border of the rectangle is left behind.
 > 
 > When using an xor-pen and a solid brush to draw over the same black
 > retangle, the edge is erased.
 
 This is the right behavior. Pen + brush drawing is defined as: draw
 with the bursh first, then draw with the pen.
 
 I can't find that definition anywhere in the manual. So it's the
 documentation that's broken in this case.
 
 > My guess is that the xor is being applied twice to the border of the
 > rectangle. Once by the pen and once by the brush.
 
 Yes, intentionally. Whether that's ideal or not is a separate question;
 the current system is what I could make work across platforms.
 
 Matthew
 

From: Robert Bruce Findler <robby@cs.rice.edu>
To: Matthew Flatt <mflatt@cs.rice.edu>
Cc: plt-gnats@cs.rice.edu
Subject: Re: all/895: drawing in canvas with xor-pen and xor-brush broken
Date: Tue, 23 Feb 1999 15:35:57 +0000

 Ah. Okay. So, can you include this xor behavior as an example in the
 manual?
 
 Thanks!
 
 Robby

Responsible-Changed-From-To: steck->mflatt
Responsible-Changed-By: mflatt
Responsible-Changed-When: Thu Feb 25 17:05:30 1999
Responsible-Changed-Why:

State-Changed-From-To: open-closed
State-Changed-By: mflatt
State-Changed-When: Thu Feb 25 17:05:40 1999
State-Changed-Why:
Docs improved.


 
 
>Unformatted:
