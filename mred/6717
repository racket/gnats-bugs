From nobody@champlain.ccs.neu.edu  Tue Feb 17 20:05:02 2004
Received: (from nobody@localhost)
	by champlain.ccs.neu.edu (8.9.3/8.9.3) id UAA10158
	for bugs@plt-scheme.org; Tue, 17 Feb 2004 20:05:02 -0500
Message-Id: <200402180105.UAA10158@champlain.ccs.neu.edu>
Date: Tue, 17 Feb 2004 20:05:02 -0500
From: stimberm@vub.ac.be
To: bugs@plt-scheme.org
Subject: segmentation fault at startup

>Number:         6717
>Category:       mred
>Synopsis:       segmentation fault at startup
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Tue Feb 17 20:10:01 -0500 2004
>Closed-Date:    Tue Jul 11 13:19:01 -0400 2006
>Last-Modified:  Tue Jul 11 13:19:01 -0400 2006
>Originator:     stijn timbermont
>Organization:
plt
>Submitter-Id:   unknown
>Release:        v206p1
>Environment:
linux-other
>Description:
hi

i first compiled with default flags, that gave a segfault (running drscheme, not compiling)
then i compiled with this flags:
CFLAGS="-g -Wall" and same CXXFLAGS

(these commands:
CFLAGS="-g -Wall" CXXFLAGS="-g -Wall" ./configure --prefix=/home/stijn/drscheme
CFLAGS="-g -Wall" CXXFLAGS="-g -Wall" make
CFLAGS="-g -Wall" CXXFLAGS="-g -Wall" make install  )

but still i get the segfault

gdb /home/stijn/drscheme/bin/drscheme output is this:



NU gdb 6.0
Copyright 2003 Free Software Foundation, Inc.
GDB is free software, covered by the GNU General Public License, and you are
welcome to change it and/or distribute copies of it under certain conditions.
Type "show copying" to see the conditions.
There is absolutely no warranty for GDB.  Type "show warranty" for details.
This GDB was configured as "i686-pc-linux-gnu"...Using host libthread_db library "/lib/libthread_db.so.1".

(gdb) Starting program: /home/stijn/drscheme/bin/mred 
[Thread debugging using libthread_db enabled]
[New Thread 16384 (LWP 21380)]

Program received signal SIGSEGV, Segmentation fault.
[Switching to Thread 16384 (LWP 21380)]
0x0823c162 in wxWindowDC::SetFont(wxFont*) (this=0x8a55390, font=0x8a04a80) at DeviceContexts/WindowDC.cc:2128
2128	    XSetFont(DPY, TEXT_GC, xfs->fid);
(gdb) #0  0x0823c162 in wxWindowDC::SetFont(wxFont*) (this=0x8a55390, font=0x8a04a80) at DeviceContexts/WindowDC.cc:2128
#1  0x081eb8b8 in wxStyle::SwitchTo(wxDC*, wxStyle*) (this=0x8a59e40, dc=0x8a55390, oldStyle=0x0) at wx_style.cxx:909
#2  0x082073d6 in wxMediaEdit::Redraw(wxDC*, float, float, float, float, float, float, int, int) (this=0x8a56e00, dc=0x8a55390, starty=0, endy=342, leftx=0, 
    rightx=470, dy=-0, dx=-0, show_caret=1, show_xsel=0) at wx_mpriv.cxx:2099
#3  0x08208d04 in wxMediaEdit::Refresh(float, float, float, float, int) (this=0x8a56e00, left=0, top=0, width=470, height=342, show_caret=1) at wx_mpriv.cxx:2571
#4  0x08196d08 in os_wxMediaEdit::Refresh(float, float, float, float, int) (this=0x8a56e00, x0=0, x1=0, x2=470, x3=342, x4=1) at wxs_mede.cxx:3169
#5  0x0821ab88 in wxMediaCanvas::Redraw(float, float, float, float) (this=0x898b3a8, localx=0, localy=0, fw=470, fh=342) at wx_medad.cxx:938
#6  0x0821a55c in wxMediaCanvas::OnPaint() (this=0x898b3a8) at wx_medad.cxx:726
#7  0x0818a522 in os_wxMediaCanvasOnPaint (n=1, p=0x8a4cf0c) at wxs_madm.cxx:671
#8  0x080b52ec in scheme_do_eval (obj=0x858fc00, num_rands=1, rands=0x8a4cf0c, get_value=-1) at eval.c:2966
#9  0x080c319b in do_dyn_wind (d=0x8a00590) at fun.c:2531
#10 0x080c350a in scheme_dynamic_wind (pre=0x80c3108 <pre_dyn_wind>, act=0x80c3169 <do_dyn_wind>, post=0x80c319d <post_dyn_wind>, jmp_handler=0, data=0x8a00590)
    at fun.c:2651
#11 0x080c3265 in dynamic_wind (c=3, argv=0x8a4cf18) at fun.c:2559
#12 0x080b52ec in scheme_do_eval (obj=0x84a4848, num_rands=3, rands=0x8a4cf18, get_value=-1) at eval.c:2966
#13 0x080c20ca in call_with_values (argc=2, argv=0x8a4cf30) at fun.c:2002
#14 0x080b52ec in scheme_do_eval (obj=0x84517c0, num_rands=2, rands=0x8a4cf30, get_value=-1) at eval.c:2966
#15 0x080c319b in do_dyn_wind (d=0x8a005e0) at fun.c:2531
#16 0x080c350a in scheme_dynamic_wind (pre=0x80c3108 <pre_dyn_wind>, act=0x80c3169 <do_dyn_wind>, post=0x80c319d <post_dyn_wind>, jmp_handler=0, data=0x8a005e0)
    at fun.c:2651
#17 0x080c3265 in dynamic_wind (c=3, argv=0x8a4cf3c) at fun.c:2559
#18 0x080b52ec in scheme_do_eval (obj=0x84a4848, num_rands=3, rands=0x8a4cf3c, get_value=-1) at eval.c:2966
#19 0x080c22f4 in do_call_ec (ec=0x8a60060) at fun.c:2086
#20 0x080c350a in scheme_dynamic_wind (pre=0x80c229e <pre_call_ec>, act=0x80c22bd <do_call_ec>, post=0x80c22ae <post_call_ec>, 
    jmp_handler=0x80c22f6 <handle_call_ec>, data=0x8a60060) at fun.c:2651
#21 0x080c246f in scheme_call_ec (argc=1, argv=0x8a4cf54) at fun.c:2126
#22 0x080b52ec in scheme_do_eval (obj=0x8451780, num_rands=1, rands=0x8a4cf54, get_value=1) at eval.c:2966
#23 0x080b608a in scheme_do_eval (obj=0x86a9f20, num_rands=0, rands=0x8a4cf48, get_value=1) at eval.c:3436
#24 0x080c0250 in apply_k () at fun.c:1115
#25 0x080bff82 in top_level_do (k=0x80c01b1 <apply_k>, eb=0, sj_start=0xbfffe2f4) at fun.c:1013
#26 0x080c00b9 in scheme_top_level_do (k=0x80c01b1 <apply_k>, eb=0) at fun.c:1052
#27 0x080c02a9 in _apply (rator=0x8a08cf0, num_rands=1, rands=0xbfffe3fc, multi=0, eb=0) at fun.c:1128
#28 0x080c02da in scheme_apply (rator=0x8a08cf0, num_rands=1, rands=0xbfffe3fc) at fun.c:1134
#29 0x08189cb1 in os_wxMediaCanvas::OnPaint() (this=0x898b3a8) at wxs_madm.cxx:344
#30 0x0826a3f1 in wxWindow::ExposeEventHandler(_WidgetRec*, wxWindow**, void*) (winp=0x84b3998, p_XfwfExposeInfo=0xbfffe490) at Windows/Window.cc:1297
#31 0x400c8809 in XtCallCallbacks () from /usr/X11R6/lib/libXt.so.6
#32 0x08273c40 in expose (self=0x84b8038, event=0xbfffe770, region=0x8399ae0) at XWidgets/xwCommon.c:790
#33 0x400d5bdc in SendExposureEvent () from /usr/X11R6/lib/libXt.so.6
#34 0x400d595a in CompressExposures () from /usr/X11R6/lib/libXt.so.6
#35 0x400d570b in XtDispatchEventToWidget () from /usr/X11R6/lib/libXt.so.6
#36 0x400d7371 in _XtDefaultDispatcher () from /usr/X11R6/lib/libXt.so.6
#37 0x400d5d6f in XtDispatchEvent () from /usr/X11R6/lib/libXt.so.6
#38 0x08157079 in MrEdDispatchEvent(_XEvent*) (event=0xbfffe770) at mredx.cxx:464
#39 0x08154742 in GoAhead (c=0x8a2fe60) at mred.cxx:1060
#40 0x081548cd in DoTheEvent (c=0x8a2fe60) at mred.cxx:1110
#41 0x08154acc in MrEdDoNextEvent (c=0x8a2fe60, alt=0, altdata=0x0, alt_wait=0x89c0380) at mred.cxx:1166
#42 0x08155646 in wxDispatchEventsUntilWaitable(int (*)(void*), void*, Scheme_Object*) (f=0, data=0x0, w=0x89c0380) at mred.cxx:1581
#43 0x0815da14 in wxSchemeYield(void*) (sema=0x89c0380) at wxscheme.cxx:1840
#44 0x08183c6a in wxsGlobalwxSchemeYield (n=1, p=0x8a4cf60) at wxs_glob.cxx:278
#45 0x080b52ec in scheme_do_eval (obj=0x85a2930, num_rands=1, rands=0x8a4cf60, get_value=1) at eval.c:2966
#46 0x080b7098 in eval_k () at eval.c:3949
#47 0x080bff82 in top_level_do (k=0x80b6eb6 <eval_k>, eb=1, sj_start=0xbfffede4) at fun.c:1013
#48 0x080c00b9 in scheme_top_level_do (k=0x80b6eb6 <eval_k>, eb=1) at fun.c:1052
#49 0x080b7116 in _eval (obj=0x899c8e0, env=0x8446c30, isexpr=0, multi=0, top=1) at eval.c:3970
#50 0x080b7158 in scheme_eval_compiled (obj=0x899c8e0, env=0x8446c30) at eval.c:3977
#51 0x080b6e89 in scheme_eval (obj=0x89e8ae0, env=0x8446c30) at eval.c:3902
#52 0x080b8283 in scheme_eval_string_all (str=0x829bd60 "(graphical-read-eval-print-loop)", env=0x8446c30, cont=-1) at eval.c:4468
#53 0x080b82c8 in scheme_eval_string (str=0x829bd60 "(graphical-read-eval-print-loop)", env=0x8446c30) at eval.c:4478
#54 0x080a2e38 in do_graph_repl (env=0x8446c30) at mrmain.cxx:179
#55 0x080a1d28 in finish_cmd_line_run (fa=0x8a345c8, repl=0x80a2de8 <do_graph_repl>) at cmdline.inc:292
#56 0x080a2e5b in finish_cmd_line_run () at mrmain.cxx:189
#57 0x081564e7 in MrEdApp::RealInit() (this=0x8437fc8) at mred.cxx:3131
#58 0x08155089 in handle_events (cx=0x8a2fe60) at mred.cxx:1337
#59 0x080b58d0 in scheme_do_eval (obj=0x89e8b88, num_rands=0, rands=0x0, get_value=-1) at eval.c:3151
#60 0x080c022a in apply_k () at fun.c:1113
#61 0x080bff82 in top_level_do (k=0x80c01b1 <apply_k>, eb=0, sj_start=0xbffff214) at fun.c:1013
#62 0x080c00b9 in scheme_top_level_do (k=0x80c01b1 <apply_k>, eb=0) at fun.c:1052
#63 0x080c02a9 in _apply (rator=0x89e8b88, num_rands=0, rands=0x0, multi=1, eb=0) at fun.c:1128
#64 0x080c030b in scheme_apply_multi (rator=0x89e8b88, num_rands=0, rands=0x0) at fun.c:1140
#65 0x08133be3 in start_child (child=0x89a0400, return_to_thread=0x0, child_eval=0x89e8b88) at thread.c:2217
#66 0x08133d44 in make_subprocess (child_thunk=0x89e8b88, child_start=0xbffff2e0, config=0x8a3e800, mgr=0x0, normal_kill=1) at thread.c:2281
#67 0x0813428e in scheme_thread_w_custodian_killkind (thunk=0x0, config=0x0, mgr=0x0, normal_kill=138743296) at thread.c:2488
#68 0x00002ede in ?? ()
(gdb) 




>How-To-Repeat:
CFLAGS="-g -Wall" CXXFLAGS="-g -Wall" ./configure --prefix=/home/stijn/drscheme  (or some other prefix)
CFLAGS="-g -Wall" CXXFLAGS="-g -Wall" make
CFLAGS="-g -Wall" CXXFLAGS="-g -Wall" make install

running drscheme segfaults (mzscheme does work)
>Fix:
>Release-Note:
>Audit-Trail:
Responsible-Changed-From-To: eli->nobody
Responsible-Changed-By: gnats@champlain.ccs.neu.edu
Responsible-Changed-When: Fri, 26 Mar 2004 05:14:08 -0500
Responsible-Changed-Why:


Responsible changed from "nobody" to "mflatt" by eli at Thu, 01 Apr 2004 22:13:32 -0500
Reason: Mred problem (according to the GDB trace it looks like a 
font problem)

View:
  http://bugs.plt-scheme.org/query/?cmd=view+audit-trail&pr=6717

From: Jonathan Rogers <jonner@teegra.net>
To: bugs@plt-scheme.org, mflatt@cs.utah.edu, stimberm@vub.ac.be
Cc: 
Subject: Re: mred/6717: segmentation fault at startup
Date: Sun, 06 Jun 2004 01:02:06 -0400

 I also have the problem with mred and drscheme segfaulting at startup. I 
 have tried version 207, both the static binary and compiled from source.
 
 There seems to be an issue with the X server, since some work and some 
 don't. Specifically, I get the segfault with XFree (4.3.99.902) and 
 X.org's server (6.7.0), which is a fork of XFree. Everything seems to 
 work fine with both WeirdX (a pure Java web server) and Xnest, both 
 displaying on the servers that do have the segfault problem.
 
 Even odder is the fact that Xnest is a server provided with XFree and 
 X.org that just displays on another X server, so it's mostly the same as 
 the servers that do have the problem. I believe that Xnest is somewhat 
 reduced in functionality, so perhaps the problem is related to some 
 recent, advanced feature like Xrender.
 
 Jonathan Rogers
From: Patrick McLean <chutz@cs.mcgill.ca>
To: bugs@plt-scheme.org, stimberm@vub.ac.be
Cc: 
Subject: Re: mred/6717: segmentation fault at startup
Date: Mon, 20 Feb 2006 13:30:14 -0500

 I have seen this on Gentoo Linux with DrScheme version 301, and I have a
 couple of users reporting the same thing with X.org 7.0.0.
 
 I have also noticed this problem occurs when using OpenSSH's X
 forwarding. This also occurs under Xnest for me.
State changed from "open" to "closed" by mflatt at Tue, 11 Jul 2006 13:19:01 -0400
Reason>>> fixed in v350

>Unformatted:
