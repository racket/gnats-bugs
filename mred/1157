From nobody@cs.rice.edu  Mon Sep 13 10:26:09 1999
Received: from web.cs.rice.edu (web.cs.rice.edu [128.42.1.163])
	by cs.rice.edu (8.9.0/8.9.0) with ESMTP id KAA28890
	for <plt-gnats@cs.rice.edu>; Mon, 13 Sep 1999 10:26:09 -0500 (CDT)
Message-Id: <199909131526.KAA07071@web.cs.rice.edu>
Date: Mon, 13 Sep 1999 10:26:08 -0500 (CDT)
From: robby@cs.rice.edu
Reply-To: robby@cs.rice.edu
To: plt-gnats@cs.rice.edu
Subject: deleting a selected snip in a pasteboard does not unselect the snip 

>Number:         1157
>Category:       mred
>Synopsis:       deleting a selected snip in a pasteboard does not unselect the snip
>Confidential:   no
>Severity:       serious
>Priority:       medium
>Responsible:    mflatt
>State:          closed
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Mon Sep 13 11:30:02 -0400 1999
>Last-Modified:  Sun Mar 28 02:40:05 -0500 2004
>Originator:     Robert Bruce Findler
>Release:        101/3
>Organization:
titan
>Environment:
MS Windows 95
>Description:
In a pasteboard, if a snip is selected, using the delete method to
delete it does not invoke the after-select callback.
>How-To-Repeat:

(define pb%
  (class pasteboard% ()
    (override
      [after-select
       (lambda x
         (display x)
         (newline))])
    (sequence (super-init))))

(define f (make-object frame% "frame"))
(define pb (make-object pb%))
(define c (make-object editor-canvas% f pb))
(define t1 (make-object string-snip% 3)) (send t1 insert "one" 3)
(send pb insert t1)
(make-object button% "button" f 
  (lambda x 
    (send pb delete t1)))
(send c min-width 200)
(send c min-height 200)
(send f show #t)

;; 1: Run code. 
;; 2: Select snip. (see printout)
;; 3: Click button. (no printout)

;; I expected a printout for the third step, since the snip is no
;; longer selected.


>Fix:

>Release-Note:

>Audit-Trail:

Responsible-Changed-From-To: steck->mflatt
Responsible-Changed-By: mflatt
Responsible-Changed-When: Mon Sep 13 10:43:23 1999
Responsible-Changed-Why:


From: Matthew Flatt <mflatt@cs.utah.edu>
To: robby@cs.rice.edu
Cc: plt-gnats@cs.rice.edu
Subject: Re: all/1157: deleting a selected snip in a pasteboard does not unselect the snip 
Date: Sun, 19 Sep 1999 08:30:24 -0700

 Quoting robby@cs.rice.edu:
 > In a pasteboard, if a snip is selected, using the delete method to
 > delete it does not invoke the after-select callback.
 
 After looking at the possibilities, I think the current implementation
 of `delete' is doing the right thing.
 
 Note that a text%'s `delete' method does not call `after-set-position',
 even if items are deleted before the current selection.
 
 More generally, I think the `can...?', `on...' and `after...' methods
 called for any action should be minimized. It's easier for the
 programmer to override additional methods (`after-delete', in this
 case) than to set up tracking for combinations for methods.
 
 For example, consider an application that sometimes deletes selected
 snips, but does not allow the user to change the selected snip.
 `can-select?' should usually return #f, but if it's called for a delete
 (in addition to `can-delete?'), then the programmer will have to set up
 a special now-deleting-something ivar to poll in `can-select?'. This
 strategy can work, especially if `can-select?' is called after
 `can-delete?', but it's fragile.
 
 I've added a note in the documentation that `after-select', etc. are
 not called when a selected snip was deleted (in parallel to the
 existing note for text%'s `after-set-position').

State-Changed-From-To: open-closed
State-Changed-By: mflatt
State-Changed-When: Tue Oct  5 11:53:40 1999
State-Changed-Why:
Docs improved
 
>Unformatted:
