From nobody@champlain.ccs.neu.edu  Sat Jan  4 11:19:35 2003
Received: (from nobody@localhost)
	by champlain.ccs.neu.edu (8.9.3/8.8.7) id LAA25505
	for bugs@plt-scheme.org; Sat, 4 Jan 2003 11:19:35 -0500
Message-Id: <200301041619.LAA25505@champlain.ccs.neu.edu>
Date: Sat, 4 Jan 2003 11:19:35 -0500
From: robby@cs.uchicago.edu
To: bugs@plt-scheme.org
Subject: event handling for canvases doesn't work right

>Number:         6054
>Category:       mred
>Synopsis:       event handling for canvases doesn't work right
>Class:          sw-bug
>Responsible:    steck
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Sat Jan 04 11:20:01 -0500 2003
>Closed-Date:    Sat Jan 04 11:22:59 -0500 2003
>Last-Modified:  Mon May 05 16:12:26 -0400 2008
>Originator:     Robert Bruce Findler
>Organization:
plt
>Submitter-Id:   unknown
>Release:        203
>Environment:
unknown-platform
>Description:
The problem below is worse than many of
the previous event handling mred bugs
because it keeps me from getting a
proper version of the little dragging thingy
between the definitions and interactions
to work properly (and off and on project
that I'd recently found time to work on).

There are two problems: the lack of the
up event (the major problem) and the
output going to the std out window (less
of a problem since its ignorable for now)

>How-To-Repeat:
- run the program below
- click and drag the box between
  the buttons around for a while
- eventually you'll notice that output
  goes to the stdout window instead of
  the drscheme console. at this point
  (and maybe even before it) releasing
  the button doesn't do anything; the
  up event never happens.


(require (lib "list.ss")
         (lib "etc.ss"))

(define three-bar-canvas%
  (class canvas%
    (init-field vertical?)
    (inherit get-dc get-client-size)
    
    (define resizing-start-dim #f)
    
    (inherit get-parent)
    (rename [super-on-event on-event])
    (define/override (on-event evt)
      (let ([parent (get-parent)])
        (cond
          [(send evt button-down? 'left)
           (printf "down\n")
           (let ([c (send (get-parent) get-children)])
             (set! resizing-start-dim (send (car c) min-height)))]
          [(send evt button-up?)
           (printf "up\n")
           (set! resizing-start-dim #f)]
          [(and resizing-start-dim (send evt moving?))
           (printf "moving\n")
           (let ([c (send (get-parent) get-children)])
             (send (car c) min-height (+ resizing-start-dim (send evt get-y)))
             (send (get-parent) container-flow-modified))]
          [else (super-on-event evt)])))
    
    (define/override (on-paint)
      (let ([dc (get-dc)])
        (let-values ([(w h) (get-client-size)])
          (send dc draw-rectangle 0 0 w h))))
    
    (super-instantiate ())
    (inherit stretchable-height min-height)
    (stretchable-height #f)
    (min-height 10)))

(define f (make-object frame% "frame" #f 40 500))
(make-object button% "button" f void)
(define tbc1 (make-object three-bar-canvas% #t f))
(send (make-object button% "button" f void) stretchable-height #t)
(send f show #t)
>Fix:
>Release-Note:
>Audit-Trail:
State-Changed-From-To: open->closed
State-Changed-By: robby
State-Changed-When: Sat Jan  4 11:22:59 2003
State-Changed-Why:
    duplicate report
>Unformatted:
