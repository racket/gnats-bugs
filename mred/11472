From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Mon Nov 29 09:27:59 2010
Received: from mail-fx0-f44.google.com (mail-fx0-f44.google.com [209.85.161.44])
	by champlain.ccs.neu.edu (8.14.3/8.14.3) with ESMTP id oATERvZw003781
	for <bugs@bugs.plt-scheme.org>; Mon, 29 Nov 2010 09:27:57 -0500
Message-Id: <201011291427.oATERpgY003773@champlain.ccs.neu.edu>
Date: Mon, 29 Nov 2010 09:27:51 -0500
From: robby@eecs.northwestern.edu
To: bugs@racket-lang.org
Subject: gr2: argb-pixels

>Number:         11472
>Category:       mred
>Synopsis:       gr2: argb-pixels
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Mon Nov 29 09:28:01 -0500 2010
>Last-Modified:  Wed Dec 01 15:16:50 -0500 2010
>Originator:     Robby Findler
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.0.99.2--2010-11-22(dd440539/d)
>Environment:
macosx "Darwin gaoping.ece.northwestern.edu 10.5.0 Darwin Kernel Version 10.5.0: Fri Nov  5 23:20:39 PDT 2010; root:xnu-1504.9.17~1/RELEASE_I386 i386" (i386-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 176671824

Collections:
(("/Users/robby/Library/Racket/5.0.99.2/collects" non-existent-path) ("/Users/robby/git/exp/plt/collects" ".gitignore" "2htdp" "afm" "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "data" "datalog" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "meta" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "redex" "repo-time-stamp" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "sirmail" "slatex" "slideshow" "srfi" "srpersist" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-bo!
 x-recovery" "test-engine" "tests" "tex2page" "texpict" "trace" "typed" "typed-scheme" "unstable" "version" "waterworld" "web-server" "wxme" "xml"))
Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t))
>Description:
When running the code below, I'd expect before and after to be the same, but they aren't (after has no colors).

From the larger context where I discovered this, I think that something is wrong with set-argb-pixels, not get-argb-pixels.
>How-To-Repeat:
#lang racket/gui

(define w 2)
(define h 1)

(define (bytes->bitmap bytes)
  (let* ([bm (make-bitmap w h)])
    (send bm set-argb-pixels 0 0 w h bytes)
    bm))

(define before #"\377\0\377\0\377\0\0\377")
(define bm (bytes->bitmap before))

(define (get-bytes i)
  (define bm (make-bitmap w h))
  (define bytes (make-bytes (* w h 4) 0))
  (define bdc (make-object bitmap-dc% bm))
  (send bdc clear)
  (send bdc draw-bitmap bm 0 0)
  (send bdc get-argb-pixels 0 0 w h bytes)
  bytes)


(define after (get-bytes bm))

(equal? before after)
before 
after
>Fix:
>Audit-Trail:
From: Matthew Flatt <mflatt@cs.utah.edu>
To: robby@eecs.northwestern.edu, bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11472: gr2: argb-pixels
Date: Mon, 29 Nov 2010 07:36:58 -0700

 At Mon, 29 Nov 2010 09:28:02 -0500, robby@eecs.northwestern.edu wrote:
 > (define (get-bytes i)
 >   (define bm (make-bitmap w h))
 >   (define bytes (make-bytes (* w h 4) 0))
 >   (define bdc (make-object bitmap-dc% bm))
 >   (send bdc clear)
 >   (send bdc draw-bitmap bm 0 0)
 >   (send bdc get-argb-pixels 0 0 w h bytes)
 >   bytes)
 
 The definition of `bm' shadows the top-level one. If you change it to
 `bm2', you get the expected result.
 
 In your larger example, do you have any 0 alphas? You you have a 0
 alpha for blue, for example, you might get back a 0 alpha for white (or
 any other color).
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11472: gr2: argb-pixels
Date: Mon, 29 Nov 2010 08:51:41 -0600

 I'll have to try later on today, sadly; it looked like an off-by-one
 error (I was losing one pixel in the copy of the bytes) in the larger
 context. The second or so from the last step is the one where the
 pixels all just went wrong. I should have realized that I broke my
 example. :(
 
 Robby
 
 On Mon, Nov 29, 2010 at 8:36 AM, Matthew Flatt <mflatt@cs.utah.edu> wrote:
 > At Mon, 29 Nov 2010 09:28:02 -0500, robby@eecs.northwestern.edu wrote:
 >> (define (get-bytes i)
 >> =C2=A0 (define bm (make-bitmap w h))
 >> =C2=A0 (define bytes (make-bytes (* w h 4) 0))
 >> =C2=A0 (define bdc (make-object bitmap-dc% bm))
 >> =C2=A0 (send bdc clear)
 >> =C2=A0 (send bdc draw-bitmap bm 0 0)
 >> =C2=A0 (send bdc get-argb-pixels 0 0 w h bytes)
 >> =C2=A0 bytes)
 >
 > The definition of `bm' shadows the top-level one. If you change it to
 > `bm2', you get the expected result.
 >
 > In your larger example, do you have any 0 alphas? You you have a 0
 > alpha for blue, for example, you might get back a 0 alpha for white (or
 > any other color).
 >
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11472: gr2: argb-pixels
Date: Mon, 29 Nov 2010 14:09:29 -0600

 On Mon, Nov 29, 2010 at 8:36 AM, Matthew Flatt <mflatt@cs.utah.edu> wrote:
 > In your larger example, do you have any 0 alphas? You you have a 0
 > alpha for blue, for example, you might get back a 0 alpha for white (or
 > any other color).
 
 FWIW, the answer here was no. I have always 377 for the alphas.
 
 Robby

