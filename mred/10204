From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Wed Apr 15 10:21:36 2009
Received: from mail-qy0-f134.google.com (mail-qy0-f134.google.com [209.85.221.134])
	by champlain.ccs.neu.edu (8.14.2/8.14.2) with ESMTP id n3FELT2V009104
	for <bugs@bugs.plt-scheme.org>; Wed, 15 Apr 2009 10:21:29 -0400
Message-Id: <200904151421.n3FELSCp009097@champlain.ccs.neu.edu>
Date: Wed, 15 Apr 2009 10:21:28 -0400
From: matthias@ccs.neu.edu
To: bugs@plt-scheme.org
Subject: create executable in teaching languages

>Number:         10204
>Category:       mred
>Synopsis:       create executable in teaching languages
>Class:          change-request
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Wed Apr 15 10:24:01 -0400 2009
>Closed-Date:    Mon Jan 17 19:44:29 -0500 2011
>Last-Modified:  Mon Jan 17 19:44:29 -0500 2011
>Originator:     matthias
>Organization:
plt
>Submitter-Id:   unknown
>Release:        4.1.5.4-svn14apr2009
>Environment:
macosx "Darwin antarctica.local 8.11.1 Darwin Kernel Version 8.11.1: Wed Oct 10 18:23:28 PDT 2007; root:xnu-792.25.20~1/RELEASE_I386 i386 i386" (i386-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 115548704

Collections:
(("/Users/matthias/0Unison/collects/" ".DS_Store" "compiled" "date" "finance" "info-domain" "info.ss" "short" "testing" "tll-collects" "utils" "web") ("/Users/matthias/Library/PLT Scheme/4.1.5.4/collects" non-existent-path) ("/Users/matthias/plt/collects" ".DS_Store" ".svn" "2htdp" "afm" "algol60" "at-exp" "big" "browser" "combinator-parser" "compiler" "config" "defaults" "deinprogramm" "doc" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu" "honu-module" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "little-helper" "macro-debugger" "make" "mred" "mrflow" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "mztake" "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profile" "profj" "profjBoxes" "profjWizard" "r5rs" "r6rs" "readline" "redex" "repos-time-stamp" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" !
 "scribblings" "scriblib" "setup" "sgl" "sirmail" "skipper" "slatex" "slibinit" "slideshow" "srfi" "srpersist" "stepper" "string-constants" "stxclass" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "test-suite" "tests" "tex2page" "texpict" "trace" "typed" "typed-scheme" "version" "waterworld" "web-server" "wxme" "xml"))
Computer Language: (("Teaching Languages" "How to Design Programs" "Beginning Student") (#(#t constructor repeating-decimal #f #t none) #f ((lib "draw.ss" "teachpack" "htdp") (lib "image.ss" "teachpack" "htdp"))))
>Description:
At the moment this function in drscheme 
(via Scheme | Create Exec) produces a 
dmg distributable file on a Mac, NOT an 
executable like drscheme. 

I think it would be IDEAL if it produced
BOTH: 

 -- the executable 
 -- and the thing one can distribute

It would be wonderful for HtDP/2e. 

Thanks. 
>How-To-Repeat:
>Fix:
>Audit-Trail:
From: Robby Findler <robby@eecs.northwestern.edu>
To: matthias@ccs.neu.edu, bugs@plt-scheme.org
Cc: nobody@plt-scheme.org, eli@plt-scheme.org, matthias@plt-scheme.org,
        sk@plt-scheme.org, mflatt@plt-scheme.org, clements@plt-scheme.org,
        jay@plt-scheme.org, meunier@plt-scheme.org, kathyg@plt-scheme.org,
        jacobm@plt-scheme.org, cce@plt-scheme.org, samth@plt-scheme.org,
        ryanc@plt-scheme.org, gcooper@plt-scheme.org, sstrickl@plt-scheme.org,
        sperber@deinprogramm.de
Subject: Re: [plt-bug] all/10204: create executable in teaching languages
Date: Wed, 15 Apr 2009 09:28:43 -0500

 When you double click on the dmg file, don't you find the runnable
 executable in there?
 
 Robby
 
 On Wed, Apr 15, 2009 at 9:24 AM,  <matthias@ccs.neu.edu> wrote:
 > A new problem report is waiting at
 > =C2=A0http://bugs.plt-scheme.org/query/?cmd=3Dview&pr=3D10204
 >
 > Reported by matthias for release: 4.1.5.4-svn14apr2009
 >
 > *** Description:
 > At the moment this function in drscheme
 > (via Scheme | Create Exec) produces a
 > dmg distributable file on a Mac, NOT an
 > executable like drscheme.
 >
 > I think it would be IDEAL if it produced
 > BOTH:
 >
 > =C2=A0-- the executable
 > =C2=A0-- and the thing one can distribute
 >
 > It would be wonderful for HtDP/2e.
 >
 > Thanks.
 >
 > *** How to repeat:
 >
 >
 > *** Environment:
 > macosx "Darwin antarctica.local 8.11.1 Darwin Kernel Version 8.11.1: Wed =
 Oct 10 18:23:28 PDT 2007; root:xnu-792.25.20~1/RELEASE_I386 i386 i386" (i38=
 6-macosx/3m) (get-display-depth) =3D 32
 > Human Language: english
 > (current-memory-use) 115548704
 >
 > Collections:
 > (("/Users/matthias/0Unison/collects/" ".DS_Store" "compiled" "date" "fina=
 nce" "info-domain" "info.ss" "short" "testing" "tll-collects" "utils" "web"=
 ) ("/Users/matthias/Library/PLT Scheme/4.1.5.4/collects" non-existent-path)=
  ("/Users/matthias/plt/collects" ".DS_Store" ".svn" "2htdp" "afm" "algol60"=
  "at-exp" "big" "browser" "combinator-parser" "compiler" "config" "defaults=
 " "deinprogramm" "doc" "drscheme" "dynext" "embedded-gui" "eopl" "errortrac=
 e" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "gui=
 builder" "handin-client" "handin-server" "help" "hierlist" "honu" "honu-mod=
 ule" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "=
 little-helper" "macro-debugger" "make" "mred" "mrflow" "mrlib" "mysterx" "m=
 zcom" "mzlib" "mzscheme" "mztake" "net" "openssl" "parser-tools" "planet" "=
 plot" "preprocessor" "profile" "profj" "profjBoxes" "profjWizard" "r5rs" "r=
 6rs" "readline" "redex" "repos-time-stamp" "rnrs" "s-exp" "scheme" "schemeu=
 nit" "scribble" !
 > =C2=A0"scribblings" "scriblib" "setup" "sgl" "sirmail" "skipper" "slatex"=
  "slibinit" "slideshow" "srfi" "srpersist" "stepper" "string-constants" "st=
 xclass" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "=
 test-engine" "test-suite" "tests" "tex2page" "texpict" "trace" "typed" "typ=
 ed-scheme" "version" "waterworld" "web-server" "wxme" "xml"))
 > Computer Language: (("Teaching Languages" "How to Design Programs" "Begin=
 ning Student") (#(#t constructor repeating-decimal #f #t none) #f ((lib "dr=
 aw.ss" "teachpack" "htdp") (lib "image.ss" "teachpack" "htdp"))))
 >
 >
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: bugs@plt-scheme.org, nobody@plt-scheme.org, eli@plt-scheme.org,
        matthias@plt-scheme.org, sk@plt-scheme.org, mflatt@plt-scheme.org,
        clements@plt-scheme.org, jay@plt-scheme.org, meunier@plt-scheme.org,
        kathyg@plt-scheme.org, jacobm@plt-scheme.org, cce@plt-scheme.org,
        samth@plt-scheme.org, ryanc@plt-scheme.org, gcooper@plt-scheme.org,
        sstrickl@plt-scheme.org, sperber@deinprogramm.de
Subject: Re: [plt-bug] all/10204: create executable in teaching languages
Date: Wed, 15 Apr 2009 10:34:01 -0400

 Sure. Now can you imagine how easy it would be to explain MY version  
 of the function to a freshman and how easy it is to explain the  
 existing one? Please?!?!?!?
 
 
 On Apr 15, 2009, at 10:28 AM, Robby Findler wrote:
 
 > When you double click on the dmg file, don't you find the runnable
 > executable in there?
 >
 > Robby
 >
 > On Wed, Apr 15, 2009 at 9:24 AM,  <matthias@ccs.neu.edu> wrote:
 >> A new problem report is waiting at
 >>  http://bugs.plt-scheme.org/query/?cmd=view&pr=10204
 >>
 >> Reported by matthias for release: 4.1.5.4-svn14apr2009
 >>
 >> *** Description:
 >> At the moment this function in drscheme
 >> (via Scheme | Create Exec) produces a
 >> dmg distributable file on a Mac, NOT an
 >> executable like drscheme.
 >>
 >> I think it would be IDEAL if it produced
 >> BOTH:
 >>
 >>  -- the executable
 >>  -- and the thing one can distribute
 >>
 >> It would be wonderful for HtDP/2e.
 >>
 >> Thanks.
 >>
 >> *** How to repeat:
 >>
 >>
 >> *** Environment:
 >> macosx "Darwin antarctica.local 8.11.1 Darwin Kernel Version  
 >> 8.11.1: Wed Oct 10 18:23:28 PDT 2007; root:xnu-792.25.20~1/ 
 >> RELEASE_I386 i386 i386" (i386-macosx/3m) (get-display-depth) = 32
 >> Human Language: english
 >> (current-memory-use) 115548704
 >>
 >> Collections:
 >> (("/Users/matthias/0Unison/collects/" ".DS_Store" "compiled"  
 >> "date" "finance" "info-domain" "info.ss" "short" "testing" "tll- 
 >> collects" "utils" "web") ("/Users/matthias/Library/PLT Scheme/ 
 >> 4.1.5.4/collects" non-existent-path) ("/Users/matthias/plt/ 
 >> collects" ".DS_Store" ".svn" "2htdp" "afm" "algol60" "at-exp"  
 >> "big" "browser" "combinator-parser" "compiler" "config" "defaults"  
 >> "deinprogramm" "doc" "drscheme" "dynext" "embedded-gui" "eopl"  
 >> "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics"  
 >> "gui-debugger" "guibuilder" "handin-client" "handin-server" "help"  
 >> "hierlist" "honu" "honu-module" "htdch" "htdp" "html" "icons"  
 >> "info-domain" "lang" "launcher" "lazy" "little-helper" "macro- 
 >> debugger" "make" "mred" "mrflow" "mrlib" "mysterx" "mzcom" "mzlib"  
 >> "mzscheme" "mztake" "net" "openssl" "parser-tools" "planet" "plot"  
 >> "preprocessor" "profile" "profj" "profjBoxes" "profjWizard" "r5rs"  
 >> "r6rs" "readline" "redex" "repos-time-stamp" "rnrs" "s-exp"  
 >> "scheme" "schemeunit" "scribble" !
 >>  "scribblings" "scriblib" "setup" "sgl" "sirmail" "skipper"  
 >> "slatex" "slibinit" "slideshow" "srfi" "srpersist" "stepper"  
 >> "string-constants" "stxclass" "swindle" "syntax" "syntax-color"  
 >> "teachpack" "test-box-recovery" "test-engine" "test-suite" "tests"  
 >> "tex2page" "texpict" "trace" "typed" "typed-scheme" "version"  
 >> "waterworld" "web-server" "wxme" "xml"))
 >> Computer Language: (("Teaching Languages" "How to Design Programs"  
 >> "Beginning Student") (#(#t constructor repeating-decimal #f #t  
 >> none) #f ((lib "draw.ss" "teachpack" "htdp") (lib "image.ss"  
 >> "teachpack" "htdp"))))
 >>
 >>
 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: bugs@plt-scheme.org, nobody@plt-scheme.org, eli@plt-scheme.org,
        matthias@plt-scheme.org, sk@plt-scheme.org, mflatt@plt-scheme.org,
        clements@plt-scheme.org, jay@plt-scheme.org, meunier@plt-scheme.org,
        kathyg@plt-scheme.org, jacobm@plt-scheme.org, cce@plt-scheme.org,
        samth@plt-scheme.org, ryanc@plt-scheme.org, gcooper@plt-scheme.org,
        sstrickl@plt-scheme.org, sperber@deinprogramm.de
Subject: Re: [plt-bug] all/10204: create executable in teaching languages
Date: Wed, 15 Apr 2009 09:42:19 -0500

 "Your" function is not completely clear to me, but if you are
 proposing to go implement it, please just go do it and ignore this
 message.
 
 I can imagine it would be somewhat easy to explain having two menu
 items, but not easy to explain why "create executable" asks for two
 places to save "the" executable. But maybe you're imagining a dialog
 that asks only for the non-extension part of the name and then creates
 two things "x.dmg" and "x.app" in the same directory?
 
 Also, are we not worried about people creating the .app file and then
 trying to send it to someone else in an attachment, but that not
 working properly (because it really is a folder with all kinds of
 strange stuff in there)? I thought that was the issue before, but
 perhaps email attachments generally work better now?
 
 Robby
 
 On Wed, Apr 15, 2009 at 9:34 AM, Matthias Felleisen
 <matthias@ccs.neu.edu> wrote:
 >
 > Sure. Now can you imagine how easy it would be to explain MY version of t=
 he
 > function to a freshman and how easy it is to explain the existing one?
 > Please?!?!?!?
 >
 >
 > On Apr 15, 2009, at 10:28 AM, Robby Findler wrote:
 >
 >> When you double click on the dmg file, don't you find the runnable
 >> executable in there?
 >>
 >> Robby
 >>
 >> On Wed, Apr 15, 2009 at 9:24 AM, =C2=A0<matthias@ccs.neu.edu> wrote:
 >>>
 >>> A new problem report is waiting at
 >>> =C2=A0http://bugs.plt-scheme.org/query/?cmd=3Dview&pr=3D10204
 >>>
 >>> Reported by matthias for release: 4.1.5.4-svn14apr2009
 >>>
 >>> *** Description:
 >>> At the moment this function in drscheme
 >>> (via Scheme | Create Exec) produces a
 >>> dmg distributable file on a Mac, NOT an
 >>> executable like drscheme.
 >>>
 >>> I think it would be IDEAL if it produced
 >>> BOTH:
 >>>
 >>> =C2=A0-- the executable
 >>> =C2=A0-- and the thing one can distribute
 >>>
 >>> It would be wonderful for HtDP/2e.
 >>>
 >>> Thanks.
 >>>
 >>> *** How to repeat:
 >>>
 >>>
 >>> *** Environment:
 >>> macosx "Darwin antarctica.local 8.11.1 Darwin Kernel Version 8.11.1: We=
 d
 >>> Oct 10 18:23:28 PDT 2007; root:xnu-792.25.20~1/RELEASE_I386 i386 i386"
 >>> (i386-macosx/3m) (get-display-depth) =3D 32
 >>> Human Language: english
 >>> (current-memory-use) 115548704
 >>>
 >>> Collections:
 >>> (("/Users/matthias/0Unison/collects/" ".DS_Store" "compiled" "date"
 >>> "finance" "info-domain" "info.ss" "short" "testing" "tll-collects" "uti=
 ls"
 >>> "web") ("/Users/matthias/Library/PLT Scheme/4.1.5.4/collects"
 >>> non-existent-path) ("/Users/matthias/plt/collects" ".DS_Store" ".svn"
 >>> "2htdp" "afm" "algol60" "at-exp" "big" "browser" "combinator-parser"
 >>> "compiler" "config" "defaults" "deinprogramm" "doc" "drscheme" "dynext"
 >>> "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "g=
 ames"
 >>> "graphics" "gui-debugger" "guibuilder" "handin-client" "handin-server"
 >>> "help" "hierlist" "honu" "honu-module" "htdch" "htdp" "html" "icons"
 >>> "info-domain" "lang" "launcher" "lazy" "little-helper" "macro-debugger"
 >>> "make" "mred" "mrflow" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "mz=
 take"
 >>> "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profile"
 >>> "profj" "profjBoxes" "profjWizard" "r5rs" "r6rs" "readline" "redex"
 >>> "repos-time-stamp" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" !
 >>> =C2=A0"scribblings" "scriblib" "setup" "sgl" "sirmail" "skipper" "slate=
 x"
 >>> "slibinit" "slideshow" "srfi" "srpersist" "stepper" "string-constants"
 >>> "stxclass" "swindle" "syntax" "syntax-color" "teachpack" "test-box-reco=
 very"
 >>> "test-engine" "test-suite" "tests" "tex2page" "texpict" "trace" "typed"
 >>> "typed-scheme" "version" "waterworld" "web-server" "wxme" "xml"))
 >>> Computer Language: (("Teaching Languages" "How to Design Programs"
 >>> "Beginning Student") (#(#t constructor repeating-decimal #f #t none) #f
 >>> ((lib "draw.ss" "teachpack" "htdp") (lib "image.ss" "teachpack" "htdp")=
 )))
 >>>
 >>>
 >
 >
From: Matthew Flatt <mflatt@cs.utah.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: Matthias Felleisen <matthias@ccs.neu.edu>, bugs@plt-scheme.org,
        nobody@plt-scheme.org, eli@plt-scheme.org, matthias@plt-scheme.org,
        sk@plt-scheme.org, clements@plt-scheme.org, jay@plt-scheme.org,
        meunier@plt-scheme.org, kathyg@plt-scheme.org, jacobm@plt-scheme.org,
        cce@plt-scheme.org, samth@plt-scheme.org, ryanc@plt-scheme.org,
        gcooper@plt-scheme.org, sstrickl@plt-scheme.org,
        sperber@deinprogramm.de
Subject: Re: [plt-bug] all/10204: create executable in teaching languages
Date: Wed, 15 Apr 2009 09:11:34 -0600

 At Wed, 15 Apr 2009 09:42:19 -0500, Robby Findler wrote:
 > Also, are we not worried about people creating the .app file and then
 > trying to send it to someone else in an attachment, but that not
 > working properly (because it really is a folder with all kinds of
 > strange stuff in there)? 
 
 Yes, that's why we generate a ".dmg" (or ".zip" under Windows or ".tgz"
 under X).
 
 > I thought that was the issue before, but
 > perhaps email attachments generally work better now?
 
 I tried three. Mail worked with drag-and-drop, naturally. GMail didn't
 let me select an ".app" as an attachment. Yahoo let me select the
 ".app" but seemed to just get stuck.
 
 At Wed, 15 Apr 2009 10:34:01 -0400, Matthias Felleisen wrote:
 > Sure. Now can you imagine how easy it would be to explain MY version  
 > of the function to a freshman and how easy it is to explain the  
 > existing one? Please?!?!?!?
 
 I would say "You get a .dmg file, just like any package that you
 download." I must admit that I don't see the problem.
 
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: Robby Findler <robby@eecs.northwestern.edu>, bugs@plt-scheme.org,
        nobody@plt-scheme.org, eli@plt-scheme.org, matthias@plt-scheme.org,
        sk@plt-scheme.org, clements@plt-scheme.org, jay@plt-scheme.org,
        meunier@plt-scheme.org, kathyg@plt-scheme.org, jacobm@plt-scheme.org,
        cce@plt-scheme.org, samth@plt-scheme.org, ryanc@plt-scheme.org,
        gcooper@plt-scheme.org, sstrickl@plt-scheme.org,
        sperber@deinprogramm.de
Subject: Re: [plt-bug] all/10204: create executable in teaching languages
Date: Wed, 15 Apr 2009 13:29:14 -0400

 The problem is straightforward:
 
 1. A freshman knows about launching programs.
 
 2. In a programming course in this day and age, a freshman might  
 expect to learn two things:
 
 -- create something analogous to the programs that he launches on his  
 computer(s)
 
 -- create something he can share with his friends, who own a similar  
 computer (but aren't in the same programming course). 
 
 3. We are equipped to deliver these two things with the click of a  
 button. Why don't we? In particular, if I were a freshman I would use  
 "Create Executable" to create this thing called an executable and  
 immediately launch it on my machine. If I liked what I saw, I'd send  
 around the "distributable package".
 
 4. Technically what I want is this:
 
 -- suppose you have a file called f.ss
 -- choosing Scheme | Create Executable delivers two "things" on a mac: 
 ---- f
 ---- f.dmg
 -- I can then launch f via a double click and with $ ./f in the shell 
 -- I can "mail" the f.dmg file to my friends who own a Mac 
 
 Is this really difficult to understand?
 
 
 On Apr 15, 2009, at 11:11 AM, Matthew Flatt wrote:
 
 > At Wed, 15 Apr 2009 09:42:19 -0500, Robby Findler wrote:
 >> Also, are we not worried about people creating the .app file and then
 >> trying to send it to someone else in an attachment, but that not
 >> working properly (because it really is a folder with all kinds of
 >> strange stuff in there)?
 >
 > Yes, that's why we generate a ".dmg" (or ".zip" under Windows or  
 > ".tgz"
 > under X).
 >
 >> I thought that was the issue before, but
 >> perhaps email attachments generally work better now?
 >
 > I tried three. Mail worked with drag-and-drop, naturally. GMail didn't
 > let me select an ".app" as an attachment. Yahoo let me select the
 > ".app" but seemed to just get stuck.
 >
 > At Wed, 15 Apr 2009 10:34:01 -0400, Matthias Felleisen wrote:
 >> Sure. Now can you imagine how easy it would be to explain MY version
 >> of the function to a freshman and how easy it is to explain the
 >> existing one? Please?!?!?!?
 >
 > I would say "You get a .dmg file, just like any package that you
 > download." I must admit that I don't see the problem.
 >
 
From: Eli Barzilay <eli@barzilay.org>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: Matthew Flatt <mflatt@cs.utah.edu>,
        Robby Findler <robby@eecs.northwestern.edu>, bugs@plt-scheme.org,
        nobody@plt-scheme.org, matthias@plt-scheme.org, sk@plt-scheme.org,
        clements@plt-scheme.org, jay@plt-scheme.org, meunier@plt-scheme.org,
        kathyg@plt-scheme.org, jacobm@plt-scheme.org, cce@plt-scheme.org,
        samth@plt-scheme.org, ryanc@plt-scheme.org, gcooper@plt-scheme.org,
        sstrickl@plt-scheme.org, sperber@deinprogramm.de
Subject: Re: [plt-bug] all/10204: create executable in teaching languages
Date: Wed, 15 Apr 2009 13:50:37 -0400

 On Apr 15, Matthias Felleisen wrote:
 > 
 > The problem is straightforward:
 > 
 > 1. A freshman knows about launching programs.
 > 
 > 2. In a programming course in this day and age, a freshman might  
 > expect to learn two things:
 > 
 > -- create something analogous to the programs that he launches on his  
 > computer(s)
 > 
 > -- create something he can share with his friends, who own a similar  
 > computer (but aren't in the same programming course). 
 > 
 > 3. We are equipped to deliver these two things with the click of a  
 > button. Why don't we? In particular, if I were a freshman I would use  
 > "Create Executable" to create this thing called an executable and  
 > immediately launch it on my machine. If I liked what I saw, I'd send  
 > around the "distributable package".
 > 
 > 4. Technically what I want is this:
 > 
 > -- suppose you have a file called f.ss
 > -- choosing Scheme | Create Executable delivers two "things" on a mac: 
 > ---- f
 > ---- f.dmg
 > -- I can then launch f via a double click and with $ ./f in the shell 
 > -- I can "mail" the f.dmg file to my friends who own a Mac 
 > 
 > Is this really difficult to understand?
 
 Perhaps the explanation labels can be clarified, but I don't see
 anything wrong with having two separate pieces of functionality to
 create an executable and to create a distributable.  The difference
 between the two should be very clear for beginners too.
 
 If anything, I find the above to be potentially confusing -- how do I
 know which file to run and which file to mail?  (On the default
 Windows setup you'd get too icons called "f" and "f" -- and only the
 icons will be different.)  I can imagine sending executables to
 friends being a very popular mistake -- because *that's* the icon that
 did work when you clicked it, so obviously that's what you should
 send.
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                   http://www.barzilay.org/                 Maze is Life!
From: Matthew Flatt <mflatt@cs.utah.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: Robby Findler <robby@eecs.northwestern.edu>, bugs@plt-scheme.org,
        nobody@plt-scheme.org, eli@plt-scheme.org, matthias@plt-scheme.org,
        sk@plt-scheme.org, clements@plt-scheme.org, jay@plt-scheme.org,
        meunier@plt-scheme.org, kathyg@plt-scheme.org, jacobm@plt-scheme.org,
        cce@plt-scheme.org, samth@plt-scheme.org, ryanc@plt-scheme.org,
        gcooper@plt-scheme.org, sstrickl@plt-scheme.org,
        sperber@deinprogramm.de
Subject: Re: [plt-bug] all/10204: create executable in teaching languages
Date: Wed, 15 Apr 2009 11:53:10 -0600

 At Wed, 15 Apr 2009 13:29:14 -0400, Matthias Felleisen wrote:
 > 4. Technically what I want is this:
 > 
 > -- suppose you have a file called f.ss
 > -- choosing Scheme | Create Executable delivers two "things" on a mac: 
 > ---- f
 > ---- f.dmg
 > -- I can then launch f via a double click and with $ ./f in the shell 
 > -- I can "mail" the f.dmg file to my friends who own a Mac 
 
 I see two obstacles:
 
  * If you want to type "./f" in the shell, we'd have to generate three
    things: "f.app", "f.dmg", and "f". The the GUI on the Mac, two of
    those things will show up as "f".
 
    (Or you can type "./f.app/Conents/MacOS/f" in the shell.)
 
  * There is no standard GUI interface for picking a base file name for
    generating multiple files. You can have the user pick "f.dmg" and
    warn them if "f.dmg" exists, or you can do the same with "f.app",
    but file dialogs tend not to support warnings about multiple files.
 
 I think it's much easier to explain that "Create Executable" produces
 the one thing that you explicitly ask it to produce though a file-save
 dialog. A .dmg is a useful and easy-to-understand result, and a single
 archive-style result is consistent across platforms.
 
 > Is this really difficult to understand?
 
 No. Do you mean to be as obnoxious as you sound?
 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Eli Barzilay <eli@barzilay.org>
Cc: Matthias Felleisen <matthias@ccs.neu.edu>,
        Matthew Flatt <mflatt@cs.utah.edu>, bugs@plt-scheme.org,
        nobody@plt-scheme.org, matthias@plt-scheme.org, sk@plt-scheme.org,
        clements@plt-scheme.org, jay@plt-scheme.org, meunier@plt-scheme.org,
        kathyg@plt-scheme.org, jacobm@plt-scheme.org, cce@plt-scheme.org,
        samth@plt-scheme.org, ryanc@plt-scheme.org, gcooper@plt-scheme.org,
        sstrickl@plt-scheme.org, sperber@deinprogramm.de
Subject: Re: [plt-bug] all/10204: create executable in teaching languages
Date: Wed, 15 Apr 2009 12:52:01 -0500

 I agree with Eli here, and one minor technical addendum: it isn't
 possible to create one thing that is both runnable in the shell and
 runnable via double clicking in the finder (at least it isn't on the
 mac).
 
 Robby
 
 On Wed, Apr 15, 2009 at 12:50 PM, Eli Barzilay <eli@barzilay.org> wrote:
 > On Apr 15, Matthias Felleisen wrote:
 >>
 >> The problem is straightforward:
 >>
 >> 1. A freshman knows about launching programs.
 >>
 >> 2. In a programming course in this day and age, a freshman might
 >> expect to learn two things:
 >>
 >> -- create something analogous to the programs that he launches on his
 >> computer(s)
 >>
 >> -- create something he can share with his friends, who own a similar
 >> computer (but aren't in the same programming course).
 >>
 >> 3. We are equipped to deliver these two things with the click of a
 >> button. Why don't we? In particular, if I were a freshman I would use
 >> "Create Executable" to create this thing called an executable and
 >> immediately launch it on my machine. If I liked what I saw, I'd send
 >> around the "distributable package".
 >>
 >> 4. Technically what I want is this:
 >>
 >> -- suppose you have a file called f.ss
 >> -- choosing Scheme | Create Executable delivers two "things" on a mac:
 >> ---- f
 >> ---- f.dmg
 >> -- I can then launch f via a double click and with $ ./f in the shell
 >> -- I can "mail" the f.dmg file to my friends who own a Mac
 >>
 >> Is this really difficult to understand?
 >
 > Perhaps the explanation labels can be clarified, but I don't see
 > anything wrong with having two separate pieces of functionality to
 > create an executable and to create a distributable. =C2=A0The difference
 > between the two should be very clear for beginners too.
 >
 > If anything, I find the above to be potentially confusing -- how do I
 > know which file to run and which file to mail? =C2=A0(On the default
 > Windows setup you'd get too icons called "f" and "f" -- and only the
 > icons will be different.) =C2=A0I can imagine sending executables to
 > friends being a very popular mistake -- because *that's* the icon that
 > did work when you clicked it, so obviously that's what you should
 > send.
 >
 > --
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0((lambda (x) (x x)) (lambda (x) (x x)))=
  =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Eli Barzilay:
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0http://www.=
 barzilay.org/ =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 Maze =
 is Life!
 >
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: Matthias Felleisen <matthias@ccs.neu.edu>, bugs@plt-scheme.org,
        nobody@plt-scheme.org, eli@plt-scheme.org, matthias@plt-scheme.org,
        sk@plt-scheme.org, clements@plt-scheme.org, jay@plt-scheme.org,
        meunier@plt-scheme.org, kathyg@plt-scheme.org, jacobm@plt-scheme.org,
        cce@plt-scheme.org, samth@plt-scheme.org, ryanc@plt-scheme.org,
        gcooper@plt-scheme.org, sstrickl@plt-scheme.org,
        sperber@deinprogramm.de
Subject: Re: [plt-bug] all/10204: create executable in teaching languages
Date: Wed, 15 Apr 2009 12:54:58 -0500

 On Wed, Apr 15, 2009 at 12:53 PM, Matthew Flatt <mflatt@cs.utah.edu> wrote:
 >> Is this really difficult to understand?
 >
 > No. Do you mean to be as obnoxious as you sound?
 
 I think I started this trend in this thread with my sarcasm quotes
 around "your" in an earlier message. Let me apologize publically for
 that one ... (I didn't mean it that way -- I should have re-read my
 message before sending it and removed them.)
 
 Robby
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Eli Barzilay <eli@barzilay.org>
Cc: Matthew Flatt <mflatt@cs.utah.edu>,
        Robby Findler <robby@eecs.northwestern.edu>, bugs@plt-scheme.org,
        nobody@plt-scheme.org, matthias@plt-scheme.org, sk@plt-scheme.org,
        clements@plt-scheme.org, jay@plt-scheme.org, meunier@plt-scheme.org,
        kathyg@plt-scheme.org, jacobm@plt-scheme.org, cce@plt-scheme.org,
        samth@plt-scheme.org, ryanc@plt-scheme.org, gcooper@plt-scheme.org,
        sstrickl@plt-scheme.org, sperber@deinprogramm.de
Subject: Re: [plt-bug] all/10204: create executable in teaching languages
Date: Wed, 15 Apr 2009 15:07:42 -0400

 Yes, I am willing to go with TWO menu items:
 
   Create Executable
   Create Distributable
 
 That's fine with me. It's not the essence of my message.
 
 
 
 On Apr 15, 2009, at 1:50 PM, Eli Barzilay wrote:
 
 > On Apr 15, Matthias Felleisen wrote:
 >>
 >> The problem is straightforward:
 >>
 >> 1. A freshman knows about launching programs.
 >>
 >> 2. In a programming course in this day and age, a freshman might
 >> expect to learn two things:
 >>
 >> -- create something analogous to the programs that he launches on  
 >> his  
 >> computer(s)
 >>
 >> -- create something he can share with his friends, who own a  
 >> similar  
 >> computer (but aren't in the same programming course).
 >>
 >> 3. We are equipped to deliver these two things with the click of a
 >> button. Why don't we? In particular, if I were a freshman I would use
 >> "Create Executable" to create this thing called an executable and
 >> immediately launch it on my machine. If I liked what I saw, I'd send
 >> around the "distributable package".
 >>
 >> 4. Technically what I want is this:
 >>
 >> -- suppose you have a file called f.ss
 >> -- choosing Scheme | Create Executable delivers two "things" on a  
 >> mac: 
 >> ---- f
 >> ---- f.dmg
 >> -- I can then launch f via a double click and with $ ./f in the  
 >> shell 
 >> -- I can "mail" the f.dmg file to my friends who own a Mac 
 >>
 >> Is this really difficult to understand?
 >
 > Perhaps the explanation labels can be clarified, but I don't see
 > anything wrong with having two separate pieces of functionality to
 > create an executable and to create a distributable.  The difference
 > between the two should be very clear for beginners too.
 >
 > If anything, I find the above to be potentially confusing -- how do I
 > know which file to run and which file to mail?  (On the default
 > Windows setup you'd get too icons called "f" and "f" -- and only the
 > icons will be different.)  I can imagine sending executables to
 > friends being a very popular mistake -- because *that's* the icon that
 > did work when you clicked it, so obviously that's what you should
 > send.
 >
 > -- 
 >           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli  
 > Barzilay:
 >                   http://www.barzilay.org/                 Maze is  
 > Life!
 
From: Matthew Flatt <mflatt@cs.utah.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: Eli Barzilay <eli@barzilay.org>,
        Robby Findler <robby@eecs.northwestern.edu>, bugs@plt-scheme.org,
        nobody@plt-scheme.org, matthias@plt-scheme.org, sk@plt-scheme.org,
        clements@plt-scheme.org, jay@plt-scheme.org, meunier@plt-scheme.org,
        kathyg@plt-scheme.org, jacobm@plt-scheme.org, cce@plt-scheme.org,
        samth@plt-scheme.org, ryanc@plt-scheme.org, gcooper@plt-scheme.org,
        sstrickl@plt-scheme.org, sperber@deinprogramm.de
Subject: Re: [plt-bug] all/10204: create executable in teaching languages
Date: Wed, 15 Apr 2009 13:25:30 -0600

 At Wed, 15 Apr 2009 15:07:42 -0400, Matthias Felleisen wrote:
 > 
 > Yes, I am willing to go with TWO menu items:
 > 
 >   Create Executable
 >   Create Distributable
 > 
 > That's fine with me. It's not the essence of my message.
 
 Should "Create Executable" create an something that can be moved among
 machines? Or could it be the local-execution kind (which can be a
 single file on all platforms but relies on the PLT Scheme
 installation), leaving the job of machine-portable executables to
 "Create Distribution"?
 
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: Eli Barzilay <eli@barzilay.org>,
        Robby Findler <robby@eecs.northwestern.edu>, bugs@plt-scheme.org,
        nobody@plt-scheme.org, matthias@plt-scheme.org, sk@plt-scheme.org,
        clements@plt-scheme.org, jay@plt-scheme.org, meunier@plt-scheme.org,
        kathyg@plt-scheme.org, jacobm@plt-scheme.org, cce@plt-scheme.org,
        samth@plt-scheme.org, ryanc@plt-scheme.org, gcooper@plt-scheme.org,
        sstrickl@plt-scheme.org, sperber@deinprogramm.de
Subject: Re: [plt-bug] all/10204: create executable in teaching languages
Date: Wed, 15 Apr 2009 15:27:59 -0400

 On Apr 15, 2009, at 3:25 PM, Matthew Flatt wrote:
 
 > At Wed, 15 Apr 2009 15:07:42 -0400, Matthias Felleisen wrote:
 >>
 >> Yes, I am willing to go with TWO menu items:
 >>
 >>   Create Executable
 >>   Create Distributable
 >>
 >> That's fine with me. It's not the essence of my message.
 >
 > Should "Create Executable" create an something that can be moved among
 > machines?
 
 No.
 
 > Or could it be the local-execution kind (which can be a
 > single file on all platforms but relies on the PLT Scheme
 > installation),
 
 Yes!
 
 > leaving the job of machine-portable executables to
 > "Create Distribution"?
 
 Yes. 



State changed from "open" to "closed" by eli at Mon, 17 Jan 2011 19:44:29 -0500
Reason>>> closed as "obsolete" with respect to v5.0.99.6 and later;
either the bug is long-since fixed, the relevant code
doesn't exist anymore, the relevant platform hasn't been
supported recently, or a new bug report is needed if the
problem really isn't fixed and someone actually cares

