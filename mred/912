From nobody@cs.rice.edu  Sun Mar  7 18:31:10 1999
Received: from web.cs.rice.edu (web.cs.rice.edu [128.42.1.163])
	by cs.rice.edu (8.9.0/8.9.0) with ESMTP id SAA03963
	for <plt-gnats@cs.rice.edu>; Sun, 7 Mar 1999 18:31:10 -0600 (CST)
Message-Id: <199903080031.SAA00954@web.cs.rice.edu>
Date: Sun, 7 Mar 1999 18:31:10 -0600 (CST)
From: robby@cs.rice.edu
Reply-To: robby@cs.rice.edu
To: plt-gnats@cs.rice.edu
Subject: Xt's text-field's editor's on-char method not working 

>Number:         912
>Category:       mred
>Synopsis:       Xt's text-field's editor's on-char method not working
>Confidential:   no
>Severity:       serious
>Priority:       medium
>Responsible:    mflatt
>State:          closed
>Class:          doc-bug
>Submitter-Id:   unknown
>Arrival-Date:   Sun Mar 07 19:45:03 -0500 1999
>Last-Modified:  Sun Mar 28 02:39:17 -0500 2004
>Originator:     Robert Bruce Findler
>Release:        100/30
>Organization:
titan
>Environment:
Linux
>Description:
Althought I don't have a documentation reference for this, in email
conversation, Matthew confirmed that the on-char method of a text-field's
editor (return of get-editor) is where the method that the test suite
should call to simulate key events in the text-field.

Unforutnately, alt-a when typed by a user in a text-field selects the
entire text, but when typed via the test suite inserts the character "a".

I believe that this works on macos (where the key combination is "meta-a").
>How-To-Repeat:
(define f (make-object frame% "test"))
(define t (make-object text-field% "" f void "bbbbbb"))
(send f show #t)
(define k (make-object key-event%))
(send k set-key-code #\a)
(send k set-alt-down #t)
(send (send t get-editor) on-char k)

;; after evaluating this code, there will be an "a" in the text-field
;; and if it had the focus, you could tell that nothing was selected.
>Fix:

>Release-Note:

>Audit-Trail:

From: Matthew Flatt <mflatt@cs.rice.edu>
To: robby@cs.rice.edu
Cc: plt-gnats@cs.rice.edu
Subject: Re: all/912: Xt's text-field's editor's on-char method not working 
Date: Sun, 7 Mar 1999 17:52:49 -0700

 Quoting robby@cs.rice.edu:
 > Unforutnately, alt-a when typed by a user in a text-field selects the
 > entire text, but when typed via the test suite inserts the character "a".
 
 It's meta-a under Unix. There's generally no effective alt key on a
 standard PC keyboard, although it depends on how you set up your
 X server.
 

From: Robert Bruce Findler <robby@cs.rice.edu>
To: Matthew Flatt <mflatt@cs.rice.edu>
Cc: plt-gnats@cs.rice.edu
Subject: Re: all/912: Xt's text-field's editor's on-char method not working
Date: Sun, 07 Mar 1999 20:20:34 -0600

 Matthew Flatt wrote:
 
 > It's meta-a under Unix.
 
 Right. Sorry. I just didn't investigate thouroughly enough. Now, I have a "lack
 of specification" bug. Here's the code (in a nutshell) that the test suite runs
 to type meta-a (in the particular configuration I was running the test suite
 in):
 
 (define ancestor-list
   (lambda (window)
     (let loop ([w window] [l null])
       (if w
    (loop (send w get-parent) (cons w l))
    l))))
 
 (define f (make-object frame% "frame"))
 (make-object menu-item% "item" (make-object menu% "menu" (make-object menu-bar%
 f)) void #\a)
 (define d (make-object dialog% "dialog" f))
 (define t (make-object text-field% "" d void "bbbbbb"))
 (define k (make-object key-event%))
 (send k set-key-code #\a)
 (send k set-meta-down #t)
 
 (printf "~a~n" (send (car (ancestor-list t)) on-subwindow-char t k))
 
 The test suite decides that, since on-subwindow-char returned #t, the event
 should be considered handled, so the event is not passed to the text-field.
 
 So, the question is: should the test suite's ancestor-list stop when it gets to
 a top-level-window? Will that break something else if it does? (assuming, of
 course, that ancestor-list is only used to compute the list of windows that get
 to handle the event via on-subwindow-char)
 
 Robby
 

From: Matthew Flatt <mflatt@cs.rice.edu>
To: Robert Bruce Findler <robby@cs.rice.edu>
Cc: plt-gnats@cs.rice.edu
Subject: Re: all/912: Xt's text-field's editor's on-char method not working
Date: Mon, 8 Mar 1999 07:19:14 -0700

 Quoting Robert Bruce Findler:
 > So, the question is: should the test suite's ancestor-list stop when
 > it gets to a top-level-window? 
 
 Yes.

Responsible-Changed-From-To: steck->mflatt
Responsible-Changed-By: mflatt
Responsible-Changed-When: Tue Mar  9 16:13:27 1999
Responsible-Changed-Why:

State-Changed-From-To: open-closed
State-Changed-By: mflatt
State-Changed-When: Tue Mar  9 16:13:33 1999
State-Changed-Why:

Docs improved to specify starting point in acestor list for
on-subwindow-XXX calls.
 
>Unformatted:
