From nobody@cs.rice.edu  Fri Feb 26 21:52:42 1999
Received: from web.cs.rice.edu (web.cs.rice.edu [128.42.1.163])
	by cs.rice.edu (8.9.0/8.9.0) with ESMTP id VAA29256
	for <plt-gnats@cs.rice.edu>; Fri, 26 Feb 1999 21:52:42 -0600 (CST)
Message-Id: <199902270352.VAA01859@web.cs.rice.edu>
Date: Fri, 26 Feb 1999 21:52:41 -0600 (CST)
From: robby@cs.rice.edu
Reply-To: robby@cs.rice.edu
To: plt-gnats@cs.rice.edu
Subject: busy-cursor & eventspaces 

>Number:         901
>Category:       mred
>Synopsis:       busy-cursor & eventspaces
>Confidential:   no
>Severity:       serious
>Priority:       medium
>Responsible:    mflatt
>State:          closed
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Fri Feb 26 23:00:01 -0500 1999
>Last-Modified:  Sun Mar 28 02:39:13 -0500 2004
>Originator:     Robert Bruce Findler
>Release:        100/30
>Organization:
titan
>Environment:
Linux
>Description:
Turning on the busy cursor in one eventspace and turning it off
in another one may cause the first eventspace to show the busy
cursor on only portions of the frame.
>How-To-Repeat:

(define e (make-eventspace))
(define f (parameterize ([current-eventspace e])
            (make-object frame% "frame" #f 100 100)))
(make-object menu% "menu" (make-object menu-bar% f))
(make-object editor-canvas% f (make-object text%))
(make-object editor-canvas% f (make-object text%))
(send f show #t)
(parameterize ([current-eventspace e])
  (begin-busy-cursor))
(end-busy-cursor)

;;turns off the busy cursor in the canvases, but not on the scrollbars
;; and the menubar. The busy cursor should be on everywhere. 
>Fix:

>Release-Note:

>Audit-Trail:

From: Matthew Flatt <mflatt@cs.rice.edu>
To: robby@cs.rice.edu
Cc: plt-gnats@cs.rice.edu
Subject: Re: all/901: busy-cursor & eventspaces 
Date: Fri, 26 Feb 1999 21:24:04 -0700

 Quoting robby@cs.rice.edu:
 > Turning on the busy cursor in one eventspace and turning it off
 > in another one may cause the first eventspace to show the busy
 > cursor on only portions of the frame.
 > >How-To-Repeat:
 > 
 > (define e (make-eventspace))
 > (define f (parameterize ([current-eventspace e])
 >             (make-object frame% "frame" #f 100 100)))
 > (make-object menu% "menu" (make-object menu-bar% f))
 > (make-object editor-canvas% f (make-object text%))
 > (make-object editor-canvas% f (make-object text%))
 > (send f show #t)
 > (parameterize ([current-eventspace e])
 >   (begin-busy-cursor))
 > (end-busy-cursor)
 > 
 > ;;turns off the busy cursor in the canvases, but not on the scrollbars
 > ;; and the menubar. The busy cursor should be on everywhere. 
 
 The `end-busy-cursor' part is not actually necessary. The problem has
 to do with an internal set-cursor call to a window that is not in the
 current eventspace.
 
 In the smaller example, below, the editor is installed frame in a
 thread that isn't the handler thread. this triggers the set-cursor
 call:
 
 (define e (make-eventspace))
 (define f (parameterize ([current-eventspace e])
 	    (begin-busy-cursor)
 	    (make-object frame% "frame" #f 100 100)))
 (define c (make-object editor-canvas% f))
 (send c set-editor (make-object text%))
 (parameterize ([current-eventspace e])
   (queue-callback 
    (lambda () 
      (send f show #t))))
 
 Moving the set-editor call into the queued callback make the cursor
 behave correctly.
 
 Easy to fix (an internal is-busy? call needs to be parameterized over
 the target window's eventspace), hard to test...
 
 Thanks,
 Matthew
 

From: Robert Bruce Findler <robby@cs.rice.edu>
To: Matthew Flatt <mflatt@cs.rice.edu>
Cc: plt-gnats@cs.rice.edu
Subject: Re: all/901: busy-cursor & eventspaces
Date: Sat, 27 Feb 1999 16:12:40 +0000

 Matthew Flatt wrote:
 
 > The `end-busy-cursor' part is not actually necessary. The problem has
 > to do with an internal set-cursor call to a window that is not in the
 > current eventspace.
 >
 
 Well, in drscheme (which is where I first noticed this behavior), the
 end-busy-cursor was necessary, even if it isn't in this small example. In
 DrScheme, the begin-busy-cursor worked fine (the busy cursor was on
 everywhere) and the end-busy-cursor turned off the cursor in part of the
 frame (and was being run in the wrong eventspace).
 
 So, perhaps there is another bug in there.
 
 Robby

Responsible-Changed-From-To: steck->mflatt
Responsible-Changed-By: mflatt
Responsible-Changed-When: Wed Mar 10 19:40:26 1999
Responsible-Changed-Why:

State-Changed-From-To: open-closed
State-Changed-By: mflatt
State-Changed-When: Wed Mar 10 19:40:28 1999
State-Changed-Why:

Fixed in 100/31.

 
 
>Unformatted:
