From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Tue Oct 18 21:38:19 2011
Received: from mail-pz0-f48.google.com (mail-pz0-f48.google.com [209.85.210.48])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id p9J1cFQN015812
	for <bugs@bugs.plt-scheme.org>; Tue, 18 Oct 2011 21:38:15 -0400
Message-Id: <201110190138.p9J1cBDL015805@champlain.ccs.neu.edu>
Date: Tue, 18 Oct 2011 21:38:11 -0400
From: sbloch@adelphi.edu
To: bugs@racket-lang.org
Subject: internal error on "quit"

>Number:         12304
>Category:       mred
>Synopsis:       internal error on "quit"
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       non-critical
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Tue Oct 18 21:40:01 -0400 2011
>Last-Modified:  Sun Nov 20 10:25:52 -0500 2011
>Originator:     Stephen Bloch
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.1.3
>Environment:
macosx "Darwin Canterbury 8.11.0 Darwin Kernel Version 8.11.0: Wed Oct 10 18:26:00 PDT 2007; root:xnu-792.24.17~1/RELEASE_PPC Power Macintosh powerpc" (ppc-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 182289264

Collections:
("/Users/teeb/Library/Racket/5.1.3/collects"
 (non-existent-path))
("/Applications/Racket v5.1.3/collects"
 ("2htdp" "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "data" "datalog" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "help" "hierlist" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "picturing-programs" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "redex" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tex2page" "texpict" "trace" "typed" "typed-scheme" "unstable" "version" "web-server" "wxme" "xml"))

Computer Language: (("Teaching Languages" "How to Design Programs" "Beginning Student") (#(#t constructor repeating-decimal #f #t none) #f ()))
>Description:
I opened a student's ten-line program, ran it without errors, and hit pretzel-Q to quit out of DrR.  I got the message

min-width in area<%>: expected argument of type <exact integer in [0, 10000]>; given 16930126499895052337152

 === context ===
/Applications/Racket v5.1.3/collects/mred/private/wxitem.rkt:35:6
/Applications/Racket v5.1.3/collects/racket/private/class-internal.rkt:3679:0: continue-make-super
/Applications/Racket v5.1.3/collects/mred/private/wxitem.rkt:206:4
/Applications/Racket v5.1.3/collects/racket/private/class-internal.rkt:3679:0: continue-make-super
/Applications/Racket v5.1.3/collects/racket/private/class-internal.rkt:3679:0: continue-make-super
/Applications/Racket v5.1.3/collects/racket/private/class-internal.rkt:3679:0: continue-make-super
/Applications/Racket v5.1.3/collects/racket/private/class-internal.rkt:3629:0: continue-make-object
/Applications/Racket v5.1.3/collects/racket/private/class-internal.rkt:3551:2: make-object
/Applications/Racket v5.1.3/collects/mred/private/mritem.rkt:175:23
/Applications/Racket v5.1.3/collects/mred/private/mritem.rkt:97:20
/Applications/Racket v5.1.3/collects/mred/private/mrwindow.rkt:241:20
/Applications/Racket v5.1.3/collects/mred/private/mrwindow.rkt:47:4
/Applications/Racket v5.1.3/collects/racket/private/class-internal.rkt:3679:0: continue-make-super
/Applications/Racket v5.1.3/collects/mred/private/mrwindow.rkt:93:4
/Applications/Racket v5.1.3/collects/racket/private/class-internal.rkt:3679:0: continue-make-super
/Applications/Racket v5.1.3/collects/mred/private/mrwindow.rkt:131:4
...
>How-To-Repeat:
The student's program is as follows.  Nothing strange.

(require picturing-programs)
;four-square image-----> image
(check-expect (four-square pic:calendar)
              (above(beside pic:calendar pic:calendar)(beside pic:calendar pic:calendar)))
(check-expect (four-square pic:bloch)
               (above(beside pic:bloch pic:bloch)(beside pic:bloch pic:bloch)))

(define (four-square picture)
  ;picture is an image
  (above(beside picture picture)(beside picture picture))
  )
(four-square (triangle 30 "solid" "purple"))
"should be four purple triangles"
>Fix:
