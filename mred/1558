From nobody@cs.rice.edu  Mon Jul  3 01:29:29 2000
Received: from web.cs.rice.edu (web.cs.rice.edu [128.42.1.163])
	by cs.rice.edu (8.9.0/8.9.0) with ESMTP id BAA26555
	for <plt-gnats@cs.rice.edu>; Mon, 3 Jul 2000 01:29:29 -0500 (CDT)
Message-Id: <200007030629.BAA17968@web.cs.rice.edu>
Date: Mon, 3 Jul 2000 01:29:28 -0500 (CDT)
From: Manuel.Serrano@unice.fr
Reply-To: Manuel.Serrano@unice.fr
To: plt-gnats@cs.rice.edu
Subject: extra memory consumption/too long execution 

>Number:         1558
>Category:       mred
>Synopsis:       extra memory consumption/too long execution
>Confidential:   no
>Severity:       non-critical
>Priority:       low
>Responsible:    mflatt
>State:          closed
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Mon Jul 03 02:30:02 -0400 2000
>Last-Modified:  Sun Mar 28 02:46:07 -0500 2004
>Originator:     Manuel Serrano
>Release:        101
>Organization:
titan
>Environment:
Linux
>Description:
We are benchmarking several toolkit libraries and specially Scheme
widget graphical libraries. We have designed a simple benchmark programs
that constructs a very graphical interface. We have measured the runtime
execution and the memory consumption with the following systems:
 stk
 bigloo
 swl (petite chez scheme)
 tk
 gtk

and

 mred

It appears that MrEd has a serious problem because when most systems
executes the benchmark in one or two minutes, MrEd requires several days
(because it allocates too much and maintain too many live objects).

We will be happy to help you fixing that bug. Please, do not hesitate to
contact us. 

Best regards,

  --Manuel Serrano--

>How-To-Repeat:
(require-library "function.ss")

(define (make-cb str)
  (lambda l (display str) (display ": ") (display l) (newline)))

(define (make-interface)
  (let* ((t    (make-object frame% "toto"))  
         (main (make-object vertical-panel% t))
         (top  (make-object horizontal-panel% main))
         (bot  (make-object horizontal-panel% main))
         (left (make-object radio-box% "" 
                            '("9 pts" "10 pts" "12 pts" "14 pts" "18 pts")
                            top (make-cb "left")
                            '(vertical)))
         (middle (make-object vertical-panel% top))
         (right (make-object radio-box% "" 
                            '("red" "green" "blue" "blue" "yellow")
                            top (make-cb "right")
                            '(vertical)))
                 (cb1    (make-object check-box% "Bold" middle 
                              (make-cb "Check")  '()))
         (cb2    (make-object check-box% "Italic" middle 
                              (make-cb "Check")  '()))
         (ok     (make-object button% "OK" bot (lambda l
                                                 (display l)
                                                 (newline))))
         (cancel  (make-object button% "Cancel" bot (lambda l
                                                      (display l)
                                                      (newline)))))
;    (send t show #t)
    t))
  

         
(define (repeat n)
  (if (> n 0)
      (let ((t (make-interface)))
        ;(send t show #f)
        (display n)
        (newline)
        (repeat (- n 1)))))

            
(time (repeat 5000))
(exit)

>Fix:

>Release-Note:

>Audit-Trail:

From: Matthew Flatt <mflatt@cs.utah.edu>
To: Manuel.Serrano@unice.fr
Cc: plt-gnats@cs.rice.edu
Subject: Re: all/1558: extra memory consumption/too long execution 
Date: Mon, 3 Jul 2000 05:17:36 -0700

 Quoting Manuel.Serrano@unice.fr:
 > It appears that MrEd has a serious problem because when most systems
 > executes the benchmark in one or two minutes, MrEd requires several days
 > (because it allocates too much and maintain too many live objects).
 
 Your program is accumulating a few events on the event queue for every
 created frame, so all frames have to stay live until the end of the
 computation.
 
 To fix this, add `(yield)' in your loop. The call to `yield' will
 execute the queued frame events, clearing all references to the frame
 from the event queue.
 
 (The events in question invoke notification methods of the frame, such
 as `on-size'.)
 
 Matthew

Responsible-Changed-From-To: steck->mflatt
Responsible-Changed-By: mflatt
Responsible-Changed-When: Wed Jul 19 14:22:08 2000
Responsible-Changed-Why:

State-Changed-From-To: open-closed
State-Changed-By: mflatt
State-Changed-When: Wed Jul 19 14:22:10 2000
State-Changed-Why:
Fixed docs to note event accumulation.

 
>Unformatted:
