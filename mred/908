From nobody@cs.rice.edu  Fri Mar  5 14:49:50 1999
Received: from web.cs.rice.edu (web.cs.rice.edu [128.42.1.163])
	by cs.rice.edu (8.9.0/8.9.0) with ESMTP id OAA02403
	for <plt-gnats@cs.rice.edu>; Fri, 5 Mar 1999 14:49:50 -0600 (CST)
Message-Id: <199903052049.OAA24666@web.cs.rice.edu>
Date: Fri, 5 Mar 1999 14:49:49 -0600 (CST)
From: mfischer@umr.edu
Reply-To: mfischer@umr.edu
To: plt-gnats@cs.rice.edu
Subject: draw-rounded-rectangle doesnt work in X 

>Number:         908
>Category:       mred
>Synopsis:       draw-rounded-rectangle doesnt work in X
>Confidential:   no
>Severity:       non-critical
>Priority:       medium
>Responsible:    mflatt
>State:          closed
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Fri Mar 05 16:00:02 -0500 1999
>Last-Modified:  Sun Mar 28 02:39:15 -0500 2004
>Originator:     Matt Fischer
>Release:        53
>Organization:
titan
>Environment:
Linux
>Description:
I have been unable to correctly draw a rounded rectangle in X, under Linux 
(2.0.35 running Xfree86), or under Solaris 2.5 and 2.6.  When I draw the rectangle
it starts where it should but instead looks like a rectangle with infinite
height..  (see below).

if I do this...
(send dc draw-rounded-rectangle 27.5 45 20 3 2)     

I get something that looks more like this...
(send dc draw-rectangle 27.5 45 20 1000+)

the rectangle runs down until there is no more canvas!

This code *does* work under NT, running the same release of Dr. Scheme!

please email me with any info you may have about this..

mfischer@umr.edu

>How-To-Repeat:

>Fix:

>Release-Note:

>Audit-Trail:

Responsible-Changed-From-To: steck->mflatt
Responsible-Changed-By: mflatt
Responsible-Changed-When: Mon Mar 15 13:47:08 1999
Responsible-Changed-Why:

State-Changed-From-To: open-analyzed
State-Changed-By: mflatt
State-Changed-When: Mon Mar 15 13:47:09 1999
State-Changed-Why:

I haven't been able to reproduce the behavior your describe. Here's my
program:

 > (define f (make-object mred:frame% null "Ok"))
 > (define p (make-object mred:vertical-panel% f))
 > (define c (make-object mred:canvas% p))
 > (send f show #t)
 > (define dc (send c get-dc))
 > (send dc draw-rounded-rectangle 27.5 45 20 3 2)

I get something very different with

 > (send dc draw-rectangle 27.5 45 20 1000)

I get something strage if I make the radius part too big:

 > (send dc draw-rounded-rectangle 27.5 45 20 3 2000)

but that's an artifact of the corner radius being larger than the
rectangle's side.

I'm running Solaris 2.5 displaying to an X server running under Linux
with XFree86. I might just be testing the wrong program. 

Or maybe the details for drawing a rounded rectangle depend on the
specific driver used by the X server. (I think I'm using the S3 driver
with XFree86.) It seems possible that some drivers wouldn't like
drawing a rounded rectangle of height 3 where each corner is supposed
to be an arc of a circle of radius 2, since that would normally
require a total height of 4 for the rectangle. Do you get normal
results using a smaller radius, as in

 > (send dc draw-rounded-rectangle 27.5 45 20 3 1)
 
or using a larger height, as in

 > (send dc draw-rounded-rectangle 27.5 45 20 5 2)

?

Thanks,
Matthew

State-Changed-From-To: analyzed-closed
State-Changed-By: mflatt
State-Changed-When: Mon Mar 15 16:53:19 1999
State-Changed-Why:

Matt Fischer replies:

	these give me normal results, so basially since its a circle radius,
 then the rectangle height should always be >= 2*radius, or weird results
 will occur.

I added a note to this effect in the docs.

>Unformatted:
