From jrm@ccs.neu.edu  Tue Sep 17 16:54:27 2002
Received: from localhost (IDENT:root@localhost.localdomain [127.0.0.1])
	by champlain.ccs.neu.edu (8.9.3/8.8.7) with ESMTP id QAA27800
	for <bugs>; Tue, 17 Sep 2002 16:54:27 -0400
Message-Id: <200209172054.QAA27800@champlain.ccs.neu.edu>
Date: Tue, 17 Sep 2002 16:54:27 -0400
From: Joe Marshall <jrm@ccs.neu.edu>
Reply-To:
To: bugs@plt-scheme.org
Subject: Crash in libmzscheme

>Number:         5834
>Category:       mred
>Synopsis:       Crash in libmzscheme
>Confidential:   no
>Severity:       serious
>Priority:       medium
>Responsible:    mflatt
>State:          closed
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Tue Sep 17 17:00:00 -0400 2002
>Closed-Date:    Tue Apr 01 18:31:30 -0500 2003
>Last-Modified:  Sun Mar 28 02:50:39 -0500 2004
>Originator:     Joe Marshall
>Release:        202.2
>Organization:
plt
>Environment:
windows "Windows NT 5.1 (Build 2600) Service Pack 1" (win32\i386)

Docs Installed:
("help")

Collections:
(("C:\\Documents and Settings\\jrm\\My Documents\\Visual Studio Projects\\plt\\collects" ("afm" "algol60" "browser" "compiler" "CVS" "cvs-time-stamp" "defaults" "doc" "drscheme" "dynext" "eopl" "errortrace" "framework" "games" "graphics" "help" "hierlist" "htdp" "html" "icons" "lang" "launcher" "make" "mrdemo" "mred" "mrflow" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "parser-tools" "readline" "setup" "sirmail" "slatex" "slibinit" "srpersist" "stepper" "string-constants" "syntax" "tests" "tex2page" "texpict" "typeset" "version" "waterworld" "web-server" "xml")))

Human Language: english
>Description:
When running the framework test `group-test.ss' I occasionally crash
the framework test engine with a null pointer in the `scheme_values'
function.  I've included the backtrace below.  As you can see, the
`rands' argument is NULL despite the fact that num_rands is 1.  There
is a comment in scheme_do_eval about one page prior to where the bug
is noticed that says:

    /* DANGER: if rands == p->tail_buffer, we have to be careful to
       get the arguments out of the buffer before a GC occurs.
       (Otherwise, they'll be zeroed.) One way to make things safe for
       GC is to let rands have the buffer and create a new one. */

I'm going to hazard a guess that this is what happened.


scheme_values(int argc=1, Scheme_Object * * argv=0x00000000)  Line 1890 + 0x3
scheme_do_eval(Scheme_Object * obj=0x02b51888, int num_rands=1, Scheme_Object * * rands=0x00000000, int get_value=-1)  Line 2661 + 0xe
do_dyn_wind(void * d=0x038039b0)  Line 2396 + 0x12
scheme_dynamic_wind(void (void *)* pre=0x0044322b, Scheme_Object * (void *)* volatile act=0x0044327e, void (void *)* volatile post=0x004432a1, Scheme_Object * (void *)* jmp_handler=0x00000000, void * volatile data=0x038039b0)  Line 2485 + 0x7
dynamic_wind(int c=3, Scheme_Object * * p=0x03202ec0)  Line 2424 + 0x1a
scheme_do_eval(Scheme_Object * obj=0x003f2568, int num_rands=3, Scheme_Object * * rands=0x03202ec0, int get_value=-1)  Line 2661 + 0xe
do_call_ec(void * ec=0x03a81ac8)  Line 1949 + 0x11
scheme_dynamic_wind(void (void *)* pre=0x0044255e, Scheme_Object * (void *)* volatile act=0x0044257e, void (void *)* volatile post=0x0044256f, Scheme_Object * (void *)* jmp_handler=0x004425ab, void * volatile data=0x03a81ac8)  Line 2485 + 0x7
scheme_call_ec(int argc=1, Scheme_Object * * argv=0x03202ed8)  Line 1990 + 0x1d
scheme_do_eval(Scheme_Object * obj=0x02b51858, int num_rands=1, Scheme_Object * * rands=0x03202ed8, int get_value=1)  Line 2661 + 0xe
scheme_do_eval(Scheme_Object * obj=0x02f99130, int num_rands=0, Scheme_Object * * rands=0x03202ecc, int get_value=-1)  Line 3131 + 0xf
>How-To-Repeat:
Under windows XP manually run the framework test on group-test.ss  On my machine it will crash about 10% of the time.
>Fix:

>Release-Note:

>Audit-Trail:

From: SirMail User <sirmail@plt-scheme.org>
To: Joe Marshall <jrm@ccs.neu.edu>
Cc: bugs@plt-scheme.org
Subject: Re: all/5834: Crash in libmzscheme
Date: Tue, 17 Sep 2002 19:30:58 -0600 (MDT)

 Naturally, I can't get the crash on my machine. I expect that the exact
 speed of your machine matters, since thread switches are timed.
 
 Can you give me a bit more of the stack context?
 
 Thanks,
 Matthew
 

From: "Joe Marshall" <jrm@ccs.neu.edu>
To: "SirMail User" <sirmail@plt-scheme.org>
Cc: <bugs@plt-scheme.org>
Subject: Re: all/5834: Crash in libmzscheme
Date: Wed, 18 Sep 2002 09:07:13 -0400

 I imagine that you are correct about the timing making a difference.
 
 What sort of stack context do you need?  I think I sent you the
 entire backtrace that I got from the Visual Studio debugger (such
 as it is).  I could send you the contents of the stack frames, but
 I'm mostly seeing things of type Scheme_object ** which the
 debugger displays only as a huge union.
 
 Are there any compiler switches that would help?
 
 ----- Original Message ----- 
 From: "SirMail User" <sirmail@plt-scheme.org>
 To: "Joe Marshall" <jrm@ccs.neu.edu>
 Cc: <bugs@plt-scheme.org>
 Sent: Tuesday, September 17, 2002 21:30
 Subject: Re: all/5834: Crash in libmzscheme
 
 
 > Naturally, I can't get the crash on my machine. I expect that the exact
 > speed of your machine matters, since thread switches are timed.
 > 
 > Can you give me a bit more of the stack context?
 > 
 > Thanks,
 > Matthew
 > 
Responsible-Changed-From-To: steck->mflatt
Responsible-Changed-By: mflatt
Responsible-Changed-When: Tue Apr  1 18:31:30 2003
Responsible-Changed-Why:
    mr
State-Changed-From-To: open->closed
State-Changed-By: mflatt
State-Changed-When: Tue Apr  1 18:31:30 2003
State-Changed-Why:
    presumed fixed in major Windows overhaul for v203
>Unformatted:
 
