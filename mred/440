From robby@cs.rice.edu  Tue Feb 10 12:18:08 1998
Received: from australia.cs.rice.edu (australia.cs.rice.edu [128.42.1.176])
          by cs.rice.edu (8.8.5/8.8.4) with ESMTP
	  id MAA21989 for <plt-gnats@cs.rice.edu>; Tue, 10 Feb 1998 12:18:08 -0600 (CST)
Message-Id: <199802101818.MAA04367@australia.cs.rice.edu>
Date: Tue, 10 Feb 1998 12:18:07 -0600 (CST)
From: Robert Bruce Findler <robby@cs.rice.edu>
Reply-To: robby@cs.rice.edu
To: plt-gnats@cs.rice.edu
Subject: multiple bindings in keymaps broken
X-Send-Pr-Version: 3.101

>Number:         440
>Category:       mred
>Synopsis:       multiple bindings in keymaps broken
>Confidential:   no
>Severity:       serious
>Priority:       medium
>Responsible:    robby
>State:          closed
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Tue Feb 10 18:30:02 GMT 1998
>Last-Modified:  Wed Feb 18 15:45:07 CST 1998
>Originator:     Robert Bruce Findler
>Organization:
titan
>Release:        unknown
>Environment:
Xt, australia
>Description:
 This bug causes the paren mis-match fixer in mred/drs to break.
>How-To-Repeat:
evaluate:

(define k (make-object wx:keymap%))
(send k add-key-function "paren"
      (lambda (obj event)
	(wx:message-box "here~n")
	(send obj insert #\))))
(send k map-function ")" "paren")
(send k map-function "]" "paren")

(define f (make-object wx:frame% null "" 0 0 100 100))
(define c (make-object wx:media-canvas% f))
(define e (make-object wx:media-edit%))
(send c set-media e)
(send e set-keymap k)
(send f show #t)

Now type round and square close brackets in the edit.

Only the round ones cause the message box to appear. The square ones don't
do anything.

>Fix:
	
>Audit-Trail:

Responsible-Changed-From-To: steck->robby
Responsible-Changed-By: robby
Responsible-Changed-When: Tue Feb 10 14:36:53 1998
Responsible-Changed-Why:

When I changed the above example to include:

(send k map-function "s:)" "paren")
(send k map-function "s:]" "paren")

everything works as expected, which validates the hypothesis that the
problem is with shifting. 

The wx:keymap% class has a method: "implies-shift". That method is begin
called with the list:

      (list "<" ">" "?" ":" "~" "\""
	    "{" "}"
	    "!" "@" "#" "$" "%" "^" "&" "*" "(" ")" "_" "+"
	    "|")

Unfortunately, this action causes the keymap to ignore any of those
characters if they appear unshifted. As these keys may very well be
unshifted on some keyboards (mine!), I propose changing "implies-shift" or
adding other method, "may-be-shifted" that accepts the same inputs and lets
those keys match both if they are shifted, or if they are not shifted.


From: Matthew Flatt <mflatt@cs.rice.edu>
To: robby@cs.rice.edu
Cc: plt-gnats@cs.rice.edu
Subject: Re: all/440: multiple bindings in keymaps broken
Date: Mon, 16 Feb 1998 08:59:08 -0600 (CST)

 In the next MrEd release, the behavior of `implies-shift' will change.
 Currently, if ``?'' implies a shift, then mapping from ``?'' is
 changed to a mapping from ``s:?'', instead. In the new MrEd, mapping
 from ``?'' maps from both ``?'' and ``s:?''. (The idea is that only
 one of these is possible, anyway.)
 
 For MrEd II, perhaps special handling for the shift key is a better
 solution: for any character ``?'', a mapping from ``?'' applies
 regardless of the state of the shift key, ``s:?'' applies only when
 the shift key is pressed, and ``u:?'' applies only when the shift key
 is *not* pressed.  Note that ``A'' would *not* be equivalent to
 ``s:a'' anymore.
 
 Matthew

State-Changed-From-To: open-closed
State-Changed-By: robby
State-Changed-When: Wed Feb 18 15:44:59 1998
State-Changed-Why:

works great now.

>Unformatted:
