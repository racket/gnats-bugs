From clements@brinckerhoff.org  Wed Apr  2 15:15:01 2003
Received: from localhost (IDENT:root@localhost.localdomain [127.0.0.1])
	by champlain.ccs.neu.edu (8.9.3/8.8.7) with ESMTP id PAA21016
	for <bugs>; Wed, 2 Apr 2003 15:15:00 -0500
Message-Id: <200304022015.PAA21016@champlain.ccs.neu.edu>
Date: Wed, 2 Apr 2003 15:15:00 -0500
From: John Clements <clements@brinckerhoff.org>
To: bugs@plt-scheme.org
Subject: reflowing with BIG xml box causes MrEd bus error

>Number:         6185
>Category:       mred
>Synopsis:       reflowing with BIG xml box causes MrEd bus error
>Confidential:   no
>Severity:       serious
>Priority:       medium
>Responsible:    mflatt
>State:          closed
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Wed Apr 02 15:15:01 -0500 2003
>Closed-Date:    Wed Apr 02 18:45:27 -0500 2003
>Last-Modified:  Sun Mar 28 02:51:08 -0500 2004
>Originator:     John Clements
>Release:        203.6-cvs1apr2003
>Organization:
titan
>Environment:
macosx "Darwin osterley.ccs.neu.edu 6.4 Darwin Kernel Version 6.4: Wed Jan 29 18:50:42 PST 2003; root:xnu/xnu-344.26.obj~1/RELEASE_PPC  Power Macintosh powerpc" (ppc-macosx) (get-display-depth) = 32
Docs Installed:
("advanced" "beginning" "beginning-abbr" "compiled" "drscheme" "framework" "help" "icons" "insidemz" "intermediate" "intermediate-lambda" "misclib" "mred" "mzc" "mzlib" "mzscheme" "r5rs" "schemeunit" "t-y-scheme" "teachpack" "tex2page" "tools" "tour")
Collections: 
(("/Users/clements/clements/collects" ("badger" "biff" "clements-lib" "contour-letters" "CVS" "homogeneous-vectors" "matrix-arithmetic" "mnemisis" "moshimoshi" "no-brainer" "test-tool" "web-utilities")) ("/Users/clements/plt/collects" (".DS_Store" ".gdb_history" "afm" "algol60" "browser" "compiler" "CVS" "cvs-time-stamp" "defaults" "doc" "drjava" "dromedary" "drscheme" "dynext" "eopl" "errortrace" "framework" "games" "graphics" "help" "hierlist" "htdp" "html" "icons" "lang" "launcher" "libsndfile" "make" "mred" "mrflow" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "readline" "setup" "sirmail" "slatex" "slibinit" "srfi" "srpersist" "stepper" "string-constants" "syntax" "test-suite" "tests" "tex2page" "texpict" "typeset" "version" "waterworld" "web-server" "xml")))
 
Human Language: english
 
Teachpack filenames: ()
Computer Language: (("Professional Languages" "module") (#6(#f write mixed-fraction-e #f #t debug) (default)))
>Description:
I can't QUITE reproduce this.  That is, I think I can reproduce it, but only with the great big xml file I have.  Perhaps I'll attach it to the
bug report.

Anyway, it's a bug related to reflowing with a big XML box, and it's always happened after I hit opt-right-arrow (right one sexp) and then the
forward-delete key.

Here's the stack dump:

Date/Time:  2003-04-02 15:05:06 -0500
OS Version: 10.2.4 (Build 6I32)
Host:       osterley.ccs.neu.edu

Command:    DrScheme
PID:        2605

Exception:  EXC_BAD_ACCESS (0x0001)
Codes:      KERN_PROTECTION_FAILURE (0x0002) at 0x00000034

Thread 0 Crashed:
 #0   0x014b06b4 in wxMediaEdit::MakeSnipset(long, long) (wx_mpriv.cxx:1053)
 #1   0x014b18e0 in wxMediaEdit::CheckFlow(float, wxDC*, float, long, wxSnip*) (wx_mpriv.cxx:1605)
 #2   0x014def7c in wxMediaLine::UpdateFlow(wxMediaLine**, wxMediaEdit*, float, wxDC*) (wx_mline.cxx:861)
 #3   0x014b1af0 in wxMediaEdit::RecalcLines(wxDC*, int) (wx_mpriv.cxx:1806)
 #4   0x014b15fc in wxMediaEdit::CheckRecalc(int, int, int) (wx_mpriv.cxx:1500)
 #5   0x0149ebd0 in wxMediaEdit::ScrollLineLocation(long) (wx_media.cxx:3832)
 #6   0x014c186c in wxMediaCanvas::GetDCAndOffset(float*, float*) (wx_medad.cxx:813)
 #7   0x014b2cf0 in wxMediaEdit::Redraw() (wx_mpriv.cxx:2347)
 #8   0x0149ae9c in wxMediaEdit::_Delete(long, long, int, int) (wx_media.cxx:1935)
 #9   0x014b7630 in ed_deletenext(void*, wxEvent*, void*) (wx_msnip.cxx:969)
 #10  0x014cac78 in wxKeymap::CallFunction(char*, void*, wxEvent*, int) (wx_keym.cxx:972)
 #11  0x014cacb8 in wxKeymap::CallFunction(char*, void*, wxEvent*, int) (wx_keym.cxx:971)
 #12  0x01529c18 in os_wxKeymapCallFunction(int, Scheme_Object**) (wxs_madm.cxx:4324)
 #13  0x002c939c in scheme_do_eval (eval.c:2884)
 #14  0x002d1a74 in top_level_do (fun.c:999)
 #15  0x002d1b7c in scheme_top_level_do (fun.c:1031)
 #16  0x0152a68c in KMCallbackToScheme(void*, wxEvent*, Scheme_Object*) (wxs_madm.cxx:4711)
 #17  0x014cac78 in wxKeymap::CallFunction(char*, void*, wxEvent*, int) (wx_keym.cxx:972)
 #18  0x014ca308 in wxKeymap::ChainHandleKeyEvent(void*, wxKeyEvent*, int (*)(char*, wxKeymap*, void*, wxKeyEvent*, void*), void*, int, int) (wx_keym.cxx:720)
 #19  0x014ca168 in wxKeymap::OtherHandleKeyEvent(void*, wxKeyEvent*, int (*)(char*, wxKeymap*, void*, wxKeyEvent*, void*), void*, int, int) (wx_keym.cxx:669)
 #20  0x014ca374 in wxKeymap::ChainHandleKeyEvent(void*, wxKeyEvent*, int (*)(char*, wxKeymap*, void*, wxKeyEvent*, void*), void*, int, int) (wx_keym.cxx:735)
 #21  0x014ca0c4 in wxKeymap::HandleKeyEvent(void*, wxKeyEvent*) (wx_keym.cxx:648)
 #22  0x015299b0 in os_wxKeymap::HandleKeyEvent(void*, wxKeyEvent*) (wxs_madm.cxx:4209)
 #23  0x014bbc04 in wxMediaBuffer::OnLocalChar(wxKeyEvent*) (wx_mbuf.cxx:228)
 #24  0x0153d160 in os_wxMediaEdit::OnLocalChar(wxKeyEvent*) (wxs_mede.cxx:2829)
 #25  0x01498620 in wxMediaEdit::OnChar(wxKeyEvent*) (wx_media.cxx:541)
 #26  0x0153d510 in os_wxMediaEdit::OnChar(wxKeyEvent*) (wxs_mede.cxx:3028)
 #27  0x014c1534 in wxMediaCanvas::OnChar(wxKeyEvent*) (wx_medad.cxx:694)
 #28  0x01523894 in os_wxMediaCanvasOnChar(int, Scheme_Object**) (wxs_madm.cxx:589)
 #29  0x002c939c in scheme_do_eval (eval.c:2884)
 #30  0x002d45ac in scheme_dynamic_wind (fun.c:2579)
 #31  0x002d42d8 in dynamic_wind (fun.c:2492)
 #32  0x002c939c in scheme_do_eval (eval.c:2884)
 #33  0x002d3404 in call_with_values (fun.c:1932)
 #34  0x002c939c in scheme_do_eval (eval.c:2884)
 #35  0x002d45ac in scheme_dynamic_wind (fun.c:2579)
 #36  0x002d42d8 in dynamic_wind (fun.c:2492)
 #37  0x002c939c in scheme_do_eval (eval.c:2884)
 #38  0x002d35bc in do_call_ec (fun.c:2015)
 #39  0x002d45ac in scheme_dynamic_wind (fun.c:2579)
 #40  0x002c939c in scheme_do_eval (eval.c:2884)
 #41  0x002c9e00 in scheme_do_eval (eval.c:3354)
 #42  0x002d1a74 in top_level_do (fun.c:999)
 #43  0x002d1b7c in scheme_top_level_do (fun.c:1031)
 #44  0x01523008 in os_wxMediaCanvas::OnChar(wxKeyEvent*) (wxs_madm.cxx:268)
 #45  0x014c48fc in wxApp::doMacKeyUpDown(int) (wx_app.cc:722)
 #46  0x01491f8c in MrEdDispatchEvent(EventRecord*) (mredmac.cxx:1080)
 #47  0x0148d004 in GoAhead(MrEdContext*) (mred.cxx:1015)
 #48  0x0148d1ac in DoTheEvent(MrEdContext*) (mred.cxx:1065)
 #49  0x0148d3b8 in MrEdDoNextEvent(MrEdContext*, int (*)(void*), void*, Scheme_Object*) (mred.cxx:1123)
 #50  0x0148de9c in wxDispatchEventsUntilWaitable(int (*)(void*), void*, Scheme_Object*) (mred.cxx:1522)
 #51  0x0148ccec in mred_wait_eventspace() (mred.cxx:913)
 #52  0x000021c0 in yield_indefinitely() (mrmain.cxx:81)
 #53  0x000029a8 in finish_cmd_line_run(FinishArgs*, void (*)(Scheme_Env*)) (mrmain.cxx:300)
 #54  0x0148ffa8 in MrEdApp::RealInit() (mred.cxx:3040)
 #55  0x0148d890 in handle_events(void*, int, Scheme_Object**) (mred.cxx:1285)
 #56  0x002c97d0 in scheme_do_eval (eval.c:3069)
 #57  0x002d1a74 in top_level_do (fun.c:999)
 #58  0x002d1b7c in scheme_top_level_do (fun.c:1031)
 #59  0x00331c70 in start_child (thread.c:1727)
 #60  0x00331d98 in make_subprocess (thread.c:1774)
 #61  0x003322fc in scheme_thread_w_custodian_killkind (thread.c:1989)
 #62  0x0148ddb4 in wxDoEvents() (mred.cxx:1494)
 #63  0x014c3800 in wxApp::MainLoop() (wx_app.cc:130)
 #64  0x00003a0c in do_main_loop(FinishArgs*) (mrmain.cxx:199)
 #65  0x0148fde4 in MrEdApp::OnInit() (mred.cxx:2980)
 #66  0x014ac968 in wxEntry(int, char**) (wx_main.cc:80)
 #67  0x00003c7c in main
 #68  0x00001f2c in _start (crt.c:267)
 #69  0x00001dac in start

Thread 1:
 #0   0x900257ac in select
 #1   0x901618f0 in __CFSocketManager
 #2   0x90020d48 in _pthread_body

Thread 2:
 #0   0x90000e2c in read
 #1   0x014920cc in do_watch(void*) (mredmac.cxx:1142)
 #2   0x90020d48 in _pthread_body

PPC Thread State:
  srr0: 0x014b06b4 srr1: 0x0200f030                vrsave: 0x00000000
   xer: 0x20000000   lr: 0x014b0688  ctr: 0x014de504   mq: 0x00000000
    r0: 0x0000006b   r1: 0xbfffacc0   r2: 0x00000000   r3: 0x08e32640
    r4: 0x08e32640   r5: 0x00000000   r6: 0xbfffad00   r7: 0x014de510
    r8: 0x001b7ed8   r9: 0x00000069  r10: 0x00000069  r11: 0x08e32640
   r12: 0x014de504  r13: 0x00000000  r14: 0x00379198  r15: 0x00000000
   r16: 0x00000068  r17: 0x00377fd8  r18: 0x00000001  r19: 0x00000001
   r20: 0x0376c1c4  r21: 0x015d9d10  r22: 0x02dced00  r23: 0x00000001
   r24: 0x01611624  r25: 0x00000069  r26: 0x00000001  r27: 0x037ea1a4
   r28: 0x0376c1c4  r29: 0x00000000  r30: 0x00000069  r31: 0x014b1624

>How-To-Repeat:
I'm going to spend 5 minutes trying to reproduce this bug in the debugger, then I'm going to give up and attach my great big xml file, with
instructions on how to reproduce it.
>Fix:

>Release-Note:

>Audit-Trail:
Responsible-Changed-From-To: steck->mflatt
Responsible-Changed-By: mflatt
Responsible-Changed-When: Wed Apr  2 18:45:27 2003
Responsible-Changed-Why:
    mr
State-Changed-From-To: open->closed
State-Changed-By: mflatt
State-Changed-When: Wed Apr  2 18:45:27 2003
State-Changed-Why:
    fixed
>Unformatted:
 
