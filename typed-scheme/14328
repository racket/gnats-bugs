From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Wed Jan 29 20:49:28 2014
Received: from mail-oa0-f46.google.com (mail-oa0-f46.google.com [209.85.219.46])
	by winooski.ccs.neu.edu (8.14.7/8.14.7) with ESMTP id s0U1nRB8029008
	for <bugs@bugs.plt-scheme.org>; Wed, 29 Jan 2014 20:49:28 -0500
Message-Id: <201401300149.s0U1nQIQ029001@winooski.ccs.neu.edu>
Date: Wed, 29 Jan 2014 20:49:26 -0500
From: eric.n.dobson@gmail.com
To: bugs@racket-lang.org
Subject: Struct contracts in TR do not correctly protect polymorphic fields of sub struct types

>Number:         14328
>Category:       typed-scheme
>Synopsis:       Struct contracts in TR do not correctly protect polymorphic fields of sub struct types
>Class:          sw-bug
>Responsible:    samth
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Wed Jan 29 20:52:01 -0500 2014
>Last-Modified:  Wed Feb 05 14:51:51 -0500 2014
>Originator:     Eric Dobson
>Organization:
plt
>Submitter-Id:   unknown
>Release:        HEAD
>Environment:
MacIntel / Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/33.0.1750.27 Safari/537.36
>Description:
Super struct types of polymorphic struct types that are invariant in there type variables are similar to VectorTop, and need to protect these fields from write access.
>How-To-Repeat:
#lang racket/load


(module m typed/racket
  (provide a b f bar-v)

  (struct: foo ())
  (struct: (A) bar foo ([v : (Boxof A)]))

  (: a (bar #f))
  (define a (bar (box #f)))
  (: b foo)
  (define b a)

  (: f (-> #f))
  (define (f)
    (unbox (bar-v a))))

(require 'm)

(set-box! (bar-v b) #t)
(displayln (f))
>Fix:
