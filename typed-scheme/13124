From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Wed Sep 19 20:41:17 2012
Received: from mail-ie0-f172.google.com (mail-ie0-f172.google.com [209.85.223.172])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id q8K0fCh0024520
	for <bugs@bugs.plt-scheme.org>; Wed, 19 Sep 2012 20:41:13 -0400
Message-Id: <201209200041.q8K0f9Dd024500@champlain.ccs.neu.edu>
Date: Wed, 19 Sep 2012 20:41:09 -0400
From: neil.toronto@gmail.com
To: bugs@racket-lang.org
Subject: Internal function definition seems to make TR's inferencer really stupid

>Number:         13124
>Category:       typed-scheme
>Synopsis:       Internal function definition seems to make TR's inferencer really stupid
>Class:          sw-bug
>Responsible:    asumu
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Wed Sep 19 20:44:02 -0400 2012
>Closed-Date:    Tue Mar 11 23:04:28 -0400 2014
>Last-Modified:  Tue Mar 11 23:04:28 -0400 2014
>Originator:     Neil Toronto
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.3.0.20--2012-09-13(32bf0ad1/d)
>Environment:
unix "Linux schroder 2.6.38-15-generic #66-Ubuntu SMP Tue Aug 14 17:24:44 UTC 2012 x86_64 x86_64 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 511178952
Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()


Collections:
("/home/neil/.racket/5.3.0.20/collects"
 (non-existent-path))
("/home/neil/plt-math/collects"
 ("wxme" "texpict" "compiler" "typed" "games" "algol60" "browser" "file" "readline" "dynext" "scribblings" "mzcom" "compatibility" "trace" "profile" "data" "sirmail" "json" "parser-tools" "math" "tex2page" "scriblib" "swindle" "schemeunit" "r6rs" "xrepl" "mzlib" "handin-client" "repo-time-stamp" "mysterx" "mrlib" "scheme" "combinator-parser" "html" "test-engine" "version" ".gitignore" "make" "ffi" "mzscheme" "picturing-programs" "hierlist" "teachpack" "at-exp" "lazy" "scribble" "openssl" "defaults" "racket" "handin-server" "2htdp" "drscheme" "help" "eopl" "racklog" "drracket" "icons" "db" "errortrace" "preprocessor" "rackunit" "rnrs" "string-constants" "meta" "slatex" "graphics" "redex" "reader" "plai" "honu" "config" "stepper" "frtime" "unstable" "r5rs" "planet" "tests" "s-exp" "embedded-gui" "info-domain" "syntax" "launcher" "typed-scheme" "syntax-color" "srfi" "test-box-recovery" "xml" "images" "future-visualizer" "plot" "datalog" "sgl" "htdp" "setup" "lang" "raco" "gui-d!
 ebugger" "framework" "web-server" "deinprogramm" "slideshow" "macro-debugger" "typed-racket" "net" "mred"))

Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t none) (default) #() "#lang racket\n" #t #f ((main) (test))))
>Description:
>How-To-Repeat:
#lang typed/racket/base

(: foo (-> Flonum))
(define (foo)
  (: bn (Flonum -> Flonum))
  (define (bn n)
    (cond [(= n 0.0)  1.0]
          [else (let loop ([s  0.0] [i  0.0])
                  (cond [(i . < . n) (loop (+ s (bn i)) (+ i 1.0))]
                        [else  s]))]))
  (define v 0.0)
  v)


Type Checker: insufficient type information to typecheck. please add more type annotations in: v
>Fix:
>Audit-Trail:
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: neil.toronto@gmail.com, bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/13124: Internal function definition seems to make TR's inferencer really stupid
Date: Wed, 19 Sep 2012 21:12:48 -0400

 It is curious that this 
 
 #lang typed/racket/base
 
 (: foo (-> Flonum))
 (define (foo)
  (: bn (Flonum -> Flonum))
  (define v 0.0) ;; <-- reverse order of declaration 
  (define (bn n)
    (cond [(= n 0.0)  1.0]
          [else (let loop ([s  0.0] [i  0.0])
                  (cond [(i . < . n) (loop (+ s (bn i)) (+ i 1.0))]
                        [else  s]))]))
  v)
 
 works. 
 
 
 On Sep 19, 2012, at 8:44 PM, neil.toronto@gmail.com wrote:
 
 > A new problem report is waiting at
 >  http://bugs.racket-lang.org/query/?cmd=view&pr=13124
 > 
 > Reported by Neil Toronto for release: 5.3.0.20--2012-09-13(32bf0ad1/d)
 > 
 > *** Description:
 > 
 > 
 > *** How to repeat:
 > #lang typed/racket/base
 > 
 > (: foo (-> Flonum))
 > (define (foo)
 >  (: bn (Flonum -> Flonum))
 >  (define (bn n)
 >    (cond [(= n 0.0)  1.0]
 >          [else (let loop ([s  0.0] [i  0.0])
 >                  (cond [(i . < . n) (loop (+ s (bn i)) (+ i 1.0))]
 >                        [else  s]))]))
 >  (define v 0.0)
 >  v)
 > 
 > 
 > Type Checker: insufficient type information to typecheck. please add more type annotations in: v
 > 
 > *** Environment:
 > unix "Linux schroder 2.6.38-15-generic #66-Ubuntu SMP Tue Aug 14 17:24:44 UTC 2012 x86_64 x86_64 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
 > Human Language: english
 > (current-memory-use) 511178952
 > Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()
 > 
 > 
 > Collections:
 > ("/home/neil/.racket/5.3.0.20/collects"
 > (non-existent-path))
 > ("/home/neil/plt-math/collects"
 > ("wxme" "texpict" "compiler" "typed" "games" "algol60" "browser" "file" "readline" "dynext" "scribblings" "mzcom" "compatibility" "trace" "profile" "data" "sirmail" "json" "parser-tools" "math" "tex2page" "scriblib" "swindle" "schemeunit" "r6rs" "xrepl" "mzlib" "handin-client" "repo-time-stamp" "mysterx" "mrlib" "scheme" "combinator-parser" "html" "test-engine" "version" ".gitignore" "make" "ffi" "mzscheme" "picturing-programs" "hierlist" "teachpack" "at-exp" "lazy" "scribble" "openssl" "defaults" "racket" "handin-server" "2htdp" "drscheme" "help" "eopl" "racklog" "drracket" "icons" "db" "errortrace" "preprocessor" "rackunit" "rnrs" "string-constants" "meta" "slatex" "graphics" "redex" "reader" "plai" "honu" "config" "stepper" "frtime" "unstable" "r5rs" "planet" "tests" "s-exp" "embedded-gui" "info-domain" "syntax" "launcher" "typed-scheme" "syntax-color" "srfi" "test-box-recovery" "xml" "images" "future-visualizer" "plot" "datalog" "sgl" "htdp" "setup" "lang" "raco" "gui-d!
 > ebugger" "framework" "web-server" "deinprogramm" "slideshow" "macro-debugger" "typed-racket" "net" "mred"))
 > 
 > Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t none) (default) #() "#lang racket\n" #t #f ((main) (test))))
 > 
 
 
From: Neil Toronto <neil.toronto@gmail.com>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/13124: Internal function definition seems to
 make TR's inferencer really stupid
Date: Wed, 19 Sep 2012 19:20:11 -0600

 On 09/19/2012 07:12 PM, Matthias Felleisen wrote:
 >
 > It is curious that this
 >
 > #lang typed/racket/base
 >
 > (: foo (-> Flonum))
 > (define (foo)
 >   (: bn (Flonum -> Flonum))
 >   (define v 0.0) ;; <-- reverse order of declaration
 >   (define (bn n)
 >     (cond [(= n 0.0)  1.0]
 >           [else (let loop ([s  0.0] [i  0.0])
 >                   (cond [(i . < . n) (loop (+ s (bn i)) (+ i 1.0))]
 >                         [else  s]))]))
 >   v)
 >
 > works.
 
 It is. From other error messages I've seen in the actual program I'm 
 working on, it looks like TR is giving everything after `bn' the type (U 
 Undefined A), where `A' is its usual type.
 
 BTW, here's a simpler failing test case:
 
 #lang typed/racket
 
 (: foo (-> Integer))
 (define (foo)
    (: bn (Integer -> Integer))
    (define (bn n) (if (= n 0) 1 (bn (- n 1))))
    (define v 1)
    0)
 
 
 Neil âŠ¥
 

Responsible changed from "samth" to "asumu" by asumu@racket-lang.org at Tue, 11 Mar 2014 23:04:28 -0400
Reason>>> A commit by asumu@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/bdb8833fa5
State changed from "open" to "closed" by asumu@racket-lang.org at Tue, 11 Mar 2014 23:04:28 -0400
Reason>>> A commit by asumu@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/bdb8833fa5
  | Improve letrec-values type-checking
  | 
  | Split into two passes in order to be able to find
  | more cases where the RHS doesn't refer to the bindings
  | in the letrec.
  | 
  | Closes PR 13124

