From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Mon Mar 23 22:01:09 2009
Received: from mail-qy0-f130.google.com (mail-qy0-f130.google.com [209.85.221.130])
	by champlain.ccs.neu.edu (8.14.2/8.14.2) with ESMTP id n2O211ur000563
	for <bugs@bugs.plt-scheme.org>; Mon, 23 Mar 2009 22:01:01 -0400
Message-Id: <200903240200.n2O20s42000556@champlain.ccs.neu.edu>
Date: Mon, 23 Mar 2009 22:00:54 -0400
From: pocmatos@gmail.com
To: bugs@plt-scheme.org
Subject: typed-scheme doesn't recognize struct patterns in match when using type-alias

>Number:         10153
>Category:       typed-scheme
>Synopsis:       typed-scheme doesn't recognize struct patterns in match when using type-alias
>Class:          sw-bug
>Responsible:    samth
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Mon Mar 23 22:04:01 -0400 2009
>Closed-Date:    Wed Jul 29 20:19:47 -0400 2015
>Last-Modified:  Wed Jul 29 20:19:47 -0400 2015
>Originator:     Paulo Matos
>Organization:
plt
>Submitter-Id:   unknown
>Release:        4.1.4
>Environment:
unix "Linux drhelper 2.6.25-gentoo-r7 #1 SMP Wed Oct 29 19:02:48 GMT 2008 x86_64 Intel(R) Pentium(R) D CPU 3.20GHz GenuineIntel GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 24
Human Language: english
(current-memory-use) 252383800

Collections:
(("/home/pmatos/.plt-scheme/4.1.4/collects" non-existent-path) ("/usr/local/plt/plt-4.1.4/lib/plt/collects" "string-constants" "stepper" "srfi" "redex" "mzcom" "htdch" "xml" "ffi" "s-exp" "sgl" "texpict" "openssl" "gui-debugger" "lang" "2htdp" "framework" "help" "tests" "syntax" "test-engine" "parser-tools" "preprocessor" "plot" "icons" "dynext" "algol60" "config" "wxme" "swindle" "mysterx" "r6rs" "web-server" "macro-debugger" "net" "hierlist" "frtime" "launcher" "errortrace" "readline" "test-box-recovery" "games" "trace" "typed-scheme" "rnrs" "graphics" "profj" "make" "tex2page" "scribblings" "teachpack" "setup" "combinator-parser" "slideshow" "defaults" "scheme" "mzscheme" "r5rs" "embedded-gui" "planet" "version" "drscheme" "mred" "htdp" "syntax-color" "typed" "scribble" "browser" "slatex" "afm" "mzlib" "file" "info-domain" "lazy" "html" "mrlib" "compiler" "eopl"))
Computer Language: (("Module") (#(#t write mixed-fraction-e #f #t debug) (default) #() "#lang scheme\n" #t))
>Description:
typed-scheme doesn't seem to recognize struct patterns when they are part of a 'bigger' type. Check the example in 'steps to reproduce' for a better idea of what's happening.
>How-To-Repeat:
Check the following program:
#lang typed-scheme

(require scheme/match)

(define-type-alias mytypes (U foobar foo bar))

(define-struct: foobar
  ((useless : Integer)))

(define-struct: foo
  ((name : Symbol)))

(define-struct: (bar foo)
  ((val : String)))

(: match-bug (mytypes -> Void))
(define (match-bug f)
  (match f
    ((struct foobar (i))
     (display i))
    ((struct foo _)
     (printf "Name : ~a\n" (foo-name f))
     (when (bar? f)
       (printf "Val : ~a\n" (bar-val f))))))

Running it returns:
typecheck: Wrong function argument type, expected foo, got mytypes for argument 1 in: f

even though it is pretty obvious f in that case is a foo.

Besides, the following works so I don't where the issue lies:
#lang typed-scheme

(require scheme/match)

(define-struct: foo
  ((name : Symbol)))

(define-struct: (bar foo)
  ((val : String)))

(: match-bug (foo -> Void))
(define (match-bug f)
  (match f
    ((struct foo _)
     (printf "Name : ~a\n" (foo-name f))
     (when (bar? f)
       (printf "Val : ~a\n" (bar-val f))))))
>Fix:
>Audit-Trail:
From: samth

Here's the actual problem:

#lang typed/racket

(let: ([x : Any 1])
      (let ([y x])
        (if (number? y)
            (add1 x)
            0)))

This requires adding multiple objects, so that when `y' is referenced, it's like referencing `x' as well.

State changed from "open" to "closed" by samth at Wed, 29 Jul 2015 20:19:47 -0400
Reason>>> fixed (by let-aliasing)

