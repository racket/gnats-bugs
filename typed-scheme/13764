From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Sun May 19 19:29:14 2013
Received: from mail-ob0-f178.google.com (mail-ob0-f178.google.com [209.85.214.178])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id r4JNTApK021376
	for <bugs@bugs.plt-scheme.org>; Sun, 19 May 2013 19:29:10 -0400
Message-Id: <201305192329.r4JNT4hN021367@champlain.ccs.neu.edu>
Date: Sun, 19 May 2013 19:29:04 -0400
From: asumu@ccs.neu.edu
To: bugs@racket-lang.org
Subject: Typed Racket support of bytes is broken (mutability)

>Number:         13764
>Category:       typed-scheme
>Synopsis:       Typed Racket support of bytes is broken (mutability)
>Class:          sw-bug
>Responsible:    samth
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Sun May 19 19:32:01 -0400 2013
>Last-Modified:  Sat Jul 20 16:42:56 -0400 2013
>Originator:     Asumu Takikawa
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.3.4.10--2013-05-15(a3d4305d/d)
>Environment:
unix "Linux howl 3.2.0-3-amd64 #1 SMP Mon Jul 23 02:45:17 UTC 2012 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 1544303844
Links: (links) = ("terminal-color" "webapi-markdown" "wffi" "Acquire" "drracket-vim-tool" "gist" "formica" "gist-tool" "clojure"); (links #:user? #f) = (); (links #:root? #t) = (#<path:/home/asumu/plt/racket-git/add-on/pkgs/installed/taglib>); (links #:user? #f #:root? #t) = ()
raco pkg (show):
Installation-wide:
 [none]
User-specific, all-version:
 Package[*=auto]    Checksum                                    Source
 taglib             54e10203115aa2901e00da60e0cc25ed2043a1a4    (catalog taglib)
User-specific, version-specific (5.3.4.10):
 [none]



Collections:
("/home/asumu/plt/racket-git/add-on/5.3.4.10/collects"
 (non-existent-path))
("/home/asumu/plt/racket-git/collects"
 ("typed" "realm" "rnrs" "plot" "version" "frtime" "pict" "compiler" "framework" "honu" "gui-debugger" "launcher" "srfi" "drscheme" "2htdp" "ffi" "datalog" "math" "plai" "racklog" "compatibility" "scheme" "config" "profile" "algol60" "texpict" "dynext" "errortrace" "db" "mzlib" "make" "file" "sgl" "xrepl" "syntax" "slatex" "browser" "macro-debugger" "xml" "data" "at-exp" "trace" "r6rs" "syntax-color" "web-server" "graphics" "teachpack" "defaults" "racket" "lang" "openssl" "r5rs" "redex" "unstable" "deinprogramm" "mzcom" ".gitignore" "mred" "icons" "htdp" "drracket" "html" "readline" "test-engine" "pkg" "mysterx" "typed-scheme" "reader" "repo-time-stamp" "games" "string-constants" "typed-racket" "hierlist" "net" "slideshow" "swindle" "schemeunit" "picturing-programs" "meta" "info-domain" "eopl" "setup" "future-visualizer" "tests" "rackunit" "scriblib" "json" "mrlib" "scribble" "mzscheme" "lazy" "preprocessor" "planet" "images" "help" "wxme" "s-exp" "raco" "parser-tools" "step!
 per" "scribblings" "embedded-gui"))

Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((main) (test))))
>Description:
Consider the following program:

  #lang racket
  (bytes->immutable-bytes (make-bytes 5))
  (bytes-set! (bytes->immutable-bytes (make-bytes 5)) 3 0)

It should fail to type-check, since the bytes-set! operation
only works on mutable bytestrings. It results in a contract
violation:

bytes-set!: contract violation
  expected: (and/c bytes? (not/c immutable?))
  given: #"\0\0\0\0\0"
  argument position: 1st
  other arguments...:
   3
   0
>How-To-Repeat:
>Fix:
>Audit-Trail:
From: Eric Dobson <eric.n.dobson@gmail.com>
To: Asumu Takikawa <asumu@ccs.neu.edu>, bugs <bugs@racket-lang.org>
Cc: nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/13764: Typed Racket support of bytes is broken (mutability)
Date: Sun, 19 May 2013 17:11:52 -0700

 I thought this was a known design decision just like supporting (first
 null). The issue is also applicable to strings and hashes.
 
 On Sun, May 19, 2013 at 4:32 PM,  <asumu@ccs.neu.edu> wrote:
 > A new problem report is waiting at
 >   http://bugs.racket-lang.org/query/?cmd=view&pr=13764
 >
 > Reported by Asumu Takikawa for release: 5.3.4.10--2013-05-15(a3d4305d/d)
 >
 > *** Description:
 > Consider the following program:
 >
 >   #lang racket
 >   (bytes->immutable-bytes (make-bytes 5))
 >   (bytes-set! (bytes->immutable-bytes (make-bytes 5)) 3 0)
 >
 > It should fail to type-check, since the bytes-set! operation
 > only works on mutable bytestrings. It results in a contract
 > violation:
 >
 > bytes-set!: contract violation
 >   expected: (and/c bytes? (not/c immutable?))
 >   given: #"\0\0\0\0\0"
 >   argument position: 1st
 >   other arguments...:
 >    3
 >    0
 >
 > *** How to repeat:
 >
 >
 > *** Environment:
 > unix "Linux howl 3.2.0-3-amd64 #1 SMP Mon Jul 23 02:45:17 UTC 2012 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
 > Human Language: english
 > (current-memory-use) 1544303844
 > Links: (links) = ("terminal-color" "webapi-markdown" "wffi" "Acquire" "drracket-vim-tool" "gist" "formica" "gist-tool" "clojure"); (links #:user? #f) = (); (links #:root? #t) = (#<path:/home/asumu/plt/racket-git/add-on/pkgs/installed/taglib>); (links #:user? #f #:root? #t) = ()
 > raco pkg (show):
 > Installation-wide:
 >  [none]
 > User-specific, all-version:
 >  Package[*=auto]    Checksum                                    Source
 >  taglib             54e10203115aa2901e00da60e0cc25ed2043a1a4    (catalog taglib)
 > User-specific, version-specific (5.3.4.10):
 >  [none]
 >
 >
 >
 > Collections:
 > ("/home/asumu/plt/racket-git/add-on/5.3.4.10/collects"
 >  (non-existent-path))
 > ("/home/asumu/plt/racket-git/collects"
 >  ("typed" "realm" "rnrs" "plot" "version" "frtime" "pict" "compiler" "framework" "honu" "gui-debugger" "launcher" "srfi" "drscheme" "2htdp" "ffi" "datalog" "math" "plai" "racklog" "compatibility" "scheme" "config" "profile" "algol60" "texpict" "dynext" "errortrace" "db" "mzlib" "make" "file" "sgl" "xrepl" "syntax" "slatex" "browser" "macro-debugger" "xml" "data" "at-exp" "trace" "r6rs" "syntax-color" "web-server" "graphics" "teachpack" "defaults" "racket" "lang" "openssl" "r5rs" "redex" "unstable" "deinprogramm" "mzcom" ".gitignore" "mred" "icons" "htdp" "drracket" "html" "readline" "test-engine" "pkg" "mysterx" "typed-scheme" "reader" "repo-time-stamp" "games" "string-constants" "typed-racket" "hierlist" "net" "slideshow" "swindle" "schemeunit" "picturing-programs" "meta" "info-domain" "eopl" "setup" "future-visualizer" "tests" "rackunit" "scriblib" "json" "mrlib" "scribble" "mzscheme" "lazy" "preprocessor" "planet" "images" "help" "wxme" "s-exp" "raco" "parser-tools" "step!
 >  per" "scribblings" "embedded-gui"))
 >
 > Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((main) (test))))
 >
 
From: Asumu Takikawa <asumu@ccs.neu.edu>
To: Eric Dobson <eric.n.dobson@gmail.com>
Cc: bugs <bugs@racket-lang.org>, nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/13764: Typed Racket support of bytes is broken
 (mutability)
Date: Sun, 19 May 2013 20:30:44 -0400

 On 2013-05-19 17:11:52 -0700, Eric Dobson wrote:
 > I thought this was a known design decision just like supporting (first
 > null). The issue is also applicable to strings and hashes.
 
 Maybe, but I didn't find a record of that in the bug database (e.g., on
 your PR 11627, which is related). I'm guessing it's easier to support
 immutable bytes than it is to make (first null) a type error though.
 
 Cheers,
 Asumu
From: Sam Tobin-Hochstadt <samth@ccs.neu.edu>
To: Asumu Takikawa <asumu@ccs.neu.edu>
Cc: Eric Dobson <eric.n.dobson@gmail.com>, bugs <bugs@racket-lang.org>,
        nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/13764: Typed Racket support of bytes is broken (mutability)
Date: Sun, 19 May 2013 23:03:58 -0700

 On Sun, May 19, 2013 at 5:30 PM, Asumu Takikawa <asumu@ccs.neu.edu> wrote:
 > On 2013-05-19 17:11:52 -0700, Eric Dobson wrote:
 >> I thought this was a known design decision just like supporting (first
 >> null). The issue is also applicable to strings and hashes.
 >
 > Maybe, but I didn't find a record of that in the bug database (e.g., on
 > your PR 11627, which is related). I'm guessing it's easier to support
 > immutable bytes than it is to make (first null) a type error though.
 
 
 I think it's somewhere in-between.  Right now, Eric is right, this is
 just an allowed dynamic error like (first null) or (open-input-file
 "doesnt-exist"). But a general refactoring of types to take better
 account of mutability would be (a) a good idea and (b) easier than
 making (first null) an error.
 
 Sam
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Asumu Takikawa <asumu@ccs.neu.edu>
Cc: Eric Dobson <eric.n.dobson@gmail.com>, bugs <bugs@racket-lang.org>,
        nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/13764: Typed Racket support of bytes is broken (mutability)
Date: Tue, 21 May 2013 02:48:47 +0300

 The real problem is that we don't have a list of run-time errors that the type system allows/disallows. 
 
 Compiling such a list would be an invaluable service but may not be truly possible. -- Matthias
 
 
 
 
 
 On May 20, 2013, at 3:30 AM, Asumu Takikawa wrote:
 
 > On 2013-05-19 17:11:52 -0700, Eric Dobson wrote:
 >> I thought this was a known design decision just like supporting (first
 >> null). The issue is also applicable to strings and hashes.
 > 
 > Maybe, but I didn't find a record of that in the bug database (e.g., on
 > your PR 11627, which is related). I'm guessing it's easier to support
 > immutable bytes than it is to make (first null) a type error though.
 > 
 > Cheers,
 > Asumu
 
 
From: Eric Dobson <eric.n.dobson@gmail.com>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: Asumu Takikawa <asumu@ccs.neu.edu>, bugs <bugs@racket-lang.org>,
        nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/13764: Typed Racket support of bytes is broken (mutability)
Date: Mon, 20 May 2013 17:04:39 -0700

 Well we might not be able to make a complete list, but we would be
 able to say that certain ones are suppossed to be allowed versus
 others are bugs. So I think even an incomplete one would be useful.
 
 On Mon, May 20, 2013 at 4:48 PM, Matthias Felleisen
 <matthias@ccs.neu.edu> wrote:
 >
 >
 > The real problem is that we don't have a list of run-time errors that the type system allows/disallows.
 >
 > Compiling such a list would be an invaluable service but may not be truly possible. -- Matthias
 >
 >
 >
 >
 >
 > On May 20, 2013, at 3:30 AM, Asumu Takikawa wrote:
 >
 >> On 2013-05-19 17:11:52 -0700, Eric Dobson wrote:
 >>> I thought this was a known design decision just like supporting (first
 >>> null). The issue is also applicable to strings and hashes.
 >>
 >> Maybe, but I didn't find a record of that in the bug database (e.g., on
 >> your PR 11627, which is related). I'm guessing it's easier to support
 >> immutable bytes than it is to make (first null) a type error though.
 >>
 >> Cheers,
 >> Asumu
 >
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Eric Dobson <eric.n.dobson@gmail.com>
Cc: Asumu Takikawa <asumu@ccs.neu.edu>, bugs <bugs@racket-lang.org>,
        nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/13764: Typed Racket support of bytes is broken (mutability)
Date: Tue, 21 May 2013 10:00:48 -0400

 Do you want to give it a try and circulate it, starting with the TR folks? 
 
 
 On May 20, 2013, at 8:04 PM, Eric Dobson <eric.n.dobson@gmail.com> wrote:
 
 > Well we might not be able to make a complete list, but we would be
 > able to say that certain ones are suppossed to be allowed versus
 > others are bugs. So I think even an incomplete one would be useful.
 > 
 > On Mon, May 20, 2013 at 4:48 PM, Matthias Felleisen
 > <matthias@ccs.neu.edu> wrote:
 >> 
 >> 
 >> The real problem is that we don't have a list of run-time errors that the type system allows/disallows.
 >> 
 >> Compiling such a list would be an invaluable service but may not be truly possible. -- Matthias
 >> 
 >> 
 >> 
 >> 
 >> 
 >> On May 20, 2013, at 3:30 AM, Asumu Takikawa wrote:
 >> 
 >>> On 2013-05-19 17:11:52 -0700, Eric Dobson wrote:
 >>>> I thought this was a known design decision just like supporting (first
 >>>> null). The issue is also applicable to strings and hashes.
 >>> 
 >>> Maybe, but I didn't find a record of that in the bug database (e.g., on
 >>> your PR 11627, which is related). I'm guessing it's easier to support
 >>> immutable bytes than it is to make (first null) a type error though.
 >>> 
 >>> Cheers,
 >>> Asumu
 >> 
 
 

