From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Thu Oct 23 18:23:28 2008
Received: from rv-out-0506.google.com (rv-out-0506.google.com [209.85.198.229])
	by champlain.ccs.neu.edu (8.14.2/8.14.2) with ESMTP id m9NMNIQn031253
	for <bugs@bugs.plt-scheme.org>; Thu, 23 Oct 2008 18:23:19 -0400
Message-Id: <200810232223.m9NMNGHI031246@champlain.ccs.neu.edu>
Date: Thu, 23 Oct 2008 18:23:16 -0400
From: clements@brinckerhoff.org
To: bugs@plt-scheme.org
Subject: typed scheme + match failure?

>Number:         9862
>Category:       typed-scheme
>Synopsis:       typed scheme + match failure?
>Class:          sw-bug
>Responsible:    samth
>Severity:       serious
>Priority:       medium
>State:          suspended
>Confidential:   no
>Arrival-Date:   Thu Oct 23 18:24:01 -0400 2008
>Closed-Date:    
>Last-Modified:  Thu Aug 25 11:56:21 -0400 2011
>Originator:     John Clements
>Organization:
plt
>Submitter-Id:   unknown
>Release:        4.1.1.3-svn21oct2008
>Environment:
macosx "Darwin computer.csc.calpoly.edu 9.5.0 Darwin Kernel Version 9.5.0: Wed Sep  3 11:31:44 PDT 2008; root:xnu-1228.7.58~1/RELEASE_PPC Power Macintosh" (ppc-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 111142892

Collections:
(("/Users/clements/svn/clements/collects" ".svn" "badger" "clements-lib" "contour-letters" "file-size-checker" "gnucash" "info-domain" "iTunes-helper" "java-helpers" "jbc-gnucash" "matrix-arithmetic" "mboxrd-read" "mnemisis" "no-brainer" "profj-auto-runner" "projector" "shelly" "single-stepper" "smootxes" "template-tester" "txomp" "web-utilities") ("/Users/clements/clements/matthias/collects" "info-domain" "web") ("/Users/clements/Library/PLT Scheme/4.1.1.3/collects" non-existent-path) ("/Users/clements/plt/collects" ".svn" "afm" "algol60" "browser" "combinator-parser" "compiler" "config" "defaults" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "planet" "plo!
 t" "preprocessor" "profj" "profjWizard" "r5rs" "r6rs" "readline" "redex" "repos-time-stamp" "rnrs" "s-exp" "scheme" "scribble" "scribblings" "setup" "sgl" "sirmail" "slatex" "slideshow" "srfi" "srpersist" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tests" "tex2page" "texpict" "trace" "typed-scheme" "version" "waterworld" "web-server" "wxme" "xml"))
Computer Language: (("Module") (#(#t write mixed-fraction-e #f #t debug) (default) #() "#lang scheme\n"))
>Description:
This may be a change request or a duplicate bug, sorry...

Typed scheme doesn't seem to use its knowledge correctly in the presence of
'match'; in particular, it appears to me that the code below should
typecheck.

No?
>How-To-Repeat:
Evaluate this program:

#lang typed-scheme

(require scheme/match)

(: f ((List Number String) -> Number))
(define (f l)
  (match l
    [(list a b) a]
    [else "abc"]))

(f '(3 "abc"))

This signals the error:

typecheck: Expected Number, but got String in: "abc"
>Fix:
>Audit-Trail:
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: clements@brinckerhoff.org, bugs@plt-scheme.org
Cc: nobody@plt-scheme.org, eli@plt-scheme.org, matthias@plt-scheme.org,
        sk@plt-scheme.org, mflatt@plt-scheme.org, robby@plt-scheme.org,
        clements@plt-scheme.org, jay@plt-scheme.org, meunier@plt-scheme.org,
        kathyg@plt-scheme.org, jacobm@plt-scheme.org, cce@plt-scheme.org,
        samth@plt-scheme.org, ryanc@plt-scheme.org, gcooper@plt-scheme.org,
        sstrickl@plt-scheme.org
Subject: Re: [plt-bug] all/9862: typed scheme + match failure?
Date: Thu, 23 Oct 2008 20:05:25 -0400

 Sam, this belongs into a faq. Start it now.
 
 
 John, you're too much of a Schemer, not enough of a Typist.
 
 no typed language allows you to have an extra additional conditional  
 branch that returns the wrong type of value. I don't know whether it  
 is possible to exhaustively match a datatype in ML PLUS add an else  
 clause, but even if you could, the else clause would have to have the  
 type that the conditional must have (due to the expected return type).
 
 So delete the last line from your program (the call) and think about  
 the idea of type checking.
 
 Having said that, also look at this program:
 
 > #lang typed-scheme
 >
 >
 > (: f (Number -> Number))
 >
 > (define (f x)
 >   (cond
 >     [(number? x) x]
 >     [(string? x) (string-length x)] ;; x has type string here, but  
 > hey, the domain doesn't even allow that
 >     [else -1]))
 
 You could use the occurrence type system to flag dead code, like the  
 above or yours. If you could show that the first n branches of a  
 conditional are exhaustive, you could not only flag dead code but  
 ignore it. BUT do we want this? Isn't it more likely that exhausted  
 domains or dead code is a sign of potential trouble?
 
 
 -- Matthias
 
 
 
 
 
 
 On Oct 23, 2008, at 6:24 PM, clements@brinckerhoff.org wrote:
 
 > A new problem report is waiting at
 >   http://bugs.plt-scheme.org/query/?cmd=view&pr=9862
 >
 > Reported by John Clements for release: 4.1.1.3-svn21oct2008
 >
 > *** Description:
 > This may be a change request or a duplicate bug, sorry...
 >
 > Typed scheme doesn't seem to use its knowledge correctly in the  
 > presence of
 > 'match'; in particular, it appears to me that the code below should
 > typecheck.
 >
 > No?
 >
 > *** How to repeat:
 > Evaluate this program:
 >
 > #lang typed-scheme
 >
 > (require scheme/match)
 >
 > (: f ((List Number String) -> Number))
 > (define (f l)
 >   (match l
 >     [(list a b) a]
 >     [else "abc"]))
 >
 > (f '(3 "abc"))
 >
 > This signals the error:
 >
 > typecheck: Expected Number, but got String in: "abc"
 >
 > *** Environment:
 > macosx "Darwin computer.csc.calpoly.edu 9.5.0 Darwin Kernel Version  
 > 9.5.0: Wed Sep  3 11:31:44 PDT 2008; root:xnu-1228.7.58~1/ 
 > RELEASE_PPC Power Macintosh" (ppc-macosx/3m) (get-display-depth) = 32
 > Human Language: english
 > (current-memory-use) 111142892
 >
 > Collections:
 > (("/Users/clements/svn/clements/collects" ".svn" "badger" "clements- 
 > lib" "contour-letters" "file-size-checker" "gnucash" "info-domain"  
 > "iTunes-helper" "java-helpers" "jbc-gnucash" "matrix-arithmetic"  
 > "mboxrd-read" "mnemisis" "no-brainer" "profj-auto-runner"  
 > "projector" "shelly" "single-stepper" "smootxes" "template-tester"  
 > "txomp" "web-utilities") ("/Users/clements/clements/matthias/ 
 > collects" "info-domain" "web") ("/Users/clements/Library/PLT Scheme/ 
 > 4.1.1.3/collects" non-existent-path) ("/Users/clements/plt/ 
 > collects" ".svn" "afm" "algol60" "browser" "combinator-parser"  
 > "compiler" "config" "defaults" "drscheme" "dynext" "embedded-gui"  
 > "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games"  
 > "graphics" "gui-debugger" "guibuilder" "handin-client" "handin- 
 > server" "help" "hierlist" "honu" "htdch" "htdp" "html" "icons"  
 > "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make"  
 > "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl"  
 > "parser-tools" "planet" "plo!
 >  t" "preprocessor" "profj" "profjWizard" "r5rs" "r6rs" "readline"  
 > "redex" "repos-time-stamp" "rnrs" "s-exp" "scheme" "scribble"  
 > "scribblings" "setup" "sgl" "sirmail" "slatex" "slideshow" "srfi"  
 > "srpersist" "stepper" "string-constants" "swindle" "syntax" "syntax- 
 > color" "teachpack" "test-box-recovery" "test-engine" "tests"  
 > "tex2page" "texpict" "trace" "typed-scheme" "version" "waterworld"  
 > "web-server" "wxme" "xml"))
 > Computer Language: (("Module") (#(#t write mixed-fraction-e #f #t  
 > debug) (default) #() "#lang scheme\n"))
 >
 
From: "Sam TH" <samth@ccs.neu.edu>
To: "Matthias Felleisen" <matthias@ccs.neu.edu>
Cc: clements@brinckerhoff.org, bugs@plt-scheme.org, nobody@plt-scheme.org,
        eli@plt-scheme.org, matthias@plt-scheme.org, sk@plt-scheme.org,
        mflatt@plt-scheme.org, robby@plt-scheme.org, clements@plt-scheme.org,
        jay@plt-scheme.org, meunier@plt-scheme.org, kathyg@plt-scheme.org,
        jacobm@plt-scheme.org, cce@plt-scheme.org, ryanc@plt-scheme.org,
        gcooper@plt-scheme.org, sstrickl@plt-scheme.org
Subject: Re: [plt-bug] all/9862: typed scheme + match failure?
Date: Thu, 23 Oct 2008 22:28:32 -0400

 On Thu, Oct 23, 2008 at 8:05 PM, Matthias Felleisen
 <matthias@ccs.neu.edu> wrote:
 >
 > Sam, this belongs into a faq. Start it now.
 
 No, this is just a bug.
 
 John's code should work as he entered it.
 -- 
 sam th
 samth@ccs.neu.edu
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: "Sam TH" <samth@ccs.neu.edu>
Cc: clements@brinckerhoff.org, bugs@plt-scheme.org, nobody@plt-scheme.org,
        eli@plt-scheme.org, matthias@plt-scheme.org, sk@plt-scheme.org,
        mflatt@plt-scheme.org, robby@plt-scheme.org, clements@plt-scheme.org,
        jay@plt-scheme.org, meunier@plt-scheme.org, kathyg@plt-scheme.org,
        jacobm@plt-scheme.org, cce@plt-scheme.org, ryanc@plt-scheme.org,
        gcooper@plt-scheme.org, sstrickl@plt-scheme.org
Subject: Re: [plt-bug] all/9862: typed scheme + match failure?
Date: Thu, 23 Oct 2008 22:39:36 -0400

 This is weird. Since when are you discovering exhaustion of cases in  
 your type system?
 
 
 On Oct 23, 2008, at 10:28 PM, Sam TH wrote:
 
 > On Thu, Oct 23, 2008 at 8:05 PM, Matthias Felleisen
 > <matthias@ccs.neu.edu> wrote:
 >>
 >> Sam, this belongs into a faq. Start it now.
 >
 > No, this is just a bug.
 >
 > John's code should work as he entered it.
 > -- 
 > sam th
 > samth@ccs.neu.edu
 


State changed from "open" to "suspended" by samth at Thu, 25 Aug 2011 11:56:21 -0400
Reason>>> This will get fixed when TR does significantly more
inference.  For now, it breaks because TR is trying too hard
to propagate expected types.

