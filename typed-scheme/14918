From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Fri Jan  2 12:10:05 2015
Received: from mail-ig0-f174.google.com (mail-ig0-f174.google.com [209.85.213.174])
	by winooski.ccs.neu.edu (8.14.7/8.14.7) with ESMTP id t02HA1tl010044
	for <bugs@bugs.plt-scheme.org>; Fri, 2 Jan 2015 12:10:01 -0500
Message-Id: <201501021709.t02H9wpC010037@winooski.ccs.neu.edu>
Date: Fri, 2 Jan 2015 12:09:58 -0500
From: brian@mastenbrook.net
To: bugs@racket-lang.org
Subject: Type error on recursive procedure definition

>Number:         14918
>Category:       typed-scheme
>Synopsis:       Type error on recursive procedure definition
>Class:          sw-bug
>Responsible:    samth
>Severity:       non-critical
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Fri Jan 02 12:12:02 -0500 2015
>Last-Modified:  Thu Jul 30 15:58:30 -0400 2015
>Originator:     Brian Mastenbrook
>Organization:
plt
>Submitter-Id:   unknown
>Release:        6.1.1
>Environment:
macosx "Darwin RetinaBook.local 13.4.0 Darwin Kernel Version 13.4.0: Sun Aug 17 19:50:11 PDT 2014; root:xnu-2422.115.4~1/RELEASE_X86_64 x86_64" (x86_64-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 272065328
raco pkg (show):
Installation-wide:
 Package              Checksum                                    Source
 main-distribution    84a366a8c2b2908babe6c2811b0ada036bb159df    (catalog main-distribution)
 racket-lib           436f0928598fc1a8abf27422e8e6588bef45f652    (catalog racket-lib)
 [184 auto-installed packages not shown]
User-specific for installation "6.1.1":
 [none]



Collections:
("/Users/brian/Library/Racket/6.1.1/collects"
 (non-existent-path))
("/Applications/Racket/collects"
 (".gitignore" "acks" "compiler" "data" "db" "dynext" "ffi" "file" "info" "info-domain" "json" "launcher" "net" "openssl" "pkg" "planet" "racket" "raco" "reader" "realm" "s-exp" "setup" "syntax" "unstable" "version" "xml"))

Recent Internal Errors: 
Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((test) (main)) #t))
>Description:
With the definition of `uncat' given below, TR complains that there is a missing type for the top-level identifier `uncat'. The type of `uncat' is fully specified with inline annotations. When adding a separate top-level annotation for `uncat', the error disappears. The workaround is obvious, but this took me by surprise.
>How-To-Repeat:
#lang typed/racket

(define #:forall (A) (uncat [l : (Listof A)] [n : Integer]) : (Listof (Listof A))
  (if (null? l)
      l
      (let-values (((this next) (split-at l n)))
        (cons this (uncat next n)))))
>Fix:
