From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Tue Mar 24 15:21:05 2009
Received: from qw-out-2122.google.com (qw-out-2122.google.com [74.125.92.26])
	by champlain.ccs.neu.edu (8.14.2/8.14.2) with ESMTP id n2OJKw16020629
	for <bugs@bugs.plt-scheme.org>; Tue, 24 Mar 2009 15:20:59 -0400
Message-Id: <200903241920.n2OJKtp1020623@champlain.ccs.neu.edu>
Date: Tue, 24 Mar 2009 15:20:55 -0400
From: pocmatos@gmail.com
To: bugs@plt-scheme.org
Subject: Typed-Scheme is not propagating types into lambdas

>Number:         10156
>Category:       typed-scheme
>Synopsis:       Typed-Scheme is not propagating types into lambdas
>Class:          change-request
>Responsible:    samth
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Tue Mar 24 15:24:01 -0400 2009
>Last-Modified:  Wed Aug 12 18:06:24 -0400 2009
>Originator:     Paulo Matos
>Organization:
plt
>Submitter-Id:   unknown
>Release:        4.1.4
>Environment:
unix "Linux drhelper 2.6.25-gentoo-r7 #1 SMP Wed Oct 29 19:02:48 GMT 2008 x86_64 Intel(R) Pentium(R) D CPU 3.20GHz GenuineIntel GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 24
Human Language: english
(current-memory-use) 1024098832

Collections:
(("/home/pmatos/.plt-scheme/4.1.4/collects" non-existent-path) ("/usr/local/plt/plt-4.1.4/lib/plt/collects" "string-constants" "stepper" "srfi" "redex" "mzcom" "htdch" "xml" "ffi" "s-exp" "sgl" "texpict" "openssl" "gui-debugger" "lang" "2htdp" "framework" "help" "tests" "syntax" "test-engine" "parser-tools" "preprocessor" "plot" "icons" "dynext" "algol60" "config" "wxme" "swindle" "mysterx" "r6rs" "web-server" "macro-debugger" "net" "hierlist" "frtime" "launcher" "errortrace" "readline" "test-box-recovery" "games" "trace" "typed-scheme" "rnrs" "graphics" "profj" "make" "tex2page" "scribblings" "teachpack" "setup" "combinator-parser" "slideshow" "defaults" "scheme" "mzscheme" "r5rs" "embedded-gui" "planet" "version" "drscheme" "mred" "htdp" "syntax-color" "typed" "scribble" "browser" "slatex" "afm" "mzlib" "file" "info-domain" "lazy" "html" "mrlib" "compiler" "eopl"))
Computer Language: (("Module") (#(#t write mixed-fraction-e #f #t debug) (default) #() "#lang scheme\n" #t))
>Description:
With the following usage pattern:
(: sq-lst ((Listof Number) -> (Listof Number)))
(define (sq-lst xs)
  (map (lambda (x) (* x x)) xs))

Typed-Scheme cannot infer that x in the lambda expression is a Number. Would this not be possible to do?
Same happens with other iteration functions: for-each, hash-map, hash-for-each, etc.
>How-To-Repeat:
>Fix:
>Audit-Trail:
Class changed from "sw-bug" to "change-request" by samth at Wed, 12 Aug 2009 18:06:24 -0400
Reason>>> hard to do

