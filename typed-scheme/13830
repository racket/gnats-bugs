From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Thu Jun  6 13:04:18 2013
Received: from mail-ob0-f175.google.com (mail-ob0-f175.google.com [209.85.214.175])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id r56H4EZb007957
	for <bugs@bugs.plt-scheme.org>; Thu, 6 Jun 2013 13:04:14 -0400
Message-Id: <201306061704.r56H4BLT007952@champlain.ccs.neu.edu>
Date: Thu, 6 Jun 2013 13:04:11 -0400
From: asumu@ccs.neu.edu
To: bugs@racket-lang.org
Subject: TR: struct: allows indirect polymorphic recursion (=> infinite loops)

>Number:         13830
>Category:       typed-scheme
>Synopsis:       TR: struct: allows indirect polymorphic recursion (=> infinite loops)
>Class:          sw-bug
>Responsible:    samth
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Thu Jun 06 13:08:01 -0400 2013
>Last-Modified:  Sat Jul 20 16:42:40 -0400 2013
>Originator:     Asumu Takikawa
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.3.4.11--2013-06-05(07b44017/d/tr-rec-name-rebased)
>Environment:
unix "Linux willamette 3.2.0-2-amd64 #1 SMP Mon May 21 17:45:41 UTC 2012 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 427988356
Links: (links) = ("pict-utils" "x11-racket" "rwind" "drracket-vim-tool" "tr-both"); (links #:user? #f) = (); (links #:root? #t) = (#<path:/home/asumu/plt/racket-git/add-on/pkgs/installed/lang-slide> #<path:/home/asumu/plt/racket-git/add-on/pkgs/installed/sweet-racket> #<path:/home/asumu/plt/racket-git/add-on/pkgs/installed/taglib> #<path:/home/asumu/code/contract-repl>); (links #:user? #f #:root? #t) = ()
raco pkg (show):
Installation-wide:
 [none]
User-specific, all-version:
 Package[*=auto]    Checksum                                    Source
 contract-repl      #f                                          (link /home/asumu/code/contract-repl)
 lang-slide         40f30a8ce128493c887dc0c0bb0798fab6514837    (pns lang-slide)
 taglib             305a3ca74c2437e2bf6acabd2d130c0b0e59e304    (catalog taglib)
User-specific, version-specific (5.3.4.11):
 [none]



Collections:
("/home/asumu/plt/racket-git/add-on/5.3.4.11/collects"
 (non-existent-path))
("/home/asumu/plt/racket-git/collects"
 ("graphics" "future-visualizer" "frtime" "framework" "make" "sgl" "0001-Remove-duplicate-non-terminals-in-define-extended-la.patch" "waterworld" "launcher" "compiler" "planet2" "mred" "srfi" "setup" "wxme" "honu" "mrlib" "scriblib" "r5rs" "trace" "info-domain" "typed-racket" "racket" "net" "file" "slideshow" "string-constants" "racklog" "openssl" "macro-debugger" "xml" "combinator-parser" "foo2.gif" "mysterx" "html" "drscheme" "at-exp" "hierlist" "profile" "icons" "sirmail" "readline" "config" "syntax" "scribble" "texpict" "mzlib" "realm" "math" "typed" "web-server" "plai" "handin-client" "rnrs" "eopl" "drracket" "handin-server" "planet" "syntax-color" "repo-time-stamp" "test-engine" "games" "picturing-programs" "ffi" "xrepl" "tex2page" "images" "errortrace" "json" "foo.gif" "data" "unstable" "NormalizationTest.txt" "r6rs" "browser" "2htdp" "parser-tools" "slatex" "scheme" "compatibility" "algol60" "scribblings" "pkg" "stepper" "lazy" "rackunit" "gui-debugger" "plot" "help"!
  "pict" "meta" "redex" "version" "defaults" "s-exp" "test-box-recovery" "srpersist" "tests" "swindle" "mzscheme" "guibuilder" "deinprogramm" "raco" "preprocessor" "typed-scheme" "db" "embedded-gui" "lang" "dynext" "reader" ".gitignore" "htdp" "schemeunit" "teachpack" "mzcom" "datalog"))

Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t none) (default) #() "#lang racket\n" #t #f ((main) (test)) #t))
>Description:
The following example encodes indirect (mutual) polymorphic recursion:

#lang typed/racket

(struct: (A) Foo ([x : (U #f (Bar (Listof A)))]))
(struct: (B) Bar ([x : (U #f (Foo (Listof B)))]))

(: x (Foo Integer))
(define x (Foo #f))

The check for polymorphic recursion for structs is not quite precise
enough to rule out this case. As a result, this example seems to
loop forever during typechecking.
>How-To-Repeat:
>Fix:
