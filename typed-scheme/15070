From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Tue May 19 13:09:12 2015
Received: from mail-ig0-f182.google.com (mail-ig0-f182.google.com [209.85.213.182])
	by winooski.ccs.neu.edu (8.14.7/8.14.7) with ESMTP id t4JH921P015215
	for <bugs@bugs.plt-scheme.org>; Tue, 19 May 2015 13:09:02 -0400
Message-Id: <201505191708.t4JH8xp1015208@winooski.ccs.neu.edu>
Date: Tue, 19 May 2015 13:08:59 -0400
From: ryanc@racket-lang.org
To: bugs@racket-lang.org
Subject: bad contract generated for (U Integer (Sequenceof Integer))

>Number:         15070
>Category:       typed-scheme
>Synopsis:       bad contract generated for (U Integer (Sequenceof Integer))
>Class:          sw-bug
>Responsible:    samth
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Tue May 19 13:12:01 -0400 2015
>Last-Modified:  Wed Jun 10 11:57:34 -0400 2015
>Originator:     Ryan Culpepper
>Organization:
plt
>Submitter-Id:   unknown
>Release:        6.2.0.3--2015-05-11(-/f)
>Environment:
macosx "Darwin feather.local 13.3.0 Darwin Kernel Version 13.3.0: Tue Jun  3 21:27:35 PDT 2014; root:xnu-2422.110.17~1/RELEASE_X86_64 x86_64" (x86_64-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 328146824
raco pkg (show):
Installation-wide:
 Package                 Checksum           Source
 db                      a368dc24...        clone.../?path=db
 feature-profile         fb1303c5...        catalog...#master
 main-distribution       67868e03...        catalog...ibution
 main-distribution-test  ca4a870e...        catalog...on-test
 racket-lib                                 static-link...lib
 [217 auto-installed packages not shown]
User-specific for installation "development":
 [none]



Collections:
("/Users/ryan/Library/Racket/development/collects"
 (non-existent-path))
("/Users/ryan/projects/racket/racket/collects"
 (".gitignore" "acks" "compiler" "data" "db" "dynext" "ffi" "file" "info" "info-domain" "json" "launcher" "net" "openssl" "pkg" "planet" "racket" "raco" "reader" "realm" "s-exp" "setup" "syntax" "unstable" "version" "xml"))

Recent Internal Errors: 
Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t none) (default) #() "#lang racket\n" #t #t ((test) (main)) #t))
>Description:
The contract generated for the type (U Integer (Sequenceof Integer)) turns exact integer values into opaque sequences.

This causes problems when using the Slice-Spec type (eg, array-slice-ref) in untyped code.
>How-To-Repeat:
> (module m typed/racket
    (define-type S (U Integer (Sequenceof Integer)))
    (: f (S -> S))
    (define (f x) x)
    (provide f S))
> (require 'm) ;; Note: untyped context
> (f 10)
#<sequence>  ;; Expected: 10
>Fix:
>Audit-Trail:
From: Sam Tobin-Hochstadt <samth@cs.indiana.edu>
To: "ryanc@racket-lang.org" <ryanc@racket-lang.org>,
        bugs <bugs@racket-lang.org>
Cc: nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/15070: bad contract generated for (U Integer
 (Sequenceof Integer))
Date: Tue, 19 May 2015 13:38:10 -0400

 This turns out to be tricky to fix for unfortunate reasons:
 
 - Nonnegative-Integer is a subtype of (Sequenceof Integer), so the
 type you wrote gets normalized to (U Negative-Integer (Sequenceof
 Integer))
 - Then the contract for the second type coerces 10 into an opaque sequence.
 
 This is definitely bad, though, so I'll think about it. Unfortunately
 I don't have an easy workaround off the top of my head.
 
 Sam
 
 On Tue, May 19, 2015 at 1:12 PM,  <ryanc@racket-lang.org> wrote:
 > A new problem report is waiting at
 >   http://bugs.racket-lang.org/query/?cmd=view&pr=15070
 >
 > Reported by Ryan Culpepper for release: 6.2.0.3--2015-05-11(-/f)
 >
 > *** Description:
 > The contract generated for the type (U Integer (Sequenceof Integer)) turns exact integer values into opaque sequences.
 >
 > This causes problems when using the Slice-Spec type (eg, array-slice-ref) in untyped code.
 >
 > *** How to repeat:
 >> (module m typed/racket
 >     (define-type S (U Integer (Sequenceof Integer)))
 >     (: f (S -> S))
 >     (define (f x) x)
 >     (provide f S))
 >> (require 'm) ;; Note: untyped context
 >> (f 10)
 > #<sequence>  ;; Expected: 10
 >
 > *** Environment:
 > macosx "Darwin feather.local 13.3.0 Darwin Kernel Version 13.3.0: Tue Jun  3 21:27:35 PDT 2014; root:xnu-2422.110.17~1/RELEASE_X86_64 x86_64" (x86_64-macosx/3m) (get-display-depth) = 32
 > Human Language: english
 > (current-memory-use) 328146824
 > raco pkg (show):
 > Installation-wide:
 >  Package                 Checksum           Source
 >  db                      a368dc24...        clone.../?path=db
 >  feature-profile         fb1303c5...        catalog...#master
 >  main-distribution       67868e03...        catalog...ibution
 >  main-distribution-test  ca4a870e...        catalog...on-test
 >  racket-lib                                 static-link...lib
 >  [217 auto-installed packages not shown]
 > User-specific for installation "development":
 >  [none]
 >
 >
 >
 > Collections:
 > ("/Users/ryan/Library/Racket/development/collects"
 >  (non-existent-path))
 > ("/Users/ryan/projects/racket/racket/collects"
 >  (".gitignore" "acks" "compiler" "data" "db" "dynext" "ffi" "file" "info" "info-domain" "json" "launcher" "net" "openssl" "pkg" "planet" "racket" "raco" "reader" "realm" "s-exp" "setup" "syntax" "unstable" "version" "xml"))
 >
 > Recent Internal Errors:
 > Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t none) (default) #() "#lang racket\n" #t #t ((test) (main)) #t))
 >

