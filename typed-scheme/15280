From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Wed Mar 30 18:42:56 2016
Received: from mail-ig0-f172.google.com (mail-ig0-f172.google.com [209.85.213.172])
	by winooski.ccs.neu.edu (8.14.7/8.14.7) with ESMTP id u2UMgsAg032532
	for <bugs@bugs.plt-scheme.org>; Wed, 30 Mar 2016 18:42:54 -0400
Message-Id: <201603302242.u2UMgq2U032525@winooski.ccs.neu.edu>
Date: Wed, 30 Mar 2016 18:42:52 -0400
From: cobbe@ccs.neu.edu
To: bugs@racket-lang.org
Subject: opaque error message when require/typed #:struct omits #:constructor-name

>Number:         15280
>Category:       typed-scheme
>Synopsis:       opaque error message when require/typed #:struct omits #:constructor-name
>Class:          sw-bug
>Responsible:    samth
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Wed Mar 30 18:44:01 -0400 2016
>Last-Modified:  Wed May 11 15:42:21 -0400 2016
>Originator:     Richard Cobbe
>Organization:
plt
>Submitter-Id:   unknown
>Release:        6.4
>Environment:
macosx "Darwin nanny-ogg.home 15.4.0 Darwin Kernel Version 15.4.0: Fri Feb 26 22:08:05 PST 2016; root:xnu-3248.40.184~3/RELEASE_X86_64 x86_64" (x86_64-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 457814668
raco pkg (show):
Installation-wide:
 Package            Checksum     Source
 main-distribution  2820602f...  catalog main-distribution
 racket-lib         f678d8f6...  catalog racket-lib
 [188 auto-installed packages not shown]
User-specific for installation "6.4":
 [none]



Collections:
("/Users/cobbe/Library/Racket/6.4/collects"
 (non-existent-path))
("/Users/cobbe/Applications/Racket v6.4/collects"
 ("acks" "compiler" "data" "db" "dynext" "ffi" "file" "info" "info-domain" "json" "launcher" "net" "openssl" "pkg" "planet" "racket" "raco" "reader" "realm" "s-exp" "setup" "syntax" "unstable" "version" "xml"))

Recent Internal Errors: 
Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((test) (main)) #t))
>Description:
If a struct definition (in an untyped module) contains a #:constructor-name option, but you forget to add the #:constructor-name option when importing that struct into a typed module with require/typed, you get an opaque error message:

"st3: bad syntax;
 identifier for static struct-type information cannot be used as an expression in: st3"

with no source location information.  (In the error message, "st" is clearly the name of the struct; the '3' is presumably an internal implementation detail, as it has nothing to do with user input.)

FWIW, I observed the same behavior in Racket 6.3.
>How-To-Repeat:
Save the following modules as a.rkt and b.rkt, respectively:

;; a.rkt:
#lang racket

(provide (struct-out st))

(struct st (a b) #:constructor-name make-st)



;; b.rkt:
#lang typed/racket

(require/typed "a.rkt"
               [#:struct st ([a : Number]
                             [b : String])])


Load b.rkt into DrRacket (determine language from source), and hit F5.  Observe the error.

If you remove the #:constructor-name option from a.rkt, or add it to b.rkt, then the modules compile successfully.

I observed the same behavior with "raco make b.rkt".
>Fix:
