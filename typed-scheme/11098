From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Thu Aug 12 14:40:43 2010
Received: from mail-gw0-f44.google.com (mail-gw0-f44.google.com [74.125.83.44])
	by champlain.ccs.neu.edu (8.14.3/8.14.3) with ESMTP id o7CIef5o030523
	for <bugs@bugs.plt-scheme.org>; Thu, 12 Aug 2010 14:40:41 -0400
Message-Id: <201008121840.o7CIecp7030515@champlain.ccs.neu.edu>
Date: Thu, 12 Aug 2010 14:40:38 -0400
From: neil.toronto@gmail.com
To: bugs@racket-lang.org
Subject: struct: creates wrong predicate type when a field is type (Vectorof T)

>Number:         11098
>Category:       typed-scheme
>Synopsis:       struct: creates wrong predicate type when a field is type (Vectorof T)
>Class:          sw-bug
>Responsible:    samth
>Severity:       non-critical
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Thu Aug 12 14:44:01 -0400 2010
>Closed-Date:    Thu Aug 12 15:05:57 -0400 2010
>Last-Modified:  Fri Sep 03 21:01:04 -0400 2010
>Originator:     Neil Toronto
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.0.1
>Environment:
unix "Linux woodstock 2.6.31-22-generic #60-Ubuntu SMP Thu May 27 00:22:23 UTC 2010 i686 GNU/Linux" (i386-linux/3m) (get-display-depth) = 24
Human Language: english
(current-memory-use) 425934008

Collections:
(("/home/neil/.racket/5.0.1/collects" non-existent-path) ("/usr/plt/collects" "info-domain" "file" "mrlib" "config" "stepper" "gui-debugger" "planet" "texpict" "web-server" "readline" "rackunit" "sgl" "defaults" "lazy" "rnrs" "scribble" "ffi" "eopl" "net" "srfi" "schemeunit" "preprocessor" "dynext" "afm" "swindle" "mzlib" "syntax-color" "hierlist" "icons" "typed" "setup" "raco" "redex" "test-engine" "plai" "xml" "macro-debugger" "tex2page" "drscheme" "mred" "slideshow" "wxme" "lang" "openssl" "string-constants" "racket" "teachpack" "mysterx" "embedded-gui" "mzscheme" "syntax" "reader" "make" "algol60" "combinator-parser" "trace" "plot" "slatex" "parser-tools" "frtime" "datalog" "help" "scribblings" "compiler" "browser" "html" "test-box-recovery" "profile" "racklog" "typed-scheme" "errortrace" "scriblib" "htdp" "games" "s-exp" "2htdp" "r6rs" "scheme" "r5rs" "at-exp" "drracket" "deinprogramm" "version" "mzcom" "unstable" "graphics" "launcher" "framework"))
Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t none) (default) #() "#lang typed/racket\n" #f))
>Description:
The struct definition (struct: (T) foo ([v : (Vectorof T)])) generates the predicate foo? : (Any -> Boolean : #(struct:foo ((Vectorof T)))). The predicate type is correct if Vectorof is replaced by Listof, Pairof, HashTable, etc., or if T is replaced by Any.

define-struct: behaves the same way.

The bug makes it impossible to use occurrence typing to differentiate between a struct containing a (Vectorof T) field and its supertype, as demonstrated in steps to reproduce.
>How-To-Repeat:
#lang typed/racket

(struct: (T) a ([foo : T]))
(struct: (T) b a ([bar : (Vectorof T)]))

(define: b-val : (a Integer)
  (b (ann 1 Integer) (ann #(1 2 3) (Vectorof Integer))))

(if (b? b-val)
    (b-bar b-val)  ; type error
    #f)

#|
Type Checker: Polymorphic function b-bar could not be applied to arguments:
Argument 1:
  Expected: (b T)
  Given:    #(struct:b (T (Vectorof T)))
 in: (b-bar b-val)
|#
>Fix:
>Audit-Trail:
State changed from "open" to "closed" by samth at Thu, 12 Aug 2010 15:05:57 -0400
Reason>>> dup


