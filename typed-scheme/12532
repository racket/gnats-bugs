From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Thu Feb  2 20:40:43 2012
Received: from mail-vx0-f172.google.com (mail-vx0-f172.google.com [209.85.220.172])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id q131ee6k014554
	for <bugs@bugs.plt-scheme.org>; Thu, 2 Feb 2012 20:40:40 -0500
Message-Id: <201202030140.q131ecxi014542@champlain.ccs.neu.edu>
Date: Thu, 2 Feb 2012 20:40:38 -0500
From: eli@barzilay.org
To: bugs@racket-lang.org
Subject: TR syntax for `for*:' forms

>Number:         12532
>Category:       typed-scheme
>Synopsis:       TR syntax for `for*:' forms
>Class:          change-request
>Responsible:    samth
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Thu Feb 02 20:44:01 -0500 2012
>Closed-Date:    Tue Jul 01 17:36:00 -0400 2014
>Last-Modified:  Tue Jul 01 17:36:00 -0400 2014
>Originator:     Eli Barzilay
>Organization:
plt
>Submitter-Id:   unknown
>Release:        HEAD
>Environment:
Any
>Description:
IIUC, the syntax for these things require a `: <type>', but there's
already a `:' in the name.  I just can't help looking at

    (for/list: : Blah ...)

and thinking what a random newcomer would think about it.

Why not drop that `:' -- just test if the following subform is a
valid type, which I think should be doable since types cannot
start with "((" except when there's a `->' and that's invalid syntax
for the for loop clauses.

Alternatively, provide a redefined `for' so there's only a single `:'.
>How-To-Repeat:
>Fix:
>Audit-Trail:
Class changed from "sw-bug" to "change-request" by samth at Fri, 03 Feb 2012 15:17:18 -0500
Reason>>> req


State changed from "open" to "closed" by asumu at Tue, 01 Jul 2014 17:36:00 -0400
Reason>>> TR now provides a redefined `for`.

