From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Sat Jan 24 23:45:55 2015
Received: from mail-ob0-f172.google.com (mail-ob0-f172.google.com [209.85.214.172])
	by winooski.ccs.neu.edu (8.14.7/8.14.7) with ESMTP id t0P4jq4e000965
	for <bugs@bugs.plt-scheme.org>; Sat, 24 Jan 2015 23:45:52 -0500
Message-Id: <201501250445.t0P4joCf000945@winooski.ccs.neu.edu>
Date: Sat, 24 Jan 2015 23:45:50 -0500
From: eli@barzilay.org
To: bugs@racket-lang.org
Subject: TR Optimization masks type error

>Number:         14949
>Category:       typed-scheme
>Synopsis:       TR Optimization masks type error
>Class:          sw-bug
>Responsible:    samth
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Sat Jan 24 23:48:01 -0500 2015
>Last-Modified:  Sat Jan 31 18:20:07 -0500 2015
>Originator:     Eli Barzilay
>Organization:
plt
>Submitter-Id:   unknown
>Release:        6.1.1
>Environment:
Win32 / Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/38.0.2125.111 Safari/537.36
>Description:
I'm not sure whether this behavior is needed or not, but it would be
nice if the code below would throw a type error.
>How-To-Repeat:
(: square : Number -> Number)
;; Takes a number and returns the square of that number
(define (square num)
  (if (number? num) (* num num) "not a number"))
>Fix:
>Audit-Trail:
From: Sam Tobin-Hochstadt <samth@cs.indiana.edu>
To: eli@barzilay.org, bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Cc: 
Subject: Re: [racket-bug] all/14949: TR Optimization masks type error
Date: Sun, 25 Jan 2015 13:48:31 +0000

 --001a113a68e601c5fa050d7a479e
 Content-Type: text/plain; charset=UTF-8
 
 This code should log a warning that you can see if you have the appropriate
 level of warnings on.
 
 Sam
 
 On Sat, Jan 24, 2015, 11:48 PM null <eli@barzilay.org> wrote:
 
 > A new problem report is waiting at
 >   http://bugs.racket-lang.org/query/?cmd=view&pr=14949
 >
 > Reported by Eli Barzilay for release: 6.1.1
 >
 > *** Description:
 > I'm not sure whether this behavior is needed or not, but it would be
 > nice if the code below would throw a type error.
 >
 > *** How to repeat:
 > (: square : Number -> Number)
 > ;; Takes a number and returns the square of that number
 > (define (square num)
 >   (if (number? num) (* num num) "not a number"))
 >
 > *** Environment:
 > Win32 / Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML,
 > like Gecko) Chrome/38.0.2125.111 Safari/537.36
 >
 >
 
 --001a113a68e601c5fa050d7a479e
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 <p dir=3D"ltr">This code should log a warning that you can see if you have =
 the appropriate level of warnings on.</p>
 <p dir=3D"ltr">Sam</p>
 <br><div class=3D"gmail_quote">On Sat, Jan 24, 2015, 11:48 PM=C2=A0null &lt=
 ;<a href=3D"mailto:eli@barzilay.org">eli@barzilay.org</a>&gt; wrote:<br><bl=
 ockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1px #=
 ccc solid;padding-left:1ex">A new problem report is waiting at<br>
 =C2=A0 <a href=3D"http://bugs.racket-lang.org/query/?cmd=3Dview&amp;pr=3D14=
 949" target=3D"_blank">http://bugs.racket-lang.org/<u></u>query/?cmd=3Dview=
 &amp;pr=3D14949</a><br>
 <br>
 Reported by Eli Barzilay for release: 6.1.1<br>
 <br>
 *** Description:<br>
 I&#39;m not sure whether this behavior is needed or not, but it would be<br=
 >
 nice if the code below would throw a type error.<br>
 <br>
 *** How to repeat:<br>
 (: square : Number -&gt; Number)<br>
 ;; Takes a number and returns the square of that number<br>
 (define (square num)<br>
 =C2=A0 (if (number? num) (* num num) &quot;not a number&quot;))<br>
 <br>
 *** Environment:<br>
 Win32 / Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like=
  Gecko) Chrome/38.0.2125.111 Safari/537.36<br>
 <br>
 </blockquote></div>
 
 --001a113a68e601c5fa050d7a479e--
From: Sam Tobin-Hochstadt <samth@cs.indiana.edu>
To: Eli Barzilay <eli@barzilay.org>, bugs <bugs@racket-lang.org>,
        nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Cc: 
Subject: Re: [racket-bug] all/14949: TR Optimization masks type error
Date: Sun, 25 Jan 2015 09:17:37 -0500

 Also, optimization doesn't change anything observable here -- there's
 no way to run the type-incorrect part of the function.
 
 Sam
 
 On Sun, Jan 25, 2015 at 8:48 AM, Sam Tobin-Hochstadt
 <samth@cs.indiana.edu> wrote:
 > This code should log a warning that you can see if you have the appropriate
 > level of warnings on.
 >
 > Sam
 >
 >
 > On Sat, Jan 24, 2015, 11:48 PM null <eli@barzilay.org> wrote:
 >>
 >> A new problem report is waiting at
 >>   http://bugs.racket-lang.org/query/?cmd=view&pr=14949
 >>
 >> Reported by Eli Barzilay for release: 6.1.1
 >>
 >> *** Description:
 >> I'm not sure whether this behavior is needed or not, but it would be
 >> nice if the code below would throw a type error.
 >>
 >> *** How to repeat:
 >> (: square : Number -> Number)
 >> ;; Takes a number and returns the square of that number
 >> (define (square num)
 >>   (if (number? num) (* num num) "not a number"))
 >>
 >> *** Environment:
 >> Win32 / Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML,
 >> like Gecko) Chrome/38.0.2125.111 Safari/537.36
 >>
 >
From: Eli Barzilay <eli@barzilay.org>
To: Sam Tobin-Hochstadt <samth@cs.indiana.edu>
Cc: bugs <bugs@racket-lang.org>, nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/14949: TR Optimization masks type error
Date: Sun, 25 Jan 2015 09:59:18 -0500

 On Sun, Jan 25, 2015 at 8:48 AM, Sam Tobin-Hochstadt
 <samth@cs.indiana.edu> wrote:
 > This code should log a warning that you can see if you have the appropriate
 > level of warnings on.
 
 In this case, can some flag be added to either turn them to proper
 errors, or make it do the logging at a higher level?  The motivation
 here is dealing with students that get very confused with this behavior.
 
 
 On Sun, Jan 25, 2015 at 9:17 AM, Sam Tobin-Hochstadt
 <samth@cs.indiana.edu> wrote:
 > Also, optimization doesn't change anything observable here -- there's
 > no way to run the type-incorrect part of the function.
 
 Yeah, I realized later that "optimization" was wrong, and instead it's
 whatever deals with conditionals and unreachable code.
 
 [Actually, this is a demonstration of why I need to turn it into some
 kind of a visible warning: I make the language warn if there are no test
 cases, so unreachable code is at the same level.]
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!
From: Sam Tobin-Hochstadt <samth@cs.indiana.edu>
To: Eli Barzilay <eli@barzilay.org>
Cc: bugs <bugs@racket-lang.org>, nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/14949: TR Optimization masks type error
Date: Sun, 25 Jan 2015 10:15:05 -0500

 On Sun, Jan 25, 2015 at 9:59 AM, Eli Barzilay <eli@barzilay.org> wrote:
 > On Sun, Jan 25, 2015 at 8:48 AM, Sam Tobin-Hochstadt
 > <samth@cs.indiana.edu> wrote:
 >> This code should log a warning that you can see if you have the appropriate
 >> level of warnings on.
 >
 > In this case, can some flag be added to either turn them to proper
 > errors, or make it do the logging at a higher level?  The motivation
 > here is dealing with students that get very confused with this behavior.
 
 We used to have an option for this that you could turn on, but too
 many macros generate unreachable type-incorrect code to ever turn it
 on.
 
 I'd be ok with merging a change to add a parameter for making this an
 error -- you'd want to look at `warn-unreachable` in
 typed-racket/types/tc-utils.rkt.
 
 > On Sun, Jan 25, 2015 at 9:17 AM, Sam Tobin-Hochstadt
 > <samth@cs.indiana.edu> wrote:
 >> Also, optimization doesn't change anything observable here -- there's
 >> no way to run the type-incorrect part of the function.
 >
 > Yeah, I realized later that "optimization" was wrong, and instead it's
 > whatever deals with conditionals and unreachable code.
 >
 > [Actually, this is a demonstration of why I need to turn it into some
 > kind of a visible warning: I make the language warn if there are no test
 > cases, so unreachable code is at the same level.]
 
 Do you use/enforce code coverage? And how do you do the warnings for
 missing test cases?
 
 Sam
From: Eli Barzilay <eli@barzilay.org>
To: Sam Tobin-Hochstadt <samth@cs.indiana.edu>
Cc: bugs <bugs@racket-lang.org>, nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/14949: TR Optimization masks type error
Date: Mon, 26 Jan 2015 03:15:50 -0500

 On Sun, Jan 25, 2015 at 10:15 AM, Sam Tobin-Hochstadt
 <samth@cs.indiana.edu> wrote:
 >>
 >> In this case, can some flag be added to either turn them to proper
 >> errors, or make it do the logging at a higher level?  The motivation
 >> here is dealing with students that get very confused with this
 >> behavior.
 >
 > We used to have an option for this that you could turn on, but too
 > many macros generate unreachable type-incorrect code to ever turn it
 > on.
 
 And it doesn't help to show the error only when `syntax-original?' ?
 
 
 > I'd be ok with merging a change to add a parameter for making this an
 > error -- you'd want to look at `warn-unreachable` in
 > typed-racket/types/tc-utils.rkt.
 
 (.../utils/tc-utils.rkt)
 
 You mean something like extending the meaning of `warn-unreachable?' to
 more than #t/#f, or add a new parameter?
 
 
 >> On Sun, Jan 25, 2015 at 9:17 AM, Sam Tobin-Hochstadt
 >> <samth@cs.indiana.edu> wrote:
 >>> Also, optimization doesn't change anything observable here -- there's
 >>> no way to run the type-incorrect part of the function.
 >>
 >> Yeah, I realized later that "optimization" was wrong, and instead it's
 >> whatever deals with conditionals and unreachable code.
 >>
 >> [Actually, this is a demonstration of why I need to turn it into some
 >> kind of a visible warning: I make the language warn if there are no test
 >> cases, so unreachable code is at the same level.]
 >
 > Do you use/enforce code coverage? And how do you do the warnings for
 > missing test cases?
 
 The coverage is something that the handin server tests, so the language
 doesn't throw an error for that.  (It would be nice to do, but it'd be
 yet another place that does the same tricky and hard-to-do bits...)  So
 I just keep track of tests, and make it spit a warning when there were
 none.
 
 But the main point here is that making this warning visible would
 benefit students (assuming there are no issues with dead code warning
 showing up for code that is not theirs.)
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!

