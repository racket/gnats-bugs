From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Tue Feb 10 23:38:39 2015
Received: from mail-oi0-f43.google.com (mail-oi0-f43.google.com [209.85.218.43])
	by winooski.ccs.neu.edu (8.14.7/8.14.7) with ESMTP id t1B4cb79013650
	for <bugs@bugs.plt-scheme.org>; Tue, 10 Feb 2015 23:38:38 -0500
Message-Id: <201502110438.t1B4cYYL013642@winooski.ccs.neu.edu>
Date: Tue, 10 Feb 2015 23:38:34 -0500
From: lexi.lambda@gmail.com
To: bugs@racket-lang.org
Subject: Type inference on polymorphic functions within MPairs is buggy

>Number:         14974
>Category:       typed-scheme
>Synopsis:       Type inference on polymorphic functions within MPairs is buggy
>Class:          sw-bug
>Responsible:    samth
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Tue Feb 10 23:40:01 -0500 2015
>Last-Modified:  Wed Jun 10 11:59:33 -0400 2015
>Originator:     Alexis King
>Organization:
plt
>Submitter-Id:   unknown
>Release:        6.1.1.8--2015-01-30(3029867/a)
>Environment:
macosx "Darwin jbook 14.1.0 Darwin Kernel Version 14.1.0: Mon Dec 22 23:10:38 PST 2014; root:xnu-2782.10.72~2/RELEASE_X86_64 x86_64" (x86_64-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 1217937016
raco pkg (show):
Installation-wide:
 Package            Checksum             Source
 main-distribution  eca7d6a1...          catalog...tribution
 racket-lib         26012dfd...          catalog racket-lib
 typed-racket-lib   032a11fd...          clone...-racket-lib
 typed-racket-more  032a11fd...          clone...racket-more
 [186 auto-installed packages not shown]
User-specific for installation "snapshot":
 Package            Checksum             Source
 2htdp-typed                             link...racket-2htdp
 alexis-util                             link.../alexis-util
 cover              53a58eba...          catalog...nce/cover
 irc                1f6f8a56...          clone...ket-irc.git
 irc-client                              link...t-irc-client
 mongodb            76b8b080...          catalog...db/master
 packet-web-server                       link...t-web-server
 pkg-plus                                link...aco-pkg-plus
 qalbot                                  link...albot-racket
 racket-fchat                            link...racket-fchat
 rackjure           67c5ef40...          catalog...re/master
 rfc6455            14c33328...          catalog...t-rfc6455
 semver                                  link...acket-semver
 typed-racket-test  787df491...          clone...racket-test
 vector-struct                           link...ector-struct
 whalesong          00271704...          clone...alesong.git
 [9 auto-installed packages not shown]



Collections:
("/Users/Jake/Library/Racket/snapshot/collects"
 (non-existent-path))
("/Applications/Racket v6.1.1.8/collects"
 (".gitignore" "acks" "compiler" "data" "db" "dynext" "ffi" "file" "info" "info-domain" "json" "launcher" "net" "openssl" "pkg" "planet" "racket" "rackunit" "raco" "reader" "realm" "s-exp" "scheme" "setup" "srfi" "syntax" "unstable" "version" "xml"))

Recent Internal Errors: 
Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((test) (main)) #t))
>Description:
Inference on polymorphic functions that recieve MPairs as arguments which contain functions as elements inthe MPair that use the type parameters have buggy behavior. Since that sentence was filled with a lot of words and is extremely hard to parse (at least for me), I think this is best explained via example.

Note, however, that the inference works correctly on types that are actually *more* complex than other types, so it certainly feels like buggy behavior.
>How-To-Repeat:
; some polymorphic function that takes an mpair
(: f (All (a) ((MPairof Symbol (→ a)) → Void)))
(define (f x) (void))

; this fails to typecheck
(f (mcons 'foo (thunk 1)))

; but somehow, this works fine
(f (mcons 'foo (thunk (list))))

; explicitly instantiating ‘f’ always works, but it should be inferred
>Fix:
>Audit-Trail:
From: Alexis King <lexi.lambda@gmail.com>
To: bugs@racket-lang.org, bug-notification@racket-lang.org
Cc: 
Subject: Re: [racket-bug] all/14974: Type inference on polymorphic functions within MPairs is buggy
Date: Tue, 10 Feb 2015 21:40:42 -0800

 As pointed out on IRC, it looks like this happens with boxes, too.
 
 (: f (All (a) ((Boxof (→ a)) → a)))
 (define (f x) ((unbox x)))
 
 (f (box (thunk 1))) ; type error!
 
 Is it a bug with inference on invariant types?

