From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Mon Jun 24 09:27:52 2013
Received: from mail-ob0-f171.google.com (mail-ob0-f171.google.com [209.85.214.171])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id r5ODRmaY002179
	for <bugs@bugs.plt-scheme.org>; Mon, 24 Jun 2013 09:27:49 -0400
Message-Id: <201306241327.r5ODRknr002174@champlain.ccs.neu.edu>
Date: Mon, 24 Jun 2013 09:27:46 -0400
From: asumu@ccs.neu.edu
To: bugs@racket-lang.org
Subject: TR: `eval` at REPL breaks type safety

>Number:         13887
>Category:       typed-scheme
>Synopsis:       TR: `eval` at REPL breaks type safety
>Class:          sw-bug
>Responsible:    samth
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Mon Jun 24 09:28:01 -0400 2013
>Last-Modified:  Sat Jul 20 16:46:26 -0400 2013
>Originator:     Asumu Takikawa
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.3.4.12--2013-06-20(e8354b6a/d/tr-classes)
>Environment:
unix "Linux willamette 3.2.0-2-amd64 #1 SMP Mon May 21 17:45:41 UTC 2012 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
Human Language: japanese
(current-memory-use) 911208052
Links: (links) = ("tr-both"); (links #:user? #f) = (); (links #:root? #t) = (#<path:/home/asumu/code/contract-repl>); (links #:user? #f #:root? #t) = ()
raco pkg (show):
Installation-wide:
 [none]
User-specific, all-version:
 Package[*=auto]    Checksum    Source
 contract-repl      #f          (link /home/asumu/code/contract-repl)
User-specific, version-specific (5.3.4.12):
 [none]



Collections:
("/home/asumu/plt/racket-dev/add-on/5.3.4.12/collects"
 (non-existent-path))
("/home/asumu/plt/racket-dev/collects"
 ("graphics" "future-visualizer" "frtime" "framework" "make" "sgl" "launcher" "compiler" "mred" "srfi" "setup" "wxme" "honu" "mrlib" "scriblib" "r5rs" "trace" "info-domain" "typed-racket" "racket" "net" "file" "slideshow" "string-constants" "racklog" "openssl" "macro-debugger" "xml" "mysterx" "html" "drscheme" "at-exp" "hierlist" "profile" "icons" "readline" "config" "syntax" "scribble" "texpict" "mzlib" "realm" "math" "typed" "web-server" "plai" "rnrs" "eopl" "drracket" "planet" "syntax-color" "repo-time-stamp" "test-engine" "games" "picturing-programs" "ffi" "xrepl" "images" "errortrace" "json" "data" "unstable" "r6rs" "browser" "contract-profile" "2htdp" "parser-tools" "slatex" "scheme" "compatibility" "algol60" "scribblings" "pkg" "stepper" "lazy" "rackunit" "gui-debugger" "plot" "help" "pict" "meta" "redex" "version" "defaults" "s-exp" "tests" "swindle" "mzscheme" "deinprogramm" "raco" "preprocessor" "typed-scheme" "db" "embedded-gui" "lang" "dynext" "reader" ".gitignor!
 e" "htdp" "schemeunit" "teachpack" "mzcom" "datalog"))

Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t none) (default) #() "#lang racket\n" #t #f ((main) (test)) #t))
>Description:
Example:

ようこそ DrRacket, バージョン 5.3.4.12--2013-06-20(e8354b6a/d/tr-classes) [3m].
言語: typed/racket [カスタム]; memory limit: 1024 MB.
> (define y 3)
> (eval '(set! y "foo"))
> y
- : Integer [generalized from Positive-Byte]
"foo"
> (* y 3.3)
- : Flonum [generalized from Nonnegative-Flonum]
231411760906233.6
>How-To-Repeat:
>Fix:
>Audit-Trail:
From: Sam Tobin-Hochstadt <samth@ccs.neu.edu>
To: Asumu Takikawa <asumu@ccs.neu.edu>, bugs <bugs@racket-lang.org>
Cc: nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/13887: TR: `eval` at REPL breaks type safety
Date: Mon, 24 Jun 2013 09:37:58 -0400

 On Mon, Jun 24, 2013 at 9:28 AM,  <asumu@ccs.neu.edu> wrote:
 >
 > *** Description:
 > Example:
 >
 > ようこそ DrRacket, バージョン 5.3.4.12--2013-06-20(e8354b6a/d/tr-classes) [3m].
 > 言語: typed/racket [カスタム]; memory limit: 1024 MB.
 >> (define y 3)
 >> (eval '(set! y "foo"))
 >> y
 > - : Integer [generalized from Positive-Byte]
 > "foo"
 >> (* y 3.3)
 > - : Flonum [generalized from Nonnegative-Flonum]
 > 231411760906233.6
 
 
 Ugh. Unfortunately, the eval-handler mechanism isn't appropriately
 situated to fix this, either.
 
 Is this a problem in modules with namespace anchors?
 
 Sam
 
From: Asumu Takikawa <asumu@ccs.neu.edu>
To: Sam Tobin-Hochstadt <samth@ccs.neu.edu>
Cc: bugs <bugs@racket-lang.org>, nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/13887: TR: `eval` at REPL breaks type safety
Date: Mon, 24 Jun 2013 09:47:59 -0400

 On 2013-06-24 09:37:58 -0400, Sam Tobin-Hochstadt wrote:
 > Ugh. Unfortunately, the eval-handler mechanism isn't appropriately
 > situated to fix this, either.
 >
 > Is this a problem in modules with namespace anchors?
 
 It might be, but I couldn't figure out a way to abuse it. Namespace
 anchors aren't handled by TR, so that angle of attack doesn't work.
 
 Cheers,
 Asumu

