From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Fri Nov  7 21:33:39 2014
Received: from mail-ig0-f180.google.com (mail-ig0-f180.google.com [209.85.213.180])
	by winooski.ccs.neu.edu (8.14.7/8.14.7) with ESMTP id sA82Xaug020853
	for <bugs@bugs.plt-scheme.org>; Fri, 7 Nov 2014 21:33:36 -0500
Message-Id: <201411080233.sA82XXtE020846@winooski.ccs.neu.edu>
Date: Fri, 7 Nov 2014 21:33:33 -0500
From: eli@barzilay.org
To: bugs@racket-lang.org
Subject: TR: Unfortunate type printout

>Number:         14829
>Category:       typed-scheme
>Synopsis:       TR: Unfortunate type printout
>Class:          sw-bug
>Responsible:    asumu
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Fri Nov 07 21:36:01 -0500 2014
>Closed-Date:    Wed Nov 12 17:56:00 -0500 2014
>Last-Modified:  Wed Nov 12 17:56:00 -0500 2014
>Originator:     Eli Barzilay
>Organization:
plt
>Submitter-Id:   unknown
>Release:        6.1.1
>Environment:
Any
>Description:
Errors lead to a type output that looks to me like it will
confuse many people:

    -> (error 'foo "bleh: ~s" 'x)
    - : Any [more precisely: Nothing]
    ; foo: bleh: x [,bt for context]

But more than just the confusing bit of the "Any, more precisely
Nothing" phrase, there is the fact that it bothers to give a
type for something that is not really printed -- IOW, the result
of an exception is even "less printed" than the result of (void)
so it seems to me like it makes sense to not print any type for
such evaluations.
>How-To-Repeat:
>Fix:
>Audit-Trail:
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: eli@barzilay.org, bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/14829: TR: Unfortunate type printout
Date: Fri, 7 Nov 2014 22:57:47 -0500

 I think we should give it a new type: Puff [More precisely: the, magic, dragon] :-)
 
 
 
 On Nov 7, 2014, at 9:36 PM, eli@barzilay.org wrote:
 
 > A new problem report is waiting at
 >  http://bugs.racket-lang.org/query/?cmd=view&pr=14829
 > 
 > Reported by Eli Barzilay for release: 6.1.1
 > 
 > *** Description:
 > Errors lead to a type output that looks to me like it will
 > confuse many people:
 > 
 >    -> (error 'foo "bleh: ~s" 'x)
 >    - : Any [more precisely: Nothing]
 >    ; foo: bleh: x [,bt for context]
 > 
 > But more than just the confusing bit of the "Any, more precisely
 > Nothing" phrase, there is the fact that it bothers to give a
 > type for something that is not really printed -- IOW, the result
 > of an exception is even "less printed" than the result of (void)
 > so it seems to me like it makes sense to not print any type for
 > such evaluations.
 > 
 > *** How to repeat:
 > 
 > 
 > *** Environment:
 > Any
 > 
 
 
From: Asumu Takikawa <asumu@ccs.neu.edu>
To: eli@barzilay.org, bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/14829: TR: Unfortunate type printout
Date: Sat, 8 Nov 2014 12:33:40 -0500

 On 2014-11-07 21:36:02 -0500, eli@barzilay.org wrote:
 > But more than just the confusing bit of the "Any, more precisely
 > Nothing" phrase, there is the fact that it bothers to give a
 > type for something that is not really printed -- IOW, the result
 > of an exception is even "less printed" than the result of (void)
 > so it seems to me like it makes sense to not print any type for
 > such evaluations.
 
 Yeah, sorry, this is a side effect of a reorganization I made to REPL
 type-checking a while back (to do with catching syntax lifts). It used
 to be that the error would evaluate first before trying to print the
 type, so that the type would never be displayed.
 
 I think I can probably fix this at the cost of complicating the code a
 bit (which is why I didn't do it).
 
 Cheers,
 Asumu
From: Sam Tobin-Hochstadt <samth@cs.indiana.edu>
To: Asumu Takikawa <asumu@ccs.neu.edu>, eli@barzilay.org, bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/14829: TR: Unfortunate type printout
Date: Sat, 08 Nov 2014 17:35:40 +0000

 --089e0115fe3abd450605075c5b7e
 Content-Type: text/plain; charset=UTF-8
 
 We should fix this, and also change generalization not to generalize from
 Nothing to Any. But the fix could just be not printing Nothing, which
 should be easier.
 
 Sam
 
 On Sat, Nov 8, 2014, 12:33 PM Asumu Takikawa <asumu@ccs.neu.edu> wrote:
 
 > On 2014-11-07 21:36:02 -0500, eli@barzilay.org wrote:
 > > But more than just the confusing bit of the "Any, more precisely
 > > Nothing" phrase, there is the fact that it bothers to give a
 > > type for something that is not really printed -- IOW, the result
 > > of an exception is even "less printed" than the result of (void)
 > > so it seems to me like it makes sense to not print any type for
 > > such evaluations.
 >
 > Yeah, sorry, this is a side effect of a reorganization I made to REPL
 > type-checking a while back (to do with catching syntax lifts). It used
 > to be that the error would evaluate first before trying to print the
 > type, so that the type would never be displayed.
 >
 > I think I can probably fix this at the cost of complicating the code a
 > bit (which is why I didn't do it).
 >
 > Cheers,
 > Asumu
 >
 
 --089e0115fe3abd450605075c5b7e
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 We should fix this, and also change generalization not to generalize from N=
 othing to Any. But the fix could just be not printing Nothing, which should=
  be easier.<br><br>Sam<br><br><div class=3D"gmail_quote">On Sat, Nov 8, 201=
 4, 12:33 PM=C2=A0Asumu Takikawa &lt;<a href=3D"mailto:asumu@ccs.neu.edu">as=
 umu@ccs.neu.edu</a>&gt; wrote:<br><blockquote class=3D"gmail_quote" style=
 =3D"margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">On 2014-=
 11-07 21:36:02 -0500, <a href=3D"mailto:eli@barzilay.org" target=3D"_blank"=
 >eli@barzilay.org</a> wrote:<br>
 &gt; But more than just the confusing bit of the &quot;Any, more precisely<=
 br>
 &gt; Nothing&quot; phrase, there is the fact that it bothers to give a<br>
 &gt; type for something that is not really printed -- IOW, the result<br>
 &gt; of an exception is even &quot;less printed&quot; than the result of (v=
 oid)<br>
 &gt; so it seems to me like it makes sense to not print any type for<br>
 &gt; such evaluations.<br>
 <br>
 Yeah, sorry, this is a side effect of a reorganization I made to REPL<br>
 type-checking a while back (to do with catching syntax lifts). It used<br>
 to be that the error would evaluate first before trying to print the<br>
 type, so that the type would never be displayed.<br>
 <br>
 I think I can probably fix this at the cost of complicating the code a<br>
 bit (which is why I didn&#39;t do it).<br>
 <br>
 Cheers,<br>
 Asumu<br>
 </blockquote></div>
 
 --089e0115fe3abd450605075c5b7e--
From: Eric Dobson <eric.n.dobson@gmail.com>
To: Sam Tobin-Hochstadt <samth@cs.indiana.edu>
Cc: Asumu Takikawa <asumu@ccs.neu.edu>, Eli Barzilay <eli@barzilay.org>,
        bugs <bugs@racket-lang.org>, nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/14829: TR: Unfortunate type printout
Date: Sat, 8 Nov 2014 09:38:41 -0800

 --001a11c2cbde7d7b1f05075c6640
 Content-Type: text/plain; charset=UTF-8
 
 We explicitly generalize Nothing to Any. I cannot remeber what fails if we
 don't do that, but I remember trying to take it out and it not working.
 
 https://github.com/plt/racket/blob/master/pkgs/typed-racket-pkgs/typed-racket-lib/typed-racket/types/generalize.rkt#L20
 
 
 On Sat, Nov 8, 2014 at 9:35 AM, Sam Tobin-Hochstadt <samth@cs.indiana.edu>
 wrote:
 
 > We should fix this, and also change generalization not to generalize from
 > Nothing to Any. But the fix could just be not printing Nothing, which
 > should be easier.
 >
 > Sam
 >
 >
 > On Sat, Nov 8, 2014, 12:33 PM Asumu Takikawa <asumu@ccs.neu.edu> wrote:
 >
 >> On 2014-11-07 21:36:02 -0500, eli@barzilay.org wrote:
 >> > But more than just the confusing bit of the "Any, more precisely
 >> > Nothing" phrase, there is the fact that it bothers to give a
 >> > type for something that is not really printed -- IOW, the result
 >> > of an exception is even "less printed" than the result of (void)
 >> > so it seems to me like it makes sense to not print any type for
 >> > such evaluations.
 >>
 >> Yeah, sorry, this is a side effect of a reorganization I made to REPL
 >> type-checking a while back (to do with catching syntax lifts). It used
 >> to be that the error would evaluate first before trying to print the
 >> type, so that the type would never be displayed.
 >>
 >> I think I can probably fix this at the cost of complicating the code a
 >> bit (which is why I didn't do it).
 >>
 >> Cheers,
 >> Asumu
 >>
 >
 
 --001a11c2cbde7d7b1f05075c6640
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 <div dir=3D"ltr">We explicitly generalize Nothing to Any. I cannot remeber =
 what fails if we don&#39;t do that, but I remember trying to take it out an=
 d it not working.<div><br></div><div><a href=3D"https://github.com/plt/rack=
 et/blob/master/pkgs/typed-racket-pkgs/typed-racket-lib/typed-racket/types/g=
 eneralize.rkt#L20">https://github.com/plt/racket/blob/master/pkgs/typed-rac=
 ket-pkgs/typed-racket-lib/typed-racket/types/generalize.rkt#L20</a><br></di=
 v><div><br></div></div><div class=3D"gmail_extra"><br><div class=3D"gmail_q=
 uote">On Sat, Nov 8, 2014 at 9:35 AM, Sam Tobin-Hochstadt <span dir=3D"ltr"=
 >&lt;<a href=3D"mailto:samth@cs.indiana.edu" target=3D"_blank">samth@cs.ind=
 iana.edu</a>&gt;</span> wrote:<br><blockquote class=3D"gmail_quote" style=
 =3D"margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">We shoul=
 d fix this, and also change generalization not to generalize from Nothing t=
 o Any. But the fix could just be not printing Nothing, which should be easi=
 er.<span class=3D"HOEnZb"><font color=3D"#888888"><br><br>Sam</font></span>=
 <div class=3D"HOEnZb"><div class=3D"h5"><br><br><div class=3D"gmail_quote">=
 On Sat, Nov 8, 2014, 12:33 PM=C2=A0Asumu Takikawa &lt;<a href=3D"mailto:asu=
 mu@ccs.neu.edu" target=3D"_blank">asumu@ccs.neu.edu</a>&gt; wrote:<br><bloc=
 kquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1px #cc=
 c solid;padding-left:1ex">On 2014-11-07 21:36:02 -0500, <a href=3D"mailto:e=
 li@barzilay.org" target=3D"_blank">eli@barzilay.org</a> wrote:<br>
 &gt; But more than just the confusing bit of the &quot;Any, more precisely<=
 br>
 &gt; Nothing&quot; phrase, there is the fact that it bothers to give a<br>
 &gt; type for something that is not really printed -- IOW, the result<br>
 &gt; of an exception is even &quot;less printed&quot; than the result of (v=
 oid)<br>
 &gt; so it seems to me like it makes sense to not print any type for<br>
 &gt; such evaluations.<br>
 <br>
 Yeah, sorry, this is a side effect of a reorganization I made to REPL<br>
 type-checking a while back (to do with catching syntax lifts). It used<br>
 to be that the error would evaluate first before trying to print the<br>
 type, so that the type would never be displayed.<br>
 <br>
 I think I can probably fix this at the cost of complicating the code a<br>
 bit (which is why I didn&#39;t do it).<br>
 <br>
 Cheers,<br>
 Asumu<br>
 </blockquote></div>
 </div></div></blockquote></div><br></div>
 
 --001a11c2cbde7d7b1f05075c6640--
From: Eli Barzilay <eli@barzilay.org>
To: Sam Tobin-Hochstadt <samth@cs.indiana.edu>,
        Matthias Felleisen <matthias@ccs.neu.edu>
Cc: bugs@racket-lang.org, bug-notification@racket-lang.org,
        Asumu Takikawa <asumu@ccs.neu.edu>
Subject: Re: [racket-bug] all/14829: TR: Unfortunate type printout
Date: Sat, 8 Nov 2014 15:00:52 -0500

 Yesterday, Matthias Felleisen wrote:
 > 
 > I think we should give it a new type: Puff [More precisely: the,
 > magic, dragon] :-)
 
 :)  FWIW, I explicitly tell students about the Nothing type, which is
 why it strikes me as a bad idea to show in this way to everyone...
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!

Responsible changed from "samth" to "asumu" by asumu@racket-lang.org at Wed, 12 Nov 2014 17:56:00 -0500
Reason>>> A commit by asumu@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/7725262771
State changed from "open" to "closed" by asumu@racket-lang.org at Wed, 12 Nov 2014 17:56:00 -0500
Reason>>> A commit by asumu@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/7725262771
  | Don't print the type at the REPL for Bottom
  | 
  | Closes PR 14829

