From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Mon Aug 23 20:09:48 2010
Received: from mail-gy0-f172.google.com (mail-gy0-f172.google.com [209.85.160.172])
	by champlain.ccs.neu.edu (8.14.3/8.14.3) with ESMTP id o7O09l5s013936
	for <bugs@bugs.plt-scheme.org>; Mon, 23 Aug 2010 20:09:47 -0400
Message-Id: <201008240009.o7O09iwo013928@champlain.ccs.neu.edu>
Date: Mon, 23 Aug 2010 20:09:44 -0400
From: neil.toronto@gmail.com
To: bugs@racket-lang.org
Subject: Enable polymorphic struct subtypes in Typed Racket

>Number:         11122
>Category:       typed-scheme
>Synopsis:       Enable polymorphic struct subtypes in Typed Racket
>Class:          change-request
>Responsible:    samth
>Severity:       non-critical
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Mon Aug 23 20:12:01 -0400 2010
>Closed-Date:    Sun Jan 27 18:49:52 -0500 2013
>Last-Modified:  Sun Jan 27 18:49:52 -0500 2013
>Originator:     Neil Toronto
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.0.1
>Environment:
Linux i686 / Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.2.8) Gecko/20100723 Ubuntu/9.10 (karmic) Firefox/3.6.8
>Description:
The following has no direct analogue in Typed Racket, when the structs are used polymorphically:

#lang racket

(struct mybox (value))
(struct mypair mybox (snd))

(define (snd-or-value b)
  (if (mypair? b)
      (mypair-snd b)
      (mybox-value b)))


The steps to reproduce show a straightforward attempt and the error it produces. It seems the problem is due to the type of mypair?, which is (Any -> Boolean : (mypair Any)), or the fact that TR doesn't compute an intersection/refinement type for each branch of the if.
>How-To-Repeat:
#lang typed/racket

(struct: (T) mybox ([value : T]))
(struct: (T) mypair mybox ([snd : T]))

(: snd-or-value (All (T) ((mybox T) -> T)))
(define (snd-or-value b)
  (if (mypair? b)
      (mypair-snd b)
      (mybox-value b)))

#|
Type Checker: Polymorphic function mypair-snd could not be applied to arguments:
Argument 1:
  Expected: (mypair T)
  Given:    #(struct:mypair (Any Any))
|#
>Fix:
>Audit-Trail:
From: Eric Dobson <eric.n.dobson@gmail.com>
To: bugs@racket-lang.org, neil.toronto@gmail.com
Cc: 
Subject: Re: typed-scheme/11122: Enable polymorphic struct subtypes in Typed Racket
Date: Sun, 27 Jan 2013 09:43:39 -0800

 --047d7b414e8c65f60004d448b3a7
 Content-Type: text/plain; charset=UTF-8
 
 This seems to work for me now. I remember trying to solve something similar
 before, so it may have been fixed. Can you replicate it now?
 
 --047d7b414e8c65f60004d448b3a7
 Content-Type: text/html; charset=UTF-8
 
 <div dir="ltr">This seems to work for me now. I remember trying to solve something similar before, so it may have been fixed. Can you replicate it now?</div>
 
 --047d7b414e8c65f60004d448b3a7--
From: Neil Toronto <neil.toronto@gmail.com>
To: Eric Dobson <eric.n.dobson@gmail.com>
Cc: bugs@racket-lang.org
Subject: Re: typed-scheme/11122: Enable polymorphic struct subtypes in Typed
 Racket
Date: Sun, 27 Jan 2013 16:47:40 -0700

 On 01/27/2013 10:43 AM, Eric Dobson wrote:
 > This seems to work for me now. I remember trying to solve something
 > similar before, so it may have been fixed. Can you replicate it now?
 
 No, the steps to reproduce work fine now. Also, `math/array' relies on 
 this working, so it's definitely fixed and not likely to regress in the 
 future. I'll close it.
 
 Neil âŠ¥
 

State changed from "open" to "closed" by ntoronto at Sun, 27 Jan 2013 18:49:52 -0500
Reason>>> Fixed sometime before `math/array' was first committed
(which relies on correct behavior here)

