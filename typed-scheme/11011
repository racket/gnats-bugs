From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Fri Jul  2 12:02:36 2010
Received: from mail-gx0-f172.google.com (mail-gx0-f172.google.com [209.85.161.172])
	by champlain.ccs.neu.edu (8.14.3/8.14.3) with ESMTP id o62G2YL5002536
	for <bugs@bugs.plt-scheme.org>; Fri, 2 Jul 2010 12:02:34 -0400
Message-Id: <201007021602.o62G2Sv6002528@champlain.ccs.neu.edu>
Date: Fri, 2 Jul 2010 12:02:28 -0400
From: david_percy@brown.edu
To: bugs@racket-lang.org
Subject: Recursive types are broken

>Number:         11011
>Category:       typed-scheme
>Synopsis:       Recursive types are broken
>Class:          sw-bug
>Responsible:    samth
>Severity:       critical
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Fri Jul 02 12:04:01 -0400 2010
>Closed-Date:    Fri Jul 02 12:06:40 -0400 2010
>Last-Modified:  Fri Sep 03 21:01:33 -0400 2010
>Originator:     David Percy
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.0
>Environment:
macosx "Darwin david-percys-macbook-pro.local 9.8.0 Darwin Kernel Version 9.8.0: Wed Jul 15 16:55:01 PDT 2009; root:xnu-1228.15.4~1/RELEASE_I386 i386 i386" (i386-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 212324116

Collections:
(("/Users/davidpercy/Library/Racket/5.0/collects" non-existent-path) ("/Applications/Racket v5.0/collects" "2htdp" "afm" "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "help" "hierlist" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "redex" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tex2page" "texpict" "trace" "typed" "typed-scheme" "unstable" "version" "web-server" "wxme" "xml"))
Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang scheme\n" #t))
>Description:
When run, this definition

#lang typed/racket
(Rec BT (U Number (Pair BT BT)))

produces this error:

type-check: type name used out of context in: (Rec BT (U Number (Pair BT BT)))

The example was taken from http://docs.racket-lang.org/ts-guide/types.html#(part._.Recursive_.Types) and should work as documented there.

Similar expressions such as (Rec LIST-OF-NUM (U Null (Pair Number LIST-OF-NUM))) fail with the same error message. Recursive types don't seem to work at all.
>How-To-Repeat:
Enter this definition:

#lang typed/racket
(Rec BT (U Number (Pair BT BT)))

and run.
>Fix:
>Audit-Trail:
State changed from "open" to "closed" by samth at Fri, 02 Jul 2010 12:06:40 -0400
Reason>>> not a bug

From: Sam Tobin-Hochstadt <samth@ccs.neu.edu>
To: david_percy@brown.edu, bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11011: Recursive types are broken
Date: Fri, 2 Jul 2010 12:06:26 -0400

 On Fri, Jul 2, 2010 at 12:04 PM,  <david_percy@brown.edu> wrote:
 > A new problem report is waiting at
 > =A0http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D11011
 >
 > Reported by David Percy for release: 5.0
 >
 > *** Description:
 > When run, this definition
 >
 > #lang typed/racket
 > (Rec BT (U Number (Pair BT BT)))
 >
 > produces this error:
 >
 > type-check: type name used out of context in: (Rec BT (U Number (Pair BT =
 BT)))
 >
 > The example was taken from http://docs.racket-lang.org/ts-guide/types.htm=
 l#(part._.Recursive_.Types) and should work as documented there.
 >
 > Similar expressions such as (Rec LIST-OF-NUM (U Null (Pair Number LIST-OF=
 -NUM))) fail with the same error message. Recursive types don't seem to wor=
 k at all.
 
 Types are not expressions.  You can't just put them at the top-level
 of a module and expect them to do something.  What would this program
 do?
 
 --=20
 sam th
 samth@ccs.neu.edu
From: Shriram Krishnamurthi <sk@cs.brown.edu>
To: david_percy@brown.edu, bugs@racket-lang.org
Cc: 
Subject: Re: [racket-bug] all/11011: Recursive types are broken
Date: Fri, 2 Jul 2010 12:45:09 -0400

 David, feel free to come by the iLab and one of us can help you sort this out.
 
 Shriram
From: David Percy <David_Percy@brown.edu>
To: Sam Tobin-Hochstadt <samth@ccs.neu.edu>,
        Shriram Krishnamurthi <sk@cs.brown.edu>
Cc: bugs@racket-lang.org
Subject: Re: [racket-bug] all/11011: Recursive types are broken
Date: Fri, 2 Jul 2010 14:06:27 -0400

 --000e0cd25b6830ef34048a6b72e7
 Content-Type: text/plain; charset=ISO-8859-1
 
 Ohhh I thought Rec was for actually defining a new type and that you would
 use it instead of define-type.  I see now that what I really meant was
 
 (define-type Binary-Tree (Rec BT (U Number (Pair BT BT))))
 
 which works fine.
 
 Sorry
 
 David
 
 
 On Fri, Jul 2, 2010 at 12:06 PM, Sam Tobin-Hochstadt <samth@ccs.neu.edu>wrote:
 
 > On Fri, Jul 2, 2010 at 12:04 PM,  <david_percy@brown.edu> wrote:
 > > A new problem report is waiting at
 > >  http://bugs.racket-lang.org/query/?cmd=view&pr=11011
 > >
 > > Reported by David Percy for release: 5.0
 > >
 > > *** Description:
 > > When run, this definition
 > >
 > > #lang typed/racket
 > > (Rec BT (U Number (Pair BT BT)))
 > >
 > > produces this error:
 > >
 > > type-check: type name used out of context in: (Rec BT (U Number (Pair BT
 > BT)))
 > >
 > > The example was taken from
 > http://docs.racket-lang.org/ts-guide/types.html#(part._.Recursive_.Types)and should work as documented there.
 > >
 > > Similar expressions such as (Rec LIST-OF-NUM (U Null (Pair Number
 > LIST-OF-NUM))) fail with the same error message. Recursive types don't seem
 > to work at all.
 >
 > Types are not expressions.  You can't just put them at the top-level
 > of a module and expect them to do something.  What would this program
 > do?
 >
 > --
 > sam th
 > samth@ccs.neu.edu
 >
 
 --000e0cd25b6830ef34048a6b72e7
 Content-Type: text/html; charset=ISO-8859-1
 Content-Transfer-Encoding: quoted-printable
 
 Ohhh I thought Rec was for actually defining a new type and that you would =
 use it instead of define-type. =A0I see now that what I really meant was<di=
 v><br></div><div>(define-type Binary-Tree=A0(Rec BT (U Number (Pair BT BT))=
 ))</div>
 <div><br></div><div>which works fine.</div><div><br></div><div>Sorry</div><=
 div><br></div><div>David</div><div><br></div><div><br><div class=3D"gmail_q=
 uote">On Fri, Jul 2, 2010 at 12:06 PM, Sam Tobin-Hochstadt <span dir=3D"ltr=
 ">&lt;<a href=3D"mailto:samth@ccs.neu.edu">samth@ccs.neu.edu</a>&gt;</span>=
  wrote:<br>
 <blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1p=
 x #ccc solid;padding-left:1ex;">On Fri, Jul 2, 2010 at 12:04 PM, =A0&lt;<a =
 href=3D"mailto:david_percy@brown.edu">david_percy@brown.edu</a>&gt; wrote:<=
 br>
 &gt; A new problem report is waiting at<br>
 <div class=3D"im">&gt; =A0<a href=3D"http://bugs.racket-lang.org/query/?cmd=
 =3Dview&amp;pr=3D11011" target=3D"_blank">http://bugs.racket-lang.org/query=
 /?cmd=3Dview&amp;pr=3D11011</a><br>
 &gt;<br>
 </div>&gt; Reported by David Percy for release: 5.0<br>
 &gt;<br>
 &gt; *** Description:<br>
 &gt; When run, this definition<br>
 &gt;<br>
 &gt; #lang typed/racket<br>
 &gt; (Rec BT (U Number (Pair BT BT)))<br>
 &gt;<br>
 &gt; produces this error:<br>
 &gt;<br>
 &gt; type-check: type name used out of context in: (Rec BT (U Number (Pair =
 BT BT)))<br>
 &gt;<br>
 &gt; The example was taken from <a href=3D"http://docs.racket-lang.org/ts-g=
 uide/types.html#(part._.Recursive_.Types)" target=3D"_blank">http://docs.ra=
 cket-lang.org/ts-guide/types.html#(part._.Recursive_.Types)</a> and should =
 work as documented there.<br>
 
 &gt;<br>
 &gt; Similar expressions such as (Rec LIST-OF-NUM (U Null (Pair Number LIST=
 -OF-NUM))) fail with the same error message. Recursive types don&#39;t seem=
  to work at all.<br>
 <br>
 Types are not expressions. =A0You can&#39;t just put them at the top-level<=
 br>
 of a module and expect them to do something. =A0What would this program<br>
 do?<br>
 <font color=3D"#888888"><br>
 --<br>
 sam th<br>
 <a href=3D"mailto:samth@ccs.neu.edu">samth@ccs.neu.edu</a><br>
 </font></blockquote></div><br></div>
 
 --000e0cd25b6830ef34048a6b72e7--
From: Sam Tobin-Hochstadt <samth@ccs.neu.edu>
To: David Percy <David_Percy@brown.edu>
Cc: Shriram Krishnamurthi <sk@cs.brown.edu>, bugs@racket-lang.org
Subject: Re: [racket-bug] all/11011: Recursive types are broken
Date: Fri, 2 Jul 2010 14:09:14 -0400

 On Fri, Jul 2, 2010 at 2:06 PM, David Percy <David_Percy@brown.edu> wrote:
 > Ohhh I thought Rec was for actually defining a new type and that you woul=
 d
 > use it instead of define-type. =A0I see now that what I really meant was
 > (define-type Binary-Tree=A0(Rec BT (U Number (Pair BT BT))))
 > which works fine.
 
 I've changed the documentation to make that clearer.
 
 > Sorry
 > David
 >
 > On Fri, Jul 2, 2010 at 12:06 PM, Sam Tobin-Hochstadt <samth@ccs.neu.edu>
 > wrote:
 >>
 >> On Fri, Jul 2, 2010 at 12:04 PM, =A0<david_percy@brown.edu> wrote:
 >> > A new problem report is waiting at
 >> > =A0http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D11011
 >> >
 >> > Reported by David Percy for release: 5.0
 >> >
 >> > *** Description:
 >> > When run, this definition
 >> >
 >> > #lang typed/racket
 >> > (Rec BT (U Number (Pair BT BT)))
 >> >
 >> > produces this error:
 >> >
 >> > type-check: type name used out of context in: (Rec BT (U Number (Pair =
 BT
 >> > BT)))
 >> >
 >> > The example was taken from
 >> > http://docs.racket-lang.org/ts-guide/types.html#(part._.Recursive_.Typ=
 es)
 >> > and should work as documented there.
 >> >
 >> > Similar expressions such as (Rec LIST-OF-NUM (U Null (Pair Number
 >> > LIST-OF-NUM))) fail with the same error message. Recursive types don't=
  seem
 >> > to work at all.
 >>
 >> Types are not expressions. =A0You can't just put them at the top-level
 >> of a module and expect them to do something. =A0What would this program
 >> do?
 >>
 >> --
 >> sam th
 >> samth@ccs.neu.edu
 >
 >
 
 
 
 --=20
 sam th
 samth@ccs.neu.edu

