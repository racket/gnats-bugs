From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Thu Jul 23 17:02:45 2009
Received: from qw-out-2122.google.com (qw-out-2122.google.com [74.125.92.26])
	by champlain.ccs.neu.edu (8.14.2/8.14.2) with ESMTP id n6NL2eGI017875
	for <bugs@bugs.plt-scheme.org>; Thu, 23 Jul 2009 17:02:40 -0400
Message-Id: <200907232102.n6NL2XYb017866@champlain.ccs.neu.edu>
Date: Thu, 23 Jul 2009 17:02:33 -0400
From: cce@ccs.neu.edu
To: bugs@plt-scheme.org
Subject: Contracts for polymorphic types interact unsoundly with union types

>Number:         10349
>Category:       typed-scheme
>Synopsis:       Contracts for polymorphic types interact unsoundly with union types
>Class:          sw-bug
>Responsible:    samth
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Thu Jul 23 17:04:01 -0400 2009
>Closed-Date:    Wed Jun 22 17:33:46 -0400 2011
>Last-Modified:  Wed Jun 22 17:33:46 -0400 2011
>Originator:     Carl Eastlund
>Organization:
plt
>Submitter-Id:   unknown
>Release:        4.2.1.1-svn23jul2009
>Environment:
macosx "Darwin Kauai.ccs.neu.edu 9.7.0 Darwin Kernel Version 9.7.0: Tue Mar 31 22:54:29 PDT 2009; root:xnu-1228.12.14~1/RELEASE_PPC Power Macintosh" (ppc-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 213442916

Collections:
(("/Users/cce/Library/PLT Scheme/4.2.1.1/collects" non-existent-path) ("/Users/cce/plt/trunk/collects" ".svn" "2htdp" "afm" "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "defaults" "deinprogramm" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profile" "profj" "profjWizard" "r5rs" "r6rs" "readline" "redex" "repos-time-stamp" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "sirmail" "slatex" "slideshow" "srfi" "srpersist" "stepper" "string-constants" "stxclass" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tests" "tex2page" "texpict" !
 "trace" "typed" "typed-scheme" "version" "waterworld" "web-server" "wxme" "xml"))
Computer Language: (("Module") (#(#t write mixed-fraction-e #f #t debug) (default) #() "#lang scheme\n" #t))
>Description:
Run the program below, then enter `my-ints' at the REPL.  I get this behavior:

> my-ints
- : (Listof Integer)
(1 "hello" 2 "goodbye" 3)
> 

Because polymorphic types use memoizing contracts, and the input list to values is (Listof (U A B)), every element of the input list is passed through the A contract and thus populates it, even if it's a B.  Thus the contract does not protect against using B values as As.
>How-To-Repeat:
#lang typed-scheme
(require/typed
 scheme/base
 [values (All (A B) ((Listof (U A B)) -> (Listof A)))])

(: integers ((Listof (U Integer String)) -> (Listof Integer)))
(define (integers x)
  ((inst values Integer String) x))

(: my-ints (Listof Integer))
(define my-ints (integers (list 1 "hello" 2 "goodbye" 3)))
>Fix:
>Audit-Trail:
State changed from "open" to "closed" by samth at Wed, 22 Jun 2011 17:33:46 -0400
Reason>>> FIXED

