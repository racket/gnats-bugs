From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Sun Nov 16 14:11:08 2014
Received: from mail-ie0-f174.google.com (mail-ie0-f174.google.com [209.85.223.174])
	by winooski.ccs.neu.edu (8.14.7/8.14.7) with ESMTP id sAGJB4LM005203
	for <bugs@bugs.plt-scheme.org>; Sun, 16 Nov 2014 14:11:04 -0500
Message-Id: <201411161911.sAGJB1YH005194@winooski.ccs.neu.edu>
Date: Sun, 16 Nov 2014 14:11:01 -0500
From: eli@barzilay.org
To: bugs@racket-lang.org
Subject: TR backwards-incompatible type parsing change

>Number:         14839
>Category:       typed-scheme
>Synopsis:       TR backwards-incompatible type parsing change
>Class:          sw-bug
>Responsible:    asumu
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Sun Nov 16 14:12:01 -0500 2014
>Closed-Date:    Tue Nov 18 13:59:54 -0500 2014
>Last-Modified:  Tue Nov 18 13:59:54 -0500 2014
>Originator:     Eli Barzilay
>Organization:
plt
>Submitter-Id:   unknown
>Release:        6.1.1
>Environment:
Any
>Description:
Something like

    (: foo : T -> T -> T)

but now it throws a "bad syntax" error.
>How-To-Repeat:
>Fix:
>Audit-Trail:
From: Asumu Takikawa <asumu@ccs.neu.edu>
To: Eli Barzilay <eli@barzilay.org>
Cc: "nobody@racket-lang.org" <nobody@racket-lang.org>,
        "bug-notification@racket-lang.org" <bug-notification@racket-lang.org>,
        bugs@racket-lang.org
Subject: Re: [racket-bug] all/14839: TR backwards-incompatible type parsing
 change
Date: Tue, 18 Nov 2014 01:55:43 -0500

 On 2014-11-18 01:31:08 -0500, Eli Barzilay wrote:
 > Some text was dropped for some reason.  The problem is that something
 > like this type declaration used to work in the past (ie, last semester
 > I used 5.3.6, and it worked) and now it fails to parse.
 
 I think the reason this was dropped (by accident) is that to increase
 code sharing, the code that parses `All` types and double colon
 annotations were unified in v6.0.1.
 
 It turns out that the following type was disallowed pre-v6.0.1 and is
 still disallowed:
 
   Welcome to Racket v6.0.
   -> (: f (All (X) X -> X -> X))
   ; readline-input:2:5: Type Checker: All: too many forms in body of All type
   ;   in: (All (X) X -> X -> X)
   ; [,bt for context]
 
 but a similar type without the polymorphism and specified with double
 colons was accepted. Since v6.0.1 consolidated both kinds of paren
 omission, it ended up with the `All` restriction in all cases.
 
 Should we just relax the `All` case too to accommodate backwards
 compatibility for the double colon thing?
 
 Cheers,
 Asumu
From: Eli Barzilay <eli@barzilay.org>
To: Asumu Takikawa <asumu@ccs.neu.edu>
Cc: "nobody@racket-lang.org" <nobody@racket-lang.org>,
        "bug-notification@racket-lang.org" <bug-notification@racket-lang.org>,
        "bugs@racket-lang.org" <bugs@racket-lang.org>
Subject: Re: [racket-bug] all/14839: TR backwards-incompatible type parsing change
Date: Tue, 18 Nov 2014 02:34:59 -0500

 Ah -- yes, I remember that asymmetry.  The first time I considered
 having my own `:' was because of that.
 
 So obviously I'd prefer it if the code allows it in both cases.
 
 And BTW, what do you mean by double colons?  I thought that (: foo :
 ...) was always the same without the second colon, no?
 
 
 On Tue, Nov 18, 2014 at 1:55 AM, Asumu Takikawa <asumu@ccs.neu.edu> wrote:
 > On 2014-11-18 01:31:08 -0500, Eli Barzilay wrote:
 >> Some text was dropped for some reason.  The problem is that something
 >> like this type declaration used to work in the past (ie, last semester
 >> I used 5.3.6, and it worked) and now it fails to parse.
 >
 > I think the reason this was dropped (by accident) is that to increase
 > code sharing, the code that parses `All` types and double colon
 > annotations were unified in v6.0.1.
 >
 > It turns out that the following type was disallowed pre-v6.0.1 and is
 > still disallowed:
 >
 >   Welcome to Racket v6.0.
 >   -> (: f (All (X) X -> X -> X))
 >   ; readline-input:2:5: Type Checker: All: too many forms in body of All type
 >   ;   in: (All (X) X -> X -> X)
 >   ; [,bt for context]
 >
 > but a similar type without the polymorphism and specified with double
 > colons was accepted. Since v6.0.1 consolidated both kinds of paren
 > omission, it ended up with the `All` restriction in all cases.
 >
 > Should we just relax the `All` case too to accommodate backwards
 > compatibility for the double colon thing?
 >
 > Cheers,
 > Asumu
 
 
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!
From: Sam Tobin-Hochstadt <samth@cs.indiana.edu>
To: Asumu Takikawa <asumu@ccs.neu.edu>, Eli Barzilay <eli@barzilay.org>
Cc: "nobody@racket-lang.org" <nobody@racket-lang.org>,
        "bug-notification@racket-lang.org" <bug-notification@racket-lang.org>,
        bugs@racket-lang.org
Subject: Re: [racket-bug] all/14839: TR backwards-incompatible type parsing change
Date: Tue, 18 Nov 2014 14:06:52 +0000

 --089e01634038765c370508229b90
 Content-Type: text/plain; charset=UTF-8
 
 On Tue Nov 18 2014 at 1:55:54 AM Asumu Takikawa <asumu@ccs.neu.edu> wrote:
 
 > On 2014-11-18 01:31:08 -0500, Eli Barzilay wrote:
 > > Some text was dropped for some reason.  The problem is that something
 > > like this type declaration used to work in the past (ie, last semester
 > > I used 5.3.6, and it worked) and now it fails to parse.
 >
 > I think the reason this was dropped (by accident) is that to increase
 > code sharing, the code that parses `All` types and double colon
 > annotations were unified in v6.0.1.
 >
 > It turns out that the following type was disallowed pre-v6.0.1 and is
 > still disallowed:
 >
 >   Welcome to Racket v6.0.
 >   -> (: f (All (X) X -> X -> X))
 >   ; readline-input:2:5: Type Checker: All: too many forms in body of All
 > type
 >   ;   in: (All (X) X -> X -> X)
 >   ; [,bt for context]
 >
 > but a similar type without the polymorphism and specified with double
 > colons was accepted. Since v6.0.1 consolidated both kinds of paren
 > omission, it ended up with the `All` restriction in all cases.
 >
 > Should we just relax the `All` case too to accommodate backwards
 > compatibility for the double colon thing?
 >
 
 Yes, we should. Do you want to do this, or should I?
 
 Sam
 
 --089e01634038765c370508229b90
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 <br><br><div class=3D"gmail_quote">On Tue Nov 18 2014 at 1:55:54 AM Asumu T=
 akikawa &lt;<a href=3D"mailto:asumu@ccs.neu.edu">asumu@ccs.neu.edu</a>&gt; =
 wrote:<br><blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;bord=
 er-left:1px #ccc solid;padding-left:1ex">On 2014-11-18 01:31:08 -0500, Eli =
 Barzilay wrote:<br>
 &gt; Some text was dropped for some reason.=C2=A0 The problem is that somet=
 hing<br>
 &gt; like this type declaration used to work in the past (ie, last semester=
 <br>
 &gt; I used 5.3.6, and it worked) and now it fails to parse.<br>
 <br>
 I think the reason this was dropped (by accident) is that to increase<br>
 code sharing, the code that parses `All` types and double colon<br>
 annotations were unified in v6.0.1.<br>
 <br>
 It turns out that the following type was disallowed pre-v6.0.1 and is<br>
 still disallowed:<br>
 <br>
 =C2=A0 Welcome to Racket v6.0.<br>
 =C2=A0 -&gt; (: f (All (X) X -&gt; X -&gt; X))<br>
 =C2=A0 ; readline-input:2:5: Type Checker: All: too many forms in body of A=
 ll type<br>
 =C2=A0 ;=C2=A0 =C2=A0in: (All (X) X -&gt; X -&gt; X)<br>
 =C2=A0 ; [,bt for context]<br>
 <br>
 but a similar type without the polymorphism and specified with double<br>
 colons was accepted. Since v6.0.1 consolidated both kinds of paren<br>
 omission, it ended up with the `All` restriction in all cases.<br>
 <br>
 Should we just relax the `All` case too to accommodate backwards<br>
 compatibility for the double colon thing?<br></blockquote><div><br></div><d=
 iv>Yes, we should. Do you want to do this, or should I?</div><div><br></div=
 ><div>Sam=C2=A0</div></div>
 
 --089e01634038765c370508229b90--
From: Asumu Takikawa <asumu@ccs.neu.edu>
To: Sam Tobin-Hochstadt <samth@cs.indiana.edu>
Cc: Eli Barzilay <eli@barzilay.org>,
        "nobody@racket-lang.org" <nobody@racket-lang.org>,
        "bug-notification@racket-lang.org" <bug-notification@racket-lang.org>,
        bugs@racket-lang.org
Subject: Re: [racket-bug] all/14839: TR backwards-incompatible type parsing
 change
Date: Tue, 18 Nov 2014 09:38:01 -0500

 On 2014-11-18 14:06:52 +0000, Sam Tobin-Hochstadt wrote:
 >    Yes, we should. Do you want to do this, or should I?
 
 I can. It should just be one or two lines that need to change and I
 already paged it in.
 
 Cheers,
 Asumu

Responsible changed from "samth" to "asumu" by asumu@racket-lang.org at Tue, 18 Nov 2014 13:59:54 -0500
Reason>>> A commit by asumu@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/27132ee061
State changed from "open" to "closed" by asumu@racket-lang.org at Tue, 18 Nov 2014 13:59:54 -0500
Reason>>> A commit by asumu@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/27132ee061
  | Relax parsing of `All` types and type annotations
  | 
  | Closes PR 14839

