From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Tue Mar  3 10:25:49 2009
Received: from qw-out-2122.google.com (qw-out-2122.google.com [74.125.92.26])
	by champlain.ccs.neu.edu (8.14.2/8.14.2) with ESMTP id n23FPeDW000603
	for <bugs@bugs.plt-scheme.org>; Tue, 3 Mar 2009 10:25:40 -0500
Message-Id: <200903031525.n23FPCOR000597@champlain.ccs.neu.edu>
Date: Tue, 3 Mar 2009 10:25:12 -0500
From: pnkfelix@ccs.neu.edu
To: bugs@plt-scheme.org
Subject: typed scheme internal typechecker error

>Number:         10106
>Category:       typed-scheme
>Synopsis:       typed scheme internal typechecker error
>Class:          sw-bug
>Responsible:    samth
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Tue Mar 03 10:28:01 -0500 2009
>Closed-Date:    Wed Aug 12 18:23:07 -0400 2009
>Last-Modified:  Wed Aug 12 18:23:07 -0400 2009
>Originator:     Felix Klock
>Organization:
plt
>Submitter-Id:   unknown
>Release:        4.1.4
>Environment:
macosx "Darwin Chimaera.local 9.6.0 Darwin Kernel Version 9.6.0: Mon Nov 24 17:37:00 PST 2008; root:xnu-1228.9.59~1/RELEASE_I386 i386 i386" (i386-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 147596572

Collections:
(("/Users/pnkfelix/Library/PLT Scheme/4.1.4/collects" non-existent-path) ("/Applications/PLT Scheme v4.1.4/collects" "2htdp" "afm" "algol60" "browser" "combinator-parser" "compiler" "config" "defaults" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "help" "hierlist" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profj" "r5rs" "r6rs" "readline" "redex" "rnrs" "s-exp" "scheme" "scribble" "scribblings" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tex2page" "texpict" "trace" "typed" "typed-scheme" "version" "web-server" "wxme" "xml"))
Computer Language: (("Module") (#(#t write mixed-fraction-e #f #t debug) (default) #() "#lang scheme\n" #t))
>Description:
Running the module below in DrScheme 4.1.4 yields:

Internal Typechecker Error: resolve-name: not a name Unknown Type: #(struct:Error 24)
while typechecking
here


#lang typed-scheme

(define-type-alias ExactNonnegativeInteger Integer)
(define-type-alias Xexpr
  (Rec X (U String 
            (Pair Symbol 
                  (Pair (Listof (List Symbol String))
                        (Listof X)))
            (Pair Symbol (Listof X))
            Symbol
            ExactNonnegativeInteger
            Cdata
            Misc)))

(require-typed-struct 
 document ((prolog : prolog)
           (element : element)
           (misc : (U comment pcdata)))                 xml)
(require-typed-struct
 prolog ((misc  : (Listof (U comment pcdata)))
         (dtd   : (U document-type #f))
         (misc2 : (Listof (U comment pcdata))))         xml)
(require-typed-struct
 document-type ((name     : Symbol)
                (external : external-dtd)
                (inlined  : #f))                        xml)
(require-typed-struct 
 external-dtd ((system : String))                       xml)
(require-typed-struct 
 (external-dtd/public external-dtd) ((public : String)) xml)
(require-typed-struct
 (external-dtd/system external-dtd) ()                  xml)

(require-typed-struct 
 (element source) ((name       : Symbol)
                   (attributes : (Listof attribute))
                   (content    : (Listof content)))     xml)


(define-type-alias content
  (U pcdata element entity comment cdata))
(: content? (Any -> Boolean : content))
(define (content? v)
  (or (pcdata? v) (element? v)
      (entity? v) (comment? v) (cdata? v)))

(require-typed-struct 
 (attribute source) ((name  : Symbol)
                     (value : String))                  xml)

(require-typed-struct 
 (entity source)    ((text : (U ExactNonnegativeInteger
                                Symbol)))               xml)

(require-typed-struct 
 (pcdata source)    ((string : String))                 xml)

(require-typed-struct 
 (cdata source)     ((string : String))                 xml)

(require-typed-struct 
 (p-i source)       ((target-name : String)
                     (instruction : String))            xml)

(require-typed-struct
 comment            ((text : String))                   xml)

(require-typed-struct 
 source             ((start : (U location Symbol))
                     (stop  : (U location Symbol)))     xml)

(require-typed-struct 
 location           ((line   : ExactNonnegativeInteger)
                     (char   : ExactNonnegativeInteger)
                     (offset : ExactNonnegativeInteger)) xml)

#;
(require-typed-struct 
 (exn:invalid-xexpr exn:fail) ((code : Any))              xml)
(require-typed-struct 
  exn:invalid-xexpr  ((code : Any))               xml)

(require/typed 
 xml
 (read-xml       (case-lambda: (()           document)
                               ((Input-Port) document)))
 (read-xml/element 
                 (case-lambda: (()           element)
                               ((Input-Port) element)))
 (syntax:read-xml
                 (case-lambda: (()           Syntax)
                               ((Input-Port) Syntax)))
 (syntax:read-xml/element
                 (case-lambda: (()           Syntax)
                               ((Input-Port) Syntax)))
 (write-xml      (case-lambda: ((document)             Void)
                               ((document Output-Port) Void)))
 (write-xml/content
                 (case-lambda: ((content)              Void)
                               ((content Output-Port)  Void)))
 (display-xml    (case-lambda: ((document)             Void)
                               ((document Output-Port) Void)))
 (display-xml/content
                 (case-lambda: ((document)             Void)
                               ((document Output-Port) Void)))
 (permissive?    (case-lambda: (()           Boolean)
                               ((Any)        Void)))
 (xml->xexpr     (content -> Xexpr))
 (xexpr->xml     (Xexpr -> content))
 (xexpr->string  (Xexpr -> String))
 (eliminate-whitespace ((Listof Symbol) 
                        (Boolean -> Any)
                        element 
                        -> element))
 (validate-xexpr (Any -> #t))
 (correct-xexpr? (Any
                  (-> Any) 
                  (exn:invalid-xexpr -> Any)
                  -> Any))
 (empty-tag-shorthand (Parameter 
                       (U 'always 'never (Listof Symbol))))
 (html-empty-tags (Listof Symbol))
 (collapse-whitespace (Parameter Any Boolean))
 (read-comments       (Parameter Any Boolean))
 (xexpr-drop-empty-attributes (Parameter Any Boolean)))
>How-To-Repeat:
>Fix:
>Audit-Trail:
State changed from "open" to "closed" by samth at Wed, 12 Aug 2009 18:23:07 -0400
Reason>>> fixed in svn

