From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Fri Mar  8 11:28:56 2013
Received: from mail-ob0-f178.google.com (mail-ob0-f178.google.com [209.85.214.178])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id r28GSqaF027045
	for <bugs@bugs.plt-scheme.org>; Fri, 8 Mar 2013 11:28:52 -0500
Message-Id: <201303081628.r28GSoRn027040@champlain.ccs.neu.edu>
Date: Fri, 8 Mar 2013 11:28:50 -0500
From: eric.n.dobson@gmail.com
To: bugs@racket-lang.org
Subject: Bad error message from TR, case-> types are function types

>Number:         13585
>Category:       typed-scheme
>Synopsis:       Bad error message from TR, case-> types are function types
>Class:          sw-bug
>Responsible:    samth
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Fri Mar 08 11:32:01 -0500 2013
>Last-Modified:  Tue Mar 26 02:14:48 -0400 2013
>Originator:     Eric Dobson
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.3.2.3
>Environment:
MacIntel / Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_2) AppleWebKit/537.28 (KHTML, like Gecko) Chrome/26.0.1397.2 Safari/537.28
>Description:
I expect this to give me a sane error message about why the type is wrong, instead I get:

/Users/endobson/tmp/tmp.rkt:8:2: Type Checker: Cannot apply expression of type (case-> (('first-arg -> 'return) (Pairof 'first-arg (Listof 'first-arg)) -> (Pairof 'return (Listof 'return))) (('first-arg 'other-args ... T -> 'return) (Listof 'first-arg) (Listof 'other-args) ... T -> (Listof 'return))), since it is not a function type
  in: ((inst map (quote return) (quote first-arg) (quote other-args) ... T) f l)
  context...:
   /Users/endobson/proj/racket/plt/collects/typed-racket/typecheck/tc-toplevel.rkt:295:0: type-check
   success
   /Users/endobson/proj/racket/plt/collects/typed-racket/typed-racket.rkt:40:4
   standard-module-name-resolver
>How-To-Repeat:
#lang typed/racket/base

(: my-map (All (T ...) ((All (X) (X -> X)) (List T ... T) -> (List T ... T))))
(define (my-map f l)
  ((inst map 'return 'first-arg 'other-args ... T) f l))
>Fix:
