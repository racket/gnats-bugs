From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Wed Jan 28 11:46:42 2009
Received: from rv-out-0506.google.com (rv-out-0506.google.com [209.85.198.236])
	by champlain.ccs.neu.edu (8.14.2/8.14.2) with ESMTP id n0SGkWVl029798
	for <bugs@bugs.plt-scheme.org>; Wed, 28 Jan 2009 11:46:32 -0500
Message-Id: <200901281646.n0SGkRv8029791@champlain.ccs.neu.edu>
Date: Wed, 28 Jan 2009 11:46:27 -0500
From: eli@barzilay.org
To: bugs@plt-scheme.org
Subject: match and memq in TS

>Number:         10046
>Category:       typed-scheme
>Synopsis:       match and memq in TS
>Class:          change-request
>Responsible:    samth
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Wed Jan 28 11:48:01 -0500 2009
>Closed-Date:    Tue May 18 11:03:02 -0400 2010
>Last-Modified:  Tue May 18 11:03:02 -0400 2010
>Originator:     Eli Barzilay
>Organization:
plt
>Submitter-Id:   unknown
>Release:        4.1.4.2
>Environment:
unix "Linux winooski.ccs.neu.edu 2.6.23.15-80.fc7 #1 SMP Sun Feb 10 16:52:18 EST 2008 x86_64 x86_64 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 16
Human Language: english
(current-memory-use) 322402624

Collections:
(("/home/eli/.plt-scheme/4.1.4.2/collects" "CSU660" "info-domain") ("/home/scheme/plt/collects" "icons" "ffi" "mred" "dynext" "mzscheme" ".svn" "make" "preprocessor" "file" "openssl" "sgl" "htdch" "s-exp" "slideshow" "mysterx" "graphics" "test-engine" "guibuilder" "scheme" "frtime" "waterworld" "wxme" "lazy" "mzlib" "macro-debugger" "scribble" "syntax-color" "mzcom" "help" "swindle" "config" "net" "stxclass" "hierlist" "test-box-recovery" "2htdp" "trace" "mrlib" "algol60" "browser" "profj" "framework" "srpersist" "typed-scheme" "info-domain" "compiler" "errortrace" "eopl" "sirmail" "syntax" "combinator-parser" "string-constants" "html" "slatex" "stepper" "repos-time-stamp" "honu" "launcher" "htdp" "profjWizard" "lang" "rnrs" "setup" "plot" "teachpack" "tests" "xml" "scribblings" "planet" "readline" "parser-tools" "embedded-gui" "drscheme" "defaults" "handin-server" "srfi" "afm" "handin-client" "r6rs" "version" "typed" "texpict" "games" "tex2page" "gui-debugger" "web-server" !
 "r5rs" "redex"))
Computer Language: (("Module") (#(#t write mixed-fraction-e #f #t test-coverage) (default) #() "#lang scheme\n" #t))
>Description:
In the code below, the first definition typechecks, but the rest do not.  It would be
nice if they can work.
>How-To-Repeat:
#lang CSU660

(: foo : Any -> (U 'x 'y))
#;
(define (foo x)
  (match x
    ['x x]
    ['y x]
    [_ 'x]))

#;
(define (foo x)
  (match x
    ['x x]
    ['y x]
    [_ 'x]))

#;
(define (foo x)
  (match x
    [(or 'x 'y) x]
    [_ 'x]))

#;
(define (foo x)
  (if (memq x '(x y))
      x
      'x))
>Fix:
>Audit-Trail:
From: Sam TH <samth@ccs.neu.edu>
To: eli@barzilay.org, bugs@plt-scheme.org
Cc: 
Subject: Re: [plt-bug] all/10046: match and memq in TS
Date: Wed, 28 Jan 2009 12:21:00 -0500

 None of these definitions typecheck for me (in Typed Scheme, not the
 660 language).  Also, the first two are identical.  Is there something
 tricky going on here?
 
 sam th
 
 On Wed, Jan 28, 2009 at 11:48 AM,  <eli@barzilay.org> wrote:
 > A new problem report is waiting at
 >  http://bugs.plt-scheme.org/query/?cmd=3Dview&pr=3D10046
 >
 > Reported by Eli Barzilay for release: 4.1.4.2
 >
 > *** Description:
 > In the code below, the first definition typechecks, but the rest do not. =
  It would be
 > nice if they can work.
 >
 > *** How to repeat:
 > #lang CSU660
 >
 > (: foo : Any -> (U 'x 'y))
 > #;
 > (define (foo x)
 >  (match x
 >    ['x x]
 >    ['y x]
 >    [_ 'x]))
 >
 > #;
 > (define (foo x)
 >  (match x
 >    ['x x]
 >    ['y x]
 >    [_ 'x]))
 >
 > #;
 > (define (foo x)
 >  (match x
 >    [(or 'x 'y) x]
 >    [_ 'x]))
 >
 > #;
 > (define (foo x)
 >  (if (memq x '(x y))
 >      x
 >      'x))
 >
 > *** Environment:
 > unix "Linux winooski.ccs.neu.edu 2.6.23.15-80.fc7 #1 SMP Sun Feb 10 16:52=
 :18 EST 2008 x86_64 x86_64 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display=
 -depth) =3D 16
 > Human Language: english
 > (current-memory-use) 322402624
 >
 > Collections:
 > (("/home/eli/.plt-scheme/4.1.4.2/collects" "CSU660" "info-domain") ("/hom=
 e/scheme/plt/collects" "icons" "ffi" "mred" "dynext" "mzscheme" ".svn" "mak=
 e" "preprocessor" "file" "openssl" "sgl" "htdch" "s-exp" "slideshow" "myste=
 rx" "graphics" "test-engine" "guibuilder" "scheme" "frtime" "waterworld" "w=
 xme" "lazy" "mzlib" "macro-debugger" "scribble" "syntax-color" "mzcom" "hel=
 p" "swindle" "config" "net" "stxclass" "hierlist" "test-box-recovery" "2htd=
 p" "trace" "mrlib" "algol60" "browser" "profj" "framework" "srpersist" "typ=
 ed-scheme" "info-domain" "compiler" "errortrace" "eopl" "sirmail" "syntax" =
 "combinator-parser" "string-constants" "html" "slatex" "stepper" "repos-tim=
 e-stamp" "honu" "launcher" "htdp" "profjWizard" "lang" "rnrs" "setup" "plot=
 " "teachpack" "tests" "xml" "scribblings" "planet" "readline" "parser-tools=
 " "embedded-gui" "drscheme" "defaults" "handin-server" "srfi" "afm" "handin=
 -client" "r6rs" "version" "typed" "texpict" "games" "tex2page" "gui-debugge=
 r" "web-server" !
 >  "r5rs" "redex"))
 > Computer Language: (("Module") (#(#t write mixed-fraction-e #f #t test-co=
 verage) (default) #() "#lang scheme\n" #t))
 >
 >
 
 
 
 --=20
 sam th
 samth@ccs.neu.edu
From: Eli Barzilay <eli@barzilay.org>
To: Sam TH <samth@ccs.neu.edu>
Cc: bugs@plt-scheme.org
Subject: Re: [plt-bug] all/10046: match and memq in TS
Date: Wed, 28 Jan 2009 12:33:17 -0500

 On Jan 28, Sam TH wrote:
 > None of these definitions typecheck for me (in Typed Scheme, not the
 > 660 language).  Also, the first two are identical.  Is there
 > something tricky going on here?
 
 Sorry, the first one should be:
 
   (define (foo x)
    (match x
      ['x 'x]
      ['y 'y]
      [_ 'x]))
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                   http://www.barzilay.org/                 Maze is Life!
From: Sam TH <samth@ccs.neu.edu>
To: Eli Barzilay <eli@barzilay.org>
Cc: bugs@plt-scheme.org
Subject: Re: [plt-bug] all/10046: match and memq in TS
Date: Wed, 28 Jan 2009 13:01:44 -0500

 Ok, that makes more sense.  The first two are hard, since they involve
 multiple variables.  The `memq' one is easier, and maybe I can do it
 soon.
 
 sam th
 
 On Wed, Jan 28, 2009 at 12:33 PM, Eli Barzilay <eli@barzilay.org> wrote:
 > On Jan 28, Sam TH wrote:
 >> None of these definitions typecheck for me (in Typed Scheme, not the
 >> 660 language).  Also, the first two are identical.  Is there
 >> something tricky going on here?
 >
 > Sorry, the first one should be:
 >
 >  (define (foo x)
 >   (match x
 >     ['x 'x]
 >     ['y 'y]
 >     [_ 'x]))
 >
 > --
 >          ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
 >                  http://www.barzilay.org/                 Maze is Life!
 >
 
 
 
 -- 
 sam th
 samth@ccs.neu.edu
From: Eli Barzilay <eli@barzilay.org>
To: Sam TH <samth@ccs.neu.edu>
Cc: bugs@plt-scheme.org
Subject: Re: [plt-bug] all/10046: match and memq in TS
Date: Fri, 30 Jan 2009 11:00:57 -0500

 On Jan 28, Sam TH wrote:
 > Ok, that makes more sense.  The first two are hard, since they
 > involve multiple variables.  The `memq' one is easier, and maybe I
 > can do it soon.
 
 Yeah, the `memq' looked to me like it can be easy to do.  The `match'
 would be more useful in my course, but that's only in one small case
 so no big deal.
 
 
 > On Wed, Jan 28, 2009 at 12:33 PM, Eli Barzilay <eli@barzilay.org> wrote:
 > > On Jan 28, Sam TH wrote:
 > >> None of these definitions typecheck for me (in Typed Scheme, not the
 > >> 660 language).  Also, the first two are identical.  Is there
 > >> something tricky going on here?
 > >
 > > Sorry, the first one should be:
 > >
 > >  (define (foo x)
 > >   (match x
 > >     ['x 'x]
 > >     ['y 'y]
 > >     [_ 'x]))
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                   http://www.barzilay.org/                 Maze is Life!

From: Sam Tobin-Hochstadt <samth@ccs.neu.edu>
To: Eli Barzilay <eli@barzilay.org>
Cc: bugs@plt-scheme.org
Subject: Re: [plt-bug] all/10046: match and memq in TS
Date: Thu, 7 Jan 2010 17:12:46 -0500

 On Fri, Jan 30, 2009 at 11:00 AM, Eli Barzilay <eli@barzilay.org> wrote:
 > On Jan 28, Sam TH wrote:
 >> Ok, that makes more sense. =A0The first two are hard, since they
 >> involve multiple variables. =A0The `memq' one is easier, and maybe I
 >> can do it soon.
 >
 > Yeah, the `memq' looked to me like it can be easy to do. =A0The `match'
 > would be more useful in my course, but that's only in one small case
 > so no big deal.
 
 This now works with `member', but not `memq' yet (I'll add that soon).
 --=20
 sam th
 samth@ccs.neu.edu

State changed from "open" to "closed" by samth at Tue, 18 May 2010 11:03:02 -0400
Reason>>> fixed

