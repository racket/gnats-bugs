From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Thu Nov 21 17:55:57 2013
Received: from mail-ob0-f171.google.com (mail-ob0-f171.google.com [209.85.214.171])
	by winooski.ccs.neu.edu (8.14.7/8.14.7) with ESMTP id rALMtsBN000659
	for <bugs@bugs.plt-scheme.org>; Thu, 21 Nov 2013 17:55:54 -0500
Message-Id: <201311212255.rALMtquI000637@winooski.ccs.neu.edu>
Date: Thu, 21 Nov 2013 17:55:52 -0500
From: asumu@ccs.neu.edu
To: bugs@racket-lang.org
Subject: Two related bugs with Procedure type and case-lambda

>Number:         14187
>Category:       typed-scheme
>Synopsis:       Two related bugs with Procedure type and case-lambda
>Class:          sw-bug
>Responsible:    samth
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Thu Nov 21 17:56:01 -0500 2013
>Closed-Date:    Thu Jun 26 16:42:54 -0400 2014
>Last-Modified:  Thu Jun 26 16:42:54 -0400 2014
>Originator:     Asumu Takikawa
>Organization:
plt
>Submitter-Id:   unknown
>Release:        6.0.0.1--2013-11-20(53ce3b7b/d)
>Environment:
unix "Linux willamette 3.10-3-amd64 #1 SMP Debian 3.10.11-1 (2013-09-10) x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 431398772
Links: (links) = (); (links #:user? #f) = ("autobib-utils" "gradual-typing-bib" "drracket-solarized" "racket-bib"); (links #:root? #t) = (); (links #:user? #f #:root? #t) = (#<path:/home/asumu/code/raco-find-collection>)
raco pkg (show):
/home/asumu/plt/racket-git/racket/share/devel-pkgs:
 Package              Checksum    Source
 main-distribution    #f          (static-link ../../../pkgs/main-distribution)
 plt-services         #f          (static-link ../../../pkgs/plt-services)
 racket-lib           #f          (static-link ../../../pkgs/racket-pkgs/racket-lib)
 [202 auto-installed packages not shown]
Installation-wide:
 Package                 Checksum    Source
 autobib-utils           #f          (link ../../../../../docs/autobib-utils)
 drracket-solarized      #f          (link ../../../../../code/drracket-solarized)
 gradual-typing-bib      #f          (link ../../../../../docs/gradual-typing-bib)
 racket-bib              #f          (link ../../../../../docs/racket-bib)
 raco-find-collection    #f          (link ../../../../../code/raco-find-collection)
User-specific for installation "development":
 [none]



Collections:
("/home/asumu/plt/racket-git/add-on/development/collects"
 (non-existent-path))
("/home/asumu/plt/racket-git/racket/collects"
 (".gitignore" "acks" "compiler" "data" "db" "dynext" "ffi" "file" "info" "info-domain" "json" "launcher" "net" "openssl" "pkg" "planet" "racket" "raco" "reader" "realm" "s-exp" "setup" "syntax" "unstable" "version" "xml"))

Recent Internal Errors: 
Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((main) (test)) #t))
>Description:
Consider the following example:

  #lang typed/racket

  (: f Procedure)
  (define f (case-lambda))

  (: g (case->))
  (define g (case-lambda))
  (: h Procedure)
  (define h g)

The type errors produced are these:
  Type Checker: Expected a function of type #f, but got a function with the wrong arity in: (case-lambda)
  Type Checker: Expected Procedure, but got (case->) in: g

The first type error exposes some internal detail in function type-checking and it's also
arguable that it should type-check.

In the second case, `Procedure` is not a supertype of `(case->)`. This makes sense if you
know how Typed Racket represents function types, but is likely not the right choice
from the user's perspective. After all, `procedure?` answers #t to a function with no
applicable cases.
>How-To-Repeat:
>Fix:
>Audit-Trail:
State changed from "open" to "closed" by asumu at Thu, 26 Jun 2014 16:42:54 -0400
Reason>>> Fixed in 6.0.1.13 probably by the recent removal of top-arr
from function type representations.

