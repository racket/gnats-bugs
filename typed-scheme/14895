From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Sat Dec 27 13:20:44 2014
Received: from mail-ie0-f182.google.com (mail-ie0-f182.google.com [209.85.223.182])
	by winooski.ccs.neu.edu (8.14.7/8.14.7) with ESMTP id sBRIKgPx026054
	for <bugs@bugs.plt-scheme.org>; Sat, 27 Dec 2014 13:20:42 -0500
Message-Id: <201412271820.sBRIKcRR026046@winooski.ccs.neu.edu>
Date: Sat, 27 Dec 2014 13:20:38 -0500
From: neil.toronto@gmail.com
To: bugs@racket-lang.org
Subject: TR: error message from typing a for*/list leaks loop details and is scary

>Number:         14895
>Category:       typed-scheme
>Synopsis:       TR: error message from typing a for*/list leaks loop details and is scary
>Class:          sw-bug
>Responsible:    samth
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Sat Dec 27 13:24:01 -0500 2014
>Last-Modified:  Sat Jan 31 18:27:03 -0500 2015
>Originator:     Neil Toronto
>Organization:
plt
>Submitter-Id:   unknown
>Release:        6.1.1.6--2014-12-21(-/f)
>Environment:
unix "Linux snoopy 3.13.0-37-generic #64-Ubuntu SMP Mon Sep 22 21:28:38 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 1119345392
raco pkg (show):
Installation-wide:
 Package                 Checksum           Source
 disassemble             cf0ee3a5...        catalog...ssemble
 drbayes                                    link...il/drbayes
 main-distribution       67868e03...        catalog...ibution
 main-distribution-test  ca4a870e...        catalog...on-test
 nonplussed              f6c06999...        url.../nonplussed
 optimization-coach      be5f7908...        catalog...n-coach
 pict3d                                     link...eil/pict3d
 plot                    e536986e...        clone...path=plot
 racket-lib                                 static-link...lib
 rsound                  4f5d4d15...        catalog rsound
 slideshow-latex         9275fecb...        catalog...w-latex
 [214 auto-installed packages not shown]
User-specific for installation "development":
 [none]



Collections:
("/home/neil/.racket/development/collects"
 (non-existent-path))
("/home/neil/plt-fresh/racket/collects"
 (".gitignore" "acks" "compiler" "data" "db" "dynext" "ffi" "file" "info" "info-domain" "json" "launcher" "net" "openssl" "pkg" "planet" "racket" "raco" "reader" "realm" "s-exp" "setup" "syntax" "unstable" "version" "xml"))

Recent Internal Errors: 
Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t none) (default) #() "#lang racket\n" #t #f ((test) (main)) #t))
>Description:
The program in reproduction steps gives four errors that look like this:

Type Checker: Polymorphic function `unsafe-cdr' could not be applied to arguments:
Types: (Pairof a b) -> (b : ((! False @ (cdr) (0 0)) | (False @ (cdr) (0 0))) : (cdr (0 0)))
       (Listof a) -> (Listof a)
Arguments: (U (List Nonpositive-Fixnum Real) (List Real Nonnegative-Real))
Expected result: (U (List Nonpositive-Fixnum Real) (List Real Nonnegative-Real))
 in: (for*/list : (Listof (Vector Real Real)) ((dx (in-list dxs)) (dy (in-list dys))) (define rdx (+ (* (sin angle) dy) (* (cos angle) dx))) (define rdy (- (* (cos angle) dy) (* (sin angle) dx))) (vector (+ x rdx) (+ y rdy)))

The workaround is to annotate `dxs` and `dys` as (Listof Real). Annotating the loop variables doesn't help.
>How-To-Repeat:
#lang typed/racket

(require typed/racket/draw)

(define-type Anchor
  (U 'top-left    'top    'top-right
     'left        'center 'right
     'bottom-left 'bottom 'bottom-right))

(define sin45 (/ 1.0 (sqrt 2.0)))

(: get-text-corners/anchor (->* [(Instance DC<%>) String Real Real]
                                [Anchor Real Real]
                                (Listof (Vector Real Real))))
(define (get-text-corners/anchor dc str x y [anchor 'top-left] [angle 0] [dist 0])
  (define-values (width height _1 _2) (send dc get-text-extent str #f #t 0))
  (let ([dist  (case anchor
                 [(top-left bottom-left top-right bottom-right)  (* sin45 dist)]
                 [else  dist])])
    
    (define dxs (case anchor
                  [(top-left left bottom-left)  (list (- dist) (- width dist))]
                  [(top center bottom)          (list (* -1/2 width) (* 1/2 width))]
                  [else                         (list (- dist width) dist)]))
    
    (define dys (case anchor
                  [(top-left top top-right)  (list (- dist) (- height dist))]
                  [(left center right)       (list (* -1/2 height) (* 1/2 width))]
                  [else                      (list (- dist height) dist)]))
    
    (for*/list : (Listof (Vector Real Real)) ([dx  (in-list dxs)] [dy  (in-list dys)])
      (define rdx (+ (* (sin angle) dy) (* (cos angle) dx)))
      (define rdy (- (* (cos angle) dy) (* (sin angle) dx)))
      (vector (+ x rdx) (+ y rdy)))))
>Fix:
