From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Fri Oct 19 16:35:14 2012
Received: from mail-ia0-f172.google.com (mail-ia0-f172.google.com [209.85.210.172])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id q9JKZBnE011372
	for <bugs@bugs.plt-scheme.org>; Fri, 19 Oct 2012 16:35:11 -0400
Message-Id: <201210192035.q9JKZ7o7011366@champlain.ccs.neu.edu>
Date: Fri, 19 Oct 2012 16:35:07 -0400
From: dyoo@hashcollision.org
To: bugs@racket-lang.org
Subject: Typed racket incorrectly typechecks a component in Whalesong

>Number:         13200
>Category:       typed-scheme
>Synopsis:       Typed racket incorrectly typechecks a component in Whalesong
>Class:          sw-bug
>Responsible:    samth
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Fri Oct 19 16:36:01 -0400 2012
>Last-Modified:  Tue Mar 26 01:30:03 -0400 2013
>Originator:     Danny Yoo
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.3.1
>Environment:
MacIntel / Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_2) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.79 Safari/537.4
>Description:
Whalesong does not work in the upcoming 5.3.1 release; I've reduced the case that causes Typed Racket to balk to a small test case:

    https://gist.github.com/3920553

This does not typecheck, but should: it exhaustively goes through all the possible values for the union type.
>How-To-Repeat:
Try to check syntax or run the following program:

---

#lang typed/racket/base

;; These are the primitives that we know how to inline.
(define-type KernelPrimitiveName/Inline (U '+
                                           '-
                                           '*
                                           '/
                                           'zero?
                                           'add1
                                           'sub1
                                           '<
                                           '<=
                                           '=
                                           '>
                                           '>=
                                           'cons
                                           'car
                                           'caar
                                           'cdr
                                           'list
                                           'list?
                                           'pair?
                                           'null?
                                           'not
                                           'eq?
                                           'vector-ref
                                           'vector-set!
                                           ))

(: operator->string (KernelPrimitiveName/Inline -> String))
(define (operator->string operator)
  (case operator
          [(+)
           "+"]
          
          [(-)
           "-"]
          
          [(*)
           "*"]

          [(/)
           "/"]

          [(zero?)
           "zero?"]

          [(add1)
           "add1"]
          
          [(sub1)
           "sub1"]

          [(<)
           "<"]

          [(<=)
           "<="]
          
          [(=)
           "="]
          
          [(>)
           ">"]
          
          [(>=)
           ">="]
          
          [(cons)
           "cons"]

          [(car)
           "car"]

          [(caar)
           "caar"]
          
          [(cdr)
           "cdr"]
          
          [(list)
           "list"]

          [(list?)
           "list?"]
          
          [(pair?)
           "pair?"]
          
          [(null?)
           "null?"]

          [(not)
           "not"]
          
          [(eq?)
           "eq?"]
          
          [(vector-ref)
           "vector-ref"]
          
          [(vector-set!)
           "vector-set!"]))
>Fix:
>Audit-Trail:
From: Sam Tobin-Hochstadt <samth@ccs.neu.edu>
To: dyoo@hashcollision.org, bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/13200: Typed racket incorrectly typechecks a
 component in Whalesong
Date: Fri, 19 Oct 2012 16:58:32 -0400

 On Fri, Oct 19, 2012 at 4:36 PM,  <dyoo@hashcollision.org> wrote:
 >
 > *** Description:
 > Whalesong does not work in the upcoming 5.3.1 release; I've reduced the case that causes Typed Racket to balk to a small test case:
 >
 >     https://gist.github.com/3920553
 >
 > This does not typecheck, but should: it exhaustively goes through all the possible values for the union type.
 
 The expansion of `case` changed in 5.3.1, which makes it very hard for
 Typed Racket to reason about the exhaustiveness of large case
 expressions.  For this example, I would add an explicit `else` that
 raises an error, which won't happen in actual operation.
 -- 
 sam th
 samth@ccs.neu.edu
From: Danny Yoo <dyoo@hashcollision.org>
To: Sam Tobin-Hochstadt <samth@ccs.neu.edu>
Cc: "dyoo@hashcollision.org" <dyoo@hashcollision.org>,
        "bugs@racket-lang.org" <bugs@racket-lang.org>,
        "nobody@racket-lang.org" <nobody@racket-lang.org>,
        "bug-notification@racket-lang.org" <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/13200: Typed racket incorrectly typechecks a
 component in Whalesong
Date: Fri, 19 Oct 2012 15:19:39 -0600

 --20cf307c9f6abf003c04cc700f03
 Content-Type: text/plain; charset=UTF-8
 
 Would the situation be similar if I used cond instead?  I really want the
 type system to help me guarantee that the case analysts is exhaustive at
 compile time.  Would cond work?
 
 On Friday, October 19, 2012, Sam Tobin-Hochstadt wrote:
 
 > On Fri, Oct 19, 2012 at 4:36 PM,  <dyoo@hashcollision.org <javascript:;>>
 > wrote:
 > >
 > > *** Description:
 > > Whalesong does not work in the upcoming 5.3.1 release; I've reduced the
 > case that causes Typed Racket to balk to a small test case:
 > >
 > >     https://gist.github.com/3920553
 > >
 > > This does not typecheck, but should: it exhaustively goes through all
 > the possible values for the union type.
 >
 > The expansion of `case` changed in 5.3.1, which makes it very hard for
 > Typed Racket to reason about the exhaustiveness of large case
 > expressions.  For this example, I would add an explicit `else` that
 > raises an error, which won't happen in actual operation.
 > --
 > sam th
 > samth@ccs.neu.edu <javascript:;>
 >
 
 --20cf307c9f6abf003c04cc700f03
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 Would the situation be similar if I used cond instead? =C2=A0I really want =
 the type system to help me guarantee that the case analysts is exhaustive a=
 t compile time. =C2=A0Would cond work?<span></span><br><br>On Friday, Octob=
 er 19, 2012, Sam Tobin-Hochstadt  wrote:<br>
 <blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1p=
 x #ccc solid;padding-left:1ex">On Fri, Oct 19, 2012 at 4:36 PM, =C2=A0&lt;<=
 a href=3D"javascript:;" onclick=3D"_e(event, &#39;cvml&#39;, &#39;dyoo@hash=
 collision.org&#39;)">dyoo@hashcollision.org</a>&gt; wrote:<br>
 
 &gt;<br>
 &gt; *** Description:<br>
 &gt; Whalesong does not work in the upcoming 5.3.1 release; I&#39;ve reduce=
 d the case that causes Typed Racket to balk to a small test case:<br>
 &gt;<br>
 &gt; =C2=A0 =C2=A0 <a href=3D"https://gist.github.com/3920553" target=3D"_b=
 lank">https://gist.github.com/3920553</a><br>
 &gt;<br>
 &gt; This does not typecheck, but should: it exhaustively goes through all =
 the possible values for the union type.<br>
 <br>
 The expansion of `case` changed in 5.3.1, which makes it very hard for<br>
 Typed Racket to reason about the exhaustiveness of large case<br>
 expressions. =C2=A0For this example, I would add an explicit `else` that<br=
 >
 raises an error, which won&#39;t happen in actual operation.<br>
 --<br>
 sam th<br>
 <a href=3D"javascript:;" onclick=3D"_e(event, &#39;cvml&#39;, &#39;samth@cc=
 s.neu.edu&#39;)">samth@ccs.neu.edu</a><br>
 </blockquote>
 
 --20cf307c9f6abf003c04cc700f03--
From: Sam Tobin-Hochstadt <samth@ccs.neu.edu>
To: Danny Yoo <dyoo@hashcollision.org>
Cc: "bugs@racket-lang.org" <bugs@racket-lang.org>,
        "nobody@racket-lang.org" <nobody@racket-lang.org>,
        "bug-notification@racket-lang.org" <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/13200: Typed racket incorrectly typechecks a
 component in Whalesong
Date: Fri, 19 Oct 2012 18:09:20 -0400

 Yes, `cond` should work -- it would be just like the old expansion of `case`.
 
 On Fri, Oct 19, 2012 at 5:19 PM, Danny Yoo <dyoo@hashcollision.org> wrote:
 > Would the situation be similar if I used cond instead?  I really want the
 > type system to help me guarantee that the case analysts is exhaustive at
 > compile time.  Would cond work?
 >
 >
 > On Friday, October 19, 2012, Sam Tobin-Hochstadt wrote:
 >>
 >> On Fri, Oct 19, 2012 at 4:36 PM,  <dyoo@hashcollision.org> wrote:
 >> >
 >> > *** Description:
 >> > Whalesong does not work in the upcoming 5.3.1 release; I've reduced the
 >> > case that causes Typed Racket to balk to a small test case:
 >> >
 >> >     https://gist.github.com/3920553
 >> >
 >> > This does not typecheck, but should: it exhaustively goes through all
 >> > the possible values for the union type.
 >>
 >> The expansion of `case` changed in 5.3.1, which makes it very hard for
 >> Typed Racket to reason about the exhaustiveness of large case
 >> expressions.  For this example, I would add an explicit `else` that
 >> raises an error, which won't happen in actual operation.
 >> --
 >> sam th
 >> samth@ccs.neu.edu
 
 
 
 -- 
 sam th
 samth@ccs.neu.edu
From: Robby Findler <robby@eecs.northwestern.edu>
To: dyoo@hashcollision.org, bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/13200: Typed racket incorrectly typechecks a
 component in Whalesong
Date: Fri, 19 Oct 2012 18:26:32 -0500

 Is there something we can do differently so these issues come up
 earlier in the release cycle?
 
 Robby
 
 On Fri, Oct 19, 2012 at 3:36 PM,  <dyoo@hashcollision.org> wrote:
 > A new problem report is waiting at
 >   http://bugs.racket-lang.org/query/?cmd=view&pr=13200
 >
 > Reported by Danny Yoo for release: 5.3.1
 >
 > *** Description:
 > Whalesong does not work in the upcoming 5.3.1 release; I've reduced the case that causes Typed Racket to balk to a small test case:
 >
 >     https://gist.github.com/3920553
 >
 > This does not typecheck, but should: it exhaustively goes through all the possible values for the union type.
 >
 > *** How to repeat:
 > Try to check syntax or run the following program:
 >
 > ---
 >
 > #lang typed/racket/base
 >
 > ;; These are the primitives that we know how to inline.
 > (define-type KernelPrimitiveName/Inline (U '+
 >                                            '-
 >                                            '*
 >                                            '/
 >                                            'zero?
 >                                            'add1
 >                                            'sub1
 >                                            '<
 >                                            '<=
 >                                            '=
 >                                            '>
 >                                            '>=
 >                                            'cons
 >                                            'car
 >                                            'caar
 >                                            'cdr
 >                                            'list
 >                                            'list?
 >                                            'pair?
 >                                            'null?
 >                                            'not
 >                                            'eq?
 >                                            'vector-ref
 >                                            'vector-set!
 >                                            ))
 >
 > (: operator->string (KernelPrimitiveName/Inline -> String))
 > (define (operator->string operator)
 >   (case operator
 >           [(+)
 >            "+"]
 >
 >           [(-)
 >            "-"]
 >
 >           [(*)
 >            "*"]
 >
 >           [(/)
 >            "/"]
 >
 >           [(zero?)
 >            "zero?"]
 >
 >           [(add1)
 >            "add1"]
 >
 >           [(sub1)
 >            "sub1"]
 >
 >           [(<)
 >            "<"]
 >
 >           [(<=)
 >            "<="]
 >
 >           [(=)
 >            "="]
 >
 >           [(>)
 >            ">"]
 >
 >           [(>=)
 >            ">="]
 >
 >           [(cons)
 >            "cons"]
 >
 >           [(car)
 >            "car"]
 >
 >           [(caar)
 >            "caar"]
 >
 >           [(cdr)
 >            "cdr"]
 >
 >           [(list)
 >            "list"]
 >
 >           [(list?)
 >            "list?"]
 >
 >           [(pair?)
 >            "pair?"]
 >
 >           [(null?)
 >            "null?"]
 >
 >           [(not)
 >            "not"]
 >
 >           [(eq?)
 >            "eq?"]
 >
 >           [(vector-ref)
 >            "vector-ref"]
 >
 >           [(vector-set!)
 >            "vector-set!"]))
 >
 > *** Environment:
 > MacIntel / Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_2) AppleWebKit/537.4 (KHTML, like Gecko) Chrome/22.0.1229.79 Safari/537.4
 >
From: Danny Yoo <dyoo@hashcollision.org>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/13200: Typed racket incorrectly typechecks a
 component in Whalesong
Date: Fri, 19 Oct 2012 17:53:29 -0600

 On Fri, Oct 19, 2012 at 5:26 PM, Robby Findler
 <robby@eecs.northwestern.edu> wrote:
 > Is there something we can do differently so these issues come up
 > earlier in the release cycle?
 
 If the release cycle were changed so that that the release branch
 appeared much earlier, that would make it easier for me to test my
 codebase against it.  Having a release cycle of a week or two is too
 short to adjust to these issues.
From: Robby Findler <robby@eecs.northwestern.edu>
To: Danny Yoo <dyoo@hashcollision.org>
Cc: bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/13200: Typed racket incorrectly typechecks a
 component in Whalesong
Date: Fri, 19 Oct 2012 18:56:04 -0500

 The release branch does not differ substantially from origin/master.
 If we created it earlier, we'd be branched for longer, but it wouldn't
 help you test anything, would it?
 
 Robby
 
 On Fri, Oct 19, 2012 at 6:53 PM, Danny Yoo <dyoo@hashcollision.org> wrote:
 > On Fri, Oct 19, 2012 at 5:26 PM, Robby Findler
 > <robby@eecs.northwestern.edu> wrote:
 >> Is there something we can do differently so these issues come up
 >> earlier in the release cycle?
 >
 > If the release cycle were changed so that that the release branch
 > appeared much earlier, that would make it easier for me to test my
 > codebase against it.  Having a release cycle of a week or two is too
 > short to adjust to these issues.
From: Robby Findler <robby@eecs.northwestern.edu>
To: Danny Yoo <dyoo@hashcollision.org>
Cc: bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/13200: Typed racket incorrectly typechecks a
 component in Whalesong
Date: Fri, 19 Oct 2012 18:56:48 -0500

 (Whoops hit send too soon.)
 
 That is, I would have expected you to say something like "automate
 some testing" or something like that.
 
 Robby
 
 On Fri, Oct 19, 2012 at 6:56 PM, Robby Findler
 <robby@eecs.northwestern.edu> wrote:
 > The release branch does not differ substantially from origin/master.
 > If we created it earlier, we'd be branched for longer, but it wouldn't
 > help you test anything, would it?
 >
 > Robby
 >
 > On Fri, Oct 19, 2012 at 6:53 PM, Danny Yoo <dyoo@hashcollision.org> wrote:
 >> On Fri, Oct 19, 2012 at 5:26 PM, Robby Findler
 >> <robby@eecs.northwestern.edu> wrote:
 >>> Is there something we can do differently so these issues come up
 >>> earlier in the release cycle?
 >>
 >> If the release cycle were changed so that that the release branch
 >> appeared much earlier, that would make it easier for me to test my
 >> codebase against it.  Having a release cycle of a week or two is too
 >> short to adjust to these issues.
From: Danny Yoo <dyoo@hashcollision.org>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/13200: Typed racket incorrectly typechecks a
 component in Whalesong
Date: Fri, 19 Oct 2012 19:01:00 -0600

 On Fri, Oct 19, 2012 at 5:56 PM, Robby Findler
 <robby@eecs.northwestern.edu> wrote:
 > (Whoops hit send too soon.)
 >
 > That is, I would have expected you to say something like "automate
 > some testing" or something like that.
 
 
 Would it be appropriate to treat the major components of Whalesong as
 a test case for TR?  The automated test would be: "make sure this
 compiles under TR without complaint".
From: Sam Tobin-Hochstadt <samth@ccs.neu.edu>
To: Danny Yoo <dyoo@hashcollision.org>
Cc: Robby Findler <robby@eecs.northwestern.edu>, bugs@racket-lang.org,
        nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/13200: Typed racket incorrectly typechecks a
 component in Whalesong
Date: Fri, 19 Oct 2012 21:06:50 -0400

 On Fri, Oct 19, 2012 at 9:01 PM, Danny Yoo <dyoo@hashcollision.org> wrote:
 > On Fri, Oct 19, 2012 at 5:56 PM, Robby Findler
 > <robby@eecs.northwestern.edu> wrote:
 >> (Whoops hit send too soon.)
 >>
 >> That is, I would have expected you to say something like "automate
 >> some testing" or something like that.
 >
 >
 > Would it be appropriate to treat the major components of Whalesong as
 > a test case for TR?  The automated test would be: "make sure this
 > compiles under TR without complaint".
 
 I think what Robby is asking is whether you could (automatically) test
 Whalesong against current git HEAD on a regular (maybe weekly) basis.
 That way, this issue would have been caught soon after the change to
 `case` was made.
 
 -- 
 sam th
 samth@ccs.neu.edu
From: Robby Findler <robby@eecs.northwestern.edu>
To: Danny Yoo <dyoo@hashcollision.org>
Cc: bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/13200: Typed racket incorrectly typechecks a
 component in Whalesong
Date: Fri, 19 Oct 2012 20:14:59 -0500

 On Fri, Oct 19, 2012 at 8:01 PM, Danny Yoo <dyoo@hashcollision.org> wrote:
 > On Fri, Oct 19, 2012 at 5:56 PM, Robby Findler
 > <robby@eecs.northwestern.edu> wrote:
 >> (Whoops hit send too soon.)
 >>
 >> That is, I would have expected you to say something like "automate
 >> some testing" or something like that.
 >
 >
 > Would it be appropriate to treat the major components of Whalesong as
 > a test case for TR?  The automated test would be: "make sure this
 > compiles under TR without complaint".
 
 No, it would not. I agree with you about that.
 
 But if whalesong were running in drdr, say, then we would have learned
 about this issue weeks (months?) ago, when case changed instead of the
 very late point in the release process, after the testing phase is
 mostly done.
 
 Robby
From: Robby Findler <robby@eecs.northwestern.edu>
To: Sam Tobin-Hochstadt <samth@ccs.neu.edu>
Cc: Danny Yoo <dyoo@hashcollision.org>, bugs@racket-lang.org,
        nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/13200: Typed racket incorrectly typechecks a
 component in Whalesong
Date: Fri, 19 Oct 2012 20:15:40 -0500

 On Fri, Oct 19, 2012 at 8:06 PM, Sam Tobin-Hochstadt <samth@ccs.neu.edu> wrote:
 > On Fri, Oct 19, 2012 at 9:01 PM, Danny Yoo <dyoo@hashcollision.org> wrote:
 >> On Fri, Oct 19, 2012 at 5:56 PM, Robby Findler
 >> <robby@eecs.northwestern.edu> wrote:
 >>> (Whoops hit send too soon.)
 >>>
 >>> That is, I would have expected you to say something like "automate
 >>> some testing" or something like that.
 >>
 >>
 >> Would it be appropriate to treat the major components of Whalesong as
 >> a test case for TR?  The automated test would be: "make sure this
 >> compiles under TR without complaint".
 >
 > I think what Robby is asking is whether you could (automatically) test
 > Whalesong against current git HEAD on a regular (maybe weekly) basis.
 > That way, this issue would have been caught soon after the change to
 > `case` was made.
 
 Every push is what I would hope for, actually.
 
 Robby
From: Eli Barzilay <eli@barzilay.org>
To: Sam Tobin-Hochstadt <samth@ccs.neu.edu>,
        Danny Yoo <dyoo@hashcollision.org>,
        Robby Findler <robby@eecs.northwestern.edu>
Cc: bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/13200: Typed racket incorrectly typechecks a
 component in Whalesong
Date: Sun, 21 Oct 2012 04:21:17 -0400

 Two days ago, Robby Findler wrote:
 > The release branch does not differ substantially from origin/master.
 > If we created it earlier, we'd be branched for longer, but it
 > wouldn't help you test anything, would it?
 
 Not only that -- two downsides of an early release branch creation is
 that (a) it makes it more likely that the code diverges enough from
 master that it becomes hard (and error prone) to merge new fixes; and
 (b) it's tested well by the people on the nag cycle, but in general
 it's not used on a regular basis by many people.  (Probably nobody
 actually uses it on a day-to-day basis.)  This is also a reason for
 delays to be generally bad.
 
 
 Two days ago, Robby Findler wrote:
 > 
 > That is, I would have expected you to say something like "automate
 > some testing" or something like that.
 
 That would be really good, and the drdr suggestion would obviously be
 better,
 
 Two days ago, Sam Tobin-Hochstadt wrote:
 > 
 > I think what Robby is asking is whether you could (automatically)
 > test Whalesong against current git HEAD on a regular (maybe weekly)
 > basis.  That way, this issue would have been caught soon after the
 > change to `case` was made.
 
 That's a weaker version that would work well too -- but if you can't
 make things automated, another thing to do is to just follow the nag
 emails and start testing asap, or even before that, when the first
 release emails start flying around.
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!
From: Robby Findler <robby@eecs.northwestern.edu>
To: Eli Barzilay <eli@barzilay.org>
Cc: Sam Tobin-Hochstadt <samth@ccs.neu.edu>,
        Danny Yoo <dyoo@hashcollision.org>, bugs@racket-lang.org,
        nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/13200: Typed racket incorrectly typechecks a
 component in Whalesong
Date: Sun, 21 Oct 2012 07:22:52 -0500

 In this particular case, it sounds like the code didn't even compile.
 So that's something we can definitely get drdr to check.
 
 Danny: is there something we can do to help facilitate this?
 
 Robby
 
 On Sun, Oct 21, 2012 at 3:21 AM, Eli Barzilay <eli@barzilay.org> wrote:
 > Two days ago, Robby Findler wrote:
 >> The release branch does not differ substantially from origin/master.
 >> If we created it earlier, we'd be branched for longer, but it
 >> wouldn't help you test anything, would it?
 >
 > Not only that -- two downsides of an early release branch creation is
 > that (a) it makes it more likely that the code diverges enough from
 > master that it becomes hard (and error prone) to merge new fixes; and
 > (b) it's tested well by the people on the nag cycle, but in general
 > it's not used on a regular basis by many people.  (Probably nobody
 > actually uses it on a day-to-day basis.)  This is also a reason for
 > delays to be generally bad.
 >
 >
 > Two days ago, Robby Findler wrote:
 >>
 >> That is, I would have expected you to say something like "automate
 >> some testing" or something like that.
 >
 > That would be really good, and the drdr suggestion would obviously be
 > better,
 >
 > Two days ago, Sam Tobin-Hochstadt wrote:
 >>
 >> I think what Robby is asking is whether you could (automatically)
 >> test Whalesong against current git HEAD on a regular (maybe weekly)
 >> basis.  That way, this issue would have been caught soon after the
 >> change to `case` was made.
 >
 > That's a weaker version that would work well too -- but if you can't
 > make things automated, another thing to do is to just follow the nag
 > emails and start testing asap, or even before that, when the first
 > release emails start flying around.
 >
 > --
 >           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
 >                     http://barzilay.org/                   Maze is Life!
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Eli Barzilay <eli@barzilay.org>
Cc: Sam Tobin-Hochstadt <samth@ccs.neu.edu>,
        Danny Yoo <dyoo@hashcollision.org>,
        Robby Findler <robby@eecs.northwestern.edu>, bugs@racket-lang.org,
        nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/13200: Typed racket incorrectly typechecks a component in Whalesong
Date: Sun, 21 Oct 2012 09:42:10 -0400

 --Apple-Mail=_6EC16367-6D83-4F21-862D-002B05475EC9
 Content-Transfer-Encoding: 7bit
 Content-Type: text/plain;
 	charset=us-ascii
 
 
 Last year, we have called for authors of 'special' software to 
 submit a version of their software to be drdr tested along with 
 the core. This was in response to Shriram's (probably justified) 
 complaint that we break too many backwards compatibility connections 
 for 'teaching people.' 
 
 It sounds to me like Shriram should have nominated Whalesong 
 as the first such package. 
 
 -- Matthias
 
 
 
 On Oct 21, 2012, at 4:21 AM, Eli Barzilay wrote:
 
 > Two days ago, Robby Findler wrote:
 >> The release branch does not differ substantially from origin/master.
 >> If we created it earlier, we'd be branched for longer, but it
 >> wouldn't help you test anything, would it?
 > 
 > Not only that -- two downsides of an early release branch creation is
 > that (a) it makes it more likely that the code diverges enough from
 > master that it becomes hard (and error prone) to merge new fixes; and
 > (b) it's tested well by the people on the nag cycle, but in general
 > it's not used on a regular basis by many people.  (Probably nobody
 > actually uses it on a day-to-day basis.)  This is also a reason for
 > delays to be generally bad.
 > 
 > 
 > Two days ago, Robby Findler wrote:
 >> 
 >> That is, I would have expected you to say something like "automate
 >> some testing" or something like that.
 > 
 > That would be really good, and the drdr suggestion would obviously be
 > better,
 > 
 > Two days ago, Sam Tobin-Hochstadt wrote:
 >> 
 >> I think what Robby is asking is whether you could (automatically)
 >> test Whalesong against current git HEAD on a regular (maybe weekly)
 >> basis.  That way, this issue would have been caught soon after the
 >> change to `case` was made.
 > 
 > That's a weaker version that would work well too -- but if you can't
 > make things automated, another thing to do is to just follow the nag
 > emails and start testing asap, or even before that, when the first
 > release emails start flying around.
 > 
 > -- 
 >          ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
 >                    http://barzilay.org/                   Maze is Life!
 
 
 --Apple-Mail=_6EC16367-6D83-4F21-862D-002B05475EC9
 Content-Disposition: attachment;
 	filename=smime.p7s
 Content-Type: application/pkcs7-signature;
 	name=smime.p7s
 Content-Transfer-Encoding: base64
 
 MIAGCSqGSIb3DQEHAqCAMIACAQExCzAJBgUrDgMCGgUAMIAGCSqGSIb3DQEHAQAAoIIMTDCCBVYw
 ggQ+oAMCAQICEHbDqMitQnj5Qd81mMX31uMwDQYJKoZIhvcNAQEFBQAwgd0xCzAJBgNVBAYTAlVT
 MRcwFQYDVQQKEw5WZXJpU2lnbiwgSW5jLjEfMB0GA1UECxMWVmVyaVNpZ24gVHJ1c3QgTmV0d29y
 azE7MDkGA1UECxMyVGVybXMgb2YgdXNlIGF0IGh0dHBzOi8vd3d3LnZlcmlzaWduLmNvbS9ycGEg
 KGMpMDkxHjAcBgNVBAsTFVBlcnNvbmEgTm90IFZhbGlkYXRlZDE3MDUGA1UEAxMuVmVyaVNpZ24g
 Q2xhc3MgMSBJbmRpdmlkdWFsIFN1YnNjcmliZXIgQ0EgLSBHMzAeFw0xMjA3MjYwMDAwMDBaFw0x
 MzA3MjYyMzU5NTlaMIIBGTEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZlcmlT
 aWduIFRydXN0IE5ldHdvcmsxRjBEBgNVBAsTPXd3dy52ZXJpc2lnbi5jb20vcmVwb3NpdG9yeS9S
 UEEgSW5jb3JwLiBieSBSZWYuLExJQUIuTFREKGMpOTgxHjAcBgNVBAsTFVBlcnNvbmEgTm90IFZh
 bGlkYXRlZDEzMDEGA1UECxMqRGlnaXRhbCBJRCBDbGFzcyAxIC0gTmV0c2NhcGUgRnVsbCBTZXJ2
 aWNlMRswGQYDVQQDFBJNYXR0aGlhcyBGZWxsZWlzZW4xIzAhBgkqhkiG9w0BCQEWFG1hdHRoaWFz
 QGNjcy5uZXUuZWR1MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxoivceU706ZnD2XD
 JfoNFd4KTbYA9AObozHkSZ6BJLC8oSGjakZu6m11azFwk5LfPOjd7dQIKw9uDhmT1e4q6jP+B1FC
 a1qqwm7Rw9PcFhqYFBlE8MbqJUXJW53Ynw3dK2XiUNqTXFcBa2otI8XxMtrQch4f9oMUy+aIn/fZ
 QQDbkkzuwz3884xSbm0IMDneYUC6FF1OJe2+fkMqHqEDsSgY97RFcjdgTCOB012odwGhxJ3rIGaX
 WUs7ttjnftzyGODVILMIx8RBJpGJ+Ur4R67SJygV8Clpg1RBuRUSNaZAN0tCjO9YSkb9HfF2tAx9
 POWmQXdTtNNjZfJPbTVnkQIDAQABo4HSMIHPMAkGA1UdEwQCMAAwRAYDVR0gBD0wOzA5BgtghkgB
 hvhFAQcXATAqMCgGCCsGAQUFBwIBFhxodHRwczovL3d3dy52ZXJpc2lnbi5jb20vcnBhMAsGA1Ud
 DwQEAwIFoDAdBgNVHSUEFjAUBggrBgEFBQcDBAYIKwYBBQUHAwIwUAYDVR0fBEkwRzBFoEOgQYY/
 aHR0cDovL2luZGMxZGlnaXRhbGlkLWczLWNybC52ZXJpc2lnbi5jb20vSW5kQzFEaWdpdGFsSUQt
 RzMuY3JsMA0GCSqGSIb3DQEBBQUAA4IBAQCeAXGCjjlMmU1wb3Ii4V0yNygujjQcvJstFh7IyVcM
 oD5/5Ar7b36JL1O2tpBosTf0pVZaORKCMPAf1IfBS48CvvqSoeVyXCFG1goXDjr7Ut+ZwosuFXdr
 2gD6u9EftuoUy+UBdz46NcN9YC0WbX7CrRE96XxvYwPfWnGIjsoNY7WqFI4f7HLlM5dCmAOXySsw
 EbPKpflzEGPU8aKf4FqTX9ne+hTzPbCf5CDJdzrdyn5bQkqvSzxw+P3tvQSU9lnyZkG7wZ1cibna
 QIuSNEe+HKOKcEfeTeD50JhLa43RE24nMsaXWdX61VTiPE/2Y9woEVLxXBp+AFpMZjGYsF/yMIIG
 7jCCBdagAwIBAgIQcRVmBUrkkSFN6bxE+azT3DANBgkqhkiG9w0BAQUFADCByjELMAkGA1UEBhMC
 VVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQLExZWZXJpU2lnbiBUcnVzdCBOZXR3
 b3JrMTowOAYDVQQLEzEoYykgMTk5OSBWZXJpU2lnbiwgSW5jLiAtIEZvciBhdXRob3JpemVkIHVz
 ZSBvbmx5MUUwQwYDVQQDEzxWZXJpU2lnbiBDbGFzcyAxIFB1YmxpYyBQcmltYXJ5IENlcnRpZmlj
 YXRpb24gQXV0aG9yaXR5IC0gRzMwHhcNMDkwNTAxMDAwMDAwWhcNMTkwNDMwMjM1OTU5WjCB3TEL
 MAkGA1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQLExZWZXJpU2lnbiBU
 cnVzdCBOZXR3b3JrMTswOQYDVQQLEzJUZXJtcyBvZiB1c2UgYXQgaHR0cHM6Ly93d3cudmVyaXNp
 Z24uY29tL3JwYSAoYykwOTEeMBwGA1UECxMVUGVyc29uYSBOb3QgVmFsaWRhdGVkMTcwNQYDVQQD
 Ey5WZXJpU2lnbiBDbGFzcyAxIEluZGl2aWR1YWwgU3Vic2NyaWJlciBDQSAtIEczMIIBIjANBgkq
 hkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA7cRH3yooHXwGa7vXITLJbBOP6bGNQU4099oL42r6ZYgg
 CxET6ZvgSU6Lb9UB0F8NR5GKWkx0Pj/GkQm7TDSejW6hglFi92l2WJYHr54UGAdPWr2f0jGyVBlz
 RmoZQhHsEnMhjfXcMM3l2VYKMcU2bSkUl70t2olHGYjYSwQ967Y8Zx50ABMN0Ibak2f4MwOuGjxr
 aXj2wCyO4YM/d/mZ//6fUlrCtIcK2GypR8FUKWVDPkrAlh/Brfd3r2yxBF6+wbaULZeQLSfSux7p
 g2qE9sSyriMGZSalJ1grByK0b6ZiSBp38tVQJ5op05b7KPW6JHZi44xZ6/tu1ULEvkHH9QIDAQAB
 o4ICuTCCArUwNAYIKwYBBQUHAQEEKDAmMCQGCCsGAQUFBzABhhhodHRwOi8vb2NzcC52ZXJpc2ln
 bi5jb20wEgYDVR0TAQH/BAgwBgEB/wIBADBwBgNVHSAEaTBnMGUGC2CGSAGG+EUBBxcBMFYwKAYI
 KwYBBQUHAgEWHGh0dHBzOi8vd3d3LnZlcmlzaWduLmNvbS9jcHMwKgYIKwYBBQUHAgIwHhocaHR0
 cHM6Ly93d3cudmVyaXNpZ24uY29tL3JwYTA0BgNVHR8ELTArMCmgJ6AlhiNodHRwOi8vY3JsLnZl
 cmlzaWduLmNvbS9wY2ExLWczLmNybDAOBgNVHQ8BAf8EBAMCAQYwbgYIKwYBBQUHAQwEYjBgoV6g
 XDBaMFgwVhYJaW1hZ2UvZ2lmMCEwHzAHBgUrDgMCGgQUS2u5KJYGDLvQUjibKaxLB4shBRgwJhYk
 aHR0cDovL2xvZ28udmVyaXNpZ24uY29tL3ZzbG9nbzEuZ2lmMC4GA1UdEQQnMCWkIzAhMR8wHQYD
 VQQDExZQcml2YXRlTGFiZWw0LTIwNDgtMTE4MB0GA1UdDgQWBBR5R2EIQf04BKJL57XM9UP2SSsR
 +DCB8QYDVR0jBIHpMIHmoYHQpIHNMIHKMQswCQYDVQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24s
 IEluYy4xHzAdBgNVBAsTFlZlcmlTaWduIFRydXN0IE5ldHdvcmsxOjA4BgNVBAsTMShjKSAxOTk5
 IFZlcmlTaWduLCBJbmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxRTBDBgNVBAMTPFZlcmlT
 aWduIENsYXNzIDEgUHVibGljIFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgLSBHM4IR
 AItbdVaEVIULAM+vOEjOsaQwDQYJKoZIhvcNAQEFBQADggEBADlNz0GZgbWpBbVSOOk5hIls5DSo
 WufYbAlMJBq6WaSHO3Mh8ZOBz79oY1pn/jWFK6HDXaNKwjoZ3TDWzE3v8dKBl8pUWkO/N4t6jhmN
 D0OojPKvYLMVirOVnDzgnrMnmKQ1chfl/Cpdh9OKDcLRRSr4wPSsKpM61a4ScAjr+zvid+zoK2Q1
 ds262uDRyxTWcVibvtU+fbbZ6CTFJGZMXZEfdrMXPn8NxiGJL7M3uKH/XLJtSd5lUkL7DojS7Uod
 v0vj+Mxy+kgOZY5JyNb4mZg7t5Q+MXEGh/psWVMu198r7V9jAKwV7QO4VRaMxmgD5yKocwuxvKDa
 UljdCg5/wYIxggSLMIIEhwIBATCB8jCB3TELMAkGA1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWdu
 LCBJbmMuMR8wHQYDVQQLExZWZXJpU2lnbiBUcnVzdCBOZXR3b3JrMTswOQYDVQQLEzJUZXJtcyBv
 ZiB1c2UgYXQgaHR0cHM6Ly93d3cudmVyaXNpZ24uY29tL3JwYSAoYykwOTEeMBwGA1UECxMVUGVy
 c29uYSBOb3QgVmFsaWRhdGVkMTcwNQYDVQQDEy5WZXJpU2lnbiBDbGFzcyAxIEluZGl2aWR1YWwg
 U3Vic2NyaWJlciBDQSAtIEczAhB2w6jIrUJ4+UHfNZjF99bjMAkGBSsOAwIaBQCgggJtMBgGCSqG
 SIb3DQEJAzELBgkqhkiG9w0BBwEwHAYJKoZIhvcNAQkFMQ8XDTEyMTAyMTEzNDIxMVowIwYJKoZI
 hvcNAQkEMRYEFL7tDDIVYc9fqNeX9rpTsy13poSbMIIBAwYJKwYBBAGCNxAEMYH1MIHyMIHdMQsw
 CQYDVQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZlcmlTaWduIFRy
 dXN0IE5ldHdvcmsxOzA5BgNVBAsTMlRlcm1zIG9mIHVzZSBhdCBodHRwczovL3d3dy52ZXJpc2ln
 bi5jb20vcnBhIChjKTA5MR4wHAYDVQQLExVQZXJzb25hIE5vdCBWYWxpZGF0ZWQxNzA1BgNVBAMT
 LlZlcmlTaWduIENsYXNzIDEgSW5kaXZpZHVhbCBTdWJzY3JpYmVyIENBIC0gRzMCEHbDqMitQnj5
 Qd81mMX31uMwggEFBgsqhkiG9w0BCRACCzGB9aCB8jCB3TELMAkGA1UEBhMCVVMxFzAVBgNVBAoT
 DlZlcmlTaWduLCBJbmMuMR8wHQYDVQQLExZWZXJpU2lnbiBUcnVzdCBOZXR3b3JrMTswOQYDVQQL
 EzJUZXJtcyBvZiB1c2UgYXQgaHR0cHM6Ly93d3cudmVyaXNpZ24uY29tL3JwYSAoYykwOTEeMBwG
 A1UECxMVUGVyc29uYSBOb3QgVmFsaWRhdGVkMTcwNQYDVQQDEy5WZXJpU2lnbiBDbGFzcyAxIElu
 ZGl2aWR1YWwgU3Vic2NyaWJlciBDQSAtIEczAhB2w6jIrUJ4+UHfNZjF99bjMA0GCSqGSIb3DQEB
 AQUABIIBALCKfEWzIispd6A5M9ThZkEJubTXDcChpyA9Kim2Dzl3teF2XqGhM4DhnKpjLu3nVTa9
 NOwiT4OKejka07Cwvhhs6gg9P5ApKcDOu0oHwD2kQjRa7spA6Ab5FrQZJwHj5jIzRO0TkXe5vRAM
 kBhRp9kUAFgQrv+XusOeGy6AmhQwiUDIaeTiWqhH0DtOiMJCUS9vAbaW68XN+cRS5XnM1IuvT1dQ
 eSxMqU7bNfIj3RKOo5dFz33YXgO9LmqrN/rn4pnacewU28rYaY0KRQiZ6MWIae156Gj5e+RVKH4c
 CXTJ5KzWPvEqZ3iZ3umDZ2ixvcrcGoAwM781OXcXqtoNXvIAAAAAAAA=
 
 --Apple-Mail=_6EC16367-6D83-4F21-862D-002B05475EC9--

