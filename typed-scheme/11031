From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Sun Jul 11 22:33:49 2010
Received: from mail-gx0-f172.google.com (mail-gx0-f172.google.com [209.85.161.172])
	by champlain.ccs.neu.edu (8.14.3/8.14.3) with ESMTP id o6C2Xk6i029292
	for <bugs@bugs.plt-scheme.org>; Sun, 11 Jul 2010 22:33:46 -0400
Message-Id: <201007120233.o6C2XicA029283@champlain.ccs.neu.edu>
Date: Sun, 11 Jul 2010 22:33:44 -0400
From: sk@cs.brown.edu
To: bugs@racket-lang.org
Subject: Typed Racket should produce a better, directional bug report

>Number:         11031
>Category:       typed-scheme
>Synopsis:       Typed Racket should produce a better, directional bug report
>Class:          sw-bug
>Responsible:    samth
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Sun Jul 11 22:36:01 -0400 2010
>Last-Modified:  Tue May 03 17:45:43 -0400 2011
>Originator:     Shriram Krishnamurthi
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.0
>Environment:
windows "Windows NT 6.1 (Build 7600)" (win32\i386\3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 115209060

Collections:
(("C:\\Users\\sk\\AppData\\Roaming\\Racket\\5.0\\collects" non-existent-path) ("C:\\Program Files (x86)\\Racket\\collects" "2htdp" "afm" "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "help" "hierlist" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "redex" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tex2page" "texpict" "trace" "typed" "typed-scheme" "unstable" "version" "web-server" !
 "wxme" "xml"))
Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t))
>Description:
See code in "Steps to Reproduce".
This highlights the *last* line (call to helper) and says

Type Checker: Expected Natural, but got Real in: (helper (rest lon) (first lon) 0 1)

I had started w/ everything as Real and was converting bit-by-bit to
Natural, due to a cascading type error.  At least in that context, it
looked like Typed Racket did not consider 0 and 1 to be Naturals.  In
fact, the error is on the *return* type annotation of HELPER.
However, nothing in the error message or the highlighting gave me any
hint that that was the problem.  A directional (as opposed to
unification-based) type checker ought to give a much better error
message than this!
>How-To-Repeat:
(: argmin-r ((Listof Real) -> Natural))
(define (argmin-r lon)
  (local [(: helper ((Listof Real) Real Natural Natural -> Real))
          (define (helper lon smallest-val smallest-idx this-idx)
            (cond
              [(empty? lon) smallest-idx]
              [(cons? lon) (if (<= (first lon) smallest-val)
                               (helper (rest lon) (first lon) this-idx (add1 this-idx))
                               (helper (rest lon) smallest-val smallest-idx (add1 this-idx)))]))]
    (helper (rest lon) (first lon) 0 1)))
>Fix:
>Audit-Trail:
From: Sam Tobin-Hochstadt <samth@ccs.neu.edu>
To: sk@cs.brown.edu, bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11031: Typed Racket should produce a better, 
	directional bug report
Date: Sun, 11 Jul 2010 22:45:43 -0400

 On Sun, Jul 11, 2010 at 10:36 PM,  <sk@cs.brown.edu> wrote:
 > A new problem report is waiting at
 > =A0http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D11031
 >
 > Reported by Shriram Krishnamurthi for release: 5.0
 >
 > *** Description:
 > See code in "Steps to Reproduce".
 > This highlights the *last* line (call to helper) and says
 >
 > Type Checker: Expected Natural, but got Real in: (helper (rest lon) (firs=
 t lon) 0 1)
 >
 > I had started w/ everything as Real and was converting bit-by-bit to
 > Natural, due to a cascading type error. =A0At least in that context, it
 > looked like Typed Racket did not consider 0 and 1 to be Naturals. =A0In
 > fact, the error is on the *return* type annotation of HELPER.
 > However, nothing in the error message or the highlighting gave me any
 > hint that that was the problem. =A0A directional (as opposed to
 > unification-based) type checker ought to give a much better error
 > message than this!
 
 I'm kind of confused as to what you want here.  First, did you think
 that the problem was with 0 and 1 because it highlighted the whole
 expression?  Is there a better way of indicating that the application
 of `helper' was the problem?  Second, while the bug was that the
 return type of `helper' needed to be changed, what are you suggesting
 that Typed Racket tell you?  The type signature of `helper' *is* its
 type - one of the important principles of design I've followed is that
 type annotations are always believed.
 
 The one thing I can imagine reporting is that `Natural' came from the
 annotation of `helper'. However, I don't think Racket and DrRacket's
 infrastructure for reporting multiple syntax errors is up to making
 that helpful at the moment.
 --=20
 sam th
 samth@ccs.neu.edu
From: Shriram Krishnamurthi <sk@cs.brown.edu>
To: Sam Tobin-Hochstadt <samth@ccs.neu.edu>
Cc: bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11031: Typed Racket should produce a better, 
	directional bug report
Date: Sun, 11 Jul 2010 22:53:53 -0400

 I don't disagree w/ the principle of trusting annotated types.  All of
 type-checking is built on this assume-guarantee principle.  Just to be
 clear, I'm not saying the type checker is buggy or based on a flawed
 principle -- I'm talking about the error output (and recognize this is
 a very subtle issue).
 
 It was not clear WHAT expected "Natural".  There is a difference
 between HELPER expecting Natural in one of its argument positions, and
 ARGMIN-R expecting the thing it calls in tail position to return
 Natural because that is what it is expected to return.  What threw me
 off:
 
 - the highlighted expression contained several expressions that were
 being passed into Natural positions,
 
 - expression highlighting can sometimes be broad (so one should not
 put *too* much faith in it), and, most of all,
 
 - the use of the word "in", as in, "Expected Natural, but got Real
 in: <expr>".  That suggested that I should look *in* the expression,
 not at the whole expression itself.  In contrast, a message like
 
   The expression <expr> has type Real, but was expected to have type
   Natural
 
 would make much clearer that the type computed for the expression was
 mismatched with the type expected by the typing context.  Even more
 dreamy would be
 
   The expression <expr> has type Real (the return type annotation on
   helper), but was expected to have type Natural (the return type
   annotation on argmin-r)
 
 Shriram
From: Shriram Krishnamurthi <sk@cs.brown.edu>
To: Sam Tobin-Hochstadt <samth@ccs.neu.edu>
Cc: bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11031: Typed Racket should produce a better, 
	directional bug report
Date: Mon, 12 Jul 2010 08:21:56 -0400

 Well, then let's definitely talk about this next month.  Guillaume
 will be there with his own baggage about error messages (see our
 upcoming Scheme workshop paper).
From: Sam Tobin-Hochstadt <samth@ccs.neu.edu>
To: Shriram Krishnamurthi <sk@cs.brown.edu>
Cc: bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11031: Typed Racket should produce a better, 
	directional bug report
Date: Mon, 12 Jul 2010 08:02:28 -0400

 On Sun, Jul 11, 2010 at 10:53 PM, Shriram Krishnamurthi <sk@cs.brown.edu> w=
 rote:
 
 > - expression highlighting can sometimes be broad (so one should not
 > put *too* much faith in it), and, most of all,
 
 Yes, that's unfortunately the case, because of macro expansion.
 
 > - the use of the word "in", as in, "Expected Natural, but got Real
 > in: <expr>". =A0That suggested that I should look *in* the expression,
 > not at the whole expression itself. =A0In contrast, a message like
 >
 > =A0The expression <expr> has type Real, but was expected to have type
 > =A0Natural
 >
 > would make much clearer that the type computed for the expression was
 > mismatched with the type expected by the typing context.
 
 There are three problems here:
 
 1. The word "in" comes from the syntax error printer, not from the
 error message.
 2. The error reporting machinery doesn't allow me to format the error
 message in interesting ways, like the ones you're suggesting.
 
 These seem like good topics for face-to-face discussion next month.
 In the meantime, if you have a phrasing that works with the way error
 reporting currently works, I'll use it.
 
 3. Unfortunately, the error is originally signalled for some
 expression in the expanded code, and I'm not sure if there's a way to
 tell when it's appropriate to report an error message like yours,
 since that only works when the expressions correspond precisely.
 --=20
 sam th
 samth@ccs.neu.edu

Responsible changed from "nobody" to "samth" by samth at Thu, 19 Aug 2010 11:51:36 -0400
Reason>>> tr


