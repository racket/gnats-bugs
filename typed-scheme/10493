From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Wed Sep 30 02:07:22 2009
Received: from mail-yw0-f194.google.com (mail-yw0-f194.google.com [209.85.211.194])
	by champlain.ccs.neu.edu (8.14.2/8.14.2) with ESMTP id n8U67IXf028132
	for <bugs@bugs.plt-scheme.org>; Wed, 30 Sep 2009 02:07:18 -0400
Message-Id: <200909300607.n8U67Gmj028125@champlain.ccs.neu.edu>
Date: Wed, 30 Sep 2009 02:07:16 -0400
From: eli@barzilay.org
To: bugs@plt-scheme.org
Subject: `Error' type???

>Number:         10493
>Category:       typed-scheme
>Synopsis:       `Error' type???
>Class:          sw-bug
>Responsible:    samth
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Wed Sep 30 02:08:01 -0400 2009
>Closed-Date:    Thu Jul 01 11:38:44 -0400 2010
>Last-Modified:  Thu Jul 01 11:38:44 -0400 2010
>Originator:     Eli Barzilay
>Organization:
plt
>Submitter-Id:   unknown
>Release:        4.2.1
>Environment:
unix "Linux winooski.ccs.neu.edu 2.6.23.17-88.fc7 #1 SMP Thu May 15 00:02:29 EDT 2008 x86_64 x86_64 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 16
Human Language: english
(current-memory-use) 288287296

Collections:
(("/home/eli/pl/1collects" non-existent-path) ("/home/eli/.plt-scheme/4.2.1/collects" "info-domain" "pl") ("/home/eli/plt/collects" "icons" "ffi" "mred" "dynext" "mzscheme" "make" "preprocessor" "file" "openssl" "sgl" "htdch" "scriblib" "s-exp" "slideshow" "mysterx" "graphics" "test-engine" "scheme" "frtime" "wxme" "lazy" "mzlib" "macro-debugger" "scribble" "syntax-color" "mzcom" "help" "swindle" "config" "net" "stxclass" "hierlist" "test-box-recovery" "2htdp" "profile" "trace" "mrlib" "algol60" "browser" "profj" "framework" "typed-scheme" "at-exp" "info-domain" "compiler" "errortrace" "eopl" "syntax" "combinator-parser" "string-constants" "html" "slatex" "stepper" "launcher" "htdp" "lang" "rnrs" "setup" "deinprogramm" "plot" "teachpack" "xml" "scribblings" "planet" "readline" "parser-tools" "embedded-gui" "drscheme" "defaults" "handin-server" "srfi" "afm" "handin-client" "r6rs" "version" "typed" "texpict" "games" "tex2page" "gui-debugger" "web-server" "r5rs" "redex"))
Computer Language: (("Module") (#(#t write mixed-fraction-e #f #t test-coverage) (default) #() "#lang scheme\n" #t))
>Description:
The code below throws two errors:

  typecheck: Incorrect use of -> type constructor in: ->

This one is fine, and

  typecheck: Expected (Integer Error Integer -> Integer), but got Integer in: 1

Huh?

It seems to me that TS would be perfectly fine if it just aborts with the error
at the type level.  When the type checker is doing its work, it makes sense to
show all errors -- but this error happened before that happens.  I think that
this case can be considered as an error at a kind of a "syntax phase".  IOW,
even when TS is expanding the code explicitly, it shouldn't catch macro errors
so more errors can be displayed.
>How-To-Repeat:
(: foo : (Integer -> Integer -> Integer))
(define foo 1)
>Fix:
>Audit-Trail:
From: Sam TH <samth@ccs.neu.edu>
To: eli@barzilay.org, bugs@plt-scheme.org
Cc: nobody@plt-scheme.org, bug-notification@plt-scheme.org
Subject: Re: [plt-bug] all/10493: `Error' type???
Date: Wed, 30 Sep 2009 08:23:53 -0400

 On Wed, Sep 30, 2009 at 2:08 AM,  <eli@barzilay.org> wrote:
 > A new problem report is waiting at
 > =A0http://bugs.plt-scheme.org/query/?cmd=3Dview&pr=3D10493
 >
 > Reported by Eli Barzilay for release: 4.2.1
 >
 > *** Description:
 > The code below throws two errors:
 >
 > =A0typecheck: Incorrect use of -> type constructor in: ->
 >
 > This one is fine, and
 >
 > =A0typecheck: Expected (Integer Error Integer -> Integer), but got Intege=
 r in: 1
 >
 > Huh?
 >
 > It seems to me that TS would be perfectly fine if it just aborts with the=
  error
 > at the type level. =A0When the type checker is doing its work, it makes s=
 ense to
 > show all errors -- but this error happened before that happens. =A0I thin=
 k that
 > this case can be considered as an error at a kind of a "syntax phase". =
 =A0IOW,
 > even when TS is expanding the code explicitly, it shouldn't catch macro e=
 rrors
 > so more errors can be displayed.
 >
 > *** How to repeat:
 > (: foo : (Integer -> Integer -> Integer))
 > (define foo 1)
 
 I'm not sure why you think there are two phases here.  There's just
 one phase, and the error reporting is doing the wrong thing.  You
 should never see the second error.
 
 --=20
 sam th
 samth@ccs.neu.edu
From: Eli Barzilay <eli@barzilay.org>
To: Sam TH <samth@ccs.neu.edu>
Cc: bugs@plt-scheme.org, bug-notification@plt-scheme.org
Subject: Re: [plt-bug] all/10493: `Error' type???
Date: Wed, 30 Sep 2009 10:55:01 -0400

 On Sep 30, Sam TH wrote:
 > On Wed, Sep 30, 2009 at 2:08 AM,  <eli@barzilay.org> wrote:
 > > (: foo : (Integer -> Integer -> Integer))
 > > (define foo 1)
 > 
 > I'm not sure why you think there are two phases here.  There's just
 > one phase, and the error reporting is doing the wrong thing.  You
 > should never see the second error.
 
 I don't.  I was trying to draw an analogy to two phases -- where if
 there's an error in syntax, then the program is just not running.  In
 the same way, it seemed to me redundant for TS to try to check things
 that are based on an erroneously-specified type.  Anyway, if you say
 that the second error should not have been shown, then we're saying
 the same thing.
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!

State changed from "open" to "closed" by samth@racket-lang.org at Thu, 01 Jul 2010 11:38:44 -0400
Reason>>> A commit by samth@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/75bd26d326
