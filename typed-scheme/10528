From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Fri Oct 16 21:23:33 2009
Received: from mail-yw0-f183.google.com (mail-yw0-f183.google.com [209.85.211.183])
	by champlain.ccs.neu.edu (8.14.2/8.14.2) with ESMTP id n9H1NTsS009455
	for <bugs@bugs.plt-scheme.org>; Fri, 16 Oct 2009 21:23:29 -0400
Message-Id: <200910170123.n9H1NQPb009448@champlain.ccs.neu.edu>
Date: Fri, 16 Oct 2009 21:23:26 -0400
From: eli@barzilay.org
To: bugs@plt-scheme.org
Subject: Possible bug in TS error reporting

>Number:         10528
>Category:       typed-scheme
>Synopsis:       Possible bug in TS error reporting
>Class:          sw-bug
>Responsible:    samth
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Fri Oct 16 21:24:01 -0400 2009
>Closed-Date:    Thu Aug 25 12:07:21 -0400 2011
>Last-Modified:  Thu Aug 25 12:07:21 -0400 2011
>Originator:     Eli Barzilay
>Organization:
plt
>Submitter-Id:   unknown
>Release:        4.2.2
>Environment:
unix "Linux winooski.ccs.neu.edu 2.6.23.17-88.fc7 #1 SMP Thu May 15 00:02:29 EDT 2008 x86_64 x86_64 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 16
Human Language: english
(current-memory-use) 251381240

Collections:
(("/home/eli/.plt-scheme/4.2.2/collects" "info-domain" "pl") ("/home/eli/plt/collects" "icons" "ffi" "mred" "dynext" "mzscheme" "make" "preprocessor" "file" "openssl" "sgl" "scriblib" "s-exp" "slideshow" "mysterx" "graphics" "test-engine" "scheme" "frtime" "wxme" "lazy" "mzlib" "macro-debugger" "scribble" "syntax-color" "mzcom" "help" "swindle" "config" "net" "hierlist" "test-box-recovery" "2htdp" "profile" "trace" "mrlib" "algol60" "browser" "framework" "typed-scheme" "at-exp" "info-domain" "compiler" "errortrace" "eopl" "syntax" "combinator-parser" "string-constants" "html" "slatex" "stepper" "launcher" "htdp" "lang" "rnrs" "setup" "deinprogramm" "plot" "teachpack" "xml" "scribblings" "planet" "readline" "parser-tools" "embedded-gui" "drscheme" "defaults" "srfi" "afm" "r6rs" "version" "typed" "texpict" "games" "tex2page" "gui-debugger" "web-server" "r5rs" "redex"))
Computer Language: (("Module") (#(#t write mixed-fraction-e #f #t debug) (default) #() "#lang scheme\n" #f))
>Description:
If I run the program below in my course language, the error is

  typecheck: Expected Number, but got String in: r

where `r' is some variable which is coming from my implementation of `cases'.
But if I switch to the `match' expression, the string is highlighted, and the
error says:

  typecheck: Expected Number, but got String in: (quote "n")

Is there some magic spell that I should whisper to make the `cases' type error
do the same?  Right now, my best idea would be to rename `r' in the source code
to `cases-result', but this is still not going to be too helpful since there is
no source that gets highlighted.

(You can get my collection from http://pl.barzilay.org/pl.plt)
>How-To-Repeat:
#lang pl

(define-type FOO [Foo (x Number)])

(: blah : FOO -> Number)
(define (blah expr)
  (cases expr [(Foo n) "n"])
  ;; (match expr [_ "n"])
  )
>Fix:
>Audit-Trail:
From: Sam TH <samth@ccs.neu.edu>
To: eli@barzilay.org, bugs@plt-scheme.org
Cc: 
Subject: Re: [plt-bug] all/10528: Possible bug in TS error reporting
Date: Thu, 29 Oct 2009 14:02:45 -0400

 On Fri, Oct 16, 2009 at 9:24 PM,  <eli@barzilay.org> wrote:
 > A new problem report is waiting at
 > =A0http://bugs.plt-scheme.org/query/?cmd=3Dview&pr=3D10528
 >
 > Reported by Eli Barzilay for release: 4.2.2
 >
 > *** Description:
 > If I run the program below in my course language, the error is
 >
 > =A0typecheck: Expected Number, but got String in: r
 >
 > where `r' is some variable which is coming from my implementation of `cas=
 es'.
 > But if I switch to the `match' expression, the string is highlighted, and=
  the
 > error says:
 >
 > =A0typecheck: Expected Number, but got String in: (quote "n")
 >
 > Is there some magic spell that I should whisper to make the `cases' type =
 error
 > do the same? =A0Right now, my best idea would be to rename `r' in the sou=
 rce code
 > to `cases-result', but this is still not going to be too helpful since th=
 ere is
 > no source that gets highlighted.
 
 Here's the magic incantation (only works with current SVN):
 
 #lang pl
 
 (require (only-in scheme for-syntax)
          (for-syntax scheme/base))
 (define-syntax (let-tail stx)
   (syntax-case stx ()
     [(_ e)
      #`(let ([r #,(syntax-property #'e
 'typechecker:called-in-tail-position #t)])
          r)]))
 
 (define-type FOO [Foo (x Number)])
 
 (: blah : FOO -> Number)
 (define (blah x) (let-tail "n"))
 
 
 
 
 --=20
 sam th
 samth@ccs.neu.edu


State changed from "open" to "closed" by samth at Thu, 25 Aug 2011 12:07:21 -0400
Reason>>> magic incantation supplied

