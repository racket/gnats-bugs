From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Sun Jun 22 13:04:41 2014
Received: from mail-ob0-f176.google.com (mail-ob0-f176.google.com [209.85.214.176])
	by winooski.ccs.neu.edu (8.14.7/8.14.7) with ESMTP id s5MH4bnb003923
	for <bugs@bugs.plt-scheme.org>; Sun, 22 Jun 2014 13:04:37 -0400
Message-Id: <201406221704.s5MH4Zku003916@winooski.ccs.neu.edu>
Date: Sun, 22 Jun 2014 13:04:35 -0400
From: ianj@ccs.neu.edu
To: bugs@racket-lang.org
Subject: Typed Racket: sequencing refinement does not handle... sequencing.

>Number:         14592
>Category:       typed-scheme
>Synopsis:       Typed Racket: sequencing refinement does not handle... sequencing.
>Class:          sw-bug
>Responsible:    samth
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Sun Jun 22 13:08:02 -0400 2014
>Last-Modified:  Tue Jul 01 17:42:51 -0400 2014
>Originator:     J. Ian Johnson
>Organization:
plt
>Submitter-Id:   unknown
>Release:        6.0.1.13
>Environment:
Linux x86_64 / Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:23.0) Gecko/20100101 Firefox/23.0
>Description:
With the given setup, x is not refined to be an Integer. Indeed, not even (begin (ensure-int x) (ann x Integer)) works, like I was told it should.
>How-To-Repeat:
(: ensure-int : (-> Any Integer : #:+ Integer #:- Integer))
(define (ensure-int x) (if (exact-integer? x) x (error 'Wah-wah)))
(: x : Any)
(define x 5)
(define y (ensure-int x))
(ann x Integer)
>Fix:
