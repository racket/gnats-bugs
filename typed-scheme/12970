From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Sat Aug  4 14:35:52 2012
Received: from mail-yx0-f172.google.com (mail-yx0-f172.google.com [209.85.213.172])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id q74IZmGc002718
	for <bugs@bugs.plt-scheme.org>; Sat, 4 Aug 2012 14:35:48 -0400
Message-Id: <201208041835.q74IZjno002713@champlain.ccs.neu.edu>
Date: Sat, 4 Aug 2012 14:35:45 -0400
From: eric.n.dobson@gmail.com
To: bugs@racket-lang.org
Subject: TR doesn't calculate variance of free variables of a type application correctly

>Number:         12970
>Category:       typed-scheme
>Synopsis:       TR doesn't calculate variance of free variables of a type application correctly
>Class:          sw-bug
>Responsible:    stamourv
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Sat Aug 04 14:36:01 -0400 2012
>Closed-Date:    Mon Feb 18 12:14:46 -0500 2013
>Last-Modified:  Mon Feb 18 12:14:46 -0500 2013
>Originator:     Eric Dobson
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.2.1
>Environment:
MacIntel / Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_0) AppleWebKit/537.2 (KHTML, like Gecko) Chrome/22.0.1215.0 Safari/537.2
>Description:
When TR sees a type application in the course of of calculating the free variables of a type, it assumes that all the argument types are used covariantly in the instantiated type. This is incorrect and leads to issues where a function should be contravariant in a type, but is invariant.
>How-To-Repeat:
#lang racket                                                                                                         
                                                                                                                     
(require typed-racket/rep/type-rep)                                                                                  
(require typed-racket/types/printer)                                                                                 
                                                                                                                     
(define var (make-F 'var))                                                                                           
                                                                                                                     
                                                                                                                     
;Think of this struct type existing in the type environment                                                          
;(struct: (V) contra-variant-struct ((f : (V -> Void))))                                                             
                                                                                                                     
;This is what you get when you have (contra-variant-struct var)                                                      
(define ty (make-App (make-Name #'contra-variant-struct) (list var) #f))                                             
                                                                                                                     
;But it turns out to be covariant, because it doesn't expand the App                                                 
ty                                                                                                                  
(free-vars* ty)


------------------------------------


#lang typed/racket/base


(struct: (D) Boxer ((f : (D -> Void))))

(: f-Boxer (All (D) ((Boxer D) D -> Void)))
(define (f-Boxer boxer v)
  ((Boxer-f boxer) v)) 











                         
>Fix:
>Audit-Trail:
Responsible changed from "samth" to "stamourv" by stamourv@racket-lang.org at Mon, 18 Feb 2013 12:14:46 -0500
Reason>>> A commit by stamourv@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/7e88895bd0
State changed from "open" to "closed" by stamourv@racket-lang.org at Mon, 18 Feb 2013 12:14:46 -0500
Reason>>> A commit by stamourv@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/7e88895bd0
  | Add testcases for many already fixed bugs.
  | 
  | Closes PR11901.
  | Closes PR11972.
  | Closes PR12022.
  | Closes PR12224.
  | Closes PR12506.
  | Closes PR12533.
  | Closes PR12596.
  | Closes PR13198.
  | Closes PR13418.
  | 
  | Already fixed bugs, with existing testcases.
  | Closes PR12529.
  | Closes PR12631.
  | Closes PR13127.
  | Closes PR13128.
  | Closes PR12970.

