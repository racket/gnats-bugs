From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Sat Apr  6 12:56:55 2013
Received: from mail-oa0-f43.google.com (mail-oa0-f43.google.com [209.85.219.43])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id r36GuplX029532
	for <bugs@bugs.plt-scheme.org>; Sat, 6 Apr 2013 12:56:51 -0400
Message-Id: <201304061656.r36GunbZ029526@champlain.ccs.neu.edu>
Date: Sat, 6 Apr 2013 12:56:49 -0400
From: eric.n.dobson@gmail.com
To: bugs@racket-lang.org
Subject: Boxes are not correctly protected in negative positions

>Number:         13663
>Category:       typed-scheme
>Synopsis:       Boxes are not correctly protected in negative positions
>Class:          sw-bug
>Responsible:    endobson
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Sat Apr 06 13:00:01 -0400 2013
>Closed-Date:    Thu Apr 25 11:44:15 -0400 2013
>Last-Modified:  Thu Apr 25 11:44:15 -0400 2013
>Originator:     Eric Dobson
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.3.2.3
>Environment:
MacIntel / Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_2) AppleWebKit/537.28 (KHTML, like Gecko) Chrome/26.0.1397.2 Safari/537.28
>Description:
The following should fail, but instead allows adding 1 to a string.
>How-To-Repeat:
#lang racket/load

(module typed typed/racket
  (provide g)

  (: f (Byte -> Natural))
  (define (f x) (add1 x))
  (: g ((Boxof Procedure) -> Void))
  (define (g b) 
    (set-box! b f)))

(require 'typed)
(define b (box #f))
(g b)
(displayln ((unbox b) "foo"))
>Fix:
>Audit-Trail:
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: eric.n.dobson@gmail.com, bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/13663: Boxes are not correctly protected in negative positions
Date: Sat, 6 Apr 2013 13:22:39 -0400

 What does 
 
  #<local-code>
 
 mean? 
 
 
 On Apr 6, 2013, at 1:00 PM, eric.n.dobson@gmail.com wrote:
 
 > A new problem report is waiting at
 >  http://bugs.racket-lang.org/query/?cmd=view&pr=13663
 > 
 > Reported by Eric Dobson for release: 5.3.2.3
 > 
 > *** Description:
 > The following should fail, but instead allows adding 1 to a string.
 > 
 > *** How to repeat:
 > #lang racket/load
 > 
 > (module typed typed/racket
 >  (provide g)
 > 
 >  (: f (Byte -> Natural))
 >  (define (f x) (add1 x))
 >  (: g ((Boxof Procedure) -> Void))
 >  (define (g b) 
 >    (set-box! b f)))
 > 
 > (require 'typed)
 > (define b (box #f))
 > (g b)
 > (displayln ((unbox b) "foo"))
 > 
 > *** Environment:
 > MacIntel / Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_2) AppleWebKit/537.28 (KHTML, like Gecko) Chrome/26.0.1397.2 Safari/537.28
 > 
 
 
From: Eric Dobson <eric.n.dobson@gmail.com>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: bugs <bugs@racket-lang.org>, nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/13663: Boxes are not correctly protected in
 negative positions
Date: Sat, 6 Apr 2013 10:25:46 -0700

 Mathew would know better than me, but I guess it is something that
 looks like jit-code. This code adds 1 to the representation of a
 string (its tagged pointer), and thus produces garbage, i.e.
 local-code, but could have been bad-value, or almost anything.
 
 On Sat, Apr 6, 2013 at 10:22 AM, Matthias Felleisen
 <matthias@ccs.neu.edu> wrote:
 >
 > What does
 >
 >  #<local-code>
 >
 > mean?
 >
 >
 > On Apr 6, 2013, at 1:00 PM, eric.n.dobson@gmail.com wrote:
 >
 >> A new problem report is waiting at
 >>  http://bugs.racket-lang.org/query/?cmd=view&pr=13663
 >>
 >> Reported by Eric Dobson for release: 5.3.2.3
 >>
 >> *** Description:
 >> The following should fail, but instead allows adding 1 to a string.
 >>
 >> *** How to repeat:
 >> #lang racket/load
 >>
 >> (module typed typed/racket
 >>  (provide g)
 >>
 >>  (: f (Byte -> Natural))
 >>  (define (f x) (add1 x))
 >>  (: g ((Boxof Procedure) -> Void))
 >>  (define (g b)
 >>    (set-box! b f)))
 >>
 >> (require 'typed)
 >> (define b (box #f))
 >> (g b)
 >> (displayln ((unbox b) "foo"))
 >>
 >> *** Environment:
 >> MacIntel / Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_2) AppleWebKit/537.28 (KHTML, like Gecko) Chrome/26.0.1397.2 Safari/537.28
 >>
 >
From: Matthew Flatt <mflatt@cs.utah.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: eric.n.dobson@gmail.com, bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/13663: Boxes are not correctly protected in negative positions
Date: Sat, 6 Apr 2013 11:30:05 -0600

 It's a variant of "seg fault".
 
 At Sat, 6 Apr 2013 13:22:39 -0400, Matthias Felleisen wrote:
 > 
 > What does 
 > 
 >  #<local-code>
 > 
 > mean? 
 > 
 > 
 > On Apr 6, 2013, at 1:00 PM, eric.n.dobson@gmail.com wrote:
 > 
 > > A new problem report is waiting at
 > >  http://bugs.racket-lang.org/query/?cmd=view&pr=13663
 > > 
 > > Reported by Eric Dobson for release: 5.3.2.3
 > > 
 > > *** Description:
 > > The following should fail, but instead allows adding 1 to a string.
 > > 
 > > *** How to repeat:
 > > #lang racket/load
 > > 
 > > (module typed typed/racket
 > >  (provide g)
 > > 
 > >  (: f (Byte -> Natural))
 > >  (define (f x) (add1 x))
 > >  (: g ((Boxof Procedure) -> Void))
 > >  (define (g b) 
 > >    (set-box! b f)))
 > > 
 > > (require 'typed)
 > > (define b (box #f))
 > > (g b)
 > > (displayln ((unbox b) "foo"))
 > > 
 > > *** Environment:
 > > MacIntel / Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_2) AppleWebKit/537.28 
 > (KHTML, like Gecko) Chrome/26.0.1397.2 Safari/537.28
 > > 

Responsible changed from "samth" to "endobson" by endobson@racket-lang.org at Thu, 25 Apr 2013 11:44:15 -0400
Reason>>> A commit by endobson@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/b5b13222c8
State changed from "open" to "closed" by endobson@racket-lang.org at Thu, 25 Apr 2013 11:44:15 -0400
Reason>>> A commit by endobson@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/b5b13222c8
  | Make type->contract correctly respect variance.
  | 
  | Track whether we are protecting values from the typed side and/or the
  | untyped side.
  | 
  | Closes PR 13662.
  | Closes PR 13663.
  | Closes PR 13665.

