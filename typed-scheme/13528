From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Sat Feb 16 19:44:56 2013
Received: from mail-ob0-f182.google.com (mail-ob0-f182.google.com [209.85.214.182])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id r1H0irp5025731
	for <bugs@bugs.plt-scheme.org>; Sat, 16 Feb 2013 19:44:53 -0500
Message-Id: <201302170044.r1H0ipib025726@champlain.ccs.neu.edu>
Date: Sat, 16 Feb 2013 19:44:51 -0500
From: eric.n.dobson@gmail.com
To: bugs@racket-lang.org
Subject: Internal definition annotations, do not require a definition

>Number:         13528
>Category:       typed-scheme
>Synopsis:       Internal definition annotations, do not require a definition
>Class:          sw-bug
>Responsible:    samth
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Sat Feb 16 19:48:01 -0500 2013
>Closed-Date:    Thu Feb 27 17:31:13 -0500 2014
>Last-Modified:  Thu Feb 27 17:31:13 -0500 2014
>Originator:     Eric Dobson
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.3.2.3
>Environment:
MacIntel / Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_2) AppleWebKit/537.28 (KHTML, like Gecko) Chrome/26.0.1397.2 Safari/537.28
>Description:
I can annotate an identifier, and not define it and TR will not give me an error.
>How-To-Repeat:
#lang typed/racket                                                                                                     
(ann                                                                                                                   
  (let ()                                                                                                              
    (: g (Integer String -> Symbol))                                                                                   
    3)                                                                                                                 
  Number)
>Fix:
>Audit-Trail:
From: Sam Tobin-Hochstadt <samth@ccs.neu.edu>
To: Eric Dobson <eric.n.dobson@gmail.com>, bugs <bugs@racket-lang.org>
Cc: nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/13528: Internal definition annotations, do not
 require a definition
Date: Sat, 16 Feb 2013 22:52:50 -0500

 On Sat, Feb 16, 2013 at 7:48 PM,  <eric.n.dobson@gmail.com> wrote:
 >
 > *** Description:
 > I can annotate an identifier, and not define it and TR will not give me an error.
 >
 > *** How to repeat:
 > #lang typed/racket
 > (ann
 >   (let ()
 >     (: g (Integer String -> Symbol))
 >     3)
 >   Number)
 
 Sadly, the current implementation strategy for using `:` in internal
 definition contexts will make this annoying to fix.  It's using the
 global table to register the type of `g`, and thus there's no way to
 check that table to see if we should have defined `g` at the end of
 this `letrec-syntaxes+values`. Probably a different strategy for `:`
 will be needed to fix this.
 
 Sam
From: Sam Tobin-Hochstadt <samth@ccs.neu.edu>
To: Carl Eastlund <cce@ccs.neu.edu>, bugs <bugs@racket-lang.org>,
        Eric Dobson <eric.n.dobson@gmail.com>
Cc: 
Subject: Re: [racket-bug] all/13528: Internal definition annotations, do not
 require a definition
Date: Sun, 17 Feb 2013 19:53:08 -0500

 [cc'ing bugs (and Eric) for posterity]
 
 So, just to be clear, you're saying that I should just double-down on
 the previous strategy, and add local bindings to the table as well?
 And then when I check at the end of the module, it'll be easy to find
 both local declarations and top level declarations that are missing
 definitions?
 
 I guess that makes sense.  Mutation is like brute force -- if it
 doesn't work, you weren't using enough.
 
 On Sun, Feb 17, 2013 at 7:32 PM, Carl Eastlund <cce@ccs.neu.edu> wrote:
 > Sam, it should not take a significant change to fix this, I do this kind of
 > thing in Dracula.  For instance, you could have it add to two tables --
 > "types of things" and "things that must be defined", then after checking a
 > set of definitions (module or top-level), scan through "things that must be
 > defined" and match them against the definitions you have.  Taking a list of
 > fully-expanded definitions and finding the set of names it defines is not
 > hard to do.
 >
 > Carl Eastlund
 >
 >
 > On Sat, Feb 16, 2013 at 10:52 PM, Sam Tobin-Hochstadt <samth@ccs.neu.edu>
 > wrote:
 >>
 >> On Sat, Feb 16, 2013 at 7:48 PM,  <eric.n.dobson@gmail.com> wrote:
 >> >
 >> > *** Description:
 >> > I can annotate an identifier, and not define it and TR will not give me
 >> > an error.
 >> >
 >> > *** How to repeat:
 >> > #lang typed/racket
 >> > (ann
 >> >   (let ()
 >> >     (: g (Integer String -> Symbol))
 >> >     3)
 >> >   Number)
 >>
 >> Sadly, the current implementation strategy for using `:` in internal
 >> definition contexts will make this annoying to fix.  It's using the
 >> global table to register the type of `g`, and thus there's no way to
 >> check that table to see if we should have defined `g` at the end of
 >> this `letrec-syntaxes+values`. Probably a different strategy for `:`
 >> will be needed to fix this.
 >>
 >> Sam
 >>
 >


State changed from "open" to "closed" by asumu at Thu, 27 Feb 2014 17:31:13 -0500
Reason>>> Fixed in v6.0.0.3. Errors now instead.

