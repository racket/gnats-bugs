From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Thu Jul 12 15:47:43 2012
Received: from mail-vc0-f172.google.com (mail-vc0-f172.google.com [209.85.220.172])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id q6CJlebW001729
	for <bugs@bugs.plt-scheme.org>; Thu, 12 Jul 2012 15:47:40 -0400
Message-Id: <201207121947.q6CJlb8l001724@champlain.ccs.neu.edu>
Date: Thu, 12 Jul 2012 15:47:37 -0400
From: neil.toronto@gmail.com
To: bugs@racket-lang.org
Subject: TR: exact->inexact has the wrong most general type

>Number:         12900
>Category:       typed-scheme
>Synopsis:       TR: exact->inexact has the wrong most general type
>Class:          sw-bug
>Responsible:    stamourv
>Severity:       non-critical
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Thu Jul 12 15:48:01 -0400 2012
>Closed-Date:    Tue Jan 29 14:43:37 -0500 2013
>Last-Modified:  Tue Jan 29 14:43:37 -0500 2013
>Originator:     Neil Toronto
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.3.0.14--2012-07-12(3b1da09d/d)
>Environment:
unix "Linux schroder 2.6.38-15-generic #61-Ubuntu SMP Tue Jun 12 19:43:39 UTC 2012 x86_64 x86_64 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 617575376
Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()


Collections:
("/home/neil/.racket/5.3.0.14/collects"
 (non-existent-path))
("/home/neil/plt-math/collects"
 ("wxme" "texpict" "compiler" "typed" "games" "algol60" "browser" "file" "readline" "dynext" "scribblings" "mzcom" "trace" "profile" "data" "sirmail" "json" "parser-tools" "math" "tex2page" "scriblib" "swindle" "schemeunit" "r6rs" "xrepl" "mzlib" "handin-client" "repo-time-stamp" "mysterx" "mrlib" "scheme" "combinator-parser" "html" "test-engine" "version" ".gitignore" "make" "ffi" "mzscheme" "picturing-programs" "hierlist" "teachpack" "at-exp" "lazy" "scribble" "openssl" "defaults" "racket" "handin-server" "2htdp" "drscheme" "help" "eopl" "racklog" "drracket" "icons" "db" "errortrace" "preprocessor" "rackunit" "rnrs" "string-constants" "meta" "slatex" "graphics" "redex" "reader" "plai" "honu" "config" "stepper" "frtime" "unstable" "r5rs" "planet" "tests" "s-exp" "embedded-gui" "info-domain" "syntax" "launcher" "typed-scheme" "syntax-color" "srfi" "test-box-recovery" "xml" "images" "plot" "datalog" "sgl" "htdp" "setup" "lang" "raco" "gui-debugger" "framework" "web-server" "d!
 einprogramm" "slideshow" "macro-debugger" "typed-racket" "net" "mred"))

Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t none) (default) #() "#lang racket\n" #t #f ((main) (test))))
>Description:
It should be (Number -> Inexact-Number) instead of (Number -> Number) but there's no Inexact-Number type.

I assumed Inexact-Number = (U Inexact-Real Inexact-Complex) to try to work around this, and found that inexact? doesn't work right:

> (define: x : Number 0)
> (cond [(inexact? x)  (ann x (U Inexact-Real Inexact-Complex))]
        [else  x])
Type Checker: Expected (U Inexact-Complex Inexact-Real), but got Number in: x
>How-To-Repeat:
> exact->inexact
- : (Number -> Number) ... [Use (:print-type <expr>) to see more.]
#<procedure:exact->inexact>
>Fix:
>Audit-Trail:
From: Vincent St-Amour <stamourv@ccs.neu.edu>
To: neil.toronto@gmail.com, bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12900: TR: exact->inexact has the wrong most general type
Date: Tue, 29 Jan 2013 14:11:52 -0500

 Unfortunately, `inexact?' does not imply `(U Inexact-Real Inexact-Complex)'.
 
 Numbers like `0+1.2i', which have an exact real part and an inexact
 imaginary part, are `inexact?'. However, they are not `Inexact-Complex',
 since `Inexact-Complex' implies that both `real-part' and `imag-part'
 return inexact numbers.
 
 Mixed exactness complex numbers don't really have better properties than
 `Number', so I don't think having a distinct type for them would be very
 useful.
 
 Would adding a predicate that corresponds to `Inexact-Complex' solve
 your problem?
 
 Vincent
 
 
 
 At Thu, 12 Jul 2012 15:48:01 -0400,
 neil.toronto@gmail.com wrote:
 > 
 > A new problem report is waiting at
 >   http://bugs.racket-lang.org/query/?cmd=view&pr=12900
 > 
 > Reported by Neil Toronto for release: 5.3.0.14--2012-07-12(3b1da09d/d)
 > 
 > *** Description:
 > It should be (Number -> Inexact-Number) instead of (Number -> Number) but there's no Inexact-Number type.
 > 
 > I assumed Inexact-Number = (U Inexact-Real Inexact-Complex) to try to work around this, and found that inexact? doesn't work right:
 > 
 > > (define: x : Number 0)
 > > (cond [(inexact? x)  (ann x (U Inexact-Real Inexact-Complex))]
 >         [else  x])
 > Type Checker: Expected (U Inexact-Complex Inexact-Real), but got Number in: x
 > 
 > *** How to repeat:
 > > exact->inexact
 > - : (Number -> Number) ... [Use (:print-type <expr>) to see more.]
 > #<procedure:exact->inexact>
 > 
 > *** Environment:
 > unix "Linux schroder 2.6.38-15-generic #61-Ubuntu SMP Tue Jun 12 19:43:39 UTC 2012 x86_64 x86_64 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
 > Human Language: english
 > (current-memory-use) 617575376
 > Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()
 > 
 > 
 > Collections:
 > ("/home/neil/.racket/5.3.0.14/collects"
 >  (non-existent-path))
 > ("/home/neil/plt-math/collects"
 >  ("wxme" "texpict" "compiler" "typed" "games" "algol60" "browser" "file" "readline" "dynext" "scribblings" "mzcom" "trace" "profile" "data" "sirmail" "json" "parser-tools" "math" "tex2page" "scriblib" "swindle" "schemeunit" "r6rs" "xrepl" "mzlib" "handin-client" "repo-time-stamp" "mysterx" "mrlib" "scheme" "combinator-parser" "html" "test-engine" "version" ".gitignore" "make" "ffi" "mzscheme" "picturing-programs" "hierlist" "teachpack" "at-exp" "lazy" "scribble" "openssl" "defaults" "racket" "handin-server" "2htdp" "drscheme" "help" "eopl" "racklog" "drracket" "icons" "db" "errortrace" "preprocessor" "rackunit" "rnrs" "string-constants" "meta" "slatex" "graphics" "redex" "reader" "plai" "honu" "config" "stepper" "frtime" "unstable" "r5rs" "planet" "tests" "s-exp" "embedded-gui" "info-domain" "syntax" "launcher" "typed-scheme" "syntax-color" "srfi" "test-box-recovery" "xml" "images" "plot" "datalog" "sgl" "htdp" "setup" "lang" "raco" "gui-debugger" "framework" "web-server" "
  d!
 >  einprogramm" "slideshow" "macro-debugger" "typed-racket" "net" "mred"))
 > 
 > Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t none) (default) #() "#lang racket\n" #t #f ((main) (test))))
 > 
From: Neil Toronto <neil.toronto@gmail.com>
To: Vincent St-Amour <stamourv@ccs.neu.edu>
Cc: bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12900: TR: exact->inexact has the wrong most
 general type
Date: Tue, 29 Jan 2013 12:24:32 -0700

 I don't remember what my problem was, or whether I even needed to work 
 around it. Just close the bug, since this is by design.
 
 Neil âŠ¥
 
 On 01/29/2013 12:11 PM, Vincent St-Amour wrote:
 > Unfortunately, `inexact?' does not imply `(U Inexact-Real Inexact-Complex)'.
 >
 > Numbers like `0+1.2i', which have an exact real part and an inexact
 > imaginary part, are `inexact?'. However, they are not `Inexact-Complex',
 > since `Inexact-Complex' implies that both `real-part' and `imag-part'
 > return inexact numbers.
 >
 > Mixed exactness complex numbers don't really have better properties than
 > `Number', so I don't think having a distinct type for them would be very
 > useful.
 >
 > Would adding a predicate that corresponds to `Inexact-Complex' solve
 > your problem?
 >
 > Vincent
 >
 >
 >
 > At Thu, 12 Jul 2012 15:48:01 -0400,
 > neil.toronto@gmail.com wrote:
 >>
 >> A new problem report is waiting at
 >>    http://bugs.racket-lang.org/query/?cmd=view&pr=12900
 >>
 >> Reported by Neil Toronto for release: 5.3.0.14--2012-07-12(3b1da09d/d)
 >>
 >> *** Description:
 >> It should be (Number -> Inexact-Number) instead of (Number -> Number) but there's no Inexact-Number type.
 >>
 >> I assumed Inexact-Number = (U Inexact-Real Inexact-Complex) to try to work around this, and found that inexact? doesn't work right:
 >>
 >>> (define: x : Number 0)
 >>> (cond [(inexact? x)  (ann x (U Inexact-Real Inexact-Complex))]
 >>          [else  x])
 >> Type Checker: Expected (U Inexact-Complex Inexact-Real), but got Number in: x
 >>
 >> *** How to repeat:
 >>> exact->inexact
 >> - : (Number -> Number) ... [Use (:print-type <expr>) to see more.]
 >> #<procedure:exact->inexact>
 >>
 >> *** Environment:
 >> unix "Linux schroder 2.6.38-15-generic #61-Ubuntu SMP Tue Jun 12 19:43:39 UTC 2012 x86_64 x86_64 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
 >> Human Language: english
 >> (current-memory-use) 617575376
 >> Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()
 >>
 >>
 >> Collections:
 >> ("/home/neil/.racket/5.3.0.14/collects"
 >>   (non-existent-path))
 >> ("/home/neil/plt-math/collects"
 >>   ("wxme" "texpict" "compiler" "typed" "games" "algol60" "browser" "file" "readline" "dynext" "scribblings" "mzcom" "trace" "profile" "data" "sirmail" "json" "parser-tools" "math" "tex2page" "scriblib" "swindle" "schemeunit" "r6rs" "xrepl" "mzlib" "handin-client" "repo-time-stamp" "mysterx" "mrlib" "scheme" "combinator-parser" "html" "test-engine" "version" ".gitignore" "make" "ffi" "mzscheme" "picturing-programs" "hierlist" "teachpack" "at-exp" "lazy" "scribble" "openssl" "defaults" "racket" "handin-server" "2htdp" "drscheme" "help" "eopl" "racklog" "drracket" "icons" "db" "errortrace" "preprocessor" "rackunit" "rnrs" "string-constants" "meta" "slatex" "graphics" "redex" "reader" "plai" "honu" "config" "stepper" "frtime" "unstable" "r5rs" "planet" "tests" "s-exp" "embedded-gui" "info-domain" "syntax" "launcher" "typed-scheme" "syntax-color" "srfi" "test-box-recovery" "xml" "images" "plot" "datalog" "sgl" "htdp" "setup" "lang" "raco" "gui-debugger" "framework" "web-server" "
 >   d!
 >>   einprogramm" "slideshow" "macro-debugger" "typed-racket" "net" "mred"))
 >>
 >> Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t none) (default) #() "#lang racket\n" #t #f ((main) (test))))
 >>
 

Responsible changed from "samth" to "stamourv" by stamourv at Tue, 29 Jan 2013 14:43:37 -0500
Reason>>> TR numeric tower.

State changed from "open" to "closed" by stamourv at Tue, 29 Jan 2013 14:43:37 -0500
Reason>>> By design, see discussion.

