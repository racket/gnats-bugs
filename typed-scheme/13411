From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Fri Jan  4 19:56:10 2013
Received: from mail-ob0-f174.google.com (mail-ob0-f174.google.com [209.85.214.174])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id r050u7mk011038
	for <bugs@bugs.plt-scheme.org>; Fri, 4 Jan 2013 19:56:07 -0500
Message-Id: <201301050056.r050u4pk011032@champlain.ccs.neu.edu>
Date: Fri, 4 Jan 2013 19:56:04 -0500
From: neil.toronto@gmail.com
To: bugs@racket-lang.org
Subject: Union types in a struct type wrongly collapsed to single parent type

>Number:         13411
>Category:       typed-scheme
>Synopsis:       Union types in a struct type wrongly collapsed to single parent type
>Class:          sw-bug
>Responsible:    samth
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Fri Jan 04 20:00:02 -0500 2013
>Last-Modified:  Fri Jul 05 18:28:01 -0400 2013
>Originator:     Neil Toronto
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.3.1.12--2013-01-02(cfa9bd9a/d)
>Environment:
unix "Linux schroder 2.6.38-15-generic #66-Ubuntu SMP Tue Aug 14 17:24:44 UTC 2012 x86_64 x86_64 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 574656436
Links: (links) = ("bayes"); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()


Collections:
("/home/neil/.racket/5.3.1.12/collects"
 (non-existent-path))
("/home/neil/plt/collects"
 ("wxme" "texpict" "compiler" "typed" "games" "algol60" "browser" "file" "readline" "dynext" "scribblings" "mzcom" "compatibility" "trace" "profile" "data" "sirmail" "json" "parser-tools" "math" "tex2page" "scriblib" "swindle" "schemeunit" "r6rs" "xrepl" "mzlib" "handin-client" "repo-time-stamp" "mysterx" "mrlib" "scheme" "combinator-parser" "html" "test-engine" "planet2" "version" ".gitignore" "make" "ffi" "mzscheme" "picturing-programs" "hierlist" "teachpack" "at-exp" "lazy" "scribble" "openssl" "defaults" "racket" "handin-server" "2htdp" "drscheme" "help" "eopl" "racklog" "drracket" "realm" "icons" "db" "errortrace" "preprocessor" "rackunit" "rnrs" "string-constants" "meta" "slatex" "graphics" "redex" "reader" "plai" "honu" "config" "stepper" "frtime" "unstable" "r5rs" "planet" "tests" "s-exp" "embedded-gui" "info-domain" "syntax" "launcher" "typed-scheme" "syntax-color" "srfi" "test-box-recovery" "xml" "images" "future-visualizer" "plot" "datalog" "sgl" "htdp" "setup" "l!
 ang" "raco" "gui-debugger" "framework" "web-server" "deinprogramm" "slideshow" "macro-debugger" "typed-racket" "net" "mred"))

Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t none) (default) #() "#lang racket\n" #t #f ((main) (test))))
>Description:
In reproduction steps, the expression `t' is given the type (leaf A), but it should be (U (leaf A) (node A)).

Found when the optimizer wrongly pruned the "then" branch of an (if (node? t) ... ...).
>How-To-Repeat:
#lang typed/racket

(struct: (A) leaf ([value : A]))
(struct: (A) node leaf ())
(struct: (A) root ([tree : (U (leaf A) (node A))]))

(: do-thing (All (A) ((root A) -> Void)))
(define (do-thing r)
  (define t (root-tree r))
  (ann t Void))

Type Checker: Expected Void, but got (leaf A1149283) in: t
>Fix:
>Audit-Trail:
From: Neil Toronto <neil.toronto@gmail.com>
To: neil.toronto@gmail.com, bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/13411: Union types in a struct type wrongly
 collapsed to single parent type
Date: Fri, 04 Jan 2013 18:03:02 -0700

 On 01/04/2013 06:00 PM, neil.toronto@gmail.com wrote:
 > A new problem report is waiting at
 >    http://bugs.racket-lang.org/query/?cmd=view&pr=13411
 >
 > Reported by Neil Toronto for release: 5.3.1.12--2013-01-02(cfa9bd9a/d)
 >
 > *** Description:
 > In reproduction steps, the expression `t' is given the type (leaf A), but it should be (U (leaf A) (node A)).
 >
 > Found when the optimizer wrongly pruned the "then" branch of an (if (node? t) ... ...).
 >
 > *** How to repeat:
 > #lang typed/racket
 >
 > (struct: (A) leaf ([value : A]))
 > (struct: (A) node leaf ())
 > (struct: (A) root ([tree : (U (leaf A) (node A))]))
 >
 > (: do-thing (All (A) ((root A) -> Void)))
 > (define (do-thing r)
 >    (define t (root-tree r))
 >    (ann t Void))
 >
 > Type Checker: Expected Void, but got (leaf A1149283) in: t
 
 A simpler example, which doesn't require unions:
 
 #lang typed/racket
 
 (struct: (A) leaf ([value : A]))
 (struct: (A) node leaf ())
 
 (: leaf-thing (All (A) ((leaf A) -> Void)))
 (define (leaf-thing t)
    (if (node? t)
        (printf "node~n")
        (printf "leaf~n")))
 
  > (leaf-thing (node 4))
 leaf
 
 
 The OC reports pruning the "then" branch of the `if'.
 
 Neil ‚ä•
 

From: Asumu Takikawa <asumu@ccs.neu.edu>
To: Neil Toronto <neil.toronto@gmail.com>
Cc: bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/13411: Union types in a struct type wrongly
 collapsed to single parent type
Date: Fri, 5 Jul 2013 18:27:38 -0400

 On 2013-01-04 18:03:02 -0700, Neil Toronto wrote:
 > A simpler example, which doesn't require unions:
 > 
 > #lang typed/racket
 > 
 > (struct: (A) leaf ([value : A]))
 > (struct: (A) node leaf ())
 > 
 > (: leaf-thing (All (A) ((leaf A) -> Void)))
 > (define (leaf-thing t)
 >   (if (node? t)
 >       (printf "node~n")
 >       (printf "leaf~n")))
 > 
 > > (leaf-thing (node 4))
 > leaf
 
 On your original example, TR now seems to produce the correct(?) type
 error:
   Type Checker: Expected Void, but got (U (leaf A25917) (node A25917)) in: t
 
 The optimizer is still changing the semantics though. The results of
 running your second example in #:no-optimize mode and normal mode
 differ.
 
 Cheers,
 Asumu
