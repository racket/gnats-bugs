From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Fri May 28 03:40:45 2010
Received: from mail-yw0-f175.google.com (mail-yw0-f175.google.com [209.85.211.175])
	by champlain.ccs.neu.edu (8.14.3/8.14.3) with ESMTP id o4S7egnU003938
	for <bugs@bugs.plt-scheme.org>; Fri, 28 May 2010 03:40:43 -0400
Message-Id: <201005280740.o4S7ee5g003930@champlain.ccs.neu.edu>
Date: Fri, 28 May 2010 03:40:40 -0400
From: endobson@cs.brown.edu
To: bugs@plt-scheme.org
Subject: define-predicate gives unexpected behavior

>Number:         10939
>Category:       typed-scheme
>Synopsis:       define-predicate gives unexpected behavior
>Class:          sw-bug
>Responsible:    stamourv
>Severity:       non-critical
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Fri May 28 03:44:01 -0400 2010
>Closed-Date:    Thu Jun 30 14:17:45 -0400 2011
>Last-Modified:  Thu Jun 30 14:17:45 -0400 2011
>Originator:     Eric Dobson
>Organization:
plt
>Submitter-Id:   unknown
>Release:        4.90.0.1
>Environment:
macosx "Darwin eric-dobsons-macbook.local 10.3.0 Darwin Kernel Version 10.3.0: Fri Feb 26 11:58:09 PST 2010; root:xnu-1504.3.12~1/RELEASE_I386 i386 i386" (i386-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 334825316

Collections:
(("/Users/eric/Library/Racket/4.90.0.1/collects" non-existent-path) ("/Users/eric/Downloads/Racket v4.90.0.1/collects" "2htdp" "afm" "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "help" "hierlist" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "redex" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tex2page" "texpict" "trace" "typed" "typed-scheme" "unstable" "version" "web-server" "wxm!
 e" "xml"))
Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug/profile) (default) #() "#lang scheme\n" #f))
>Description:
There are two problems one is that define-predicate seems like it should be able to do forward references since it is constructing a function. Looking at the expansion of the buggy code it comes up with something close to (define a:list? (or/c a:empty? 'other)) where I was expecting something more like (define (a:list? x) (or (a:empty? x) (equal? 'other x))). I find that forcing the predicate definiton to come later is awkward for little reason.

The other problem is that the error for the reference to the identifier before its definition, highlights the definition (or gives only a modulepath in mzscheme), while other references before a definition highlight the reference (which is more useful).
>How-To-Repeat:
#lang typed/scheme

(define-type (T elem)
  (U 'other a:empty))

(define-predicate a:list? (T Any))

(define-struct: a:empty ())
>Fix:
>Audit-Trail:
From: Eric Dobson <eric.n.dobson@gmail.com>
To: bugs@plt-scheme.org, endobson@cs.brown.edu
Cc: 
Subject: Re: all/10939: define-predicate gives unexpected behavior
Date: Fri, 28 May 2010 13:39:23 -0400

 I believe that this actually a bug now and not just weird behavior. This =
 is because the exporting code expects a predicate to be a one argument =
 procedure. It seems that the bug is that a one argument procedure is a =
 contract, but a contract is not a one argument procedure.
 
 This is the code that exposes the bug.
 
 #!/usr/bin/env mzscheme
 #lang scheme/load
 
 (module first typed/scheme
   (define-type (A-List elem)
     (U (a:singleton elem)
        a:empty))
  =20
   (define-struct: (elem) a:singleton
    ((elem : elem)))
  =20
   (define-struct: a:empty ())
   (define-predicate a:list? (A-List Any))
 
   (provide a:list?))
 
 
 
 
 (module other scheme
   (require 'first)
   (a:list? empty))
 
 (require 'other)
 
 -Eric
 

Responsible changed from "samth" to "stamourv" by stamourv@racket-lang.org at Thu, 30 Jun 2011 14:17:45 -0400
Reason>>> A commit by stamourv@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/76a1112df0
State changed from "open" to "closed" by stamourv@racket-lang.org at Thu, 30 Jun 2011 14:17:45 -0400
Reason>>> A commit by stamourv@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/76a1112df0
