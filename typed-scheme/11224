From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Fri Sep 17 17:47:21 2010
Received: from mail-gx0-f172.google.com (mail-gx0-f172.google.com [209.85.161.172])
	by champlain.ccs.neu.edu (8.14.3/8.14.3) with ESMTP id o8HLlJLt020351
	for <bugs@bugs.plt-scheme.org>; Fri, 17 Sep 2010 17:47:19 -0400
Message-Id: <201009172147.o8HLlG7Y020344@champlain.ccs.neu.edu>
Date: Fri, 17 Sep 2010 17:47:16 -0400
From: krhari@ccs.neu.edu
To: bugs@racket-lang.org
Subject: Need to explicitly instantiate the type in Typed Racket

>Number:         11224
>Category:       typed-scheme
>Synopsis:       Need to explicitly instantiate the type in Typed Racket
>Class:          sw-bug
>Responsible:    samth
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Fri Sep 17 17:48:01 -0400 2010
>Last-Modified:  Thu Sep 23 03:38:49 -0400 2010
>Originator:     Hari Prashanth
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.0.1.6--2010-09-17(17ac1fa/a)
>Environment:
unix "Linux ubuntu 2.6.32-24-generic #39-Ubuntu SMP Wed Jul 28 05:14:15 UTC 2010 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 24
Human Language: english
(current-memory-use) 252200512

Collections:
(("/home/swamiji/.racket/5.0.1.6/collects" non-existent-path) ("/home/swamiji/plt-racket-17ac1fa/collects" "afm" "dynext" "lazy" "repo-time-stamp" "rackunit" "sirmail" "htdp" "planet" "mzlib" "version" "make" "compiler" "string-constants" "handin-client" "launcher" "macro-debugger" "games" "r5rs" "srpersist" "tests" "combinator-parser" "typed" "help" "mysterx" "deinprogramm" "redex" "test-engine" "scriblib" "icons" "ffi" "graphics" "hierlist" "openssl" "scheme" "typed-scheme" "guibuilder" "s-exp" "plot" "2htdp" "mzscheme" "meta" "preprocessor" "info-domain" "xml" "datalog" "texpict" "schemeunit" "syntax" "trace" "config" "framework" "stepper" "web-server" "unstable" "algol60" "readline" "srfi" "setup" "gui-debugger" "handin-server" "mz" "lang" "sgl" "slideshow" "test-box-recovery" "wxme" "at-exp" "browser" "net" "plai" "tex2page" "waterworld" "frtime" "swindle" "raco" "reader" "honu" "drracket" "errortrace" "file" "syntax-color" "scribble" "mrlib" "profile" "embedded-gui" "d!
 efaults" "scribblings" "mred" "racklog" "html" "eopl" "data" "teachpack" "drscheme" "parser-tools" "r6rs" "racket" "mzcom" "rnrs" "slatex"))
Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t))
>Description:
Need to explicitly instantiate the type of Queue in the call to 
enqueue in the code below.
>How-To-Repeat:
#lang typed/racket

(define-type Stream
  (All (A) (Rec Stream (U Null (Boxof (U (-> (Pair A Stream))
                                         (Pair A Stream)))))))

(struct: (A) Queue ([front : (Stream A)]))

(: enqueue : (All (A) (A (Queue A) -> (Queue A))))
(define (enqueue elem que)
  ((inst Queue A) (box (lambda () (cons elem (Queue-front que))))))

(enqueue 10 (Queue null))
>Fix:
