From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Fri Feb  8 13:44:35 2013
Received: from mail-oa0-f43.google.com (mail-oa0-f43.google.com [209.85.219.43])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id r18IiWMU002324
	for <bugs@bugs.plt-scheme.org>; Fri, 8 Feb 2013 13:44:32 -0500
Message-Id: <201302081844.r18IiTBP002312@champlain.ccs.neu.edu>
Date: Fri, 8 Feb 2013 13:44:29 -0500
From: neil.toronto@gmail.com
To: bugs@racket-lang.org
Subject: TR: when applied to sequences, list? forgets the element type

>Number:         13506
>Category:       typed-scheme
>Synopsis:       TR: when applied to sequences, list? forgets the element type
>Class:          sw-bug
>Responsible:    samth
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Fri Feb 08 13:48:01 -0500 2013
>Last-Modified:  Tue Mar 26 02:04:26 -0400 2013
>Originator:     Neil Toronto
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.3.2.2--2013-01-28(aed3b395/d)
>Environment:
unix "Linux schroder 2.6.38-15-generic #66-Ubuntu SMP Tue Aug 14 17:24:44 UTC 2012 x86_64 x86_64 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 880738632
Links: (links) = ("bayes"); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()
Planet2 (show):
Installation-wide:
 [none]
User-specific, all-version:
 [none]
User-specific, version-specific:
 [none]



Collections:
("/home/neil/.racket/5.3.2.2/collects"
 ("info-domain"))
("/home/neil/plt/collects"
 ("wxme" "texpict" "compiler" "typed" "games" "algol60" "browser" "file" "readline" "dynext" "scribblings" "mzcom" "compatibility" "trace" "profile" "data" "sirmail" "json" "parser-tools" "math" "tex2page" "scriblib" "swindle" "schemeunit" "r6rs" "xrepl" "mzlib" "handin-client" "repo-time-stamp" "mysterx" "mrlib" "scheme" "combinator-parser" "html" "test-engine" "planet2" "version" ".gitignore" "make" "ffi" "mzscheme" "picturing-programs" "hierlist" "teachpack" "at-exp" "lazy" "scribble" "openssl" "defaults" "racket" "handin-server" "2htdp" "drscheme" "help" "eopl" "racklog" "drracket" "realm" "icons" "db" "errortrace" "preprocessor" "rackunit" "rnrs" "string-constants" "meta" "slatex" "graphics" "redex" "reader" "plai" "honu" "config" "stepper" "frtime" "unstable" "r5rs" "planet" "tests" "s-exp" "embedded-gui" "info-domain" "syntax" "launcher" "typed-scheme" "syntax-color" "srfi" "test-box-recovery" "xml" "images" "future-visualizer" "plot" "datalog" "sgl" "htdp" "setup" "l!
 ang" "raco" "gui-debugger" "framework" "web-server" "deinprogramm" "slideshow" "macro-debugger" "typed-racket" "net" "mred"))

Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((main) (test))))
>Description:
The program in reproduction steps gives two type errors:

Type Checker: Expected (Listof A2297072), but got (U Null (Pairof Any (Listof Any))) in: xs

Type Checker: Expected (Listof A2297072), but got (Listof Any) in: (for/list: : (Listof A) ((x (in-vector xs))) x)

The first seems obviously wrong - the type of `xs' is (Listof Any) but should be (Listof A).

The second error comes from similarly giving `xs' the type (Vectorof Any) instead of (Vectorof A). I don't know whether this is wrong.
>How-To-Repeat:
#lang typed/racket

(: fast-sequence->list (All (A) ((Sequenceof A) -> (Listof A))))
(define (fast-sequence->list xs)
  (cond [(list? xs)  xs]
        [(vector? xs)  (for/list: : (Listof A) ([x  (in-vector xs)]) x)]
        [else  (sequence->list xs)]))
>Fix:
