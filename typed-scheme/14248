From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Thu Dec 12 23:11:00 2013
Received: from mail-oa0-f42.google.com (mail-oa0-f42.google.com [209.85.219.42])
	by winooski.ccs.neu.edu (8.14.7/8.14.7) with ESMTP id rBD4AvGo029348
	for <bugs@bugs.plt-scheme.org>; Thu, 12 Dec 2013 23:10:57 -0500
Message-Id: <201312130410.rBD4AsHU029340@winooski.ccs.neu.edu>
Date: Thu, 12 Dec 2013 23:10:54 -0500
From: dfeltey@ccs.neu.edu
To: bugs@racket-lang.org
Subject: Type Checker Error seems incorrect for mutable struct example

>Number:         14248
>Category:       typed-scheme
>Synopsis:       Type Checker Error seems incorrect for mutable struct example
>Class:          sw-bug
>Responsible:    samth
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Thu Dec 12 23:12:01 -0500 2013
>Last-Modified:  Fri Feb 14 17:45:19 -0500 2014
>Originator:     Daniel Feltey
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.90.0.10--2013-12-03(42400995/d/tr-classes)
>Environment:
macosx "Darwin Daniels-MacBook-Pro-2.local 11.4.2 Darwin Kernel Version 11.4.2: Thu Aug 23 16:25:48 PDT 2012; root:xnu-1699.32.7~1/RELEASE_X86_64 x86_64" (x86_64-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 745835460
Links: (links) = (); (links #:user? #f) = ("gradual-typing-bib"); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()
raco pkg (show):
/Users/dfeltey/typed-racket-classes-new/racket/racket/share/devel-pkgs:
 Package              Checksum    Source
 main-distribution    #f          (static-link ../../../pkgs/main-distribution)
 plt-services         #f          (static-link ../../../pkgs/plt-services)
 racket-lib           #f          (static-link ../../../pkgs/racket-pkgs/racket-lib)
 [203 auto-installed packages not shown]
Installation-wide:
 Package               Checksum                                    Source
 gradual-typing-bib    26dd4e42349952f0dea8ddd74538f03349d6d44d    (url git://github.com/samth/gradual-typing-bib)
User-specific for installation "development":
 [none]



Collections:
("/Users/dfeltey/Library/Racket/development/collects"
 (non-existent-path))
("/Users/dfeltey/typed-racket-classes-new/racket/racket/collects"
 (".gitignore" "acks" "compiler" "data" "db" "dynext" "ffi" "file" "info" "info-domain" "json" "launcher" "net" "openssl" "pkg" "planet" "racket" "raco" "reader" "realm" "s-exp" "setup" "syntax" "unstable" "version" "xml"))

Recent Internal Errors: 
Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #f #t ((main) (test)) #t))
>Description:
This typed/racket example:

#lang typed/racket
(struct: (v) foo ([bar : v]) #:mutable)
(: baz (All (a) ((foo a) a -> (foo a))))
(define (baz f bar)
  (set-foo-bar! f bar))

Produces the following type error:

. Type Checker: Polymorphic function set-foo-bar! could not be applied to arguments:
Argument 1:
  Expected: (foo v)
  Given:    (foo a)
Argument 2:
  Expected: v
  Given:    a

Result type:     Void
Expected result: (foo a)
 in: (set-foo-bar! f bar)

This seems incorrect as it isn't that set-foo-bar! couldn't be applied to it's arguments so much as its expected return type does not match what I claim it is in the type signature of baz. 
>How-To-Repeat:
Run the program:

#lang typed/racket
(struct: (v) foo ([bar : v]) #:mutable)
(: baz (All (a) ((foo a) a -> (foo a))))
(define (baz f bar)
  (set-foo-bar! f bar))
>Fix:
