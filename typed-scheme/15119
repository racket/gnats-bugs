From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Tue Jul 21 19:06:16 2015
Received: from mail-ig0-f180.google.com (mail-ig0-f180.google.com [209.85.213.180])
	by winooski.ccs.neu.edu (8.14.7/8.14.7) with ESMTP id t6LN66a8002206
	for <bugs@bugs.plt-scheme.org>; Tue, 21 Jul 2015 19:06:06 -0400
Message-Id: <201507212306.t6LN62me002199@winooski.ccs.neu.edu>
Date: Tue, 21 Jul 2015 19:06:02 -0400
From: jmj@fellowhuman.com
To: bugs@racket-lang.org
Subject: typed/rackunit: contract error message for opaque structs

>Number:         15119
>Category:       typed-scheme
>Synopsis:       typed/rackunit: contract error message for opaque structs
>Class:          sw-bug
>Responsible:    samth
>Severity:       non-critical
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Tue Jul 21 19:08:01 -0400 2015
>Last-Modified:  Thu Jul 30 15:03:28 -0400 2015
>Originator:     Jordan Johnson
>Organization:
plt
>Submitter-Id:   unknown
>Release:        6.2.0.5--2015-06-26(-/f)
>Environment:
macosx "Darwin Eddie.local 14.3.0 Darwin Kernel Version 14.3.0: Mon Mar 23 11:59:05 PDT 2015; root:xnu-2782.20.48~5/RELEASE_X86_64 x86_64" (x86_64-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 782566052
raco pkg (show):
Installation-wide:
 Package                 Checksum           Source
 frog                    cfc0172f...        catalog.../master
 grommet                 bcf0ff7c...        catalog.../master
 main-distribution       67868e03...        catalog...ibution
 main-distribution-test  ca4a870e...        catalog...on-test
 net                     88551aa8...        clone...?path=net
 racket-cookies                             link...et-cookies
 racket-lib                                 static-link...lib
 typed-racket            90dd27bf...        clone...ed-racket
 [226 auto-installed packages not shown]
User-specific for installation "development":
 [none]



Collections:
("/Users/jteach/plt-lib"
 (non-existent-path))
("/Users/jteach/Library/Racket/development/collects"
 (non-existent-path))
("/Users/jteach/Repos/racket/racket/collects"
 (".gitignore" "acks" "compiler" "data" "db" "dynext" "ffi" "file" "info" "info-domain" "json" "launcher" "net" "openssl" "pkg" "planet" "racket" "raco" "reader" "realm" "s-exp" "setup" "syntax" "unstable" "version" "xml"))

Recent Internal Errors: 
Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((test) (main)) #t))
>Description:
When using rackunit from TR, if a non-transparent struct occurs anywhere in a value being compared by check-* (or least, by check-eq?, -eqv?, and -equal?), the error message provided is cryptic. For example:

check-eq?: broke its own contract
  Attempted to use a higher-order value passed as `Any` in untyped code: #<url>
  in: the 1st argument of
      (->* (Any Any) (any/c) any/c)
  contract from: (interface for check-eq?)
  blaming: (interface for check-eq?)
   (assuming the contract is correct)
  at: <pkgs>/typed-racket-more/typed/rackunit/main.rkt:18.2
>How-To-Repeat:
#lang typed/racket/base
(require typed/net/url typed/rackunit)
(check-equal? (string->url "http://example.com")
              (string->url "http://example.com"))
>Fix:
>Audit-Trail:
From: Jordan Johnson <jmj@fellowhuman.com>
To: bugs@racket-lang.org, bug-notification@racket-lang.org
Cc: 
Subject: Re: [racket-bug] all/15119: typed/rackunit: contract error message for opaque structs
Date: Tue, 21 Jul 2015 16:14:12 -0700

 Further info: check-pred causes a different (but maybe related?) error message. For example:
 
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 ;; This code:
 #lang typed/racket/base
 (require typed/rackunit)
 (struct foo ())
 (check-pred (lambda _ #t) (foo) (foo))
 
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 ;; causes this error:
 Type Checker: Polymorphic function `check-pred61' could not be applied to arguments:
 Types: (-> A Any) A String -> Any
        (-> A Any) A -> Any
 Arguments: (-> Any * True) foo foo
 Expected result: AnyValues
  in: (check-pred (lambda _ #t) (foo) (foo))

