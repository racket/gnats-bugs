From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Tue Jul 10 16:25:40 2012
Received: from mail-vc0-f172.google.com (mail-vc0-f172.google.com [209.85.220.172])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id q6AKPbGU001265
	for <bugs@bugs.plt-scheme.org>; Tue, 10 Jul 2012 16:25:37 -0400
Message-Id: <201207102025.q6AKPVik001257@champlain.ccs.neu.edu>
Date: Tue, 10 Jul 2012 16:25:31 -0400
From: neil.toronto@gmail.com
To: bugs@racket-lang.org
Subject: Type of empty-sequence prints funny

>Number:         12892
>Category:       typed-scheme
>Synopsis:       Type of empty-sequence prints funny
>Class:          sw-bug
>Responsible:    samth
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Tue Jul 10 16:28:01 -0400 2012
>Last-Modified:  Sun Jan 27 16:12:01 -0500 2013
>Originator:     Neil Toronto
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.3.0.14--2012-07-10(3d1f2da3/d)
>Environment:
unix "Linux schroder 2.6.38-15-generic #61-Ubuntu SMP Tue Jun 12 19:43:39 UTC 2012 x86_64 x86_64 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 503968840
Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()


Collections:
("/home/neil/.racket/5.3.0.14/collects"
 (non-existent-path))
("/home/neil/plt/collects"
 ("wxme" "texpict" "compiler" "typed" "games" "algol60" "browser" "file" "readline" "dynext" "scribblings" "mzcom" "trace" "profile" "data" "sirmail" "json" "parser-tools" "tex2page" "scriblib" "swindle" "schemeunit" "r6rs" "xrepl" "mzlib" "handin-client" "repo-time-stamp" "mysterx" "mrlib" "scheme" "combinator-parser" "html" "test-engine" "version" ".gitignore" "make" "ffi" "mzscheme" "picturing-programs" "hierlist" "teachpack" "at-exp" "lazy" "scribble" "openssl" "defaults" "racket" "handin-server" "2htdp" "drscheme" "help" "eopl" "racklog" "drracket" "icons" "db" "errortrace" "preprocessor" "rackunit" "rnrs" "string-constants" "meta" "slatex" "graphics" "redex" "reader" "plai" "honu" "config" "stepper" "frtime" "unstable" "r5rs" "planet" "tests" "s-exp" "embedded-gui" "info-domain" "guibuilder" "syntax" "launcher" "typed-scheme" "syntax-color" "srfi" "test-box-recovery" "xml" "images" "plot" "datalog" "sgl" "htdp" "setup" "lang" "raco" "gui-debugger" "framework" "web-serv!
 er" "deinprogramm" "slideshow" "macro-debugger" "typed-racket" "net" "mred"))

Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((main) (test))))
>Description:
>How-To-Repeat:
> empty-sequence
- : Sequenceof
#<sequence>
>Fix:
>Audit-Trail:
From: Eric Dobson <eric.n.dobson@gmail.com>
To: bugs@racket-lang.org, neil.toronto@gmail.com
Cc: 
Subject: Re: typed-scheme/12892: Type of empty-sequence prints funny
Date: Sun, 27 Jan 2013 13:08:09 -0800

 --f46d043bdef0c0a23704d44b8e17
 Content-Type: text/plain; charset=UTF-8
 
 This is because of how the base type constructors are exposed to the user.
 The external identifier Sequenceof is bound to the type (All (a)
 (Sequenceof a)) where the inner Sequenceof is the internal one. Then when
 we examine the type of empty-sequence, which is (All (a) (Sequenceof a)) we
 see that there is a name Sequenceof that corresponds to it and use that.
 
 The following program shows it happening with lists.
 
 -> (ann 2 (All (a) (Listof a)))
 
 
 
 readline-input:2.5
 ; readline-input:2:5: Type Checker: Expected Listof, but got Positive-Byte
 ;   in: 2
 ; [,bt for context]
 
 The core problem is that the external Sequenceof is given a type with kind
 *, when it should have kind (* ... -> *) and have the definition (lambda
 (a) (Sequenceof a)). TR currently does not support this, but that is the
 correct fix to the problem.
 
 --f46d043bdef0c0a23704d44b8e17
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 <div dir=3D"ltr">This is because of how the base type constructors are expo=
 sed to the user. The external identifier Sequenceof is bound to the type (A=
 ll (a) (Sequenceof a)) where the inner Sequenceof is the internal one. Then=
  when we examine the type of empty-sequence, which is (All (a) (Sequenceof =
 a)) we see that there is a name Sequenceof that corresponds to it and use t=
 hat.<div>
 <br></div><div style>The following program shows it happening with lists.</=
 div><div style><br></div><div style><div>-&gt; (ann 2 (All (a) (Listof a)))=
  =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
 =A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
 =A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
 =A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
 =A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
 =A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=C2=A0</div>
 <div>readline-input:2.5</div><div>; readline-input:2:5: Type Checker: Expec=
 ted Listof, but got Positive-Byte</div><div>; =C2=A0 in: 2</div><div>; [,bt=
  for context]</div><div><br></div><div style>The core problem is that the e=
 xternal Sequenceof is given a type with kind *, when it should have kind (*=
  ... -&gt; *) and have the definition (lambda (a) (Sequenceof a)). TR curre=
 ntly does not support this, but that is the correct fix to the problem.</di=
 v>
 </div></div>
 
 --f46d043bdef0c0a23704d44b8e17--
