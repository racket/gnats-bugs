From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Tue Nov 16 14:33:21 2010
Received: from mail-vw0-f44.google.com (mail-vw0-f44.google.com [209.85.212.44])
	by champlain.ccs.neu.edu (8.14.3/8.14.3) with ESMTP id oAGJXIAA015010
	for <bugs@bugs.plt-scheme.org>; Tue, 16 Nov 2010 14:33:18 -0500
Message-Id: <201011161933.oAGJXCXK015003@champlain.ccs.neu.edu>
Date: Tue, 16 Nov 2010 14:33:12 -0500
From: cce@ccs.neu.edu
To: bugs@racket-lang.org
Subject: Typed Racket: please add a "type error" primitive

>Number:         11438
>Category:       typed-scheme
>Synopsis:       Typed Racket: please add a "type error" primitive
>Class:          change-request
>Responsible:    samth
>Severity:       non-critical
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Tue Nov 16 14:36:02 -0500 2010
>Closed-Date:    Sun Feb 12 14:04:31 -0500 2012
>Last-Modified:  Sun Feb 12 14:04:31 -0500 2012
>Originator:     Carl Eastlund
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.0.99.2--2010-11-16(e2673a3/g)
>Environment:
macosx "Darwin Gotham.ccs.neu.edu 10.2.0 Darwin Kernel Version 10.2.0: Tue Nov  3 23:08:29 PST 2009; root:xnu-1486.2.11~3/RELEASE_I386 i386" (i386-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 163649488

Collections:
(("/Users/cce/git/plt/add-on/5.0.99.2/collects" non-existent-path) ("/Users/cce/git/plt/collects" ".gitignore" "2htdp" "afm" "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "data" "datalog" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "meta" "mred" "mrlib" "mysterx" "mz" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "redex" "repo-time-stamp" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "sirmail" "slatex" "slideshow" "srfi" "srpersist" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-r!
 ecovery" "test-engine" "tests" "tex2page" "texpict" "trace" "typed" "typed-scheme" "unstable" "version" "waterworld" "web-server" "wxme" "xml"))
Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t))
>Description:
I would like a macro type-error -- or some similar name -- such that (type-error "Untypeable!") raises a static type error with the message "Untypeable!" if it occurs in a "live" code branch, but does nothing if it occurs in a "dead" code branch.  This could be used for detecting exhaustive case coverage; for instance:

(define-syntax-rule (cond: clause ...)
  (cond clause ... [else (type-error "Inexhaustive!")]))

(define-type Sexp (Rec T (U Symbol (Listof T))))
(: display-sexp (-> Sexp Void))
(define (display-sexp sexp)
  (cond:
    [(symbol? sexp) (display sexp)]
    [(pair? sexp) (display-sexp (car sexp))
                  (display-sexp (cdr sexp))]))

A normal cond would typecheck here despite the lack of a clause for the empty list, because the default "else" clause has type Void.  The cond: macro raises the "Inexhaustive!" error and forces the user to add an explicit clause.  Once an explicit clause is added, Typed Racket should (hopefully) detect that sexp has the bottom type in the final clause of the cond, and the type-error expression does not need to be checked.
>How-To-Repeat:
>Fix:
>Audit-Trail:
State changed from "open" to "closed" by samth at Sun, 12 Feb 2012 14:04:31 -0500
Reason>>> This is `typecheck-fail'.

