From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Mon Dec 22 20:02:19 2014
Received: from mail-ie0-f175.google.com (mail-ie0-f175.google.com [209.85.223.175])
	by winooski.ccs.neu.edu (8.14.7/8.14.7) with ESMTP id sBN12Huc010879
	for <bugs@bugs.plt-scheme.org>; Mon, 22 Dec 2014 20:02:17 -0500
Message-Id: <201412230102.sBN12C4d010848@winooski.ccs.neu.edu>
Date: Mon, 22 Dec 2014 20:02:12 -0500
From: neil.toronto@gmail.com
To: bugs@racket-lang.org
Subject: TR: for/and within case-lambda causes internal typechecker error

>Number:         14891
>Category:       typed-scheme
>Synopsis:       TR: for/and within case-lambda causes internal typechecker error
>Class:          sw-bug
>Responsible:    samth
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Mon Dec 22 20:04:01 -0500 2014
>Last-Modified:  Sat Jan 31 18:27:23 -0500 2015
>Originator:     Neil Toronto
>Organization:
plt
>Submitter-Id:   unknown
>Release:        6.1.1.6--2014-12-21(-/f)
>Environment:
unix "Linux snoopy 3.13.0-37-generic #64-Ubuntu SMP Mon Sep 22 21:28:38 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 496124792
raco pkg (show):
Installation-wide:
 Package                 Checksum           Source
 disassemble             cf0ee3a5...        catalog...ssemble
 drbayes                                    link...il/drbayes
 main-distribution       67868e03...        catalog...ibution
 main-distribution-test  ca4a870e...        catalog...on-test
 nonplussed              f6c06999...        url.../nonplussed
 optimization-coach      be5f7908...        catalog...n-coach
 pict3d                                     link...eil/pict3d
 plot                    e536986e...        clone...path=plot
 racket-lib                                 static-link...lib
 rsound                  4f5d4d15...        catalog rsound
 slideshow-latex         9275fecb...        catalog...w-latex
 [214 auto-installed packages not shown]
User-specific for installation "development":
 [none]



Collections:
("/home/neil/.racket/development/collects"
 (non-existent-path))
("/home/neil/plt-fresh/racket/collects"
 (".gitignore" "acks" "compiler" "data" "db" "dynext" "ffi" "file" "info" "info-domain" "json" "launcher" "net" "openssl" "pkg" "planet" "racket" "raco" "reader" "realm" "s-exp" "setup" "syntax" "unstable" "version" "xml"))

Recent Internal Errors: 
Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t none) (default) #() "#lang racket\n" #t #f ((test) (main)) #t))
>Description:
The error is

Internal Typechecker Error: no type for (lambda (result pos) (if (#%expression (#%app unsafe-fx< pos len)) (let-values (((x) (#%app unsafe-vector-ref vec pos))) (if (#%expression (quote #t)) (let-values (((result) (let-values (((result) result)) (let-values () (let-values () (#%app f x)))))) (if (#%expression (if (quote #t) (#%expression (#%app not (#%app (lambda x (#%app not result)) x))) (quote #f))) (#%app for-loop result (#%app unsafe-fx+ (quote 1) pos)) result)) result)) result)) at: unsaved-editor line 6 col 12
while typechecking:
here
originally:
here
>How-To-Repeat:
#lang typed/racket

(: vector-andmap (All (A ...) (-> (-> A ... Boolean) (Vectorof A) ... Boolean)))
(define vector-andmap
  (case-lambda
    [(f v)  (for/and ([x  (in-vector v)])
              (f x))]
    [(f . vs)  (error 'unimplemented)]))
>Fix:
>Audit-Trail:
From: Asumu Takikawa <asumu@ccs.neu.edu>
To: neil.toronto@gmail.com, bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/14891: TR: for/and within case-lambda causes
 internal typechecker error
Date: Sun, 4 Jan 2015 16:52:36 -0500

 On 2014-12-22 20:04:01 -0500, neil.toronto@gmail.com wrote:
 > *** How to repeat:
 > #lang typed/racket
 > 
 > (: vector-andmap (All (A ...) (-> (-> A ... Boolean) (Vectorof A) ... Boolean)))
 > (define vector-andmap
 >   (case-lambda
 >     [(f v)  (for/and ([x  (in-vector v)])
 >               (f x))]
 >     [(f . vs)  (error 'unimplemented)]))
 
 Looked into this a bit. There's something generally screwy going on here
 with case-lambda.
 
 It typechecks if you replace the `for/and` with a non-sense expression
 like `(vector-ref v 0)`.
 
 If you look at the type tooltip for `v`, it doesn't show anything which
 means either there is no type or it's Nothing. But there is a type for
 `f` and the branch is typechecked, so it's not dead code.
 
 Cheers,
 Asumu

