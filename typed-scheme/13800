From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Thu May 30 19:49:44 2013
Received: from mail-ob0-f176.google.com (mail-ob0-f176.google.com [209.85.214.176])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id r4UNnfuN032661
	for <bugs@bugs.plt-scheme.org>; Thu, 30 May 2013 19:49:41 -0400
Message-Id: <201305302349.r4UNnc41032651@champlain.ccs.neu.edu>
Date: Thu, 30 May 2013 19:49:39 -0400
From: asumu@ccs.neu.edu
To: bugs@racket-lang.org
Subject: TR: confusing inference result at module/REPL top-level

>Number:         13800
>Category:       typed-scheme
>Synopsis:       TR: confusing inference result at module/REPL top-level
>Class:          sw-bug
>Responsible:    samth
>Severity:       non-critical
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Thu May 30 19:52:01 -0400 2013
>Closed-Date:    Tue Mar 04 14:21:49 -0500 2014
>Last-Modified:  Tue Mar 04 14:21:49 -0500 2014
>Originator:     Asumu Takikawa
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.3.4.10--2013-04-28(-/f)
>Environment:
unix "Linux howl 3.2.0-3-amd64 #1 SMP Mon Jul 23 02:45:17 UTC 2012 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 412485624
Links: (links) = ("terminal-color" "webapi-markdown" "wffi" "Acquire" "drracket-vim-tool" "gist" "formica" "gist-tool"); (links #:user? #f) = (); (links #:root? #t) = (#<path:/home/asumu/plt/racket-git/add-on/pkgs/installed/taglib> #<path:/home/asumu/plt/racket-git/add-on/5.3.4.10/pkgs/installed/rackjure> #<path:/home/asumu/code/racket/racket-clojure> #<path:/home/asumu/plt/racket-git/add-on/5.3.4.10/pkgs/installed/irc> #<path:/home/asumu/code/racket/irc-gui>); (links #:user? #f #:root? #t) = ()
raco pkg (show):
Installation-wide:
 [none]
User-specific, all-version:
 Package[*=auto]    Checksum                                    Source
 taglib             54e10203115aa2901e00da60e0cc25ed2043a1a4    (catalog taglib)
User-specific, version-specific (5.3.4.10):
 Package[*=auto]    Checksum                                    Source
 irc                485ffa57777962b9acc78510cce1bb76f955c438    (catalog irc)
 irc-gui            #f                                          (link /home/asumu/code/racket/irc-gui)
 racket-clojure     #f                                          (link /home/asumu/code/racket/racket-clojure)
 rackjure           8e31e4a7ead1d0aea3631d6098a311c1444eb859    (catalog rackjure)



Collections:
("/home/asumu/plt/racket-git/add-on/5.3.4.10/collects"
 ("info-domain"))
("/home/asumu/plt/racket-git/collects"
 ("typed" "realm" "rnrs" "plot" "version" "frtime" "pict" "compiler" "framework" "honu" "gui-debugger" "launcher" "srfi" "drscheme" "2htdp" "ffi" "datalog" "math" "plai" "racklog" "compatibility" "scheme" "config" "profile" "algol60" "texpict" "dynext" "errortrace" "db" "mzlib" "make" "file" "sgl" "xrepl" "syntax" "slatex" "browser" "macro-debugger" "xml" "data" "at-exp" "trace" "r6rs" "syntax-color" "web-server" "graphics" "teachpack" "defaults" "racket" "lang" "openssl" "r5rs" "redex" "unstable" "deinprogramm" "mzcom" ".gitignore" "mred" "icons" "htdp" "drracket" "html" "readline" "test-engine" "pkg" "mysterx" "typed-scheme" "reader" "repo-time-stamp" "games" "string-constants" "typed-racket" "hierlist" "net" "slideshow" "swindle" "schemeunit" "picturing-programs" "meta" "info-domain" "eopl" "setup" "future-visualizer" "tests" "rackunit" "scriblib" "json" "mrlib" "scribble" "mzscheme" "lazy" "preprocessor" "planet" "images" "help" "wxme" "s-exp" "raco" "parser-tools" "step!
 per" "scribblings" "embedded-gui"))

Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((main) (test))))
>Description:
Start with the following definition in the definitions area:

  #lang typed/racket
  (: f (All (X) (-> (X -> X))))
  (define (f) (lambda (x) x))

You can get the following interaction:

Welcome to DrRacket, version 5.3.4.10--2013-04-28(-/f) [3m].
Language: typed/racket; memory limit: 40 MB.
> (f)
- : (Integer -> Integer)
#<procedure>
> ((f) 0)
. Type Checker: Could not infer types for applying polymorphic function f
 in: (f)
> (define g (f))
. Type Checker: Could not infer types for applying polymorphic function f
 in: (f)

The first `(f)` expression returns an oddly arbitrary type. Trying to
apply this expression at Integer type, however, fails. Even defining the
result with a name will fail.

Note: erroring that a type could not be inferred is probably the correct
      behavior here, but it's confusing when it's inconsistent.
>How-To-Repeat:
>Fix:
>Audit-Trail:
State changed from "open" to "closed" by asumu at Tue, 04 Mar 2014 14:21:49 -0500
Reason>>> Cannot reproduce in 6.0.0.3. The inference result is now (->
Any Any) which seems more reasonable.

