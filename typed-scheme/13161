From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Wed Oct  3 15:49:07 2012
Received: from mail-ia0-f172.google.com (mail-ia0-f172.google.com [209.85.210.172])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id q93Jn3kR026012
	for <bugs@bugs.plt-scheme.org>; Wed, 3 Oct 2012 15:49:04 -0400
Message-Id: <201210031949.q93Jn1tm026005@champlain.ccs.neu.edu>
Date: Wed, 3 Oct 2012 15:49:01 -0400
From: tonyg@ccs.neu.edu
To: bugs@racket-lang.org
Subject: TR (struct:) generates unwanted make-_ form of constructor

>Number:         13161
>Category:       typed-scheme
>Synopsis:       TR (struct:) generates unwanted make-_ form of constructor
>Class:          sw-bug
>Responsible:    samth
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Wed Oct 03 15:52:01 -0400 2012
>Closed-Date:    Thu Sep 12 03:24:57 -0400 2013
>Last-Modified:  Thu Sep 12 03:24:57 -0400 2013
>Originator:     Tony Garnock-Jones
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.3.0.24--2012-09-27(cab90c16/d)
>Environment:
unix "Linux rallyx 2.6.31-23-generic-pae #75-Ubuntu SMP Fri Mar 18 19:14:10 UTC 2011 i686 GNU/Linux" (i386-linux/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 260801844
Links: (links) = ("racket-matrix"); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()


Collections:
("/home/tonyg/.racket/5.3.0.24/collects"
 (non-existent-path))
("/var/tmp/tonyg/racket/collects"
 ("deinprogramm" "data" "typed" "typed-scheme" "planet" "trace" "db" "redex" "framework" "net" "errortrace" "repo-time-stamp" "lazy" "plai" "rackunit" "openssl" "srfi" "handin-server" "macro-debugger" "2htdp" "rnrs" "readline" "html" "images" "make" "browser" "lang" "graphics" "drracket" "slideshow" "picturing-programs" "sgl" "racklog" "help" "sirmail" "embedded-gui" "mzscheme" "plot" "wxme" "r5rs" "drscheme" "algol60" "mred" "string-constants" "schemeunit" "defaults" "info-domain" "slatex" "compiler" "hierlist" "meta" "web-server" "profile" "games" ".gitignore" "r6rs" "mzlib" "xrepl" "scribble" "parser-tools" "scribblings" "mysterx" "swindle" "ffi" "teachpack" "datalog" "scheme" "stepper" "syntax-color" "eopl" "icons" "config" "honu" "xml" "syntax" "handin-client" "racket" "s-exp" "reader" "gui-debugger" "htdp" "tests" "launcher" "at-exp" "typed-racket" "compatibility" "mrlib" "unstable" "preprocessor" "json" "file" "raco" "texpict" "dynext" "test-engine" "setup" "version" !
 "future-visualizer" "scriblib" "frtime" "mzcom"))

Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t none) (default) #() "#lang racket\n" #f #t ((main) (test))))
>Description:
The program in steps-to-reproduce gives the following error:

struct-provision.rkt:1:0: module: identifier already provided (as a different binding)
  at: make-x
  in: (#%plain-module-begin (provide (struct-out x) make-x) (struct: x () #:transparent) (: make-x : -> x) (define (make-x) (x)))
  context...:
   success
   /var/tmp/tonyg/racket/collects/typed-racket/typed-racket.rkt:38:4
   standard-module-name-resolver

Attempting to provide (except-out (struct-out x) make-x) fails with the following error:

struct-provision-workaround1.rkt:3:21: except-out: identifier to remove `make-x' not included in nested provide spec
  at: (struct-out x)
  in: (except-out (struct-out x) make-x)
  context...:
   /var/tmp/tonyg/racket/collects/racket/private/reqprov.rkt:841:5
   /var/tmp/tonyg/racket/collects/racket/provide-transform.rkt:83:2: expand-export
   /var/tmp/tonyg/racket/collects/racket/private/reqprov.rkt:666:17: transform-simple
   /var/tmp/tonyg/racket/collects/racket/private/reqprov.rkt:662:2
   success
   /var/tmp/tonyg/racket/collects/typed-racket/typed-racket.rkt:38:4
   standard-module-name-resolver

The only workaround I've found so far (besides renaming my make-x to something else in all clients of the module) is to avoid using struct-out, and instead export individual constructor, predicate and accessor identifiers.
>How-To-Repeat:
#lang typed/racket/base

(provide (struct-out x)
	 make-x)

(struct: x () #:transparent)

(: make-x : -> x)
(define (make-x)
  (x))
>Fix:
>Audit-Trail:
State changed from "open" to "closed" by guest at Thu, 12 Sep 2013 03:24:57 -0400
Reason>>> Closed by commit 9586dca.

