From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Thu Jul 23 17:10:02 2009
Received: from qw-out-2122.google.com (qw-out-2122.google.com [74.125.92.26])
	by champlain.ccs.neu.edu (8.14.2/8.14.2) with ESMTP id n6NL9wFn018032
	for <bugs@bugs.plt-scheme.org>; Thu, 23 Jul 2009 17:09:58 -0400
Message-Id: <200907232109.n6NL9v4K018025@champlain.ccs.neu.edu>
Date: Thu, 23 Jul 2009 17:09:57 -0400
From: cce@ccs.neu.edu
To: bugs@plt-scheme.org
Subject: Typed Scheme allows predicate types to be imported from untyped code

>Number:         10350
>Category:       typed-scheme
>Synopsis:       Typed Scheme allows predicate types to be imported from untyped code
>Class:          sw-bug
>Responsible:    samth
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Thu Jul 23 17:12:01 -0400 2009
>Closed-Date:    Wed May 19 12:19:34 -0400 2010
>Last-Modified:  Wed May 19 12:19:34 -0400 2010
>Originator:     Carl Eastlund
>Organization:
plt
>Submitter-Id:   unknown
>Release:        4.2.1.1-svn23jul2009
>Environment:
macosx "Darwin Kauai.ccs.neu.edu 9.7.0 Darwin Kernel Version 9.7.0: Tue Mar 31 22:54:29 PDT 2009; root:xnu-1228.12.14~1/RELEASE_PPC Power Macintosh" (ppc-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 188830796

Collections:
(("/Users/cce/Library/PLT Scheme/4.2.1.1/collects" non-existent-path) ("/Users/cce/plt/trunk/collects" ".svn" "2htdp" "afm" "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "defaults" "deinprogramm" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profile" "profj" "profjWizard" "r5rs" "r6rs" "readline" "redex" "repos-time-stamp" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "sirmail" "slatex" "slideshow" "srfi" "srpersist" "stepper" "string-constants" "stxclass" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tests" "tex2page" "texpict" !
 "trace" "typed" "typed-scheme" "version" "waterworld" "web-server" "wxme" "xml"))
Computer Language: (("Module") (#(#t write mixed-fraction-e #f #t debug) (default) #() "#lang scheme\n" #t))
>Description:
Run the code below and see this REPL behavior:

> f
- : (Number -> String)
#<procedure:+>
> (f 5)
- : String
5
> 

Typed Scheme allows values to produce something it claims is a predicate -- for a function type, in fact, which cannot have a predicate -- but cannot check this claim and derives unsound conclusions from it.
>How-To-Repeat:
#lang typed-scheme
(require/typed
 scheme/base
 [values (All (T) ((Any -> Boolean) -> (Any -> Boolean : T)))])

(: number->string? (Any -> Boolean : (Number -> String)))
(define (number->string? x)
  (((inst values (Number -> String)) procedure?) x))

(: f (Number -> String))
(define f
  (if (number->string? +) + number->string))
>Fix:
>Audit-Trail:
State changed from "open" to "closed" by samth at Wed, 19 May 2010 12:19:34 -0400
Reason>>> fixed

