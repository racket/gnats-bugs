From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Mon Jul 30 17:55:17 2012
Received: from mail-vb0-f44.google.com (mail-vb0-f44.google.com [209.85.212.44])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id q6ULtDkh000997
	for <bugs@bugs.plt-scheme.org>; Mon, 30 Jul 2012 17:55:13 -0400
Message-Id: <201207302155.q6ULt8re000972@champlain.ccs.neu.edu>
Date: Mon, 30 Jul 2012 17:55:08 -0400
From: eriksilkensen@gmail.com
To: bugs@racket-lang.org
Subject: Type Sexp could not be converted to a contract

>Number:         12954
>Category:       typed-scheme
>Synopsis:       Type Sexp could not be converted to a contract
>Class:          sw-bug
>Responsible:    samth
>Severity:       non-critical
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Mon Jul 30 17:56:01 -0400 2012
>Closed-Date:    Thu Aug 23 13:18:07 -0400 2012
>Last-Modified:  Thu Aug 23 13:18:07 -0400 2012
>Originator:     Typed Racket: define-predicate for Sexp
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.3.0.16--2012-07-29(14f2541/a)
>Environment:
macosx "Darwin esilkensen.local 12.0.0 Darwin Kernel Version 12.0.0: Sun Jun 24 23:00:16 PDT 2012; root:xnu-2050.7.9~1/RELEASE_X86_64 x86_64" (x86_64-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 253811936
Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()


Collections:
("/Users/Erik/Library/Racket/5.3.0.16/collects"
 (non-existent-path))
("/Applications/Racket/collects"
 ("2htdp" "algol60" "at-exp" "browser" "compatibility" "compiler" "config" "data" "datalog" "db" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "future-visualizer" "games" "graphics" "gui-debugger" "help" "hierlist" "htdp" "html" "icons" "images" "info-domain" "json" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "picturing-programs" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "redex" "repo-time-stamp" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-engine" "texpict" "trace" "typed" "typed-racket" "typed-scheme" "unstable" "version" "web-server" "wxme" "xml" "xrepl"))

Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((main) (test))))
>Description:
I had some code that used define-predicate for Sexp, and in one of the more recent builds this stopped working.  I was wondering if this was an expected change or a bug?
>How-To-Repeat:
(define-predicate sexp? Sexp)
>Fix:
>Audit-Trail:
From: Eric Dobson <eric.n.dobson@gmail.com>
To: nobody@racket-lang.org, bugs@racket-lang.org,
        bug-notification@racket-lang.org, eriksilkensen@gmail.com
Cc: 
Subject: Re: all/12954: Type Sexp could not be converted to a contract
Date: Fri, 3 Aug 2012 20:09:31 -0700

 It is not a bug and expected behavior, the error message is an issue though.
 
 The problem is that S-expressions can contain vectors and boxes. Even
 if these contain only S-expressions now, some untyped code may change
 it later to something else like a structure, which would mean treating
 it like an S-expression is unsound.
 
 I have a change that adds in a cast form that will work with Sexp, but
 might do something different than you were doing. (cast v Sexp) will
 return a S-expression if v is an S-expression or error otherwise. So
 if you were doing something where you were just trying to convince the
 typesystem a value was an S-expression, it will work. If you were
 trying to distinguish S-expressions from other values, it will not.

State changed from "open" to "closed" by samth at Thu, 23 Aug 2012 13:18:07 -0400
Reason>>> `cast` form added.

