From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Wed Feb  1 18:52:21 2012
Received: from mail-vx0-f172.google.com (mail-vx0-f172.google.com [209.85.220.172])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id q11NqIfx024405
	for <bugs@bugs.plt-scheme.org>; Wed, 1 Feb 2012 18:52:18 -0500
Message-Id: <201202012352.q11NqGu2024400@champlain.ccs.neu.edu>
Date: Wed, 1 Feb 2012 18:52:16 -0500
From: danburton.email@gmail.com
To: bugs@racket-lang.org
Subject: Assign filters individually, rather than the negation of each other

>Number:         12528
>Category:       typed-scheme
>Synopsis:       Assign filters individually, rather than the negation of each other
>Class:          change-request
>Responsible:    samth
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Wed Feb 01 18:56:01 -0500 2012
>Closed-Date:    Tue Mar 25 22:54:29 -0400 2014
>Last-Modified:  Tue Mar 25 22:54:29 -0400 2014
>Originator:     Dan Burton
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.1.3
>Environment:
linux-ubuntu
>Description:
I want to write something like this:

(: foo? (Any -> Boolean : Char | _))
(define (foo? x)
  (and (char? x)
       (char=? x #\c)))

Where the #t filter passes along the knowledge that the input is a Char, but the #f filter does *not* assert that x is *not* a Char. Currently, this is impossible, because current syntax couples the #t and #f filters, requiring them to be opposites.

To quote <stamourv> from irc:
This is expressible in the type system, but there's no syntax for it.
Basically, you'd like to give it filters for both the true and the false case
Or rather, you'd like to assign filters to each case individually, as opposed to one being the negation of the other.
I believe we could implement it.
As in, I don't see anything that would make it problematic, it's just a matter of adding it.
>How-To-Repeat:
>Fix:
>Audit-Trail:
From: Eric Dobson <eric.n.dobson@gmail.com>
To: samth@racket-lang.org, stamourv@racket-lang.org, bugs@racket-lang.org,
        danburton.email@gmail.com
Cc: 
Subject: Re: typed-scheme/12528: Assign filters individually, rather than the
 negation of each other
Date: Tue, 25 Mar 2014 19:51:36 -0700

 This has been fixed, the syntax is:
 
 #lang typed/racket
 
 (: foo? (Any -> Boolean : #:+ (Char @ 0)))
 (define (foo? x)
   (and (char? x)
        (char=? x #\c)))

State changed from "open" to "closed" by endobson at Tue, 25 Mar 2014 22:54:29 -0400
Reason>>> fixed.

