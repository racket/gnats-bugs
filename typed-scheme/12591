From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Tue Feb 21 16:18:56 2012
Received: from mail-vw0-f44.google.com (mail-vw0-f44.google.com [209.85.212.44])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id q1LLIrmd023501
	for <bugs@bugs.plt-scheme.org>; Tue, 21 Feb 2012 16:18:53 -0500
Message-Id: <201202212118.q1LLIpVA023495@champlain.ccs.neu.edu>
Date: Tue, 21 Feb 2012 16:18:51 -0500
From: asumu@ccs.neu.edu
To: bugs@racket-lang.org
Subject: TR generates a new name where it should use the type variable

>Number:         12591
>Category:       typed-scheme
>Synopsis:       TR generates a new name where it should use the type variable
>Class:          sw-bug
>Responsible:    samth
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Tue Feb 21 16:20:01 -0500 2012
>Last-Modified:  Tue Feb 21 16:26:32 -0500 2012
>Originator:     Asumu Takikawa
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.2.1.6--2012-02-18(d361724/g)
>Environment:
unix "Linux calcifer 3.1.0-1-amd64 #1 SMP Tue Jan 10 05:01:58 UTC 2012 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 455021512
Links: (links) = ("book" "assignments" "sweet" "class" "pgf-dc" "flat-class" "taglib" "clojure" "racket-gst"); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()


Collections:
("/home/asumu/.racket/5.2.1.6/collects"
 ("info-domain"))
("/home/asumu/plt/current/collects"
 ("teachpack" "handin-client" "planet" "picturing-programs" "mred" "images" "redex" "srpersist" "slideshow" "htdp" "data" "mzscheme" "scribblings" "ffi" "lang" "help" "racklog" "games" "lazy" "typed-scheme" "guibuilder" "version" "mrlib" "openssl" "scribble" "launcher" "profile" "unstable" "errortrace" "drscheme" "wxme" ".gitignore" "waterworld" "plai" "db" "datalog" "at-exp" "eopl" "typed" "test-box-recovery" "web-server" "scheme" "stepper" "setup" "file" "embedded-gui" "tests" "deinprogramm" "rackunit" "typed-racket" "repo-time-stamp" "schemeunit" "xrepl" "drracket" "srfi" "compiler" "handin-server" "r6rs" "reader" "config" "meta" "html" "gui-debugger" "readline" "syntax-color" "hierlist" "info-domain" "string-constants" "plot" "sirmail" "trace" "r5rs" "macro-debugger" "honu" "preprocessor" "mysterx" "algol60" "parser-tools" "2htdp" "slatex" "icons" "defaults" "swindle" "s-exp" "xml" "make" "raco" "rnrs" "browser" "racket" "frtime" "net" "graphics" "tex2page" "combinator-p!
 arser" "mzcom" "texpict" "sgl" "test-engine" "scriblib" "framework" "mzlib" "dynext" "syntax"))

Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t))
>Description:
The following TR code snippet has a bug:

#lang typed/racket

(: e (All (B) (All (A) (List A (A -> Integer) (A -> A)) -> B) -> B))
(define e
  (λ (f)
    ((inst f Nonnegative-Integer) (list 0 identity add1))))

((inst e Number) (λ (m) ((cadr m) ((cadr m) (car m)))))

The cadr should be a caddr. However, the error message that's produced uses a generated name instead of the type variable A that is expected:

  Type Checker: Expected g5233, but got Integer in: ((cadr m) (car m))
>How-To-Repeat:
Run the snippet above.
>Fix:
