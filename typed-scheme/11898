From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Wed May  4 23:27:14 2011
Received: from mail-fx0-f44.google.com (mail-fx0-f44.google.com [209.85.161.44])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id p453RCi1003450
	for <bugs@bugs.plt-scheme.org>; Wed, 4 May 2011 23:27:12 -0400
Message-Id: <201105050327.p453R6pi003444@champlain.ccs.neu.edu>
Date: Wed, 4 May 2011 23:27:06 -0400
From: jsailor+plt@cs.brown.edu
To: bugs@racket-lang.org
Subject: "flatten" generates error in TR

>Number:         11898
>Category:       typed-scheme
>Synopsis:       "flatten" generates error in TR
>Class:          sw-bug
>Responsible:    samth
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Wed May 04 23:28:01 -0400 2011
>Last-Modified:  Tue May 10 19:17:48 -0400 2011
>Originator:     Jon Sailor
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.1
>Environment:
unix "Linux hikari 2.6.26-2-686 #1 SMP Thu Jan 27 00:28:05 UTC 2011 i686 GNU/Linux" (i386-linux/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 334518148

Collections:
("/home/jon/.racket/5.1/collects"
 (non-existent-path))
("/pro/plt/software/racket/5.1/std/collects"
 ("syntax" "planet" "errortrace" "xml" "scribblings" "file" "htdp" "s-exp" "schemeunit" "eopl" "slatex" "syntax-color" "hierlist" "deinprogramm" "tests" "make" "gui-debugger" "picturing-programs" "unstable" "slideshow" "openssl" "version" "parser-tools" "combinator-parser" "r6rs" "defaults" "rnrs" "scriblib" "dynext" "r5rs" "rackunit" "string-constants" "lazy" "launcher" "readline" "mysterx" "mrlib" "browser" "mzcom" "lang" "embedded-gui" "framework" "at-exp" "graphics" "test-box-recovery" "mred" "datalog" "games" "compiler" "profile" "web-server" "icons" "frtime" "teachpack" "raco" "wxme" "typed-scheme" "trace" "texpict" "ffi" "algol60" "racket" "setup" "scribble" "plot" "drracket" "drscheme" "typed" "scheme" "racklog" "data" "html" "tex2page" "stepper" "srfi" "mzscheme" "macro-debugger" "net" "test-engine" "config" "sgl" "mzlib" "help" "swindle" "plai" "reader" "redex" "2htdp" "preprocessor" "info-domain"))

Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t none) (default) #() "#lang racket\n" #t #t))
>Description:
#lang typed/racket
flatten

--> Type Checker: untyped identifier flatten imported from module <typed/racket> in: flatten
>How-To-Repeat:
>Fix:
>Audit-Trail:
From: Eric Dobson <eric.n.dobson@gmail.com>
To: nobody@racket-lang.org, bugs@racket-lang.org,
        bug-notification@racket-lang.org, jsailor+plt@cs.brown.edu
Cc: 
Subject: Re: all/11898: "flatten" generates error in TR
Date: Sat, 7 May 2011 17:41:09 -0400

 The reason for this is that there is no good type to give flatten. Here is a possible type for flatten
 
 (define-type Tree (All (a) (Rec Tree (U a Null (Pair Tree Tree)))
 (: flatten (All (a) ((Tree a) -> (Listof a))))
 
 But this is unsound as it would type the following program incorrectly, and probably crash racket.
 
 (: foo (Tree (List Symbol)))
 (define foo (list (list 'sym)))
 
 (: flat-foo (Listof (List Symbol)))
 (define flat-foo (flatten foo))
 
 (car (car flat-foo))
 
 flat-foo is actually the value (list 'sym) and not of the type (Listof (List Symbol)). 
 
 -Eric
From: Sam Tobin-Hochstadt <samth@ccs.neu.edu>
To: Eric Dobson <eric.n.dobson@gmail.com>
Cc: nobody <nobody@racket-lang.org>, bugs <bugs@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>,
        "jsailor+plt" <jsailor+plt@cs.brown.edu>
Subject: Re: all/11898: "flatten" generates error in TR
Date: Sat, 7 May 2011 17:46:46 -0400

 On Sat, May 7, 2011 at 5:41 PM, Eric Dobson <eric.n.dobson@gmail.com> wrote:
 > The reason for this is that there is no good type to give flatten. Here is a possible type for flatten
 >
 > (define-type Tree (All (a) (Rec Tree (U a Null (Pair Tree Tree)))
 > (: flatten (All (a) ((Tree a) -> (Listof a))))
 >
 > But this is unsound as it would type the following program incorrectly, and probably crash racket.
 
 It's possible to give some types to `flatten', such as the
 instantiation of your type with (U String Number Boolean Port
 Procedure Box ...).  Of course, that's not a very useful type; we'd
 need bounded polymorphism to make it useful.  But it's still pretty
 unsatisfying.
 -- 
 sam th
 samth@ccs.neu.edu

