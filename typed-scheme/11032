From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Sun Jul 11 22:37:25 2010
Received: from mail-gy0-f172.google.com (mail-gy0-f172.google.com [209.85.160.172])
	by champlain.ccs.neu.edu (8.14.3/8.14.3) with ESMTP id o6C2bNWN029429
	for <bugs@bugs.plt-scheme.org>; Sun, 11 Jul 2010 22:37:23 -0400
Message-Id: <201007120237.o6C2bLiZ029422@champlain.ccs.neu.edu>
Date: Sun, 11 Jul 2010 22:37:21 -0400
From: sk@cs.brown.edu
To: bugs@racket-lang.org
Subject: Typed Racket error message that is crime against nature

>Number:         11032
>Category:       typed-scheme
>Synopsis:       Typed Racket error message that is crime against nature
>Class:          sw-bug
>Responsible:    samth
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Sun Jul 11 22:40:01 -0400 2010
>Closed-Date:    Wed Jul 29 20:23:39 -0400 2015
>Last-Modified:  Wed Jul 29 20:23:39 -0400 2015
>Originator:     Shriram Krishnamurthi
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.0
>Environment:
windows "Windows NT 6.1 (Build 7600)" (win32\i386\3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 124249076

Collections:
(("C:\\Users\\sk\\AppData\\Roaming\\Racket\\5.0\\collects" non-existent-path) ("C:\\Program Files (x86)\\Racket\\collects" "2htdp" "afm" "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "help" "hierlist" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "redex" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tex2page" "texpict" "trace" "typed" "typed-scheme" "unstable" "version" "web-server" !
 "wxme" "xml"))
Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t))
>Description:
I have

(: argmin-l ((Listof Real) -> Real))
(: smallest? (Real (Listof Real) -> Boolean))

The expression

(smallest? (list-ref l1 (argmin-l l1)) l1)

This produces a hideously complicated error:

Type Checker: Polymorphic function list-ref could not be applied to arguments:
Argument 1:
  Expected: (Listof a)
  Given:    (List Exact-Positive-Integer Exact-Positive-Integer Exact-Positive-Integer)
Argument 2:
  Expected: Natural
  Given:    Real

Result type:     a
Expected result: Real
 in: (list-ref l1 (argmin-l l1))

Actually, most of this message is irrelevant.  In particular, it would
appear that the problem has something do with polymorphism or
unification or something complicated like that.  In fact, it's simply
that you can't pass a Real to a Natural.  Fixing argmin-l to return a
Natural is all that is needed to fix this.  If the type checker had
clarified that it was the second argument, not the first, that was the
error, I could have ignored all the polymorphism crud.  Even better,
it could have noticed this itself, dropped the polymorphism crud and
simply said, "argument 2 to list-ref does not match: Expected:
Natural, Given: Real".
>How-To-Repeat:
>Fix:
>Audit-Trail:
Responsible changed from "nobody" to "samth" by samth at Thu, 19 Aug 2010 11:48:57 -0400
Reason>>> tr

From: Eli Barzilay <eli@barzilay.org>
To: sk@cs.brown.edu, bugs@racket-lang.org
Cc: Sam Tobin-Hochstadt <samth@ccs.neu.edu>
Subject: Re: [racket-bug] all/11032: Typed Racket error message that is crime against nature
Date: Thu, 26 Aug 2010 17:56:19 -0400

 On Jul 11, sk@cs.brown.edu wrote:
 > I have
 > 
 > (: argmin-l ((Listof Real) -> Real))
 > (: smallest? (Real (Listof Real) -> Boolean))
 > 
 > The expression
 > 
 > (smallest? (list-ref l1 (argmin-l l1)) l1)
 > 
 > This produces a hideously complicated error:
 > 
 > Type Checker: Polymorphic function list-ref could not be applied to arguments:
 > Argument 1:
 >   Expected: (Listof a)
 >   Given:    (List Exact-Positive-Integer Exact-Positive-Integer Exact-Positive-Integer)
 > Argument 2:
 >   Expected: Natural
 >   Given:    Real
 > 
 > Result type:     a
 > Expected result: Real
 >  in: (list-ref l1 (argmin-l l1))
 > 
 > Actually, most of this message is irrelevant.  In particular, it would
 > appear that the problem has something do with polymorphism or
 > unification or something complicated like that.  In fact, it's simply
 > that you can't pass a Real to a Natural.  Fixing argmin-l to return a
 > Natural is all that is needed to fix this.  If the type checker had
 > clarified that it was the second argument, not the first, that was the
 > error, I could have ignored all the polymorphism crud.  Even better,
 > it could have noticed this itself, dropped the polymorphism crud and
 > simply said, "argument 2 to list-ref does not match: Expected:
 > Natural, Given: Real".
 
 This we don't have a voting mechanism, I'll reply with a "me too".
 
 (I've complained to Sam in the past about these error messages that
 have information on all inputs/outputs when there's just one argument
 that needs fixing -- and that one place is often drowned in a sea of
 unrelated details, as happens above.)
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!


State changed from "open" to "closed" by samth at Wed, 29 Jul 2015 20:23:39 -0400
Reason>>> duplicate of PR 10801

