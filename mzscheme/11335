From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Tue Oct 19 17:54:00 2010
Received: from mail-gy0-f172.google.com (mail-gy0-f172.google.com [209.85.160.172])
	by champlain.ccs.neu.edu (8.14.3/8.14.3) with ESMTP id o9JLrvZm027222
	for <bugs@bugs.plt-scheme.org>; Tue, 19 Oct 2010 17:53:57 -0400
Message-Id: <201010192153.o9JLrsgG027214@champlain.ccs.neu.edu>
Date: Tue, 19 Oct 2010 17:53:54 -0400
From: sstrickl@ccs.neu.edu
To: bugs@racket-lang.org
Subject: Leaking error in in-list

>Number:         11335
>Category:       mzscheme
>Synopsis:       Leaking error in in-list
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Tue Oct 19 17:56:01 -0400 2010
>Closed-Date:    Mon Mar 16 23:47:49 -0400 2015
>Last-Modified:  Mon Mar 16 23:47:49 -0400 2015
>Originator:     Stevie Strickland
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.0.2.1--2010-10-18(ddca8cd/g)
>Environment:
macosx "Darwin bonn.local 10.4.0 Darwin Kernel Version 10.4.0: Fri Apr 23 18:28:53 PDT 2010; root:xnu-1504.7.4~1/RELEASE_I386 i386" (i386-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 155075992

Collections:
(("/Users/sstrickl/plt/add-on/5.0.2.1/collects" non-existent-path) ("/Users/sstrickl/plt/collects" ".gitignore" "2htdp" "afm" "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "data" "datalog" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "logic" "macro-debugger" "make" "meta" "mred" "mrlib" "mysterx" "mz" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raclog" "raco" "racunit" "reader" "readline" "redex" "repo-time-stamp" "repos-time-stamp" "rktunit" "rnrs" "s-exp" "schelog" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "sirmail" "slatex" "slideshow" "srfi" "srpersist" "stepper" "string-c!
 onstants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tests" "tex2page" "texpict" "tool" "trace" "typed" "typed-scheme" "unstable" "version" "waterworld" "web-server" "wxme" "xml"))
Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t))
>Description:
If you run the program given in the steps to reproduce, you'll notice an error from an underlying use of car, instead of an error reported in terms of in-list.
>How-To-Repeat:
#lang racket

(define (print-list l)
  (for ([n (in-list l)])
    (print n)))
(print-list #f)
>Fix:
>Audit-Trail:
From: Eli Barzilay <eli@barzilay.org>
To: sstrickl@ccs.neu.edu, bugs@racket-lang.org
Cc: bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11335: Leaking error in in-list
Date: Tue, 19 Oct 2010 21:16:56 -0400

 Three hours ago, sstrickl@ccs.neu.edu wrote:
 > If you run the program given in the steps to reproduce, you'll
 > notice an error from an underlying use of car, instead of an error
 > reported in terms of in-list.
 
 [It wasn't really that big, but was it really necessary to have all
 that extra code when (for/list ([x (in-list #f)]) x) does the same
 job?]
 
 Anyway, it's also a problem with `in-list' values:
 
   (let ([r (in-list "FOO")]) (for ([x r]) (printf ">>> ~s\n" x)))
 
 It's easy to add the checks -- and in fact the code already has them,
 except that they're commented out (one in the `in-list' definition and
 one is the commented "outer check" in `*in-list').
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!


State changed from "open" to "closed" by endobson at Mon, 16 Mar 2015 23:47:49 -0400
Reason>>> At head this gives me:
in-list: contract violation
  expected: list?
  given: #f

So I believe it was fixed at some point in the last 4.5 years.

