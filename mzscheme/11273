From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Thu Sep 30 23:56:21 2010
Received: from mail-yw0-f44.google.com (mail-yw0-f44.google.com [209.85.213.44])
	by champlain.ccs.neu.edu (8.14.3/8.14.3) with ESMTP id o913uIbR022757
	for <bugs@bugs.plt-scheme.org>; Thu, 30 Sep 2010 23:56:18 -0400
Message-Id: <201010010356.o913uGTD022746@champlain.ccs.neu.edu>
Date: Thu, 30 Sep 2010 23:56:16 -0400
From: eli@barzilay.org
To: bugs@racket-lang.org
Subject: rename-in gets in the way of redefining stuff

>Number:         11273
>Category:       mzscheme
>Synopsis:       rename-in gets in the way of redefining stuff
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Fri Oct 01 00:00:01 -0400 2010
>Last-Modified:  Wed Oct 06 16:56:27 -0400 2010
>Originator:     Eli Barzilay
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.0.1.7--2010-09-30(9755d565bd03967df6be84f96b0e39a483572de1/a)
>Environment:
unix "Linux winooski.ccs.neu.edu 2.6.23.17-88.fc7 #1 SMP Thu May 15 00:02:29 EDT 2008 x86_64 x86_64 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 16
Human Language: english
(current-memory-use) 175860800

Collections:
(("/home/eli/.racket/5.0.1.7/collects" "info-domain" "pl") ("/home/scheme/plt/collects" "icons" "ffi" "mred" "repo-time-stamp" "dynext" "mzscheme" "make" "preprocessor" "file" "reader" "openssl" "sgl" "scriblib" "s-exp" "slideshow" "mysterx" "plai" "graphics" "datalog" "test-engine" "mz" "guibuilder" "scheme" "frtime" "waterworld" "wxme" "lazy" "mzlib" "macro-debugger" "scribble" "raco" "syntax-color" "mzcom" "help" "swindle" "config" "drracket" "net" "hierlist" "test-box-recovery" "2htdp" "profile" "trace" "schemeunit" "mrlib" "algol60" "browser" "framework" "srpersist" "typed-scheme" "at-exp" "info-domain" "compiler" "errortrace" "eopl" "sirmail" "syntax" "combinator-parser" "string-constants" "html" "slatex" "stepper" "data" "meta" "honu" "launcher" "unstable" "htdp" "lang" "rnrs" "setup" "deinprogramm" "plot" "rackunit" "teachpack" "tests" "xml" "scribblings" "planet" "readline" "parser-tools" "embedded-gui" "drscheme" "defaults" "handin-server" "srfi" "afm" "handin-clie!
 nt" "r6rs" "version" "typed" "texpict" "games" "racket" "tex2page" "racklog" "gui-debugger" "web-server" "r5rs" "redex"))
Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t test-coverage) (default) #() "#lang racket\n" #f))
>Description:
The first program below works fine, but if the `only-in' is changed into
a `rename-in' as in the second program, then I get

  x.rkt:3:8: module: identifier is already imported at: + in:
  (define-values (+) "plus")
>How-To-Repeat:
#lang racket/base
(require (only-in racket/base *))
(define + "plus")


#lang racket/base
(require (rename-in racket/base [* *]))
(define + "plus")
>Fix:
>Audit-Trail:
From: Eli Barzilay <eli@barzilay.org>
To: bugs@racket-lang.org
Cc: bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11273: rename-in gets in the way of redefining stuff
Date: Fri, 1 Oct 2010 00:08:14 -0400

 6 minutes ago, eli@barzilay.org wrote:
 > *** Description:
 > The first program below works fine, but if the `only-in' is changed into
 > a `rename-in' as in the second program, then I get
 > 
 >   x.rkt:3:8: module: identifier is already imported at: + in:
 >   (define-values (+) "plus")
 > 
 > *** How to repeat:
 > #lang racket/base
 > (require (only-in racket/base *))
 > (define + "plus")
 > 
 > 
 > #lang racket/base
 > (require (rename-in racket/base [* *]))
 > (define + "plus")
 
 [BTW, I'm running into this problem in the HEAD build since
 `typed-scheme/private/prims' now provides `for' and `for*'.]
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!
From: Ryan Culpepper <ryanc@ccs.neu.edu>
To: eli@barzilay.org, bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11273: rename-in gets in the way of redefining
 stuff
Date: Fri, 01 Oct 2010 00:12:29 -0400

 As I understand it, module-level definitions are allowed to shadow 
 bindings from the language but not bindings from requires. In the first 
 case, + is bound by the language, so you can shadow it. In the second, 
 it is (re)bound by the require, so you can't.
 
 Ryan
 
 
 On 10/01/2010 12:00 AM, eli@barzilay.org wrote:
 > A new problem report is waiting at
 >    http://bugs.racket-lang.org/query/?cmd=view&pr=11273
 >
 > Reported by Eli Barzilay for release: 5.0.1.7--2010-09-30(9755d565bd03967df6be84f96b0e39a483572de1/a)
 >
 > *** Description:
 > The first program below works fine, but if the `only-in' is changed into
 > a `rename-in' as in the second program, then I get
 >
 >    x.rkt:3:8: module: identifier is already imported at: + in:
 >    (define-values (+) "plus")
 >
 > *** How to repeat:
 > #lang racket/base
 > (require (only-in racket/base *))
 > (define + "plus")
 >
 >
 > #lang racket/base
 > (require (rename-in racket/base [* *]))
 > (define + "plus")
 >
 > *** Environment:
 > unix "Linux winooski.ccs.neu.edu 2.6.23.17-88.fc7 #1 SMP Thu May 15 00:02:29 EDT 2008 x86_64 x86_64 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 16
 > Human Language: english
 > (current-memory-use) 175860800
 >
 > Collections:
 > (("/home/eli/.racket/5.0.1.7/collects" "info-domain" "pl") ("/home/scheme/plt/collects" "icons" "ffi" "mred" "repo-time-stamp" "dynext" "mzscheme" "make" "preprocessor" "file" "reader" "openssl" "sgl" "scriblib" "s-exp" "slideshow" "mysterx" "plai" "graphics" "datalog" "test-engine" "mz" "guibuilder" "scheme" "frtime" "waterworld" "wxme" "lazy" "mzlib" "macro-debugger" "scribble" "raco" "syntax-color" "mzcom" "help" "swindle" "config" "drracket" "net" "hierlist" "test-box-recovery" "2htdp" "profile" "trace" "schemeunit" "mrlib" "algol60" "browser" "framework" "srpersist" "typed-scheme" "at-exp" "info-domain" "compiler" "errortrace" "eopl" "sirmail" "syntax" "combinator-parser" "string-constants" "html" "slatex" "stepper" "data" "meta" "honu" "launcher" "unstable" "htdp" "lang" "rnrs" "setup" "deinprogramm" "plot" "rackunit" "teachpack" "tests" "xml" "scribblings" "planet" "readline" "parser-tools" "embedded-gui" "drscheme" "defaults" "handin-server" "srfi" "afm" "handin-cli
 e!
 >   nt" "r6rs" "version" "typed" "texpict" "games" "racket" "tex2page" "racklog" "gui-debugger" "web-server" "r5rs" "redex"))
 > Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t test-coverage) (default) #() "#lang racket\n" #f))
 >
 
From: Eli Barzilay <eli@barzilay.org>
To: Ryan Culpepper <ryanc@ccs.neu.edu>
Cc: bugs@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11273: rename-in gets in the way of redefining
 stuff
Date: Fri, 1 Oct 2010 00:29:59 -0400

 15 minutes ago, Ryan Culpepper wrote:
 > As I understand it, module-level definitions are allowed to shadow 
 > bindings from the language but not bindings from requires. In the first 
 > case, + is bound by the language, so you can shadow it. In the second, 
 > it is (re)bound by the require, so you can't.
 
 Bleh.  (Easy to trip over with old code, given that in mzscheme
 renaming was the idiom for only-in.)
 
 I'll update the docs for `rename-in' to make that point explicit
 (maybe also mention that `only-in' can also rename).
 
 
 
 
 > On 10/01/2010 12:00 AM, eli@barzilay.org wrote:
 > > A new problem report is waiting at
 > >    http://bugs.racket-lang.org/query/?cmd=view&pr=11273
 > >
 > > Reported by Eli Barzilay for release: 5.0.1.7--2010-09-30(9755d565bd03967df6be84f96b0e39a483572de1/a)
 > >
 > > *** Description:
 > > The first program below works fine, but if the `only-in' is changed into
 > > a `rename-in' as in the second program, then I get
 > >
 > >    x.rkt:3:8: module: identifier is already imported at: + in:
 > >    (define-values (+) "plus")
 > >
 > > *** How to repeat:
 > > #lang racket/base
 > > (require (only-in racket/base *))
 > > (define + "plus")
 > >
 > >
 > > #lang racket/base
 > > (require (rename-in racket/base [* *]))
 > > (define + "plus")
 > >
 > > *** Environment:
 > > unix "Linux winooski.ccs.neu.edu 2.6.23.17-88.fc7 #1 SMP Thu May 15 00:02:29 EDT 2008 x86_64 x86_64 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 16
 > > Human Language: english
 > > (current-memory-use) 175860800
 > >
 > > Collections:
 > > (("/home/eli/.racket/5.0.1.7/collects" "info-domain" "pl") ("/home/scheme/plt/collects" "icons" "ffi" "mred" "repo-time-stamp" "dynext" "mzscheme" "make" "preprocessor" "file" "reader" "openssl" "sgl" "scriblib" "s-exp" "slideshow" "mysterx" "plai" "graphics" "datalog" "test-engine" "mz" "guibuilder" "scheme" "frtime" "waterworld" "wxme" "lazy" "mzlib" "macro-debugger" "scribble" "raco" "syntax-color" "mzcom" "help" "swindle" "config" "drracket" "net" "hierlist" "test-box-recovery" "2htdp" "profile" "trace" "schemeunit" "mrlib" "algol60" "browser" "framework" "srpersist" "typed-scheme" "at-exp" "info-domain" "compiler" "errortrace" "eopl" "sirmail" "syntax" "combinator-parser" "string-constants" "html" "slatex" "stepper" "data" "meta" "honu" "launcher" "unstable" "htdp" "lang" "rnrs" "setup" "deinprogramm" "plot" "rackunit" "teachpack" "tests" "xml" "scribblings" "planet" "readline" "parser-tools" "embedded-gui" "drscheme" "defaults" "handin-server" "srfi" "afm" "handin-cli
 > e!
 > >   nt" "r6rs" "version" "typed" "texpict" "games" "racket" "tex2page" "racklog" "gui-debugger" "web-server" "r5rs" "redex"))
 > > Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t test-coverage) (default) #() "#lang racket\n" #f))
 > >
 > 
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!
From: Ryan Culpepper <ryanc@ccs.neu.edu>
To: Eli Barzilay <eli@barzilay.org>
Cc: bugs@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11273: rename-in gets in the way of redefining
 stuff
Date: Fri, 01 Oct 2010 00:41:38 -0400

 On 10/01/2010 12:29 AM, Eli Barzilay wrote:
 > 15 minutes ago, Ryan Culpepper wrote:
 >> As I understand it, module-level definitions are allowed to shadow
 >> bindings from the language but not bindings from requires. In the first
 >> case, + is bound by the language, so you can shadow it. In the second,
 >> it is (re)bound by the require, so you can't.
 >
 > Bleh.  (Easy to trip over with old code, given that in mzscheme
 > renaming was the idiom for only-in.)
 >
 > I'll update the docs for `rename-in' to make that point explicit
 > (maybe also mention that `only-in' can also rename).
 
 Yes, I remember being initially confused by rename-in. One way to 
 summarize it, I think, is
 
 (require (rename-in M [x x*] ...))
 =
 (require (except-in M x ...)
           (only-in M [x x*] ...))
 
 Ryan
 
 
 >> On 10/01/2010 12:00 AM, eli@barzilay.org wrote:
 >>> A new problem report is waiting at
 >>>     http://bugs.racket-lang.org/query/?cmd=view&pr=11273
 >>>
 >>> Reported by Eli Barzilay for release: 5.0.1.7--2010-09-30(9755d565bd03967df6be84f96b0e39a483572de1/a)
 >>>
 >>> *** Description:
 >>> The first program below works fine, but if the `only-in' is changed into
 >>> a `rename-in' as in the second program, then I get
 >>>
 >>>     x.rkt:3:8: module: identifier is already imported at: + in:
 >>>     (define-values (+) "plus")
 >>>
 >>> *** How to repeat:
 >>> #lang racket/base
 >>> (require (only-in racket/base *))
 >>> (define + "plus")
 >>>
 >>>
 >>> #lang racket/base
 >>> (require (rename-in racket/base [* *]))
 >>> (define + "plus")
 >>>
 >>> *** Environment:
 >>> unix "Linux winooski.ccs.neu.edu 2.6.23.17-88.fc7 #1 SMP Thu May 15 00:02:29 EDT 2008 x86_64 x86_64 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 16
 >>> Human Language: english
 >>> (current-memory-use) 175860800
 >>>
 >>> Collections:
 >>> (("/home/eli/.racket/5.0.1.7/collects" "info-domain" "pl") ("/home/scheme/plt/collects" "icons" "ffi" "mred" "repo-time-stamp" "dynext" "mzscheme" "make" "preprocessor" "file" "reader" "openssl" "sgl" "scriblib" "s-exp" "slideshow" "mysterx" "plai" "graphics" "datalog" "test-engine" "mz" "guibuilder" "scheme" "frtime" "waterworld" "wxme" "lazy" "mzlib" "macro-debugger" "scribble" "raco" "syntax-color" "mzcom" "help" "swindle" "config" "drracket" "net" "hierlist" "test-box-recovery" "2htdp" "profile" "trace" "schemeunit" "mrlib" "algol60" "browser" "framework" "srpersist" "typed-scheme" "at-exp" "info-domain" "compiler" "errortrace" "eopl" "sirmail" "syntax" "combinator-parser" "string-constants" "html" "slatex" "stepper" "data" "meta" "honu" "launcher" "unstable" "htdp" "lang" "rnrs" "setup" "deinprogramm" "plot" "rackunit" "teachpack" "tests" "xml" "scribblings" "planet" "readline" "parser-tools" "embedded-gui" "drscheme" "defaults" "handin-server" "srfi" "afm" "handin-c
 
 >   li
 >> e!
 >>>    nt" "r6rs" "version" "typed" "texpict" "games" "racket" "tex2page" "racklog" "gui-debugger" "web-server" "r5rs" "redex"))
 >>> Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t test-coverage) (default) #() "#lang racket\n" #f))
 >>>
 >>
 >
 
From: Eli Barzilay <eli@barzilay.org>
To: Ryan Culpepper <ryanc@ccs.neu.edu>
Cc: bugs@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11273: rename-in gets in the way of redefining
 stuff
Date: Fri, 1 Oct 2010 00:44:42 -0400

 A few seconds ago, Ryan Culpepper wrote:
 > On 10/01/2010 12:29 AM, Eli Barzilay wrote:
 > > 15 minutes ago, Ryan Culpepper wrote:
 > >> As I understand it, module-level definitions are allowed to shadow
 > >> bindings from the language but not bindings from requires. In the first
 > >> case, + is bound by the language, so you can shadow it. In the second,
 > >> it is (re)bound by the require, so you can't.
 > >
 > > Bleh.  (Easy to trip over with old code, given that in mzscheme
 > > renaming was the idiom for only-in.)
 > >
 > > I'll update the docs for `rename-in' to make that point explicit
 > > (maybe also mention that `only-in' can also rename).
 > 
 > Yes, I remember being initially confused by rename-in. One way to 
 > summarize it, I think, is
 > 
 > (require (rename-in M [x x*] ...))
 > =
 > (require (except-in M x ...)
 >           (only-in M [x x*] ...))
 
 Intead of formulas, I'm thinking of some warning, so it needs to be
 readable-at-a-glance.  Something like:
 
   Note that other identifiers are still required.  If you need to
   rename some identifiers and not require others, use the renaming
   form of `only-in'.
 
 Does this look readable enough?
 
 (I considered also an example, but that will probably be too verbose
 and obscurify it.)
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!
From: Robby Findler <robby@eecs.northwestern.edu>
To: Eli Barzilay <eli@barzilay.org>
Cc: Ryan Culpepper <ryanc@ccs.neu.edu>, bugs@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11273: rename-in gets in the way of redefining stuff
Date: Fri, 1 Oct 2010 06:39:21 -0500

 That looks great to me. An example would be great, IMO.
 
 Robby
 
 On Thu, Sep 30, 2010 at 11:44 PM, Eli Barzilay <eli@barzilay.org> wrote:
 > A few seconds ago, Ryan Culpepper wrote:
 >> On 10/01/2010 12:29 AM, Eli Barzilay wrote:
 >> > 15 minutes ago, Ryan Culpepper wrote:
 >> >> As I understand it, module-level definitions are allowed to shadow
 >> >> bindings from the language but not bindings from requires. In the fir=
 st
 >> >> case, + is bound by the language, so you can shadow it. In the second=
 ,
 >> >> it is (re)bound by the require, so you can't.
 >> >
 >> > Bleh. =C2=A0(Easy to trip over with old code, given that in mzscheme
 >> > renaming was the idiom for only-in.)
 >> >
 >> > I'll update the docs for `rename-in' to make that point explicit
 >> > (maybe also mention that `only-in' can also rename).
 >>
 >> Yes, I remember being initially confused by rename-in. One way to
 >> summarize it, I think, is
 >>
 >> (require (rename-in M [x x*] ...))
 >> =3D
 >> (require (except-in M x ...)
 >> =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 (only-in M [x x*] ...))
 >
 > Intead of formulas, I'm thinking of some warning, so it needs to be
 > readable-at-a-glance. =C2=A0Something like:
 >
 > =C2=A0Note that other identifiers are still required. =C2=A0If you need t=
 o
 > =C2=A0rename some identifiers and not require others, use the renaming
 > =C2=A0form of `only-in'.
 >
 > Does this look readable enough?
 >
 > (I considered also an example, but that will probably be too verbose
 > and obscurify it.)
 >
 > --
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0((lambda (x) (x x)) (lambda (x) (x x)))=
  =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Eli Barzilay:
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0http=
 ://barzilay.org/ =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =
 =C2=A0 Maze is Life!
 >

