From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Fri Jun 24 17:20:54 2011
Received: from mail-vw0-f44.google.com (mail-vw0-f44.google.com [209.85.212.44])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id p5OLKqeP018365
	for <bugs@bugs.plt-scheme.org>; Fri, 24 Jun 2011 17:20:52 -0400
Message-Id: <201106242120.p5OLKlFN018360@champlain.ccs.neu.edu>
Date: Fri, 24 Jun 2011 17:20:47 -0400
From: mimmottos@gmail.com
To: bugs@racket-lang.org
Subject: Module-level define overrides a standard identifier

>Number:         12002
>Category:       mzscheme
>Synopsis:       Module-level define overrides a standard identifier
>Class:          doc-bug
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Fri Jun 24 17:24:01 -0400 2011
>Closed-Date:    Sun Nov 27 13:29:27 -0500 2011
>Last-Modified:  Sun Nov 27 13:29:27 -0500 2011
>Originator:     Jussi Salmela
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.1.1.6--2011-06-24(a3c21be/a)
>Environment:
windows "Windows NT 6.1 (Build 7601) Service Pack 1" (win32\i386\3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 164162280

Collections:
("C:\\Users\\JussiVaan\\AppData\\Roaming\\Racket\\5.1.1.6\\collects"
 (non-existent-path))
("C:\\Program Files (x86)\\Racket-5.1.1.6\\collects"
 ("2htdp" "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "data" "datalog" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "help" "hierlist" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "picturing-programs" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "redex" "repo-time-stamp" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tex2page" "texpict" "trace" "typed" "typed-scheme" "unstable" "version" "web-server" "wxme" "xml"))

Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t))
>Description:
It seems to me that it is possible to override at least the procedure cons of the racket module.
>How-To-Repeat:
Determine language from source in effect. The code:

#lang racket

(define cons 1)
cons

produces:

1
. . procedure application: expected procedure, given: 1; arguments were: 1 2
>Fix:
>Audit-Trail:
From: Jussi Salmela <mimmottos@gmail.com>
To: bugs@racket-lang.org, bug-notification@racket-lang.org
Cc: 
Subject: Re: [racket-bug] all/12002: Module-level define overrides a standard identifier
Date: Sat, 25 Jun 2011 15:49:04 +0300

 The example code was supposed to be:
 
 #lang racket
 
 (define cons 1)
 cons
 (cons 1 2)
 
 
 
 On Sat, Jun 25, 2011 at 12:24 AM,  <bugs@racket-lang.org> wrote:
 > Thank you very much for your problem report.
 > It has the internal identification `all/12002'.
 > You can check on the status of your problem report at
 >  http://bugs.racket-lang.org/query/?cmd=view&pr=12002
 >
 > If you wish to provide further information regarding this problem
 > you can do so as a reply to this message.  (But please make sure
 > that your mailer replies to both "bugs" and "bug-notification".)
 >
 >
 
From: Carl Eastlund <cce@plt-scheme.org>
To: Jussi Salmela <mimmottos@gmail.com>
Cc: bugs@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12002: Module-level define overrides a standard identifier
Date: Sat, 25 Jun 2011 09:14:39 -0400

 Jussi,
 
 Thanks for the report.  However, this is not a bug.  Racket has no
 "reserved words"; any name can be shadowed (rebound) in a new scope.
 The body of a module counts as a new scope, so it can rebind names
 from the module's language.  This does not change the cons in the
 racket language, however; it only changes what the name "cons" refers
 to locally.  Existing references to racket's cons are not affected.
 
 If you want top-level rebinding of racket names to be flagged as
 errors, add (require racket) to your module.  This will bind all the
 racket names inside your module, and no name can be bound twice in the
 same scope.  However, you will still be able to rebind these names in
 new scopes created by let, lambda, and other such forms.
 
 Carl Eastlund
 
 On Sat, Jun 25, 2011 at 8:49 AM, Jussi Salmela <mimmottos@gmail.com> wrote:
 > The example code was supposed to be:
 >
 > #lang racket
 >
 > (define cons 1)
 > cons
 > (cons 1 2)
 >
 >
 >
 > On Sat, Jun 25, 2011 at 12:24 AM,  <bugs@racket-lang.org> wrote:
 >> Thank you very much for your problem report.
 >> It has the internal identification `all/12002'.
 >> You can check on the status of your problem report at
 >>  http://bugs.racket-lang.org/query/?cmd=view&pr=12002
 >>
 >> If you wish to provide further information regarding this problem
 >> you can do so as a reply to this message.  (But please make sure
 >> that your mailer replies to both "bugs" and "bug-notification".)
 

Class changed from "sw-bug" to "not-a-bug" by cce at Sat, 25 Jun 2011 09:16:57 -0400
Reason>>> This is the intended behavior of module scope.

Responsible changed from "nobody" to "cce" by cce at Sat, 25 Jun 2011 09:16:57 -0400
Reason>>> I declared this not a bug.

State changed from "open" to "closed" by cce at Sat, 25 Jun 2011 09:16:57 -0400
Reason>>> This is not a bug.  See associated email.

From: Jussi Salmela <mimmottos@gmail.com>
To: Carl Eastlund <cce@plt-scheme.org>
Cc: bugs@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12002: Module-level define overrides a standard identifier
Date: Sat, 25 Jun 2011 16:33:29 +0300

 English is not my native language but I wonder if the paragraph in
 http://docs.racket-lang.org/guide/binding.html:
 
 A module-level define can bind only identifiers that are not already
 bound within the module. For example, (define cons 1) is a syntax
 error in a racket module, since cons is provided by racket. A local
 define or other binding forms, however, can give a new local binding
 for an identifier that already has a binding; such a binding shadows
 the existing binding.
 
 is correct because it lead me to try my example and to make the false deduction.
 
 Jussi
 
 
 
 On Sat, Jun 25, 2011 at 4:14 PM, Carl Eastlund <cce@plt-scheme.org> wrote:
 > Jussi,
 >
 > Thanks for the report.  However, this is not a bug.  Racket has no
 > "reserved words"; any name can be shadowed (rebound) in a new scope.
 > The body of a module counts as a new scope, so it can rebind names
 > from the module's language.  This does not change the cons in the
 > racket language, however; it only changes what the name "cons" refers
 > to locally.  Existing references to racket's cons are not affected.
 >
 > If you want top-level rebinding of racket names to be flagged as
 > errors, add (require racket) to your module.  This will bind all the
 > racket names inside your module, and no name can be bound twice in the
 > same scope.  However, you will still be able to rebind these names in
 > new scopes created by let, lambda, and other such forms.
 >
 > Carl Eastlund
 >
 > On Sat, Jun 25, 2011 at 8:49 AM, Jussi Salmela <mimmottos@gmail.com> wrote:
 >> The example code was supposed to be:
 >>
 >> #lang racket
 >>
 >> (define cons 1)
 >> cons
 >> (cons 1 2)
 >>
 >>
 >>
 >> On Sat, Jun 25, 2011 at 12:24 AM,  <bugs@racket-lang.org> wrote:
 >>> Thank you very much for your problem report.
 >>> It has the internal identification `all/12002'.
 >>> You can check on the status of your problem report at
 >>>  http://bugs.racket-lang.org/query/?cmd=view&pr=12002
 >>>
 >>> If you wish to provide further information regarding this problem
 >>> you can do so as a reply to this message.  (But please make sure
 >>> that your mailer replies to both "bugs" and "bug-notification".)
 >
 

Class changed from "not-a-bug" to "doc-bug" by cce at Sat, 25 Jun 2011 09:39:58 -0400
Reason>>> Documentation contradicts observed behavior.

Responsible changed from "cce" to "mflatt" by cce at Sat, 25 Jun 2011 09:39:58 -0400
Reason>>> Matthew, please confirm which is the appropriate behavior.

State changed from "closed" to "open" by cce at Sat, 25 Jun 2011 09:39:58 -0400
Reason>>> Clearly something here is wrong.

From: Carl Eastlund <cce@plt-scheme.org>
To: Jussi Salmela <mimmottos@gmail.com>
Cc: bugs@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12002: Module-level define overrides a standard identifier
Date: Sat, 25 Jun 2011 09:36:51 -0400

 Aha, yes, that paragraph appears to be in error.  I believe shadowing
 language bindings was not always allowed, so perhaps the behavior
 changed and the documentation was not updated.  I will re-open the bug
 report as a documentation error.  Thanks for following up!
 
 Carl Eastlund
 
 On Sat, Jun 25, 2011 at 9:33 AM, Jussi Salmela <mimmottos@gmail.com> wrote:
 > English is not my native language but I wonder if the paragraph in
 > http://docs.racket-lang.org/guide/binding.html:
 >
 > A module-level define can bind only identifiers that are not already
 > bound within the module. For example, (define cons 1) is a syntax
 > error in a racket module, since cons is provided by racket. A local
 > define or other binding forms, however, can give a new local binding
 > for an identifier that already has a binding; such a binding shadows
 > the existing binding.
 >
 > is correct because it lead me to try my example and to make the false deduction.
 >
 > Jussi
 >
 >
 >
 > On Sat, Jun 25, 2011 at 4:14 PM, Carl Eastlund <cce@plt-scheme.org> wrote:
 >> Jussi,
 >>
 >> Thanks for the report.  However, this is not a bug.  Racket has no
 >> "reserved words"; any name can be shadowed (rebound) in a new scope.
 >> The body of a module counts as a new scope, so it can rebind names
 >> from the module's language.  This does not change the cons in the
 >> racket language, however; it only changes what the name "cons" refers
 >> to locally.  Existing references to racket's cons are not affected.
 >>
 >> If you want top-level rebinding of racket names to be flagged as
 >> errors, add (require racket) to your module.  This will bind all the
 >> racket names inside your module, and no name can be bound twice in the
 >> same scope.  However, you will still be able to rebind these names in
 >> new scopes created by let, lambda, and other such forms.
 >>
 >> Carl Eastlund
 >>
 >> On Sat, Jun 25, 2011 at 8:49 AM, Jussi Salmela <mimmottos@gmail.com> wrote:
 >>> The example code was supposed to be:
 >>>
 >>> #lang racket
 >>>
 >>> (define cons 1)
 >>> cons
 >>> (cons 1 2)
 >>>
 >>>
 >>>
 >>> On Sat, Jun 25, 2011 at 12:24 AM,  <bugs@racket-lang.org> wrote:
 >>>> Thank you very much for your problem report.
 >>>> It has the internal identification `all/12002'.
 >>>> You can check on the status of your problem report at
 >>>>  http://bugs.racket-lang.org/query/?cmd=view&pr=12002
 >>>>
 >>>> If you wish to provide further information regarding this problem
 >>>> you can do so as a reply to this message.  (But please make sure
 >>>> that your mailer replies to both "bugs" and "bug-notification".)
 

State changed from "open" to "closed" by mflatt at Sun, 27 Nov 2011 13:29:27 -0500
Reason>>> docs fixed (though, in checking, I see a new typo, which I'll also fix)

