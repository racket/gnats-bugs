From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Wed Mar 18 12:18:26 2009
Received: from qw-out-2122.google.com (qw-out-2122.google.com [74.125.92.25])
	by champlain.ccs.neu.edu (8.14.2/8.14.2) with ESMTP id n2IGIGig020840
	for <bugs@bugs.plt-scheme.org>; Wed, 18 Mar 2009 12:18:16 -0400
Message-Id: <200903181618.n2IGIDbq020832@champlain.ccs.neu.edu>
Date: Wed, 18 Mar 2009 12:18:13 -0400
From: offby1@blarg.net
To: bugs@plt-scheme.org
Subject: Sandboxed evaluation runs too long, and uses too much memory

>Number:         10137
>Category:       mzscheme
>Synopsis:       Sandboxed evaluation runs too long, and uses too much memory
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Wed Mar 18 12:20:01 -0400 2009
>Closed-Date:    Thu Mar 19 08:37:52 -0400 2009
>Last-Modified:  Thu Mar 19 08:37:52 -0400 2009
>Originator:     Eric Hanchrow
>Organization:
plt
>Submitter-Id:   unknown
>Release:        4.1.4-svn20jan2009
>Environment:
unix "Linux debian 2.6.27-11-generic #1 SMP Thu Jan 29 19:24:39 UTC 2009 i686 GNU/Linux" (i386-linux/3m) (get-display-depth) = 24
Human Language: english
(current-memory-use) 60234256

Collections:
(("/home/erich/.plt-scheme/4.1.4/collects" non-existent-path) ("/usr/local/stow/plt-v4.1.4/lib/plt/collects" "scribblings" "mred" "test-box-recovery" "guibuilder" "graphics" "waterworld" "stepper" "r5rs" "2htdp" "file" "test-engine" "framework" "rnrs" "version" "handin-server" "sgl" "eopl" "web-server" "slatex" "wxme" "frtime" "profj" "html" "tests" "sirmail" "net" "games" "parser-tools" "macro-debugger" "teachpack" "afm" "algol60" "scribble" "mzcom" "dynext" "embedded-gui" "planet" "profjWizard" "plot" "preprocessor" "mzlib" "typed" "tex2page" "typed-scheme" "handin-client" "swindle" "trace" "readline" "setup" "defaults" "errortrace" "syntax" "info-domain" "mysterx" "texpict" "xml" "mzscheme" "lang" "s-exp" "srfi" "repos-time-stamp" "htdch" "syntax-color" "mrlib" "icons" "scheme" "string-constants" "combinator-parser" "lazy" "hierlist" "browser" "make" "compiler" "openssl" "config" "ffi" "help" "launcher" "drscheme" "honu" "r6rs" "gui-debugger" "htdp" "redex" "srpersist" "s!
 lideshow"))
Computer Language: (("Teaching Languages" "How to Design Programs" "Beginning Student") (#(#t constructor repeating-decimal #f #t none) #f ((lib "convert.ss" "teachpack" "htdp"))))
>Description:
Just run the code below, and note that it runs for way more than three seconds (in fact, I've never seen it terminate on its own), and perhaps watch its memory usage, too.
>How-To-Repeat:
#! /bin/sh
#| Hey Emacs, this is -*-scheme-*- code!
exec  mzscheme -l errortrace --require $0 --main -- ${1+"$@"}
|#

#lang scheme

(require scheme/sandbox)

(define sb
  (parameterize ((sandbox-output       'string)
                 (sandbox-error-output 'string)
                 (sandbox-eval-limits '(3 20)))
                (call-with-limits 3 #f
                                  (lambda ()
                                    (make-evaluator '(begin (require scheme)))))))
(sb "(expt 10000000000000000000 1000000000000000000)")
>Fix:
>Audit-Trail:
State changed from "open" to "analyzed" by mflatt at Wed, 18 Mar 2009 12:53:19 -0400
Reason>>> The problem is that the compiler is trying to
fold the `expt' call to a constant. And while it
does that, it mangles exception handling and thread
termination so that the timeout doesn't work.


State changed from "analyzed" to "closed" by mflatt at Thu, 19 Mar 2009 08:37:52 -0400
Reason>>> Fixed in SVN: thread terminates and breaks are handled
properly during constant folding, temporary memory for
bignum operations is visible for GC accounting (not sure
that matters, but it's nice to get rid of malloc()s), and
`expt' limits its work when called for compile-time constant
folding.

