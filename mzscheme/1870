From nobody@cs.rice.edu  Tue Feb 27 06:42:08 2001
Received: from web.cs.rice.edu (web.cs.rice.edu [128.42.1.163])
	by cs.rice.edu (8.9.0/8.9.0) with ESMTP id GAA13436
	for <plt-gnats@cs.rice.edu>; Tue, 27 Feb 2001 06:42:08 -0600 (CST)
Message-Id: <200102271242.GAA08759@web.cs.rice.edu>
Date: Tue, 27 Feb 2001 06:42:07 -0600 (CST)
From: md284@cam.ac.uk
Reply-To: md284@cam.ac.uk
To: plt-gnats@cs.rice.edu
Subject: process fails if too much command emits too much output 

>Number:         1870
>Category:       mzscheme
>Synopsis:       process fails if too much command emits too much output
>Confidential:   no
>Severity:       serious
>Priority:       high
>Responsible:    mflatt
>State:          closed
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Tue Feb 27 12:45:01 GMT 2001
>Last-Modified:  Mon Mar 19 19:10:51 CST 2001
>Originator:     Mark DePristo
>Organization:
titan
>Release:        103.5
>Environment:
Linux
>Description:
I'm using process and its related functions to read input from protein analysis
commands under linux.  These programs often dump a large amount of text
to standard output which I need to read in and parse.  I'd like to run
the commands in 'WAIT mode, but I've discovered a bug in mzscheme that 
prevents from doing this.  If the output exceeds some small amount, then
process [if 'WAITed], hangs.  My guess is that some buffer is filling up
and since we are waiting for the process to complete, mzscheme and the process
deadlock.

Thanks.
>How-To-Repeat:
Just run process with a command that dumps a lot of text to stdout.  
One method is to call head -n N on a full text file, where N > 50.  


>Fix:

>Audit-Trail:

From: Matthew Flatt <mflatt@cs.utah.edu>
To: md284@cam.ac.uk
Cc: plt-gnats@cs.rice.edu
Subject: Re: all/1870: process fails if too much command emits too much output 
Date: Tue, 27 Feb 2001 08:43:46 -0700 (MST)

 Quoting md284@cam.ac.uk:
 > I'm using process and its related functions to read input from
 > protein analysis commands under linux. These programs often dump a
 > large amount of text to standard output which I need to read in and
 > parse. I'd like to run the commands in 'WAIT mode, but I've
 > discovered a bug in mzscheme that prevents from doing this. If the
 > output exceeds some small amount, then process [if 'WAITed], hangs.
 > My guess is that some buffer is filling up and since we are waiting
 > for the process to complete, mzscheme and the process deadlock.
 
 You're right that a buffer is filling up. But it's a feature, not a
 bug.
 
 The buffer is the one associated with an OS-level pipe. This buffer is
 limited so that commands like
 
   cat file | grep X
 
 for a 500 MB file won't require 500 MB of memory (despite the fact that
 `cat' can generate output much faster than `grep' can consume it).
 
 If you want to use 'wait, you'll need to set up a thread that consumes
 the process's output. If you eventually need that output, you can push
 it into an unlimited MzScheme pipe (i.e., a pipe created by `make-pipe'
 with no limit argument).
 
 Matthew

Responsible-Changed-From-To: steck->mflatt
Responsible-Changed-By: mflatt
Responsible-Changed-When: Mon Mar 19 19:10:46 2001
Responsible-Changed-Why:

State-Changed-From-To: open-closed
State-Changed-By: mflatt
State-Changed-When: Mon Mar 19 19:10:48 2001
State-Changed-Why:
feature

 
>Unformatted:
