From apache@plt-scheme.org Wed Jul  5 21:39:14 2006
Received: from champlain.ccs.neu.edu (champlain.ccs.neu.edu [127.0.0.1])
	by champlain.ccs.neu.edu (8.13.6/8.13.6) with ESMTP id k661dEPV027088
	for <bugs@plt-scheme.org>; Wed, 5 Jul 2006 21:39:14 -0400
Message-Id: <200607060139.k661dE9R027087@champlain.ccs.neu.edu>
Date: Wed, 5 Jul 2006 21:39:14 -0400
From: rrotstein@verizon.net
To: bugs@plt-scheme.org
Subject: possible bug in evaluator

>Number:         8158
>Category:       mzscheme
>Synopsis:       possible bug in evaluator
>Class:          sw-bug
>Responsible:    eli
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Wed Jul 05 21:40:01 -0400 2006
>Closed-Date:    Wed Jul 05 22:34:06 -0400 2006
>Last-Modified:  Wed Jul 05 22:34:06 -0400 2006
>Originator:     Robert Rotstein
>Organization:
plt
>Submitter-Id:   unknown
>Release:        301
>Environment:
windows-2000
>Description:
I DON'T KNOW if this constitutes a bug or not.  But some sample Scheme code, provided for the MIT course 6.001, "Structure and Interpretation of Computer Programs", yields a very different result from the one generated by the MIT Scheme interpreter.  I know that floating-point arithmetic is (as guru Donald Knuth says) inherently inaccurate; but I did not expect such a wildly differeing result.  

Please see http://ocw.mit.edu/OcwWeb/Electrical-Engineering-and-Computer-Science/6-001Spring-2005/Recitations/index.htm

for all the details.
>How-To-Repeat:
(define (square x) (* x x))

(define dx 0.00390625)

(define (deriv f)
 (lambda (x)
 (/ (- (f (+ x dx))
       (f x))
    dx)))

((deriv square) 3) 
6.000009999951316   ;; first derivative; correct

((deriv (deriv square)) 3)  
2.000017929049136   ;; second derivative; correct 

((deriv (deriv (deriv square))) 3)
-3.552713678822705  ;; third derivative - The answer should be 0.0

>Fix:
>Audit-Trail:
From: Eli Barzilay <eli@barzilay.org>
To: rrotstein@verizon.net, bugs@plt-scheme.org
Cc: 
Subject: Re: all/8158: possible bug in evaluator
Date: Wed, 5 Jul 2006 22:02:03 -0400

 On Jul  5, rrotstein@verizon.net wrote:
 > [...]
 > (define (square x) (* x x))
 > (define dx 0.00390625)
 > (define (deriv f)
 >  (lambda (x)
 >  (/ (- (f (+ x dx))
 >        (f x))
 >     dx)))
 > ((deriv (deriv (deriv square))) 3)
 > -3.552713678822705  ;; third derivative - The answer should be 0.0
 
 I have tried the above code with all mzscheme versions from 103 up to
 350 and thte current svn development version.  It always returns 0.0.
 
 But many potentially important details are missing from your bug
 report.  It is much better if you use DrScheme to file the bug report
 which will add some information like -- which version you are using,
 and whether you're using some customized language that can change the
 result.
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                   http://www.barzilay.org/                 Maze is Life!

Responsible changed from "nobody" to "eli" by eli at Wed, 05 Jul 2006 22:34:06 -0400
Reason>>> .

State changed from "open" to "closed" by eli at Wed, 05 Jul 2006 22:34:06 -0400
Reason>>> was re-submitted

