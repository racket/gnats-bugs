From apache@plt-scheme.org Fri May 21 17:50:44 2004
Received: from champlain.ccs.neu.edu (champlain.ccs.neu.edu [127.0.0.1])
	by champlain.ccs.neu.edu (8.12.10/8.12.10) with ESMTP id i4LLoi1W018285
	for <bugs@plt-scheme.org>; Fri, 21 May 2004 17:50:44 -0400
Message-Id: <200405212150.i4LLoi70018283@champlain.ccs.neu.edu>
Date: Fri, 21 May 2004 17:50:44 -0400
From: ethan.aubin@pobox.com
To: bugs@plt-scheme.org
Subject: object-contract mucks with private field access 

>Number:         6874
>Category:       mzscheme
>Synopsis:       object-contract mucks with private field access
>Class:          sw-bug
>Responsible:    robby
>Severity:       non-critical
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Fri May 21 17:55:01 -0400 2004
>Closed-Date:    Tue May 14 21:54:44 -0400 2013
>Last-Modified:  Tue May 14 21:54:44 -0400 2013
>Originator:     Ethan Aubin
>Organization:
plt
>Submitter-Id:   unknown
>Release:        207
>Environment:
windows-xp
>Description:
It seems that object-contract requires all public methods to have 
contracts, otherwise self reference in methods w/o contracts give 
a runtime-error.

The error generated is:

object:name%-ref: expects type <struct:object:name%> as 1st argument, given: #<struct:wrapper-object>; other arguments were: 0
>How-To-Repeat:
(module test mzscheme
  (require (lib "class.ss")
           (lib "contract.ss"))

  (define name%
    (class object% 
      (define name "Foo")

      (define/public print (lambda () (display name)))
      (define/public print-no-contract (lambda () (display name)))
      
      (super-new)
      ))

  (define foo (new name%))

  (provide/contract (foo (object-contract (print (-> void?)))))
  )

(require test)
(send foo print) ;; succeeds
(send foo print-no-contract) ;; runtime error
>Fix:
>Audit-Trail:
Responsible changed from "nobody" to "robby" by robby at Sat, 22 May 2004 15:29:25 -0400
Reason>>> rbf

From: Robby Findler <robby@cs.uchicago.edu>
To: ethan.aubin@pobox.com, bugs@plt-scheme.org
Cc: nobody@plt-scheme.org, eli@plt-scheme.org, matthias@ccs.neu.edu,
        sk@cs.brown.edu, mflatt@cs.utah.edu, laminatedwastrel@brinckerhoff.org,
        ptg@ccs.neu.edu, meunier@ccs.neu.edu, sowens@cs.utah.edu,
        kathyg@cs.utah.edu, awick@cs.utah.edu, goldberg@cs.utah.edu,
        dskippy@ccs.neu.edu
Subject: Re: all/6874: object-contract mucks with private field access 
Date: Sat, 22 May 2004 14:28:57 -0500

 But this is exactly what is supposed to happen! You didn't list that
 method in the contract, so it's not there. 
 
 Robby
From: Ethan Aubin <ethan.aubin@pobox.com>
To: Robby Findler <robby@cs.uchicago.edu>
Cc: bugs@plt-scheme.org, nobody@plt-scheme.org, eli@plt-scheme.org,
        matthias@ccs.neu.edu, sk@cs.brown.edu, mflatt@cs.utah.edu,
        laminatedwastrel@brinckerhoff.org, ptg@ccs.neu.edu,
        meunier@ccs.neu.edu, sowens@cs.utah.edu, kathyg@cs.utah.edu,
        awick@cs.utah.edu, goldberg@cs.utah.edu, dskippy@ccs.neu.edu
Subject: Re: all/6874: object-contract mucks with private field access
Date: Sat, 22 May 2004 17:45:29 -0400

 On Sat, May 22, 2004 at 02:28:57PM -0500, Robby Findler wrote:
 > But this is exactly what is supposed to happen! You didn't list that
 > method in the contract, so it's not there.
 
 Ok, I didn't realize that using object-contract restricted the
 signature of the object (I was expecting the public methods w/o
 contracts to be remain the same).
 
 The error message is confusing, could it say something along the lines
 of 'No such method' instead of:
 
 object:name%-ref: expects type <struct:object:name%> as 1st argument, given: #<struct:wrapper-object>; other arguments were: 0
 
 Also, in DrScheme the blame arrows point to the private field access
 inside the class instead of the method invocation. 
 
 I also saw a post about units on the mailing list today, is there any
 hope for contracts with units? Thanks - EA
From: Ethan Aubin <ethan.aubin@pobox.com>
To: Robby Findler <robby@cs.uchicago.edu>
Cc: bugs@plt-scheme.org, nobody@plt-scheme.org, eli@plt-scheme.org,
        matthias@ccs.neu.edu, sk@cs.brown.edu, mflatt@cs.utah.edu,
        laminatedwastrel@brinckerhoff.org, ptg@ccs.neu.edu,
        meunier@ccs.neu.edu, sowens@cs.utah.edu, kathyg@cs.utah.edu,
        awick@cs.utah.edu, goldberg@cs.utah.edu, dskippy@ccs.neu.edu
Subject: Re: all/6874: object-contract mucks with private field access
Date: Sat, 22 May 2004 18:07:43 -0400

 On Sat, May 22, 2004 at 02:28:57PM -0500, Robby Findler wrote:
 > You didn't list that method in the contract, so it's not there.
 
 Looking at the code again, I don't understand it 'not being there'. I
 can invoke 'print-no-contract' and if I replace the self field access
 with a string constatnt it works w/o a problem.
 
 I could make the private field 'name' a public field and then use
 object-contract to attach a contract, but I would like the private
 field name to remain private.  Any suggestions? Thanks - EA
From: Robby Findler <robby@cs.uchicago.edu>
To: Ethan Aubin <ethan.aubin@pobox.com>
Cc: bugs@plt-scheme.org, nobody@plt-scheme.org, eli@plt-scheme.org,
        matthias@ccs.neu.edu, sk@cs.brown.edu, mflatt@cs.utah.edu,
        laminatedwastrel@brinckerhoff.org, ptg@ccs.neu.edu,
        meunier@ccs.neu.edu, sowens@cs.utah.edu, kathyg@cs.utah.edu,
        awick@cs.utah.edu, goldberg@cs.utah.edu, dskippy@ccs.neu.edu
Subject: Re: all/6874: object-contract mucks with private field access
Date: Sat, 22 May 2004 17:23:27 -0500

 Oh, you're right. I looked too quickly. Indeed, unmentioned methods are
 let thru as is. This is clearly a bug. Sorry about that. I'll look into
 it.
 
 Robby

State changed from "open" to "closed" by asumu at Tue, 14 May 2013 21:54:44 -0400
Reason>>> The bug is gone in recent versions of Racket.

