From apache@plt-scheme.org Sun Jan 30 20:32:36 2005
Received: from champlain.ccs.neu.edu (champlain.ccs.neu.edu [127.0.0.1])
	by champlain.ccs.neu.edu (8.12.10/8.12.10) with ESMTP id j0V1WanN023734
	for <bugs@plt-scheme.org>; Sun, 30 Jan 2005 20:32:36 -0500
Message-Id: <200501310132.j0V1WaT9023732@champlain.ccs.neu.edu>
Date: Sun, 30 Jan 2005 20:32:36 -0500
From: meunier@ccs.neu.edu
To: bugs@plt-scheme.org
Subject: contract.ss problem: "any" not recognized by opt->

>Number:         7219
>Category:       mzscheme
>Synopsis:       contract.ss problem: "any" not recognized by opt->
>Class:          sw-bug
>Responsible:    robby
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Sun Jan 30 20:35:00 -0500 2005
>Last-Modified:  Tue Feb 01 20:00:13 -0500 2005
>Originator:     Philippe Meunier
>Organization:
plt
>Submitter-Id:   unknown
>Release:        299.28-cvs27jan2005
>Environment:
unix "SunOS syrma.ccs.neu.edu 5.9 Generic_117171-05 sun4u sparc SUNW,Sun-Blade-100" (sparc-solaris/3m) (get-display-depth) = 24
Docs Installed:
(#<path:/home/meunier/lang/scheme/299/plt/collects/doc/tex2page> #<path:/home/meunier/lang/scheme/299/plt/collects/doc/t-y-scheme> #<path:/home/meunier/lang/scheme/299/plt/collects/doc/web-server> #<path:/home/meunier/lang/scheme/299/plt/collects/doc/plot> #<path:/home/meunier/lang/scheme/299/plt/collects/doc/swindle> #<path:/home/meunier/lang/scheme/299/plt/collects/doc/insidemz> #<path:/home/meunier/lang/scheme/299/plt/collects/doc/tools> #<path:/home/meunier/lang/scheme/299/plt/collects/doc/foreign> #<path:/home/meunier/lang/scheme/299/plt/collects/doc/mzc> #<path:/home/meunier/lang/scheme/299/plt/collects/doc/framework> #<path:/home/meunier/lang/scheme/299/plt/collects/doc/misclib> #<path:/home/meunier/lang/scheme/299/plt/collects/doc/mzlib> #<path:/home/meunier/lang/scheme/299/plt/collects/doc/srfi> #<path:/home/meunier/lang/scheme/299/plt/collects/doc/drscheme> #<path:/home/meunier/lang/scheme/299/plt/collects/doc/tour> #<path:/home/meunier/lang/scheme/299/plt/collects/doc/profj-advanced> #<path:/home/meunier/lang/scheme/299/plt/collects/doc/profj-intermediate> #<path:/home/meunier/lang/scheme/299/plt/collects/doc/profj-beginner> #<path:/home/meunier/lang/scheme/299/plt/collects/doc/teachpack> #<path:/home/meunier/lang/scheme/299/plt/collects/doc/advanced> #<path:/home/meunier/lang/scheme/299/plt/collects/doc/intermediate-lambda> #<path:/home/meunier/lang/scheme/299/plt/collects/doc/intermediate> #<path:/home/meunier/lang/scheme/299/plt/collects/doc/beginning-abbr> #<path:/home/meunier/lang/scheme/299/plt/collects/doc/beginning> #<path:/home/meunier/lang/scheme/299/plt/collects/doc/mred> #<path:/home/meunier/lang/scheme/299/plt/collects/doc/mzscheme> #<path:/home/meunier/lang/scheme/299/plt/collects/doc/r5rs> #<path:/home/meunier/lang/scheme/299/plt/collects/doc/help>)
Collections:
((#<path:/home/meunier/.plt-scheme/299.28/collects> "non-existent path") (#<path:/home/meunier/lang/scheme/299/plt/collects> (#<path:CVS> #<path:afm> #<path:algol60> #<path:info-domain> #<path:doc> #<path:browser> #<path:mrflow> #<path:compiler> #<path:cvs-time-stamp> #<path:defaults> #<path:drscheme> #<path:dynext> #<path:embedded-gui> #<path:eopl> #<path:errortrace> #<path:ffi> #<path:finish-install> #<path:framework> #<path:frtime> #<path:games> #<path:graphics> #<path:guibuilder> #<path:handin-client> #<path:handin-server> #<path:help> #<path:hierlist> #<path:htdp> #<path:html> #<path:honu-module> #<path:icons> #<path:lang> #<path:launcher> #<path:make> #<path:mrdemo> #<path:mred> #<path:mrlib> #<path:mysterx> #<path:mzcom> #<path:mzlib> #<path:mzscheme> #<path:net> #<path:openssl> #<path:parser-tools> #<path:plot> #<path:preprocessor> #<path:profj> #<path:profjBoxes> #<path:readline> #<path:reduction-semantics> #<path:setup> #<path:sgl> #<path:sirmail> #<path:slatex> #<path:slibinit> #<path:slideshow> #<path:srfi> #<path:srpersist> #<path:ssax> #<path:stepper> #<path:string-constants> #<path:swindle> #<path:syntax> #<path:syntax-color> #<path:test-suite> #<path:tests> #<path:tex2page> #<path:texpict> #<path:trace> #<path:version> #<path:waterworld> #<path:web-server> #<path:xelda> #<path:xml>)))
Human Language: philippe
Teachpack filenames: ()
Computer Language: (("Langages professionnels" "PLT" "Textuel (MzScheme)") #6(#t write mixed-fraction-e #t #f debug))
>Description:
"any" doesn't seem to work when used in conjunction with opt->
I get a "reference to undefined identifier: any" error message.

On a related note, since all the arrow contract stuff are macros,
why not just have "any/c" available to the user, not both "any/c"
and "any", and then let the arrow contract macros check when
"any/c" is in covariant position and if so have the macros
themselves internally change "any/c" into "any"?
>How-To-Repeat:
Execute the following in mzscheme:

(require (lib "contract.ss"))
(define/contract f1 (-> integer? any)           (lambda (x) 1))
(define/contract f2 (opt-> (integer?) () any/c) (lambda (x) 1))
(define/contract f3 (opt-> (integer?) () any)   (lambda (x) 1))

f3 will trigger an error message
>Fix:
I had missed a case in the macro for opt-> (it expands to opt->*). Adding the case fixed the bug.
>Release-Note:
This was a contract violation, and it doesn't seem quite to blame the opt-> macro, but it is the right vicinity.
>Audit-Trail:
From: Robby Findler <robby@cs.uchicago.edu>
To: meunier@ccs.neu.edu, bugs@plt-scheme.org
Cc: gnats@brinckerhoff.org, gregp@ccs.neu.edu, kathyg@cs.utah.edu,
        goldberg@cs.utah.edu, eli@plt-scheme.org, sk@cs.brown.edu,
        nobody@plt-scheme.org, mflatt@cs.utah.edu, jacobm@cs.uchicago.edu,
        dskippy@ccs.neu.edu, matthias@ccs.neu.edu, awick@cs.utah.edu,
        sowens@cs.utah.edu
Subject: Re: all/7219: contract.ss problem: "any" not recognized by opt->
Date: Sun, 30 Jan 2005 19:53:08 -0600

 Please verify you have the latest version.
 
 Thanks,
 Robby
 
 On Jan 30, 2005, at 7:35 PM, meunier@ccs.neu.edu wrote:
 
 > A new problem report is waiting at
 >   http://bugs.plt-scheme.org/query/?cmd=view&pr=7219
 >
 > Reported by Philippe Meunier for release: 299.28-cvs27jan2005
 >
 > *** Description:
 > "any" doesn't seem to work when used in conjunction with opt->
 > I get a "reference to undefined identifier: any" error message.
 >
 > On a related note, since all the arrow contract stuff are macros,
 > why not just have "any/c" available to the user, not both "any/c"
 > and "any", and then let the arrow contract macros check when
 > "any/c" is in covariant position and if so have the macros
 > themselves internally change "any/c" into "any"?
 >
 > *** How to repeat:
 > Execute the following in mzscheme:
 >
 > (require (lib "contract.ss"))
 > (define/contract f1 (-> integer? any)           (lambda (x) 1))
 > (define/contract f2 (opt-> (integer?) () any/c) (lambda (x) 1))
 > (define/contract f3 (opt-> (integer?) () any)   (lambda (x) 1))
 >
 > f3 will trigger an error message
 >
 > *** Environment:
 > unix "SunOS syrma.ccs.neu.edu 5.9 Generic_117171-05 sun4u sparc  
 > SUNW,Sun-Blade-100" (sparc-solaris/3m) (get-display-depth) = 24
 > Docs Installed:
 > (#<path:/home/meunier/lang/scheme/299/plt/collects/doc/tex2page>  
 > #<path:/home/meunier/lang/scheme/299/plt/collects/doc/t-y-scheme>  
 > #<path:/home/meunier/lang/scheme/299/plt/collects/doc/web-server>  
 > #<path:/home/meunier/lang/scheme/299/plt/collects/doc/plot>  
 > #<path:/home/meunier/lang/scheme/299/plt/collects/doc/swindle>  
 > #<path:/home/meunier/lang/scheme/299/plt/collects/doc/insidemz>  
 > #<path:/home/meunier/lang/scheme/299/plt/collects/doc/tools>  
 > #<path:/home/meunier/lang/scheme/299/plt/collects/doc/foreign>  
 > #<path:/home/meunier/lang/scheme/299/plt/collects/doc/mzc>  
 > #<path:/home/meunier/lang/scheme/299/plt/collects/doc/framework>  
 > #<path:/home/meunier/lang/scheme/299/plt/collects/doc/misclib>  
 > #<path:/home/meunier/lang/scheme/299/plt/collects/doc/mzlib>  
 > #<path:/home/meunier/lang/scheme/299/plt/collects/doc/srfi>  
 > #<path:/home/meunier/lang/scheme/299/plt/collects/doc/drscheme>  
 > #<path:/home/meunier/lang/scheme/299/plt/collects/doc/tour>  
 > #<path:/home/meunier/lang/scheme/299/plt/collects!
 >  /doc/profj-advanced>  
 > #<path:/home/meunier/lang/scheme/299/plt/collects/doc/profj- 
 > intermediate>  
 > #<path:/home/meunier/lang/scheme/299/plt/collects/doc/profj-beginner>  
 > #<path:/home/meunier/lang/scheme/299/plt/collects/doc/teachpack>  
 > #<path:/home/meunier/lang/scheme/299/plt/collects/doc/advanced>  
 > #<path:/home/meunier/lang/scheme/299/plt/collects/doc/intermediate- 
 > lambda>  
 > #<path:/home/meunier/lang/scheme/299/plt/collects/doc/intermediate>  
 > #<path:/home/meunier/lang/scheme/299/plt/collects/doc/beginning-abbr>  
 > #<path:/home/meunier/lang/scheme/299/plt/collects/doc/beginning>  
 > #<path:/home/meunier/lang/scheme/299/plt/collects/doc/mred>  
 > #<path:/home/meunier/lang/scheme/299/plt/collects/doc/mzscheme>  
 > #<path:/home/meunier/lang/scheme/299/plt/collects/doc/r5rs>  
 > #<path:/home/meunier/lang/scheme/299/plt/collects/doc/help>)
 > Collections:
 > ((#<path:/home/meunier/.plt-scheme/299.28/collects> "non-existent  
 > path") (#<path:/home/meunier/lang/scheme/299/plt/collects>  
 > (#<path:CVS> #<path:afm> #<path:algol60> #<path:info-domain>  
 > #<path:doc> #<path:browser> #<path:mrflow> #<path:compiler>  
 > #<path:cvs-time-stamp> #<path:defaults> #<path:drscheme>  
 > #<path:dynext> #<path:embedded-gui> #<path:eopl> #<path:errortrace>  
 > #<path:ffi> #<path:finish-install> #<path:framework> #<path:frtime>  
 > #<path:games> #<path:graphics> #<path:guibuilder>  
 > #<path:handin-client> #<path:handin-server> #<path:help>  
 > #<path:hierlist> #<path:htdp> #<path:html> #<path:honu-module>  
 > #<path:icons> #<path:lang> #<path:launcher> #<path:make>  
 > #<path:mrdemo> #<path:mred> #<path:mrlib> #<path:mysterx>  
 > #<path:mzcom> #<path:mzlib> #<path:mzscheme> #<path:net>  
 > #<path:openssl> #<path:parser-tools> #<path:plot> #<path:preprocessor>  
 > #<path:profj> #<path:profjBoxes> #<path:readline>  
 > #<path:reduction-semantics> #<path:setup> #<path:sgl> #<path:sirmail>  
 > #<path:slatex> #<!
 >  path:slibinit> #<path:slideshow> #<path:srfi> #<path:srpersist>  
 > #<path:ssax> #<path:stepper> #<path:string-constants> #<path:swindle>  
 > #<path:syntax> #<path:syntax-color> #<path:test-suite> #<path:tests>  
 > #<path:tex2page> #<path:texpict> #<path:trace> #<path:version>  
 > #<path:waterworld> #<path:web-server> #<path:xelda> #<path:xml>)))
 > Human Language: philippe
 > Teachpack filenames: ()
 > Computer Language: (("Langages professionnels" "PLT" "Textuel  
 > (MzScheme)") #6(#t write mixed-fraction-e #t #f debug))
 >
 >
 
From: Robby Findler <robby@cs.uchicago.edu>
To: meunier@ccs.neu.edu, bugs@plt-scheme.org
Cc: 
Subject: Re: all/7219: contract.ss problem: "any" not recognized by opt->
Date: Sun, 30 Jan 2005 20:06:06 -0600

 (sorry, missed this the first time)
 
 On Jan 30, 2005, at 7:35 PM, meunier@ccs.neu.edu wrote:
 
 > On a related note, since all the arrow contract stuff are macros,
 > why not just have "any/c" available to the user, not both "any/c"
 > and "any", and then let the arrow contract macros check when
 > "any/c" is in covariant position and if so have the macros
 > themselves internally change "any/c" into "any"?
 
 Altho they are macros, they evaluate their arguments like functions do. 
 So, I thought it strange that these two:
 
    (-> any/c any/c)
 
    (let ([x any/c]) (-> any/c x))
 
 would be different. (altho the let expression isn't a real example, I 
 imagine it would get confusing if people put -> into the body of a 
 function).
 
 Robby
 
From: Philippe Meunier <meunier@ccs.neu.edu>
To: Robby Findler <robby@cs.uchicago.edu>
Cc: meunier@ccs.neu.edu, bugs@plt-scheme.org, gnats@brinckerhoff.org,
        gregp@ccs.neu.edu, kathyg@cs.utah.edu, goldberg@cs.utah.edu,
        eli@plt-scheme.org, sk@cs.brown.edu, nobody@plt-scheme.org,
        mflatt@cs.utah.edu, jacobm@cs.uchicago.edu, dskippy@ccs.neu.edu,
        matthias@ccs.neu.edu, awick@cs.utah.edu, sowens@cs.utah.edu
Subject: Re: all/7219: contract.ss problem: "any" not recognized by opt->
Date: Mon, 31 Jan 2005 15:19:01 -0500

 Robby Findler wrote:
 >Please verify you have the latest version.
 
 You're right, the latest version fixes that.  Sorry.
 
 Philippe
 

Responsible changed from "nobody" to "robby" by eli at Tue, 01 Feb 2005 19:56:52 -0500
Reason>>> contracts

State changed from "open" to "closed" by robby at Tue, 01 Feb 2005 20:00:13 -0500
Reason>>> fixed and released

