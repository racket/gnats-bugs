From apache@plt-scheme.org Sun Apr 17 09:52:34 2005
Received: from champlain.ccs.neu.edu (champlain.ccs.neu.edu [127.0.0.1])
	by champlain.ccs.neu.edu (8.12.10/8.12.10) with ESMTP id j3HDqVnN030634
	for <bugs@plt-scheme.org>; Sun, 17 Apr 2005 09:52:31 -0400
Message-Id: <200504171352.j3HDqVkV030632@champlain.ccs.neu.edu>
Date: Sun, 17 Apr 2005 09:52:31 -0400
From: jos.koot@tiscali.nl
To: bugs@plt-scheme.org
Subject: how to load a library into a namespace?

>Number:         7338
>Category:       mzscheme
>Synopsis:       how to load a library into a namespace?
>Class:          support
>Responsible:    mflatt
>Severity:       non-critical
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Sun Apr 17 09:55:00 -0400 2005
>Last-Modified:  Sun Apr 17 22:20:33 -0400 2005
>Originator:     Jacob Koot
>Organization:
plt
>Submitter-Id:   unknown
>Release:        299.100
>Environment:
windows "Windows NT 5.1 (Build 2600) Service Pack 2" (win32\i386) (get-display-depth) = 16
Docs Installed:
(#<path:C:\Program Files\PLT\collects\doc\web-server> #<path:C:\Program Files\PLT\collects\doc\tour> #<path:C:\Program Files\PLT\collects\doc\tools> #<path:C:\Program Files\PLT\collects\doc\tex2page> #<path:C:\Program Files\PLT\collects\doc\teachpack> #<path:C:\Program Files\PLT\collects\doc\t-y-scheme> #<path:C:\Program Files\PLT\collects\doc\swindle> #<path:C:\Program Files\PLT\collects\doc\srfi> #<path:C:\Program Files\PLT\collects\doc\r5rs> #<path:C:\Program Files\PLT\collects\doc\profj-intermediate> #<path:C:\Program Files\PLT\collects\doc\profj-beginner> #<path:C:\Program Files\PLT\collects\doc\profj-advanced> #<path:C:\Program Files\PLT\collects\doc\plot> #<path:C:\Program Files\PLT\collects\doc\mzscheme> #<path:C:\Program Files\PLT\collects\doc\mzlib> #<path:C:\Program Files\PLT\collects\doc\mzc> #<path:C:\Program Files\PLT\collects\doc\mrlib> #<path:C:\Program Files\PLT\collects\doc\mred> #<path:C:\Program Files\PLT\collects\doc\misclib> #<path:C:\Program Files\PLT\collects\doc\intermediate-lambda> #<path:C:\Program Files\PLT\collects\doc\intermediate> #<path:C:\Program Files\PLT\collects\doc\insidemz> #<path:C:\Program Files\PLT\collects\doc\help> #<path:C:\Program Files\PLT\collects\doc\framework> #<path:C:\Program Files\PLT\collects\doc\foreign> #<path:C:\Program Files\PLT\collects\doc\drscheme> #<path:C:\Program Files\PLT\collects\doc\beginning-abbr> #<path:C:\Program Files\PLT\collects\doc\beginning> #<path:C:\Program Files\PLT\collects\doc\advanced>)
Collections:
((#<path:C:\Documents and Settings\HP_Eigenaar\Application Data\PLT Scheme\299.100\collects> "non-existent path") (#<path:C:\Program Files\PLT\collects> (#<path:afm> #<path:algol60> #<path:browser> #<path:compiler> #<path:defaults> #<path:doc> #<path:drscheme> #<path:dynext> #<path:embedded-gui> #<path:eopl> #<path:errortrace> #<path:ffi> #<path:framework> #<path:frtime> #<path:games> #<path:graphics> #<path:help> #<path:hierlist> #<path:htdch> #<path:htdp> #<path:html> #<path:icons> #<path:info-domain> #<path:lang> #<path:launcher> #<path:make> #<path:mred> #<path:mrlib> #<path:mysterx> #<path:mzcom> #<path:mzlib> #<path:mzscheme> #<path:net> #<path:openssl> #<path:parser-tools> #<path:planet> #<path:plot> #<path:preprocessor> #<path:profj> #<path:profjWizard> #<path:setup> #<path:sgl> #<path:slatex> #<path:slibinit> #<path:slideshow> #<path:srfi> #<path:ssax> #<path:stepper> #<path:string-constants> #<path:swindle> #<path:syntax> #<path:syntax-color> #<path:test-suite> #<path:tex2page> #<path:texpict> #<path:trace> #<path:version> #<path:web-server> #<path:xml>)))
Human Language: english
Teachpack filenames: ()
Computer Language: (("Professional Languages" "PLT" "Pretty Big (includes MrEd and Advanced)") #6(#f write mixed-fraction-e #f #t debug))
>Description:
How can I load a library into a namespace?
The example in the `steps to reproduce' does not what
I want. My intension is as follows:

(define help-proc ...) ...
(define expr-generator ...)
(define some-expr (expr-generator ...))
(define (make-fresh-initial-namespace)
 (let ((namespace (make-namespace 'initial)))
  (load-some-libs-into-namespace) ; how?
  namespace))
(eval some-expr (make-fresh-namespace))

The purpose of this is to evalute some-expr in an
environment that is not corrupted by the definitions used
for the preparation of the expr.
>How-To-Repeat:
(define namespace (make-namespace 'initial))
; namespace does not contain a binding for symbol `filter'.

(parameterize ((current-namespace namespace))
 (namespace-require '(lib "file.ss")))

(namespace-variable-value
'filter #f (lambda () 'error)
 namespace) ; --> error
>Fix:
>Audit-Trail:
From: Matthew Flatt <mflatt@cs.utah.edu>
To: jos.koot@tiscali.nl, bugs@plt-scheme.org
Cc: 
Subject: Re: all/7338: how to load a library into a namespace?
Date: Sun, 17 Apr 2005 14:53:15 -0700

 At Sun, 17 Apr 2005 09:55:01 -0400, jos.koot@tiscali.nl wrote:
 > (define namespace (make-namespace 'initial))
 > ; namespace does not contain a binding for symbol `filter'.
 > 
 > (parameterize ((current-namespace namespace))
 >  (namespace-require '(lib "file.ss")))
 > 
 > (namespace-variable-value
 > 'filter #f (lambda () 'error)
 >  namespace) ; --> error
 
 The "file.ss" library doesn't provide `filter'. I imagine you meant
 "list.ss", or maybe a different function.
 
 If we change the example to use "list.ss", the problem is the #f second
 argument, which causes `namespace-variable-value' to ignore imports.
 Changing that argument to #t produces a procedure.
 
 Matthew
 

State changed from "open" to "closed" by eli at Sun, 17 Apr 2005 22:20:33 -0400
Reason>>> Looks like this is resolved.

