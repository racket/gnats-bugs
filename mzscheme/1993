From robby@cs.rice.edu  Fri Jul 13 21:02:36 2001
Return-Path: <robby@cs.rice.edu>
Received: from sun.cs.rice.edu (sun.cs.rice.edu [128.42.1.42])
	by cs.rice.edu (Postfix) with ESMTP id 7C9241833
	for <plt-gnats@cs.rice.edu>; Fri, 13 Jul 2001 21:02:36 -0500 (CDT)
Message-Id: <200107140202.VAA15297@sun.cs.rice.edu>
Date: Fri, 13 Jul 2001 21:02:23 -0500 (CDT)
From: <robby@cs.rice.edu>
Reply-To: robby@cs.rice.edu
To: plt-gnats@cs.rice.edu
Subject: beginner lang broken when certin .zo files are compiled
X-Send-Pr-Version: 3.101

>Number:         1993
>Category:       mzscheme
>Synopsis:       beginner lang broken when certin .zo files are compiled
>Confidential:   no
>Severity:       critical
>Priority:       medium
>Responsible:    mflatt
>State:          closed
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Sat Jul 14 02:15:01 GMT 2001
>Last-Modified:  Tue Aug 21 16:56:36 CDT 2001
>Originator:     Robert Bruce Findler
>Organization:
titan
>Release:        unknown
>Environment:
linux ppc
>Description:

>How-To-Repeat:

;; First,
;;
;;   - compile docprovide.ss in the syntax collection
;;   - compile some subset of the mzlib collection (all of them works, but
;;     no singleton works (I wasn't able to find the smallet subset that
;;     works, but not for lack of looking)
;;
;; Then, evalate the following code:

(define module-spec '(lib "beginner.ss" "lang"))

(dynamic-require module-spec #f)
(let ([orig-namespace (current-namespace)]
      [lang-name ((current-module-name-resolver) module-spec #f #f)])
  (parameterize ([current-eventspace (make-eventspace)])
    (queue-callback
     (lambda ()
       (current-namespace (make-namespace 'empty))
       (printf "before~n")
       (namespace-attach-module orig-namespace lang-name)
       (printf "after~n")
       (namespace-require module-spec)))))

;; the `before' prints out, but the after never does.

>Fix:
	
>Audit-Trail:

From: Matthew Flatt <mflatt@cs.utah.edu>
To: robby@cs.rice.edu
Cc: plt-gnats@cs.rice.edu
Subject: Re: all/1993: beginner lang broken when certin .zo files are compiled
Date: Sat, 14 Jul 2001 04:26:32 -0700 (PDT)

 I'm not able to reproduce the bug.
 
 If I run the below code by putting it in a file "a.ss" and then running
 
   mred -r a.ss
 
 then I do see "before" without "after", but that's just a result of
 thread scheduling. (The before--after printing happens in a thread,
 while the thread for the main eventspace has run out of things to do.
 Since no windows are open, the main thread exits MrEd.)
 
 If I load the file with -f or within the MrEd repl, I see "before" and
 "after" every time.
 
 I compiled all .zo files, which is supposed to be a problem case,
 right? Am I not loading the code in the right way? Any other hints?
 
 Thanks,
 Matthew
 
 > >How-To-Repeat:
 > 
 > ;; First,
 > ;;
 > ;;   - compile docprovide.ss in the syntax collection
 > ;;   - compile some subset of the mzlib collection (all of them works, but
 > ;;     no singleton works (I wasn't able to find the smallet subset that
 > ;;     works, but not for lack of looking)
 > ;;
 > ;; Then, evalate the following code:
 > 
 > (define module-spec '(lib "beginner.ss" "lang"))
 > 
 > (dynamic-require module-spec #f)
 > (let ([orig-namespace (current-namespace)]
 >       [lang-name ((current-module-name-resolver) module-spec #f #f)])
 >   (parameterize ([current-eventspace (make-eventspace)])
 >     (queue-callback
 >      (lambda ()
 >        (current-namespace (make-namespace 'empty))
 >        (printf "before~n")
 >        (namespace-attach-module orig-namespace lang-name)
 >        (printf "after~n")
 >        (namespace-require module-spec)))))
 > 
 > ;; the `before' prints out, but the after never does.
 

From: Robert Bruce Findler <robby@cs.rice.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: plt-gnats@cs.rice.edu
Subject: Re: all/1993: beginner lang broken when certin .zo files are
 compiled
Date: Mon, 16 Jul 2001 14:56:16 -0500

 No, I just mis-narrowed it down, I suspect. It didn't occur to me 
 that that was why after didn't print. I will have to try again. FWIW, 
 this is (roughly) the point that drscheme gets stuck as it starts up 
 with the .zos mentioned compiled.
 For sure there is a real problem and I'm pretty sure it is with a 
 compbination of those .zo files.

Responsible-Changed-From-To: steck->mflatt
Responsible-Changed-By: mflatt
Responsible-Changed-When: Tue Aug 21 16:56:33 2001
Responsible-Changed-Why:

State-Changed-From-To: open-closed
State-Changed-By: mflatt
State-Changed-When: Tue Aug 21 16:56:35 2001
State-Changed-Why:


>Unformatted:
