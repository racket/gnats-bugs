From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Sat May  5 05:28:07 2007
Received: from ik-out-1112.google.com (ik-out-1112.google.com [66.249.90.182])
	by champlain.ccs.neu.edu (8.13.8/8.13.7) with ESMTP id l459S7Y7007731
	for <bugs@bugs.plt-scheme.org>; Sat, 5 May 2007 05:28:07 -0400
Message-Id: <200705050928.l459S0QR007725@champlain.ccs.neu.edu>
Date: Sat, 5 May 2007 05:28:00 -0400
From: ovdkeaotw@gmail.com
To: bugs@plt-scheme.org
Subject: unicode support bug in hash tables

>Number:         8644
>Category:       mzscheme
>Synopsis:       unicode support bug in hash tables
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       non-critical
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Sat May 05 05:30:01 -0400 2007
>Closed-Date:    Thu May 10 17:13:59 -0400 2007
>Last-Modified:  Thu May 10 17:13:59 -0400 2007
>Originator:     keaotw
>Organization:
plt
>Submitter-Id:   unknown
>Release:        360
>Environment:
windows "Windows NT 5.1 (Build 2600) Service Pack 2" (win32\i386) (get-display-depth) = 32
Docs Installed:
(("C:\\Program Files\\PLT\\doc" "r5rs" "mzscheme" "mred" "help" "tour" "drscheme" "srfi" "mzlib" "misclib" "mrlib" "framework" "foreign" "mzc" "tools" "insidemz" "web-server" "swindle" "plot" "release-notes" "t-y-scheme" "tex2page" "beginning" "beginning-abbr" "intermediate" "intermediate-lambda" "advanced" "teachpack" "teachpack-htdc" "profj-beginner" "profj-intermediate" "profj-advanced") (* "C:\\Documents and Settings\\com\\Application Data\\PLT Scheme\\planet\\300\\360\\cache\\neil\\htmlprag.plt\\1\\3\\doc"))
Human Language: english
(current-memory-use) 103071744

Collections:
(("C:\\Documents and Settings\\com\\Application Data\\PLT Scheme\\360\\collects" non-existent-path) ("C:\\Program Files\\PLT\\collects" "afm" "algol60" "browser" "compiler" "config" "defaults" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "framework" "frtime" "games" "graphics" "help" "hierlist" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "mztake" "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profj" "profjBoxes" "profjWizard" "r5rs" "readline" "setup" "sgl" "slatex" "slibinit" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-suite" "tex2page" "texpict" "trace" "version" "web-server" "xml"))
Teachpack filenames: ()
Computer Language: (("Professional Languages" "PLT" "Textual (MzScheme, includes R5RS)") #6(#f write repeating-decimal-e #f #t debug))
>Description:
Hello.

(I'm Korean, sorry for my poor English.)

When using hash tables, if key is a unicode chracter it does not work properly. hash-table-get always return the same value for two identical ascii characters (or latin-1), but for unicode characters it is not.

I investigated the problem, and found what caused it. It was eq-hash-code and equal-hash-code.

If characters that in integer range 0 <= i <= 255 are provided in eq-hash-code (or equal-hash-code), it always return the same value. But if characters that beyond that range are provided, it returns randomly.

Besides, when eq? is provided two identical unicode characters it returns #f. I know that when comparing characters using eq? its return value is unspecified in R5RS, but when eq? is provided two ascii characters it returns #t in DrScheme. I think it is inconsistent.
>How-To-Repeat:
(define table (make-hash-table))

[ cases for ascii omitted ]

(hash-table-put! table (integer->char 255) 'latin-1)
(hash-table-get table (integer->char 255)) => 'latin-1

(hash-table-put! table (integer->char 256) 'utf-8)
(hash-table-get table (integer->char 256)) => ERROR or 'utf-8

[ If table is defined to be (make-hash-table 'equal), results are the same ]

(eq-hash-code (integer->char 255)) => some fixed value
(eq-hash-code (integer->char 256)) => random value

(equal-hash-code (integer->char 255)) => some fixed value
(equal-hash-code (integer->char 256)) => random value

(eq? (integer->char 255) (integer->char 255)) => #t
(eq? (integer->char 256) (integer->char 256)) => #f

[ equal? and char=? work fine.
  (equal? (integer->char 255) (integer->char 255)) => #t
  (equal? (integer->char 256) (integer->char 256)) => #t
  (char=? (integer->char 255) (integer->char 255)) => #t
  (char=? (integer->char 256) (integer->char 256)) => #t ]
>Fix:
>Audit-Trail:
From: Matthew Flatt <mflatt@cs.utah.edu>
To: ovdkeaotw@gmail.com, bugs@plt-scheme.org
Cc: 
Subject: Re: [plt-bug] all/8644: unicode support bug in hash tables
Date: Sun, 6 May 2007 07:29:42 +0800

 At Sat, 5 May 2007 05:30:01 -0400, ovdkeaotw@gmail.com wrote:
 > If characters that in integer range 0 <= i <= 255 are provided in eq-hash-code 
 > (or equal-hash-code), it always return the same value. But if characters that 
 > beyond that range are provided, it returns randomly.
 > 
 > Besides, when eq? is provided two identical unicode characters it returns #f. 
 > I know that when comparing characters using eq? its return value is 
 > unspecified in R5RS, but when eq? is provided two ascii characters it returns 
 > #t in DrScheme. I think it is inconsistent.
 
 Well, as you've noted --- it's not actually a bug, but a design
 decision on whether to support `eq?' on characters.
 
 The fact that `eq?' works on Latin-1 characters is similar to the fact
 that `eq?' works on small integers. I grant that it's inconsistent, but
 it's part of `eq?''s role as a speed hack.
 
 I note that you can create an `equal?'-based hash table with
 `(make-hash-table 'equal)', and that will work with characters. It
 probably would have been better to make `equal?' mode the default for
 hash tables; the `eq?' default is in place for historical reasons.
 
 Matthew
 
From: Matthew Flatt <mflatt@cs.utah.edu>
To: ovdkeaotw@gmail.com, bugs@plt-scheme.org
Cc: 
Subject: Re: [plt-bug] all/8644: unicode support bug in hash tables
Date: Sun, 6 May 2007 07:32:25 +0800

 Sorry! I completely mis-read your bug report.
 
 `equal-hash-code' is indeed broken for characters, `(make-hash-table
 'equal)' doesn't work, and I'll fix it immediately.
 
 Thanks very much for the report,
 Matthew
 

Responsible changed from "nobody" to "mflatt" by eli at Thu, 10 May 2007 11:25:32 -0400
Reason>>> To be closed?


State changed from "open" to "closed" by mflatt at Thu, 10 May 2007 17:13:59 -0400
Reason>>> fixed for version 370

