From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Mon Mar 26 07:09:23 2012
Received: from mail-vb0-f44.google.com (mail-vb0-f44.google.com [209.85.212.44])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id q2QB9KY9019151
	for <bugs@bugs.plt-scheme.org>; Mon, 26 Mar 2012 07:09:20 -0400
Message-Id: <201203261109.q2QB9HXp019144@champlain.ccs.neu.edu>
Date: Mon, 26 Mar 2012 07:09:17 -0400
From: eli@barzilay.org
To: bugs@racket-lang.org
Subject: Three problems with `define-match-expander' and `match'

>Number:         12650
>Category:       mzscheme
>Synopsis:       Three problems with `define-match-expander' and `match'
>Class:          sw-bug
>Responsible:    samth
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Mon Mar 26 07:12:01 -0400 2012
>Last-Modified:  Mon Mar 26 08:37:47 -0400 2012
>Originator:     Eli Barzilay
>Organization:
plt
>Submitter-Id:   unknown
>Release:        HEAD
>Environment:
Any
>Description:
1. I get an error when I use `make-rename-transformer' as a transformer.  It
   would be nice to allow it.

2. I cannot create a `quasiquote' transformer -- the code below throws a
   "syntax error in pattern".

3. And this is all an attempt to make quasiquote work with hash tables, which
   is useful to have baked into `match' by default.
>How-To-Repeat:
#lang racket/base

(require racket/match
         (for-syntax racket/base)
         (only-in racket/base [quasiquote r:quasiquote]))

(define-match-expander quasiquote
  ;; (make-rename-transformer #'r:quasiquote)
  (syntax-id-rules () [(_ x) (r:quasiquote x)])
  (make-rename-transformer #'r:quasiquote))

(match #hasheq([1 . 2] [3 . 4])
  [(Q ,x) x])
>Fix:
>Audit-Trail:
Responsible changed from "nobody" to "samth" by samth at Mon, 26 Mar 2012 08:37:47 -0400
Reason>>> .

