From nobody@cs.rice.edu  Tue Apr 20 11:31:43 1999
Received: from web.cs.rice.edu (web.cs.rice.edu [128.42.1.163])
	by cs.rice.edu (8.9.0/8.9.0) with ESMTP id LAA05269
	for <plt-gnats@cs.rice.edu>; Tue, 20 Apr 1999 11:31:43 -0500 (CDT)
Message-Id: <199904201631.LAA26962@web.cs.rice.edu>
Date: Tue, 20 Apr 1999 11:31:42 -0500 (CDT)
From: ab@cs.stevens-tech.edu
Reply-To: ab@cs.stevens-tech.edu
To: plt-gnats@cs.rice.edu
Subject: Error when reading macro 

>Number:         976
>Category:       mzscheme
>Synopsis:       Error when reading macro
>Class:          support
>Responsible:    shriram
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Tue Apr 20 12:45:05 -0400 1999
>Last-Modified:  Mon May 05 14:50:37 -0400 2008
>Originator:     Anindya Banerjee
>Organization:
titan
>Submitter-Id:   unknown
>Release:        53
>Environment:
Solaris
>Description:
Below is some code that I have, which when loaded gives the
message: 

/klet.ss: 2.17-2.19: Empty combination is a syntax error


>How-To-Repeat:
(define-syntax klet
  (syntax-rules ()
    ((klet () e ...) (begin e ...))
    ((klet ((l e) (l1 e1) ...) e2 ...)
     (apply (lambda l (klet ((l1 e1) ...) e2 ...)) e))))

;(extend-syntax (klet)
;  ((klet () e ...) (begin e ...))
;  ((klet ((l e) (l1 e1) ...) e2 ...)
;   (apply (lambda l (klet ((l1 e1) ...) e2 ...)) e)))

(define-syntax my-record-case
  (syntax-rules (else)
    ((my-record-case e1 er) #f)
    ((my-record-case e1 er (else exp ...)) (begin exp ...))
    ((my-record-case e1 er (id params exp ...) rest ...)
     (if (eq? 'id e1)
	 (if (= (length 'params) (length er))
	     (apply (lambda params exp ...) er)
	     (error 'id
	       (cformat "expected ~a,\n found ~a" 'params (length er))))
	 (my-record-case e1 er rest ...)))))

(define-syntax record-case
  (syntax-rules ()
    ((record-case e clause ...)
     (let ((tmp e))
       (if (pair? tmp)
	   (let ((e1 (car e))
		 (er (cdr e)))
	     (my-record-case e1 er clause ...))
	   #f)))))

(define-syntax mkrule
  (syntax-rules ()
    ((mkrule () test body)
     (if test (begin body #t) #f))
    ((mkrule ((type (name fields ...) term) rest ...) test body)
     (let ((name term))
       (record-case (unbox name)
	 (type (fields ...)
	       (mkrule (rest ...) test body))
	 (#f x (error 'rule "invalid term ~s" x))
	 (else #f))))))

(define-syntax when
  (syntax-rules ()
    ((when bool body1 body2 ...)
     (if bool (begin body1 body2 ...)))))


(define-syntax unless
  (syntax-rules ()
    ((unless bool body1 body2 ...)
     (if (not bool) (begin body1 body2 ...)))))

>Fix:
>Audit-Trail:
Responsible-Changed-From-To: steck->shriram
Responsible-Changed-By: shriram
Responsible-Changed-When: Fri Jul  9 16:58:09 1999
Responsible-Changed-Why:

State-Changed-From-To: open-closed
State-Changed-By: shriram
State-Changed-When: Fri Jul  9 16:58:16 1999
State-Changed-Why:
Misconfigured options -- attempt to use macros code in Beginner level
(hence the error) and without require-library.   Not a DrScheme bug.

>Unformatted:
