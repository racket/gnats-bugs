From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Thu Jul  9 10:54:40 2009
Received: from mail-vw0-f184.google.com (mail-vw0-f184.google.com [209.85.212.184])
	by champlain.ccs.neu.edu (8.14.2/8.14.2) with ESMTP id n69EsXNh029140
	for <bugs@bugs.plt-scheme.org>; Thu, 9 Jul 2009 10:54:33 -0400
Message-Id: <200907091454.n69EsVxI029133@champlain.ccs.neu.edu>
Date: Thu, 9 Jul 2009 10:54:31 -0400
From: splashcymbal@gmail.com
To: bugs@plt-scheme.org
Subject: angle returns wrong value

>Number:         10324
>Category:       mzscheme
>Synopsis:       angle returns wrong value
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       non-critical
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Thu Jul 09 10:56:01 -0400 2009
>Closed-Date:    Fri Mar 01 17:50:16 -0500 2013
>Last-Modified:  Fri Mar 01 17:50:16 -0500 2013
>Originator:     splash cymbal
>Organization:
plt
>Submitter-Id:   unknown
>Release:        4.2
>Environment:
>Description:
(angle +inf.0+inf.0i) returns +nan.0 on windows version.
my build version on linux is fine.
>How-To-Repeat:
(angle +inf.0+inf.0i)
>Fix:
>Audit-Trail:
From: Danny Yoo <dyoo@hashcollision.org>
To: splashcymbal@gmail.com, bugs@racket-lang.org, mflatt@racket-lang.org
Cc: 
Subject: Re: mzscheme/10324: angle returns wrong value
Date: Thu, 28 Feb 2013 15:19:40 -0700

 Following up.  According to Racket's documentation
 http://docs.racket-lang.org/reference/numbers.html:
 
 "Calculations with infinites produce results consistent with IEEE
 double- or single-precision floating point where IEEE specifies the
 result; in cases where IEEE provides no specification, such as (angle
 +inf.0+inf.0i), the result corresponds to the limit approaching
 infinity, or +nan.0 or +nan.f if no such limit exists."
 
 I'm trying it out now on Racket 5.3.3, and the output appears to be (/
 pi 4) on Windows and Mac OS X.
 
 Would it be appropriate to add the test:
 
     (test (/ pi 4) angle +inf.0+inf.0i)
 
 to collects/tests/racket/numbers.rktl, or is this something that won't
 be guaranteed in Racket?
From: Danny Yoo <dyoo@hashcollision.org>
To: splashcymbal@gmail.com, bugs@racket-lang.org, mflatt@racket-lang.org
Cc: 
Subject: Re: mzscheme/10324: angle returns wrong value
Date: Thu, 28 Feb 2013 15:39:30 -0700

 >
 > Would it be appropriate to add the test:
 >
 >     (test (/ pi 4) angle +inf.0+inf.0i)
 >
 > to collects/tests/racket/numbers.rktl, or is this something that won't
 > be guaranteed in Racket?
 
 
 Looking closer at this :I think it should be an explicit test, given
 that the implementation of angle uses the atan2 function, whose
 documented behavior appears to agree atan2(+inf, +inf) should be pi/4.
 
 
 http://pubs.opengroup.org/onlinepubs/009695399/functions/atan2.html
 
 https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Math/atan2
 
 http://developer.apple.com/library/ios/#documentation/system/conceptual/manpages_iphoneos/man3/atan2.3.html
From: Matthew Flatt <mflatt@cs.utah.edu>
To: Danny Yoo <dyoo@hashcollision.org>
Cc: splashcymbal@gmail.com, bugs@racket-lang.org
Subject: Re: mzscheme/10324: angle returns wrong value
Date: Thu, 28 Feb 2013 15:42:15 -0700

 At Thu, 28 Feb 2013 15:39:30 -0700, Danny Yoo wrote:
 > >
 > > Would it be appropriate to add the test:
 > >
 > >     (test (/ pi 4) angle +inf.0+inf.0i)
 > >
 > > to collects/tests/racket/numbers.rktl, or is this something that won't
 > > be guaranteed in Racket?
 > 
 > 
 > Looking closer at this :I think it should be an explicit test, given
 > that the implementation of angle uses the atan2 function, whose
 > documented behavior appears to agree atan2(+inf, +inf) should be pi/4.
 
 There is indeed a test (line 2110 of "number.rktl"). I think the
 comment in the docs is wrong, and we've fixed `atan' since I wrote it.
 
From: Danny Yoo <dyoo@hashcollision.org>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: splashcymbal@gmail.com, bugs@racket-lang.org
Subject: Re: mzscheme/10324: angle returns wrong value
Date: Thu, 28 Feb 2013 16:10:35 -0700

 >> Looking closer at this :I think it should be an explicit test, given
 >> that the implementation of angle uses the atan2 function, whose
 >> documented behavior appears to agree atan2(+inf, +inf) should be pi/4.
 >
 > There is indeed a test (line 2110 of "number.rktl"). I think the
 > comment in the docs is wrong, and we've fixed `atan' since I wrote it.
 
 
 Ah, thank you; I missed those!  I'd like to add the following tests
 for angle.  Would these be sufficient to close this issue, or does the
 prose in the docs also need correction?  I'm not exactly sure how to
 fix the docs here.
 
 
 128-110-74-136:racket dyoo$ git diff plt2/master
 diff --git a/collects/tests/racket/number.rktl
 b/collects/tests/racket/number.rktl
 index b604a48..f23e70c 100644
 --- a/collects/tests/racket/number.rktl
 +++ b/collects/tests/racket/number.rktl
 @@ -1569,6 +1569,10 @@
    (test pi angle -3+0.0i))
  (test -inf.0 atan 0+i)
  (test -inf.0 atan 0-i)
 +(test 7/9 rationalize (inexact->exact (angle +inf.0+inf.0i)) 1/100)
 +(test 26/11 rationalize (inexact->exact (angle -inf.0+inf.0i)) 1/100)
 +(test -7/9 rationalize (inexact->exact (angle +inf.0-inf.0i)) 1/100)
 +(test -26/11 rationalize (inexact->exact (angle -inf.0-inf.0i)) 1/100)
 
  (err/rt-test (angle 'a))
  (err/rt-test (angle 0) exn:fail:contract:divide-by-zero?)
From: Matthew Flatt <mflatt@cs.utah.edu>
To: Danny Yoo <dyoo@hashcollision.org>
Cc: splashcymbal@gmail.com, bugs@racket-lang.org
Subject: Re: mzscheme/10324: angle returns wrong value
Date: Thu, 28 Feb 2013 16:12:21 -0700

 At Thu, 28 Feb 2013 16:10:35 -0700, Danny Yoo wrote:
 > I'd like to add the following tests
 > for angle.  Would these be sufficient to close this issue, or does the
 > prose in the docs also need correction?  I'm not exactly sure how to
 > fix the docs here.
 
 The tests looks good. I'll add them and fix the docs.
 
 Thanks!
 
State changed from "open" to "closed" by mflatt@racket-lang.org at Fri, 01 Mar 2013 17:50:16 -0500
Reason>>> A commit by mflatt@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/0acb9b8432
  | doc correction and test additions for `atan'
  | 
  | Closes PR 10324

