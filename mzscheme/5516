From eli@barzilay.org  Tue Jun 18 17:19:09 2002
Received: from localhost (IDENT:root@localhost.localdomain [127.0.0.1])
	by champlain.ccs.neu.edu (8.9.3/8.8.7) with ESMTP id RAA09429
	for <bugs>; Tue, 18 Jun 2002 17:19:08 -0400
Message-Id: <200206182119.RAA09429@champlain.ccs.neu.edu>
Date: Tue, 18 Jun 2002 17:19:08 -0400
From: Eli Barzilay <eli@barzilay.org>
To: bugs@plt-scheme.org
Subject: Inefficient last-pair

>Number:         5516
>Category:       mzscheme
>Synopsis:       Inefficient last-pair
>Confidential:   no
>Severity:       non-critical
>Priority:       low
>Responsible:    mflatt
>State:          closed
>Class:          change-request
>Submitter-Id:   unknown
>Arrival-Date:   Tue Jun 18 17:20:00 EDT 2002
>Closed-Date:    Mon Jul 08 19:27:58 EDT 2002
>Last-Modified:  Mon Jul 08 19:27:58 EDT 2002
>Originator:     Eli Barzilay
>Release:        200
>Organization:
titan
>Environment:
unix "Linux lambda.cs.cornell.edu 2.4.18-4 #1 Thu May 2 18:47:38 EDT 2002 i686 unknown" (i386-linux) (get-display-depth) = 24
Docs Installed:
("drscheme" "framework" "insidemz" "misclib" "mred" "mzc" "mzlib" "mzscheme" "r5rs" "t-y-scheme" "tex2page" "tools" "help" "icons" "teachpack" "advanced" "beginning-abbr" "beginning" "intermediate" "intermediate-lambda")
Collections: 
(("/home/eli/scheme/my-plt" ("pics" "eli")) ("~/plt/collects" ("CVS" "afm" "algol60" "browser" "compiler" "cvs-time-stamp" "defaults" "drjava" "drscheme" "dynext" "eopl" "errortrace" "framework" "games" "graphics" "help" "hierlist" "htdp" "html" "icons" "lang" "launcher" "make" "mred" "mrflow" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "parser-tools" "readline" "setup" "sirmail" "slatex" "slibinit" "srpersist" "stepper" "string-constants" "syntax" "tests" "tex2page" "texpict" "typeset" "version" "waterworld" "web-server" "xml" "doc")))
Human Language: english
>Description:
The current implementation of last pair isn't too efficient (as
expected from primitives...)  The following is almost twice
faster:

(define last-pair
  (polymorphic
   (lambda (l)
     (if (pair? l)
       (let loop ((l l) (x (cdr l)))
         (if (pair? x)
           (loop x (cdr x))
           l))
       (raise-type-error 'last-pair "pair" l)))))

>How-To-Repeat:

>Fix:

>Release-Note:

>Audit-Trail:
Responsible-Changed-From-To: steck->mflatt
Responsible-Changed-By: mflatt
Responsible-Changed-When: Mon Jul  8 19:27:58 2002
Responsible-Changed-Why:
    mzlib
State-Changed-From-To: open->closed
State-Changed-By: mflatt
State-Changed-When: Mon Jul  8 19:27:58 2002
State-Changed-Why:
    Committed and exp-tagged
>Unformatted:

