From ptg@acm.org  Wed May 29 20:34:56 2002
Received: from localhost (localhost.localdomain [127.0.0.1])
	by champlain.ccs.neu.edu (8.9.3/8.8.7) with ESMTP id UAA16798
	for <plt-gnats>; Wed, 29 May 2002 20:34:56 -0400
Message-Id: <200205300034.UAA16798@champlain.ccs.neu.edu>
Date: Wed, 29 May 2002 20:34:56 -0400
From: Paul Graunke <ptg@acm.org>
To: bugs@plt-scheme.org
Subject: custodian-shutdown-all only works once

>Number:         5431
>Category:       mzscheme
>Synopsis:       custodian-shutdown-all only works once
>Confidential:   no
>Severity:       non-critical
>Priority:       low
>Responsible:    mflatt
>State:          closed
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Wed May 29 20:40:01 EDT 2002
>Closed-Date:    Thu Mar 13 10:41:20 EST 2003
>Last-Modified:  Thu Mar 13 10:41:20 EST 2003
>Originator:     Paul Graunke
>Release:        200alpha19
>Organization:
titan
>Environment:
unix "Linux range 2.2.20 #1 Sun Nov 4 15:44:23 EST 2001 i686 unknown" (i386-linux) (get-display-depth) = 24
Docs Installed:
("help" "icons" "teachpack" "beginning" "beginning-abbr" "advanced" "intermediate" "intermediate-lambda" "drscheme" "r5rs" "mzscheme" "mzlib" "mred" "framework" "misclib" "mzc" "insidemz" "tools" "t-y-scheme" "tex2page")
Collections: 
(("/home/ptg/world/ptg/collects" ("cgi-compiler" "file" "spgsql" "cps-jvm" "format" "net-apps" "pj" "schema" "xwin" "tests" "util" "vnc" "pgscsh-0.2" "old-junk")) ("/home/ptg/ptg/collects" ("unix" "server" "format" "thicken" "python")) ("/home/ptg/plt/collects" ("CVS" "afm" "algol60" "doc" "browser" "compiler" "cvs-time-stamp" "defaults" "drjava" "drscheme" "dynext" "eopl" "errortrace" "framework" "games" "graphics" "help" "hierlist" "htdp" "html" "icons" "lang" "launcher" "make" "mred" "mrflow" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "parser-tools" "readline" "setup" "sirmail" "slatex" "slibinit" "srpersist" "stepper" "string-constants" "syntax" "tests" "tex2page" "texpict" "typeset" "version" "waterworld" "web-server" "xml")))
Human Language: english
>Description:
If a custodian is shutdown *before* launching
a thread managed by the custodian (yes, it's
kind of a stupid thing to do), then calling
custodian-shutdown-all again doesn't stop the
new thread.
>How-To-Repeat:
> (define cust (make-custodian))
> (custodian-shutdown-all cust)
> (parameterize ([current-custodian cust])
    (thread (lambda () (let l () (printf "hi~n") (sleep 5) (l)))))
#<thread>
> (custodian-shutdown-all cust)

; See a bunch of hi's
>Fix:

>Release-Note:

>Audit-Trail:
Responsible-Changed-From-To: steck->mflatt
Responsible-Changed-By: mflatt
Responsible-Changed-When: Tue Jun 11 13:39:57 2002
Responsible-Changed-Why:
    mz
State-Changed-From-To: open->closed
State-Changed-By: mflatt
State-Changed-When: Thu Mar 13 10:41:20 2003
State-Changed-Why:
    Apparently got fixed somewhere along the way, though I don't
    know when or why. The example code works and the implementation
    looks ok.
>Unformatted:

