From dskippy@ccs.neu.edu  Tue Nov 19 21:25:35 2002
Received: from localhost (IDENT:root@localhost.localdomain [127.0.0.1])
	by champlain.ccs.neu.edu (8.9.3/8.8.7) with ESMTP id VAA11797
	for <bugs>; Tue, 19 Nov 2002 21:25:35 -0500
Message-Id: <200211200225.VAA11797@champlain.ccs.neu.edu>
Date: Tue, 19 Nov 2002 21:25:35 -0500
From: mike machenry <dskippy@ccs.neu.edu>
To: bugs@plt-scheme.org
Subject: define/contract causing odd problems

>Number:         5967
>Category:       mzscheme
>Synopsis:       define/contract causing odd problems
>Confidential:   no
>Severity:       serious
>Priority:       medium
>Responsible:    robby
>State:          closed
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Tue Nov 19 21:30:00 EST 2002
>Closed-Date:    Wed Nov 20 09:36:28 EST 2002
>Last-Modified:  Wed Nov 20 09:36:28 EST 2002
>Originator:     mike machenry
>Release:        202.5
>Organization:
plt
>Environment:
unix "Linux accessory.cs.uchicago.edu 2.4.17 #2 Thu Feb 14 16:48:33 CST 2002 i586 unknown" (i386-linux)

Docs Installed:
("help")

Collections:
(("~/plt-work/collects" ("lambda-calculus" "mike")) ("/home/dskippy/plt/collects" ("CVS" "afm" "algol60" "doc" "browser" "compiler" "test-suite" "cvs-time-stamp" "defaults" "drscheme" "dynext" "eopl" "errortrace" "framework" "games" "graphics" "help" "hierlist" "htdp" "html" "icons" "lang" "launcher" "make" "mrdemo" "mred" "mrflow" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "parser-tools" "readline" "setup" "sirmail" "slatex" "slibinit" "srpersist" "stepper" "string-constants" "syntax" "tests" "tex2page" "texpict" "typeset" "version" "waterworld" "web-server" "xml")))

Human Language: english
>Description:
This program is failing syntax check. It only fails while inside a module, only when there is a second argument to the offending application, and only when the function being applied is contracted.
>How-To-Repeat:
(module error-only-exists-when-in-module-body mzscheme
  (require
   (lib "contracts.ss"))
  (contracted-func
   "I'm a string constant with side effects"
   "Error doesn't show up if this application has only one argument")
  (define/contract contracted-func
    (string?  string? . -> . string?)
    (lambda (label text)
      label)))

>Fix:
there was a literal missing the syntax-case pattern, ie it was this:

  (syntax-case stx ()
    [(set! _ v) ...])

and it should have been this:

  (syntax-case stx (set!)
    [(set! _ v) ...])
>Release-Note:
In some sense this was a contract violation, but at a different level. What are contracts for macros, anyways?
>Audit-Trail:
Responsible-Changed-From-To: steck->robby
Responsible-Changed-By: robby
Responsible-Changed-When: Wed Nov 20 09:36:28 2002
Responsible-Changed-Why:
    rbf
State-Changed-From-To: open->closed
State-Changed-By: robby
State-Changed-When: Wed Nov 20 09:36:28 2002
State-Changed-Why:
    fixed and released
>Unformatted:

