From sk@cs.brown.edu  Thu Dec 20 23:10:54 2001
Received: from localhost (IDENT:root@localhost.localdomain [127.0.0.1])
	by champlain.ccs.neu.edu (8.9.3/8.8.7) with ESMTP id XAA29375
	for <plt-gnats>; Thu, 20 Dec 2001 23:10:54 -0500
Message-Id: <200112210410.XAA29375@champlain.ccs.neu.edu>
Date: Thu, 20 Dec 2001 23:10:54 -0500
From: Shriram Krishnamurthi <sk@cs.brown.edu>
To: bugs@plt-scheme.org
Subject: better output from SYNTAX-OBJECT->DATUM

>Number:         5118
>Category:       mzscheme
>Synopsis:       better output from SYNTAX-OBJECT->DATUM
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Thu Dec 20 23:20:00 -0500 2001
>Closed-Date:    Fri Aug 20 12:27:49 -0400 2010
>Last-Modified:  Fri Aug 20 12:27:49 -0400 2010
>Originator:     Shriram Krishnamurthi
>Organization:
titan
>Submitter-Id:   unknown
>Release:        200alpha4
>Environment:
windows "Windows NT 5.0 (Build 2195) Service Pack 2" (win32\i386) (get-display-depth) = 32
Docs Installed:
("help" "mzscheme" "mzlib" "r5rs" "icons" "drscheme" "teachpack" "misclib" "beginning" "beginning-abbr" "intermediate" "intermediate-lambda" "advanced" "mred" "t-y-scheme")
Collections: 
(("c:\\progra~1\\plt\\.\\collects\\setup\\..\\..\\collects" ("browser" "compiler" "defaults" "drscheme" "dynext" "errortrace" "framework" "games" "graphics" "help" "hierlist" "htdp" "html" "icons" "lang" "launcher" "make" "mred" "mzlib" "mzscheme" "net" "setup" "string-constants" "syntax" "parser-tools" "xml" "slibinit" "afm" "version" "eopl" "web-server" "doc")))
Human Language: English
>Description:
SYNTAX-OBJECT->DATUM should print the hygiene infomation
as part of an identifier.  Otherwise, the output does
not correspond to the actual macro, making EXPAND useless
for debugging macros.  I believe Chez Scheme prints
identifiers as <name>.1 and so forth.  A simple convention
would be to use <name>.<mark>-<mark>-..., which would be
within the bounds of legal symbol syntax.

The problem is, this interacts poorly with 
SYNTAX-OBJECT->DATUM, which can't afford to do this when
used within a macro (as opposed to during debugging).
Perhaps this means we need a different converter for
debugging purposes.  Perhaps there is one, but I couldn't
find it through the documentation.
>How-To-Repeat:
Consider the expression
  (let ([or-part #t]) (or #f or-part))
This evaluates to #t [rightly].  However,
  (syntax-object->datum (expand '<the expr>))
prints
  (let-values (((or-part) (#%datum . #t)))
    (let-values (((or-part) (#%datum . #f))) (if or-part or-part or-part)))
which, when evaluated directly, yields #f. 

>Fix:
>Release-Note:
>Audit-Trail:
From: Matthew Flatt <mflatt@cs.utah.edu>
To: Shriram Krishnamurthi <sk@cs.brown.edu>
Cc: bugs@plt-scheme.org
Subject: Re: all/5118: better output from SYNTAX-OBJECT->DATUM
Date: Fri, 21 Dec 2001 08:50:49 -0700 (MST)

 Quoting Shriram Krishnamurthi:
 > Perhaps this means we need a different converter for
 > debugging purposes.  Perhaps there is one, but I couldn't
 > find it through the documentation.
 
 You're right to suspect there is one --- always disabled.
 
 I enable it only when I think there's a bug in MzScheme, but I can see
 how it would be useful to others if I clean up its output. (Right now,
 it's a bit too raw, because it shows the implementation's data
 structures.)
 
 Matthew
 
Responsible-Changed-From-To: steck->mflatt
Responsible-Changed-By: mflatt
Responsible-Changed-When: Fri Dec 28 13:46:28 2001
Responsible-Changed-Why:
    mz
State changed from "open" to "closed" by jay at Fri, 20 Aug 2010 12:27:49 -0400
Reason>>> There are much better ways of debugging macros now so there's no need for a 
better so->d

>Unformatted:
