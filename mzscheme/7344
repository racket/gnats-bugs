From chrisheath@iprimus.com.au Tue Apr 19 22:57:15 2005
Received: from localhost ([211.27.168.95])
	by champlain.ccs.neu.edu (8.12.10/8.12.10) with ESMTP id j3K2v9Q0009744
	for <bugs>; Tue, 19 Apr 2005 22:57:12 -0400
Message-Id: <200504200257.j3K2v9Q0009744@champlain.ccs.neu.edu>
Date: Tue, 19 Apr 2005 22:57:09 -0400
From: Scott Heath <chrisheath@iprimus.com.au>
To: bugs@plt-scheme.org
Subject: function return value is strange

>Number:         7344
>Category:       mzscheme
>Synopsis:       function return value is strange
>Class:          support
>Responsible:    eli
>Severity:       non-critical
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Tue Apr 19 23:00:00 -0400 2005
>Last-Modified:  Wed Apr 20 00:48:21 -0400 2005
>Originator:     Scott Heath
>Organization:
titan
>Submitter-Id:   unknown
>Release:        209
>Environment:
windows "Windows NT 5.1 (Build 2600) Service Pack 2" (win32\i386) (get-display-depth) = 32
Docs Installed:
("C:\\Scott Folder\\Programs\\PLT\\collects\\doc\\web-server" "C:\\Scott Folder\\Programs\\PLT\\collects\\doc\\tour" "C:\\Scott Folder\\Programs\\PLT\\collects\\doc\\tools" "C:\\Scott Folder\\Programs\\PLT\\collects\\doc\\tex2page" "C:\\Scott Folder\\Programs\\PLT\\collects\\doc\\teachpack" "C:\\Scott Folder\\Programs\\PLT\\collects\\doc\\t-y-scheme" "C:\\Scott Folder\\Programs\\PLT\\collects\\doc\\swindle" "C:\\Scott Folder\\Programs\\PLT\\collects\\doc\\srfi" "C:\\Scott Folder\\Programs\\PLT\\collects\\doc\\r5rs" "C:\\Scott Folder\\Programs\\PLT\\collects\\doc\\profj-intermediate" "C:\\Scott Folder\\Programs\\PLT\\collects\\doc\\profj-beginner" "C:\\Scott Folder\\Programs\\PLT\\collects\\doc\\profj-advanced" "C:\\Scott Folder\\Programs\\PLT\\collects\\doc\\plot" "C:\\Scott Folder\\Programs\\PLT\\collects\\doc\\mzscheme" "C:\\Scott Folder\\Programs\\PLT\\collects\\doc\\mzlib" "C:\\Scott Folder\\Programs\\PLT\\collects\\doc\\mzc" "C:\\Scott Folder\\Programs\\PLT\\collects\\doc\\mred" "C:\\Scott Folder\\Programs\\PLT\\collects\\doc\\misclib" "C:\\Scott Folder\\Programs\\PLT\\collects\\doc\\intermediate-lambda" "C:\\Scott Folder\\Programs\\PLT\\collects\\doc\\intermediate" "C:\\Scott Folder\\Programs\\PLT\\collects\\doc\\insidemz" "C:\\Scott Folder\\Programs\\PLT\\collects\\doc\\help" "C:\\Scott Folder\\Programs\\PLT\\collects\\doc\\framework" "C:\\Scott Folder\\Programs\\PLT\\collects\\doc\\drscheme" "C:\\Scott Folder\\Programs\\PLT\\collects\\doc\\beginning-abbr" "C:\\Scott Folder\\Programs\\PLT\\collects\\doc\\beginning" "C:\\Scott Folder\\Programs\\PLT\\collects\\doc\\advanced")
Collections: 
(("C:\\Documents and Settings\\Scott Heath\\Application Data\\PLT Scheme\\209\\collects" "non-existent path") ("C:\\Scott Folder\\Programs\\PLT\\collects" ("afm" "algol60" "browser" "compiler" "defaults" "doc" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "framework" "frtime" "games" "graphics" "help" "hierlist" "htdch" "htdp" "html" "icons" "lang" "launcher" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profj" "setup" "sgl" "slatex" "slibinit" "slideshow" "srfi" "ssax" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "test-suite" "tex2page" "texpict" "trace" "version" "web-server" "xml")))
 
Human Language: english
 
Teachpack filenames: ()
Computer Language: (("Professional Languages" "PLT" "Pretty Big (includes MrEd and Advanced)") #6(#f write mixed-fraction-e #f #t debug))
>Description:
A procedure "match" performs an error when it tries to 
recursively add its own value and 1. The procedure is 
said to return a list. The procedure would be incapable of
returning a list as the only return values are 1 and 0.

File is pasted in "Steps to Reproduce" section.
>How-To-Repeat:
(define nil null)

(define match
  (lambda (pattern text) 
      (cond ((or (null? text) (< (length text) (length pattern))) 0)
            ((eq? (car pattern) (car text))
                 (let loop ((i (-(length pattern) 1)))
                     (cond ((= i 0) (+ 1 (match pattern (cdr text))))
                           ((eq? (list-ref pattern i) (list-ref text i)) (loop (- i 1)))
                           (else (match pattern (cdr text))))))
            (else (match pattern (cdr text)))

)))



(define match*
  (lambda (pattern text) 
      (cond ((or (null? text) (< (length text) (length pattern))) 0)
            ((eq? (car pattern) (car text))
                 (let loop ((i (- (length pattern) 1)))
                     (cond ((= i 0) (+ 1 (match pattern (cdr text))))
                           ((eq? (list-ref pattern i) (list-ref text i)) (loop (- i 1)))
                           ((eq? (list-ref pattern i) '*) (loop (- i 1)))
                           (else (match pattern (cdr text))))))
            (else (match pattern (cdr text)))

)))

(define test '(a b c a b a b a b c b c b c a b c))

>Fix:
>Audit-Trail:
From: Eli Barzilay <eli@barzilay.org>
To: Scott Heath <chrisheath@iprimus.com.au>, bugs@plt-scheme.org
Cc: 
Subject: Re: all/7344: function return value is strange
Date: Tue, 19 Apr 2005 23:35:50 -0400

 On Apr 19, Scott Heath wrote:
 > A procedure "match" performs an error when it tries to 
 > recursively add its own value and 1. The procedure is 
 > said to return a list. The procedure would be incapable of
 > returning a list as the only return values are 1 and 0.
 > 
 > File is pasted in "Steps to Reproduce" section.
 
 Where is this program from?
 
 
 > (define nil null)
 > 
 > (define match
 >   (lambda (pattern text) 
 >       (cond ((or (null? text) (< (length text) (length pattern))) 0)
 >             ((eq? (car pattern) (car text))
 >                  (let loop ((i (-(length pattern) 1)))
 >                      (cond ((= i 0) (+ 1 (match pattern (cdr text))))
 >                            ((eq? (list-ref pattern i) (list-ref text i)) (loop (- i 1)))
 >                            (else (match pattern (cdr text))))))
 >             (else (match pattern (cdr text)))
 > 
 > )))
 > 
 > 
 > 
 > (define match*
 >   (lambda (pattern text) 
 >       (cond ((or (null? text) (< (length text) (length pattern))) 0)
 >             ((eq? (car pattern) (car text))
 >                  (let loop ((i (- (length pattern) 1)))
 >                      (cond ((= i 0) (+ 1 (match pattern (cdr text))))
 >                            ((eq? (list-ref pattern i) (list-ref text i)) (loop (- i 1)))
 >                            ((eq? (list-ref pattern i) '*) (loop (- i 1)))
 >                            (else (match pattern (cdr text))))))
 >             (else (match pattern (cdr text)))
 > 
 > )))
 > 
 > (define test '(a b c a b a b a b c b c b c a b c))
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                   http://www.barzilay.org/                 Maze is Life!
From: Eli Barzilay <eli@barzilay.org>
To: "Chris Heath" <chrisheath@iprimus.com.au>
Cc: bugs@plt-scheme.org
Subject: Re: all/7344: function return value is strange
Date: Tue, 19 Apr 2005 23:52:56 -0400

 On Apr 20, Chris Heath wrote:
 > Program is from DrScheme.
 > Sorry about my inablility to use the bug sender.
 
 Where in DrScheme -- it doesn't look like this program is part of PLT
 at all.
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                   http://www.barzilay.org/                 Maze is Life!

Responsible changed from "nobody" to "eli" by eli at Wed, 20 Apr 2005 00:48:21 -0400
Reason>>> replied

State changed from "open" to "closed" by eli at Wed, 20 Apr 2005 00:48:21 -0400
Reason>>> top-level issue

