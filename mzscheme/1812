From robby  Fri Dec 22 21:17:41 2000
Received: (from robby@localhost)
	by cs.rice.edu (8.9.0/8.9.0) id VAA14923;
	Fri, 22 Dec 2000 21:17:41 -0600 (CST)
Message-Id: <200012230317.VAA14923@cs.rice.edu>
Date: Fri, 22 Dec 2000 21:17:41 -0600 (CST)
From: Robert Findler <robby>
Reply-To: robby
To: plt-gnats
Subject: command line parsing in mzscheme "-qr- f.ss" vs "-qr f.ss --"
X-Send-Pr-Version: 3.101

>Number:         1812
>Category:       mzscheme
>Synopsis:       command line parsing in mzscheme "-qr- f.ss" vs "-qr f.ss --"
>Confidential:   no
>Severity:       serious
>Priority:       medium
>Responsible:    mflatt
>State:          closed
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Sat Dec 23 03:30:01 GMT 2000
>Last-Modified:  Thu Jul 12 17:41:29 CDT 2001
>Originator:     Robert Findler
>Organization:
titan
>Release:        unknown
>Environment:
	
>Description:
The command line parsing in mzscheme seems broken. I
would have expected the two commandlines below to
behave the same, but they dont.

Further, I think that the first one is the correct
behavior.
>How-To-Repeat:
1. put (printf "argv: ~s~n" argv) in tmp.ss
2. at the prompt, type: mzscheme -qr- tmp.ss -a
   see argv: #1("-a")
3. at the prompt, type: mzscheme -qr tmp.ss -- -a
   see argv: #2("--" "-a")
>Fix:
	
>Audit-Trail:

From: Matthew Flatt <mflatt@cs.utah.edu>
To: robby@cs.rice.edu
Cc: plt-gnats@cs.rice.edu
Subject: Re: all/1812: command line parsing in mzscheme "-qr- f.ss" vs "-qr f.ss --"
Date: Sun, 24 Dec 2000 09:13:29 -0600 (CST)

 Quoting Robert Findler:
 > 1. put (printf "argv: ~s~n" argv) in tmp.ss
 > 2. at the prompt, type: mzscheme -qr- tmp.ss -a
 >    see argv: #1("-a")
 > 3. at the prompt, type: mzscheme -qr tmp.ss -- -a
 >    see argv: #2("--" "-a")
 
 There's no bug. -r implies --.
 
 Matthew
 
 
 ____________NetZero Free Internet Access and Email_________
 Download Now     http://www.netzero.net/download/index.html
 Request a CDROM  1-800-333-3633
 ___________________________________________________________

From: Robert Bruce Findler <robby@cs.rice.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: plt-gnats@cs.rice.edu
Subject: Re: all/1812: command line parsing in mzscheme "-qr- f.ss" vs
 "-qr f.ss --"
Date: Sun, 24 Dec 2000 10:15:50 -0600

 At 9:13 AM -0600 12/24/00, Matthew Flatt wrote:
 >Quoting Robert Findler:
 >>  1. put (printf "argv: ~s~n" argv) in tmp.ss
 >>  2. at the prompt, type: mzscheme -qr- tmp.ss -a
 >>     see argv: #1("-a")
 >>  3. at the prompt, type: mzscheme -qr tmp.ss -- -a
 >>     see argv: #2("--" "-a")
 >
 >There's no bug. -r implies --.
 
 So there should be a -- in both argvs then, right?
 
 Robby

From: Matthew Flatt <mflatt@cs.utah.edu>
To: Robert Bruce Findler <robby@cs.rice.edu>
Cc: plt-gnats@cs.rice.edu
Subject: Re: all/1812: command line parsing in mzscheme "-qr- f.ss" vs
 "-qr f.ss --"
Date: Sun, 24 Dec 2000 10:28:44 -0600 (CST)

 Quoting Robert Bruce Findler:
 > At 9:13 AM -0600 12/24/00, Matthew Flatt wrote:
 > >Quoting Robert Findler:
 > >>  1. put (printf "argv: ~s~n" argv) in tmp.ss
 > >>  2. at the prompt, type: mzscheme -qr- tmp.ss -a
 > >>     see argv: #1("-a")
 > >>  3. at the prompt, type: mzscheme -qr tmp.ss -- -a
 > >>     see argv: #2("--" "-a")
 > >
 > >There's no bug. -r implies --.
 > 
 > So there should be a -- in both argvs then, right?
 
 No. The command-line parser doesn't actually split up multi-flag forms
 like -qr-. In other words, -q----- is not really equivalent to -q -- --
 -- --, because grouping the flags together ensures that all the "-" are
 treated as "--" flags.
 
 Probably some bit of dcoumentation needs improvement.
 
 Matthew
 
 _______________________________________________
 Why pay for something you could get for free?
 NetZero provides FREE Internet Access and Email
 http://www.netzero.net/download/index.html

From: Robert Bruce Findler <robby@cs.rice.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: plt-gnats@cs.rice.edu
Subject: Re: all/1812: command line parsing in mzscheme "-qr- f.ss" vs 
 "-qr f.ss --"
Date: Mon, 25 Dec 2000 13:42:01 -0600

 At 10:28 AM -0600 12/24/00, Matthew Flatt wrote:
 >
 >No. The command-line parser doesn't actually split up multi-flag forms
 >like -qr-. In other words, -q----- is not really equivalent to -q -- --
 >-- --, because grouping the flags together ensures that all the "-" are
 >treated as "--" flags.
 >
 >Probably some bit of dcoumentation needs improvement.
 
 Does that hold for things like this:
 
    -qrp tmp.ss
 
 ? Ie, with the above program would the "p" come out in the printout?
 
 Robby

From: Matthew Flatt <mflatt@cs.utah.edu>
To: Robert Bruce Findler <robby@cs.rice.edu>
Cc: plt-gnats@cs.rice.edu
Subject: Re: all/1812: command line parsing in mzscheme "-qr- f.ss" vs 
 "-qr f.ss --"
Date: Wed, 27 Dec 2000 06:12:52 -0800

 Quoting Robert Bruce Findler:
 > Does that hold for things like this:
 > 
 >    -qrp tmp.ss
 > 
 > ? Ie, with the above program would the "p" come out in the printout?
 
 The "p" is treated as a "-p" flag (not a "-p" argument).
 
 Matthew
 

From: Robert Bruce Findler <robby@cs.rice.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: plt-gnats@cs.rice.edu
Subject: Re: all/1812: command line parsing in mzscheme "-qr- f.ss" vs  
 "-qr f.ss --"
Date: Wed, 27 Dec 2000 08:28:43 -0600

 At 6:12 AM -0800 12/27/00, Matthew Flatt wrote:
 >Quoting Robert Bruce Findler:
 >>  Does that hold for things like this:
 >>
 >>     -qrp tmp.ss
 >>
 >>  ? Ie, with the above program would the "p" come out in the printout?
 >
 >The "p" is treated as a "-p" flag (not a "-p" argument).
 
 Yes, yes. I meant "-p".
 
 Let me try to be more clear. From what I understood, -r implies --, so:
 
    -qr tmp.ss -p
 
 should (and does) print out
 
    #1("-p")
 
 but
 
    -qrp tmp.ss
 
 should also print the same thing. Instead, it prints this:
 
    Cupertino:Robby:cvs:plt:MzScheme PPC: Bad switch -qrp.
    Use the --help or -h flag for help.
 
 That is,
 
   "-abcdefghijklmnopqrstuvwxyz"
 
 is not the same command line argument as:
 
   "-a -b -c -d -e -f -g -h -i -j -k -l -m -n -o -p -q -r -s -t -u -v 
 -w -x -y -z"
 
 The docs do not seem to explain the syntax of the actual command line 
 anywhere, as far as I can tell, but I had assumed this to be the case.
 
 Robby

From: Matthew Flatt <mflatt@cs.utah.edu>
To: Robert Bruce Findler <robby@cs.rice.edu>
Cc: plt-gnats@cs.rice.edu
Subject: Re: all/1812: command line parsing in mzscheme "-qr- f.ss" vs  
 "-qr f.ss --"
Date: Wed, 27 Dec 2000 08:04:25 -0800

 Quoting Robert Bruce Findler:
 > Let me try to be more clear. From what I understood, -r implies --, so:
 > 
 >    -qr tmp.ss -p
 > 
 > should (and does) print out
 > 
 >    #1("-p")
 > 
 > but
 > 
 >    -qrp tmp.ss
 > 
 > should also print the same thing. Instead, it prints this:
 > 
 >    Cupertino:Robby:cvs:plt:MzScheme PPC: Bad switch -qrp.
 >    Use the --help or -h flag for help.
 > 
 > That is,
 > 
 >   "-abcdefghijklmnopqrstuvwxyz"
 > 
 > is not the same command line argument as:
 > 
 >   "-a -b -c -d -e -f -g -h -i -j -k -l -m -n -o -p -q -r -s -t -u -v 
 > -w -x -y -z"
 
 
 That is corerct - as I said before, they really are NOT the same thing.
 
 -qrp is not supposed to be exactly the same thing as -q -r -p. (Once
 -qrp is parsed as a set of flags, the -p isn't un-parsed as an
 argument.)
 
 I agree that the documentation is lacking. I promise that I really will
 fix it. Meanwhile, I really do believe that the currently implemented
 parsing of command-line arguments is the most useful one.
 
 Matthew

Responsible-Changed-From-To: steck->mflatt
Responsible-Changed-By: mflatt
Responsible-Changed-When: Wed Jan  3 09:57:44 2001
Responsible-Changed-Why:

State-Changed-From-To: open-closed
State-Changed-By: mflatt
State-Changed-When: Thu Jul 12 17:41:25 2001
State-Changed-Why:
Docs updated.

 
>Unformatted:
