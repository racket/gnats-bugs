From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Fri May  2 19:14:08 2008
Received: from rv-out-0506.google.com (rv-out-0506.google.com [209.85.198.228])
	by champlain.ccs.neu.edu (8.13.8/8.13.7) with ESMTP id m42NE7KB005965
	for <bugs@bugs.plt-scheme.org>; Fri, 2 May 2008 19:14:08 -0400
Message-Id: <200805022314.m42NE47V005960@champlain.ccs.neu.edu>
Date: Fri, 2 May 2008 19:14:04 -0400
From: eli@barzilay.org
To: bugs@plt-scheme.org
Subject: regexp-match-peek-positions with empty regexps

>Number:         9340
>Category:       mzscheme
>Synopsis:       regexp-match-peek-positions with empty regexps
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Fri May 02 19:15:01 -0400 2008
>Closed-Date:    Sat May 03 10:16:39 -0400 2008
>Last-Modified:  Sat May 03 10:16:39 -0400 2008
>Originator:     Eli Barzilay
>Organization:
plt
>Submitter-Id:   unknown
>Release:        3.99.0.23
>Environment:
Win32 / x86 / Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; .NET CLR 1.1.4322; .NET CLR 2.0.50727; InfoPath.2)
>Description:
I think that it's better if this:
  (regexp-match-peek-positions "" (open-input-string "123") 999)
returns #f.  It looks like if the regexp can match an empty string,
then this always happens.  It's even more bogus in this example:
  (for/list ([n (in-range 10)])
    (regexp-match-peek-positions "$" (open-input-string "123") n))
where the match does return meaningful results first and then goes
on to return bogus answers.
>How-To-Repeat:
>Fix:
>Audit-Trail:
State changed from "open" to "closed" by mflatt at Sat, 03 May 2008 10:16:39 -0400
Reason>>> definitely a bug - fixed in SVN

