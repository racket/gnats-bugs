From nobody@cs.rice.edu  Tue Sep 16 21:47:13 1997
Received: from web.cs.rice.edu (web.cs.rice.edu [128.42.1.163]) by cs.rice.edu (8.8.5/8.7.1) with ESMTP id VAA10514 for <plt-gnats@cs.rice.edu>; Tue, 16 Sep 1997 21:47:13 -0500 (CDT)
Message-Id: <199709170247.VAA10936@web.cs.rice.edu>
Date: Tue, 16 Sep 1997 21:47:12 -0500 (CDT)
From: shriram@cs.rice.edu
Reply-To: shriram@cs.rice.edu
To: plt-gnats@cs.rice.edu
Subject: Converted Printing Documentation 

>Number:         309
>Category:       mzscheme
>Synopsis:       Converted Printing Documentation
>Confidential:   no
>Severity:       serious
>Priority:       medium
>Responsible:    mflatt
>State:          closed
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Wed Sep 17 02:50:01 GMT 1997
>Last-Modified:  Thu Sep 18 12:45:56 CDT 1997
>Originator:     SK
>Organization:
titan
>Release:        -x
>Environment:
Solaris
>Description:
The documentation states that print-convert takes two arguments.
Feeding it two arguments gives an error:

> (print-convert-expr (build-share e) e)
procedure print-convert-expr: expects 3 arguments, given 2: #(struct:convert-...

Also, it would be nice if there were a simpler way to get this all
to work (eg, the documentation mentions pchookr.ss, and about how
it could be used as unit, or its definitions can be used directly,
but there is no pchook.ss which one could load that sets this all
up automatically).

'shriram
>How-To-Repeat:

>Fix:

>Audit-Trail:

From: Robert Bruce Findler <robby@cs.rice.edu>
To: Matthew Flatt <mflatt@cs.rice.edu>
Cc: plt-gnats@cs.rice.edu
Subject: Re: all/309: Converted Printing Documentation 
Date: Wed, 17 Sep 1997 09:50:54 -0500 (CDT)

 Matthew Flatt writes:
 > Said shriram@cs.rice.edu:
 > > The documentation states that print-convert takes two arguments.
 > > Feeding it two arguments gives an error:
 > > 
 > > > (print-convert-expr (build-share e) e)
 > > procedure print-convert-expr: expects 3 arguments, given 2: #(struct:convert-...
 > > 
 > 
 > Did you change this when you modified pconverr.ss? There's now an
 > `unroll-once?' argument.
 
 I'm not sure. I will check and document it today. I didn't think of
 print-convert-expr as a heavily used function so didn't worry too much
 about changing it.
 
 Robby

State-Changed-From-To: open-analyzed
State-Changed-By: robby
State-Changed-When: Wed Sep 17 09:59:52 1997
State-Changed-Why:

The third argument `unroll-once?' determines if at least one level of
unrolling is mandatory -- if it is #t, you will not get back the shared
identifier immediately, and if it is #f you may get back a shared
identifier directly.

For the units concern, we should probably have a paragraph like this:

If you want to link the print-convert library into your unitized
application, you should load "pconverr.ss", which returns a unit. That unit
requires three imports: the units return from load mzlib's stringr.ss,
functior.ss, and pchookr.ss. If you want to change print-convert's hooks,
you can supply your own unit that matches the mzlib:print-convert-hooks^
signature, found in pconvers.ss.

Responsible-Changed-From-To: ptg->mflatt
Responsible-Changed-By: mflatt
Responsible-Changed-When: Thu Sep 18 10:41:45 1997
Responsible-Changed-Why:
MzLib changed, docs updated, soon to be released.

State-Changed-From-To: analyzed-closed
State-Changed-By: mflatt
State-Changed-When: Thu Sep 18 12:45:46 1997
State-Changed-Why:
Changes released.

>Unformatted:
