From nobody@cs.rice.edu  Tue Aug 25 23:12:04 1998
Received: from web.cs.rice.edu (web.cs.rice.edu [128.42.1.163])
	by cs.rice.edu (8.9.0/8.9.0) with ESMTP id XAA11462
	for <plt-gnats@cs.rice.edu>; Tue, 25 Aug 1998 23:12:04 -0500 (CDT)
Message-Id: <199808260412.XAA02972@web.cs.rice.edu>
Date: Tue, 25 Aug 1998 23:12:04 -0500 (CDT)
From: shriram@cs.rice.edu
Reply-To: shriram@cs.rice.edu
To: plt-gnats@cs.rice.edu
Subject: make-temporary-file has several errors 

>Number:         768
>Category:       mzscheme
>Synopsis:       make-temporary-file has several errors
>Confidential:   no
>Severity:       serious
>Priority:       medium
>Responsible:    mflatt
>State:          closed
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Wed Aug 26 04:15:02 GMT 1998
>Last-Modified:  Tue Sep  1 09:21:31 CDT 1998
>Originator:     Shriram Krishnamurthi
>Organization:
titan
>Release:        53
>Environment:
Linux
>Description:
1. The documentation of make-temporary-file in

http://www.cs.rice.edu/CS/PLT/packages/doc/mzscheme/node174.htm

is incorrect.  The procedure in the distribution actually returns
a filename, not a "file", contrary to its claim.  (I would prefer
that the document use "input port" and "output port" instead: one
half of each is more precise, and the other half more standard.)

2. It may have some runaway file-creation problem, though
I haven't been able to reproduce this.

3. It is not guaranteed to terminate.  At one point it was taking
forever to create a file.  I halted the process, and found that
there were 1000 of its standard format names in /tmp/.  The
procedure itself uses (random 1000).  As a result, it would never
have found an unused name.

4. Even when it does find a free filename, it makes clients fail.
The code opens the file for output (to make sure it exists), then
closes the port.  It does not, however, delete this file.  Therefore,
if a client tries to open-output-file on the returned filename, their
program immediately dies.

>How-To-Repeat:

>Fix:

>Audit-Trail:

Responsible-Changed-From-To: steck->mflatt
Responsible-Changed-By: mflatt
Responsible-Changed-When: Wed Aug 26 11:12:09 1998
Responsible-Changed-Why:


From: Matthew Flatt <mflatt@cs.rice.edu>
To: shriram@cs.rice.edu
Cc: plt-gnats@cs.rice.edu
Subject: Re: all/768: make-temporary-file has several errors 
Date: Wed, 26 Aug 1998 11:11:01 -0500 (CDT)

 Quoting shriram@cs.rice.edu:
 > 1. The documentation of make-temporary-file in
 > 
 > http://www.cs.rice.edu/CS/PLT/packages/doc/mzscheme/node174.htm
 > 
 > is incorrect.  The procedure in the distribution actually returns
 > a filename, not a "file", contrary to its claim.  (I would prefer
 > that the document use "input port" and "output port" instead: one
 > half of each is more precise, and the other half more standard.)
 
 I'm confused. In my copy of the documentation, it reads:
 
   Creates a new temporary file and returns the path of the file.
 
 Is there a terminology problem that I'm not seeing?
 
 I agree that there are no "file" values, only "port" values. If the
 documentation claims that some procedure returns a file (as opposed to
 a path), it need to be fixed.
 
 > 2. It may have some runaway file-creation problem, though
 > I haven't been able to reproduce this.
 
 Can you be more specific? Or was the problem that make-temporary-file
 actually created the file, and that was unexpected?
 
 > 3. It is not guaranteed to terminate.  At one point it was taking
 > forever to create a file.  I halted the process, and found that
 > there were 1000 of its standard format names in /tmp/.  The
 > procedure itself uses (random 1000).  As a result, it would never
 > have found an unused name.
 
 Ok - that's stupid and I'll fix it. It should use (format "~a~a"
 (current-seconds) (current-milliseconds)).
 
 > 4. Even when it does find a free filename, it makes clients fail.
 > The code opens the file for output (to make sure it exists), then
 > closes the port.  It does not, however, delete this file.  Therefore,
 > if a client tries to open-output-file on the returned filename, their
 > program immediately dies.
 
 The docuemntation explicitly mentions that the file is
 created. Perhaps it should be made more clear, tough. Perhaps it's not
 clear that it creates the file *and* it doesn't delete it.
 
 It can't not create the file. The existence of the file prevents other
 programs/threads from using the same temporary filename.
 
 It's the client's responsibility to delete the temporary file. I'll
 make that more clear.
 
 Matthew

State-Changed-From-To: open-closed
State-Changed-By: mflatt
State-Changed-When: Tue Sep  1 09:21:00 1998
State-Changed-Why:
Fixed, documentation improved.

>Unformatted:
