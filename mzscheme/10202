From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Wed Apr 15 03:19:33 2009
Received: from qw-out-2122.google.com (qw-out-2122.google.com [74.125.92.25])
	by champlain.ccs.neu.edu (8.14.2/8.14.2) with ESMTP id n3F7JPx2025470
	for <bugs@bugs.plt-scheme.org>; Wed, 15 Apr 2009 03:19:25 -0400
Message-Id: <200904150719.n3F7JLWx025463@champlain.ccs.neu.edu>
Date: Wed, 15 Apr 2009 03:19:21 -0400
From: wdmeuter@vub.ac.be
To: bugs@plt-scheme.org
Subject: bug in string/utf8 encoding

>Number:         10202
>Category:       mzscheme
>Synopsis:       bug in string/utf8 encoding
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Wed Apr 15 03:20:01 -0400 2009
>Closed-Date:    Fri Jan 08 08:35:07 -0500 2010
>Last-Modified:  Fri Jan 08 08:35:07 -0500 2010
>Originator:     Wolfgang De Meuter
>Organization:
plt
>Submitter-Id:   unknown
>Release:        4.1.5.4
>Environment:
MacIntel / Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_5_6; en-us) AppleWebKit/525.27.1 (KHTML, like Gecko) Version/3.2.1 Safari/525.27.1
>Description:
#!r6rs

(import (rnrs base)
        (rnrs bytevectors))

(define b1 (make-bytevector 1 255))
(define s (utf8->string b1))
(define b2 (string->utf8 s))


; ==> b2 DOES NOT CONTAIN 255
>How-To-Repeat:
>Fix:
>Audit-Trail:
From: Matthew Flatt <mflatt@cs.utah.edu>
To: wdmeuter@vub.ac.be, bugs@plt-scheme.org
Cc: nobody@plt-scheme.org
Subject: Re: [plt-bug] all/10202: bug in string/utf8 encoding
Date: Wed, 15 Apr 2009 05:12:46 -0600

 At Wed, 15 Apr 2009 03:20:01 -0400, wdmeuter@vub.ac.be wrote:
 > #!r6rs
 > 
 > (import (rnrs base)
 >         (rnrs bytevectors))
 > 
 > (define b1 (make-bytevector 1 255))
 > (define s (utf8->string b1))
 
 `b1' is not a UTF-8 encoding, and so the string `s' contains the
 replacement character U+FFFD.
 
 That is, per R6RS, encoding errors in the given bytecode are handled by
 generating U+FFFD (as opposed to, say, reporting an error).
 
 > (define b2 (string->utf8 s))
 > 
 > 
 > ; ==> b2 DOES NOT CONTAIN 255
 
 Right --- it's a UTF-8 encoding, so it can never have 255. Instead,
 `b2' encodes the string that contains U+FFFD.
 
 If you're looking for a way to encode an arbitrary bytevector as a
 string, `utf8->string' won't work. But what were you actually trying to
 do?
 


State changed from "open" to "closed" by mflatt at Fri, 08 Jan 2010 08:35:07 -0500
Reason>>> not a bug; probably just that string encodings are confusing

