From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Mon Feb  7 10:58:23 2011
Received: from mail-ey0-f172.google.com (mail-ey0-f172.google.com [209.85.215.172])
	by champlain.ccs.neu.edu (8.14.4/8.14.3) with ESMTP id p17FwIip025027
	for <bugs@bugs.plt-scheme.org>; Mon, 7 Feb 2011 10:58:18 -0500
Message-Id: <201102071558.p17FwBrC025018@champlain.ccs.neu.edu>
Date: Mon, 7 Feb 2011 10:58:11 -0500
From: rapacity@codealife.com
To: bugs@racket-lang.org
Subject: racket 2x slower on 64bit?

>Number:         11714
>Category:       mzscheme
>Synopsis:       racket 2x slower on 64bit?
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       non-critical
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Mon Feb 07 11:00:02 -0500 2011
>Last-Modified:  Fri Feb 11 17:25:16 -0500 2011
>Originator:     Khalil Harake
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.1.0.2--2011-02-06(e2a0fd0/g)
>Environment:
Linux x86_64 / Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.13) Gecko/20101230 Firefox/3.6.13
>Description:
I tried this script on 2 machines with different specifications, so it's not a controlled test, the 32 bit one was with a 4 year old computer, the 64bit one is a top of the line gaming laptop, the 64-bit machine took twice as long on average to run the below script.
>How-To-Repeat:
#lang racket

(require unstable/sequence)

(define alist `((1 . 2)(1 . 2)(1 . 2)(1 . 2)(1 . 2)(1 . 2)(1 . 2)(1 . 2)(1 . 2)(1 . 2)(1 . 2)(1 . 2)))

(collect-garbage)
(collect-garbage)
(collect-garbage)

(time
 (for ([i (in-range 0 100000)])
   (for ([(x y) (in-pairs alist)])
     1)))
>Fix:
>Audit-Trail:
From: Matthew Flatt <mflatt@cs.utah.edu>
To: rapacity@codealife.com, bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11714: racket 2x slower on 64bit?
Date: Tue, 8 Feb 2011 11:50:41 -0700

 At Mon, 7 Feb 2011 11:00:02 -0500, rapacity@codealife.com wrote:
 > I tried this script on 2 machines with different specifications, so
 > it's not a controlled test, the 32 bit one was with a 4 year old
 > computer, the 64bit one is a top of the line gaming laptop, the
 > 64-bit machine took twice as long on average to run the below script.
 
 For what it's worth, here are the times on my 2.53 GHz Macbook Pro
 (i.e., same machine, just varying whether Racket is built as a 32-bit
 application or a 64-bit application):
 
  32-bit mode:
   cpu time: 759 real time: 762 gc time: 23
  64-bit mode:
   cpu time: 873 real time: 877 gc time: 35
 
 That's the kind of difference I would expect from just pointer-width
 differences on a program with moderate allocation. For a program that
 is mostly allocation, I'd expect a difference closer to a factor of 2,
 since many things double in memory footprint and memory speed is the
 limiting factor for an allocation-intensive program. For two completely
 different machines, though, it's hard to predict how the times will
 relate.
 
From: Khalil El Harake <rapacity@codealife.com>
To: bugs@racket-lang.org, bug-notification@racket-lang.org
Cc: 
Subject: Re: [racket-bug] all/11714: racket 2x slower on 64bit?
Date: Wed, 9 Feb 2011 09:57:05 +0200

 Just for completeness, below are the machine specifications and the
 times each took to run the script.
 
 64 bit: 2010: Asus G73JH-X3 - Intel Core i7-720QM 1.6 GHz - ram 8GB of
 DDR3 1066MHz
 Linux myhost 2.6.37-ARCH #1 SMP PREEMPT Sat Jan 29 20:00:33 CET 2011 x86_64
 cpu time: 1836 real time: 1836 gc time: 26
 
 32 bit: 2006: Dell XPS M1710 - Intel Core duo T7200  2.00GHz - ram 2GB
 of DDR2 667MHz
 Linux M1710 2.6.35-22-generic #33-Ubuntu SMP Sun Sep 19 20:34:50 UTC
 2010 i686 GNU/Linux
 cpu time: 876 real time: 877 gc time: 28
From: Khalil El Harake <rapacity@codealife.com>
To: mflatt@cs.utah.edu, bugs@racket-lang.org, bug-notification@racket-lang.org
Cc: 
Subject: Re: [racket-bug] all/11714: racket 2x slower on 64bit?
Date: Wed, 9 Feb 2011 11:11:01 +0200

 I just managed to get a 32bit kernel and 32bit build running on the
 same machine, I did the benchmarks on linux. so on the same machine,
 while using a 64bit kernel and 64bit build it's 3x slower here.
 
 32bit:
 cpu time: 608 real time: 611 gc time: 24
 
 64bit:
 cpu time: 1836 real time: 1836 gc time: 26

