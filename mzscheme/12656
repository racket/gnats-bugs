From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Wed Mar 28 00:11:27 2012
Received: from mail-vx0-f172.google.com (mail-vx0-f172.google.com [209.85.220.172])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id q2S4BNgI005745
	for <bugs@bugs.plt-scheme.org>; Wed, 28 Mar 2012 00:11:23 -0400
Message-Id: <201203280411.q2S4BJQ0005733@champlain.ccs.neu.edu>
Date: Wed, 28 Mar 2012 00:11:19 -0400
From: eli@barzilay.org
To: bugs@racket-lang.org
Subject: More problems with `hash-table' patterns in `match'

>Number:         12656
>Category:       mzscheme
>Synopsis:       More problems with `hash-table' patterns in `match'
>Class:          sw-bug
>Responsible:    samth
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Wed Mar 28 00:12:01 -0400 2012
>Closed-Date:    Tue Mar 25 10:20:30 -0400 2014
>Last-Modified:  Tue Mar 25 10:20:30 -0400 2014
>Originator:     Eli Barzilay
>Organization:
plt
>Submitter-Id:   unknown
>Release:        HEAD
>Environment:
Any
>Description:
This works fine:

  (match 1 [(list (list number) (list (list (list number)))) 1])

But trying the same with hash tables doesn't work:

  (match 1 [(hash-table (1 number) (2 (hash-table (3 number)))) 1])
  ==> let: duplicate identifier at: number

Seems like that error is related to the outer `hash-table':

  (match 1 [(hash-table (1 number) (2 (list (list number)))) 1])
  ==> let: duplicate identifier at: number

And if only the inner one is a `hash-table', there's a different
error:

  (match 1 [(list (list number) (list (hash-table (3 number)))) 1])
  ==> compile: unbound identifier (and no #%top syntax transformer
      is bound) in: number29
>How-To-Repeat:
>Fix:
>Audit-Trail:
From: Eli Barzilay <eli@barzilay.org>
To: bugs@racket-lang.org
Cc: bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12656: More problems with `hash-table' patterns in `match'
Date: Wed, 28 Mar 2012 00:15:06 -0400

 Just now, eli@barzilay.org wrote:
 > [...]
 
 Trying to implement my own `hash-table' quickly shows that the real
 problem is in `list-no-order' -- I get the same problems if I use that
 instead of `hash-table'.
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!
From: Sam Tobin-Hochstadt <samth@ccs.neu.edu>
To: Eli Barzilay <eli@barzilay.org>
Cc: bugs@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12656: More problems with `hash-table' patterns
 in `match'
Date: Wed, 28 Mar 2012 08:38:21 -0400

 On Wed, Mar 28, 2012 at 12:15 AM, Eli Barzilay <eli@barzilay.org> wrote:
 > Just now, eli@barzilay.org wrote:
 >> [...]
 >
 > Trying to implement my own `hash-table' quickly shows that the real
 > problem is in `list-no-order' -- I get the same problems if I use that
 > instead of `hash-table'.
 
 Yes, non-linear patterns in `list-no-order' are hard to do right (just
 ask casey).  They're currently not supported, but I'm not doing a good
 job with error reporting, which is the real bug here.
 -- 
 sam th
 samth@ccs.neu.edu

Responsible changed from "nobody" to "samth" by samth at Wed, 18 Apr 2012 16:57:50 -0400
Reason>>> match


State changed from "open" to "closed" by samth at Tue, 25 Mar 2014 10:20:30 -0400
Reason>>> This is a duplicate of PR 10083.

