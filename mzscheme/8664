From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Fri May 11 19:25:21 2007
Received: from wx-out-0506.google.com (wx-out-0506.google.com [66.249.82.229])
	by champlain.ccs.neu.edu (8.13.8/8.13.7) with ESMTP id l4BNPLNs013519
	for <bugs@bugs.plt-scheme.org>; Fri, 11 May 2007 19:25:21 -0400
Message-Id: <200705112325.l4BNPJFh013514@champlain.ccs.neu.edu>
Date: Fri, 11 May 2007 19:25:19 -0400
From: frag.frog@gmail.com
To: bugs@plt-scheme.org
Subject: scheme is handling addition of sub whole numbers incorrectly 

>Number:         8664
>Category:       mzscheme
>Synopsis:       scheme is handling addition of sub whole numbers incorrectly
>Class:          not-a-bug
>Responsible:    clements
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Fri May 11 19:30:01 -0400 2007
>Closed-Date:    Sat May 12 02:29:21 -0400 2007
>Last-Modified:  Sun May 13 11:54:43 -0400 2007
>Originator:     floating point handling
>Organization:
plt
>Submitter-Id:   unknown
>Release:        360
>Environment:
windows "Windows NT 5.1 (Build 2600) Service Pack 2" (win32\i386) (get-display-depth) = 32
Docs Installed:
(("C:\\Program Files\\PLT\\doc" "r5rs" "mzscheme" "mred" "help" "tour" "drscheme" "srfi" "mzlib" "misclib" "mrlib" "framework" "foreign" "mzc" "tools" "insidemz" "web-server" "swindle" "plot" "release-notes" "t-y-scheme" "tex2page" "beginning" "beginning-abbr" "intermediate" "intermediate-lambda" "advanced" "teachpack" "teachpack-htdc" "profj-beginner" "profj-intermediate" "profj-advanced") (* "C:\\Documents and Settings\\frag\\Application Data\\PLT Scheme\\planet\\300\\360\\cache\\kazzmir\\allegro.plt\\2\\2\\doc"))
Human Language: english
(current-memory-use) 71401472

Collections:
(("C:\\Documents and Settings\\frag\\Application Data\\PLT Scheme\\360\\collects" non-existent-path) ("C:\\Program Files\\PLT\\collects" "afm" "algol60" "allegro.plt" "browser" "compiler" "config" "defaults" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "framework" "frtime" "games" "graphics" "help" "hierlist" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "mztake" "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profj" "profjBoxes" "profjWizard" "r5rs" "readline" "setup" "sgl" "slatex" "slibinit" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-suite" "tex2page" "texpict" "trace" "version" "web-server" "xml"))
Teachpack filenames: (#<path:C:\Program Files\PLT\collects\xml\info.ss>)
Computer Language: (("Professional Languages" "Standard (R5RS)") #6(#f write mixed-fraction-e #f #t debug))
>Description:
i concider this bug serious to any application which is sensitive to small changes in sub decimal values.

its easy to reproduce, information on any steps to temporarily prevent this would be welcomed, its also produced in other scheme interpreters (guile)
>How-To-Repeat:
(let loop ((i 100) (var 0))
  (display var)
  (newline)
  (if (<= i 0)
      var
      (loop (- i 1) (+ var 0.1))
      ))

look at output, there is numbers added on in places their shouldn't, sometimes only .000000001, sometimes .09999999.
>Fix:
>Audit-Trail:
From: John Clements <clements@brinckerhoff.org>
To: frag.frog@gmail.com, bugs@plt-scheme.org
Cc: nobody@plt-scheme.org, eli@plt-scheme.org
Subject: Re: [plt-bug] all/8664: scheme is handling addition of sub whole numbers incorrectly 
Date: Fri, 11 May 2007 16:36:06 -0700

 On May 11, 2007, at 4:30 PM, frag.frog@gmail.com wrote:
 
 > A new problem report is waiting at
 >   http://bugs.plt-scheme.org/query/?cmd=view&pr=8664
 >
 > Reported by floating point handling for release: 360
 >
 > *** Description:
 > i concider this bug serious to any application which is sensitive  
 > to small changes in sub decimal values.
 >
 > its easy to reproduce, information on any steps to temporarily  
 > prevent this would be welcomed, its also produced in other scheme  
 > interpreters (guile)
 >
 > *** How to repeat:
 > (let loop ((i 100) (var 0))
 >   (display var)
 >   (newline)
 >   (if (<= i 0)
 >       var
 >       (loop (- i 1) (+ var 0.1))
 >       ))
 >
 > look at output, there is numbers added on in places their  
 > shouldn't, sometimes only .000000001, sometimes .09999999.
 
 This is not a problem with scheme; it's a fact of life with IEEE  
 floating point numbers.
 
 1) C has this problem too, but it generally hides it unless you ask  
 for lots of display precision.
 2) You can avoid this by using scheme "exact" numbers rather than  
 "inexact" numbers.
 3) You can probably search the plt-scheme mailing list for earlier  
 discussions of this.
 
 Let me know if I can clarify further, or if you believe I'm mistaken.
 
 John Clements
 
 
Class changed from "sw-bug" to "not-a-bug" by eli at Sat, 12 May 2007 02:29:21 -0400
Reason>>> See reply

Responsible changed from "nobody" to "clements" by eli at Sat, 12 May 2007 02:29:21 -0400
Reason>>> John replied

State changed from "open" to "closed" by eli at Sat, 12 May 2007 02:29:21 -0400
Reason>>> See reply

From: John Clements <clements@brinckerhoff.org>
To: Michael <frag.frog@gmail.com>
Cc: bugs@plt-scheme.org
Subject: Re: [plt-bug] all/8664: scheme is handling addition of sub whole numbers incorrectly
Date: Sat, 12 May 2007 11:43:03 -0700

 On May 11, 2007, at 7:48 PM, Michael wrote:
 
 > Hellos John,
 >
 > c does infact suffer from this in the floating point department,  
 > how ever their doubles don't.  (sort of off point if you concider  
 > that scheme uses float, but still... it could be fixed)
 
 No, I'm confident that you're mistaken.
 
 Free example:
 
 john-clements-computer:/tmp clements$ less inexact.c
 #include <stdio.h>
 #include <stdlib.h>
 
 int main () {
    double i = 0.1 + 0.1 + 0.1;
 
    printf ("i = %.30f\n", i);
 
    return 0;
 }
 john-clements-computer:/tmp clements$ gcc inexact.c
 john-clements-computer:/tmp clements$ ./a.out
 i = 0.300000000000000044408920985006
 john-clements-computer:/tmp clements$
 
 
 OK with you if I close this bug report?
 
 John Clements
 
