From neil@neilvandyke.org Mon Apr 26 14:39:34 2004
Received: from localhost (dsl092-071-030.bos1.dsl.speakeasy.net [66.92.71.30])
	by champlain.ccs.neu.edu (8.12.10/8.12.10) with ESMTP id i3QIdXkc017945
	for <bugs>; Mon, 26 Apr 2004 14:39:34 -0400
Message-Id: <200404261839.i3QIdXkc017945@champlain.ccs.neu.edu>
Date: Mon, 26 Apr 2004 14:39:33 -0400
From: "Neil W. Van Dyke" <neil@neilvandyke.org>
To: bugs@plt-scheme.org
Subject: value of symbol->string is mutable, r5rs says error

>Number:         6835
>Category:       mzscheme
>Synopsis:       value of symbol->string is mutable, r5rs says error
>Class:          doc-bug
>Responsible:    mflatt
>Severity:       non-critical
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Mon Apr 26 14:40:00 -0400 2004
>Closed-Date:    Mon Feb 25 14:31:24 -0500 2013
>Last-Modified:  Mon Feb 25 14:31:24 -0500 2013
>Originator:     Neil W. Van Dyke
>Organization:
titan
>Submitter-Id:   unknown
>Release:        206p1
>Environment:
unix "Linux claire 2.2.25 #1 Tue Dec 30 10:49:10 EST 2003 i686 GNU/Linux" (i386-linux) (get-display-depth) = 24
Docs Installed:
("/usr/lib/plt/collects/doc/teachpack" "/usr/lib/plt/collects/doc/help" "/usr/lib/plt/collects/doc/drscheme" "/usr/lib/plt/collects/doc/tour" "/usr/lib/plt/collects/doc/tools" "/usr/lib/plt/collects/doc/tex2page" "/usr/lib/plt/collects/doc/srfi" "/usr/lib/plt/collects/doc/r5rs" "/usr/lib/plt/collects/doc/t-y-scheme" "/usr/lib/plt/collects/doc/profj-beginner" "/usr/lib/plt/collects/doc/profj-advanced" "/usr/lib/plt/collects/doc/profj-intermediate" "/usr/lib/plt/collects/doc/mzlib" "/usr/lib/plt/collects/doc/mzc" "/usr/lib/plt/collects/doc/misclib" "/usr/lib/plt/collects/doc/intermediate-lambda" "/usr/lib/plt/collects/doc/mred" "/usr/lib/plt/collects/doc/mzscheme" "/usr/lib/plt/collects/doc/insidemz" "/usr/lib/plt/collects/doc/framework" "/usr/lib/plt/collects/doc/intermediate" "/usr/lib/plt/collects/doc/beginning" "/usr/lib/plt/collects/doc/advanced" "/usr/lib/plt/collects/doc/beginning-abbr")
Collections: 

 
Human Language: english
 
Teachpack filenames: ()
Computer Language: (("Professional Languages" "Standard (R5RS)") #6(#f write mixed-fraction-e #f #t debug))
>Description:
The R5RS documentation for "symbol->string" says, "It is an error
to apply mutation procedures like string-set! to strings returned
by this procedure," but MzScheme (and DrScheme in MzScheme or R5RS
language mode) do not catch the error.

This is not a big deal, but a few small comments:

1. I didn't see this mentioned in the MzScheme documentation, so
   perhaps it should be.

2. The following idiom actually seems to be useful in some
   portable Scheme code I've written, where the value should be
   an immutable case-preserving string, but PLT doesn't enforce
   the immutability.
   (symbol->string (string->symbol "Foo"))

3. If a new string is being allocated on every call to
   "symbol->string", that might be inefficient for portable
   Scheme code that thinks R5RS is hinting otherwise.
   (But perhaps PLT namespace internals requires making a copy?)

>How-To-Repeat:
> (define sym (string->symbol "aaa"))
> (define str (symbol->string sym))
> (string-set! str 1 #\X)
> str
"aXa"
> sym
aaa
> (symbol->string sym)
"aaa"

>Fix:
>Audit-Trail:
Responsible changed from "nobody" to "mflatt" by eli at Sun, 02 May 2004 13:04:53 -0400
Reason>>> mzscheme

From: Danny Yoo <dyoo@hashcollision.org>
To: neil@neilvandyke.org, bugs@racket-lang.org, sk@racket-lang.org,
        mflatt@racket-lang.org
Cc: 
Subject: Re: mzscheme/6835: value of symbol->string is mutable, r5rs says error
Date: Tue, 19 Feb 2013 14:02:01 -0700

 Hi Matthew,
 
 Here's a potential fix:
 
     https://github.com/dyoo/racket/commit/65c8794532ae60a5feffa5c47e3e6e58973a7037
 
 
 I did not push yet since I have not been able to find the test cases
 for r5rs in Racket.  Where can I find them, so I can add an explicit
 test for this change in behavior?
From: Danny Yoo <dyoo@hashcollision.org>
To: neil@neilvandyke.org, bugs@racket-lang.org, sk@racket-lang.org,
        mflatt@racket-lang.org
Cc: 
Subject: Re: mzscheme/6835: value of symbol->string is mutable, r5rs says error
Date: Tue, 19 Feb 2013 14:10:23 -0700

 On Tue, Feb 19, 2013 at 2:02 PM, Danny Yoo <dyoo@hashcollision.org> wrote:
 > Hi Matthew,
 >
 > Here's a potential fix:
 >
 >     https://github.com/dyoo/racket/commit/65c8794532ae60a5feffa5c47e3e6e58973a7037
 >
 >
 > I did not push yet since I have not been able to find the test cases
 > for r5rs in Racket.  Where can I find them, so I can add an explicit
 > test for this change in behavior?
 
 
 
 Quick followup: I just talked with Matthew about this.  The standard
 says of symbol->string in:
 
     http://www.schemers.org/Documents/Standards/R5RS/HTML/
 
 that:
 
     It is an error to apply mutation procedures like string-set! to
 strings returned by this procedure.
 
 
 However, it does not use the term "signal an error", as defined by:
 
     http://www.schemers.org/Documents/Standards/R5RS/HTML/r5rs-Z-H-2.html#%_toc_%_sec_1.3.2
 
 
 Therefore, the Racket implementation of r5rs is technically within
 rights to not detect or report an error in this situation.
 
 
 
 I will not push my change then and leave things as they are.  Is it ok
 to close this bug?

State changed from "open" to "closed" by dyoo at Mon, 25 Feb 2013 14:31:24 -0500
Reason>>> The R5RS standard gives enough freedom here that it tolerates not raising an 
exception in this situation.

