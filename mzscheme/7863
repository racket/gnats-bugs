From apache@plt-scheme.org Fri Feb  3 12:48:22 2006
Received: from champlain.ccs.neu.edu (champlain.ccs.neu.edu [127.0.0.1])
	by champlain.ccs.neu.edu (8.12.10/8.12.10) with ESMTP id k13Hm8ip001964
	for <bugs@plt-scheme.org>; Fri, 3 Feb 2006 12:48:08 -0500
Message-Id: <200602031748.k13Hm7uA001962@champlain.ccs.neu.edu>
Date: Fri, 3 Feb 2006 12:48:07 -0500
From: ittaibalaban@gmail.com
To: bugs@plt-scheme.org
Subject: There is a name clash between Foreign's -> and contract's ->

>Number:         7863
>Category:       mzscheme
>Synopsis:       There is a name clash between Foreign's -> and contract's ->
>Class:          change-request
>Responsible:    mflatt
>Severity:       non-critical
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Fri Feb 03 12:50:00 -0500 2006
>Closed-Date:    Mon Feb 06 10:22:42 -0500 2012
>Last-Modified:  Mon Feb 06 10:22:42 -0500 2012
>Originator:     Ittai Balaban
>Organization:
plt
>Submitter-Id:   unknown
>Release:        300
>Environment:
windows "Windows NT 5.1 (Build 2600) Service Pack 2" (win32\i386) (get-display-depth) = 32
Docs Installed:
(#<path:C:\Program Files\PLT\collects\doc\web-server> #<path:C:\Program Files\PLT\collects\doc\tour> #<path:C:\Program Files\PLT\collects\doc\tools> #<path:C:\Program Files\PLT\collects\doc\tex2page> #<path:C:\Program Files\PLT\collects\doc\teachpack> #<path:C:\Program Files\PLT\collects\doc\t-y-scheme> #<path:C:\Program Files\PLT\collects\doc\swindle> #<path:C:\Program Files\PLT\collects\doc\srfi> #<path:C:\Program Files\PLT\collects\doc\r5rs> #<path:C:\Program Files\PLT\collects\doc\profj-intermediate> #<path:C:\Program Files\PLT\collects\doc\profj-beginner> #<path:C:\Program Files\PLT\collects\doc\profj-advanced> #<path:C:\Program Files\PLT\collects\doc\plot> #<path:C:\Program Files\PLT\collects\doc\mzscheme> #<path:C:\Program Files\PLT\collects\doc\mzlib> #<path:C:\Program Files\PLT\collects\doc\mzc> #<path:C:\Program Files\PLT\collects\doc\mrlib> #<path:C:\Program Files\PLT\collects\doc\mred> #<path:C:\Program Files\PLT\collects\doc\misclib> #<path:C:\Program Files\PLT\collects\doc\intermediate-lambda> #<path:C:\Program Files\PLT\collects\doc\intermediate> #<path:C:\Program Files\PLT\collects\doc\insidemz> #<path:C:\Program Files\PLT\collects\doc\help> #<path:C:\Program Files\PLT\collects\doc\framework> #<path:C:\Program Files\PLT\collects\doc\foreign> #<path:C:\Program Files\PLT\collects\doc\drscheme> #<path:C:\Program Files\PLT\collects\doc\beginning-abbr> #<path:C:\Program Files\PLT\collects\doc\beginning> #<path:C:\Program Files\PLT\collects\doc\advanced>)
Collections:
((#<path:C:\Documents and Settings\ittai\Application Data\PLT Scheme\300\collects> "non-existent path") (#<path:C:\Program Files\PLT\collects> (#<path:afm> #<path:algol60> #<path:browser> #<path:compiler> #<path:defaults> #<path:doc> #<path:drscheme> #<path:dynext> #<path:embedded-gui> #<path:eopl> #<path:errortrace> #<path:ffi> #<path:framework> #<path:frtime> #<path:games> #<path:graphics> #<path:help> #<path:hierlist> #<path:htdp> #<path:html> #<path:icons> #<path:info-domain> #<path:lang> #<path:launcher> #<path:make> #<path:mred> #<path:mrlib> #<path:mysterx> #<path:mzcom> #<path:mzlib> #<path:mzscheme> #<path:mztake> #<path:net> #<path:openssl> #<path:parser-tools> #<path:planet> #<path:plot> #<path:preprocessor> #<path:profj> #<path:profjBoxes> #<path:r5rs> #<path:setup> #<path:sgl> #<path:slatex> #<path:slibinit> #<path:slideshow> #<path:srfi> #<path:ssax> #<path:stepper> #<path:string-constants> #<path:swindle> #<path:syntax> #<path:syntax-color> #<path:test-suite> #<path:tex2page> #<path:texpict> #<path:trace> #<path:version> #<path:web-server> #<path:xml>)))
Human Language: english
>Description:
Both the foreign library and the contract library define
the symbol ->
It is easy to get around this by renaming while importing,
but it would be nice if core PLT libraries didn't have
such name clashes.
>How-To-Repeat:
(require (lib "contract.ss") (lib "foreign.ss"))
>Fix:
>Audit-Trail:
From: Eli Barzilay <eli@barzilay.org>
To: ittaibalaban@gmail.com, bugs@plt-scheme.org
Cc: mflatt@cs.utah.edu, robby@cs.uchicago.edu
Subject: Re: all/7863: There is a name clash between Foreign's -> and contract's ->
Date: Fri, 3 Feb 2006 14:46:36 -0500

 On Feb  3, ittaibalaban@gmail.com wrote:
 > (require (lib "contract.ss") (lib "foreign.ss"))
 
 Since foreign is only using `->' as a macro keyword, and since that
 keyword is a popular one, perhaps it's best to just look at the symbol
 instead of doing the syntax thing?
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                   http://www.barzilay.org/                 Maze is Life!
From: Matthew Flatt <mflatt@cs.utah.edu>
To: Eli Barzilay <eli@barzilay.org>
Cc: ittaibalaban@gmail.com, bugs@plt-scheme.org, robby@cs.uchicago.edu
Subject: Re: all/7863: There is a name clash between Foreign's -> and contract's ->
Date: Fri, 3 Feb 2006 12:47:26 -0700

 At Fri, 3 Feb 2006 14:46:36 -0500, Eli Barzilay wrote:
 > On Feb  3, ittaibalaban@gmail.com wrote:
 > > (require (lib "contract.ss") (lib "foreign.ss"))
 > 
 > Since foreign is only using `->' as a macro keyword, and since that
 > keyword is a popular one, perhaps it's best to just look at the symbol
 > instead of doing the syntax thing?
 
 If `->' can go in the same place as an expression/identifier, then the
 current choice is the right one.
 
 If `->' can't be confused with an identifier, then it's ok to look for
 a symbol.
 
 Matthew
 
From: Eli Barzilay <eli@barzilay.org>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: ittaibalaban@gmail.com, bugs@plt-scheme.org, robby@cs.uchicago.edu
Subject: Re: all/7863: There is a name clash between Foreign's -> and contract's ->
Date: Fri, 3 Feb 2006 15:07:52 -0500

 On Feb  3, Matthew Flatt wrote:
 > At Fri, 3 Feb 2006 14:46:36 -0500, Eli Barzilay wrote:
 > > On Feb  3, ittaibalaban@gmail.com wrote:
 > > > (require (lib "contract.ss") (lib "foreign.ss"))
 > > 
 > > Since foreign is only using `->' as a macro keyword, and since that
 > > keyword is a popular one, perhaps it's best to just look at the symbol
 > > instead of doing the syntax thing?
 > 
 > If `->' can go in the same place as an expression/identifier, then
 > the current choice is the right one.
 > 
 > If `->' can't be confused with an identifier, then it's ok to look
 > for a symbol.
 
 The problem is that it can.
 
 One possible option is for "foreign.ss" to require only `->' from
 "contract.ss" but that creates a redundant dependency.  Is there any
 sane way to do something similar without the extra require?
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                   http://www.barzilay.org/                 Maze is Life!
From: Robby Findler <robby@cs.uchicago.edu>
To: Eli Barzilay <eli@barzilay.org>
Cc: Matthew Flatt <mflatt@cs.utah.edu>, ittaibalaban@gmail.com,
        bugs@plt-scheme.org
Subject: Re: all/7863: There is a name clash between Foreign's -> and contract's ->
Date: Fri, 3 Feb 2006 14:22:03 -0600

 At Fri, 3 Feb 2006 15:07:52 -0500, Eli Barzilay wrote:
 > One possible option is for "foreign.ss" to require only `->' from
 > "contract.ss" but that creates a redundant dependency.  Is there any
 > sane way to do something similar without the extra require?
 
 That seems worse than the current situation, actually.
 
 Robby

State changed from "open" to "closed" by samth at Mon, 06 Feb 2012 10:22:42 -0500
Reason>>> I believe we've settled on not making any changes here.

