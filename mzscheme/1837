From dimock@deas.harvard.edu  Mon Jan 29 10:55:52 2001
Received: from localhost (TYPES.BU.EDU [128.197.10.198])
	by cs.rice.edu (8.9.0/8.9.0) with ESMTP id KAA23895
	for <plt-gnats>; Mon, 29 Jan 2001 10:55:51 -0600 (CST)
Message-Id: <200101291655.KAA23895@cs.rice.edu>
Date: Mon, 29 Jan 2001 10:55:51 -0600 (CST)
From: dimock@deas.harvard.edu
To: plt-gnats@cs.rice.edu
Subject: reference to undefined identifier: read-from-string-all in .so

>Number:         1837
>Category:       mzscheme
>Synopsis:       reference to undefined identifier: read-from-string-all in .so
>Confidential:   no
>Severity:       serious
>Priority:       medium
>Responsible:    mflatt
>State:          closed
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Mon Jan 29 17:00:01 GMT 2001
>Last-Modified:  Sun May  6 12:12:09 CDT 2001
>Originator:     allyn dimock
>Organization:
titan
>Release:        103
>Environment:
unix (sparc-solaris) (get-display-depth) = 8
Tools: ("syncheck" "project-manager")
Docs Installed:
("help" "mzscheme" "r5rs" "icons" "drscheme" "teachpack" "misclib" "mred" "beginning" "intermediate" "advanced" "mzc")
Collections:
(("/home/church/dimock/lib/plt/collects" ("browser" "afm" "compiler" "drscheme" "graphics" "stepper" "hierlist" "icons" "make" "mzlib" "mred" "games" "mzscheme" "net" "help" "zodiac" "userspce" "dynext" "launcher" "drscheme-jr" "errortrace" "framework" "slibinit" "xml" "htdp" "setup" "defaults" "guserspce" "stepper-graphical" "doc")))
>Description:
(begin-elaboration-time (require-library "string.ss"))
in source code doesn't seem to make read-from-string-all
available in compiled code
>How-To-Repeat:
source file:
...
;(require-library "string.ss")
;(require-library "function.ss")
;; or for native code compilation...
(begin-elaboration-time (require-library "string.ss"))
(begin-elaboration-time (require-library "function.ss"))
...
(define (procReadLine line)
  (let ((expressions (read-from-string-all line)))
...

compiled as:
mzc -p casesens.ss --extension --prim foo.ss

and run as
mzscheme -gvqm  -e '(begin (load-extension "foo.so") (main))' -- inputfile1 inputfile2

gives error message 

reference to undefined identifier: read-from-string-all

If we change to
(require-library "string.ss")
(require-library "function.ss")
;; or for native code compilation...
;(begin-elaboration-time (require-library "string.ss"))
;(begin-elaboration-time (require-library "function.ss"))

and 
mzc -p casesens.ss --zo foo.ss
mzscheme -mfgv foo.zo -e '(main)' -- inputfile1 inputfile2
works.

when I do the mzc -p casesens.ss --extension --prim foo.ss
I see: 
 Prefix: loading "/home/church/dimock/lib/plt/collects/mzlib/string.ss"
 Prefix: loading "/home/church/dimock/lib/plt/collects/mzlib/stringu.ss"
 Prefix: loading "/home/church/dimock/lib/plt/collects/mzlib/strings.ss"
 Prefix: loading "/home/church/dimock/lib/plt/collects/mzlib/refer.ss"
 Prefix: loading "/home/church/dimock/lib/plt/collects/mzlib/invoke.ss"
 Prefix: loading "/home/church/dimock/lib/plt/collects/mzlib/invoker.ss"
 Prefix: loading "/home/church/dimock/lib/plt/collects/mzlib/referf.ss"
 Prefix: loading "/home/church/dimock/lib/plt/collects/mzlib/spidey.ss"
 Prefix: loading "/home/church/dimock/lib/plt/collects/mzlib/stringr.ss"
 Prefix: loading "/home/church/dimock/lib/plt/collects/mzlib/function.ss"
 Prefix: loading "/home/church/dimock/lib/plt/collects/mzlib/functio.ss"
 Prefix: loading "/home/church/dimock/lib/plt/collects/mzlib/functiou.ss"
 Prefix: loading "/home/church/dimock/lib/plt/collects/mzlib/functios.ss"
 Prefix: loading "/home/church/dimock/lib/plt/collects/mzlib/functior.ss"


read-from-string-all is in stringr.ss, so I don't understand why it is not being picked up.

-- Allyn

>Fix:
>Audit-Trail:

From: Matthew Flatt <mflatt@cs.utah.edu>
To: dimock@deas.harvard.edu
Cc: plt-gnats@cs.rice.edu
Subject: Re: all/1837: reference to undefined identifier: read-from-string-all in .so
Date: Mon, 29 Jan 2001 15:00:58 -0700 (MST)

 Quoting dimock@deas.harvard.edu:
 > (begin-elaboration-time (require-library "string.ss"))
 > in source code doesn't seem to make read-from-string-all
 > available in compiled code
 
 `begin-elaboration-time' is a terrible beast, and it's going away in
 the next release (replaced by a much more effective module mechanism).
 
 The problem is that `begin-elaboration-time' means "elaboration time
 only"; the contained expression is not executed at run time, which is
 when your code wants the library functions to be loaded.
 
 I can't remember exactly, but I wonder whether I suggested that you use
 `begin-elaboration-time' for something? In any case, I don't think you
 need it here.
 
 Matthew

Responsible-Changed-From-To: steck->mflatt
Responsible-Changed-By: mflatt
Responsible-Changed-When: Mon Feb 12 10:35:28 2001
Responsible-Changed-Why:

State-Changed-From-To: open-closed
State-Changed-By: mflatt
State-Changed-When: Sun May  6 12:12:00 2001
State-Changed-Why:
`begin-elaboration-time' is gone in v200...

 
>Unformatted:
