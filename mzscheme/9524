From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Wed Jun 18 22:40:33 2008
Received: from fg-out-1718.google.com (fg-out-1718.google.com [72.14.220.158])
	by champlain.ccs.neu.edu (8.14.2/8.14.2) with ESMTP id m5J2ePSi029829
	for <bugs@bugs.plt-scheme.org>; Wed, 18 Jun 2008 22:40:26 -0400
Message-Id: <200806190240.m5J2eLDm029823@champlain.ccs.neu.edu>
Date: Wed, 18 Jun 2008 22:40:21 -0400
From: salimma@fedoraproject.org
To: bugs@plt-scheme.org
Subject: collects/setup module not DESTDIR-aware

>Number:         9524
>Category:       mzscheme
>Synopsis:       collects/setup module not DESTDIR-aware
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Wed Jun 18 22:44:01 -0400 2008
>Last-Modified:  Fri Feb 03 18:44:29 -0500 2012
>Originator:     Michel Alexandre Salim
>Organization:
plt
>Submitter-Id:   unknown
>Release:        4.0
>Environment:
Linux x86_64 / Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9) Gecko/2008061712 Fedora/3.0-1.fc9 Firefox/3.0
>Description:
The packaging process in Unix-like OSes involve building with the prefix where it will eventually end up, and then overriding the install location by invoking "make install DESTDIR=/temporary/location/here". This is supported by PLT Scheme, as documented in the src/README file.

However, as part of the 'make install' target, the following is run:

mzscheme/mzscheme3m -X "/home/builder/packages/tmp/plt-scheme-4.0-3.fc9-root-builder/usr/lib64/plt/collects" -l setup
setup-plt: bootstrapping from source...
setup-plt: version: 4.0 [3m]
setup-plt: variants:  3m
setup-plt: main collects: /home/builder/packages/tmp/plt-scheme-4.0-3.fc9-root-builder/usr/lib64/plt/collects
setup-plt: collects paths: 
setup-plt:   /home/builder/.plt-scheme/4.0/collects
setup-plt:   /home/builder/packages/tmp/plt-scheme-4.0-3.fc9-root-builder/usr/lib64/plt/collects

As at this moment, the collects were installed in their temporary destination, setup-plt erroneously report the wrong paths. In this case, both paths are wrong: the first because it specifies the home directory of the account used to build PLT (but if it's not used then it's not a problem), the second because it has $DESTDIR prepended.

Delaying invoking the install target until the %post install stage (in RPM terminology) is not an option as it will then be run on the user machine which might not have the compiler and libraries required (plus users won't be amused).

The clean solution appears to be to make main.ss parse command-line arguments to let the invoker override the collects install path; the surgery required is probably best done by someone familiar with PLT code, however.
>How-To-Repeat:
Build log will be attached
>Fix:
>Audit-Trail:
From: Michel Alexandre Salim <salimma@fedoraproject.org>
To: bugs@plt-scheme.org, salimma@fedoraproject.org
Cc: 
Subject: Re: all/9524: collects/setup module not DESTDIR-aware
Date: Wed, 18 Jun 2008 22:53:36 -0400

 This is a multi-part message in MIME format.
 --------------020602040405070603050701
 Content-Type: text/plain; charset=ISO-8859-1
 Content-Transfer-Encoding: 7bit
 
 -----BEGIN PGP SIGNED MESSAGE-----
 Hash: SHA1
 
 The redacted build log, showing the relevant configuration options (the
 - --disable-shared is a red herring, it does not affect the result at all)
 and, at the end, the list of files that ended up with the wrong path to
 collects
 -----BEGIN PGP SIGNATURE-----
 Version: GnuPG v1.4.9 (GNU/Linux)
 Comment: Using GnuPG with Fedora - http://enigmail.mozdev.org
 
 iEYEARECAAYFAkhZyjAACgkQWt0J3fd+7ZCpCQCfbSGWjFKnMEJsK+qXy9y/t3BW
 jx0AnRTIdPs3YNeFD8JfxUeeZREBIE/+
 =EXNZ
 -----END PGP SIGNATURE-----
 
 --------------020602040405070603050701
 Content-Type: text/plain;
  name="redacted-buildlog.txt"
 Content-Transfer-Encoding: 7bit
 Content-Disposition: inline;
  filename="redacted-buildlog.txt"
 
 Executing(%prep): /bin/sh -e /home/builder/packages/tmp/rpm-tmp.14739
 + cd /home/builder/packages/tmp
 + rm -rf plt-4.0
 + /usr/bin/gzip -dc /home/builder/packages/plt-scheme/plt-4.0-src-unix.tgz
 + tar -xf -
 + ./configure --build=x86_64-unknown-linux-gnu --host=x86_64-unknown-linux-gnu --target=x86_64-redhat-linux-gnu --program-prefix= --prefix=/usr --exec-prefix=/usr --bindir=/usr/bin --sbindir=/usr/sbin --sysconfdir=/etc --datadir=/usr/share --includedir=/usr/include --libdir=/usr/lib64 --libexecdir=/usr/libexec --localstatedir=/var --sharedstatedir=/usr/com --mandir=/usr/share/man --infodir=/usr/share/info --enable-gl --enable-xrender --enable-xft --disable-shared 'CFLAGS=-O1 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector --param=ssp-buffer-size=4 -m64 -mtune=generic' 'CXXFLAGS=-O1 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector --param=ssp-buffer-size=4 -m64 -mtune=generic'
 >>> Installation targets:
  executables  : /usr/bin/...
  Scheme code  : /usr/lib64/plt/collects/...
  core docs    : /usr/share/plt/doc/...
  C libraries  : /usr/lib64/...
  C headers    : /usr/include/plt/...
  extra C objs : /usr/lib64/plt/...
  man pages    : /usr/share/man/...
      where prefix = /usr
   and datarootdir = ${prefix}/share
   and exec_prefix = /usr
 + make
 make 3m
 ### (clipped) BUILD SUCCEEDED
 Executing(%install): /bin/sh -e /home/builder/packages/tmp/rpm-tmp.86614
 + umask 022
 + cd /home/builder/packages/tmp
 + cd plt-4.0
 + LANG=C
 + export LANG
 + unset DISPLAY
 + rm -rf /home/builder/packages/tmp/plt-scheme-4.0-3.fc9-root-builder
 + cd src
 + make install DESTDIR=/home/builder/packages/tmp/plt-scheme-4.0-3.fc9-root-builder
 make install-3m
 ### (clipped)
 mzscheme/mzscheme3m -X "/home/builder/packages/tmp/plt-scheme-4.0-3.fc9-root-builder/usr/lib64/plt/collects" -l setup
 setup-plt: bootstrapping from source...
 setup-plt: version: 4.0 [3m]
 setup-plt: variants:  3m
 setup-plt: main collects: /home/builder/packages/tmp/plt-scheme-4.0-3.fc9-root-builder/usr/lib64/plt/collects ###### WRONG: prefixed by DESTDIR
 setup-plt: collects paths: 
 setup-plt:   /home/builder/.plt-scheme/4.0/collects
 setup-plt:   /home/builder/packages/tmp/plt-scheme-4.0-3.fc9-root-builder/usr/lib64/plt/collects ###### wrong collects path used here
 
 ### (clipped)
 ### The script belows check for hardcoded occurences of the build root (i.e.,
 ### DESTDIR )
 + /usr/lib/rpm/check-buildroot
 Binary file /home/builder/packages/tmp/plt-scheme-4.0-3.fc9-root-builder/usr/lib64/plt/collects/scribblings/tools/compiled/eval_scrbl.zo matches
 Binary file /home/builder/packages/tmp/plt-scheme-4.0-3.fc9-root-builder/usr/lib64/plt/collects/scribblings/tools/compiled/debug_scrbl.zo matches
 Binary file /home/builder/packages/tmp/plt-scheme-4.0-3.fc9-root-builder/usr/lib64/plt/collects/scribblings/tools/compiled/language-configuration_scrbl.zo matches
 Binary file /home/builder/packages/tmp/plt-scheme-4.0-3.fc9-root-builder/usr/lib64/plt/collects/scribblings/tools/compiled/unit_scrbl.zo matches
 Binary file /home/builder/packages/tmp/plt-scheme-4.0-3.fc9-root-builder/usr/lib64/plt/collects/scribblings/tools/compiled/rep_scrbl.zo matches
 Binary file /home/builder/packages/tmp/plt-scheme-4.0-3.fc9-root-builder/usr/lib64/plt/collects/scribblings/tools/compiled/modes_scrbl.zo matches
 Binary file /home/builder/packages/tmp/plt-scheme-4.0-3.fc9-root-builder/usr/lib64/plt/collects/scribblings/tools/compiled/language_scrbl.zo matches
 Binary file /home/builder/packages/tmp/plt-scheme-4.0-3.fc9-root-builder/usr/lib64/plt/collects/scribblings/tools/compiled/get-slash-extend_scrbl.zo matches
 Binary file /home/builder/packages/tmp/plt-scheme-4.0-3.fc9-root-builder/usr/lib64/plt/collects/scribblings/framework/compiled/editor_scrbl.zo matches
 Binary file /home/builder/packages/tmp/plt-scheme-4.0-3.fc9-root-builder/usr/lib64/plt/collects/scribblings/framework/compiled/version_scrbl.zo matches
 Binary file /home/builder/packages/tmp/plt-scheme-4.0-3.fc9-root-builder/usr/lib64/plt/collects/scribblings/framework/compiled/gui-utils_scrbl.zo matches
 Binary file /home/builder/packages/tmp/plt-scheme-4.0-3.fc9-root-builder/usr/lib64/plt/collects/scribblings/framework/compiled/autosave_scrbl.zo matches
 Binary file /home/builder/packages/tmp/plt-scheme-4.0-3.fc9-root-builder/usr/lib64/plt/collects/scribblings/framework/compiled/frame_scrbl.zo matches
 Binary file /home/builder/packages/tmp/plt-scheme-4.0-3.fc9-root-builder/usr/lib64/plt/collects/scribblings/framework/compiled/preferences-text_scrbl.zo matches
 Binary file /home/builder/packages/tmp/plt-scheme-4.0-3.fc9-root-builder/usr/lib64/plt/collects/scribblings/framework/compiled/color-model_scrbl.zo matches
 Binary file /home/builder/packages/tmp/plt-scheme-4.0-3.fc9-root-builder/usr/lib64/plt/collects/scribblings/framework/compiled/keymap_scrbl.zo matches
 Binary file /home/builder/packages/tmp/plt-scheme-4.0-3.fc9-root-builder/usr/lib64/plt/collects/scribblings/framework/compiled/number-snip_scrbl.zo matches
 Binary file /home/builder/packages/tmp/plt-scheme-4.0-3.fc9-root-builder/usr/lib64/plt/collects/scribblings/framework/compiled/test_scrbl.zo matches
 Binary file /home/builder/packages/tmp/plt-scheme-4.0-3.fc9-root-builder/usr/lib64/plt/collects/scribblings/framework/compiled/preferences_scrbl.zo matches
 Binary file /home/builder/packages/tmp/plt-scheme-4.0-3.fc9-root-builder/usr/lib64/plt/collects/scribblings/framework/compiled/color-prefs_scrbl.zo matches
 Binary file /home/builder/packages/tmp/plt-scheme-4.0-3.fc9-root-builder/usr/lib64/plt/collects/scribblings/framework/compiled/text_scrbl.zo matches
 Binary file /home/builder/packages/tmp/plt-scheme-4.0-3.fc9-root-builder/usr/lib64/plt/collects/scribblings/framework/compiled/exit_scrbl.zo matches
 Binary file /home/builder/packages/tmp/plt-scheme-4.0-3.fc9-root-builder/usr/lib64/plt/collects/scribblings/framework/compiled/group_scrbl.zo matches
 Binary file /home/builder/packages/tmp/plt-scheme-4.0-3.fc9-root-builder/usr/lib64/plt/collects/scribblings/framework/compiled/handler_scrbl.zo matches
 Binary file /home/builder/packages/tmp/plt-scheme-4.0-3.fc9-root-builder/usr/lib64/plt/collects/scribblings/framework/compiled/application_scrbl.zo matches
 Binary file /home/builder/packages/tmp/plt-scheme-4.0-3.fc9-root-builder/usr/lib64/plt/collects/scribblings/framework/compiled/icon_scrbl.zo matches
 Binary file /home/builder/packages/tmp/plt-scheme-4.0-3.fc9-root-builder/usr/lib64/plt/collects/scribblings/framework/compiled/scheme_scrbl.zo matches
 Binary file /home/builder/packages/tmp/plt-scheme-4.0-3.fc9-root-builder/usr/lib64/plt/collects/scribblings/framework/compiled/finder_scrbl.zo matches
 Binary file /home/builder/packages/tmp/plt-scheme-4.0-3.fc9-root-builder/usr/lib64/plt/collects/scribblings/framework/compiled/path-utils_scrbl.zo matches
 Binary file /home/builder/packages/tmp/plt-scheme-4.0-3.fc9-root-builder/usr/lib64/plt/collects/lang/private/compiled/teach-shared_ss.zo matches
 Binary file /home/builder/packages/tmp/plt-scheme-4.0-3.fc9-root-builder/usr/lib64/plt/collects/config/compiled/config_ss.zo matches
 Found '/home/builder/packages/tmp/plt-scheme-4.0-3.fc9-root-builder' in installed files; aborting
 error: Bad exit status from /home/builder/packages/tmp/rpm-tmp.86614 (%install)
 
 
 RPM build errors:
     Bad exit status from /home/builder/packages/tmp/rpm-tmp.86614 (%install)
 
 --------------020602040405070603050701--
From: Eli Barzilay <eli@barzilay.org>
To: salimma@fedoraproject.org, bugs@plt-scheme.org
Cc: mflatt@plt-scheme.org,
        =?ISO-8859-1?Q?G=E9rard?= Milmeister <gemi@bluewin.ch>
Subject: Re: [plt-bug] all/9524: collects/setup module not DESTDIR-aware
Date: Thu, 19 Jun 2008 09:08:33 -0400

 [Matthew: short summary: there is a bug in `scheme/include' below.]
 [CCing Gerard too, for the Fedora distribution issue at the bottom.]
 
 On Jun 18, salimma@fedoraproject.org wrote:
 > The packaging process in Unix-like OSes involve building with the
 > prefix where it will eventually end up, and then overriding the
 > install location by invoking "make install
 > DESTDIR=/temporary/location/here". This is supported by PLT Scheme,
 > as documented in the src/README file.
 > 
 > However, as part of the 'make install' target, the following is run:
 > 
 > mzscheme/mzscheme3m -X "/home/builder/packages/tmp/plt-scheme-4.0-3.fc9-root-builder/usr/lib64/plt/collects" -l setup
 
 [I'm assuming that "/home/builder/packages/..." is the temporary
 DESTDIR that you've set.]
 
 
 > setup-plt: bootstrapping from source...
 > setup-plt: version: 4.0 [3m]
 > setup-plt: variants:  3m
 > setup-plt: main collects: /home/builder/packages/tmp/plt-scheme-4.0-3.fc9-root-builder/usr/lib64/plt/collects
 > setup-plt: collects paths: 
 > setup-plt:   /home/builder/.plt-scheme/4.0/collects
 > setup-plt:   /home/builder/packages/tmp/plt-scheme-4.0-3.fc9-root-builder/usr/lib64/plt/collects
 > 
 > As at this moment, the collects were installed in their temporary
 > destination, setup-plt erroneously report the wrong paths. In this
 > case, both paths are wrong: the first because it specifies the home
 > directory of the account used to build PLT (but if it's not used
 > then it's not a problem),
 
 That's fine -- it only tells you that it's using it as a collection
 path.
 
 
 > the second because it has $DESTDIR prepended.
 
 Why is this wrong?  You asked for it to be installed there, so that's
 where the collections are copied to and where they're used from.
 
 
 > Delaying invoking the install target until the %post install stage
 > (in RPM terminology) is not an option as it will then be run on the
 > user machine which might not have the compiler and libraries
 > required (plus users won't be amused).
 
 Right -- it shouldn't be necessary to do any real compilation work on
 the user's machine.  That's what the plt unix installer does (both are
 eventually handled by "setup/unixstyle-install.ss").
 
 
 > The clean solution appears to be to make main.ss parse command-line
 > arguments to let the invoker override the collects install path; the
 > surgery required is probably best done by someone familiar with PLT
 > code, however.
 
 I don't follow this.  The setup/main program (known as `setup-plt'
 after install step is done) does take command-line arguments, but
 there is no need for anything in this case -- everything here looks
 fine.
 
 Further notes about the followup transcript that you've sent later:
 
 * It looks like `make' is running in the src directory -- I think that
   this works fine, but it is generally a bad idea.  Much better to
   create a directory (I usually use `src/build') for building.
 
 * The only real problem that I see in all this is that there are
   hard-wired paths to the installation directory.  The list that I
   find in your log has these subpaths of the collects tree:
 
     ...scribblings/tools/compiled/eval_scrbl.zo
     ...scribblings/tools/compiled/debug_scrbl.zo
     ...scribblings/tools/compiled/[...more here...]
     ...scribblings/framework/compiled/editor_scrbl.zo
     ...scribblings/framework/compiled/version_scrbl.zo
     ...scribblings/framework/compiled/[...more here...]
     ...lang/private/compiled/teach-shared_ss.zo
 
   I see that all of these use `scheme/include'.  I've been trying to
   figure out why the path ends up in the byte code file, but I see no
   obvious reason.  I did try things and I saw that if I use something
   else instead of (read-syntax c-file p) in "scheme/include.ss", then
   the hard-wired path goes away.
 
     ...config/compiled/config_ss.zo
 
   This one is expected: it's the configuration file that tells
   mzscheme where all the directories are -- in a unixstyle
   installation, that's the *only* way it can know where things are.
   There are several options to deal with this:
 
   1. Don't use the unixstyle installation thing; IIUC, this was the
      solution so far (with everything in /usr/lib/plt and symlinks in
      other places)
 
   2. Make the %post step run "setup/unixstyle-install.ss" to change the
      config file so after installtion everything is fine.
 
   3. Change the config file before packaging.
 
   Ignoring #1 which is not really a solution, I think that #2 is the
   only sane way to solve this -- IIRC, RPMs can be installed in
   different paths, so it's impossible to predict where everything will
   be.
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                   http://www.barzilay.org/                 Maze is Life!
From: Michel Alexandre Salim <salimma@fedoraproject.org>
To: Eli Barzilay <eli@barzilay.org>
Cc: bugs@plt-scheme.org, mflatt@plt-scheme.org,
        =?UTF-8?B?R8OpcmFyZCBNaWxt?=
 =?UTF-8?B?ZWlzdGVy?= <gemi@bluewin.ch>
Subject: Re: [plt-bug] all/9524: collects/setup module not DESTDIR-aware
Date: Thu, 19 Jun 2008 12:20:53 -0400

 -----BEGIN PGP SIGNED MESSAGE-----
 Hash: SHA1
 
 Eli Barzilay wrote:
 
 >> However, as part of the 'make install' target, the following is run:
 >>
 >> mzscheme/mzscheme3m -X "/home/builder/packages/tmp/plt-scheme-4.0-3.fc9-root-builder/usr/lib64/plt/collects" -l setup
 > 
 > [I'm assuming that "/home/builder/packages/..." is the temporary
 > DESTDIR that you've set.]
 It is
 > 
 > 
 >> setup-plt: bootstrapping from source...
 >> setup-plt: version: 4.0 [3m]
 >> setup-plt: variants:  3m
 >> setup-plt: main collects: /home/builder/packages/tmp/plt-scheme-4.0-3.fc9-root-builder/usr/lib64/plt/collects
 >> setup-plt: collects paths: 
 >> setup-plt:   /home/builder/.plt-scheme/4.0/collects
 >> setup-plt:   /home/builder/packages/tmp/plt-scheme-4.0-3.fc9-root-builder/usr/lib64/plt/collects
 >>
 >> As at this moment, the collects were installed in their temporary
 >> destination, setup-plt erroneously report the wrong paths. In this
 >> case, both paths are wrong: the first because it specifies the home
 >> directory of the account used to build PLT (but if it's not used
 >> then it's not a problem),
 > 
 > That's fine -- it only tells you that it's using it as a collection
 > path.
 > 
 > 
 >> the second because it has $DESTDIR prepended.
 > 
 > Why is this wrong?  You asked for it to be installed there, so that's
 > where the collections are copied to and where they're used from.
 Ah, I was reading it wrong; I assumed that's where the hard-wired paths
 get compiled in.
 
 > Further notes about the followup transcript that you've sent later:
 > 
 > * It looks like `make' is running in the src directory -- I think that
 >   this works fine, but it is generally a bad idea.  Much better to
 >   create a directory (I usually use `src/build') for building.
 > 
 > * The only real problem that I see in all this is that there are
 >   hard-wired paths to the installation directory.  The list that I
 >   find in your log has these subpaths of the collects tree:
 > 
 >     ...scribblings/tools/compiled/eval_scrbl.zo
 >     ...scribblings/tools/compiled/debug_scrbl.zo
 >     ...scribblings/tools/compiled/[...more here...]
 >     ...scribblings/framework/compiled/editor_scrbl.zo
 >     ...scribblings/framework/compiled/version_scrbl.zo
 >     ...scribblings/framework/compiled/[...more here...]
 >     ...lang/private/compiled/teach-shared_ss.zo
 > 
 >   I see that all of these use `scheme/include'.  I've been trying to
 >   figure out why the path ends up in the byte code file, but I see no
 >   obvious reason.  I did try things and I saw that if I use something
 >   else instead of (read-syntax c-file p) in "scheme/include.ss", then
 >   the hard-wired path goes away.
 > 
 How does one invoke that "something else" alternative?
 
 >     ...config/compiled/config_ss.zo
 > 
 >   This one is expected: it's the configuration file that tells
 >   mzscheme where all the directories are -- in a unixstyle
 >   installation, that's the *only* way it can know where things are.
 >   There are several options to deal with this:
 > 
 >   1. Don't use the unixstyle installation thing; IIUC, this was the
 >      solution so far (with everything in /usr/lib/plt and symlinks in
 >      other places)
 > 
 We might have to revert to that. Hopefully not; the Unix-style install
 ought to be fixed.
 
 >   2. Make the %post step run "setup/unixstyle-install.ss" to change the
 >      config file so after installtion everything is fine.
 > 
 >   3. Change the config file before packaging.
 > 
 >   Ignoring #1 which is not really a solution, I think that #2 is the
 >   only sane way to solve this -- IIRC, RPMs can be installed in
 >   different paths, so it's impossible to predict where everything will
 >   be.
 >
 RPMs can be, though in most distributions this is discouraged. Thus my
 earlier suggestion (though I suggested it against the wrong file). If we
 know that DESTDIR=/foo/bar will be DESTDIR= at the package's final
 location, unixstyle-install.ss can take advantage of this -- give it
 both DESTDIR and the remaining path, and it can use the full path for
 purpose of linking but make sure only the shorter, final path is encoded
 in any binaries.
 
 Incidentally, config.ss ended up with the correct values:
 
 (module config (lib "configtab.ss" "setup")
   (define doc-dir "/usr/share/plt/doc")
   (define lib-dir "/usr/lib64/plt")
   (define include-dir "/usr/include/plt")
   (define bin-dir "/usr/bin")
   (define absolute-installation? #t))
 
 so what should one do for your (3) suggestion -- use the final version
 of config.ss to replace the original template before 'make install'?
 Would this sidestep the include.ss problem too?
 
 Thanks,
 
 - --
 Michel Salim
 
 
 -----BEGIN PGP SIGNATURE-----
 Version: GnuPG v1.4.9 (GNU/Linux)
 Comment: Using GnuPG with Fedora - http://enigmail.mozdev.org
 
 iEYEARECAAYFAkhah2UACgkQWt0J3fd+7ZBvrwCggqdhs/WsU0dBhOZNP4VK8337
 TccAnR40JAaecTLbY9HCcZm7LW4pf3h6
 =4s0I
 -----END PGP SIGNATURE-----

