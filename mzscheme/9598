From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Wed Jul  9 23:04:29 2008
Received: from fg-out-1718.google.com (fg-out-1718.google.com [72.14.220.156])
	by champlain.ccs.neu.edu (8.14.2/8.14.2) with ESMTP id m6A34MOQ032453
	for <bugs@bugs.plt-scheme.org>; Wed, 9 Jul 2008 23:04:22 -0400
Message-Id: <200807100304.m6A34He4032447@champlain.ccs.neu.edu>
Date: Wed, 9 Jul 2008 23:04:17 -0400
From: mark.engelberg@gmail.com
To: bugs@plt-scheme.org
Subject: Memory limit does not prevent Scheme from crashing

>Number:         9598
>Category:       mzscheme
>Synopsis:       Memory limit does not prevent Scheme from crashing
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Wed Jul 09 23:08:01 -0400 2008
>Last-Modified:  Mon Mar 16 00:33:55 -0400 2009
>Originator:     Mark Engelberg
>Organization:
plt
>Submitter-Id:   unknown
>Release:        4.0.1
>Environment:
windows "Windows NT 5.1 (Build 2600) Service Pack 2" (win32\i386\3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 78609464

Collections:
(("C:\\Documents and Settings\\Mark\\Application Data\\PLT Scheme\\4.0.1\\collects" non-existent-path) ("C:\\Program Files\\PLT\\collects" "afm" "algol60" "browser" "combinator-parser" "compiler" "config" "defaults" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "help" "hierlist" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profj" "r5rs" "r6rs" "readline" "rnrs" "s-exp" "scheme" "scribble" "scribblings" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tex2page" "texpict" "trace" "typed-scheme" "version" "web-server" "wxme" "xml"))
Computer Language: (("Module") (#(#t write mixed-fraction-e #f #t debug) (default) #()))
>Description:
I have memory limit set to 700MB, but DrScheme still crashes with the following code:
>How-To-Repeat:
#lang scheme
(define (loop)
  (append (list 1) (loop)))
(loop)
>Fix:
>Audit-Trail:
From: "Robby Findler" <robby@cs.uchicago.edu>
To: mark.engelberg@gmail.com, bugs@plt-scheme.org
Cc: "Matthew Flatt" <mflatt@cs.utah.edu>, "Eli Barzilay" <eli@barzilay.org>
Subject: Re: [plt-bug] all/9598: Memory limit does not prevent Scheme from crashing
Date: Wed, 9 Jul 2008 22:10:28 -0500

 If the limit is too high, it won't prevent drscheme from crashing.
 And, IIUC, we don't have a good way of determining a maximum limit
 based on your system parameters. All I can say is "please lower the
 limit".
 
 Just as a way to head off where I guess the conversation will go next:
 the memory limit is not exactly connected to the memory on your
 machine. There is space that drscheme itself requires and there are
 other GC-related issues. Perhaps the easiest thing is to ignore the
 "MB" at the end of the limit and just think "700 somthings is too
 many". (Matthew may be able to fill in more details on what the
 somethings really are.)
 
 ....
 
 Robby
 
 On Wed, Jul 9, 2008 at 10:08 PM,  <mark.engelberg@gmail.com> wrote:
 > A new problem report is waiting at
 >  http://bugs.plt-scheme.org/query/?cmd=view&pr=9598
 >
 > Reported by Mark Engelberg for release: 4.0.1
 >
 > *** Description:
 > I have memory limit set to 700MB, but DrScheme still crashes with the following code:
 >
 > *** How to repeat:
 > #lang scheme
 > (define (loop)
 >  (append (list 1) (loop)))
 > (loop)
 >
 > *** Environment:
 > windows "Windows NT 5.1 (Build 2600) Service Pack 2" (win32\i386\3m) (get-display-depth) = 32
 > Human Language: english
 > (current-memory-use) 78609464
 >
 > Collections:
 > (("C:\\Documents and Settings\\Mark\\Application Data\\PLT Scheme\\4.0.1\\collects" non-existent-path) ("C:\\Program Files\\PLT\\collects" "afm" "algol60" "browser" "combinator-parser" "compiler" "config" "defaults" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "help" "hierlist" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profj" "r5rs" "r6rs" "readline" "rnrs" "s-exp" "scheme" "scribble" "scribblings" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tex2page" "texpict" "trace" "typed-scheme" "version" "web-server" "wxme" "xml"))
 > Computer Language: (("Module") (#(#t write mixed-fraction-e #f #t debug) (default) #()))
 >
 >
From: "Mark Engelberg" <mark.engelberg@gmail.com>
To: "Robby Findler" <robby@cs.uchicago.edu>
Cc: bugs@plt-scheme.org, "Matthew Flatt" <mflatt@cs.utah.edu>,
        "Eli Barzilay" <eli@barzilay.org>
Subject: Re: [plt-bug] all/9598: Memory limit does not prevent Scheme from crashing
Date: Wed, 9 Jul 2008 21:07:33 -0700

 To allow drscheme to catch this out-of-memory failure, I have to set
 the memory limit quite low (200MB) on my 1GB machine.  Does that sound
 right?
 
 --Mark
 
 On Wed, Jul 9, 2008 at 8:10 PM, Robby Findler <robby@cs.uchicago.edu> wrote:
 > If the limit is too high, it won't prevent drscheme from crashing.
 > And, IIUC, we don't have a good way of determining a maximum limit
 > based on your system parameters. All I can say is "please lower the
 > limit".
 >
 > Just as a way to head off where I guess the conversation will go next:
 > the memory limit is not exactly connected to the memory on your
 > machine. There is space that drscheme itself requires and there are
 > other GC-related issues. Perhaps the easiest thing is to ignore the
 > "MB" at the end of the limit and just think "700 somthings is too
 > many". (Matthew may be able to fill in more details on what the
 > somethings really are.)
 >
 > ....
 >
 > Robby
 >
 > On Wed, Jul 9, 2008 at 10:08 PM,  <mark.engelberg@gmail.com> wrote:
 >> A new problem report is waiting at
 >>  http://bugs.plt-scheme.org/query/?cmd=view&pr=9598
 >>
 >> Reported by Mark Engelberg for release: 4.0.1
 >>
 >> *** Description:
 >> I have memory limit set to 700MB, but DrScheme still crashes with the following code:
 >>
 >> *** How to repeat:
 >> #lang scheme
 >> (define (loop)
 >>  (append (list 1) (loop)))
 >> (loop)
 >>
 >> *** Environment:
 >> windows "Windows NT 5.1 (Build 2600) Service Pack 2" (win32\i386\3m) (get-display-depth) = 32
 >> Human Language: english
 >> (current-memory-use) 78609464
 >>
 >> Collections:
 >> (("C:\\Documents and Settings\\Mark\\Application Data\\PLT Scheme\\4.0.1\\collects" non-existent-path) ("C:\\Program Files\\PLT\\collects" "afm" "algol60" "browser" "combinator-parser" "compiler" "config" "defaults" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "help" "hierlist" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profj" "r5rs" "r6rs" "readline" "rnrs" "s-exp" "scheme" "scribble" "scribblings" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tex2page" "texpict" "trace" "typed-scheme" "version" "web-server" "wxme" "xml"))
 >> Computer Language: (("Module") (#(#t write mixed-fraction-e #f #t debug) (default) #()))
 >>
 >>
 >
From: Eli Barzilay <eli@barzilay.org>
To: "Robby Findler" <robby@cs.uchicago.edu>
Cc: mark.engelberg@gmail.com, bugs@plt-scheme.org,
        "Matthew Flatt" <mflatt@cs.utah.edu>
Subject: Re: [plt-bug] all/9598: Memory limit does not prevent Scheme from crashing
Date: Thu, 10 Jul 2008 00:05:54 -0400

 On Jul  9, Robby Findler wrote:
 > If the limit is too high, it won't prevent drscheme from crashing.
 > And, IIUC, we don't have a good way of determining a maximum limit
 > based on your system parameters. All I can say is "please lower the
 > limit".
 > 
 > Just as a way to head off where I guess the conversation will go next:
 > the memory limit is not exactly connected to the memory on your
 > machine. There is space that drscheme itself requires and there are
 > other GC-related issues. Perhaps the easiest thing is to ignore the
 > "MB" at the end of the limit and just think "700 somthings is too
 > many". (Matthew may be able to fill in more details on what the
 > somethings really are.)
 
 Actually, it does look like there's a GC problem.  (This is going to
 be a little long -- I've tried lots of things, and tried to provide
 enough details in the hope that some might be useful...)
 
 First of all, I tried running the bad program on Linux, with the
 memory limit set at 256MB.  Things worked fine.  I ran it over and
 over (with the same limit) and drscheme reaches levels of ~1.2GB
 virtual memory and roughly the same resident size, and when the dialog
 box is shown it always goes down (to around 600mb).
 
 But on windows, a 700mb limit was useless (I had about 1.2gb free ram
 when it started), and I tried to lower it down to a level where it
 won't crash -- and that happened only at a 250mb limit, when drscheme
 had 1.1gb virtual, and 390mb working set.  Even that doesn't always
 work, and sometime it crashes with a limit of 200mb.  Some of these
 crashes result in a dos box window saying "the system has run out of
 memory!" with an error sound -- and shows that message again and again
 at roughly 1-second intervals until I kill the dos window.
 
 Even worse, it looks like there was a leak somewhere -- I lowered the
 limit down to the minimum 100mb, and after a few executions it would
 crash again.  For some reason I can't get that to happen again now.
 But for a 200mb limit I can never get it to run more than once -- it
 either crashes on the first run, or on the second.
 
 Finally, I changed the original code:
 
   #lang scheme
   (define (loop)
     (append (list 1) (loop)))
   (loop)
 
 to:
 
   #lang scheme
   (define (loop)
     (cons 1 (loop)))
   (loop)
 
 and with this I got different behavior -- a limit of 250mb no longer
 works, but a limit of 200mb works fine when I run it over and over
 again (I stopped after 10 runs).  I got the same behavior for
 
   #lang scheme
   (define (loop)
     (append '(1) (loop)))
   (loop)
 
 so the allocation in the original version is clearly problematic.  I
 then tried to make it generate lots of short lived junk:
 
   #lang scheme
   (define (loop)
     (cons (car (append (list 1 2) (list 1 2))) (loop)))
   (loop)
 
 which still behaved fine, I also tried this:
 
   #lang scheme
   (define z #f)
   (set! z (lambda () (append (list 1 2) (list 1 2))))
   (define (loop)
     (cons (car (z)) (loop)))
   (loop)
 
 to eliminate possible optimizations (still fine).  And this
 
   #lang scheme
   (define z #f)
   (set! z (lambda () (append (list 1 2) (list 1 2))))
   (define (loop)
     (cons (z) (loop)))
   (loop)
 
 behaved slightly better than Mark's original version (crashes after
 3-5 runs with a 200mb limit), which was completely unexpected...
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                   http://www.barzilay.org/                 Maze is Life!
From: Eli Barzilay <eli@barzilay.org>
To: "Mark Engelberg" <mark.engelberg@gmail.com>
Cc: bugs@plt-scheme.org, Matthew Flatt <mflatt@cs.utah.edu>,
        Robby Findler <robby@cs.uchicago.edu>
Subject: Re: [plt-bug] all/9598: Memory limit does not prevent Scheme from crashing
Date: Thu, 10 Jul 2008 00:15:44 -0400

 On Jul  9, Mark Engelberg wrote:
 > > But on windows, a 700mb limit was useless (I had about 1.2gb free
 > > ram when it started), and I tried to lower it down to a level
 > > where it won't crash -- and that happened only at a 250mb limit,
 > > when drscheme had 1.1gb virtual, and 390mb working set.  Even that
 > > doesn't always work, and sometime it crashes with a limit of
 > > 200mb.  Some of these crashes result in a dos box window saying
 > > "the system has run out of memory!" with an error sound -- and
 > > shows that message again and again at roughly 1-second intervals
 > > until I kill the dos window.
 > 
 > Yes, that's what I'm seeing.
 
 I forgot the bottom line of all this: the memory limit on Windows is
 in pretty bad shape that things are almost as bad as not having it...
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                   http://www.barzilay.org/                 Maze is Life!

