From nobody@champlain.ccs.neu.edu  Tue Nov  4 18:35:33 2003
Received: (from nobody@localhost)
	by champlain.ccs.neu.edu (8.9.3/8.8.7) id SAA10518
	for bugs@plt-scheme.org; Tue, 4 Nov 2003 18:35:33 -0500
Message-Id: <200311042335.SAA10518@champlain.ccs.neu.edu>
Date: Tue, 4 Nov 2003 18:35:33 -0500
From: eli@barzilay.org
To: bugs@plt-scheme.org
Subject: char-ready? lies on string input port

>Number:         6531
>Category:       mzscheme
>Synopsis:       char-ready? lies on string input port
>Class:          sw-bug
>Responsible:    eli
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Tue Nov 04 18:40:01 -0500 2003
>Closed-Date:    Tue Nov 04 18:48:05 -0500 2003
>Last-Modified:  Mon May 05 16:09:38 -0400 2008
>Originator:     Eli Barzilay
>Organization:
plt
>Submitter-Id:   unknown
>Release:        205
>Environment:
unknown-platform
>Description:
char-ready? always returns #t on an open-input-string object, even when it
is already at the end.

>How-To-Repeat:
(char-ready? (open-input-string "")) -> #t
(read-char (open-input-string "")) -> #<eof>

>Fix:
>Release-Note:
>Audit-Trail:
From: Matthew Flatt <mflatt@cs.utah.edu>
To: eli@barzilay.org
Cc: bugs@plt-scheme.org
Subject: Re: all/6531: char-ready? lies on string input port
Date: Tue, 4 Nov 2003 15:48:32 -0700

 At Tue, 4 Nov 2003 18:35:33 -0500, eli@barzilay.org wrote:
 > char-ready? always returns #t on an open-input-string object, even when it
 > is already at the end.
 
 But that's what "char-ready?" is supposed to do...
 
 Matthew
 
State-Changed-From-To: open->closed
State-Changed-By: eli
State-Changed-When: Tue Nov  4 18:48:05 2003
State-Changed-Why:
    RTFM.

From: Eli Barzilay <eli@barzilay.org>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: bugs@plt-scheme.org
Subject: Re: all/6531: char-ready? lies on string input port
Date: Tue, 4 Nov 2003 17:54:06 -0500

 On Nov  4, Matthew Flatt wrote:
 > At Tue, 4 Nov 2003 18:35:33 -0500, eli@barzilay.org wrote:
 > > char-ready? always returns #t on an open-input-string object, even when it
 > > is already at the end.
 > 
 > But that's what "char-ready?" is supposed to do...
 
 Ugh, I can never remember that...  Looking at the source surprized me
 with the simple implementation of that function...
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                   http://www.barzilay.org/                 Maze is Life!
>Unformatted:
