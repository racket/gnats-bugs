From kay@uci.edu  Wed Nov  5 17:22:42 2003
Received: from localhost (IDENT:root@localhost.localdomain [127.0.0.1])
	by champlain.ccs.neu.edu (8.9.3/8.8.7) with ESMTP id RAA21717
	for <bugs>; Wed, 5 Nov 2003 17:22:41 -0500
Message-Id: <200311052222.RAA21717@champlain.ccs.neu.edu>
Date: Wed, 5 Nov 2003 17:22:41 -0500
From: "David G. Kay" <kay@uci.edu>
To: bugs@plt-scheme.org
Subject: open-output-file with 'replace won't create new file

>Number:         6534
>Category:       mzscheme
>Synopsis:       open-output-file with 'replace won't create new file
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Wed Nov 05 17:25:00 -0500 2003
>Closed-Date:    Wed Jun 02 13:15:46 -0400 2004
>Last-Modified:  Thu Jun 03 08:50:01 -0400 2004
>Originator:     David G. Kay
>Organization:
titan
>Submitter-Id:   unknown
>Release:        205
>Environment:
macosx "Darwin dhcp04-7.ics.uci.edu 6.8 Darwin Kernel Version 6.8: Wed Sep 10 15:20:55 PDT 2003; root:xnu/xnu-344.49.obj~2/RELEASE_PPC  Power Macintosh powerpc" (ppc-macosx) (get-display-depth) = 32
Docs Installed:
(".DS_Store" "advanced" "beginning" "beginning-abbr" "drscheme" "framework" "help" "intermediate" "intermediate-lambda" "misclib" "mred" "mzc" "mzlib" "mzscheme" "r5rs" "t-y-scheme" "teachpack" "tex2page" "tools" "tour")
Collections: 
(("/Users/kay/Library/PLT Scheme/205/collects" "non-existent path") ("/Applications/Programming/PLT v205/collects/mzlib/../../MrEd.app/Contents/MacOS/../../../collects" (".DS_Store" "afm" "browser" "compiler" "defaults" "doc" "drscheme" "dynext" "eopl" "errortrace" "finish-install" "framework" "games" "graphics" "help" "hierlist" "htdp" "html" "icons" "lang" "launcher" "make" "mred" "mrlib" "mzlib" "mzscheme" "net" "parser-tools" "profj" "setup" "slibinit" "srfi" "stepper" "string-constants" "syntax" "syntax-color" "test-suite" "tests" "tex2page" "version" "web-server" "xml")))
 
Human Language: english
 
Teachpack filenames: ()
Computer Language: (("Professional Languages" "PLT" "Pretty Big (includes MrEd and Advanced)") #6(#f write mixed-fraction-e #f #t debug))
>Description:
In Version 205 for MacOS X, calling
open-output-file with the 'replace
flag doesn't permit naming and creating
a new file; it only allows choosing an
existing file to overwrite.  The same
code on Version 203 for Windows allows
either a new file or an existing one,
and that's the behavior the documentation
describes.
>How-To-Repeat:
>Fix:
>Release-Note:
>Audit-Trail:
Responsible-Changed-From-To: eli->mflatt
Responsible-Changed-By: mflatt
Responsible-Changed-When: Wed Dec  3 18:04:32 2003
Responsible-Changed-Why:
    mz
State-Changed-From-To: open->analyzed
State-Changed-By: mflatt
State-Changed-When: Wed Dec  3 18:04:32 2003
State-Changed-Why:
    Hi - sorry that it's taken me so long to reply.
    
    Can you provide an example of the problem? For me,
    'replace under OS X seems to work as advertised.
    
    Thanks,
    Matthew
State changed from "analyzed" to "closed" by mflatt at Wed, 02 Jun 2004 13:15:46 -0400
Reason>>> No follow-up,  works fine for me.

From: "David G. Kay" <kay@uci.edu>
To: bugs@plt-scheme.org
Cc: "David G. Kay" <kay@uci.edu>
Subject: Re: mzscheme/6534 open-output-file with 'replace won't create new file
Date: Wed, 2 Jun 2004 19:29:47 -0700

 On Jun 2, 2004, at 10:15 AM, mflatt@cs.utah.edu wrote:
 
 >
 > State changed from "analyzed" to "closed" by mflatt at Wed, 02 Jun 
 > 2004 13:15:46 -0400
 > Reason>>> No follow-up,  works fine for me.
 >
 >
 > View:
 >   http://bugs.plt-scheme.org/query/?cmd=view&pr=6534
 
 I'm sorry that I didn't follow up on this earlier,
 but apparently the problem still persists.
 
 When I call open-output-file with 'replace,
 I am not given the option to create a new
 file.  I can write over an existing file, but
 I can't create a new one.  There's just no
 "New file" button in the file dialog window.
 This is on MacOS X 10.3.4 with PLT Scheme
 ("Pretty Big") v. 207 on a PowerBook G4/800.
 
 Some sample code is below.
 
 									--DGK
 
 
 
 
 ;; This function copies an old file into a new file
 ;; prompting the user for each file
 (define copy-file
     (lambda ()
       (let ((input-port (open-input-file
 		     (get-file "Select the file to copy" #f #f #f #f '())))
            (output-port (open-output-file
 		  (get-file "Select the destination file" #f #f #f #f '())
 		  'replace)))
             ;; the "replace" flag above enables the function to overwrite
             ;; an existing file.
         (copy-file-by-port input-port output-port))))
 
 ;; This function copies an old file into a new file;
 ;; the two parameters are file names
 (define copy-file-given-names
     (lambda (old-file new-file)
       (let ((input-port (open-input-file old-file))
            (output-port (open-output-file new-file 'replace)))
         (copy-file-by-port input-port output-port))))
 
 
 ;; The function implements the actual copying;
 ;; it reads line by line from the old file and writes
 ;; each line to the new file
 (define copy-file-by-port
     (lambda (input-port output-port)
       (let ((one-line (read-line input-port))) ;; read a line from the 
 old file
         (if (eof-object? one-line)
            (flush-output output-port) ;; if the end of file is reached,
                                       ;; force anything in the writing
                                       ;; buffer to be written to the
                                       ;; new file.
            (begin
              (display one-line output-port) ;; write the line to the new 
 file
              (newline output-port)  ;; start a new line in the new file
              (copy-file-by-port input-port output-port))))))
               ;; recursively read and write the rest
 
From: Matthew Flatt <mflatt@cs.utah.edu>
To: "David G. Kay" <kay@uci.edu>, bugs@plt-scheme.org
Cc: 
Subject: Re: mzscheme/6534 open-output-file with 'replace won't create new file
Date: Thu, 3 Jun 2004 06:21:24 -0700

 At Wed, 2 Jun 2004 23:35:01 -0400, "David G. Kay" wrote:
 >  When I call open-output-file with 'replace,
 >  I am not given the option to create a new
 >  file.  I can write over an existing file, but
 >  I can't create a new one.  There's just no
 >  "New file" button in the file dialog window.
 
 I don't understand what you mean. `open-output-file' has nothing to do
 with dialogs.
 
 In this expression:
 
 >             (open-output-file
 >  		  (get-file "Select the destination file" #f #f #f #f '())
 >  		  'replace)
 
 it's the `get-file' sub-expression that shows a dialog. When the dialog
 is gone, a filename is returned and passed on to `open-output-file.
 
 Re-written, slightly:
 
  (let ([filename (get-file "Select the destination file" #f #f #f #f '())])
    ;; Dialog is gone, now; result was filename
    (open-output-file filename 'replace))
 
 This form shows more clearly that 'replace is relevant only after the
 dialog has gone away.
 
 Matthew
 
>Unformatted:
