From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Wed Aug 30 22:34:29 2006
Received: from nf-out-f131.google.com (nf-out-f131.google.com [64.233.182.131])
	by champlain.ccs.neu.edu (8.13.7/8.13.7) with ESMTP id k7V2YSZL025562
	for <bugs@bugs.plt-scheme.org>; Wed, 30 Aug 2006 22:34:28 -0400
Message-Id: <200608310234.k7V2YQEa025556@champlain.ccs.neu.edu>
Date: Wed, 30 Aug 2006 22:34:26 -0400
From: jamessan@debian.org
To: bugs@plt-scheme.org
Subject: define-syntax causes a segfault on m68k

>Number:         8250
>Category:       mzscheme
>Synopsis:       define-syntax causes a segfault on m68k
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Wed Aug 30 22:35:02 -0400 2006
>Closed-Date:    Mon Jan 17 17:47:22 -0500 2011
>Last-Modified:  Mon Jan 17 17:47:22 -0500 2011
>Originator:     James Vega
>Organization:
plt
>Submitter-Id:   unknown
>Release:        352
>Environment:
mac-68k
>Description:
Any define-syntax call causes mzscheme to segfault.  A simple test case is the first define-syntax in collects/tests/mzscheme/testing.ss.
>How-To-Repeat:
Start mzscheme.
Enter the following code:

(define-syntax defvar
  (syntax-rules ()
    [(_ name val)
     (namespace-variable-value 'name #f
       (lambda () (namespace-set-variable-value! 'name val)))]))

mzscheme segfaults.
>Fix:
>Audit-Trail:
From: Matthew Flatt <mflatt@cs.utah.edu>
To: jamessan@debian.org, bugs@plt-scheme.org
Cc: 
Subject: Re: all/8250: define-syntax causes a segfault on m68k
Date: Thu, 31 Aug 2006 10:38:50 0800

 At Wed, 30 Aug 2006 22:35:02 -0400, jamessan@debian.org wrote:
 > *** Environment:
 > mac-68k
 
 I haven't seen that one in a long time.
 
 Are you running Mac OS (how did you get MzScheme to build?) or some
 variant of Linux?
 
 Thanks,
 Matthew
 
From: James Vega <jamessan@debian.org>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: bugs@plt-scheme.org
Subject: Re: all/8250: define-syntax causes a segfault on m68k
Date: Thu, 31 Aug 2006 01:01:54 -0400

 --Dxnq1zWXvFF0Q93v
 Content-Type: text/plain; charset=utf-8
 Content-Disposition: inline
 Content-Transfer-Encoding: quoted-printable
 
 On Thu, Aug 31, 2006 at 10:38:50AM +0000, Matthew Flatt wrote:
 > At Wed, 30 Aug 2006 22:35:02 -0400, jamessan@debian.org wrote:
 > > *** Environment:
 > > mac-68k
 >=20
 > I haven't seen that one in a long time.
 >=20
 > Are you running Mac OS (how did you get MzScheme to build?) or some
 > variant of Linux?
 
 It's one of the Debian ports.  I can provide a backtrace if it'd be
 useful.  Not sure how many m68k systems people have available these
 days.
 
 James
 --=20
 GPG Key: 1024D/61326D40 2003-09-02 James Vega <jamessan@debian.org>
 
 --Dxnq1zWXvFF0Q93v
 Content-Type: application/pgp-signature; name="signature.asc"
 Content-Description: Digital signature
 Content-Disposition: inline
 
 -----BEGIN PGP SIGNATURE-----
 Version: GnuPG v1.4.5 (GNU/Linux)
 
 iEYEARECAAYFAkT2bUIACgkQDb3UpmEybUCzFACeIuk///BQeUmw5GCZqYykOfgb
 xkAAoIEj/FDmOgzvFMSUA9jj6mFZr6zo
 =h1Cf
 -----END PGP SIGNATURE-----
 
 --Dxnq1zWXvFF0Q93v--
From: James Vega <jamessan@debian.org>
To: bugs@plt-scheme.org
Cc: 
Subject: Re: all/8250: define-syntax causes a segfault on m68k
Date: Thu, 31 Aug 2006 14:19:15 -0400

 --fUYQa+Pmc3FrFX/N
 Content-Type: text/plain; charset=utf-8
 Content-Disposition: inline
 Content-Transfer-Encoding: quoted-printable
 
 On Thu, Aug 31, 2006 at 01:01:54AM -0400, James Vega wrote:
 > On Thu, Aug 31, 2006 at 10:38:50AM +0000, Matthew Flatt wrote:
 > > At Wed, 30 Aug 2006 22:35:02 -0400, jamessan@debian.org wrote:
 > > > *** Environment:
 > > > mac-68k
 > >=20
 > > I haven't seen that one in a long time.
 > >=20
 > > Are you running Mac OS (how did you get MzScheme to build?) or some
 > > variant of Linux?
 >=20
 > It's one of the Debian ports.  I can provide a backtrace if it'd be
 > useful.  Not sure how many m68k systems people have available these
 > days.
 
 #0  0xc007fe88 in equal_hash_key (o=3D0xdd60801a, k=3D0)
     at /home/jamessan/drscheme-352/src/mzscheme/src/hash.c:757
 #1  0xc0080356 in equal_hash_key (o=3D0x801be180, k=3D85)
     at /home/jamessan/drscheme-352/src/mzscheme/src/hash.c:835
 #2  0xc008021a in equal_hash_key (o=3D0x801ac954, k=3D50)
     at /home/jamessan/drscheme-352/src/mzscheme/src/hash.c:819
 #3  0xc00809d6 in scheme_equal_hash_key (o=3D0x801ac954)
     at /home/jamessan/drscheme-352/src/mzscheme/src/hash.c:978
 #4  0xc0086bc8 in make_hash_indices_for_equal (v=3D0x801ac954,
     _stk_h1=3D0xefffc8d4, _stk_h2=3D0xefffc8d0)
     at /home/jamessan/drscheme-352/src/mzscheme/src/list.c:1367
 #5  0xc007eaf0 in do_hash (table=3D0x801c95c8, key=3D0x801ac954, set=3D2,
     val=3D0x801ace7c) at /home/jamessan/drscheme-352/src/mzscheme/src/hash.=
 c:159
 #6  0xc007efa2 in scheme_hash_set (table=3D0x801c95c8, key=3D0x801ac954,
     val=3D0x801ace7c) at /home/jamessan/drscheme-352/src/mzscheme/src/hash.=
 c:273
 #7  0xc01118d8 in wraps_to_datum (w_in=3D0x801ace7c, rns=3D0x801c9668,
     just_simplify=3D1)
     at /home/jamessan/drscheme-352/src/mzscheme/src/stxobj.c:4064
 #8  0xc0114216 in simplify_syntax_inner (o=3D0x801ab380, rns=3D0x801c9668,
     marks=3D0x0) at /home/jamessan/drscheme-352/src/mzscheme/src/stxobj.c:5=
 021
 #9  0xc01147e0 in scheme_simplify_stx (stx=3D0x801ab380, cache=3D0x801c9668)
     at /home/jamessan/drscheme-352/src/mzscheme/src/stxobj.c:5134
 #10 0xc004886e in scheme_resolve_prefix (phase=3D1, cp=3D0x800f33a0, simpli=
 fy=3D1)
     at /home/jamessan/drscheme-352/src/mzscheme/src/env.c:2948
 #11 0xc0127ffc in do_define_syntaxes_resolve (data=3D0x801aca2c,
     info=3D0x8020af50, for_stx=3D0)
     at /home/jamessan/drscheme-352/src/mzscheme/src/syntax.c:4050
 #12 0xc01280e6 in define_syntaxes_resolve (data=3D0x801aca08, info=3D0x8020=
 af50)
     at /home/jamessan/drscheme-352/src/mzscheme/src/syntax.c:4069
 #13 0xc00554c6 in scheme_resolve_expr (expr=3D0x801ac9fc, info=3D0x8020af50)
     at /home/jamessan/drscheme-352/src/mzscheme/src/eval.c:1438
 #14 0xc00583f4 in compile_k ()
     at /home/jamessan/drscheme-352/src/mzscheme/src/eval.c:3145
 #15 0xc006e148 in top_level_do (k=3D0xc0057e64 <compile_k>, eb=3D0,
     sj_start=3D0xefffcfe0)
     at /home/jamessan/drscheme-352/src/mzscheme/src/fun.c:1383
 #16 0xc006e26c in scheme_top_level_do (k=3D0xc0057e64 <compile_k>, eb=3D0)
     at /home/jamessan/drscheme-352/src/mzscheme/src/fun.c:1428
 #17 0xc00585aa in _compile (form=3D0x801e3b98, env=3D0x800d9ea0, writeable=
 =3D0,
     for_eval=3D0, eb=3D0, rename=3D0)
     at /home/jamessan/drscheme-352/src/mzscheme/src/eval.c:3186
 #18 0xc0060f3c in do_default_compile_handler (env=3D0x800d9ea0, argc=3D2,
     argv=3D0xefffd6cc)
     at /home/jamessan/drscheme-352/src/mzscheme/src/eval.c:6164
 #19 0xc00612fa in scheme_default_compile_handler (argc=3D2, argv=3D0xefffd6=
 cc)
     at /home/jamessan/drscheme-352/src/mzscheme/src/eval.c:6246
 #20 0xc005e4c4 in scheme_do_eval (obj=3D0x8010b380, num_rands=3D2,
     rands=3D0xefffd6cc, get_value=3D1)
     at /home/jamessan/drscheme-352/src/mzscheme/src/eval.c:4874
 #21 0xc006e5ae in apply_k ()
     at /home/jamessan/drscheme-352/src/mzscheme/src/fun.c:1539
 #22 0xc006e148 in top_level_do (k=3D0xc006e51c <apply_k>, eb=3D1,
     sj_start=3D0xefffd670)
     at /home/jamessan/drscheme-352/src/mzscheme/src/fun.c:1383
 #23 0xc006e26c in scheme_top_level_do (k=3D0xc006e51c <apply_k>, eb=3D1)
     at /home/jamessan/drscheme-352/src/mzscheme/src/fun.c:1428
 #24 0xc006e61e in _apply (rator=3D0x8010b380, num_rands=3D2, rands=3D0xefff=
 d6cc,
     multi=3D0, eb=3D1) at /home/jamessan/drscheme-352/src/mzscheme/src/fun.=
 c:1552
 #25 0xc006e648 in scheme_apply (rator=3D0x8010b380, num_rands=3D2,
     rands=3D0xefffd6cc)
     at /home/jamessan/drscheme-352/src/mzscheme/src/fun.c:1558
 #26 0xc0057b26 in call_compile_handler (form=3D0x801e3b98, immediate_eval=
 =3D1)
     at /home/jamessan/drscheme-352/src/mzscheme/src/eval.c:2965
 #27 0xc0058204 in compile_k ()
     at /home/jamessan/drscheme-352/src/mzscheme/src/eval.c:3100
 #28 0xc006e148 in top_level_do (k=3D0xc0057e64 <compile_k>, eb=3D0,
     sj_start=3D0xefffdb80)
     at /home/jamessan/drscheme-352/src/mzscheme/src/fun.c:1383
 #29 0xc006e26c in scheme_top_level_do (k=3D0xc0057e64 <compile_k>, eb=3D0)
     at /home/jamessan/drscheme-352/src/mzscheme/src/fun.c:1428
 #30 0xc00585aa in _compile (form=3D0x801e3fa4, env=3D0x800d9ea0, writeable=
 =3D0,
     for_eval=3D1, eb=3D0, rename=3D0)
     at /home/jamessan/drscheme-352/src/mzscheme/src/eval.c:3186
 #31 0xc0060ec0 in do_default_eval_handler (env=3D0x800d9ea0, argc=3D1,
     argv=3D0x800d6f30)
     at /home/jamessan/drscheme-352/src/mzscheme/src/eval.c:6156
 #32 0xc00612c8 in scheme_default_eval_handler (argc=3D1, argv=3D0x800d6f30)
     at /home/jamessan/drscheme-352/src/mzscheme/src/eval.c:6238
 #33 0xc005e4c4 in scheme_do_eval (obj=3D0x800ccf88, num_rands=3D1,
     rands=3D0x800d6f30, get_value=3D-1)
     at /home/jamessan/drscheme-352/src/mzscheme/src/eval.c:4874
 #34 0xc00717a2 in call_with_values (argc=3D2, argv=3D0x800d6f38)
     at /home/jamessan/drscheme-352/src/mzscheme/src/fun.c:2791
 #35 0xc005e4c4 in scheme_do_eval (obj=3D0x800ccea8, num_rands=3D2,
     rands=3D0x800d6f38, get_value=3D-1)
     at /home/jamessan/drscheme-352/src/mzscheme/src/eval.c:4874
 #36 0xc0074c62 in do_dyn_wind (d=3D0x801b5948)
     at /home/jamessan/drscheme-352/src/mzscheme/src/fun.c:4269
 #37 0xc00750b0 in scheme_dynamic_wind (pre=3D0xc0074c6e <pre_dyn_wind>,
     act=3D0xc0074c40 <do_dyn_wind>, post=3D0xc0074c86 <post_dyn_wind>,
     jmp_handler=3D0, data=3D0x801b5948)
     at /home/jamessan/drscheme-352/src/mzscheme/src/fun.c:4402
 #38 0xc0074d7a in dynamic_wind (c=3D3, argv=3D0x800d6f48)
     at /home/jamessan/drscheme-352/src/mzscheme/src/fun.c:4300
 #39 0xc005e4c4 in scheme_do_eval (obj=3D0x8010b5a8, num_rands=3D3,
     rands=3D0x800d6f48, get_value=3D-1)
     at /home/jamessan/drscheme-352/src/mzscheme/src/eval.c:4874
 #40 0xc0071e8a in scheme_call_ec (argc=3D1, argv=3D0x800d6f64)
     at /home/jamessan/drscheme-352/src/mzscheme/src/fun.c:2974
 #41 0xc005e4c4 in scheme_do_eval (obj=3D0x800cce70, num_rands=3D1,
     rands=3D0x800d6f64, get_value=3D-1)
     at /home/jamessan/drscheme-352/src/mzscheme/src/eval.c:4874
 #42 0xc005fd04 in scheme_do_eval (obj=3D0x801bd850, num_rands=3D0,
     rands=3D0xc0187ce4, get_value=3D-1)
     at /home/jamessan/drscheme-352/src/mzscheme/src/eval.c:5593
 #43 0xc0071e8a in scheme_call_ec (argc=3D1, argv=3D0x800d6f78)
     at /home/jamessan/drscheme-352/src/mzscheme/src/fun.c:2974
 #44 0xc005e4c4 in scheme_do_eval (obj=3D0x800cce70, num_rands=3D1,
     rands=3D0x800d6f78, get_value=3D-1)
     at /home/jamessan/drscheme-352/src/mzscheme/src/eval.c:4874
 #45 0xc0074c62 in do_dyn_wind (d=3D0x801b5ccc)
     at /home/jamessan/drscheme-352/src/mzscheme/src/fun.c:4269
 #46 0xc00750b0 in scheme_dynamic_wind (pre=3D0xc0074c6e <pre_dyn_wind>,
     act=3D0xc0074c40 <do_dyn_wind>, post=3D0xc0074c86 <post_dyn_wind>,
     jmp_handler=3D0, data=3D0x801b5ccc)
     at /home/jamessan/drscheme-352/src/mzscheme/src/fun.c:4402
 #47 0xc0074d7a in dynamic_wind (c=3D3, argv=3D0x800d6f84)
     at /home/jamessan/drscheme-352/src/mzscheme/src/fun.c:4300
 #48 0xc005e4c4 in scheme_do_eval (obj=3D0x8010b5a8, num_rands=3D3,
     rands=3D0x800d6f84, get_value=3D1)
     at /home/jamessan/drscheme-352/src/mzscheme/src/eval.c:4874
 #49 0xc006e5ae in apply_k ()
     at /home/jamessan/drscheme-352/src/mzscheme/src/fun.c:1539
 #50 0xc006e148 in top_level_do (k=3D0xc006e51c <apply_k>, eb=3D1,
     sj_start=3D0xeffff3ac)
     at /home/jamessan/drscheme-352/src/mzscheme/src/fun.c:1383
 #51 0xc006e26c in scheme_top_level_do (k=3D0xc006e51c <apply_k>, eb=3D1)
     at /home/jamessan/drscheme-352/src/mzscheme/src/fun.c:1428
 #52 0xc006e61e in _apply (rator=3D0x800dbd68, num_rands=3D0, rands=3D0x0, m=
 ulti=3D0,
     eb=3D1) at /home/jamessan/drscheme-352/src/mzscheme/src/fun.c:1552
 #53 0xc006e648 in scheme_apply (rator=3D0x800dbd68, num_rands=3D0, rands=3D=
 0x0)
     at /home/jamessan/drscheme-352/src/mzscheme/src/fun.c:1558
 #54 0x800036b4 in do_scheme_rep (env=3D0x800d9ea0)
     at /home/jamessan/drscheme-352/src/mzscheme/main.c:422
 #55 0x80001fec in finish_cmd_line_run (fa=3D0x801b4a80,
     repl=3D0x8000367a <do_scheme_rep>) at cmdline.inc:379
 #56 0x80003670 in cont_run (f=3D0x801b4a80)
     at /home/jamessan/drscheme-352/src/mzscheme/main.c:403
 #57 0x800034c2 in run_from_cmd_line (argc=3D0, _argv=3D0xeffff6d4,
     mk_basic_env=3D0x8000116c <scheme_basic_env>, cont_run=3D0x8000364e <co=
 nt_run>)
     at cmdline.inc:1169
 #58 0x8000362e in actual_main (argc=3D1, argv=3D0xeffff6d4)
     at /home/jamessan/drscheme-352/src/mzscheme/main.c:392
 #59 0xc0081708 in scheme_image_main (argc=3D1, argv=3D0xeffff6d4)
     at /home/jamessan/drscheme-352/src/mzscheme/src/image.c:770
 #60 0x800035d2 in main_after_dlls (argc=3D1, argv=3D0xeffff6d4)
     at /home/jamessan/drscheme-352/src/mzscheme/main.c:302
 #61 0x80003584 in main (argc=3D1, argv=3D0xeffff6d4)
     at /home/jamessan/drscheme-352/src/mzscheme/main.c:248
 
 --=20
 GPG Key: 1024D/61326D40 2003-09-02 James Vega <jamessan@debian.org>
 
 --fUYQa+Pmc3FrFX/N
 Content-Type: application/pgp-signature; name="signature.asc"
 Content-Description: Digital signature
 Content-Disposition: inline
 
 -----BEGIN PGP SIGNATURE-----
 Version: GnuPG v1.4.5 (GNU/Linux)
 
 iEYEARECAAYFAkT3KCIACgkQDb3UpmEybUC3jQCdEIY1HdhQNlqxBLiXVLYmrViQ
 CSYAmwfpcuuSg9f3m1mV1S+n3er82T9M
 =e/Cl
 -----END PGP SIGNATURE-----
 
 --fUYQa+Pmc3FrFX/N--
From: Matthew Flatt <mflatt@cs.utah.edu>
To: James Vega <jamessan@debian.org>
Cc: bugs@plt-scheme.org
Subject: Re: all/8250: define-syntax causes a segfault on m68k
Date: Mon, 4 Sep 2006 14:08:48 0800

 At Thu, 31 Aug 2006 01:01:54 -0400, James Vega wrote:
 > It's one of the Debian ports.  I can provide a backtrace if it'd be
 > useful.
 
 (I can't remember if I responded. I remember having computer trouble at
 a time I started to respond...)
 
 Yes, a backtrace would be helpful.
 
 Thanks,
 Matthew
 


State changed from "open" to "closed" by eli at Mon, 17 Jan 2011 17:47:22 -0500
Reason>>> closed as "obsolete" with respect to v5.0.99.6 and later; 
either the bug
is long-since fixed, the relevant code doesn't exist 
anymore, the
relevant platform hasn't been supported recently, or a new 
bug report is
needed if the problem really isn't fixed and someone 
actually cares

