From apache@plt-scheme.org Mon Apr 19 14:27:23 2004
Received: from champlain.ccs.neu.edu (champlain.ccs.neu.edu [127.0.0.1])
	by champlain.ccs.neu.edu (8.12.10/8.12.10) with ESMTP id i3JIRMkc013988
	for <bugs@plt-scheme.org>; Mon, 19 Apr 2004 14:27:23 -0400
Message-Id: <200404191827.i3JIRMmn013986@champlain.ccs.neu.edu>
Date: Mon, 19 Apr 2004 14:27:22 -0400
From: <grzegorz@pithekos.net>
To: bugs@plt-scheme.org
Subject: Error reading hash-table

>Number:         6827
>Category:       mzscheme
>Synopsis:       Error reading hash-table
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Mon Apr 19 14:30:00 -0400 2004
>Last-Modified:  Mon Apr 19 14:51:51 -0400 2004
>Originator:     Grzegorz ChrupaÅ‚a
>Organization:
plt
>Submitter-Id:   unknown
>Release:        206p1
>Environment:
linux-other
>Description:
I came across what looks like a bug in mzscheme 206p1 trying to write 
and read back hash-tables. The file ftp://ftp.pithekos.net/pithekos.net/map.dat is a hash-table that when 
read seems to contain values such as #<bad-value>. The attached file 
map.dat contains a hash table that triggers this.

Welcome to MzScheme version 206p1, Copyright (c) 2004 PLT Scheme, Inc.
> (define h (with-input-from-file "./map.dat" read))
> (hash-table-for-each h (lambda (k v)(split-path v)))
split-path: pathname contains a null character: user break
> (define h (with-input-from-file "./map.dat" read))
> (hash-table-for-each h (lambda (k v)(split-path v)))
>
The first time one reads it in mzscheme it gives the above error. Then 
the second time it doesn't. 
See some more examples of messages mzscheme gives with this file at: 
http://www.common-lisp.net/paste/display/707

All this doesn't happen with DrScheme.
>How-To-Repeat:
Put ftp://ftp.pithekos.net/pithekos.net/map.dat in the current directory.
Start mzscheme.
See the interaction at the REPL above.
>Fix:
>Audit-Trail:
Responsible changed from "nobody" to "mflatt" by mflatt at Mon, 19 Apr 2004 14:41:56 -0400
Reason>>> mz

From: Matthew Flatt <mflatt@cs.utah.edu>
To: grzegorz@pithekos.net, bugs@plt-scheme.org
Cc: 
Subject: Re: all/6827: Error reading hash-table
Date: Mon, 19 Apr 2004 12:49:18 -0600

 At Mon, 19 Apr 2004 14:30:01 -0400, grzegorz@pithekos.net wrote:
 > I came across what looks like a bug in mzscheme 206p1 trying to write 
 > and read back hash-tables.
 
 In read.c's read_hash() function, there's a call to read_list(). The
 8th argument is 1, which tells read_list() to use a special list stack,
 instead of allocating cons cells normally. That argument should be 0,
 instead, since the list is stored for later use.
 
 There's a second bad call to read_list(), which is a recursive call in
 read_list(). It's the call with mz_read_hash_elem as an argument. In
 that case, the 1 should be replaced by use_stack.
 
 Matthew
 
State changed from "open" to "closed" by mflatt at Mon, 19 Apr 2004 14:51:51 -0400
Reason>>> Fixed in exp-tagged and v299-tagged CVS.

Thanks for the report,
Matthew

