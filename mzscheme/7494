From apache@plt-scheme.org Wed Jul 13 12:52:32 2005
Received: from champlain.ccs.neu.edu (champlain.ccs.neu.edu [127.0.0.1])
	by champlain.ccs.neu.edu (8.12.10/8.12.10) with ESMTP id j6DGqTZS012634
	for <bugs@plt-scheme.org>; Wed, 13 Jul 2005 12:52:29 -0400
Message-Id: <200507131652.j6DGqTSa012632@champlain.ccs.neu.edu>
Date: Wed, 13 Jul 2005 12:52:29 -0400
From: jay@plt-scheme.org
To: bugs@plt-scheme.org
Subject: structures provided by provide/contract do not interact well with copy-struct

>Number:         7494
>Category:       mzscheme
>Synopsis:       structures provided by provide/contract do not interact well with copy-struct
>Class:          sw-bug
>Responsible:    robby
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Wed Jul 13 12:55:00 -0400 2005
>Closed-Date:    Thu May 16 23:33:50 -0400 2013
>Last-Modified:  Thu May 16 23:33:50 -0400 2013
>Originator:     Jay McCarthy
>Organization:
plt
>Submitter-Id:   unknown
>Release:        299.107-svn13jul2005
>Environment:
macosx "Darwin dhcp36-117.cs.brown.edu 8.1.0 Darwin Kernel Version 8.1.0: Tue May 10 18:16:08 PDT 2005; root:xnu-792.1.5.obj~4/RELEASE_PPC Power Macintosh powerpc" (ppc-macosx) (get-display-depth) = 32
Docs Installed:
(#<path:/Users/jay/Development/plt/src/plt/trunk/collects/doc/web-server> #<path:/Users/jay/Development/plt/src/plt/trunk/collects/doc/tour> #<path:/Users/jay/Development/plt/src/plt/trunk/collects/doc/tools> #<path:/Users/jay/Development/plt/src/plt/trunk/collects/doc/tex2page> #<path:/Users/jay/Development/plt/src/plt/trunk/collects/doc/teachpack> #<path:/Users/jay/Development/plt/src/plt/trunk/collects/doc/t-y-scheme> #<path:/Users/jay/Development/plt/src/plt/trunk/collects/doc/swindle> #<path:/Users/jay/Development/plt/src/plt/trunk/collects/doc/srfi> #<path:/Users/jay/Development/plt/src/plt/trunk/collects/doc/r5rs> #<path:/Users/jay/Development/plt/src/plt/trunk/collects/doc/profj-intermediate> #<path:/Users/jay/Development/plt/src/plt/trunk/collects/doc/profj-beginner> #<path:/Users/jay/Development/plt/src/plt/trunk/collects/doc/profj-advanced> #<path:/Users/jay/Development/plt/src/plt/trunk/collects/doc/plot> #<path:/Users/jay/Development/plt/src/plt/trunk/collects/doc/mzscheme> #<path:/Users/jay/Development/plt/src/plt/trunk/collects/doc/mzlib> #<path:/Users/jay/Development/plt/src/plt/trunk/collects/doc/mzc> #<path:/Users/jay/Development/plt/src/plt/trunk/collects/doc/mrlib> #<path:/Users/jay/Development/plt/src/plt/trunk/collects/doc/mred> #<path:/Users/jay/Development/plt/src/plt/trunk/collects/doc/misclib> #<path:/Users/jay/Development/plt/src/plt/trunk/collects/doc/intermediate-lambda> #<path:/Users/jay/Development/plt/src/plt/trunk/collects/doc/intermediate> #<path:/Users/jay/Development/plt/src/plt/trunk/collects/doc/insidemz> #<path:/Users/jay/Development/plt/src/plt/trunk/collects/doc/help> #<path:/Users/jay/Development/plt/src/plt/trunk/collects/doc/framework> #<path:/Users/jay/Development/plt/src/plt/trunk/collects/doc/foreign> #<path:/Users/jay/Development/plt/src/plt/trunk/collects/doc/drscheme> #<path:/Users/jay/Development/plt/src/plt/trunk/collects/doc/beginning-abbr> #<path:/Users/jay/Development/plt/src/plt/trunk/collects/doc/beginning> #<path:/Users/jay/Development/plt/src/plt!
 /trunk/c
ollects/doc/advanced>)
Collections:
((#<path:/Users/jay/Development/Projects> (#<path:.DS_Store> #<path:.svn> #<path:acl> #<path:applescript> #<path:automaton-workshop> #<path:ical> #<path:ical-todo> #<path:info-domain> #<path:ita> #<path:jscompiler> #<path:lambda-calculus> #<path:loyd> #<path:math> #<path:meta-help> #<path:moc> #<path:pfds> #<path:pierce> #<path:planet-submit> #<path:prefix> #<path:raid> #<path:sql-oo> #<path:sqlite> #<path:TODO.ooutline> #<path:web-components> #<path:web-movers> #<path:with-bindings> #<path:yppdb>)) (#<path:/Users/jay/Development/Projects> (#<path:.DS_Store> #<path:.svn> #<path:acl> #<path:applescript> #<path:automaton-workshop> #<path:ical> #<path:ical-todo> #<path:info-domain> #<path:ita> #<path:jscompiler> #<path:lambda-calculus> #<path:loyd> #<path:math> #<path:meta-help> #<path:moc> #<path:pfds> #<path:pierce> #<path:planet-submit> #<path:prefix> #<path:raid> #<path:sql-oo> #<path:sqlite> #<path:TODO.ooutline> #<path:web-components> #<path:web-movers> #<path:with-bindings> #<path:yppdb>)) (#<path:/Users/jay/Library/PLT Scheme/299.107/collects> ()) (#<path:/Users/jay/Development/plt/src/plt/trunk/collects> (#<path:.DS_Store> #<path:.svn> #<path:afm> #<path:algol60> #<path:browser> #<path:compiler> #<path:defaults> #<path:doc> #<path:drscheme> #<path:dynext> #<path:embedded-gui> #<path:eopl> #<path:errortrace> #<path:ffi> #<path:finish-install> #<path:framework> #<path:frtime> #<path:games> #<path:graphics> #<path:guibuilder> #<path:handin-client> #<path:handin-server> #<path:help> #<path:hierlist> #<path:honu> #<path:honu-module> #<path:htdch> #<path:htdp> #<path:html> #<path:icons> #<path:info-domain> #<path:lang> #<path:launcher> #<path:make> #<path:mred> #<path:mrflow> #<path:mrlib> #<path:mysterx> #<path:mzcom> #<path:mzlib> #<path:mzscheme> #<path:mztake> #<path:net> #<path:openssl> #<path:parser-tools> #<path:planet> #<path:plot> #<path:preprocessor> #<path:pretty-print> #<path:profj> #<path:profjBoxes> #<path:profjWizard> #<path:readline> #<path:reduction-semantics> #<path:repos-time-stamp> #<!
 path:set
up> #<path:sgl> #<path:sirmail> #<path:skipper> #<path:slatex> #<path:slibinit> #<path:slideshow> #<path:srfi> #<path:srpersist> #<path:ssax> #<path:stepper> #<path:string-constants> #<path:swindle> #<path:syntax> #<path:syntax-color> #<path:test-suite> #<path:tests> #<path:tex2page> #<path:texpict> #<path:trace> #<path:version> #<path:waterworld> #<path:web-server> #<path:xelda> #<path:xml>)))
Human Language: english
Teachpack filenames: ()
Computer Language: (("Professional Languages" "PLT" "Textual (MzScheme, includes R5RS)") #6(#t write mixed-fraction-e #f #t debug))
>Description:
See steps to reproduce and summary.

Its seems that some macro hackery will be needed to ensure that the new accessors created by provide/contract are module-or-top-identifier=? to the accessors in the struct info (which is not currently modified by provide/contract)
>How-To-Repeat:
Given the files:

struct.ss
---------
(module struct mzscheme
  (define-struct Type (F1 F2))
  (provide (struct Type (F1 F2))))

cstruct.ss
----------
(module cstruct mzscheme
  (require (lib "contract.ss"))
  (define-struct Type (F1 F2))
  (provide/contract 
   (struct Type 
           ([F1 symbol?] [F2 symbol?]))))

a.ss
----
(module a mzscheme
;  (require "struct.ss") ; Works
  (require "cstruct.ss") ; Doesn't work
  (require (lib "struct.ss"))
  
  (define A (make-Type 'F1 'F2))
  (write `(make-Type ,(Type-F1 A) ,(Type-F2 A)))
  
  (copy-struct Type A
               [Type-F1 'F1-new]))

a.ss will give the error:
copy-struct: accessor name not associated with the given structure type in: Type-F1

when used with cstruct.ss, but not with struct.ss
>Fix:
>Audit-Trail:
From: Robby Findler <robby@cs.uchicago.edu>
To: jay@plt-scheme.org, bugs@plt-scheme.org
Cc: mflatt@cs.utah.edu
Subject: Re: all/7494: structures provided by provide/contract do not interact well with copy-struct
Date: Wed, 13 Jul 2005 12:13:36 -0500

 At Wed, 13 Jul 2005 12:55:04 -0400, jay@plt-scheme.org wrote:
 > Its seems that some macro hackery will be needed to ensure that the
 > new accessors created by provide/contract are
 > module-or-top-identifier=? to the accessors in the struct info (which
 > is not currently modified by provide/contract)
 
 Yep, I think that's the right path.
 
 I have looked into this a little bit, but I ran into some kind of a
 problem and gave up. If you want to give it a try, have a look at
 mzlib/private/contract.ss. I won't be able to get to this one soon,
 sorry.
 
 Robby
 

Responsible changed from "nobody" to "robby" by robby at Sat, 16 Jul 2005 00:42:01 -0400
Reason>>> rbf

From: Robby Findler <robby@cs.uchicago.edu>
To: bugs@plt-scheme.org, jay@plt-scheme.org
Cc: Matthew Flatt <mflatt@cs.utah.edu>
Subject: Re: mzscheme/7494: structures provided by provide/contract do not interact well with copy-struct
Date: Fri, 15 Jul 2005 23:44:08 -0500

 I've fixed this so that you can at least use copy-struct, but when  
 you use it and abuse the contracts, the contract system blames (lib  
 "struct.ss"), not your module with the actual use. still looking into  
 that.
 
 Robby

State changed from "open" to "closed" by asumu at Thu, 16 May 2013 23:33:50 -0400
Reason>>> Appears to work fine in v5.3.4 using either `copy-struct` or 
`struct-copy`.

