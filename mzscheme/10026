From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Wed Jan 14 02:49:00 2009
Received: from rv-out-0506.google.com (rv-out-0506.google.com [209.85.198.229])
	by champlain.ccs.neu.edu (8.14.2/8.14.2) with ESMTP id n0E7mq9i027162
	for <bugs@bugs.plt-scheme.org>; Wed, 14 Jan 2009 02:48:52 -0500
Message-Id: <200901140748.n0E7mnU9027156@champlain.ccs.neu.edu>
Date: Wed, 14 Jan 2009 02:48:49 -0500
From: ryanc@ccs.neu.edu
To: bugs@plt-scheme.org
Subject: vector-copy! corrupts memory, causes seg fault

>Number:         10026
>Category:       mzscheme
>Synopsis:       vector-copy! corrupts memory, causes seg fault
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Wed Jan 14 02:52:01 -0500 2009
>Last-Modified:  Wed Jan 14 08:02:34 -0500 2009
>Originator:     Ryan Culpepper
>Organization:
plt
>Submitter-Id:   unknown
>Release:        4.1.3.10-svn13jan2009
>Environment:
unix "Linux artichoke 2.6.27-9-generic #1 SMP Thu Nov 20 21:57:00 UTC 2008 i686 GNU/Linux" (i386-linux/3m) (get-display-depth) = 24
Human Language: english
(current-memory-use) 53973580

Collections:
(("/home/ryan/.plt-scheme/4.1.3.10/collects" non-existent-path) ("/home/ryan/projects/plt/collects" "afm" "ffi" "net" "sgl" "xml" ".svn" "eopl" "file" "help" "honu" "htdp" "html" "lang" "lazy" "make" "r5rs" "r6rs" "mred" "plot" "rnrs" "srfi" "wxme" "framework" "2htdp" "teachpack" "handin-client" "mzscheme" "games" "icons" "htdch" "s-exp" "mrlib" "mzcom" "mzlib" "graphics" "profj" "redex" "setup" "tests" "trace" "typed" "test-engine" "combinator-parser" "waterworld" "preprocessor" "sirmail" "test-box-recovery" "handin-server" "tex2page" "texpict" "scribblings" "profjWizard" "stepper" "scribble" "typed-scheme" "web-server" "config" "compiler" "swindle" "dynext" "hierlist" "macro-debugger" "frtime" "defaults" "gui-debugger" "guibuilder" "drscheme" "syntax-color" "srpersist" "planet" "mysterx" "errortrace" "scheme" "slatex" "syntax" "version" "algol60" "parser-tools" "openssl" "embedded-gui" "slideshow" "repos-time-stamp" "info-domain" "readline" "launcher" "string-constants" "b!
 rowser"))
Computer Language: (("Module") (#(#t write mixed-fraction-e #f #t debug) (default) #() "#lang scheme\n" #t))
>Description:
'vector-copy!' sometimes corrupts memory. Specifically, it seems to write an invalid Scheme value into one of the vector's slots.

In the code below, I describe what happens at the mzscheme repl. Running the code below in DrScheme also produces seg faults. My original program, however, did not produce a seg fault; rather, the 'vector-copy!' call raised an out-of-bounds exception where the upper bound was a negative number.
>How-To-Repeat:
Here's the setup:

  (define src (vector 1 2))
  (define dest (vector #f #f))
  (vector-copy! dest 1 src 2)

Evaluating any of the following (using the repl's implicit printer or calling 'write' explicitly) result in a seg fault with core dump:

  dest
  (vector->list dest)
  (write dest)
  (write (vector->list dest))
  (write (vector-ref dest 1))
 
The following do not trigger the seg fault:

  (vector-length dest)       ;; => 2
  (vector-ref dest 0)        ;; => #f
  (void (vector->list dest)) ;; => void
  (void (vector-ref dest 1)  ;; => void

Oddly, evaluating the following at the repl causes mzscheme to exit, but silently. No seg fault message.

  (vector-ref dest 1)

The problem goes away if the 'src-end' argument to 'vector-copy!' is given explicitly.
>Fix:
>Audit-Trail:
State changed from "open" to "closed" by mflatt at Wed, 14 Jan 2009 08:02:34 -0500
Reason>>> fixed in svn

