From apache@plt-scheme.org Thu Feb 17 16:51:33 2005
Received: from champlain.ccs.neu.edu (champlain.ccs.neu.edu [127.0.0.1])
	by champlain.ccs.neu.edu (8.12.10/8.12.10) with ESMTP id j1HLpWnN032092
	for <bugs@plt-scheme.org>; Thu, 17 Feb 2005 16:51:32 -0500
Message-Id: <200502172151.j1HLpW97032090@champlain.ccs.neu.edu>
Date: Thu, 17 Feb 2005 16:51:32 -0500
From: ryanc@ccs.neu.edu
To: bugs@plt-scheme.org
Subject: cannot marshall path objects in compiled code

>Number:         7242
>Category:       mzscheme
>Synopsis:       cannot marshall path objects in compiled code
>Class:          sw-bug
>Responsible:    robby
>Notify-List:    mflatt@plt-scheme.org
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Thu Feb 17 16:55:00 -0500 2005
>Last-Modified:  Tue Mar 15 08:45:00 -0500 2005
>Originator:     Ryan Culpepper
>Organization:
plt
>Submitter-Id:   unknown
>Release:        299.30-cvs10feb2005
>Environment:
linux-redhat
>Description:
I get the following error when compiling code containing compile-time path objects (which are apparently considered 3d syntax). Is this intended, or is this an oversight?

write: cannot marshal constant that is embedded in compiled code: #<path:/home/ryan/assert-test.ss>
>How-To-Repeat:
(define-syntax x
  (lambda (stx) (datum->syntax-object #'here (string->path "file"))))
(x)
(write (compile #'(x)))
>Fix:
>Audit-Trail:
From: Robby Findler <robby@cs.uchicago.edu>
To: ryanc@ccs.neu.edu, bugs@plt-scheme.org
Cc: mflatt@cs.utah.edu, jacobm@cs.uchicago.edu
Subject: Re: all/7242: cannot marshall path objects in compiled code
Date: Thu, 17 Feb 2005 15:58:05 -0600

 Apparently, Jacob didn't forward you the whole conversation we had.
 Yes, this is intended. 
 
 The problem is that it's not clear how to marshall them automatically.
 There are two choices: strings and bytes. If you put a string into the
 expansion, you use the local set at compilation time. If you use bytes
 (and then later convert to a string when the error occurs) you get the
 local set at runtime.
 
 Matthew thinks that the first one is probably better (I have no clue).
 
 Robby
 
 At Thu, 17 Feb 2005 16:55:01 -0500, ryanc@ccs.neu.edu wrote:
 > A new problem report is waiting at
 >   http://bugs.plt-scheme.org/query/?cmd=view&pr=7242
 > 
 > Reported by Ryan Culpepper for release: 299.30-cvs10feb2005
 > 
 > *** Description:
 > I get the following error when compiling code containing compile-time path objects (which are 
 > apparently considered 3d syntax). Is this intended, or is this an oversight?
 > 
 > write: cannot marshal constant that is embedded in compiled code: #<path:/home/ryan/assert-test.ss>
 > 
 > *** How to repeat:
 > (define-syntax x
 >   (lambda (stx) (datum->syntax-object #'here (string->path "file"))))
 > (x)
 > (write (compile #'(x)))
 > 
 > *** Environment:
 > linux-redhat
From: Ryan Michael Culpepper <ryanc@ccs.neu.edu>
To: Robby Findler <robby@cs.uchicago.edu>
Cc: bugs@plt-scheme.org, mflatt@cs.utah.edu, jacobm@cs.uchicago.edu
Subject: Re: all/7242: cannot marshall path objects in compiled code
Date: Thu, 17 Feb 2005 17:11:18 -0500 (EST)

 On Thu, 17 Feb 2005, Robby Findler wrote:
 
 > Apparently, Jacob didn't forward you the whole conversation we had.
 > Yes, this is intended.
 >
 > The problem is that it's not clear how to marshall them automatically.
 > There are two choices: strings and bytes. If you put a string into the
 > expansion, you use the local set at compilation time. If you use bytes
 > (and then later convert to a string when the error occurs) you get the
 > local set at runtime.
 >
 > Matthew thinks that the first one is probably better (I have no clue).
 
 Okay, thanks for the update. I'll change the SchemeUnit
 macros.
 
 Ryan
From: Robby Findler <robby@cs.uchicago.edu>
To: Ryan Michael Culpepper <ryanc@ccs.neu.edu>
Cc: bugs@plt-scheme.org, mflatt@cs.utah.edu, jacobm@cs.uchicago.edu
Subject: Re: all/7242: cannot marshall path objects in compiled code
Date: Thu, 17 Feb 2005 16:58:25 -0600

 I wrote "local" twice when I should have written "locale". Oops!
 
 Robby
 
 At Thu, 17 Feb 2005 17:11:18 -0500 (EST), Ryan Michael Culpepper wrote:
 > On Thu, 17 Feb 2005, Robby Findler wrote:
 > 
 > > Apparently, Jacob didn't forward you the whole conversation we had.
 > > Yes, this is intended.
 > >
 > > The problem is that it's not clear how to marshall them automatically.
 > > There are two choices: strings and bytes. If you put a string into the
 > > expansion, you use the local set at compilation time. If you use bytes
 > > (and then later convert to a string when the error occurs) you get the
 > > local set at runtime.
 > >
 > > Matthew thinks that the first one is probably better (I have no clue).
 > 
 > Okay, thanks for the update. I'll change the SchemeUnit
 > macros.
 > 
 > Ryan

Responsible changed from "nobody" to "robby" by eli at Mon, 14 Mar 2005 17:25:15 -0500
Reason>>> mzscheme -- robby, I'm moving it to you (with matthew on the
notify list) because it seems like this is not a bug and
should be closed.

State changed from "open" to "closed" by robby at Tue, 15 Mar 2005 08:45:00 -0500
Reason>>> .

