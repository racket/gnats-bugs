From nobody@cs.rice.edu  Sat Aug  4 18:20:29 2001
Return-Path: <nobody@cs.rice.edu>
Received: from web.cs.rice.edu (web.cs.rice.edu [128.42.1.163])
	by cs.rice.edu (Postfix) with ESMTP id BC287180B
	for <plt-gnats@cs.rice.edu>; Sat,  4 Aug 2001 18:20:28 -0500 (CDT)
Message-Id: <200108042320.SAA16389@web.cs.rice.edu>
Date: Sat, 4 Aug 2001 18:20:27 -0500 (CDT)
From: eli@cs.cornell.edu
Reply-To: eli@cs.cornell.edu
To: plt-gnats@cs.rice.edu
Subject: Possible bug with syntax-case? 

>Number:         2008
>Category:       mzscheme
>Synopsis:       Possible bug with syntax-case?
>Confidential:   no
>Severity:       non-critical
>Priority:       low
>Responsible:    mflatt
>State:          closed
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Sat Aug  4 23:30:01 GMT 2001
>Last-Modified:  Tue Aug 21 16:51:01 CDT 2001
>Originator:     Eli Barzilay
>Organization:
titan
>Release:        199.19
>Environment:
unknown
>Description:
I don't fully understand things yet, but it looks like this is a bug:

  (module foo mzscheme
    (provide foo)
    (define-syntax foo
      (lambda (stx)
        (syntax-case stx ()
          ((foo x)   (syntax 1))
          ((foo x 1) (syntax 2))
          (foo       (syntax 3))))))
  (require foo)
  (printf "-> ~s\n" (foo 11 22))

It works fine if the pattern doesn't have a 1, or if it is invoked with 1
as the second argument.

>How-To-Repeat:

>Fix:

>Audit-Trail:

From: Matthew Flatt <mflatt@cs.utah.edu>
To: eli@cs.cornell.edu
Cc: plt-gnats@cs.rice.edu
Subject: Re: all/2008: Possible bug with syntax-case? 
Date: Sat, 4 Aug 2001 20:52:39 -0600 (MDT)

 Quoting eli@cs.cornell.edu:
 > I don't fully understand things yet, but it looks like this is a bug:
 > 
 >   (module foo mzscheme
 >     (provide foo)
 >     (define-syntax foo
 >       (lambda (stx)
 >         (syntax-case stx ()
 >           ((foo x)   (syntax 1))
 >           ((foo x 1) (syntax 2))
 >           (foo       (syntax 3))))))
 >   (require foo)
 >   (printf "-> ~s\n" (foo 11 22))
 > 
 > It works fine if the pattern doesn't have a 1, or if it is invoked with 1
 > as the second argument.
 
 Can you explain what you saw and what you expected to see? I expected
 and saw 3.
 
 Thanks,
 Matthew

Responsible-Changed-From-To: steck->mflatt
Responsible-Changed-By: mflatt
Responsible-Changed-When: Tue Aug 21 16:50:57 2001
Responsible-Changed-Why:

State-Changed-From-To: open-closed
State-Changed-By: mflatt
State-Changed-When: Tue Aug 21 16:51:00 2001
State-Changed-Why:


 
>Unformatted:
