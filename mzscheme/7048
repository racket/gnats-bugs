From apache@plt-scheme.org Wed Sep 29 16:38:37 2004
Received: from champlain.ccs.neu.edu (champlain.ccs.neu.edu [127.0.0.1])
	by champlain.ccs.neu.edu (8.12.10/8.12.10) with ESMTP id i8TKcb0u031230
	for <bugs@plt-scheme.org>; Wed, 29 Sep 2004 16:38:37 -0400
Message-Id: <200409292038.i8TKcb8T031228@champlain.ccs.neu.edu>
Date: Wed, 29 Sep 2004 16:38:37 -0400
From: ryanc@ccs.neu.edu
To: bugs@plt-scheme.org
Subject: (provide (all-defined)), define-datatype, uninterned symbol identifiers

>Number:         7048
>Category:       mzscheme
>Synopsis:       (provide (all-defined)), define-datatype, uninterned symbol identifiers
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       critical
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Wed Sep 29 16:40:00 -0400 2004
>Last-Modified:  Mon May 05 13:44:38 -0400 2008
>Originator:     Ryan Culpepper
>Organization:
plt
>Submitter-Id:   unknown
>Release:        208
>Environment:
windows-xp
>Description:
Two problems:

If a module which contains (define id ___) where id is an identifier built using an *uninterned* symbol, then (provide (all-defined)) doesn't provide *any* variable bindings (define-values). It does provide macro bindings (define-syntaxes).

The (lib "datatype.ss" "eopl") define-datatype form expands into definitions of the above flavor. So (provide (all-defined)) doesn't work in any module which uses define-datatype.

>How-To-Repeat:
The following modules exhibit the problems. The first one uses (lib "datatype.ss" "eopl"). Require break/datatype--any? is unbound. The second constructs a symbol from an uninterned symbol. Require break/uninterned--x is undefined, but y is.

(module break/datatype mzscheme
  (require (lib "datatype.ss" "eopl"))
  (provide (all-defined))
  (define (any? x) #t)
  (define-datatype rlist rlist?
                   [rcons (head any?) (tail rlist?)]
                   [rnull]))

(module break/uninterned mzscheme
  (define-syntax (define-unsym stx)
    (with-syntax ([unsym (datum->syntax-object stx (string->uninterned-symbol "unsym"))])
      #'(define unsym 'foo)))
  (define-unsym)
  (define x 1)
  (define-syntax y (syntax-rules ()))
  (provide (all-defined)))

>Fix:
>Audit-Trail:
Responsible changed from "nobody" to "mflatt" by mflatt at Sat, 02 Oct 2004 22:32:37 -0400
Reason>>> mz

State changed from "open" to "closed" by mflatt at Sat, 02 Oct 2004 22:32:37 -0400
Reason>>> Fixed in exp and v299. Thanks for the detailed
report!

Matthew


