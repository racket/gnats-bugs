From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Wed Feb 27 21:23:54 2008
Received: from nf-out-0910.google.com (nf-out-0910.google.com [64.233.182.191])
	by champlain.ccs.neu.edu (8.13.8/8.13.7) with ESMTP id m1S2NsVM005472
	for <bugs@bugs.plt-scheme.org>; Wed, 27 Feb 2008 21:23:54 -0500
Message-Id: <200802280223.m1S2Nmi6005467@champlain.ccs.neu.edu>
Date: Wed, 27 Feb 2008 21:23:48 -0500
From: eli@barzilay.org
To: bugs@plt-scheme.org
Subject: expand-user-path and syntaxes

>Number:         9227
>Category:       mzscheme
>Synopsis:       expand-user-path and syntaxes
>Class:          change-request
>Responsible:    mflatt
>Severity:       non-critical
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Wed Feb 27 21:25:02 -0500 2008
>Last-Modified:  Tue Jun 03 13:40:19 -0400 2008
>Originator:     Eli Barzilay
>Organization:
plt
>Submitter-Id:   unknown
>Release:        3.99.0.9
>Environment:
linux-fedora
>Description:
(I'm marking this as a change request.)

The default of not expanding any paths works fine in general, but
I just encountered a case where it's inconveniet for private code:

  (require (file "~/scheme/nest.ss"))

doesn't work.  This is inconveniet since I have to type the full
path, but more than that -- if I happen to have my home directory
mounted in different places on different machines, then I will not
be able to write a require that actually works.

Solutions that I can think of:

1. Always `expand-user-path' the file spec.  This would make it
   continue to behave like people expect it to, and if someone
   really wants to use a `~' directory, then they can use the usual
   "./~/...".  (But see below.)

1a. Do the same as #1, but also forbid using relative paths in a
    (file ...) spec.  After all, if you want it relative to the
    source file, then don't use (file ...).  This has the obvious
    disadvantage of not being able to refer to files with weird
    names relatively.  (Like (file "me\nhacker.ss"))

2. Add another (file~ ...) spec that is like (file ...) but expands
   user directories.

2a. Do the same as #1a, add another (file* ...) spec that is like
    (file ...) but is always relative.

(FWIW, 2a sounds like the best option to me.)

One last note: this will be a problem in other places were a literal
path string is expected, not an expression.
>How-To-Repeat:
>Fix:
>Audit-Trail:
State changed from "open" to "closed" by eli at Tue, 03 Jun 2008 13:40:19 -0400
Reason>>> fixed

