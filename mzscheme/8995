From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Mon Oct 15 19:50:41 2007
Received: from ug-out-1314.google.com (ug-out-1314.google.com [66.249.92.171])
	by champlain.ccs.neu.edu (8.13.8/8.13.7) with ESMTP id l9FNofUr030326
	for <bugs@bugs.plt-scheme.org>; Mon, 15 Oct 2007 19:50:41 -0400
Message-Id: <200710152350.l9FNoaMr030321@champlain.ccs.neu.edu>
Date: Mon, 15 Oct 2007 19:50:36 -0400
From: jacobm@cs.uchicago.edu
To: bugs@plt-scheme.org
Subject: file.ss find-relative-path docs don't agree with behavior

>Number:         8995
>Category:       mzscheme
>Synopsis:       file.ss find-relative-path docs don't agree with behavior
>Class:          doc-bug
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Mon Oct 15 19:55:01 -0400 2007
>Closed-Date:    Tue Oct 16 08:10:04 -0400 2007
>Last-Modified:  Tue Oct 16 08:15:01 -0400 2007
>Originator:     Jacob Matthews
>Organization:
plt
>Submitter-Id:   unknown
>Release:        371.3-svn11oct2007
>Environment:
macosx "Darwin dhcp-164-32.cs.uchicago.edu 8.10.1 Darwin Kernel Version 8.10.1: Wed May 23 16:33:00 PDT 2007; root:xnu-792.22.5~1/RELEASE_I386 i386 i386" (i386-macosx/3m) (get-display-depth) = 32
Docs Installed:
(("/Users/jacobm/svn/plt/doc" "r5rs" "mzscheme" "mred" "help" "tour" "drscheme" "srfi" "mzlib" "misclib" "mrlib" "framework" "foreign" "mzc" "tools" "insidemz" "web-server" "swindle" "plot" "gui" "guide" "quick" "reference" "release-notes" "scribble" "t-y-scheme" "tex2page" "beginning" "beginning-abbr" "intermediate" "intermediate-lambda" "advanced" "teachpack" "teachpack-htdc" "profj-beginner" "profj-intermediate" "profj-intermediate-access" "profj-advanced"))
Human Language: english
(current-memory-use) 131217524

Collections:
(("/Users/jacobm/Library/PLT Scheme/371.3/collects" non-existent-path) ("/Users/jacobm/svn/plt/collects" ".svn" "afm" "algol60" "big" "browser" "combinator-parser" "compiler" "config" "defaults" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "framework" "frtime" "games" "graphics" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu-module" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrflow" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "mztake" "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profj" "profjWizard" "r5rs" "r6rs" "readline" "repos-time-stamp" "scribble" "scribblings" "setup" "sgl" "sirmail" "skipper" "slatex" "slideshow" "srfi" "srpersist" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "tests" "tex2page" "texpict" "trace" "version" "waterworld" "web-server" "wxme" "xelda" "xml"))
Computer Language: (("Professional Languages" "(module ...)") (#6(#t write mixed-fraction-e #f #t debug) (default) #0()))
>Description:
The documentation for find-relative-path in file.ss says:

"
(find-relative-path basepath path)      PROCEDURE 

... If path is not a proper subpath of basepath (i.e., a subpath that is strictly longer), path is returned."

But: 

> (find-relative-path (build-path "/Users/jacobm/svn")
                      (build-path "/Users/jacobm"))
#<path:..>

Am I just misunderstanding what the docs say, or do they say that this ought to return #<path:/Users/jacobm> ?
>How-To-Repeat:
[See description.]
>Fix:
>Audit-Trail:
From: "Robby Findler" <robby@cs.uchicago.edu>
To: jacobm@cs.uchicago.edu, bugs@plt-scheme.org
Cc: "Matthew Flatt" <mflatt@cs.utah.edu>
Subject: Re: [plt-bug] all/8995: file.ss find-relative-path docs don't agree with behavior
Date: Mon, 15 Oct 2007 20:51:56 -0500

 Maybe you have the arguments backward? My reading of the docs you
 quoted suggests that your example doesn't apply to it.
 
 Robby
 
 On 10/15/07, jacobm@cs.uchicago.edu <jacobm@cs.uchicago.edu> wrote:
 > A new problem report is waiting at
 >   http://bugs.plt-scheme.org/query/?cmd=view&pr=8995
 >
 > Reported by Jacob Matthews for release: 371.3-svn11oct2007
 >
 > *** Description:
 > The documentation for find-relative-path in file.ss says:
 >
 > "
 > (find-relative-path basepath path)      PROCEDURE
 >
 > ... If path is not a proper subpath of basepath (i.e., a subpath that is strictly longer), path is returned."
 >
 > But:
 >
 > > (find-relative-path (build-path "/Users/jacobm/svn")
 >                       (build-path "/Users/jacobm"))
 > #<path:..>
 >
 > Am I just misunderstanding what the docs say, or do they say that this ought to return #<path:/Users/jacobm> ?
 >
 > *** How to repeat:
 > [See description.]
 >
 > *** Environment:
 > macosx "Darwin dhcp-164-32.cs.uchicago.edu 8.10.1 Darwin Kernel Version 8.10.1: Wed May 23 16:33:00 PDT 2007; root:xnu-792.22.5~1/RELEASE_I386 i386 i386" (i386-macosx/3m) (get-display-depth) = 32
 > Docs Installed:
 > (("/Users/jacobm/svn/plt/doc" "r5rs" "mzscheme" "mred" "help" "tour" "drscheme" "srfi" "mzlib" "misclib" "mrlib" "framework" "foreign" "mzc" "tools" "insidemz" "web-server" "swindle" "plot" "gui" "guide" "quick" "reference" "release-notes" "scribble" "t-y-scheme" "tex2page" "beginning" "beginning-abbr" "intermediate" "intermediate-lambda" "advanced" "teachpack" "teachpack-htdc" "profj-beginner" "profj-intermediate" "profj-intermediate-access" "profj-advanced"))
 > Human Language: english
 > (current-memory-use) 131217524
 >
 > Collections:
 > (("/Users/jacobm/Library/PLT Scheme/371.3/collects" non-existent-path) ("/Users/jacobm/svn/plt/collects" ".svn" "afm" "algol60" "big" "browser" "combinator-parser" "compiler" "config" "defaults" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "framework" "frtime" "games" "graphics" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu-module" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrflow" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "mztake" "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profj" "profjWizard" "r5rs" "r6rs" "readline" "repos-time-stamp" "scribble" "scribblings" "setup" "sgl" "sirmail" "skipper" "slatex" "slideshow" "srfi" "srpersist" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "tests" "tex2page" "texpict" "trace" "version" "waterworld" "web-server" "wxme" "xelda" "xml"))
 > Computer Language: (("Professional Languages" "(module ...)") (#6(#t write mixed-fraction-e #f #t debug) (default) #0()))
 >
 >
From: "Jacob Matthews" <jacobm@cs.uchicago.edu>
To: "Robby Findler" <robby@cs.uchicago.edu>
Cc: bugs@plt-scheme.org, "Matthew Flatt" <mflatt@cs.utah.edu>
Subject: Re: [plt-bug] all/8995: file.ss find-relative-path docs don't agree with behavior
Date: Mon, 15 Oct 2007 21:18:40 -0500

 On 10/15/07, Robby Findler <robby@cs.uchicago.edu> wrote:
 > Maybe you have the arguments backward? My reading of the docs you
 > quoted suggests that your example doesn't apply to it.
 
 I don't think so:
 
 (let ([basepath (build-path "/Users/jacobm/svn")]
       [path     (build-path "/Users/jacobm")])
   ;; Docs: "... If path is not ... a subpath [of basepath] that is
 strictly longer ... path is returned."
   ;; Here path is not a subpath of basepath that is strictly longer.
 It is a superpath, and it is strictly shorter.
   ;; Thus I expect path to be returned. But:
   (equal? (find-relative-path basepath path) path)
   ;; returns false.
   )
 
 
 In any event, even if I am getting it backwards, that means the
 problem pops up when you flip the argument order (i.e. in neither
 argument order does find-relative-path return either of its
 arguments).
 
 -jacob
 
 > On 10/15/07, jacobm@cs.uchicago.edu <jacobm@cs.uchicago.edu> wrote:
 > > A new problem report is waiting at
 > >   http://bugs.plt-scheme.org/query/?cmd=view&pr=8995
 > >
 > > Reported by Jacob Matthews for release: 371.3-svn11oct2007
 > >
 > > *** Description:
 > > The documentation for find-relative-path in file.ss says:
 > >
 > > "
 > > (find-relative-path basepath path)      PROCEDURE
 > >
 > > ... If path is not a proper subpath of basepath (i.e., a subpath that is strictly longer), path is returned."
 > >
 > > But:
 > >
 > > > (find-relative-path (build-path "/Users/jacobm/svn")
 > >                       (build-path "/Users/jacobm"))
 > > #<path:..>
 > >
 > > Am I just misunderstanding what the docs say, or do they say that this ought to return #<path:/Users/jacobm> ?
 > >
 > > *** How to repeat:
 > > [See description.]
 > >
 > > *** Environment:
 > > macosx "Darwin dhcp-164-32.cs.uchicago.edu 8.10.1 Darwin Kernel Version 8.10.1: Wed May 23 16:33:00 PDT 2007; root:xnu-792.22.5~1/RELEASE_I386 i386 i386" (i386-macosx/3m) (get-display-depth) = 32
 > > Docs Installed:
 > > (("/Users/jacobm/svn/plt/doc" "r5rs" "mzscheme" "mred" "help" "tour" "drscheme" "srfi" "mzlib" "misclib" "mrlib" "framework" "foreign" "mzc" "tools" "insidemz" "web-server" "swindle" "plot" "gui" "guide" "quick" "reference" "release-notes" "scribble" "t-y-scheme" "tex2page" "beginning" "beginning-abbr" "intermediate" "intermediate-lambda" "advanced" "teachpack" "teachpack-htdc" "profj-beginner" "profj-intermediate" "profj-intermediate-access" "profj-advanced"))
 > > Human Language: english
 > > (current-memory-use) 131217524
 > >
 > > Collections:
 > > (("/Users/jacobm/Library/PLT Scheme/371.3/collects" non-existent-path) ("/Users/jacobm/svn/plt/collects" ".svn" "afm" "algol60" "big" "browser" "combinator-parser" "compiler" "config" "defaults" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "framework" "frtime" "games" "graphics" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu-module" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrflow" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "mztake" "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profj" "profjWizard" "r5rs" "r6rs" "readline" "repos-time-stamp" "scribble" "scribblings" "setup" "sgl" "sirmail" "skipper" "slatex" "slideshow" "srfi" "srpersist" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "tests" "tex2page" "texpict" "trace" "version" "waterworld" "web-server" "wxme" "xelda" "xml"))
 > > Computer Language: (("Professional Languages" "(module ...)") (#6(#t write mixed-fraction-e #f #t debug) (default) #0()))
 > >
 > >
 >
From: "Robby Findler" <robby@cs.uchicago.edu>
To: "Jacob Matthews" <jacobm@cs.uchicago.edu>
Cc: bugs@plt-scheme.org, "Matthew Flatt" <mflatt@cs.utah.edu>
Subject: Re: [plt-bug] all/8995: file.ss find-relative-path docs don't agree with behavior
Date: Mon, 15 Oct 2007 21:24:38 -0500

 I read the docs as saying "If the condition A holds, then path is
 returned" (where "path" refers to the second argument of the
 function).
 
 The condition A is "If path is not a proper subpath of basepath", ie
 "If the second argument is not a proper subpath of the first
 argument".
 
 Going from your first message, the second argument IS a proper subpath
 of the first argument, so this condition doesn't apply.
 
 Robby
From: "Robby Findler" <robby@cs.uchicago.edu>
To: "Jacob Matthews" <jacobm@cs.uchicago.edu>
Cc: bugs@plt-scheme.org, "Matthew Flatt" <mflatt@cs.utah.edu>
Subject: Re: [plt-bug] all/8995: file.ss find-relative-path docs don't agree with behavior
Date: Mon, 15 Oct 2007 21:38:57 -0500

 I think I'll wait until Matthew speaks up now.
 
 But, the "not" makes the clarifying comment a little bit less than
 clarifying, I think. :) Anyways, "/a/b/c" is a proper subpath of
 "a/b/c/d", I'm pretty sure.
 
 I also agree that one of the argument orders should probably have
 returned the input.
 
 Robby
 
 On 10/15/07, Jacob Matthews <jacobm@cs.uchicago.edu> wrote:
 > On 10/15/07, Robby Findler <robby@cs.uchicago.edu> wrote:
 >
 > > Going from your first message, the second argument IS a proper subpath
 > > of the first argument, so this condition doesn't apply.
 >
 > No it isn't. A proper subpath is longer than basepath (according to
 > the quoted docs). "/Users/jacobm" is not longer than
 > "/Users/jacobm/svn". Hence it is not a proper subpath. (I think you're
 > thinking "A is a subpath of B" means "A is a prefix of B" but the
 > clarifying comment in the docs says the opposite.)
 >
 > In any event, though, surely you at least agree that whatever the
 > property of being a proper subpath is, we can't have BOTH that
 > "/Users/jacobm" is a proper subpath of "/Users/jacobm/svn" AND
 > "/Users/jacobm/svn" is a proper subpath of "/Users/jacobm". Thus for
 > at least one of those argument orders we must have that
 > find-relative-path returns one of its inputs. It does not. Try both
 > orders and you'll see; with the order I sent you get #<path:".."> and
 > if you switch orders you get #<path:"svn">.
 >
 > -jacob
 >
From: "Jacob Matthews" <jacobm@cs.uchicago.edu>
To: "Robby Findler" <robby@cs.uchicago.edu>
Cc: bugs@plt-scheme.org, "Matthew Flatt" <mflatt@cs.utah.edu>
Subject: Re: [plt-bug] all/8995: file.ss find-relative-path docs don't agree with behavior
Date: Mon, 15 Oct 2007 21:35:12 -0500

 On 10/15/07, Robby Findler <robby@cs.uchicago.edu> wrote:
 
 > Going from your first message, the second argument IS a proper subpath
 > of the first argument, so this condition doesn't apply.
 
 No it isn't. A proper subpath is longer than basepath (according to
 the quoted docs). "/Users/jacobm" is not longer than
 "/Users/jacobm/svn". Hence it is not a proper subpath. (I think you're
 thinking "A is a subpath of B" means "A is a prefix of B" but the
 clarifying comment in the docs says the opposite.)
 
 In any event, though, surely you at least agree that whatever the
 property of being a proper subpath is, we can't have BOTH that
 "/Users/jacobm" is a proper subpath of "/Users/jacobm/svn" AND
 "/Users/jacobm/svn" is a proper subpath of "/Users/jacobm". Thus for
 at least one of those argument orders we must have that
 find-relative-path returns one of its inputs. It does not. Try both
 orders and you'll see; with the order I sent you get #<path:".."> and
 if you switch orders you get #<path:"svn">.
 
 -jacob

State changed from "open" to "closed" by mflatt at Tue, 16 Oct 2007 08:10:04 -0400
Reason>>> Docs fixed. (The mismatch goes back at least as far
as the SVN repository.)

From: Matthew Flatt <mflatt@cs.utah.edu>
To: jacobm@cs.uchicago.edu, bugs@plt-scheme.org
Cc: robby@plt-scheme.org
Subject: Re: [plt-bug] all/8995: file.ss find-relative-path docs don't agree with behavior
Date: Tue, 16 Oct 2007 06:04:59 -0600

 At Mon, 15 Oct 2007 19:55:01 -0400, jacobm@cs.uchicago.edu wrote:
 > The documentation for find-relative-path in file.ss says:
 > 
 > "
 > (find-relative-path basepath path)      PROCEDURE 
 > 
 > ... If path is not a proper subpath of basepath (i.e., a subpath that is 
 > strictly longer), path is returned."
 > 
 > But: 
 > 
 > > (find-relative-path (build-path "/Users/jacobm/svn")
 >                       (build-path "/Users/jacobm"))
 > #<path:..>
 > 
 > Am I just misunderstanding what the docs say, or do they say that this ought 
 > to return #<path:/Users/jacobm> ?
 
 The docs are wrong. The second `path' is returned unmodified only when
 the two paths have a different root (which is possible only under
 Windows).
 
 Matthew
 
