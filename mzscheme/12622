From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Thu Mar  8 11:21:40 2012
Received: from mail-vw0-f44.google.com (mail-vw0-f44.google.com [209.85.212.44])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id q28GLaqs027020
	for <bugs@bugs.plt-scheme.org>; Thu, 8 Mar 2012 11:21:36 -0500
Message-Id: <201203081621.q28GLXDD027013@champlain.ccs.neu.edu>
Date: Thu, 8 Mar 2012 11:21:33 -0500
From: cce@ccs.neu.edu
To: bugs@racket-lang.org
Subject: identifier binding somehow changed by syntax-local-introduce

>Number:         12622
>Category:       mzscheme
>Synopsis:       identifier binding somehow changed by syntax-local-introduce
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Thu Mar 08 11:24:01 -0500 2012
>Last-Modified:  Wed Apr 18 15:17:14 -0400 2012
>Originator:     Carl Eastlund
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.2.1.7
>Environment:
MacIntel / Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:5.0.1) Gecko/20100101 Firefox/5.0.1
>Description:
Somehow the below program is producing an identifier whose binding changes when syntax-local-introduce is applied to it.  Unless I have forgotten some subtle detail of identifiers, I'm fairly certain this should never happen.
>How-To-Repeat:
#lang racket/load

(module lang racket/base

  (provide
    #%module-begin)

  (require
    (for-syntax
      racket/base
      syntax/parse
      macro-debugger/emit))

  (define-syntax (#%module-begin stx)
    (syntax-parse
      (local-expand
        (syntax-local-introduce
          #'(#%plain-module-begin
              (define x 'dummy)))
        'module-begin
        '())
      #:literal-sets {kernel-literals}
      [(#%plain-module-begin
         (define-values {name:id} _))
       (unless (free-identifier=? #'name
                 (syntax-local-introduce #'name))
         (raise-syntax-error #false
           "free-identifier=? changed by mark"
           #'name))])))

(module bug 'lang)
>Fix:
>Audit-Trail:
From: Matthew Flatt <mflatt@cs.utah.edu>
To: cce@ccs.neu.edu, bugs@racket-lang.org
Cc: 
Subject: Re: [racket-bug] all/12622: identifier binding somehow changed by syntax-local-introduce
Date: Thu, 8 Mar 2012 10:42:46 -0700

 Adding a mark in this case is effectively removing a mark by canceling
 it, right? In that case, removing a mark can change the binding.
 
 At Thu, 8 Mar 2012 11:24:02 -0500, cce@ccs.neu.edu wrote:
 > A new problem report is waiting at
 >   http://bugs.racket-lang.org/query/?cmd=view&pr=12622
 > 
 > Reported by Carl Eastlund for release: 5.2.1.7
 > 
 > *** Description:
 > Somehow the below program is producing an identifier whose binding changes when 
 > syntax-local-introduce is applied to it.  Unless I have forgotten some subtle 
 > detail of identifiers, I'm fairly certain this should never happen.
 > 
 > *** How to repeat:
 > #lang racket/load
 > 
 > (module lang racket/base
 > 
 >   (provide
 >     #%module-begin)
 > 
 >   (require
 >     (for-syntax
 >       racket/base
 >       syntax/parse
 >       macro-debugger/emit))
 > 
 >   (define-syntax (#%module-begin stx)
 >     (syntax-parse
 >       (local-expand
 >         (syntax-local-introduce
 >           #'(#%plain-module-begin
 >               (define x 'dummy)))
 >         'module-begin
 >         '())
 >       #:literal-sets {kernel-literals}
 >       [(#%plain-module-begin
 >          (define-values {name:id} _))
 >        (unless (free-identifier=? #'name
 >                  (syntax-local-introduce #'name))
 >          (raise-syntax-error #false
 >            "free-identifier=? changed by mark"
 >            #'name))])))
 > 
 > (module bug 'lang)
 > 
 > *** Environment:
 > MacIntel / Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:5.0.1) 
 > Gecko/20100101 Firefox/5.0.1
From: Carl Eastlund <cce@ccs.neu.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: bugs@racket-lang.org
Subject: Re: [racket-bug] all/12622: identifier binding somehow changed by syntax-local-introduce
Date: Thu, 8 Mar 2012 14:07:59 -0500

 --0016e6d58f00f2509b04bac00097
 Content-Type: text/plain; charset=UTF-8
 
 Marks shouldn't cancel across renamings, at least for the purpose of
 resolving that renaming, should they?
 
 Carl Eastlund
 
 On Thu, Mar 8, 2012 at 12:42 PM, Matthew Flatt <mflatt@cs.utah.edu> wrote:
 
 > Adding a mark in this case is effectively removing a mark by canceling
 > it, right? In that case, removing a mark can change the binding.
 >
 > At Thu, 8 Mar 2012 11:24:02 -0500, cce@ccs.neu.edu wrote:
 > > A new problem report is waiting at
 > >   http://bugs.racket-lang.org/query/?cmd=view&pr=12622
 > >
 > > Reported by Carl Eastlund for release: 5.2.1.7
 > >
 > > *** Description:
 > > Somehow the below program is producing an identifier whose binding
 > changes when
 > > syntax-local-introduce is applied to it.  Unless I have forgotten some
 > subtle
 > > detail of identifiers, I'm fairly certain this should never happen.
 > >
 > > *** How to repeat:
 > > #lang racket/load
 > >
 > > (module lang racket/base
 > >
 > >   (provide
 > >     #%module-begin)
 > >
 > >   (require
 > >     (for-syntax
 > >       racket/base
 > >       syntax/parse
 > >       macro-debugger/emit))
 > >
 > >   (define-syntax (#%module-begin stx)
 > >     (syntax-parse
 > >       (local-expand
 > >         (syntax-local-introduce
 > >           #'(#%plain-module-begin
 > >               (define x 'dummy)))
 > >         'module-begin
 > >         '())
 > >       #:literal-sets {kernel-literals}
 > >       [(#%plain-module-begin
 > >          (define-values {name:id} _))
 > >        (unless (free-identifier=? #'name
 > >                  (syntax-local-introduce #'name))
 > >          (raise-syntax-error #false
 > >            "free-identifier=? changed by mark"
 > >            #'name))])))
 > >
 > > (module bug 'lang)
 > >
 > > *** Environment:
 > > MacIntel / Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:5.0.1)
 > > Gecko/20100101 Firefox/5.0.1
 >
 >
 
 --0016e6d58f00f2509b04bac00097
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 Marks shouldn&#39;t cancel across renamings, at least for the purpose of re=
 solving that renaming, should they?<br><br clear=3D"all">Carl Eastlund<br>
 <br><div class=3D"gmail_quote">On Thu, Mar 8, 2012 at 12:42 PM, Matthew Fla=
 tt <span dir=3D"ltr">&lt;<a href=3D"mailto:mflatt@cs.utah.edu">mflatt@cs.ut=
 ah.edu</a>&gt;</span> wrote:<br><blockquote class=3D"gmail_quote" style=3D"=
 margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">
 
 Adding a mark in this case is effectively removing a mark by canceling<br>
 it, right? In that case, removing a mark can change the binding.<br>
 <div class=3D"HOEnZb"><div class=3D"h5"><br>
 At Thu, 8 Mar 2012 11:24:02 -0500, <a href=3D"mailto:cce@ccs.neu.edu">cce@c=
 cs.neu.edu</a> wrote:<br>
 &gt; A new problem report is waiting at<br>
 &gt; =C2=A0 <a href=3D"http://bugs.racket-lang.org/query/?cmd=3Dview&amp;pr=
 =3D12622" target=3D"_blank">http://bugs.racket-lang.org/query/?cmd=3Dview&a=
 mp;pr=3D12622</a><br>
 &gt;<br>
 &gt; Reported by Carl Eastlund for release: 5.2.1.7<br>
 &gt;<br>
 &gt; *** Description:<br>
 &gt; Somehow the below program is producing an identifier whose binding cha=
 nges when<br>
 &gt; syntax-local-introduce is applied to it. =C2=A0Unless I have forgotten=
  some subtle<br>
 &gt; detail of identifiers, I&#39;m fairly certain this should never happen=
 .<br>
 &gt;<br>
 &gt; *** How to repeat:<br>
 &gt; #lang racket/load<br>
 &gt;<br>
 &gt; (module lang racket/base<br>
 &gt;<br>
 &gt; =C2=A0 (provide<br>
 &gt; =C2=A0 =C2=A0 #%module-begin)<br>
 &gt;<br>
 &gt; =C2=A0 (require<br>
 &gt; =C2=A0 =C2=A0 (for-syntax<br>
 &gt; =C2=A0 =C2=A0 =C2=A0 racket/base<br>
 &gt; =C2=A0 =C2=A0 =C2=A0 syntax/parse<br>
 &gt; =C2=A0 =C2=A0 =C2=A0 macro-debugger/emit))<br>
 &gt;<br>
 &gt; =C2=A0 (define-syntax (#%module-begin stx)<br>
 &gt; =C2=A0 =C2=A0 (syntax-parse<br>
 &gt; =C2=A0 =C2=A0 =C2=A0 (local-expand<br>
 &gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 (syntax-local-introduce<br>
 &gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 #&#39;(#%plain-module-begin<br>
 &gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 (define x &#39;dummy)=
 ))<br>
 &gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 &#39;module-begin<br>
 &gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 &#39;())<br>
 &gt; =C2=A0 =C2=A0 =C2=A0 #:literal-sets {kernel-literals}<br>
 &gt; =C2=A0 =C2=A0 =C2=A0 [(#%plain-module-begin<br>
 &gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(define-values {name:id} _))<br>
 &gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0(unless (free-identifier=3D? #&#39;name<br>
 &gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(syntax-=
 local-introduce #&#39;name))<br>
 &gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(raise-syntax-error #false<br>
 &gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0&quot;free-identifier=3D? cha=
 nged by mark&quot;<br>
 &gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0#&#39;name))])))<br>
 &gt;<br>
 &gt; (module bug &#39;lang)<br>
 &gt;<br>
 &gt; *** Environment:<br>
 &gt; MacIntel / Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:5.0.1)<br>
 &gt; Gecko/20100101 Firefox/5.0.1<br>
 <br>
 </div></div></blockquote></div><br>
 
 --0016e6d58f00f2509b04bac00097--

