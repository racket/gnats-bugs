From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Wed May  5 12:23:16 2010
Received: from mail-gy0-f172.google.com (mail-gy0-f172.google.com [209.85.160.172])
	by champlain.ccs.neu.edu (8.14.3/8.14.3) with ESMTP id o45GNE99001512
	for <bugs@bugs.plt-scheme.org>; Wed, 5 May 2010 12:23:14 -0400
Message-Id: <201005051623.o45GNAao001504@champlain.ccs.neu.edu>
Date: Wed, 5 May 2010 12:23:10 -0400
From: cce@ccs.neu.edu
To: bugs@plt-scheme.org
Subject: quasiquote printing is buggy, confusing

>Number:         10895
>Category:       mzscheme
>Synopsis:       quasiquote printing is buggy, confusing
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Wed May 05 12:24:01 -0400 2010
>Closed-Date:    Wed May 05 12:42:25 -0400 2010
>Last-Modified:  Wed May 05 12:42:25 -0400 2010
>Originator:     Carl Eastlund
>Organization:
plt
>Submitter-Id:   unknown
>Release:        4.2.5.13-svn17apr2010
>Environment:
macosx "Darwin Gotham.ccs.neu.edu 10.2.0 Darwin Kernel Version 10.2.0: Tue Nov  3 23:08:29 PST 2009; root:xnu-1486.2.11~3/RELEASE_I386 i386" (i386-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 138040200

Collections:
(("/Users/cce/git/work/plt/add-on/4.2.5.13/collects" non-existent-path) ("/Users/cce/git/work/plt/collects" ".gitignore" "2htdp" "afm" "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "defaults" "deinprogramm" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "meta" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "raclog" "raco" "racunit" "reader" "readline" "redex" "repos-time-stamp" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "sirmail" "slatex" "slideshow" "srfi" "srpersist" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "!
 tests" "tex2page" "texpict" "trace" "typed" "typed-scheme" "unstable" "version" "waterworld" "web-server" "wxme" "xml"))
Computer Language: (("Determine language from source") (#(#t write mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t))
>Description:
I entered this program into DrScheme:

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

#lang racket

(struct tree [value] #:transparent)
(struct leaf tree [] #:transparent)
(struct branch tree [trees] #:transparent)

(branch
 100
 (list
  (branch
   10
   (list (leaf 1) (leaf 2) (leaf 3)))
  (branch
   20
   (list (leaf 11) (leaf 12) (leaf 13)))
  (branch
   30
   (list (leaf 21) (leaf 22) (leaf 23)))))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

I got this output:

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Welcome to DrRacket, version 4.2.5.13-svn17apr2010 [3m].
Language: racket.
(#f
 100
 `(,(branch 10 `(,(leaf 1) ,(leaf 2) ,(leaf 3)))
   ,(branch 20 `(,(leaf 11) ,(leaf 12) ,(leaf 13)))
   ,(branch 30 `(,(leaf 21) ,(leaf 22) ,(leaf 23)))))
> 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

Aside from the fact that DrScheme still thinks it is in svn, first, the initial "branch" constructor is printed as "#f" for some reason.  This is the concrete bug.

Second, all the structures have constructor style printing, the lists have quasiquote printing, and numbers appear to go either way -- they'll print in either mode without "swapping" with "`" or ",", although above we only see them in constructor-style printing.  The constant swapping back and forth is confusing to read.  All of the lists above enter quasiquote, and immediately leave it for every element.  If we're going to have constructor-style printing of structures, why not use the same for lists, vectors, and so on?
>How-To-Repeat:
I entered the program above into DrScheme, selected the #lang language level, and reverted all language settings to defaults.  Then I clicked "Run".
>Fix:
>Audit-Trail:
From: Matthew Flatt <mflatt@cs.utah.edu>
To: cce@ccs.neu.edu, bugs@plt-scheme.org
Cc: nobody@plt-scheme.org, bug-notification@plt-scheme.org
Subject: Re: [plt-bug] all/10895: quasiquote printing is buggy, confusing
Date: Wed, 5 May 2010 10:37:00 -0600

 At Wed, 5 May 2010 12:24:01 -0400, cce@ccs.neu.edu wrote:
 > the 
 > initial "branch" constructor is printed as "#f" for some reason.
 
 Fixed --- to be pushed soon.
 
 > If we're going to have constructor-style printing of
 > structures, why not use the same for lists, vectors, and so on?
 
 From http://list.cs.brown.edu/pipermail/plt-dev/2010-April/002538.html :
 
  Printing with `quasiquote', meanwhile, mostly preserves the Lisp
  tradition of printing values that represent expressions as the
  expressions that they represent.
 

State changed from "open" to "closed" by mflatt at Wed, 05 May 2010 12:42:25 -0400
Reason>>> pretty-print bug fixed; further discussion of printing style
shoudl go to plt-dev

