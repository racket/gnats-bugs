From nobody@champlain.ccs.neu.edu  Wed Apr 17 15:14:42 2002
Received: (from nobody@localhost)
	by champlain.ccs.neu.edu (8.9.3/8.8.7) id PAA24714
	for bugs@plt-scheme.org; Wed, 17 Apr 2002 15:14:42 -0400
Message-Id: <200204171914.PAA24714@champlain.ccs.neu.edu>
Date: Wed, 17 Apr 2002 15:14:42 -0400
From: dpb@cs.brown.edu
To: bugs@plt-scheme.org
Cc:
Subject: mzscheme bus errors on start if another copy is running

>Number:         5353
>Category:       mzscheme
>Synopsis:       mzscheme bus errors on start if another copy is running
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Wed Apr 17 15:20:00 -0400 2002
>Closed-Date:    Tue Jun 11 13:24:48 -0400 2002
>Last-Modified:  Mon May 05 15:45:44 -0400 2008
>Originator:     Don Blaheta
>Organization:
plt
>Submitter-Id:   unknown
>Release:        200a12
>Environment:
mac-ppc-osx
>Description:
On OS X, if one copy of mzscheme is running, trying to run any other copies results in a bus error.  This is probably OS X-specific; it doesn't occur on the solaris version.  It's probably fairly early in the code, as even running "mzscheme -v" will activate the bus error.
>How-To-Repeat:
1) Open two terminal windows.
2) Start mzscheme in one.
3) Start mzscheme in the other.
>Fix:
>Release-Note:
>Audit-Trail:
From: John Clements <clements@brinckerhoff.org>
To: bugs@plt-scheme.org, dpb@cs.brown.edu
Cc: Matthew Flatt <mflatt@cs.utah.edu>
Subject: Re: all/5353: mzscheme bus errors on start if another copy is
 running
Date: Thu, 18 Apr 2002 14:32:59 -0400

 I've observed this problem myself, but it appeared to be 
 intermittent, and never occurred in the debugger.  HOWEVER, I've now 
 figured out that the second mzscheme does not cause a bus error if 
 the shell's working directory is the same as the executable's on 
 startup for either one.  This also explains why it doesn't dump core 
 in gdb.
 
 Just for kicks, I just grepped for "PWD" in the mzscheme source tree, 
 to see whether there was any reference to the shell variable in the 
 executable.  I didn't get any hits.  What I really need is a way to 
 make gdb call it from another directory.  I can't figure out how to 
 do this.
 
 Matthew, any ideas?
 
 john
 
 
 

From: Matthew Flatt <mflatt@cs.utah.edu>
To: John Clements <clements@brinckerhoff.org>
Cc: bugs@plt-scheme.org, dpb@cs.brown.edu
Subject: Re: all/5353: mzscheme bus errors on start if another copy is
 running
Date: Thu, 18 Apr 2002 13:29:39 -0600 (MDT)

 At Thu, 18 Apr 2002 14:32:59 -0400, John Clements wrote:
 > Matthew, any ideas?
 
 No. I expect I'll have to wait until I get a Mac (in a few weeks) for
 any hope of understanding this problem.
 
 Matthew
 

From: Don Blaheta <dpb@cs.brown.edu>
To: John Clements <clements@brinckerhoff.org>
Cc: bugs@plt-scheme.org, Matthew Flatt <mflatt@cs.utah.edu>
Subject: Re: all/5353: mzscheme bus errors on start if another copy is running
Date: Fri, 19 Apr 2002 03:30:07 -0400

 Quoth John Clements:
 > I've observed this problem myself, but it appeared to be 
 > intermittent, and never occurred in the debugger.  HOWEVER, I've now 
 > figured out that the second mzscheme does not cause a bus error if 
 > the shell's working directory is the same as the executable's on 
 > startup for either one.  This also explains why it doesn't dump core 
 > in gdb.
 
 Huh.  This is a useful workaround, at least in the short term.  In fact,
 I can execute it from any directory so long as I fully qualify it:
 
   foxtrot /Users/blahedo -170-> mzscheme
   Bus error
   foxtrot /Users/blahedo -171-> /usr/local/bin/mzscheme
   Welcome to MzScheme version 200alpha12, Copyright (c) 1995-2002 PLT
   > 
 
 In *fact*, if I just alias 'mzscheme' to '/usr/local/bin/mzscheme', that
 works fine:
 
   foxtrot /Users/blahedo -174-> alias mzscheme /usr/local/bin/mzscheme
   foxtrot /Users/blahedo -175-> mzscheme
   Welcome to MzScheme version 200alpha12, Copyright (c) 1995-2002 PLT
   > ^D
   foxtrot /Users/blahedo -176-> \mzscheme
   Bus error
 
 Odd.  This behaviour is consistent across multiple shells (well, tcsh
 and zsh at least).  Anyway, it doesn't seem to be the working directory
 (per se) that's setting this one off.
 
 If I set up a symlink in my own bin directory, then either being in that
 directory or fully-qualifying a call to that executable will work fine.
 Also, if I'm in /usr/local/bin and I call mzscheme, even if it's the
 mzscheme that's in my ~/bin directory, it works, but only if the symlink
 has the same name as the original:
 
   foxtrot /Users/blahedo -191-> mzscheme
   Bus error
   foxtrot /Users/blahedo -192-> cd bin
   foxtrot /Users/blahedo/bin -193-> ln -s /usr/local/bin/mzscheme mzscheme
   foxtrot /Users/blahedo/bin -194-> cd ..
   foxtrot /Users/blahedo -195-> rehash
   foxtrot /Users/blahedo -196-> which mzscheme
   /Users/blahedo/bin/mzscheme
   foxtrot /Users/blahedo -197-> mzscheme
   Bus error
   foxtrot /Users/blahedo -198-> cd bin
   foxtrot /Users/blahedo/bin -199-> mzscheme
   Welcome to MzScheme version 200alpha12, Copyright (c) 1995-2002 PLT
   > ^D
   foxtrot /Users/blahedo/bin -200-> cd ..
   foxtrot /Users/blahedo -201-> which mzscheme
   /Users/blahedo/bin/mzscheme
   foxtrot /Users/blahedo -202-> ~/bin/mzscheme
   Welcome to MzScheme version 200alpha12, Copyright (c) 1995-2002 PLT
   > ^D
   [...]
   foxtrot /Users/blahedo -206-> cd /usr/local/bin
   foxtrot /usr/local/bin -207-> which mzscheme
   /Users/blahedo/bin/mzscheme
   foxtrot /usr/local/bin -208-> mzscheme
   Welcome to MzScheme version 200alpha12, Copyright (c) 1995-2002 PLT
   > ^D
   foxtrot /usr/local/bin -209-> cd ..
   foxtrot /usr/local -210-> mzscheme
   Bus error
   foxtrot /usr/local -211-> cd
   foxtrot /Users/blahedo -212-> cd bin
   foxtrot /Users/blahedo/bin -213-> mv mzscheme mzsch
   foxtrot /Users/blahedo/bin -214-> which mzscheme
   /usr/local/bin/mzscheme
   foxtrot /Users/blahedo/bin -215-> which mzsch
   ./mzsch
   foxtrot /Users/blahedo/bin -216-> rehash
   foxtrot /Users/blahedo/bin -217-> which mzsch
   /Users/blahedo/bin/mzsch
   foxtrot /Users/blahedo/bin -218-> mzsch
   Welcome to MzScheme version 200alpha12, Copyright (c) 1995-2002 PLT
   > ^D
   foxtrot /Users/blahedo/bin -219-> cd ..
   foxtrot /Users/blahedo -220-> mzsch
   Bus error
   foxtrot /Users/blahedo -221-> cd /usr/local/bin
   foxtrot /usr/local/bin -222-> mzsch
   Bus error
 
 
 Baffling; I hope this helps.  Let me know if you want me to run anything
 to test this further.
 
 -- 
 -=-Don Blaheta-=-=-dpb@cs.brown.edu-=-=-<http://www.cs.brown.edu/~dpb/>-=-
 "Fraternal twins develop from separate eggs and are no more closely
 related than ordinary siblings, except that they spend nine months
 sharing an extremely small bedroom."		--Cecil Adams

From: John Clements <clements@brinckerhoff.org>
To: Don Blaheta <dpb@cs.brown.edu>
Cc: bugs@plt-scheme.org, Matthew Flatt <mflatt@cs.utah.edu>
Subject: Re: all/5353: mzscheme bus errors on start if another copy is
 running
Date: Fri, 19 Apr 2002 14:36:53 -0400

 At 3:30 AM -0400 4/19/02, Don Blaheta wrote:
 >
 >Huh.  This is a useful workaround, at least in the short term.  In fact,
 >I can execute it from any directory so long as I fully qualify it:
 >
 >   foxtrot /Users/blahedo -170-> mzscheme
 >   Bus error
 >   foxtrot /Users/blahedo -171-> /usr/local/bin/mzscheme
 >   Welcome to MzScheme version 200alpha12, Copyright (c) 1995-2002 PLT
 >   >
 >
 
 This suggests to me that perhaps the issue is not the working 
 directory, but rather argv[0].
 
 Just a thought.
 
 john
Responsible-Changed-From-To: steck->mflatt
Responsible-Changed-By: mflatt
Responsible-Changed-When: Tue Jun 11 13:24:47 2002
Responsible-Changed-Why:
    mz
State-Changed-From-To: open->closed
State-Changed-By: mflatt
State-Changed-When: Tue Jun 11 13:24:47 2002
State-Changed-Why:
    fixed in 200alpha20 or so
>Unformatted:
