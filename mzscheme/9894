From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Fri Nov  7 02:43:10 2008
Received: from yw-out-2324.google.com (yw-out-2324.google.com [74.125.46.30])
	by champlain.ccs.neu.edu (8.14.2/8.14.2) with ESMTP id mA77h43U008565
	for <bugs@bugs.plt-scheme.org>; Fri, 7 Nov 2008 02:43:04 -0500
Message-Id: <200811070743.mA77h0cU008558@champlain.ccs.neu.edu>
Date: Fri, 7 Nov 2008 02:43:00 -0500
From: ryanc@ccs.neu.edu
To: bugs@plt-scheme.org
Subject: expander's "no X bound" error messages 

>Number:         9894
>Category:       mzscheme
>Synopsis:       expander's "no X bound" error messages
>Class:          change-request
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Fri Nov 07 02:44:01 -0500 2008
>Last-Modified:  Mon Nov 10 10:57:32 -0500 2008
>Originator:     Ryan Culpepper
>Organization:
plt
>Submitter-Id:   unknown
>Release:        4.1.2.4-svn6nov2008
>Environment:
unix "Linux artichoke 2.6.24-21-generic #1 SMP Tue Oct 21 23:43:45 UTC 2008 i686 GNU/Linux" (i386-linux/3m) (get-display-depth) = 24
Human Language: english
(current-memory-use) 72713596

Collections:
(("/home/ryan/.plt-scheme/4.1.2.4/collects" non-existent-path) ("/home/ryan/projects/plt/collects" "afm" "ffi" "net" "sgl" "xml" ".svn" "eopl" "file" "help" "honu" "htdp" "html" "lang" "lazy" "make" "r5rs" "r6rs" "mred" "plot" "rnrs" "srfi" "wxme" "framework" "teachpack" "handin-client" "mzscheme" "games" "icons" "htdch" "s-exp" "mrlib" "mzcom" "mzlib" "graphics" "profj" "redex" "setup" "tests" "trace" "test-engine" "combinator-parser" "waterworld" "preprocessor" "sirmail" "test-box-recovery" "handin-server" "tex2page" "texpict" "scribblings" "profjWizard" "stepper" "scribble" "typed-scheme" "web-server" "config" "compiler" "swindle" "dynext" "hierlist" "macro-debugger" "frtime" "defaults" "gui-debugger" "guibuilder" "drscheme" "syntax-color" "srpersist" "planet" "mysterx" "errortrace" "scheme" "slatex" "syntax" "version" "algol60" "parser-tools" "openssl" "embedded-gui" "slideshow" "repos-time-stamp" "info-domain" "readline" "launcher" "string-constants" "browser"))
Computer Language: (("Module") (#(#t write mixed-fraction-e #f #t debug) (default) #() "#lang scheme\n"))
>Description:
Given the following program:

  #lang scheme/base
  (define-syntax (foo stx)
    (syntax-case stx ()
      [(foo bar)
       #'(add1 bar)]))

the expander raises an error containing the following explanation (other parts clipped): "function application is not allowed, because no #%app syntax transformer is bound". This error message misidentifies the problem and confuses programmers.

I think a better explanation would be this: "no syntax transformer for syntax-case is bound, and function application is not allowed, because no #%app syntax transformer is bound". In general, the new part of the explanation should appear in the case of an implicit #%app form where the operator is an unbound identifier.

Likewise, the explanation for 

  #lang scheme/base
  (define-syntax (foo stx)
    bar)

could be changed to "bar is not bound, and reference to top-level identifier is not allowed, because no #%top syntax transformer is bound" (or something similar).
>How-To-Repeat:
>Fix:
>Audit-Trail:
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: ryanc@ccs.neu.edu, bugs@plt-scheme.org
Cc: nobody@plt-scheme.org, eli@plt-scheme.org, matthias@plt-scheme.org,
        sk@plt-scheme.org, mflatt@plt-scheme.org, robby@plt-scheme.org,
        clements@plt-scheme.org, jay@plt-scheme.org, meunier@plt-scheme.org,
        kathyg@plt-scheme.org, jacobm@plt-scheme.org, cce@plt-scheme.org,
        samth@plt-scheme.org, ryanc@plt-scheme.org, gcooper@plt-scheme.org,
        sstrickl@plt-scheme.org
Subject: Re: [plt-bug] all/9894: expander's "no X bound" error messages 
Date: Fri, 7 Nov 2008 11:24:42 -0500

 Is scheme/base really useful? I start disliking it a lot.
 
 
 On Nov 7, 2008, at 2:44 AM, ryanc@ccs.neu.edu wrote:
 
 > A new problem report is waiting at
 >   http://bugs.plt-scheme.org/query/?cmd=view&pr=9894
 >
 > Reported by Ryan Culpepper for release: 4.1.2.4-svn6nov2008
 >
 > *** Description:
 > Given the following program:
 >
 >   #lang scheme/base
 >   (define-syntax (foo stx)
 >     (syntax-case stx ()
 >       [(foo bar)
 >        #'(add1 bar)]))
 >
 > the expander raises an error containing the following explanation  
 > (other parts clipped): "function application is not allowed,  
 > because no #%app syntax transformer is bound". This error message  
 > misidentifies the problem and confuses programmers.
 >
 > I think a better explanation would be this: "no syntax transformer  
 > for syntax-case is bound, and function application is not allowed,  
 > because no #%app syntax transformer is bound". In general, the new  
 > part of the explanation should appear in the case of an implicit #% 
 > app form where the operator is an unbound identifier.
 >
 > Likewise, the explanation for
 >
 >   #lang scheme/base
 >   (define-syntax (foo stx)
 >     bar)
 >
 > could be changed to "bar is not bound, and reference to top-level  
 > identifier is not allowed, because no #%top syntax transformer is  
 > bound" (or something similar).
 >
 > *** How to repeat:
 >
 >
 > *** Environment:
 > unix "Linux artichoke 2.6.24-21-generic #1 SMP Tue Oct 21 23:43:45  
 > UTC 2008 i686 GNU/Linux" (i386-linux/3m) (get-display-depth) = 24
 > Human Language: english
 > (current-memory-use) 72713596
 >
 > Collections:
 > (("/home/ryan/.plt-scheme/4.1.2.4/collects" non-existent-path) ("/ 
 > home/ryan/projects/plt/collects" "afm" "ffi" "net" "sgl" "xml"  
 > ".svn" "eopl" "file" "help" "honu" "htdp" "html" "lang" "lazy"  
 > "make" "r5rs" "r6rs" "mred" "plot" "rnrs" "srfi" "wxme" "framework"  
 > "teachpack" "handin-client" "mzscheme" "games" "icons" "htdch" "s- 
 > exp" "mrlib" "mzcom" "mzlib" "graphics" "profj" "redex" "setup"  
 > "tests" "trace" "test-engine" "combinator-parser" "waterworld"  
 > "preprocessor" "sirmail" "test-box-recovery" "handin-server"  
 > "tex2page" "texpict" "scribblings" "profjWizard" "stepper"  
 > "scribble" "typed-scheme" "web-server" "config" "compiler"  
 > "swindle" "dynext" "hierlist" "macro-debugger" "frtime" "defaults"  
 > "gui-debugger" "guibuilder" "drscheme" "syntax-color" "srpersist"  
 > "planet" "mysterx" "errortrace" "scheme" "slatex" "syntax"  
 > "version" "algol60" "parser-tools" "openssl" "embedded-gui"  
 > "slideshow" "repos-time-stamp" "info-domain" "readline" "launcher"  
 > "string-constants" "browser"))
 > Computer Language: (("Module") (#(#t write mixed-fraction-e #f #t  
 > debug) (default) #() "#lang scheme\n"))
 >
 
From: "Robby Findler" <robby@cs.uchicago.edu>
To: "Matthias Felleisen" <matthias@ccs.neu.edu>
Cc: ryanc@ccs.neu.edu, bugs@plt-scheme.org, nobody@plt-scheme.org,
        eli@plt-scheme.org, matthias@plt-scheme.org, sk@plt-scheme.org,
        mflatt@plt-scheme.org, clements@plt-scheme.org, jay@plt-scheme.org,
        meunier@plt-scheme.org, kathyg@plt-scheme.org, jacobm@plt-scheme.org,
        cce@plt-scheme.org, samth@plt-scheme.org, ryanc@plt-scheme.org,
        gcooper@plt-scheme.org, sstrickl@plt-scheme.org
Subject: Re: [plt-bug] all/9894: expander's "no X bound" error messages
Date: Fri, 7 Nov 2008 10:58:37 -0600

 Its only use it that it lets you write programs that have a minimal
 number of dependencies. That seems useful sometimes. It would be nice
 if there were a corresponding improvement in the runtime footprint,
 and I think that does happen a little, but perhaps not as much as we
 had hoped.
 
 But note that Ryan's proposal also addresses other situations where
 that error comes up (which people really do see, even if they don't
 use scheme/base), eg when they are trying to build their own
 namespaces.
 
 Robby
 
 On Fri, Nov 7, 2008 at 10:24 AM, Matthias Felleisen
 <matthias@ccs.neu.edu> wrote:
 >
 > Is scheme/base really useful? I start disliking it a lot.
 >
 >
 > On Nov 7, 2008, at 2:44 AM, ryanc@ccs.neu.edu wrote:
 >
 >> A new problem report is waiting at
 >>  http://bugs.plt-scheme.org/query/?cmd=view&pr=9894
 >>
 >> Reported by Ryan Culpepper for release: 4.1.2.4-svn6nov2008
 >>
 >> *** Description:
 >> Given the following program:
 >>
 >>  #lang scheme/base
 >>  (define-syntax (foo stx)
 >>    (syntax-case stx ()
 >>      [(foo bar)
 >>       #'(add1 bar)]))
 >>
 >> the expander raises an error containing the following explanation (other
 >> parts clipped): "function application is not allowed, because no #%app
 >> syntax transformer is bound". This error message misidentifies the problem
 >> and confuses programmers.
 >>
 >> I think a better explanation would be this: "no syntax transformer for
 >> syntax-case is bound, and function application is not allowed, because no
 >> #%app syntax transformer is bound". In general, the new part of the
 >> explanation should appear in the case of an implicit #%app form where the
 >> operator is an unbound identifier.
 >>
 >> Likewise, the explanation for
 >>
 >>  #lang scheme/base
 >>  (define-syntax (foo stx)
 >>    bar)
 >>
 >> could be changed to "bar is not bound, and reference to top-level
 >> identifier is not allowed, because no #%top syntax transformer is bound" (or
 >> something similar).
 >>
 >> *** How to repeat:
 >>
 >>
 >> *** Environment:
 >> unix "Linux artichoke 2.6.24-21-generic #1 SMP Tue Oct 21 23:43:45 UTC
 >> 2008 i686 GNU/Linux" (i386-linux/3m) (get-display-depth) = 24
 >> Human Language: english
 >> (current-memory-use) 72713596
 >>
 >> Collections:
 >> (("/home/ryan/.plt-scheme/4.1.2.4/collects" non-existent-path)
 >> ("/home/ryan/projects/plt/collects" "afm" "ffi" "net" "sgl" "xml" ".svn"
 >> "eopl" "file" "help" "honu" "htdp" "html" "lang" "lazy" "make" "r5rs" "r6rs"
 >> "mred" "plot" "rnrs" "srfi" "wxme" "framework" "teachpack" "handin-client"
 >> "mzscheme" "games" "icons" "htdch" "s-exp" "mrlib" "mzcom" "mzlib"
 >> "graphics" "profj" "redex" "setup" "tests" "trace" "test-engine"
 >> "combinator-parser" "waterworld" "preprocessor" "sirmail"
 >> "test-box-recovery" "handin-server" "tex2page" "texpict" "scribblings"
 >> "profjWizard" "stepper" "scribble" "typed-scheme" "web-server" "config"
 >> "compiler" "swindle" "dynext" "hierlist" "macro-debugger" "frtime"
 >> "defaults" "gui-debugger" "guibuilder" "drscheme" "syntax-color" "srpersist"
 >> "planet" "mysterx" "errortrace" "scheme" "slatex" "syntax" "version"
 >> "algol60" "parser-tools" "openssl" "embedded-gui" "slideshow"
 >> "repos-time-stamp" "info-domain" "readline" "launcher" "string-constants"
 >> "browser"))
 >> Computer Language: (("Module") (#(#t write mixed-fraction-e #f #t debug)
 >> (default) #() "#lang scheme\n"))
 >>
 >
 >
From: "Sam TH" <samth@ccs.neu.edu>
To: "Matthias Felleisen" <matthias@ccs.neu.edu>
Cc: ryanc@ccs.neu.edu, bugs@plt-scheme.org, nobody@plt-scheme.org,
        eli@plt-scheme.org, matthias@plt-scheme.org, sk@plt-scheme.org,
        mflatt@plt-scheme.org, robby@plt-scheme.org, clements@plt-scheme.org,
        jay@plt-scheme.org, meunier@plt-scheme.org, kathyg@plt-scheme.org,
        jacobm@plt-scheme.org, cce@plt-scheme.org, ryanc@plt-scheme.org,
        gcooper@plt-scheme.org, sstrickl@plt-scheme.org
Subject: Re: [plt-bug] all/9894: expander's "no X bound" error messages
Date: Fri, 7 Nov 2008 13:17:12 -0500

 I use `scheme/base' exclusively, except for experimentation.  `scheme'
 uses a big portion of the namespace, and I think it's valuable to know
 which libraries I'm depending on.
 
 sam th
 
 On Fri, Nov 7, 2008 at 11:24 AM, Matthias Felleisen
 <matthias@ccs.neu.edu> wrote:
 >
 > Is scheme/base really useful? I start disliking it a lot.
 >
 >
 > On Nov 7, 2008, at 2:44 AM, ryanc@ccs.neu.edu wrote:
 >
 >> A new problem report is waiting at
 >>  http://bugs.plt-scheme.org/query/?cmd=view&pr=9894
 >>
 >> Reported by Ryan Culpepper for release: 4.1.2.4-svn6nov2008
 >>
 >> *** Description:
 >> Given the following program:
 >>
 >>  #lang scheme/base
 >>  (define-syntax (foo stx)
 >>    (syntax-case stx ()
 >>      [(foo bar)
 >>       #'(add1 bar)]))
 >>
 >> the expander raises an error containing the following explanation (other
 >> parts clipped): "function application is not allowed, because no #%app
 >> syntax transformer is bound". This error message misidentifies the problem
 >> and confuses programmers.
 >>
 >> I think a better explanation would be this: "no syntax transformer for
 >> syntax-case is bound, and function application is not allowed, because no
 >> #%app syntax transformer is bound". In general, the new part of the
 >> explanation should appear in the case of an implicit #%app form where the
 >> operator is an unbound identifier.
 >>
 >> Likewise, the explanation for
 >>
 >>  #lang scheme/base
 >>  (define-syntax (foo stx)
 >>    bar)
 >>
 >> could be changed to "bar is not bound, and reference to top-level
 >> identifier is not allowed, because no #%top syntax transformer is bound" (or
 >> something similar).
 >>
 >> *** How to repeat:
 >>
 >>
 >> *** Environment:
 >> unix "Linux artichoke 2.6.24-21-generic #1 SMP Tue Oct 21 23:43:45 UTC
 >> 2008 i686 GNU/Linux" (i386-linux/3m) (get-display-depth) = 24
 >> Human Language: english
 >> (current-memory-use) 72713596
 >>
 >> Collections:
 >> (("/home/ryan/.plt-scheme/4.1.2.4/collects" non-existent-path)
 >> ("/home/ryan/projects/plt/collects" "afm" "ffi" "net" "sgl" "xml" ".svn"
 >> "eopl" "file" "help" "honu" "htdp" "html" "lang" "lazy" "make" "r5rs" "r6rs"
 >> "mred" "plot" "rnrs" "srfi" "wxme" "framework" "teachpack" "handin-client"
 >> "mzscheme" "games" "icons" "htdch" "s-exp" "mrlib" "mzcom" "mzlib"
 >> "graphics" "profj" "redex" "setup" "tests" "trace" "test-engine"
 >> "combinator-parser" "waterworld" "preprocessor" "sirmail"
 >> "test-box-recovery" "handin-server" "tex2page" "texpict" "scribblings"
 >> "profjWizard" "stepper" "scribble" "typed-scheme" "web-server" "config"
 >> "compiler" "swindle" "dynext" "hierlist" "macro-debugger" "frtime"
 >> "defaults" "gui-debugger" "guibuilder" "drscheme" "syntax-color" "srpersist"
 >> "planet" "mysterx" "errortrace" "scheme" "slatex" "syntax" "version"
 >> "algol60" "parser-tools" "openssl" "embedded-gui" "slideshow"
 >> "repos-time-stamp" "info-domain" "readline" "launcher" "string-constants"
 >> "browser"))
 >> Computer Language: (("Module") (#(#t write mixed-fraction-e #f #t debug)
 >> (default) #() "#lang scheme\n"))
 >>
 >
 >
 
 
 
 -- 
 sam th
 samth@ccs.neu.edu
From: "Robby Findler" <robby@cs.uchicago.edu>
To: "Sam TH" <samth@ccs.neu.edu>
Cc: "Matthias Felleisen" <matthias@ccs.neu.edu>, ryanc@ccs.neu.edu,
        bugs@plt-scheme.org, nobody@plt-scheme.org, eli@plt-scheme.org,
        matthias@plt-scheme.org, sk@plt-scheme.org, mflatt@plt-scheme.org,
        clements@plt-scheme.org, jay@plt-scheme.org, meunier@plt-scheme.org,
        kathyg@plt-scheme.org, jacobm@plt-scheme.org, cce@plt-scheme.org,
        ryanc@plt-scheme.org, gcooper@plt-scheme.org, sstrickl@plt-scheme.org
Subject: Re: [plt-bug] all/9894: expander's "no X bound" error messages
Date: Fri, 7 Nov 2008 12:47:57 -0600

 On Fri, Nov 7, 2008 at 12:17 PM, Sam TH <samth@ccs.neu.edu> wrote:
 > I use `scheme/base' exclusively, except for experimentation.  `scheme'
 > uses a big portion of the namespace, and I think it's valuable to know
 > which libraries I'm depending on.
 
 Its a scripts-growing-into-programs thing. Start with scheme (or
 scheme/gui) until you start caring about which modules or running into
 collisions and then shrink it. Right? (You just do the first step in
 your mind :)
 
 Robby

State changed from "open" to "closed" by mflatt at Mon, 10 Nov 2008 10:57:32 -0500
Reason>>> good idea --- done in SVN

