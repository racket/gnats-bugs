From robby@cs.rice.edu  Mon Sep 29 18:08:16 1997
Received: from australia.cs.rice.edu (australia.cs.rice.edu [128.42.1.176]) by cs.rice.edu (8.8.5/8.7.1) with ESMTP id SAA04800 for <plt-gnats@cs.rice.edu>; Mon, 29 Sep 1997 18:08:16 -0500 (CDT)
Message-Id: <199709292308.SAA02042@australia.cs.rice.edu>
Date: Mon, 29 Sep 1997 18:08:15 -0500 (CDT)
From: Robert Bruce Findler <robby@cs.rice.edu>
Reply-To: robby@cs.rice.edu
To: plt-gnats@cs.rice.edu
Subject: compilation of interfaces is broken
X-Send-Pr-Version: 3.101

>Number:         326
>Category:       mzscheme
>Synopsis:       compilation of interfaces is broken
>Confidential:   no
>Severity:       serious
>Priority:       medium
>Responsible:    mflatt
>State:          closed
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Mon Sep 29 23:10:01 GMT 1997
>Last-Modified:  Thu Oct  2 20:01:06 CDT 1997
>Originator:     Robert Bruce Findler
>Organization:
titan
>Release:        unknown
>Environment:
	
>Description:
	Sometimes when a class is defined to match and does match an
interface, and the files with those declarations is compiled, mzscheme
claims the interfaces doesn't match.

	The strange (aka painful) thing about this is that if I only have
one name in unit-displayI, or i use symbols whose printed representation is
short, or I don't have the second interface, the bug doesn't show up.

>How-To-Repeat:
compile this into a file and load it:

(define unit-displayI (interface ()
				 after-change-name
				 get-unit))

(define unit-frameI (interface (unit-displayI)))

(class* null (unit-frameI) (unit)
	(public
	  [after-change-name void]
	  [get-unit void]))

>Fix:
	
>Audit-Trail:

From: Matthew Flatt <mflatt@cs.rice.edu>
To: robby@cs.rice.edu
Cc: plt-gnats@cs.rice.edu
Subject: Re: all/326: compilation of interfaces is broken
Date: Wed, 1 Oct 1997 07:23:51 -0500 (CDT)

 I am unable to reproduce this bug with the expressions you gave me. I
 tried under Solaris and Linux with mzscheme -x. Perhaps you can give
 me a .zo that demonstrates the problem on loading?
 
 Matthew
 

From: Robert Bruce Findler <robby@cs.rice.edu>
To: Matthew Flatt <mflatt@cs.rice.edu>
Cc: plt-gnats@cs.rice.edu
Subject: Re: all/326: compilation of interfaces is broken
Date: Wed, 1 Oct 1997 09:03:32 -0500 (CDT)

 Matthew Flatt writes:
 > I am unable to reproduce this bug with the expressions you gave me. I
 > tried under Solaris and Linux with mzscheme -x. Perhaps you can give
 > me a .zo that demonstrates the problem on loading?
 > 
 > Matthew
 
 Here's a transcript of my session:
 
 [australia] ~/plt/The Rest/tmp> cat > t.ss
 (define unit-displayI (interface ()
                                  after-change-name
                                  get-unit))
 
 (define unit-frameI (interface (unit-displayI)))
 
 (class* null (unit-frameI) (unit)
         (public
           [after-change-name void]
           [get-unit void]))
 
 [Wed 01 Oct] ~/plt/The Rest/tmp> mzscheme -x -ql compile.ss -e
 '(compile-file "t.ss" "t.zo")'
 Welcome to MzScheme version 51/3, Copyright (c) 1995-97 PLT (Matthew Flatt)
 > ^D
 [9:02am] ~/plt/The Rest/tmp> mzscheme -x -qf t.zo
 Welcome to MzScheme version 51/3, Copyright (c) 1995-97 PLT (Matthew Flatt)
 class*: ivar not implemented: after-change-name as required by the
 interface: unit-framei
 > ^D
 
 I haven't deleted any files.
 
 Robby

Responsible-Changed-From-To: ptg->mflatt
Responsible-Changed-By: mflatt
Responsible-Changed-When: Wed Oct  1 09:14:44 1997
Responsible-Changed-Why:

State-Changed-From-To: open-analyzed
State-Changed-By: mflatt
State-Changed-When: Wed Oct  1 09:14:47 1997
State-Changed-Why:
The transcript revealed the relevant detail: MzScheme must be
restarted to see the bug (and that's why the problem didn't show
up in the test suite). The problem was that method names
in the interface were sorted at compile-time and not load-time.
This has been fixed for the next release.

State-Changed-From-To: analyzed-closed
State-Changed-By: mflatt
State-Changed-When: Thu Oct  2 20:01:01 1997
State-Changed-Why:
Released.

>Unformatted:
