From apache@plt-scheme.org Fri Nov 19 03:28:38 2004
Received: from champlain.ccs.neu.edu (champlain.ccs.neu.edu [127.0.0.1])
	by champlain.ccs.neu.edu (8.12.10/8.12.10) with ESMTP id iAJ8SanA023379
	for <bugs@plt-scheme.org>; Fri, 19 Nov 2004 03:28:36 -0500
Message-Id: <200411190828.iAJ8Salv023377@champlain.ccs.neu.edu>
Date: Fri, 19 Nov 2004 03:28:36 -0500
From: lealanko@ssh.com
To: bugs@plt-scheme.org
Subject: MzScheme segfaults upon trying to cross a continuation boundary

>Number:         7117
>Category:       mzscheme
>Synopsis:       MzScheme segfaults upon trying to cross a continuation boundary
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Fri Nov 19 03:30:00 -0500 2004
>Last-Modified:  Fri Nov 19 14:22:29 -0500 2004
>Originator:     Lauri Alanko
>Organization:
plt
>Submitter-Id:   unknown
>Release:        299.21
>Environment:
linux-other
>Description:
When first trying to call a main-thread continuation from a subthread, and then a subthread continuation from the main thread, mzscheme segfaults. Notably, either of these operations alone just triggers an error message, and the segfault only occurs when both are combined as separate operations at the top level, not within a let.

Here's a stack trace:

#0  unschedule_in_set (s=0x8275f40, t_set=0x0) at thread.c:1784
#1  0x080e6677 in remove_thread (r=0x8273db0) at thread.c:2261
#2  0x080e695c in start_child (child=0x83ae6d8, return_to_thread=0x0, 
    child_eval=0x83bfcc0) at thread.c:2390
#3  0x080e6b32 in make_subprocess (child_thunk=0x83bfcc0, 
    child_start=0xbfffe578, config=0x83ae6d8, cells=0x8273db0, 
    break_cell=0x1, mgr=0x0, normal_kill=1) at thread.c:2470
#4  0x080e70ce in scheme_thread_w_details (thunk=0x83bfcc0, config=0x0, 
    cells=0x0, break_cell=0x0, mgr=0x0, suspend_to_kill=0) at thread.c:2681
#5  0x00000000 in ?? ()


Some generic platform information that may or may not be useful:

$ uname -a
Linux oregano 2.6.8-1-686-smp #1 SMP Sat Aug 28 12:51:43 EDT 2004 i686 GNU/Linux
$ cat /etc/debian_version 
3.1
$ gcc --version | head -1
gcc (GCC) 3.3.4 (Debian 1:3.3.4-6sarge1)
>How-To-Repeat:
At top level, evaluate the following:

(define k (let/cc k k))
(thread-wait (thread (lambda () (k 'foo))))
(thread-wait (thread (lambda () (let/cc x (set! k x)))))
(k 'bar)
>Fix:
>Audit-Trail:
Responsible changed from "nobody" to "mflatt" by mflatt at Fri, 19 Nov 2004 14:22:29 -0500
Reason>>> mz

State changed from "open" to "closed" by mflatt at Fri, 19 Nov 2004 14:22:29 -0500
Reason>>> Fixed in CVS.

Thanks!
Matthew

