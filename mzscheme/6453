From schlie@comcast.net  Sun Sep 14 15:23:12 2003
Received: from localhost (IDENT:root@localhost.localdomain [127.0.0.1])
	by champlain.ccs.neu.edu (8.9.3/8.8.7) with ESMTP id PAA10599
	for <bugs>; Sun, 14 Sep 2003 15:23:11 -0400
Message-Id: <200309141923.PAA10599@champlain.ccs.neu.edu>
Date: Sun, 14 Sep 2003 15:23:11 -0400
From: Paul Schlie <schlie@comcast.net>
To: bugs@plt-scheme.org
Subject: Mz/DrScheme request for bits/arbitrary-binary datatype support

>Number:         6453
>Category:       mzscheme
>Synopsis:       Mz/DrScheme request for bits/arbitrary-binary datatype support
>Class:          change-request
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Sun Sep 14 15:25:00 -0400 2003
>Closed-Date:    
>Last-Modified:  Fri Apr 02 02:06:54 -0500 2004
>Originator:     Paul Schlie
>Organization:
titan
>Submitter-Id:   unknown
>Release:        205.2-cvs1aug2003
>Environment:
macosx "Darwin fusion.local. 6.6 Darwin Kernel Version 6.6: Thu May  1 21:48:54 PDT 2003; root:xnu/xnu-344.34.obj~1/RELEASE_PPC  Power Macintosh powerpc" (ppc-macosx) (get-display-depth) = 16
Docs Installed:
(".DS_Store" "advanced" "beginning" "beginning-abbr" "drscheme" "framework" "help" "icons" "insidemz" "intermediate" "intermediate-lambda" "misclib" "mred" "mzc" "mzlib" "mzscheme" "r5rs" "t-y-scheme" "teachpack" "tex2page" "tools" "tour")
Collections: 
(("/Users/paul/Library/PLT Scheme/205.2/collects" "non-existent path") ("/Applications/plt-cvs/plt/collects/mzlib/../../MrEd.app/Contents/MacOS/../../../collects" (".DS_Store" "afm" "algol60" "browser" "compiler" "CVS" "cvs-time-stamp" "defaults" "doc" "dromedary" "drscheme" "dynext" "eopl" "errortrace" "finish-install" "framework" "games" "graphics" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "htdp" "html" "icons" "lang" "launcher" "make" "mrdemo" "mred" "mrflow" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "profj" "readline" "reduction-semantics" "setup" "sgl" "sirmail" "slatex" "slibinit" "srfi" "srpersist" "stepper" "string-constants" "syntax" "syntax-color" "test-suite" "tests" "tex2page" "texpict" "typeset" "version" "waterworld" "web-server" "xelda" "xml")))
 
Human Language: english
 
Teachpack filenames: ()
Computer Language: (("Professional Languages" "PLT" "Graphical (MrEd, includes MzScheme)") #6(#f write mixed-fraction-e #t #t debug))
>Description:
Although originally rooted in a desire to be able to manipulate/inspect/display/
print native floating point values in their raw binary encoded form, I discovered
that there was no way to effectivly inspect/manipulate nativly encoded types
with the possible exception of integers; so would like to request that a new
intrinsic type and a few  functions be supported to enable it.

I know its support may be a long shot, but thought I might as well ask.
>How-To-Repeat:
- new type "bits" with encoded size, such that it's encoded data field has
       an extent of msb=size-1 to lsb=0.
- new intrinsic functions:
  (make-bits src size) => returns bits type, of encoded size required to store
       the src type within it's data field, or optionally of size if defined.
  (size-bits src) => returns integer extent of the nativly encoded data field.
  (get-bits src msb lsb) => returns integer representing the size of src bits.
  (set-bits! dst msb lsb src) => sets dst bits msb to lsb to integer src.
- augmented intrinsic functions:
  (display src) prints bits type as binary bit field with all digits of
        extent being either 0 or 1.
  (printf ....) (format ...) supports formating as bin/oct/hex/dec values.

>Fix:
>Release-Note:
>Audit-Trail:
From: Paul Schlie <schlie@comcast.net>
To: <bugs@plt-scheme.org>, eli@plt-scheme.org
Cc:  
Subject: Re: all/6453: Mz/DrScheme request for bits/arbitrary-binary
	datatype support
Date: Sun, 14 Sep 2003 15:44:05 -0400

 And correspondingly, set! exact->inexact and inexact->exact be augmented
 such that the bits data type may be assigned to any native data type which
 has a compatible size extent; i.e.:
 
 (define value 123)
 
 (= value (inexact->exact (make-bits value))) => #t
 
 
Responsible-Changed-From-To: eli->nobody
Responsible-Changed-By: gnats@champlain.ccs.neu.edu
Responsible-Changed-When: Fri, 26 Mar 2004 04:58:58 -0500
Responsible-Changed-Why:


Responsible changed from "nobody" to "mflatt" by eli at Fri, 02 Apr 2004 02:06:54 -0500
Reason>>> mzscheme request

>Unformatted:
