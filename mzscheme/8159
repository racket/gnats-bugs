From apache@plt-scheme.org Wed Jul  5 22:16:55 2006
Received: from champlain.ccs.neu.edu (champlain.ccs.neu.edu [127.0.0.1])
	by champlain.ccs.neu.edu (8.13.6/8.13.6) with ESMTP id k662Gtg3027739
	for <bugs@plt-scheme.org>; Wed, 5 Jul 2006 22:16:55 -0400
Message-Id: <200607060216.k662GtZK027738@champlain.ccs.neu.edu>
Date: Wed, 5 Jul 2006 22:16:55 -0400
From: rrotstein@verizon.net
To: bugs@plt-scheme.org
Subject: possible bug

>Number:         8159
>Category:       mzscheme
>Synopsis:       possible bug
>Class:          not-a-bug
>Responsible:    eli
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Wed Jul 05 22:20:01 -0400 2006
>Closed-Date:    Wed Jul 05 23:36:52 -0400 2006
>Last-Modified:  Wed Jul 05 23:40:01 -0400 2006
>Originator:     Robert Rotstein
>Organization:
plt
>Submitter-Id:   unknown
>Release:        301
>Environment:
windows "Windows NT 5.0 (Build 2195) Service Pack 4" (win32\i386) (get-display-depth) = 32
Docs Installed:
(#<path:C:\Program Files\LISP\Dr. Scheme\PLT\collects\doc\web-server> #<path:C:\Program Files\LISP\Dr. Scheme\PLT\collects\doc\tour> #<path:C:\Program Files\LISP\Dr. Scheme\PLT\collects\doc\tools> #<path:C:\Program Files\LISP\Dr. Scheme\PLT\collects\doc\tex2page> #<path:C:\Program Files\LISP\Dr. Scheme\PLT\collects\doc\teachpack> #<path:C:\Program Files\LISP\Dr. Scheme\PLT\collects\doc\t-y-scheme> #<path:C:\Program Files\LISP\Dr. Scheme\PLT\collects\doc\swindle> #<path:C:\Program Files\LISP\Dr. Scheme\PLT\collects\doc\srfi> #<path:C:\Program Files\LISP\Dr. Scheme\PLT\collects\doc\r5rs> #<path:C:\Program Files\LISP\Dr. Scheme\PLT\collects\doc\profj-intermediate> #<path:C:\Program Files\LISP\Dr. Scheme\PLT\collects\doc\profj-beginner> #<path:C:\Program Files\LISP\Dr. Scheme\PLT\collects\doc\profj-advanced> #<path:C:\Program Files\LISP\Dr. Scheme\PLT\collects\doc\plot> #<path:C:\Program Files\LISP\Dr. Scheme\PLT\collects\doc\mzscheme> #<path:C:\Program Files\LISP\Dr. Scheme\PLT\collects\doc\mzlib> #<path:C:\Program Files\LISP\Dr. Scheme\PLT\collects\doc\mzc> #<path:C:\Program Files\LISP\Dr. Scheme\PLT\collects\doc\mrlib> #<path:C:\Program Files\LISP\Dr. Scheme\PLT\collects\doc\mred> #<path:C:\Program Files\LISP\Dr. Scheme\PLT\collects\doc\misclib> #<path:C:\Program Files\LISP\Dr. Scheme\PLT\collects\doc\intermediate-lambda> #<path:C:\Program Files\LISP\Dr. Scheme\PLT\collects\doc\intermediate> #<path:C:\Program Files\LISP\Dr. Scheme\PLT\collects\doc\insidemz> #<path:C:\Program Files\LISP\Dr. Scheme\PLT\collects\doc\help> #<path:C:\Program Files\LISP\Dr. Scheme\PLT\collects\doc\framework> #<path:C:\Program Files\LISP\Dr. Scheme\PLT\collects\doc\foreign> #<path:C:\Program Files\LISP\Dr. Scheme\PLT\collects\doc\drscheme> #<path:C:\Program Files\LISP\Dr. Scheme\PLT\collects\doc\beginning-abbr> #<path:C:\Program Files\LISP\Dr. Scheme\PLT\collects\doc\beginning> #<path:C:\Program Files\LISP\Dr. Scheme\PLT\collects\doc\advanced>)
Collections:
((#<path:C:\Documents and Settings\Administrator.ROBERT.004\Application Data\PLT Scheme\301\collects> "non-existent path") (#<path:C:\Program Files\LISP\Dr. Scheme\PLT\collects> (#<path:afm> #<path:algol60> #<path:browser> #<path:compiler> #<path:defaults> #<path:doc> #<path:drscheme> #<path:dynext> #<path:embedded-gui> #<path:eopl> #<path:errortrace> #<path:ffi> #<path:framework> #<path:frtime> #<path:games> #<path:graphics> #<path:help> #<path:hierlist> #<path:htdch> #<path:htdp> #<path:html> #<path:icons> #<path:info-domain> #<path:lang> #<path:launcher> #<path:make> #<path:mred> #<path:mrlib> #<path:mysterx> #<path:mzcom> #<path:mzlib> #<path:mzscheme> #<path:mztake> #<path:net> #<path:openssl> #<path:parser-tools> #<path:planet> #<path:plot> #<path:preprocessor> #<path:profj> #<path:profjBoxes> #<path:r5rs> #<path:setup> #<path:sgl> #<path:slatex> #<path:slibinit> #<path:slideshow> #<path:srfi> #<path:ssax> #<path:stepper> #<path:string-constants> #<path:swindle> #<path:syntax> #<path:syntax-color> #<path:test-suite> #<path:tex2page> #<path:texpict> #<path:trace> #<path:version> #<path:web-server> #<path:xml>)))
Human Language: english
Teachpack filenames: ()
Computer Language: (("Professional Languages" "Standard (R5RS)") #6(#f write mixed-fraction-e #f #t debug/profile))
>Description:
When I run the sample code below, which is taken from 

http://ocw.mit.edu/OcwWeb/Electrical-Engineering-and-Computer-Science/6-001Spring-2005/Recitations/index.htm

I keep getting -3.552713678822705, instead of 0.0
>How-To-Repeat:
(define (square x) (* x x))
(define dx 0.00390625)
(define (deriv f)
  (lambda (x)
    (/ (- (f (+ x dx))
          (f x))
       dx)))

((deriv (deriv (deriv square))) 3)
-3.552713678822705  ;; third derivative - The answer should be 0.0 
>Fix:
>Audit-Trail:
From: Eli Barzilay <eli@barzilay.org>
To: rrotstein@verizon.net, Matthew Flatt <mflatt@cs.utah.edu>
Cc: bugs@plt-scheme.org
Subject: Re: all/8159: possible bug
Date: Wed, 5 Jul 2006 22:40:50 -0400

 On Jul  5, rrotstein@verizon.net wrote:
 > When I run the sample code below, which is taken from 
 > 
 > http://ocw.mit.edu/OcwWeb/Electrical-Engineering-and-Computer-Science/6-001Spring-2005/Recitations/index.htm
 > 
 > I keep getting -3.552713678822705, instead of 0.0
 > 
 > *** How to repeat:
 > (define (square x) (* x x))
 > (define dx 0.00390625)
 > (define (deriv f)
 >   (lambda (x)
 >     (/ (- (f (+ x dx))
 >           (f x))
 >        dx)))
 > 
 > ((deriv (deriv (deriv square))) 3)
 > -3.552713678822705  ;; third derivative - The answer should be 0.0 
 
 Thanks for re-submitting.  I tried it now using exactly the same
 version and the same Windows version, and I still got 0.0.  Maybe you
 can try to upgrade to v350?
 
 (Matthew -- do you have any idea what can be causing this?)
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                   http://www.barzilay.org/                 Maze is Life!
From: Eli Barzilay <eli@barzilay.org>
To: Robert Rotstein <rrotstein@verizon.net>
Cc: bugs@plt-scheme.org
Subject: Re: all/8159: possible bug
Date: Wed, 5 Jul 2006 23:26:58 -0400

 On Jul  5, Robert Rotstein wrote:
 > I upgraded to v350, but I'm still getting that same result.
 > 
 > Welcome to DrScheme, version 350.
 > Language: Standard (R5RS).
 >  > ((deriv (deriv (deriv square))) 3)
 > -3.552713678822705
 >  >
 > 
 > I've attached the file that I'm loading in.
 
 Your file redefines `dx' later on, which changes the result.  It is
 like running this code:
 
   (define (square x) (* x x))
   
   (define dx 0.00390625)
   
   (define (deriv f)
     (lambda (x)
       (/ (- (f (+ x dx))
             (f x))
          dx)))
   
   (define tolerance 0.00001)
   
   (define dx tolerance)
   
   (printf ">>> ~s\n" ((deriv (deriv (deriv square))) 3))
 
 The second definition of `dx' is basically modifying it.
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                   http://www.barzilay.org/                 Maze is Life!

Class changed from "sw-bug" to "not-a-bug" by eli at Wed, 05 Jul 2006 23:36:52 -0400
Reason>>> mistake in code

Responsible changed from "nobody" to "eli" by eli at Wed, 05 Jul 2006 23:36:52 -0400
Reason>>> .

State changed from "open" to "closed" by eli at Wed, 05 Jul 2006 23:36:52 -0400
Reason>>> mistake in code

From: Eli Barzilay <eli@barzilay.org>
To: Robert Rotstein <rrotstein@verizon.net>
Cc: bugs@plt-scheme.org
Subject: Re: all/8159: possible bug
Date: Wed, 5 Jul 2006 23:35:55 -0400

 OK, I'll close the bug now.
 
 On Jul  5, Robert Rotstein wrote:
 > Thanks so much.  Another obvious error bites the dust.
 > 
 > Eli Barzilay wrote:
 > 
 > >On Jul  5, Robert Rotstein wrote:
 > >  
 > >
 > >>I upgraded to v350, but I'm still getting that same result.
 > >>
 > >>Welcome to DrScheme, version 350.
 > >>Language: Standard (R5RS).
 > >> > ((deriv (deriv (deriv square))) 3)
 > >>-3.552713678822705
 > >> >
 > >>
 > >>I've attached the file that I'm loading in.
 > >>    
 > >>
 > >
 > >Your file redefines `dx' later on, which changes the result.  It is
 > >like running this code:
 > >
 > >  (define (square x) (* x x))
 > >  
 > >  (define dx 0.00390625)
 > >  
 > >  (define (deriv f)
 > >    (lambda (x)
 > >      (/ (- (f (+ x dx))
 > >            (f x))
 > >         dx)))
 > >  
 > >  (define tolerance 0.00001)
 > >  
 > >  (define dx tolerance)
 > >  
 > >  (printf ">>> ~s\n" ((deriv (deriv (deriv square))) 3))
 > >
 > >The second definition of `dx' is basically modifying it.
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                   http://www.barzilay.org/                 Maze is Life!
