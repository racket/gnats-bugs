From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Fri Feb 22 14:11:52 2008
Received: from nf-out-0910.google.com (nf-out-0910.google.com [64.233.182.191])
	by champlain.ccs.neu.edu (8.13.8/8.13.7) with ESMTP id m1MJBq0t012150
	for <bugs@bugs.plt-scheme.org>; Fri, 22 Feb 2008 14:11:52 -0500
Message-Id: <200802221911.m1MJBjlk012144@champlain.ccs.neu.edu>
Date: Fri, 22 Feb 2008 14:11:45 -0500
From: farr@mit.edu
To: bugs@plt-scheme.org
Subject: Add a for/vector/length iterator to the for loops in PLT Scheme v4

>Number:         9215
>Category:       mzscheme
>Synopsis:       Add a for/vector/length iterator to the for loops in PLT Scheme v4
>Class:          change-request
>Responsible:    mflatt
>Severity:       non-critical
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Fri Feb 22 14:15:01 -0500 2008
>Closed-Date:    Sun Jan 16 22:28:41 -0500 2011
>Last-Modified:  Sun Jan 16 22:28:41 -0500 2011
>Originator:     Will M. Farr
>Organization:
plt
>Submitter-Id:   unknown
>Release:        3.99.0.12-svn13feb2008
>Environment:
macosx "Darwin 229.113.255.10.in-addr.arpa 9.2.0 Darwin Kernel Version 9.2.0: Tue Feb  5 16:13:22 PST 2008; root:xnu-1228.3.13~1/RELEASE_I386 i386 i386" (i386-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 139095884

Collections:
(("/Users/farr/Library/PLT Scheme/3.99.0.12/collects" non-existent-path) ("/Applications/PLT Scheme Full/collects" "afm" "algol60" "browser" "combinator-parser" "compiler" "config" "defaults" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu-module" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrflow" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "mztake" "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profj" "profjWizard" "r5rs" "r6rs" "readline" "repos-time-stamp" "s-exp" "scheme" "scribble" "scribblings" "setup" "sgl" "sirmail" "skipper" "slatex" "slideshow" "srfi" "srpersist" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "tests" "tex2page" "texpict" "trace" "version" "waterworld" "web-server" "wxme" "xelda" "xml"))
Computer Language: (("Module") (#(#t write mixed-fraction-e #f #t debug) (default) #()))
>Description:
I'd like to propose the following macro for inclusion in PLT Scheme's for iterator collection:

(define-syntax for/vector/length
  (syntax-rules ()
    ((for/vector/length length (for-args ...) expr exprs ...)
     (let ((v (make-vector length)))
       (for ((i (in-naturals 0))
             for-args ...)
            (vector-set! v i (begin expr exprs ...)))
       v))))

It replaces vector-of-length-ec from SRFI-42, and is very helpful.  The syntax is 

(for/vector/length length-expr (for-clause ...) body ...+)

The number of iterations implied by the (for-clause ...) must be no greater than the length to which length-expr evaluates.  The result of (begin body ...+) must be a single value, which is stored in the corresponding slot of the result vector.  Any remaining slots are filled with an unspecified value.  

If this meets approval (and I find it *very* useful when writing numerical code which relies on vectors heavily), could some PLT expert put it in the right place?

Thanks,
Will
>How-To-Repeat:
None.
>Fix:
>Audit-Trail:
State changed from "open" to "closed" by mflatt at Sun, 16 Jan 2011 22:28:41 -0500
Reason>>> `for/vector' now exists with an optional `#:length'
argument

