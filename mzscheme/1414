From robby@cs.rice.edu  Wed Mar 29 16:03:57 2000
Received: from localhost (cupertino.cs.rice.edu [128.42.2.124])
	by cs.rice.edu (8.9.0/8.9.0) with ESMTP id QAA11711
	for <plt-gnats>; Wed, 29 Mar 2000 16:03:57 -0600 (CST)
Message-Id: <200003292203.QAA11711@cs.rice.edu>
Date: Wed, 29 Mar 2000 16:03:57 -0600 (CST)
From: robby@cs.rice.edu
To: plt-gnats@cs.rice.edu
Subject: regexp-match can return a list with #f in it

>Number:         1414
>Category:       mzscheme
>Synopsis:       regexp-match can return a list with #f in it
>Confidential:   no
>Severity:       serious
>Priority:       medium
>Responsible:    mflatt
>State:          closed
>Class:          doc-bug
>Submitter-Id:   unknown
>Arrival-Date:   Wed Mar 29 22:15:03 GMT 2000
>Last-Modified:  Wed Apr 19 09:27:11 CDT 2000
>Originator:     Robert Bruce Findler
>Organization:
titan
>Release:        102/10d8
>Environment:
macos (ppc-mac)
Tools: ("analysis" "CVS" "debug" "project-manager" "syncheck" "typeset" "unit-bundle")
Docs Installed:
("drscheme" "framework" "help" "icons" "misclib" "mred" "mzc" "mzscheme" "r5rs" "teach" "teachpack" "tools")
Collections:
(("Cupertino:Robby:robby:collects" ("account" "backgammon" "checkers" "CVS" "doonesbury" "friendly" "icfp-pc-99" "magic" "mahjongg" "paper-utils" "pente" "pop-pop" "set-fonts" "solutions" "test-image-map" "xmahjongg")) ("Cupertino:Robby:robby:proj:talks" ("CVS" "icfp98" "lc" "lunch1" "unit-patterns" "unit-proposal" "util")) ("Cupertino:Robby:robby:proj:papers" ("c+u.save" "CVS" "dr" "dr-column" "dr-journal" "drafthead.sty" "geometric-control" "graphical-units" "java-blame" "sba-procedures" "senior-thesis" "signature-constraints" "type-safety" "typed-unit-calculus" "unit" "unit-semantics")) ("Cupertino:robby:plt exp:collects" ("afm" "browser" "cogen" "compiler" "countdwn" "CVS" "defaults" "doc" "drjava" "drscheme" "drscheme-jr" "dynext" "errortrace" "framework" "games" "graphics" "guibuilder" "help" "hierarchy" "hierlist" "htdp" "icons" "launcher" "make" "mrdemo" "mred" "mrspidey" "mysterx" "mzlib" "mzos" "mzscheme" "net" "quasiquote" "readline" "setup" "slatex" "slibinit" "srpersist" "stepper" "tests" "texpict" "typeset" "userspce" "xml" "zodiac")) ("Cupertino:robby:mflatt:collects" ("calendar" "CVS" "graph" "pousse" "sirmail" "slideshow")))
>Description:

>How-To-Repeat:
> (regexp-match (regexp (format "^U[a-z]*[ ]*(0-9)*")) "U")
("U" #f)

>Fix:
>Audit-Trail:

From: Matthew Flatt <mflatt@cs.utah.edu>
To: robby@cs.rice.edu
Cc: plt-gnats@cs.rice.edu
Subject: Re: all/1414: regexp-match can return a list with #f in it
Date: Wed, 29 Mar 2000 17:00:23 -0700 (MST)

 Quoting robby@cs.rice.edu:
 > > (regexp-match (regexp (format "^U[a-z]*[ ]*(0-9)*")) "U")
 > ("U" #f)
 
 The documentation is lacking. It says a sub-pattern can only fail ---
 while the overall pattern succeeds --- when it appears in combination
 with "|". In fact, a sub-pattern can also fail in combination with "*",
 "+", and "?".
 
 To explain, consider a slightly simpler case:
 
   (regexp-match (regexp "(0)*") "")
 
 This produces
 
  ("" #f)
 
 because the parenthesized sub-pattern never matches anything in the
 string. In contrast,
 
   (regexp-match (regexp "(0*)") "")
 
 produces
 
  ("" "")
 
 because the sub-pattern matches the empty string.
 
 I'll fix the docs.
 
 Matthew
 

From: "Robby Findler" <robby@cs.rice.edu>
To: "Matthew Flatt" <mflatt@cs.utah.edu>
Cc: <plt-gnats@cs.rice.edu>
Subject: Re: all/1414: regexp-match can return a list with #f in it
Date: Wed, 29 Mar 2000 19:48:37 -0600

 Ah, thanks. That clarifies things. The first or second line of the docs for
 regexp-match says something like "returns #f or a list of strings", btw.
 That should read "returns #f or a list of strings and #f's." or something a
 little clearer that that...
 
 Robby
 ----- Original Message -----
 From: Matthew Flatt <mflatt@cs.utah.edu>
 To: <robby@cs.rice.edu>
 Cc: <plt-gnats@cs.rice.edu>
 Sent: Wednesday, March 29, 2000 6:00 PM
 Subject: Re: all/1414: regexp-match can return a list with #f in it
 
 
 > Quoting robby@cs.rice.edu:
 > > > (regexp-match (regexp (format "^U[a-z]*[ ]*(0-9)*")) "U")
 > > ("U" #f)
 >
 > The documentation is lacking. It says a sub-pattern can only fail ---
 > while the overall pattern succeeds --- when it appears in combination
 > with "|". In fact, a sub-pattern can also fail in combination with "*",
 > "+", and "?".
 >
 > To explain, consider a slightly simpler case:
 >
 >   (regexp-match (regexp "(0)*") "")
 >
 > This produces
 >
 >  ("" #f)
 >
 > because the parenthesized sub-pattern never matches anything in the
 > string. In contrast,
 >
 >   (regexp-match (regexp "(0*)") "")
 >
 > produces
 >
 >  ("" "")
 >
 > because the sub-pattern matches the empty string.
 >
 > I'll fix the docs.
 >
 > Matthew
 >

Responsible-Changed-From-To: steck->mflatt
Responsible-Changed-By: mflatt
Responsible-Changed-When: Mon Apr 10 16:11:09 2000
Responsible-Changed-Why:

State-Changed-From-To: open-closed
State-Changed-By: mflatt
State-Changed-When: Wed Apr 19 09:27:05 2000
State-Changed-Why:
Docs fixed.

 
>Unformatted:
