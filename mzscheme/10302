From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Fri Jun 12 19:51:13 2009
Received: from qw-out-2122.google.com (qw-out-2122.google.com [74.125.92.24])
	by champlain.ccs.neu.edu (8.14.2/8.14.2) with ESMTP id n5CNp6T7031675
	for <bugs@bugs.plt-scheme.org>; Fri, 12 Jun 2009 19:51:06 -0400
Message-Id: <200906122351.n5CNp4U6031667@champlain.ccs.neu.edu>
Date: Fri, 12 Jun 2009 19:51:04 -0400
From: cce@ccs.neu.edu
To: bugs@plt-scheme.org
Subject: (eqv? -0.0 +0.0) behavior does not match documentation

>Number:         10302
>Category:       mzscheme
>Synopsis:       (eqv? -0.0 +0.0) behavior does not match documentation
>Class:          doc-bug
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Fri Jun 12 19:52:01 -0400 2009
>Closed-Date:    Fri Jun 12 21:01:18 -0400 2009
>Last-Modified:  Fri Jun 12 21:01:18 -0400 2009
>Originator:     Carl Eastlund
>Organization:
plt
>Submitter-Id:   unknown
>Release:        4.2
>Environment:
MacPPC / Mozilla/5.0 (Macintosh; U; PPC Mac OS X 10.5; en-US; rv:1.9.0.1) Gecko/2008070206 Firefox/3.0.1
>Description:
Section 3.2 (Numbers) of the PLT Scheme Reference says:

"Two numbers are eqv? when they are both inexact or both exact, and when they are = (except for +nan.0, as noted above). Two numbers are equal? when they are eqv?."

However, as demonstrated in the program below, -0.0 and +0.0 are both inexact and = to each other, but not eqv?.  I don't know if the problem lies in the documentation or implementation.
>How-To-Repeat:
#lang scheme
(define pos +0.0)
(define neg -0.0)

(inexact? pos)
(inexact? neg)
(= pos neg)

(eqv? pos neg)
>Fix:
>Audit-Trail:
Class changed from "sw-bug" to "doc-bug" by mflatt at Fri, 12 Jun 2009 21:01:18 -0400
Reason>>> doc bug

State changed from "open" to "closed" by mflatt at Fri, 12 Jun 2009 21:01:18 -0400
Reason>>> Added 0.0 and -0.0 to the list of `eqv?' exceptions "as noted above".

