From apache@plt-scheme.org Wed Jul 28 09:08:39 2004
Received: from champlain.ccs.neu.edu (champlain.ccs.neu.edu [127.0.0.1])
	by champlain.ccs.neu.edu (8.12.10/8.12.10) with ESMTP id i6SD8c0u007297
	for <bugs@plt-scheme.org>; Wed, 28 Jul 2004 09:08:38 -0400
Message-Id: <200407281308.i6SD8caU007295@champlain.ccs.neu.edu>
Date: Wed, 28 Jul 2004 09:08:38 -0400
From: sebastian.egner@philips.com
To: bugs@plt-scheme.org
Subject: (= (/ 1 (/ -1 3)) -3) => #f

>Number:         6968
>Category:       mzscheme
>Synopsis:       (= (/ 1 (/ -1 3)) -3) => #f
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       critical
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Wed Jul 28 09:10:01 -0400 2004
>Last-Modified:  Wed Jul 28 09:46:33 -0400 2004
>Originator:     Sebastian Egner
>Organization:
plt
>Submitter-Id:   unknown
>Release:        207
>Environment:
windows-2000
>Description:
(/ 1 (/ -1 3)) => #e-3.0, which is neither EQUAL? or = to -3.
>How-To-Repeat:
see description
>Fix:
>Audit-Trail:
Responsible changed from "nobody" to "mflatt" by mflatt at Wed, 28 Jul 2004 09:46:33 -0400
Reason>>> mz

State changed from "open" to "closed" by mflatt at Wed, 28 Jul 2004 09:46:33 -0400
Reason>>> Fixed in CVS and for v208.

The bug was introduced in v207 with an optimization
for inverses of exact rationals. The optimization didn't
check for a negative numerator. While I was at it, I
generalized the optimization to deal with negative inveres
(i.e., dividing -1 by an exact rational).

Thanks very much for the bug report,
Matthew

