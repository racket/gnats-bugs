From nobody@cs.rice.edu  Wed Apr 29 10:15:15 1998
Received: from web.cs.rice.edu (web.cs.rice.edu [128.42.1.163])
          by cs.rice.edu (8.8.5/8.8.4) with ESMTP
	  id KAA00393 for <plt-gnats@cs.rice.edu>; Wed, 29 Apr 1998 10:15:15 -0500 (CDT)
Message-Id: <199804291515.KAA12732@web.cs.rice.edu>
Date: Wed, 29 Apr 1998 10:15:14 -0500 (CDT)
From: chewy@mcione.com
Reply-To: chewy@mcione.com
To: plt-gnats@cs.rice.edu
Subject: MzScheme 51 MacOS 68K GC crashes 

>Number:         586
>Category:       mzscheme
>Synopsis:       MzScheme 51 MacOS 68K GC crashes
>Confidential:   no
>Severity:       critical
>Priority:       high
>Responsible:    mflatt
>State:          closed
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Wed Apr 29 15:30:02 GMT 1998
>Last-Modified:  Wed Jun  3 08:56:35 CDT 1998
>Originator:     Paul Snively
>Organization:
titan
>Release:        51
>Environment:
Mac 68000
>Description:
Mac 68K MzScheme 51 built from source with CodeWarrior Pro 1 crashes almost immediately upon launch.
>How-To-Repeat:
Download source code and extract all archives.
Update archives using CW 11 IDE (included with CW Pro 1).
Update archives using CW Pro 1 IDE.
Make "the gc.68k.µ"
Make "MzScheme.(lib).68k.µ"
Make "MzScheme.(app).68k.µ"
Double-click resulting "MzScheme 68k" app in plt folder.
Click "OK" button in command-line dialog box.
MzScheme crashes.

A quick look with a debugger reveals that MzScheme is attempting to
initialize a port, which attempts to allocate some memory, which attempts
to run finalizers, which crashes.

Hope this helps!

Paul Snively

>Fix:

>Audit-Trail:

From: Matthew Flatt <mflatt@cs.rice.edu>
To: chewy@mcione.com
Cc: plt-gnats@cs.rice.edu
Subject: Re: all/586: MzScheme 51 MacOS 68K GC crashes 
Date: Wed, 29 Apr 1998 15:28:53 -0500 (CDT)

 Quoting chewy@mcione.com:
 > >Description:
 > Mac 68K MzScheme 51 built from source with CodeWarrior Pro 1 crashes
 > almost immediately upon launch.
 
 The problem is almost certainly that the GC doesn't see global
 variables because the way they are compiled has changed. Have you
 successfully compiled any previous version of MzScheme with that
 compiler?
 
 What happens if you #define MUST_REGISTER_GLOBALS? (Just add
  #define MUST_REGISTER_GLOBALS
 at the top of src/mzscheme/sconfig.h.)
 
 Thanks,
 Matthew

Responsible-Changed-From-To: steck->mflatt
Responsible-Changed-By: mflatt
Responsible-Changed-When: Thu Apr 30 14:29:55 1998
Responsible-Changed-Why:

State-Changed-From-To: open-closed
State-Changed-By: mflatt
State-Changed-When: Wed Jun  3 08:48:52 1998
State-Changed-Why:

After the 52 release, we upgraded to CW Pro 3. For the next release,
I've modified the GC so that 68k far globals will work (at least in CW
Pro 3, but almost certainly forever afterward).  While MzScheme still
compiles with near globals in Pro 3, MrEd doesn't, so MzScheme will be
compiled with far globals by default.

Also, since CW's standard libraries have changed, I had to modify some
source code in addition to projects (e.g., I now use tha Mac's time
fucntions directly to make (seconds->date (file-modify-seconds f))
return the correct date); these changes mostly affect MrEd, though.

Finally, beware that CW doesn't compile MzScheme properly for 68k when
"Optimize Speed" is turned on. I've submitted a bug report to
Metorwerks (with a 15 line program to reproduce the bug).

>Unformatted:
