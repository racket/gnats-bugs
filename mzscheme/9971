From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Wed Dec 10 19:21:34 2008
Received: from rv-out-0506.google.com (rv-out-0506.google.com [209.85.198.235])
	by champlain.ccs.neu.edu (8.14.2/8.14.2) with ESMTP id mBB0LRGC028234
	for <bugs@bugs.plt-scheme.org>; Wed, 10 Dec 2008 19:21:27 -0500
Message-Id: <200812110021.mBB0LIkF028227@champlain.ccs.neu.edu>
Date: Wed, 10 Dec 2008 19:21:18 -0500
From: ntoronto@cs.byu.edu
To: bugs@plt-scheme.org
Subject: log with fixnum zero is inconsistent with self or spec

>Number:         9971
>Category:       mzscheme
>Synopsis:       log with fixnum zero is inconsistent with self or spec
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       non-critical
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Wed Dec 10 19:24:01 -0500 2008
>Closed-Date:    Fri Jan 08 09:04:24 -0500 2010
>Last-Modified:  Fri Jan 08 09:04:24 -0500 2010
>Originator:     Neil Toronto
>Organization:
plt
>Submitter-Id:   unknown
>Release:        4.1.2
>Environment:
Linux x86_64 / Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.0.3) Gecko/2008092510 Ubuntu/8.04 (hardy) Firefox/3.0.3
>Description:
PLT Scheme correctly implements "fllog" in the arithmetic library:

    > (require rnrs/arithmetic/flonums-6)
    > (fllog (real->flonum 0.0))
    -inf.0
    > (fllog (fixnum->flonum 0))
    -inf.0

So math's log is inconsistent either with itself or R6RS:

    > (log 0.0)
    -inf.0
    > (log 0)
    log: undefined for 0
>How-To-Repeat:
>Fix:
>Audit-Trail:
From: Matthew Flatt <mflatt@cs.utah.edu>
To: ntoronto@cs.byu.edu, bugs@plt-scheme.org
Cc: 
Subject: Re: [plt-bug] all/9971: log with fixnum zero is inconsistent with self or spec
Date: Thu, 11 Dec 2008 07:45:28 -0700

 At Wed, 10 Dec 2008 19:24:01 -0500, ntoronto@cs.byu.edu wrote:
 > PLT Scheme correctly implements "fllog" in the arithmetic library:
 > 
 >     > (require rnrs/arithmetic/flonums-6)
 >     > (fllog (real->flonum 0.0))
 >     -inf.0
 >     > (fllog (fixnum->flonum 0))
 >     -inf.0
 > 
 > So math's log is inconsistent either with itself or R6RS:
 > 
 >     > (log 0.0)
 >     -inf.0
 >     > (log 0)
 >     log: undefined for 0
 
 I'm not sure I understand the problem.
 
 The `log' function is not required to treat an exact 0 like an inexact
 0, and that's why the last two examples produce different result. In
 fact, I think the two examples above appear in the R6RS description of
 `log'.
 
 Or is the issue something else?
 
 
 Thanks,
 Matthew
 
From: Neil Toronto <ntoronto@cs.byu.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: bugs@plt-scheme.org
Subject: Re: [plt-bug] all/9971: log with fixnum zero is inconsistent with
 self or spec
Date: Thu, 11 Dec 2008 12:29:08 -0700

 Matthew Flatt wrote:
 > At Wed, 10 Dec 2008 19:24:01 -0500, ntoronto@cs.byu.edu wrote:
 >> PLT Scheme correctly implements "fllog" in the arithmetic library:
 >>
 >>     > (require rnrs/arithmetic/flonums-6)
 >>     > (fllog (real->flonum 0.0))
 >>     -inf.0
 >>     > (fllog (fixnum->flonum 0))
 >>     -inf.0
 >>
 >> So math's log is inconsistent either with itself or R6RS:
 >>
 >>     > (log 0.0)
 >>     -inf.0
 >>     > (log 0)
 >>     log: undefined for 0
 > 
 > I'm not sure I understand the problem.
 > 
 > The `log' function is not required to treat an exact 0 like an inexact
 > 0, and that's why the last two examples produce different result. In
 > fact, I think the two examples above appear in the R6RS description of
 > `log'.
 
 Ah, I see it now. I only looked at the Standard Libraries document.
 
 > Or is the issue something else?
 
 I can't see any reason for (log 0) to try to preserve exactness when 1) 
 it can't, and 2) the only other argument it can possibly preserve 
 exactness for is 1.
 
 Practically speaking, I'm doing multi-variable statistical inference, 
 which pretty much demands that I work in log probabilities. Scheme 
 computes using -inf.0 very sanely, which makes it an excellent choice 
 for representing probability zero.
 
 It's not that this:
 
      (define (log. x)
        (log (exact->inexact x)))
 
 is especially difficult to do, it's just a little annoying to have to do it.
 
 Neil
 


State changed from "open" to "closed" by mflatt at Fri, 08 Jan 2010 09:04:24 -0500
Reason>>> Not a bug, but `log' needed better docs.

