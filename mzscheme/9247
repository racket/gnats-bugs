From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Thu Mar 13 11:19:39 2008
Received: from rn-out-0910.google.com (rn-out-0910.google.com [64.233.170.184])
	by champlain.ccs.neu.edu (8.13.8/8.13.7) with ESMTP id m2DFJdGZ001758
	for <bugs@bugs.plt-scheme.org>; Thu, 13 Mar 2008 11:19:39 -0400
Message-Id: <200803131519.m2DFJW30001754@champlain.ccs.neu.edu>
Date: Thu, 13 Mar 2008 11:19:32 -0400
From: gmayer@little-lisper.org
To: bugs@plt-scheme.org
Subject: backquote mechanism broken

>Number:         9247
>Category:       mzscheme
>Synopsis:       backquote mechanism broken
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       critical
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Thu Mar 13 11:20:01 -0400 2008
>Closed-Date:    Mon Mar 16 06:33:19 -0400 2009
>Last-Modified:  Mon Mar 16 06:33:19 -0400 2009
>Originator:     Mayer Goldberg
>Organization:
plt
>Submitter-Id:   unknown
>Release:        360
>Environment:
macosx "Darwin Macintosh-2.local 9.1.0 Darwin Kernel Version 9.1.0: Wed Oct 31 17:46:22 PDT 2007; root:xnu-1228.0.2~1/RELEASE_I386 i386 i386" (i386-macosx) (get-display-depth) = 32
Docs Installed:
(("/Applications/programming/PLT Scheme v360/doc" "r5rs" "mzscheme" "mred" "help" "tour" "drscheme" "srfi" "mzlib" "misclib" "mrlib" "framework" "foreign" "mzc" "tools" "insidemz" "web-server" "swindle" "plot" "release-notes" "t-y-scheme" "tex2page" "beginning" "beginning-abbr" "intermediate" "intermediate-lambda" "advanced" "teachpack" "teachpack-htdc" "profj-beginner" "profj-intermediate" "profj-advanced"))
Human Language: english
(current-memory-use) 66662400

Collections:
(("/Users/admin/Library/PLT Scheme/360/collects" non-existent-path) ("/Applications/programming/PLT Scheme v360/collects" "afm" "algol60" "browser" "compiler" "config" "defaults" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "framework" "frtime" "games" "graphics" "help" "hierlist" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mzlib" "mzscheme" "mztake" "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profj" "profjBoxes" "profjWizard" "r5rs" "readline" "setup" "sgl" "slatex" "slibinit" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-suite" "tex2page" "texpict" "trace" "version" "web-server" "xml"))
Teachpack filenames: ()
Computer Language: (("Professional Languages" "PLT" "Pretty Big (includes MrEd and Advanced Student)") #6(#t write mixed-fraction-e #f #t debug))
>Description:
unquote and unquote-splicing are legitimate symbols. While the following works:

> `(quote)
(quote)

the following will generate error messages:

> `(unquote)
unquote: expects exactly one expression in: (unquote)
> `(unquote-splicing)
unquote-splicing: invalid context within quasiquote in: (unquote-splicing)
>How-To-Repeat:
>Fix:
>Audit-Trail:
From: "Robby Findler" <robby@cs.uchicago.edu>
To: gmayer@little-lisper.org, bugs@plt-scheme.org
Cc: nobody@plt-scheme.org, eli@plt-scheme.org, matthias@plt-scheme.org,
        sk@plt-scheme.org, mflatt@plt-scheme.org, clements@plt-scheme.org,
        jay@plt-scheme.org, meunier@plt-scheme.org, sowens@plt-scheme.org,
        kathyg@plt-scheme.org, awick@plt-scheme.org, jacobm@plt-scheme.org,
        cce@plt-scheme.org, dalev@plt-scheme.org, samth@plt-scheme.org,
        ryanc@plt-scheme.org
Subject: Re: [plt-bug] all/9247: backquote mechanism broken
Date: Thu, 13 Mar 2008 10:25:13 -0500

 Did you want this?
 
 > `(,'unquote)
 (unquote)
 > `(,'unquote-splicing)
 (unquote-splicing)
 
 The quasiquote macro treats unquote and unquote-splicing that show up
 in its argument specially (quote, on the other hand does not, which is
 why the first example worked).
 
 hth,
 Robby
 
 On Thu, Mar 13, 2008 at 10:20 AM,  <gmayer@little-lisper.org> wrote:
 > A new problem report is waiting at
 >   http://bugs.plt-scheme.org/query/?cmd=view&pr=9247
 >
 >  Reported by Mayer Goldberg for release: 360
 >
 >  *** Description:
 >  unquote and unquote-splicing are legitimate symbols. While the following works:
 >
 >  > `(quote)
 >  (quote)
 >
 >  the following will generate error messages:
 >
 >  > `(unquote)
 >  unquote: expects exactly one expression in: (unquote)
 >  > `(unquote-splicing)
 >  unquote-splicing: invalid context within quasiquote in: (unquote-splicing)
 >
 >  *** How to repeat:
 >
 >
 >  *** Environment:
 >  macosx "Darwin Macintosh-2.local 9.1.0 Darwin Kernel Version 9.1.0: Wed Oct 31 17:46:22 PDT 2007; root:xnu-1228.0.2~1/RELEASE_I386 i386 i386" (i386-macosx) (get-display-depth) = 32
 >  Docs Installed:
 >  (("/Applications/programming/PLT Scheme v360/doc" "r5rs" "mzscheme" "mred" "help" "tour" "drscheme" "srfi" "mzlib" "misclib" "mrlib" "framework" "foreign" "mzc" "tools" "insidemz" "web-server" "swindle" "plot" "release-notes" "t-y-scheme" "tex2page" "beginning" "beginning-abbr" "intermediate" "intermediate-lambda" "advanced" "teachpack" "teachpack-htdc" "profj-beginner" "profj-intermediate" "profj-advanced"))
 >  Human Language: english
 >  (current-memory-use) 66662400
 >
 >  Collections:
 >  (("/Users/admin/Library/PLT Scheme/360/collects" non-existent-path) ("/Applications/programming/PLT Scheme v360/collects" "afm" "algol60" "browser" "compiler" "config" "defaults" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "framework" "frtime" "games" "graphics" "help" "hierlist" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mzlib" "mzscheme" "mztake" "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profj" "profjBoxes" "profjWizard" "r5rs" "readline" "setup" "sgl" "slatex" "slibinit" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-suite" "tex2page" "texpict" "trace" "version" "web-server" "xml"))
 >  Teachpack filenames: ()
 >  Computer Language: (("Professional Languages" "PLT" "Pretty Big (includes MrEd and Advanced Student)") #6(#t write mixed-fraction-e #f #t debug))
 >
 >
From: "Mayer Goldberg" <gmayer@little-lisper.org>
To: "Robby Findler" <robby@cs.uchicago.edu>
Cc: bugs@plt-scheme.org, nobody@plt-scheme.org, eli@plt-scheme.org,
        matthias@plt-scheme.org, sk@plt-scheme.org, mflatt@plt-scheme.org,
        clements@plt-scheme.org, jay@plt-scheme.org, meunier@plt-scheme.org,
        sowens@plt-scheme.org, kathyg@plt-scheme.org, awick@plt-scheme.org,
        jacobm@plt-scheme.org, cce@plt-scheme.org, dalev@plt-scheme.org,
        samth@plt-scheme.org, ryanc@plt-scheme.org
Subject: Re: [plt-bug] all/9247: backquote mechanism broken
Date: Thu, 13 Mar 2008 17:45:00 +0200

 Thanks for your quick response!
 
 > Did you want this?
 >
 >  > `(,'unquote)
 >  (unquote)
 >  > `(,'unquote-splicing)
 >  (unquote-splicing)
 >
 >  The quasiquote macro treats unquote and unquote-splicing that show up
 >  in its argument specially (quote, on the other hand does not, which is
 >  why the first example worked).
 
 What you're suggesting is a workaround and an explanation of the
 reasoning that led to the bug. But it still is non-standard behaviour
 for backquote. Please comapre with [Petite] Chez Scheme:
 
 > `(unquote)
 (unquote)
 > `(unquote-splicing)
 (unquote-splicing)
 
 and LispWorks Common LISP:
 
 CL-USER 2 > `(unquote)
 (UNQUOTE)
 
 CL-USER 3 > `(unquote-splicing)
 (UNQUOTE-SPLICING)
 
 and CLisp Common LISP:
 
 [1]> `(unquote)
 (UNQUOTE)
 [2]> `(unquote-splicing)
 (UNQUOTE-SPLICING)
 
 Kind regards,
 
 Mayer
 
 >
 >  hth,
 >  Robby
 >
 >  On Thu, Mar 13, 2008 at 10:20 AM,  <gmayer@little-lisper.org> wrote:
 >  > A new problem report is waiting at
 >
 > >   http://bugs.plt-scheme.org/query/?cmd=view&pr=9247
 >  >
 >  >  Reported by Mayer Goldberg for release: 360
 >  >
 >  >  *** Description:
 >  >  unquote and unquote-splicing are legitimate symbols. While the following works:
 >  >
 >  >  > `(quote)
 >  >  (quote)
 >  >
 >  >  the following will generate error messages:
 >  >
 >  >  > `(unquote)
 >  >  unquote: expects exactly one expression in: (unquote)
 >  >  > `(unquote-splicing)
 >  >  unquote-splicing: invalid context within quasiquote in: (unquote-splicing)
 >  >
 >  >  *** How to repeat:
 >  >
 >  >
 >  >  *** Environment:
 >  >  macosx "Darwin Macintosh-2.local 9.1.0 Darwin Kernel Version 9.1.0: Wed Oct 31 17:46:22 PDT 2007; root:xnu-1228.0.2~1/RELEASE_I386 i386 i386" (i386-macosx) (get-display-depth) = 32
 >  >  Docs Installed:
 >  >  (("/Applications/programming/PLT Scheme v360/doc" "r5rs" "mzscheme" "mred" "help" "tour" "drscheme" "srfi" "mzlib" "misclib" "mrlib" "framework" "foreign" "mzc" "tools" "insidemz" "web-server" "swindle" "plot" "release-notes" "t-y-scheme" "tex2page" "beginning" "beginning-abbr" "intermediate" "intermediate-lambda" "advanced" "teachpack" "teachpack-htdc" "profj-beginner" "profj-intermediate" "profj-advanced"))
 >  >  Human Language: english
 >  >  (current-memory-use) 66662400
 >  >
 >  >  Collections:
 >  >  (("/Users/admin/Library/PLT Scheme/360/collects" non-existent-path) ("/Applications/programming/PLT Scheme v360/collects" "afm" "algol60" "browser" "compiler" "config" "defaults" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "framework" "frtime" "games" "graphics" "help" "hierlist" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mzlib" "mzscheme" "mztake" "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profj" "profjBoxes" "profjWizard" "r5rs" "readline" "setup" "sgl" "slatex" "slibinit" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-suite" "tex2page" "texpict" "trace" "version" "web-server" "xml"))
 >  >  Teachpack filenames: ()
 >  >  Computer Language: (("Professional Languages" "PLT" "Pretty Big (includes MrEd and Advanced Student)") #6(#t write mixed-fraction-e #f #t debug))
 >  >
 >  >
 >
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: "Mayer Goldberg" <gmayer@little-lisper.org>
Cc: "Robby Findler" <robby@cs.uchicago.edu>, bugs@plt-scheme.org,
        nobody@plt-scheme.org, eli@plt-scheme.org, matthias@plt-scheme.org,
        sk@plt-scheme.org, mflatt@plt-scheme.org, clements@plt-scheme.org,
        jay@plt-scheme.org, meunier@plt-scheme.org, sowens@plt-scheme.org,
        kathyg@plt-scheme.org, awick@plt-scheme.org, jacobm@plt-scheme.org,
        cce@plt-scheme.org, dalev@plt-scheme.org, samth@plt-scheme.org,
        ryanc@plt-scheme.org
Subject: Re: [plt-bug] all/9247: backquote mechanism broken
Date: Thu, 13 Mar 2008 11:47:07 -0400

 On Mar 13, 2008, at 11:45 AM, Mayer Goldberg wrote:
 
 >  Please comapre with [Petite] Chez Scheme:
 >
 >> `(unquote)
 > (unquote)
 >> `(unquote-splicing)
 > (unquote-splicing)
 
 
 Not that you're wrong Mayer, but you do realize that comparing  
 implementations is fruitless. Only standards (decidable) can  
 establish 'truth' here.
 
 Good to see you posting bug reports. Always appreciated -- Matthias
 
From: Matthew Flatt <mflatt@cs.utah.edu>
To: "Mayer Goldberg" <gmayer@little-lisper.org>
Cc: "Robby Findler" <robby@cs.uchicago.edu>, bugs@plt-scheme.org
Subject: Re: [plt-bug] all/9247: backquote mechanism broken
Date: Thu, 13 Mar 2008 09:57:15 -0600

 At Thu, 13 Mar 2008 17:45:00 +0200, "Mayer Goldberg" wrote:
 > What you're suggesting is a workaround and an explanation of the
 > reasoning that led to the bug. But it still is non-standard behaviour
 > for backquote.
 
 Careful with that word "standard"... :) R5RS says that it's
 unpredictable, and R6RS says that it's a syntax error.
 
 I find the syntax error more useful, because I make all sorts of
 mistakes when I try to use `quasiquote', and the comma-quote operator
 (as Robby suggested) lets you have an unusually placed `unquote' or
 `unquote-splicing'.
 
 Matthew
 
From: "Robby Findler" <robby@cs.uchicago.edu>
To: "Mayer Goldberg" <gmayer@little-lisper.org>
Cc: bugs@plt-scheme.org, nobody@plt-scheme.org, eli@plt-scheme.org,
        matthias@plt-scheme.org, sk@plt-scheme.org, mflatt@plt-scheme.org,
        clements@plt-scheme.org, jay@plt-scheme.org, meunier@plt-scheme.org,
        sowens@plt-scheme.org, kathyg@plt-scheme.org, awick@plt-scheme.org,
        jacobm@plt-scheme.org, cce@plt-scheme.org, dalev@plt-scheme.org,
        samth@plt-scheme.org, ryanc@plt-scheme.org
Subject: Re: [plt-bug] all/9247: backquote mechanism broken
Date: Thu, 13 Mar 2008 10:57:53 -0500

 I can see how this makes sense as a special case of just a symbol, but
 in general things will go wrong. For example, here's another example
 expression in petite:
 
   > `(unquote unquote)
 
   Error: misplaced unquote.
   Type (debug) to enter the debugger.
 
 IMO, treating unquote as a keyword in the quasiquote macro and
 requiring uses of it to be well-formed seems like the Right Thing, to
 me. I realize that I'm no standards body, nor am I the maintainer of
 our quasiquote macro, so probably best to let Matthew make some
 decision here!
 
 Errors uber alles!
 
 Robby
 
 On Thu, Mar 13, 2008 at 10:45 AM, Mayer Goldberg
 <gmayer@little-lisper.org> wrote:
 > Thanks for your quick response!
 >
 >
 >  > Did you want this?
 >  >
 >  >  > `(,'unquote)
 >  >  (unquote)
 >  >  > `(,'unquote-splicing)
 >  >  (unquote-splicing)
 >  >
 >  >  The quasiquote macro treats unquote and unquote-splicing that show up
 >  >  in its argument specially (quote, on the other hand does not, which is
 >  >  why the first example worked).
 >
 >  What you're suggesting is a workaround and an explanation of the
 >  reasoning that led to the bug. But it still is non-standard behaviour
 >  for backquote. Please comapre with [Petite] Chez Scheme:
 >
 >  > `(unquote)
 >
 > (unquote)
 >  > `(unquote-splicing)
 >  (unquote-splicing)
 >
 >  and LispWorks Common LISP:
 >
 >  CL-USER 2 > `(unquote)
 >  (UNQUOTE)
 >
 >  CL-USER 3 > `(unquote-splicing)
 >  (UNQUOTE-SPLICING)
 >
 >  and CLisp Common LISP:
 >
 >  [1]> `(unquote)
 >  (UNQUOTE)
 >  [2]> `(unquote-splicing)
 >  (UNQUOTE-SPLICING)
 >
 >  Kind regards,
 >
 >  Mayer
 >
 >
 >
 >  >
 >  >  hth,
 >  >  Robby
 >  >
 >  >  On Thu, Mar 13, 2008 at 10:20 AM,  <gmayer@little-lisper.org> wrote:
 >  >  > A new problem report is waiting at
 >  >
 >  > >   http://bugs.plt-scheme.org/query/?cmd=view&pr=9247
 >  >  >
 >  >  >  Reported by Mayer Goldberg for release: 360
 >  >  >
 >  >  >  *** Description:
 >  >  >  unquote and unquote-splicing are legitimate symbols. While the following works:
 >  >  >
 >  >  >  > `(quote)
 >  >  >  (quote)
 >  >  >
 >  >  >  the following will generate error messages:
 >  >  >
 >  >  >  > `(unquote)
 >  >  >  unquote: expects exactly one expression in: (unquote)
 >  >  >  > `(unquote-splicing)
 >  >  >  unquote-splicing: invalid context within quasiquote in: (unquote-splicing)
 >  >  >
 >  >  >  *** How to repeat:
 >  >  >
 >  >  >
 >  >  >  *** Environment:
 >  >  >  macosx "Darwin Macintosh-2.local 9.1.0 Darwin Kernel Version 9.1.0: Wed Oct 31 17:46:22 PDT 2007; root:xnu-1228.0.2~1/RELEASE_I386 i386 i386" (i386-macosx) (get-display-depth) = 32
 >  >  >  Docs Installed:
 >  >  >  (("/Applications/programming/PLT Scheme v360/doc" "r5rs" "mzscheme" "mred" "help" "tour" "drscheme" "srfi" "mzlib" "misclib" "mrlib" "framework" "foreign" "mzc" "tools" "insidemz" "web-server" "swindle" "plot" "release-notes" "t-y-scheme" "tex2page" "beginning" "beginning-abbr" "intermediate" "intermediate-lambda" "advanced" "teachpack" "teachpack-htdc" "profj-beginner" "profj-intermediate" "profj-advanced"))
 >  >  >  Human Language: english
 >  >  >  (current-memory-use) 66662400
 >  >  >
 >  >  >  Collections:
 >  >  >  (("/Users/admin/Library/PLT Scheme/360/collects" non-existent-path) ("/Applications/programming/PLT Scheme v360/collects" "afm" "algol60" "browser" "compiler" "config" "defaults" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "framework" "frtime" "games" "graphics" "help" "hierlist" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mzlib" "mzscheme" "mztake" "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profj" "profjBoxes" "profjWizard" "r5rs" "readline" "setup" "sgl" "slatex" "slibinit" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-suite" "tex2page" "texpict" "trace" "version" "web-server" "xml"))
 >  >  >  Teachpack filenames: ()
 >  >  >  Computer Language: (("Professional Languages" "PLT" "Pretty Big (includes MrEd and Advanced Student)") #6(#t write mixed-fraction-e #f #t debug))
 >  >  >
 >  >  >
 >  >
 >
From: "Sam TH" <samth@plt-scheme.org>
To: "Matthias Felleisen" <matthias@ccs.neu.edu>
Cc: "Mayer Goldberg" <gmayer@little-lisper.org>,
        "Robby Findler" <robby@cs.uchicago.edu>, bugs@plt-scheme.org,
        nobody@plt-scheme.org, eli@plt-scheme.org, matthias@plt-scheme.org,
        sk@plt-scheme.org, mflatt@plt-scheme.org, clements@plt-scheme.org,
        jay@plt-scheme.org, meunier@plt-scheme.org, sowens@plt-scheme.org,
        kathyg@plt-scheme.org, awick@plt-scheme.org, jacobm@plt-scheme.org,
        cce@plt-scheme.org, dalev@plt-scheme.org, ryanc@plt-scheme.org
Subject: Re: [plt-bug] all/9247: backquote mechanism broken
Date: Thu, 13 Mar 2008 11:59:37 -0400

 On Thu, Mar 13, 2008 at 11:47 AM, Matthias Felleisen
 <matthias@ccs.neu.edu> wrote:
 >
 >  On Mar 13, 2008, at 11:45 AM, Mayer Goldberg wrote:
 >
 >  >  Please comapre with [Petite] Chez Scheme:
 >  >
 >  >> `(unquote)
 >  > (unquote)
 >  >> `(unquote-splicing)
 >  > (unquote-splicing)
 >
 >
 >  Not that you're wrong Mayer, but you do realize that comparing
 >  implementations is fruitless. Only standards (decidable) can
 >  establish 'truth' here.
 
 To quote R6RS:
 
 It is a syntax violation if any of the identifiers quasiquote,
 unquote, or unquote-splicing appear in positions within a <qq
 template> otherwise than as described above.
 
 where 'as described above' means, for `unquote' and
 `unquote-spliciing', that they appear as the keyword of some subform
 of a `quasiquote'.  So R6RS specifically mandates the current MzScheme
 behavior.
 
 -- 
 sam th
 samth@ccs.neu.edu
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: "Sam TH" <samth@plt-scheme.org>
Cc: "Mayer Goldberg" <gmayer@little-lisper.org>,
        "Robby Findler" <robby@cs.uchicago.edu>, bugs@plt-scheme.org,
        nobody@plt-scheme.org, eli@plt-scheme.org, matthias@plt-scheme.org,
        sk@plt-scheme.org, mflatt@plt-scheme.org, clements@plt-scheme.org,
        jay@plt-scheme.org, meunier@plt-scheme.org, sowens@plt-scheme.org,
        kathyg@plt-scheme.org, awick@plt-scheme.org, jacobm@plt-scheme.org,
        cce@plt-scheme.org, dalev@plt-scheme.org, ryanc@plt-scheme.org
Subject: Re: [plt-bug] all/9247: backquote mechanism broken
Date: Thu, 13 Mar 2008 12:09:49 -0400

 So you are wrong Mayer, at least as of R6RS :-)
 
 (I do recall playing with such border cases before R3RS. It's fun.)
 
 
 On Mar 13, 2008, at 11:59 AM, Sam TH wrote:
 
 > On Thu, Mar 13, 2008 at 11:47 AM, Matthias Felleisen
 > <matthias@ccs.neu.edu> wrote:
 >>
 >>  On Mar 13, 2008, at 11:45 AM, Mayer Goldberg wrote:
 >>
 >>>  Please comapre with [Petite] Chez Scheme:
 >>>
 >>>> `(unquote)
 >>> (unquote)
 >>>> `(unquote-splicing)
 >>> (unquote-splicing)
 >>
 >>
 >>  Not that you're wrong Mayer, but you do realize that comparing
 >>  implementations is fruitless. Only standards (decidable) can
 >>  establish 'truth' here.
 >
 > To quote R6RS:
 >
 > It is a syntax violation if any of the identifiers quasiquote,
 > unquote, or unquote-splicing appear in positions within a <qq
 > template> otherwise than as described above.
 >
 > where 'as described above' means, for `unquote' and
 > `unquote-spliciing', that they appear as the keyword of some subform
 > of a `quasiquote'.  So R6RS specifically mandates the current MzScheme
 > behavior.
 >
 > -- 
 > sam th
 > samth@ccs.neu.edu
 
From: "Mayer Goldberg" <gmayer@little-lisper.org>
To: "Matthias Felleisen" <matthias@ccs.neu.edu>
Cc: "Sam TH" <samth@plt-scheme.org>, "Robby Findler" <robby@cs.uchicago.edu>,
        bugs@plt-scheme.org, nobody@plt-scheme.org, eli@plt-scheme.org,
        matthias@plt-scheme.org, sk@plt-scheme.org, mflatt@plt-scheme.org,
        clements@plt-scheme.org, jay@plt-scheme.org, meunier@plt-scheme.org,
        sowens@plt-scheme.org, kathyg@plt-scheme.org, awick@plt-scheme.org,
        jacobm@plt-scheme.org, cce@plt-scheme.org, dalev@plt-scheme.org,
        ryanc@plt-scheme.org
Subject: Re: [plt-bug] all/9247: backquote mechanism broken
Date: Fri, 14 Mar 2008 00:39:12 +0200

 You're right. It never occurred to me that the meaning of
 quasiquotation, which at some point was the same as common lisp,
 could/would change over time and depart from what I knew and used...
 Sorry for the bogus report.
 
 Re the standard being the ultimate judge, you are of course quite
 correct in a formal sense. There is, however, a sense where one might
 wonder why the standard for quasiquotation changed over time. I wonder
 if the next step would be to require that side effects to constants
 generate a run-time error. :-)
 
 I'll go study R6RS with a magnifying glass...
 
 Mayer
 
 On Thu, Mar 13, 2008 at 6:09 PM, Matthias Felleisen
 <matthias@ccs.neu.edu> wrote:
 >
 >  So you are wrong Mayer, at least as of R6RS :-)
 >
 >  (I do recall playing with such border cases before R3RS. It's fun.)
 >
 >
 >
 >
 >  On Mar 13, 2008, at 11:59 AM, Sam TH wrote:
 >
 >  > On Thu, Mar 13, 2008 at 11:47 AM, Matthias Felleisen
 >  > <matthias@ccs.neu.edu> wrote:
 >  >>
 >  >>  On Mar 13, 2008, at 11:45 AM, Mayer Goldberg wrote:
 >  >>
 >  >>>  Please comapre with [Petite] Chez Scheme:
 >  >>>
 >  >>>> `(unquote)
 >  >>> (unquote)
 >  >>>> `(unquote-splicing)
 >  >>> (unquote-splicing)
 >  >>
 >  >>
 >  >>  Not that you're wrong Mayer, but you do realize that comparing
 >  >>  implementations is fruitless. Only standards (decidable) can
 >  >>  establish 'truth' here.
 >  >
 >  > To quote R6RS:
 >  >
 >  > It is a syntax violation if any of the identifiers quasiquote,
 >  > unquote, or unquote-splicing appear in positions within a <qq
 >  > template> otherwise than as described above.
 >  >
 >  > where 'as described above' means, for `unquote' and
 >  > `unquote-spliciing', that they appear as the keyword of some subform
 >  > of a `quasiquote'.  So R6RS specifically mandates the current MzScheme
 >  > behavior.
 >  >
 >  > --
 >  > sam th
 >  > samth@ccs.neu.edu
 >
 >

State changed from "open" to "closed" by eli at Mon, 16 Mar 2009 06:33:19 -0400
Reason>>> see discussion

