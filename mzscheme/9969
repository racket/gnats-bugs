From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Wed Dec 10 03:03:22 2008
Received: from rv-out-0506.google.com (rv-out-0506.google.com [209.85.198.226])
	by champlain.ccs.neu.edu (8.14.2/8.14.2) with ESMTP id mBA83Frr016065
	for <bugs@bugs.plt-scheme.org>; Wed, 10 Dec 2008 03:03:15 -0500
Message-Id: <200812100802.mBA82vBR016058@champlain.ccs.neu.edu>
Date: Wed, 10 Dec 2008 03:02:57 -0500
From: godless@users.sf.net
To: bugs@plt-scheme.org
Subject: mzc produces broken executables

>Number:         9969
>Category:       mzscheme
>Synopsis:       mzc produces broken executables
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Wed Dec 10 03:04:01 -0500 2008
>Last-Modified:  Thu Dec 11 15:16:33 -0500 2008
>Originator:     Rent-a-slave
>Organization:
plt
>Submitter-Id:   unknown
>Release:        4.0.1
>Environment:
unix "Linux 2.6.22-2-686 #1 SMP Fri Aug 31 00:24:01 UTC 2007 i686 GNU/Linux" (i386-linux/3m) (get-display-depth) = 16
Human Language: english
(current-memory-use) 61067824

Collections:
(("/home/godless/.plt-scheme/4.0.1/collects" non-existent-path) ("/usr/lib/plt/collects" "rnrs" "mrlib" "swindle" "slideshow" "gui-debugger" "frtime" "htdch" "hierlist" "framework" "config" "net" "macro-debugger" "xml" "readline" "html" "texpict" "lang" "slatex" "eopl" "scribblings" "drscheme" "string-constants" "browser" "games" "info-domain" "launcher" "syntax" "s-exp" "file" "mysterx" "syntax-color" "compiler" "stepper" "parser-tools" "graphics" "typed-scheme" "mzlib" "test-box-recovery" "mzcom" "srfi" "dynext" "preprocessor" "r5rs" "htdp" "combinator-parser" "icons" "ffi" "algol60" "scheme" "teachpack" "help" "embedded-gui" "sgl" "mzscheme" "r6rs" "wxme" "profj" "scribble" "mred" "make" "afm" "setup" "planet" "test-engine" "defaults" "tests" "tex2page" "openssl" "trace" "web-server" "lazy" "errortrace" "plot" "version"))
Computer Language: (("Module") (#(#t write mixed-fraction-e #f #t debug) (default) #()))
>Description:
Programs compiled with mzc will not run if there exists a module 
in the program that uses the Swindle language module and is 
required "for syntax." An obscure error will occur when such a 
program is run:

UNKNOWN::234: read: bad syntax `#?'

 === context ===
loop
>How-To-Repeat:
Write two modules: ruin-program.scm and hello.scm.

ruin-program.scm:
#lang swindle
(define (foobar) 'DOESNT-MATTER)
(provide foobar)

hello.scm:
#lang swindle
(require-for-syntax "ruin-program.scm")
(display "You must be running this in mzscheme!")
(newline)

Compile with: mzc --exe hello hello.scm
>Fix:
>Audit-Trail:
From: Eli Barzilay <eli@barzilay.org>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: godless@users.sf.net, bugs@plt-scheme.org
Subject: Re: [plt-bug] all/9969: mzc produces broken executables
Date: Wed, 10 Dec 2008 20:38:16 -0500

 Matthew -- it looks like mzc prints stuff without worrying about code
 changing the output handlers.  The problem is basically because
 swindle's printer uses #?# for printout of expressions that are too
 deep.
 
 
 On Dec 10, godless@users.sf.net wrote:
 > *** Description:
 > Programs compiled with mzc will not run if there exists a module 
 > in the program that uses the Swindle language module and is 
 > required "for syntax." An obscure error will occur when such a 
 > program is run:
 > 
 > UNKNOWN::234: read: bad syntax `#?'
 > 
 >  === context ===
 > loop
 > 
 > *** How to repeat:
 > Write two modules: ruin-program.scm and hello.scm.
 > 
 > ruin-program.scm:
 > #lang swindle
 > (define (foobar) 'DOESNT-MATTER)
 > (provide foobar)
 > 
 > hello.scm:
 > #lang swindle
 > (require-for-syntax "ruin-program.scm")
 > (display "You must be running this in mzscheme!")
 > (newline)
 > 
 > Compile with: mzc --exe hello hello.scm
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                   http://www.barzilay.org/                 Maze is Life!

State changed from "open" to "closed" by mflatt at Thu, 11 Dec 2008 15:16:33 -0500
Reason>>> Fixed in SVN by changing the executable creator to not
work with the current output port. A more complete solution
in the long run is probably to prevent for-syntax modules
from setting global parameters (or something like that).

