From nobody@cs.rice.edu  Fri Sep  5 11:00:36 1997
Received: from web.cs.rice.edu (web.cs.rice.edu [128.42.1.163]) by cs.rice.edu (8.8.5/8.7.1) with ESMTP id LAA17708 for <plt-gnats@cs.rice.edu>; Fri, 5 Sep 1997 11:00:35 -0500 (CDT)
Message-Id: <199709051600.LAA21508@web.cs.rice.edu>
Date: Fri, 5 Sep 1997 11:00:34 -0500 (CDT)
From: shade@csc.smsu.edu
Reply-To: shade@csc.smsu.edu
To: plt-gnats@cs.rice.edu
Subject: normalize-path fails for UNC paths 

>Number:         291
>Category:       mzscheme
>Synopsis:       normalize-path fails for UNC paths
>Confidential:   no
>Severity:       serious
>Priority:       medium
>Responsible:    mflatt
>State:          closed
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Fri Sep  5 16:05:01 GMT 1997
>Last-Modified:  Fri Sep  5 16:41:01 CDT 1997
>Originator:     Eric Shade
>Organization:
titan
>Release:        50
>Environment:
MS Windows NT
>Description:
I installed DrScheme on a Windows NT share that is only accessible via a UNC (Universal Naming Convention) path (in this case, \\eccentric\pubware\plt, so students will run DrScheme va a shortcut that points to \\eccentric\pubware\plt\drscheme\drscheme.exe).  While loading (either during or just after loading trigger.ss) it calls normalize-path and then fails, complaining that "\\\\eccentric\\pubware" is invalid or doesn't exist.

A UNC path is just like a normal path without a drive letter, except that it begins with two backslashes instead of one.  The syntax is

\\machine\share\path

It looks like normalize-path is not prepared to parse these names.
>How-To-Repeat:

>Fix:

>Audit-Trail:

Responsible-Changed-From-To: ptg->mflatt
Responsible-Changed-By: mflatt
Responsible-Changed-When: Fri Sep  5 16:36:22 1997
Responsible-Changed-Why:

State-Changed-From-To: open-closed
State-Changed-By: mflatt
State-Changed-When: Fri Sep  5 16:36:28 1997
State-Changed-Why:

Thank you for your very clear bug report. As it turns out, I fixed the
bug yesterday, but the fix will not be available until the next
release of DrScheme. The bug actually affects directory-exists?
and any function that relies on checking the existance of a
directory.

JFYI, the problem was that the stat() in Microsoft's C library doesn't
work on paths of the form "\\machine\share" (even though it works on
"\\machine\share\dir"). Perhaps there's a good reason for this, though
I certainly don't know what it would be. I got around the problem
by using a different function in this case.

>Unformatted:
