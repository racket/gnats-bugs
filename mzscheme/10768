From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Tue Feb 16 17:36:34 2010
Received: from mail-yw0-f196.google.com (mail-yw0-f196.google.com [209.85.211.196])
	by champlain.ccs.neu.edu (8.14.3/8.14.3) with ESMTP id o1GMaXxV018532
	for <bugs@bugs.plt-scheme.org>; Tue, 16 Feb 2010 17:36:33 -0500
Message-Id: <201002162236.o1GMaVgX018525@champlain.ccs.neu.edu>
Date: Tue, 16 Feb 2010 17:36:31 -0500
From: samth@ccs.neu.edu
To: bugs@plt-scheme.org
Subject: problem with duplicate ids and for-label

>Number:         10768
>Category:       mzscheme
>Synopsis:       problem with duplicate ids and for-label
>Class:          not-a-bug
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Tue Feb 16 17:40:01 -0500 2010
>Closed-Date:    Sun Nov 27 20:39:04 -0500 2011
>Last-Modified:  Sun Nov 27 20:39:04 -0500 2011
>Originator:     Sam TH
>Organization:
plt
>Submitter-Id:   unknown
>Release:        4.2.4.2-svn15feb2010
>Environment:
unix "Linux ajax 2.6.31-17-generic #54-Ubuntu SMP Thu Dec 10 16:20:31 UTC 2009 i686 GNU/Linux" (i386-linux/3m) (get-display-depth) = 24
Human Language: english
(current-memory-use) 269439904

Collections:
(("/home/samth/.plt-scheme/4.2.4.2/collects" non-existent-path) ("/home/samth/sw/plt-trunk/collects" "ffi" "hierlist" "teachpack" ".svn" "icons" "framework" "planet" "test-engine" "trace" "unstable" "htdp" "setup" "embedded-gui" "readline" "browser" "deinprogramm" "algol60" "make" "scribblings" "mzscheme" "mrlib" "sgl" "r5rs" "xml" "redex" "repos-time-stamp" "honu" "games" "syntax-color" "launcher" "parser-tools" "reader" "slideshow" "help" "drscheme" "scheme" "dynext" "afm" "srpersist" "sirmail" "tests" "handin-client" "plot" "html" "tex2page" "handin-server" "meta" "info-domain" "graphics" "profile" "lazy" "macro-debugger" "lang" "compiler" "mzcom" "gui-debugger" "guibuilder" "mysterx" "frtime" "rnrs" "scribble" "r6rs" "stepper" "syntax" "scriblib" "2htdp" "combinator-parser" "string-constants" "waterworld" "openssl" "schemeunit" "slatex" "errortrace" "net" "eopl" "s-exp" "mzlib" "typed-scheme" "wxme" "web-server" "config" "test-box-recovery" "srfi" "svn.commit~" "mred" "v!
 ersion" "defaults" "at-exp" "texpict" "file" "swindle" "typed" "preprocessor"))
Computer Language: (("Determine language from source") (#(#t write mixed-fraction-e #f #t debug) (default) #() "#lang scheme\n" #t))
>Description:
This program:

#lang scheme/load

(module m1 scheme/base
  (require typed-scheme scheme/require (subtract-in scheme typed-scheme scheme/contract)
           (for-syntax scheme/base))
  (provide (all-from-out typed-scheme scheme)
           (for-syntax (all-from-out scheme/base))))

(module m2 scheme/base
  (require (for-meta #f 'm1)))

works for any other choice of phase level in m2 other than #f.  But with #f, it gives the error:

module: identifier already imported from a different source in:
  #%module-begin
  (quote m1)
  (quote m1)
>How-To-Repeat:
>Fix:
>Audit-Trail:
From: Matthew Flatt <mflatt@cs.utah.edu>
To: samth@ccs.neu.edu, bugs@plt-scheme.org
Cc: nobody@plt-scheme.org, bug-notification@plt-scheme.org
Subject: Re: [plt-bug] all/10768: problem with duplicate ids and for-label
Date: Tue, 16 Feb 2010 15:48:15 -0700

 At Tue, 16 Feb 2010 17:40:01 -0500, samth@ccs.neu.edu wrote:
 > This program:
 > 
 > #lang scheme/load
 > 
 > (module m1 scheme/base
 >   (require typed-scheme scheme/require (subtract-in scheme typed-scheme 
 > scheme/contract)
 >            (for-syntax scheme/base))
 >   (provide (all-from-out typed-scheme scheme)
 >            (for-syntax (all-from-out scheme/base))))
 > 
 > (module m2 scheme/base
 >   (require (for-meta #f 'm1)))
 > 
 > works for any other choice of phase level in m2 other than #f.  But with #f, 
 > it gives the error:
 > 
 > module: identifier already imported from a different source in:
 >   #%module-begin
 >   (quote m1)
 >   (quote m1)
 
 If I understand the report, then that's as intended. You have to pick
 which `#%module-begin' you want to import for-label.
 
 Other phases are ok, because the different `#%module-begin's get
 shifted to still-different phases, instead of being merged into the
 same for-label phase.
 
From: Matthew Flatt <mflatt@cs.utah.edu>
To: Sam Tobin-Hochstadt <samth@ccs.neu.edu>
Cc: bugs@plt-scheme.org, nobody@plt-scheme.org,
        bug-notification@plt-scheme.org
Subject: Re: [plt-bug] all/10768: problem with duplicate ids and for-label
Date: Tue, 16 Feb 2010 15:55:12 -0700

 At Tue, 16 Feb 2010 17:52:47 -0500, Sam Tobin-Hochstadt wrote:
 > On Tue, Feb 16, 2010 at 5:48 PM, Matthew Flatt <mflatt@cs.utah.edu> wrote=
 :
 > > At Tue, 16 Feb 2010 17:40:01 -0500, samth@ccs.neu.edu wrote:
 > >> This program:
 > >>
 > >> #lang scheme/load
 > >>
 > >> (module m1 scheme/base
 > >> =C2=A0 (require typed-scheme scheme/require (subtract-in scheme typed-=
 scheme
 > >> scheme/contract)
 > >> =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(for-syntax scheme/base))
 > >> =C2=A0 (provide (all-from-out typed-scheme scheme)
 > >> =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(for-syntax (all-from-out sch=
 eme/base))))
 > >>
 > >> (module m2 scheme/base
 > >> =C2=A0 (require (for-meta #f 'm1)))
 > >>
 > >> works for any other choice of phase level in m2 other than #f. =C2=A0B=
 ut with #f,
 > >> it gives the error:
 > >>
 > >> module: identifier already imported from a different source in:
 > >> =C2=A0 #%module-begin
 > >> =C2=A0 (quote m1)
 > >> =C2=A0 (quote m1)
 > >
 > > If I understand the report, then that's as intended. You have to pick
 > > which `#%module-begin' you want to import for-label.
 > >
 > > Other phases are ok, because the different `#%module-begin's get
 > > shifted to still-different phases, instead of being merged into the
 > > same for-label phase.
 >=20
 > I'm confused then.  Why does this program work:
 >=20
 > #lang scheme/load
 >=20
 > (module m1 scheme/base
 >   (require (for-syntax scheme/base))
 >   (provide (all-from-out scheme/base)
 >            (for-syntax (all-from-out scheme/base))))
 >=20
 > (module m2 scheme/base
 >   (require (for-meta #f 'm1)))
 >=20
 > It seems like m1 is still providing 2 bindings for every identifier.
 
 It's providing each binding twice --- but the same binding, as opposed
 to different bindings for the same name.
 
 In other words, it works for the same reason that
 
  #lang scheme/base
  (require scheme/base)
  (require scheme)
  (require scheme/base)
  (require scheme)
  (require scheme/base)
  (require scheme)
 
 works.
 
From: Sam Tobin-Hochstadt <samth@ccs.neu.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: bugs@plt-scheme.org, nobody@plt-scheme.org,
        bug-notification@plt-scheme.org
Subject: Re: [plt-bug] all/10768: problem with duplicate ids and for-label
Date: Tue, 16 Feb 2010 17:52:47 -0500

 On Tue, Feb 16, 2010 at 5:48 PM, Matthew Flatt <mflatt@cs.utah.edu> wrote:
 > At Tue, 16 Feb 2010 17:40:01 -0500, samth@ccs.neu.edu wrote:
 >> This program:
 >>
 >> #lang scheme/load
 >>
 >> (module m1 scheme/base
 >> =A0 (require typed-scheme scheme/require (subtract-in scheme typed-schem=
 e
 >> scheme/contract)
 >> =A0 =A0 =A0 =A0 =A0 =A0(for-syntax scheme/base))
 >> =A0 (provide (all-from-out typed-scheme scheme)
 >> =A0 =A0 =A0 =A0 =A0 =A0(for-syntax (all-from-out scheme/base))))
 >>
 >> (module m2 scheme/base
 >> =A0 (require (for-meta #f 'm1)))
 >>
 >> works for any other choice of phase level in m2 other than #f. =A0But wi=
 th #f,
 >> it gives the error:
 >>
 >> module: identifier already imported from a different source in:
 >> =A0 #%module-begin
 >> =A0 (quote m1)
 >> =A0 (quote m1)
 >
 > If I understand the report, then that's as intended. You have to pick
 > which `#%module-begin' you want to import for-label.
 >
 > Other phases are ok, because the different `#%module-begin's get
 > shifted to still-different phases, instead of being merged into the
 > same for-label phase.
 
 I'm confused then.  Why does this program work:
 
 #lang scheme/load
 
 (module m1 scheme/base
   (require (for-syntax scheme/base))
   (provide (all-from-out scheme/base)
            (for-syntax (all-from-out scheme/base))))
 
 (module m2 scheme/base
   (require (for-meta #f 'm1)))
 
 It seems like m1 is still providing 2 bindings for every identifier.
 --=20
 sam th
 samth@ccs.neu.edu


Class changed from "sw-bug" to "not-a-bug" by mflatt at Sun, 27 Nov 2011 20:39:04 -0500
Reason>>> as intended

State changed from "open" to "closed" by mflatt at Sun, 27 Nov 2011 20:39:04 -0500
Reason>>> not a bug

