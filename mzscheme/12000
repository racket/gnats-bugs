From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Fri Jun 24 13:00:41 2011
Received: from mail-vw0-f44.google.com (mail-vw0-f44.google.com [209.85.212.44])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id p5OH0d0P012001
	for <bugs@bugs.plt-scheme.org>; Fri, 24 Jun 2011 13:00:39 -0400
Message-Id: <201106241700.p5OH0W5l011990@champlain.ccs.neu.edu>
Date: Fri, 24 Jun 2011 13:00:32 -0400
From: eli@barzilay.org
To: bugs@racket-lang.org
Subject: Command line arguments => segfault

>Number:         12000
>Category:       mzscheme
>Synopsis:       Command line arguments => segfault
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Fri Jun 24 13:04:01 -0400 2011
>Closed-Date:    Thu Jun 30 11:49:05 -0400 2011
>Last-Modified:  Mon Aug 15 07:32:01 -0400 2011
>Originator:     Eli Barzilay
>Organization:
plt
>Submitter-Id:   unknown
>Release:        HEAD
>Environment:
Any
>Description:
Run the following code:

  (with-output-to-file "X" #:exists 'truncate
    (lambda () (for ([i 2044]) (display " x")) (newline)))

Now, in a shell that supports enough command-line arguments, run

  racket `cat X`

and this results in a segfault.

GDB shows this stacktrace:

#0  0x0000003d132330c5 in raise () from /lib64/libc.so.6
#1  0x0000003d13234a76 in abort () from /lib64/libc.so.6
#2  0x00000000006419d9 in fault_handler ()
#3  <signal handler called>
#4  0x000000000064a8eb in allocate_big ()
#5  0x0000000000425b89 in scheme_malloc_fail_ok ()
#6  0x00000000006293cf in scheme_make_vector ()
#7  0x0000000000423f54 in run_from_cmd_line.clone.1 ()
#8  0x0000000000425059 in main_after_stack ()
#9  0x00000000004256d1 in scheme_main_stack_setup ()
#10 0x000000000042509e in main ()
>How-To-Repeat:
>Fix:
>Audit-Trail:
From: Eli Barzilay <eli@barzilay.org>
To: bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12000: Command line arguments => segfault
Date: Fri, 24 Jun 2011 13:36:05 -0400

 30 minutes ago, eli@barzilay.org wrote:
 >   (with-output-to-file "X" #:exists 'truncate
 >     (lambda () (for ([i 2044]) (display " x")) (newline)))
 
 I should have added that 2044 is the breaking point -- using 2043
 works fine.
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!

State changed from "open" to "closed" by mflatt@racket-lang.org at Thu, 30 Jun 2011 11:49:05 -0400
Reason>>> A commit by mflatt@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/737a3bd91a
From: Eli Barzilay <eli@barzilay.org>
To: Matthew Flatt <mflatt@cs.utah.edu>, bugs@racket-lang.org
Cc: 
Subject: Re: [racket-bug] all/12000: Command line arguments => segfault
Date: Mon, 15 Aug 2011 07:31:05 -0400

 On June 24th, Eli Barzilay wrote:
 > 30 minutes ago, eli@barzilay.org wrote:
 > >   (with-output-to-file "X" #:exists 'truncate
 > >     (lambda () (for ([i 2044]) (display " x")) (newline)))
 > 
 > I should have added that 2044 is the breaking point -- using 2043
 > works fine.
 
 I just ran into this again, possibly when the total size is too big:
 
   > (with-output-to-file "X" #:exists 'truncate
       (lambda () (for ([i 6000]) (display " xxxxxxx")) (newline)))
 
 and then:
 
   $ racket `cat /tmp/X`
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!
