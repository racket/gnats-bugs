From nobody@champlain.ccs.neu.edu  Mon Aug 19 08:55:26 2002
Received: (from nobody@localhost)
	by champlain.ccs.neu.edu (8.9.3/8.8.7) id IAA27266
	for bugs@plt-scheme.org; Mon, 19 Aug 2002 08:55:26 -0400
Message-Id: <200208191255.IAA27266@champlain.ccs.neu.edu>
Date: Mon, 19 Aug 2002 08:55:26 -0400
From: Riku.Saikkonen@hut.fi
To: bugs@plt-scheme.org
Subject: infinite loop with mzc and load/use-compiled

>Number:         5746
>Category:       mzscheme
>Synopsis:       infinite loop with mzc and load/use-compiled
>Confidential:   no
>Severity:       serious
>Priority:       medium
>Responsible:    mflatt
>State:          closed
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Mon Aug 19 09:00:00 EDT 2002
>Closed-Date:    Fri Aug 23 14:55:56 EDT 2002
>Last-Modified:  Fri Aug 23 14:55:56 EDT 2002
>Originator:     Riku Saikkonen
>Release:        DrScheme v201 (self-compiled)
>Organization:
plt
>Environment:
linux-other
>Description:
I tried to compile a Scheme program that uses load/use-compiled and
noticed a strange bug in mzc: Native code compilation from a Scheme
program that uses load/use-compiled creates a file that, when loaded,
gets MzScheme into an infinite loop.

See the "steps to reproduce the problem" in this bug report for
details. In the example there, x.scm loads y.scm with
load/use-compiled, and loading the compiled x.scm into MzScheme hangs
it (I aborted the example with Ctrl-C, thus the "user break").
However, if I load/use-compiled y.scm first, then x.scm is loaded, but
only the definitions in y.scm are available - so it appears that
loading x.scm does nothing after y.scm is loaded.

The system I use is Debian GNU/Linux 3.0. I compiled MzScheme (and
DrScheme) from the DrScheme v201 Unix/X source distribution, using
--prefix and --enable-dynlib in the configure script.

(I know that I should probably use the module system instead of
load/use-compiled, but I thought I'd report this bug anyway...)

>How-To-Repeat:
rjs@lambda:~/x$ ls -laR
.:
total 7
drwx--S---    3 rjs      rjs          1024 Aug 19 15:42 ./
drwxr-s---   44 rjs      rjs          3072 Aug 19 15:40 ../
drwx--S---    3 rjs      rjs          1024 Aug 19 15:41 compiled/
-rw-------    1 rjs      rjs           147 Aug 19 15:40 x.scm
-rw-------    1 rjs      rjs            49 Aug 19 15:40 y.scm

./compiled:
total 3
drwx--S---    3 rjs      rjs          1024 Aug 19 15:41 ./
drwx--S---    3 rjs      rjs          1024 Aug 19 15:42 ../
drwx--S---    3 rjs      rjs          1024 Aug 19 15:41 native/

./compiled/native:
total 3
drwx--S---    3 rjs      rjs          1024 Aug 19 15:41 ./
drwx--S---    3 rjs      rjs          1024 Aug 19 15:41 ../
drwx--S---    2 rjs      rjs          1024 Aug 19 15:41 i386-linux/

./compiled/native/i386-linux:
total 2
drwx--S---    2 rjs      rjs          1024 Aug 19 15:41 ./
drwx--S---    3 rjs      rjs          1024 Aug 19 15:41 ../
rjs@lambda:~/x$ cat x.scm
(require mzscheme)

(load/use-compiled "y.scm")

(define (foobar1 x) (+ x 1))
(define (foobar2 x) (+ x 2))

(define (foobar4 x) (+ 1 (foobar3 x)))
rjs@lambda:~/x$ cat y.scm
(require mzscheme)

(define (foobar3 x) (+ x 3))
rjs@lambda:~/x$ /usr/local/lib/local-plt/mzc -d compiled/native/i386-linux x.scm
MzScheme compiler (mzc) version 201, Copyright (c) 1996-2002 PLT
"x.scm": 
 [output to "compiled/native/i386-linux/x.so"]
rjs@lambda:~/x$ /usr/local/lib/local-plt/mzc -d compiled/native/i386-linux y.scm
 
MzScheme compiler (mzc) version 201, Copyright (c) 1996-2002 PLT
"y.scm": 
 [output to "compiled/native/i386-linux/y.so"]
rjs@lambda:~/x$ /usr/local/lib/local-plt/mzscheme -e '(load/use-compiled "x.scm"
)'
Welcome to MzScheme version 201, Copyright (c) 1995-2002 PLT
user break
> 
rjs@lambda:~/x$ /usr/local/lib/local-plt/mzscheme -e '(load/use-compiled "y.scm"
)' -e '(load/use-compiled "x.scm")'
Welcome to MzScheme version 201, Copyright (c) 1995-2002 PLT
> foobar1
reference to undefined identifier: foobar1
> foobar2 
reference to undefined identifier: foobar2
> foobar3
#<primitive:foobar3>
> foobar4
reference to undefined identifier: foobar4
> 
rjs@lambda:~/x$ 

>Fix:

>Release-Note:

>Audit-Trail:
Responsible-Changed-From-To: steck->mflatt
Responsible-Changed-By: mflatt
Responsible-Changed-When: Fri Aug 23 14:55:56 2002
Responsible-Changed-Why:
    mz
State-Changed-From-To: open->closed
State-Changed-By: mflatt
State-Changed-When: Fri Aug 23 14:55:56 2002
State-Changed-Why:
    Thanks very much for the bug report. This turns out
    to be an old problem that I've had trouble tracking
    down, and your example helped me see what was
    important.
    
    It's fixed for v202.
    
    Thanks,
    Matthew
>Unformatted:

