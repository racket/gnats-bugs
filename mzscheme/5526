From dskippy@ccs.neu.edu  Thu Jun 20 10:00:59 2002
Received: from localhost (IDENT:root@localhost.localdomain [127.0.0.1])
	by champlain.ccs.neu.edu (8.9.3/8.8.7) with ESMTP id KAA16730
	for <bugs>; Thu, 20 Jun 2002 10:00:59 -0400
Message-Id: <200206201400.KAA16730@champlain.ccs.neu.edu>
Date: Thu, 20 Jun 2002 10:00:59 -0400
From: mike machenry <dskippy@ccs.neu.edu>
To: bugs@plt-scheme.org
Subject: Class syntax highlighing part 2

>Number:         5526
>Category:       mzscheme
>Synopsis:       Class syntax highlighing part 2
>Class:          change-request
>Responsible:    mflatt
>Severity:       non-critical
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Thu Jun 20 10:10:00 -0400 2002
>Closed-Date:    
>Last-Modified:  Fri Dec 02 19:06:53 -0500 2011
>Originator:     mike machenry
>Organization:
titan
>Submitter-Id:   unknown
>Release:        200-cvs20jun2002
>Environment:
unix "SunOS sulafat.ccs.neu.edu 5.8 Generic_108528-14 sun4u sparc SUNW,Sun-Blade-100" (sparc-solaris) (get-display-depth) = 24
Docs Installed:
("help" "beginning" "beginning-abbr" "advanced" "icons" "intermediate" "drscheme" "teachpack" "r5rs" "mzscheme" "mzlib" "mred" "framework" "misclib" "mrspidey" "mzc" "insidemz" "tools" "t-y-scheme" "intermediate-lambda" "recipes" "tex2page" "ile" "tour")
Collections: 
(("/proj/scheme/plt/collects" ("CVS" "browser" "compiler" "debug" "defaults" "drjava" "drscheme" "dynext" "errortrace" "framework" "games" "graphics" "help" "hierlist" "htdp" "html" "icons" "lang" "launcher" "make" "mred" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "readline" "setup" "slatex" "srpersist" "stepper" "string-constants" "syntax" "tests" "texpict" "parser-tools" "xml" "doc" "mrflow" "sirmail" "slibinit" "afm" "version" "typeset" "eopl" "web-server" "algol60" "cvs-time-stamp" "waterworld" "tex2page")))
Human Language: english
>Description:
I have noticed that when I inherit a method and do not use it in
my class, the method's name is brown in the inherit. This is true
for unreferenced rename identifiers aswell. I think that these
names should be highlighted in red. Red is for unbound variables
but you do use red to color unused required files. Perhaps you need
a new color that can be used for unreferenced variables. This would
be used to color unused requires, unused renames, unused inherits,
and possibly unreferenced let bound variables. This would really
help people know if they've made a mistake. Regardless of what you
do I think you should be consitent though. Further more base color
to me means things like parens and comments. After the syntax
checker is done I don't think much should be brown.
>How-To-Repeat:
(require
 (lib "list.ss")
 (lib "class.ss"))

(define class%
  (class object%
    (inherit referenced-inherit unreferenced-inherit)
    
    (rename
     (referenced-rename super1)
     (unreferenced-rename super2))
    
    (referenced-rename)
    (referenced-inherit)
    
    (super-instantiate ())
    ))
>Fix:
>Release-Note:
>Audit-Trail:
Responsible-Changed-From-To: steck->robby
Responsible-Changed-By: robby
Responsible-Changed-When: Thu Jun 20 10:39:31 2002
Responsible-Changed-Why:
    rbf
Responsible-Changed-From-To: robby->mflatt
Responsible-Changed-By: robby
Responsible-Changed-When: Wed Jan 14 14:35:28 2004
Responsible-Changed-Why:
    This appears to be a problem with stuff missing from the class macro.
>Unformatted:
