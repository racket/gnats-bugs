From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Wed Apr 18 14:52:12 2012
Received: from mail-vx0-f172.google.com (mail-vx0-f172.google.com [209.85.220.172])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id q3IIq93t003199
	for <bugs@bugs.plt-scheme.org>; Wed, 18 Apr 2012 14:52:09 -0400
Message-Id: <201204181852.q3IIq6gu003194@champlain.ccs.neu.edu>
Date: Wed, 18 Apr 2012 14:52:06 -0400
From: samth@ccs.neu.edu
To: bugs@racket-lang.org
Subject: `dynamic-require' of submodule fails

>Number:         12709
>Category:       mzscheme
>Synopsis:       `dynamic-require' of submodule fails
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Wed Apr 18 14:56:01 -0400 2012
>Last-Modified:  Wed Apr 18 15:48:02 -0400 2012
>Originator:     Sam Tobin-Hochstadt
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.2.901.1--2012-04-18(7279b02/a)
>Environment:
unix "Linux loki 3.0.0-16-generic #29-Ubuntu SMP Tue Feb 14 12:48:51 UTC 2012 x86_64 x86_64 x86_64 GNU/Linux" (i386-linux/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 186300628
Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()


Collections:
("/home/samth/tmp/tst/racket-full/add-on/5.2.901.1/collects"
 (non-existent-path))
("/home/samth/tmp/tst/racket-full/collects"
 ("datalog" "scriblib" "html" "racklog" "drracket" "dynext" "honu" "2htdp" "graphics" "make" "eopl" "test-box-recovery" "hierlist" "racket" "rackunit" "openssl" "r5rs" "algol60" "mzcom" "redex" "texpict" "swindle" "defaults" "trace" "combinator-parser" "mysterx" "info-domain" "meta" "teachpack" "setup" "repo-time-stamp" "games" "r6rs" "icons" "typed-scheme" "test-engine" "lazy" "stepper" "at-exp" "planet" "tests" "rnrs" "db" "web-server" "framework" "net" "scribblings" "string-constants" "help" "browser" "tex2page" "mzlib" "parser-tools" "errortrace" "data" "sirmail" "plot" "launcher" "handin-client" "syntax" "profile" "s-exp" "slideshow" "plai" "htdp" "typed-racket" "scheme" "syntax-color" "drscheme" "raco" "srfi" "reader" "preprocessor" "compiler" "config" "mred" "handin-server" "schemeunit" "typed" "macro-debugger" "deinprogramm" "ffi" "gui-debugger" "readline" "scribble" "unstable" "picturing-programs" "file" "sgl" "images" "wxme" "xrepl" "lang" "xml" "mrlib" "version" "!
 frtime" "mzscheme" "json" "embedded-gui" "slatex"))

Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((main) (test))))
>Description:
This program:

#lang racket/base
(module m racket (displayln 'foo))
(dynamic-require '(submod "." m) #f)

produces the error:

standard-module-name-resolver: no base path for relative submodule path: (submod "." m)
>How-To-Repeat:
>Fix:
>Audit-Trail:
From: Ryan Culpepper <ryan@cs.utah.edu>
To: samth@ccs.neu.edu, bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12709: `dynamic-require' of submodule fails
Date: Wed, 18 Apr 2012 13:08:20 -0600

 On 04/18/2012 12:56 PM, samth@ccs.neu.edu wrote:
 > A new problem report is waiting at
 >    http://bugs.racket-lang.org/query/?cmd=view&pr=12709
 >
 > Reported by Sam Tobin-Hochstadt for release: 5.2.901.1--2012-04-18(7279b02/a)
 >
 > *** Description:
 > This program:
 >
 > #lang racket/base
 > (module m racket (displayln 'foo))
 > (dynamic-require '(submod "." m) #f)
 
 Try this instead:
 
 (dynamic-require (module-path-index-join
                    '(submod "." m)
                    (variable-reference->resolved-module-path
                     (#%variable-reference)))
                   #f)
 
 Ryan
 
 
 
 >
 > produces the error:
 >
 > standard-module-name-resolver: no base path for relative submodule path: (submod "." m)
 >
 > *** How to repeat:
 >
 >
 > *** Environment:
 > unix "Linux loki 3.0.0-16-generic #29-Ubuntu SMP Tue Feb 14 12:48:51 UTC 2012 x86_64 x86_64 x86_64 GNU/Linux" (i386-linux/3m) (get-display-depth) = 32
 > Human Language: english
 > (current-memory-use) 186300628
 > Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()
 >
 >
 > Collections:
 > ("/home/samth/tmp/tst/racket-full/add-on/5.2.901.1/collects"
 >   (non-existent-path))
 > ("/home/samth/tmp/tst/racket-full/collects"
 >   ("datalog" "scriblib" "html" "racklog" "drracket" "dynext" "honu" "2htdp" "graphics" "make" "eopl" "test-box-recovery" "hierlist" "racket" "rackunit" "openssl" "r5rs" "algol60" "mzcom" "redex" "texpict" "swindle" "defaults" "trace" "combinator-parser" "mysterx" "info-domain" "meta" "teachpack" "setup" "repo-time-stamp" "games" "r6rs" "icons" "typed-scheme" "test-engine" "lazy" "stepper" "at-exp" "planet" "tests" "rnrs" "db" "web-server" "framework" "net" "scribblings" "string-constants" "help" "browser" "tex2page" "mzlib" "parser-tools" "errortrace" "data" "sirmail" "plot" "launcher" "handin-client" "syntax" "profile" "s-exp" "slideshow" "plai" "htdp" "typed-racket" "scheme" "syntax-color" "drscheme" "raco" "srfi" "reader" "preprocessor" "compiler" "config" "mred" "handin-server" "schemeunit" "typed" "macro-debugger" "deinprogramm" "ffi" "gui-debugger" "readline" "scribble" "unstable" "picturing-programs" "file" "sgl" "images" "wxme" "xrepl" "lang" "xml" "mrlib" "version"
   "!
 >   frtime" "mzscheme" "json" "embedded-gui" "slatex"))
 >
 > Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((main) (test))))
From: Sam Tobin-Hochstadt <samth@ccs.neu.edu>
To: Ryan Culpepper <ryan@cs.utah.edu>
Cc: bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12709: `dynamic-require' of submodule fails
Date: Wed, 18 Apr 2012 15:12:05 -0400

 On Wed, Apr 18, 2012 at 3:08 PM, Ryan Culpepper <ryan@cs.utah.edu> wrote:
 > On 04/18/2012 12:56 PM, samth@ccs.neu.edu wrote:
 >>
 >> A new problem report is waiting at
 >>   http://bugs.racket-lang.org/query/?cmd=view&pr=12709
 >>
 >> Reported by Sam Tobin-Hochstadt for release:
 >> 5.2.901.1--2012-04-18(7279b02/a)
 >>
 >> *** Description:
 >> This program:
 >>
 >> #lang racket/base
 >> (module m racket (displayln 'foo))
 >> (dynamic-require '(submod "." m) #f)
 >
 >
 > Try this instead:
 >
 > (dynamic-require (module-path-index-join
 >                  '(submod "." m)
 >                  (variable-reference->resolved-module-path
 >                   (#%variable-reference)))
 >                 #f)
 
 Is requiring this code intended, or this just a workaround?
 
 -- 
 sam th
 samth@ccs.neu.edu
 
From: Ryan Culpepper <ryan@cs.utah.edu>
To: Sam Tobin-Hochstadt <samth@ccs.neu.edu>
Cc: bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12709: `dynamic-require' of submodule fails
Date: Wed, 18 Apr 2012 13:35:25 -0600

 On 04/18/2012 01:12 PM, Sam Tobin-Hochstadt wrote:
 > On Wed, Apr 18, 2012 at 3:08 PM, Ryan Culpepper<ryan@cs.utah.edu>  wrote:
 >> On 04/18/2012 12:56 PM, samth@ccs.neu.edu wrote:
 >>>
 >>> A new problem report is waiting at
 >>>    http://bugs.racket-lang.org/query/?cmd=view&pr=12709
 >>>
 >>> Reported by Sam Tobin-Hochstadt for release:
 >>> 5.2.901.1--2012-04-18(7279b02/a)
 >>>
 >>> *** Description:
 >>> This program:
 >>>
 >>> #lang racket/base
 >>> (module m racket (displayln 'foo))
 >>> (dynamic-require '(submod "." m) #f)
 >>
 >>
 >> Try this instead:
 >>
 >> (dynamic-require (module-path-index-join
 >>                   '(submod "." m)
 >>                   (variable-reference->resolved-module-path
 >>                    (#%variable-reference)))
 >>                  #f)
 >
 > Is requiring this code intended, or this just a workaround?
 
 I don't know about "intended", but I claim that the original 
 'dynamic-require' call doesn't make sense. A 'submod' module path only 
 makes sense when interpreted with respect to some module. The 
 'dynamic-require' procedure has no implicit module context. The fact 
 that the call happens to occur inside a module is 
 irrelevant---'dynamic-require' is dynamic. (Kind of like "Why can't 
 'eval' see my local variables?")
 
 Ryan
From: Kevin Tew <tewk@cs.utah.edu>
To: Ryan Culpepper <ryan@cs.utah.edu>
Cc: Sam Tobin-Hochstadt <samth@ccs.neu.edu>, bugs@racket-lang.org,
        nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12709: `dynamic-require' of submodule fails
Date: Wed, 18 Apr 2012 13:47:22 -0600

 On 04/18/2012 01:35 PM, Ryan Culpepper wrote:
 > On 04/18/2012 01:12 PM, Sam Tobin-Hochstadt wrote:
 >> On Wed, Apr 18, 2012 at 3:08 PM, Ryan Culpepper<ryan@cs.utah.edu>  
 >> wrote:
 >>> On 04/18/2012 12:56 PM, samth@ccs.neu.edu wrote:
 >>>>
 >>>> A new problem report is waiting at
 >>>>    http://bugs.racket-lang.org/query/?cmd=view&pr=12709
 >>>>
 >>>> Reported by Sam Tobin-Hochstadt for release:
 >>>> 5.2.901.1--2012-04-18(7279b02/a)
 >>>>
 >>>> *** Description:
 >>>> This program:
 >>>>
 >>>> #lang racket/base
 >>>> (module m racket (displayln 'foo))
 >>>> (dynamic-require '(submod "." m) #f)
 >>>
 >>>
 >>> Try this instead:
 >>>
 >>> (dynamic-require (module-path-index-join
 >>>                   '(submod "." m)
 >>>                   (variable-reference->resolved-module-path
 >>>                    (#%variable-reference)))
 >>>                  #f)
 >>
 >> Is requiring this code intended, or this just a workaround?
 >
 > I don't know about "intended", but I claim that the original 
 > 'dynamic-require' call doesn't make sense. A 'submod' module path only 
 > makes sense when interpreted with respect to some module. The 
 > 'dynamic-require' procedure has no implicit module context. The fact 
 > that the call happens to occur inside a module is 
 > irrelevant---'dynamic-require' is dynamic. (Kind of like "Why can't 
 > 'eval' see my local variables?")
 >
 > Ryan
 Could quote-module-path help here?
 I recently extended quote-module-path to support submodule paths.
 try (dynamic-require (quote-module-path 'm) #f)
 
 Kevin
