From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Sat Jan 13 13:15:27 2007
Received: from wx-out-0506.google.com (wx-out-0506.google.com [66.249.82.237])
	by champlain.ccs.neu.edu (8.13.8/8.13.7) with ESMTP id l0DIFJDB000991
	for <bugs@bugs.plt-scheme.org>; Sat, 13 Jan 2007 13:15:19 -0500
Message-Id: <200701131815.l0DIFHI3000985@champlain.ccs.neu.edu>
Date: Sat, 13 Jan 2007 13:15:17 -0500
From: hdg@cox.net
To: bugs@plt-scheme.org
Subject: eq-hash-code and equal-hash-code do not work as documented

>Number:         8485
>Category:       mzscheme
>Synopsis:       eq-hash-code and equal-hash-code do not work as documented
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Sat Jan 13 13:20:01 -0500 2007
>Closed-Date:    Mon Jan 15 00:47:47 -0500 2007
>Last-Modified:  Mon Jan 15 00:47:47 -0500 2007
>Originator:     David Goering
>Organization:
plt
>Submitter-Id:   unknown
>Release:        369.1-svn9dec2006
>Environment:
macosx "Darwin ip68-103-40-185.ks.ok.cox.net 8.8.0 Darwin Kernel Version 8.8.0: Fri Sep  8 17:18:57 PDT 2006; root:xnu-792.12.6.obj~1/RELEASE_PPC Power Macintosh powerpc" (ppc-macosx/3m) (get-display-depth) = 32
Docs Installed:
(("/Applications/PLT Scheme Full v369.1/doc" "r5rs" "mzscheme" "mred" "help" "tour" "drscheme" "srfi" "mzlib" "misclib" "mrlib" "framework" "foreign" "mzc" "tools" "insidemz" "web-server" "swindle" "plot" "release-notes" "t-y-scheme" "tex2page" "beginning" "beginning-abbr" "intermediate" "intermediate-lambda" "advanced" "teachpack" "teachpack-htdc" "profj-beginner" "profj-intermediate" "profj-advanced"))
Human Language: english
(current-memory-use) 71783512

Collections:
(("/Users/david/Library/PLT Scheme/369.1/collects" non-existent-path) ("/Applications/PLT Scheme Full v369.1/collects" "afm" "algol60" "browser" "compiler" "config" "defaults" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "framework" "frtime" "games" "graphics" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu-module" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrflow" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "mztake" "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profj" "profjBoxes" "profjWizard" "r5rs" "r6rs" "readline" "repos-time-stamp" "scribble" "setup" "sgl" "sirmail" "skipper" "slatex" "slideshow" "srfi" "srpersist" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-suite" "tests" "tex2page" "texpict" "trace" "version" "waterworld" "web-server" "xelda" "xml"))
Teachpack filenames: ()
Computer Language: (("Professional Languages" "PLT" "Textual (MzScheme, includes R5RS)") #6(#t write mixed-fraction-e #f #t debug))
>Description:
This claim in the documentation of eq-hash-code and equal-hash-code does not hold: "for the result integer k and any other exact integer j, (= k j) implies (eq? k j)".

The problem is that the hash of an integer is itself.
>How-To-Repeat:
(define target 3.14159)
(define hc1 (eq-hash-code target))
(define hc2 (eq-hash-code hc1))
(= hc1 hc2)  ; yields #t
(eq? #\x hc1)  ; yields #f


(define target (cons 3 3.3))
(define hc1 (equal-hash-code target))
(define hc2 (equal-hash-code hc1))
(= hc1 hc2)  ; yields #t
(eq? #\x hc1)  ; yields #f
>Fix:
>Audit-Trail:
From: Matthew Flatt <mflatt@cs.utah.edu>
To: hdg@cox.net, bugs@plt-scheme.org
Cc: 
Subject: Re: [plt-bug] all/8485: eq-hash-code and equal-hash-code do not work as documented
Date: Sun, 14 Jan 2007 05:15:28 +0800

 At Sat, 13 Jan 2007 13:20:02 -0500, hdg@cox.net wrote:
 > This claim in the documentation of eq-hash-code and equal-hash-code does not 
 > hold: "for the result integer k and any other exact integer j, (= k j) implies 
 > (eq? k j)".
 > 
 > The problem is that the hash of an integer is itself.
 
 Sorry - I don't understand.
 
 The hash code for an integer is itself only in the case that the
 integer is represented internally as a fixnum, and fixnms that are `='
 are also `eq?'.
 
 Also, I don't see how the results in the how-to-repeat section is in
 conflict with the above quote from the docs.
 
 Can you clarify for me?
 
 Thanks,
 Matthew
 
 > *** How to repeat:
 > (define target 3.14159)
 > (define hc1 (eq-hash-code target))
 > (define hc2 (eq-hash-code hc1))
 > (= hc1 hc2)  ; yields #t
 > (eq? #\x hc1)  ; yields #f
 > 
 > 
 > (define target (cons 3 3.3))
 > (define hc1 (equal-hash-code target))
 > (define hc2 (equal-hash-code hc1))
 > (= hc1 hc2)  ; yields #t
 > (eq? #\x hc1)  ; yields #f
 

State changed from "open" to "closed" by mflatt at Mon, 15 Jan 2007 00:47:47 -0500
Reason>>> not a bug

