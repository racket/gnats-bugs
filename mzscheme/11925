From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Mon May 16 23:16:31 2011
Received: from mail-fx0-f53.google.com (mail-fx0-f53.google.com [209.85.161.53])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id p4H3GSLF007015
	for <bugs@bugs.plt-scheme.org>; Mon, 16 May 2011 23:16:28 -0400
Message-Id: <201105170316.p4H3GM7s007010@champlain.ccs.neu.edu>
Date: Mon, 16 May 2011 23:16:22 -0400
From: eli@barzilay.org
To: bugs@racket-lang.org
Subject: Memory issues in regexp matcher

>Number:         11925
>Category:       mzscheme
>Synopsis:       Memory issues in regexp matcher
>Class:          sw-bug
>Responsible:    mflatt
>Notify-List:    eric.hanchrow@gmail.com
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Mon May 16 23:20:01 -0400 2011
>Last-Modified:  Tue May 17 18:01:34 -0400 2011
>Originator:     Eli Barzilay
>Organization:
plt
>Submitter-Id:   unknown
>Release:        HEAD
>Environment:
Any
>Description:
If I run the code below once, I get memory up to somewhere around 1gb,
so something seems wrong.  After that, I need to `collect-garbage' twice
to get memory down, which might be related to the problem.  Running it
several times makes it hover around 2gb.

(Semi-related, it behaves similarly with "(?:...)", which seems
suprising (as well as the fact that `regexp-match?' is as expensive as
`regexp-match').)
>How-To-Repeat:
(let* ([n 100000000] [s (string-append (make-string n #\a) "b")])
  (time (regexp-match? #rx"(a*?)b" s)))
>Fix:
