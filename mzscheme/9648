From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Fri Aug  1 13:25:30 2008
Received: from fk-out-0910.google.com (fk-out-0910.google.com [209.85.128.185])
	by champlain.ccs.neu.edu (8.14.2/8.14.2) with ESMTP id m71HPMQ1029684
	for <bugs@bugs.plt-scheme.org>; Fri, 1 Aug 2008 13:25:22 -0400
Message-Id: <200808011725.m71HPHrS029678@champlain.ccs.neu.edu>
Date: Fri, 1 Aug 2008 13:25:17 -0400
From: derick.eddington@gmail.com
To: bugs@plt-scheme.org
Subject: R6RS eval expand-time mutilating compound condition

>Number:         9648
>Category:       mzscheme
>Synopsis:       R6RS eval expand-time mutilating compound condition
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       non-critical
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Fri Aug 01 13:28:01 -0400 2008
>Last-Modified:  Sat Dec 03 11:02:39 -0500 2011
>Originator:     Derick Eddington
>Organization:
plt
>Submitter-Id:   unknown
>Release:        4.0.2.6-svn1aug2008
>Environment:
unix "Linux eep 2.6.24-19-generic #1 SMP Fri Jul 11 23:41:49 UTC 2008 i686 GNU/Linux" (i386-linux/3m) (get-display-depth) = 24
Human Language: english
(current-memory-use) 138622844

Collections:
(("/home/d/.plt-scheme/4.0.2.6/collects" "tests" "xitomatl") ("/home/d/plt/collects" "afm" "ffi" "net" "sgl" "xml" "eopl" "file" "help" "htdp" "html" "lang" "lazy" "make" "r5rs" "r6rs" "mred" "plot" "rnrs" "srfi" "wxme" "framework" "teachpack" "mzscheme" "games" "icons" "htdch" "s-exp" "mrlib" "mzcom" "mzlib" "graphics" "profj" "redex" "setup" "trace" "test-engine" "combinator-parser" "preprocessor" "test-box-recovery" "tex2page" "texpict" "scribblings" "stepper" "scribble" "typed-scheme" "web-server" "config" "compiler" "swindle" "dynext" "hierlist" "macro-debugger" "frtime" "defaults" "gui-debugger" "drscheme" "syntax-color" "planet" "mysterx" "errortrace" "scheme" "slatex" "syntax" "version" "algol60" "parser-tools" "openssl" "embedded-gui" "slideshow" "repos-time-stamp" "info-domain" "readline" "launcher" "string-constants" "browser"))
Computer Language: (("Module") (#(#t write mixed-fraction-e #f #t none) (default) #() "#lang scheme\n"))
>Description:
In the below example, the &assertion, &who, and &irritants are lost, and an &error is incorrectly added.  If the with-exception-handler re-raise is not done so that it's just doing the assertion-violation, the &assertion is retained and no &error is added, but &irritants and &who are lost, and the &message is altered with "someone: " prepended to the message string.

This seems to only happen for the expand-time of using eval.
>How-To-Repeat:
#!r6rs
(import 
  (rnrs)
  (rnrs eval))

(write
 (guard (ex [else (simple-conditions ex)])
   (eval
    '(let ()
       (define-syntax s
         (lambda (stx)
           (with-exception-handler
             (lambda (ex)
               (raise (condition ex)))
             (lambda ()
               (assertion-violation 'someone "oops" 1 2)))))
       (s)) 
    (environment '(rnrs)))))
(newline)

PRINT=>

(#(struct:&message "oops") #(struct:&cont-marks #<continuation-mark-set>) #(struct:&error))
>Fix:
>Audit-Trail:
From: Matthew Flatt <mflatt@cs.utah.edu>
To: derick.eddington@gmail.com, bugs@plt-scheme.org
Cc: 
Subject: Re: [plt-bug] all/9648: R6RS eval expand-time mutilating compound condition
Date: Fri, 1 Aug 2008 11:50:16 -0600

 >  (guard (ex [else (simple-conditions ex)])
 >    (eval
 >     '(let ()
 >        (define-syntax s
 >          (lambda (stx)
 >            (with-exception-handler
 >              (lambda (ex)
 >                (raise (condition ex)))
 >              (lambda ()
 >                (assertion-violation 'someone "oops" 1 2)))))
 >        (s)) 
 >     (environment '(rnrs))))
 
 That's a way to communicate across phases that I hadn't considered.
 I'll probably have to think about this one for a while.
 

