From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Thu Jun 27 12:40:49 2013
Received: from mail-oa0-f49.google.com (mail-oa0-f49.google.com [209.85.219.49])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id r5RGekRr022999
	for <bugs@bugs.plt-scheme.org>; Thu, 27 Jun 2013 12:40:46 -0400
Message-Id: <201306271640.r5RGeh1u022993@champlain.ccs.neu.edu>
Date: Thu, 27 Jun 2013 12:40:43 -0400
From: laurent.orseau@gmail.com
To: bugs@racket-lang.org
Subject: syntax-parse memory overflow

>Number:         13894
>Category:       mzscheme
>Synopsis:       syntax-parse memory overflow
>Class:          sw-bug
>Responsible:    ryanc
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Thu Jun 27 12:44:01 -0400 2013
>Last-Modified:  Tue Oct 22 15:53:13 -0400 2013
>Originator:     Laurent Orseau
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.3.5
>Environment:
unix "Linux UX31A 3.8.0-25-generic #37-Ubuntu SMP Thu Jun 6 20:47:07 UTC 2013 x86_64 x86_64 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
Human Language: french
(current-memory-use) 312199108
Links: (links) = ("x11" "test-recompile" "script-plugin" "orseau-racket" "rwind"); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()
raco pkg (show):
Installation-wide:
 [none]
User-specific, all-version:
 [none]
User-specific, version-specific (5.3.5):
 [none]



Collections:
("/home/orseau/.racket/5.3.5/collects"
 ("info-domain"))
("/usr/lib/racket/collects"
 ("mred" "wxme" "mysterx" "data" "eopl" "future-visualizer" "launcher" "errortrace" "mrlib" "pkg" "syntax" "2htdp" "framework" "compatibility" "planet" "drracket" "web-server" "s-exp" "math" "file" "slideshow" "ffi" "syntax-color" "unstable" "preprocessor" "rackunit" "mzcom" "picturing-programs" "reader" "frtime" "r5rs" "typed" "images" "sgl" "profile" "plai" "teachpack" "scheme" "typed-racket" "dynext" "net" "algol60" "htdp" "lang" "swindle" "texpict" "gui-debugger" "compiler" "openssl" "help" "embedded-gui" "graphics" "r6rs" "schemeunit" "trace" "typed-scheme" "xml" "config" "icons" "mzscheme" "at-exp" "slatex" "scribblings" "hierlist" "setup" "rnrs" "xrepl" "racket" "scriblib" "stepper" "games" "html" "drscheme" "string-constants" "deinprogramm" "datalog" "browser" "json" "readline" "raco" "version" "defaults" "test-engine" "plot" "scribble" "parser-tools" "racklog" "info-domain" "srfi" "lazy" "realm" "make" "redex" "mzlib" "macro-debugger" "db"))

Computer Language: (("Déterminer le langage à partir du code source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((main) (test))))
>Description:
The following program makes DrRacket and Racket get into an infinite loop, ending in a memory overflow.
It went so bad at some point for me that it entirely froze my computer under Linux (I had to hard-reboot). 
The following version seems to be sufficiently small so that DrRacket can catch the memory overflows.
I could find  a way around, but I'm still reporting it in case it matters to someone (and because I think this should probably not happen).

If you remove either the ~optional, the ~and or the . rst, it doesn't crash.

#lang racket
(require (for-syntax syntax/parse))

; Omit either the ~optional, the ~and or the . rst,
; and it doesn't crash
(define-syntax (foo stx)
  (syntax-parse stx
    [(_ (~and (~seq a ...)
              (~or (~optional (~seq #:kw-rest kw-rest:id))))
        ...
        . rst
        )
     #'1]))

#;(foo a b c)


Laurent
>How-To-Repeat:
>Fix:
>Audit-Trail:
Responsible changed from "nobody" to "ryanc" by samth at Tue, 22 Oct 2013 15:53:13 -0400
Reason>>> .

