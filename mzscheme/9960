From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Thu Dec  4 11:27:13 2008
Received: from rv-out-0506.google.com (rv-out-0506.google.com [209.85.198.228])
	by champlain.ccs.neu.edu (8.14.2/8.14.2) with ESMTP id mB4GR5ZA023678
	for <bugs@bugs.plt-scheme.org>; Thu, 4 Dec 2008 11:27:05 -0500
Message-Id: <200812041627.mB4GR2sR023672@champlain.ccs.neu.edu>
Date: Thu, 4 Dec 2008 11:27:02 -0500
From: pnkfelix@ccs.neu.edu
To: bugs@plt-scheme.org
Subject: Support number->string of inexact numbers in non base 10

>Number:         9960
>Category:       mzscheme
>Synopsis:       Support number->string of inexact numbers in non base 10
>Class:          change-request
>Responsible:    mflatt
>Severity:       non-critical
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Thu Dec 04 11:28:01 -0500 2008
>Last-Modified:  Fri Feb 03 19:22:45 -0500 2012
>Originator:     Felix Klock
>Organization:
plt
>Submitter-Id:   unknown
>Release:        4.1.2
>Environment:
macosx "Darwin Chimaera.local 9.5.0 Darwin Kernel Version 9.5.0: Wed Sep  3 11:29:43 PDT 2008; root:xnu-1228.7.58~1/RELEASE_I386 i386 i386" (i386-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 125102032

Collections:
(("/Users/pnkfelix/Library/PLT Scheme/4.1.2/collects" non-existent-path) ("/Applications/PLT Scheme v4.1.2/collects" "afm" "algol60" "browser" "combinator-parser" "compiler" "config" "defaults" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "help" "hierlist" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profj" "r5rs" "r6rs" "readline" "redex" "rnrs" "s-exp" "scheme" "scribble" "scribblings" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tex2page" "texpict" "trace" "typed-scheme" "version" "web-server" "wxme" "xml"))
Computer Language: (("Module") (#(#t write mixed-fraction-e #f #t debug) (default) #() "#lang scheme\n"))
>Description:
Currently attempting to invoke number->string
on inexact numbers with a base other than 10
yields an error (an error that says something
about "printing", which is probably wrong since
one might invoke number->string without wanting
to print anything).

A user can already compose inexact->exact with
number->string on other bases to get 
a reasonable result; why not have 
number->string do that coercion and prepend
the #i to the result, rather than make the
user do it?

(One might object that the "#i" notation is a 
Scheme-ism that should not leak into the 
specification of number->string, the same way 
that number->string does not automatically 
prepend #x when you use base 16.  I do not 
buy this explanation, because you can already
do number->string on exact non-integers and
get results like "f/2" -- a user who wants
specifically formatted output already needs
to be careful in what kinds of inputs are 
provided to number->string.)
>How-To-Repeat:
Welcome to DrScheme, version 4.1.2 [3m].
Language: Module; memory limit: 512 megabytes.
> (list 15 #xf #i#xf #x#if)
(15 15 15.0 15.0)
> (number->string 15 16)
"f"
> (number->string (inexact->exact 7.5) 16)
"f/2"
> (number->string 7.5 16)
. . number->string: inexact numbers can only be printed in base 10

[[ compare to Larceny: ]]
Larceny v0.964+ "Fluoridation" (Aug 12 2008 22:00:42, precise:Posix Unix:unified)
larceny.heap, built on Tue Aug 12 22:01:04 EDT 2008

> (list 15 #xf #i#xf #x#if)
(15 15 15.0 15.0)

> (number->string 15 16)
"f"

> (number->string (inexact->exact 7.5) 16)
"f/2"

> (number->string 7.5 16)
"#if/2"
>Fix:
