From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Tue Jul 31 15:06:57 2012
Received: from mail-vb0-f44.google.com (mail-vb0-f44.google.com [209.85.212.44])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id q6VJ6sax020585
	for <bugs@bugs.plt-scheme.org>; Tue, 31 Jul 2012 15:06:54 -0400
Message-Id: <201207311906.q6VJ6pBg020578@champlain.ccs.neu.edu>
Date: Tue, 31 Jul 2012 15:06:51 -0400
From: erucker@bmc.edu
To: bugs@racket-lang.org
Subject: (string-replace in #lang racket is broken

>Number:         12958
>Category:       mzscheme
>Synopsis:       (string-replace in #lang racket is broken
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Tue Jul 31 15:08:01 -0400 2012
>Closed-Date:    Mon Aug 19 01:58:27 -0400 2013
>Last-Modified:  Mon Aug 19 01:58:27 -0400 2013
>Originator:     Eddie Rucker
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.3.0.16--2012-07-31(1a619bd0/d)
>Environment:
unix "Linux erucker 3.2.0-2-amd64 #1 SMP Sun Mar 4 22:48:17 UTC 2012 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 301697912
Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()


Collections:
("/home/erucker/.racket/5.3.0.16/collects"
 (non-existent-path))
("/home/erucker/plt/collects"
 ("scribble" "json" "html" "picturing-programs" "mzscheme" "eopl" "typed-racket" "rackunit" "mzcom" "compatibility" "lang" "macro-debugger" "reader" "file" "scribblings" "errortrace" "tests" "mysterx" "s-exp" "hierlist" "string-constants" "typed" "frtime" "plot" "trace" "scriblib" "mred" "defaults" "teachpack" "typed-scheme" "embedded-gui" "net" "web-server" "at-exp" "htdp" "launcher" "browser" "syntax-color" "gui-debugger" "version" "scheme" "compiler" "algol60" "test-engine" "profile" "data" "lazy" "setup" "readline" "racklog" "images" "r5rs" "parser-tools" "drracket" "graphics" "db" "future-visualizer" "unstable" "sgl" "syntax" "ffi" "racket" "mzlib" "rnrs" "wxme" ".gitignore" "xrepl" "stepper" "repo-time-stamp" "swindle" "plai" "mrlib" "make" "config" "xml" "openssl" "schemeunit" "datalog" "slideshow" "srfi" "meta" "sirmail" "honu" "dynext" "2htdp" "preprocessor" "framework" "drscheme" "icons" "texpict" "slatex" "help" "games" "deinprogramm" "handin-server" "handin-clien!
 t" "redex" "info-domain" "raco" "planet" "r6rs"))

Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((main) (test))))
>Description:
string-replace: arity mismatch;
 the expected number of arguments does not match the given number
  expected: at least 4
  given: 3
  arguments...:
   "foo bar baz"
   "bar"
   "blah"
>How-To-Repeat:
> (string-replace "foo bar baz" "bar" "blah")
>Fix:
>Audit-Trail:
From: Eli Barzilay <eli@barzilay.org>
To: erucker@bmc.edu, bugs@racket-lang.org
Cc: bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12958: (string-replace in #lang racket is broken
Date: Wed, 1 Aug 2012 03:15:00 -0400

 I've tried a bunch of things, but it always worked and always returned
 the expected "foo blah baz".  If this is reproducible, maybe you can
 make up a program text that demonstrates it without using the repl?
 Perhaps you're getting a binding by the same name from some other
 code?  (You can use check-syntax to see where you get some binding
 from.)
 
 
 12 hours ago, erucker@bmc.edu wrote:
 > *** Description:
 > string-replace: arity mismatch;
 >  the expected number of arguments does not match the given number
 >   expected: at least 4
 >   given: 3
 >   arguments...:
 >    "foo bar baz"
 >    "bar"
 >    "blah"
 > 
 > *** How to repeat:
 > > (string-replace "foo bar baz" "bar" "blah")
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Eli Barzilay <eli@barzilay.org>
Cc: erucker@bmc.edu, bugs@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12958: (string-replace in #lang racket is broken
Date: Wed, 1 Aug 2012 10:54:22 -0400

 --Apple-Mail=_3F01F5D9-3857-41EE-900B-3321CCB0DE7F
 Content-Transfer-Encoding: 7bit
 Content-Type: text/plain;
 	charset=us-ascii
 
 
 I can confirm Eli's observation both in repl and drracket. 
 
 
 On Aug 1, 2012, at 3:15 AM, Eli Barzilay wrote:
 
 > I've tried a bunch of things, but it always worked and always returned
 > the expected "foo blah baz".  If this is reproducible, maybe you can
 > make up a program text that demonstrates it without using the repl?
 > Perhaps you're getting a binding by the same name from some other
 > code?  (You can use check-syntax to see where you get some binding
 > from.)
 > 
 > 
 > 12 hours ago, erucker@bmc.edu wrote:
 >> *** Description:
 >> string-replace: arity mismatch;
 >> the expected number of arguments does not match the given number
 >>  expected: at least 4
 >>  given: 3
 >>  arguments...:
 >>   "foo bar baz"
 >>   "bar"
 >>   "blah"
 >> 
 >> *** How to repeat:
 >>> (string-replace "foo bar baz" "bar" "blah")
 > 
 > -- 
 >          ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
 >                    http://barzilay.org/                   Maze is Life!
 
 
 --Apple-Mail=_3F01F5D9-3857-41EE-900B-3321CCB0DE7F
 Content-Disposition: attachment;
 	filename=smime.p7s
 Content-Type: application/pkcs7-signature;
 	name=smime.p7s
 Content-Transfer-Encoding: base64
 
 MIAGCSqGSIb3DQEHAqCAMIACAQExCzAJBgUrDgMCGgUAMIAGCSqGSIb3DQEHAQAAoIIMTDCCBVYw
 ggQ+oAMCAQICEHbDqMitQnj5Qd81mMX31uMwDQYJKoZIhvcNAQEFBQAwgd0xCzAJBgNVBAYTAlVT
 MRcwFQYDVQQKEw5WZXJpU2lnbiwgSW5jLjEfMB0GA1UECxMWVmVyaVNpZ24gVHJ1c3QgTmV0d29y
 azE7MDkGA1UECxMyVGVybXMgb2YgdXNlIGF0IGh0dHBzOi8vd3d3LnZlcmlzaWduLmNvbS9ycGEg
 KGMpMDkxHjAcBgNVBAsTFVBlcnNvbmEgTm90IFZhbGlkYXRlZDE3MDUGA1UEAxMuVmVyaVNpZ24g
 Q2xhc3MgMSBJbmRpdmlkdWFsIFN1YnNjcmliZXIgQ0EgLSBHMzAeFw0xMjA3MjYwMDAwMDBaFw0x
 MzA3MjYyMzU5NTlaMIIBGTEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZlcmlT
 aWduIFRydXN0IE5ldHdvcmsxRjBEBgNVBAsTPXd3dy52ZXJpc2lnbi5jb20vcmVwb3NpdG9yeS9S
 UEEgSW5jb3JwLiBieSBSZWYuLExJQUIuTFREKGMpOTgxHjAcBgNVBAsTFVBlcnNvbmEgTm90IFZh
 bGlkYXRlZDEzMDEGA1UECxMqRGlnaXRhbCBJRCBDbGFzcyAxIC0gTmV0c2NhcGUgRnVsbCBTZXJ2
 aWNlMRswGQYDVQQDFBJNYXR0aGlhcyBGZWxsZWlzZW4xIzAhBgkqhkiG9w0BCQEWFG1hdHRoaWFz
 QGNjcy5uZXUuZWR1MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxoivceU706ZnD2XD
 JfoNFd4KTbYA9AObozHkSZ6BJLC8oSGjakZu6m11azFwk5LfPOjd7dQIKw9uDhmT1e4q6jP+B1FC
 a1qqwm7Rw9PcFhqYFBlE8MbqJUXJW53Ynw3dK2XiUNqTXFcBa2otI8XxMtrQch4f9oMUy+aIn/fZ
 QQDbkkzuwz3884xSbm0IMDneYUC6FF1OJe2+fkMqHqEDsSgY97RFcjdgTCOB012odwGhxJ3rIGaX
 WUs7ttjnftzyGODVILMIx8RBJpGJ+Ur4R67SJygV8Clpg1RBuRUSNaZAN0tCjO9YSkb9HfF2tAx9
 POWmQXdTtNNjZfJPbTVnkQIDAQABo4HSMIHPMAkGA1UdEwQCMAAwRAYDVR0gBD0wOzA5BgtghkgB
 hvhFAQcXATAqMCgGCCsGAQUFBwIBFhxodHRwczovL3d3dy52ZXJpc2lnbi5jb20vcnBhMAsGA1Ud
 DwQEAwIFoDAdBgNVHSUEFjAUBggrBgEFBQcDBAYIKwYBBQUHAwIwUAYDVR0fBEkwRzBFoEOgQYY/
 aHR0cDovL2luZGMxZGlnaXRhbGlkLWczLWNybC52ZXJpc2lnbi5jb20vSW5kQzFEaWdpdGFsSUQt
 RzMuY3JsMA0GCSqGSIb3DQEBBQUAA4IBAQCeAXGCjjlMmU1wb3Ii4V0yNygujjQcvJstFh7IyVcM
 oD5/5Ar7b36JL1O2tpBosTf0pVZaORKCMPAf1IfBS48CvvqSoeVyXCFG1goXDjr7Ut+ZwosuFXdr
 2gD6u9EftuoUy+UBdz46NcN9YC0WbX7CrRE96XxvYwPfWnGIjsoNY7WqFI4f7HLlM5dCmAOXySsw
 EbPKpflzEGPU8aKf4FqTX9ne+hTzPbCf5CDJdzrdyn5bQkqvSzxw+P3tvQSU9lnyZkG7wZ1cibna
 QIuSNEe+HKOKcEfeTeD50JhLa43RE24nMsaXWdX61VTiPE/2Y9woEVLxXBp+AFpMZjGYsF/yMIIG
 7jCCBdagAwIBAgIQcRVmBUrkkSFN6bxE+azT3DANBgkqhkiG9w0BAQUFADCByjELMAkGA1UEBhMC
 VVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQLExZWZXJpU2lnbiBUcnVzdCBOZXR3
 b3JrMTowOAYDVQQLEzEoYykgMTk5OSBWZXJpU2lnbiwgSW5jLiAtIEZvciBhdXRob3JpemVkIHVz
 ZSBvbmx5MUUwQwYDVQQDEzxWZXJpU2lnbiBDbGFzcyAxIFB1YmxpYyBQcmltYXJ5IENlcnRpZmlj
 YXRpb24gQXV0aG9yaXR5IC0gRzMwHhcNMDkwNTAxMDAwMDAwWhcNMTkwNDMwMjM1OTU5WjCB3TEL
 MAkGA1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQLExZWZXJpU2lnbiBU
 cnVzdCBOZXR3b3JrMTswOQYDVQQLEzJUZXJtcyBvZiB1c2UgYXQgaHR0cHM6Ly93d3cudmVyaXNp
 Z24uY29tL3JwYSAoYykwOTEeMBwGA1UECxMVUGVyc29uYSBOb3QgVmFsaWRhdGVkMTcwNQYDVQQD
 Ey5WZXJpU2lnbiBDbGFzcyAxIEluZGl2aWR1YWwgU3Vic2NyaWJlciBDQSAtIEczMIIBIjANBgkq
 hkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA7cRH3yooHXwGa7vXITLJbBOP6bGNQU4099oL42r6ZYgg
 CxET6ZvgSU6Lb9UB0F8NR5GKWkx0Pj/GkQm7TDSejW6hglFi92l2WJYHr54UGAdPWr2f0jGyVBlz
 RmoZQhHsEnMhjfXcMM3l2VYKMcU2bSkUl70t2olHGYjYSwQ967Y8Zx50ABMN0Ibak2f4MwOuGjxr
 aXj2wCyO4YM/d/mZ//6fUlrCtIcK2GypR8FUKWVDPkrAlh/Brfd3r2yxBF6+wbaULZeQLSfSux7p
 g2qE9sSyriMGZSalJ1grByK0b6ZiSBp38tVQJ5op05b7KPW6JHZi44xZ6/tu1ULEvkHH9QIDAQAB
 o4ICuTCCArUwNAYIKwYBBQUHAQEEKDAmMCQGCCsGAQUFBzABhhhodHRwOi8vb2NzcC52ZXJpc2ln
 bi5jb20wEgYDVR0TAQH/BAgwBgEB/wIBADBwBgNVHSAEaTBnMGUGC2CGSAGG+EUBBxcBMFYwKAYI
 KwYBBQUHAgEWHGh0dHBzOi8vd3d3LnZlcmlzaWduLmNvbS9jcHMwKgYIKwYBBQUHAgIwHhocaHR0
 cHM6Ly93d3cudmVyaXNpZ24uY29tL3JwYTA0BgNVHR8ELTArMCmgJ6AlhiNodHRwOi8vY3JsLnZl
 cmlzaWduLmNvbS9wY2ExLWczLmNybDAOBgNVHQ8BAf8EBAMCAQYwbgYIKwYBBQUHAQwEYjBgoV6g
 XDBaMFgwVhYJaW1hZ2UvZ2lmMCEwHzAHBgUrDgMCGgQUS2u5KJYGDLvQUjibKaxLB4shBRgwJhYk
 aHR0cDovL2xvZ28udmVyaXNpZ24uY29tL3ZzbG9nbzEuZ2lmMC4GA1UdEQQnMCWkIzAhMR8wHQYD
 VQQDExZQcml2YXRlTGFiZWw0LTIwNDgtMTE4MB0GA1UdDgQWBBR5R2EIQf04BKJL57XM9UP2SSsR
 +DCB8QYDVR0jBIHpMIHmoYHQpIHNMIHKMQswCQYDVQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24s
 IEluYy4xHzAdBgNVBAsTFlZlcmlTaWduIFRydXN0IE5ldHdvcmsxOjA4BgNVBAsTMShjKSAxOTk5
 IFZlcmlTaWduLCBJbmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxRTBDBgNVBAMTPFZlcmlT
 aWduIENsYXNzIDEgUHVibGljIFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgLSBHM4IR
 AItbdVaEVIULAM+vOEjOsaQwDQYJKoZIhvcNAQEFBQADggEBADlNz0GZgbWpBbVSOOk5hIls5DSo
 WufYbAlMJBq6WaSHO3Mh8ZOBz79oY1pn/jWFK6HDXaNKwjoZ3TDWzE3v8dKBl8pUWkO/N4t6jhmN
 D0OojPKvYLMVirOVnDzgnrMnmKQ1chfl/Cpdh9OKDcLRRSr4wPSsKpM61a4ScAjr+zvid+zoK2Q1
 ds262uDRyxTWcVibvtU+fbbZ6CTFJGZMXZEfdrMXPn8NxiGJL7M3uKH/XLJtSd5lUkL7DojS7Uod
 v0vj+Mxy+kgOZY5JyNb4mZg7t5Q+MXEGh/psWVMu198r7V9jAKwV7QO4VRaMxmgD5yKocwuxvKDa
 UljdCg5/wYIxggSLMIIEhwIBATCB8jCB3TELMAkGA1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWdu
 LCBJbmMuMR8wHQYDVQQLExZWZXJpU2lnbiBUcnVzdCBOZXR3b3JrMTswOQYDVQQLEzJUZXJtcyBv
 ZiB1c2UgYXQgaHR0cHM6Ly93d3cudmVyaXNpZ24uY29tL3JwYSAoYykwOTEeMBwGA1UECxMVUGVy
 c29uYSBOb3QgVmFsaWRhdGVkMTcwNQYDVQQDEy5WZXJpU2lnbiBDbGFzcyAxIEluZGl2aWR1YWwg
 U3Vic2NyaWJlciBDQSAtIEczAhB2w6jIrUJ4+UHfNZjF99bjMAkGBSsOAwIaBQCgggJtMBgGCSqG
 SIb3DQEJAzELBgkqhkiG9w0BBwEwHAYJKoZIhvcNAQkFMQ8XDTEyMDgwMTE0NTQyM1owIwYJKoZI
 hvcNAQkEMRYEFIT0BwkHcZSYRxn8vTUlCZSewHHOMIIBAwYJKwYBBAGCNxAEMYH1MIHyMIHdMQsw
 CQYDVQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZlcmlTaWduIFRy
 dXN0IE5ldHdvcmsxOzA5BgNVBAsTMlRlcm1zIG9mIHVzZSBhdCBodHRwczovL3d3dy52ZXJpc2ln
 bi5jb20vcnBhIChjKTA5MR4wHAYDVQQLExVQZXJzb25hIE5vdCBWYWxpZGF0ZWQxNzA1BgNVBAMT
 LlZlcmlTaWduIENsYXNzIDEgSW5kaXZpZHVhbCBTdWJzY3JpYmVyIENBIC0gRzMCEHbDqMitQnj5
 Qd81mMX31uMwggEFBgsqhkiG9w0BCRACCzGB9aCB8jCB3TELMAkGA1UEBhMCVVMxFzAVBgNVBAoT
 DlZlcmlTaWduLCBJbmMuMR8wHQYDVQQLExZWZXJpU2lnbiBUcnVzdCBOZXR3b3JrMTswOQYDVQQL
 EzJUZXJtcyBvZiB1c2UgYXQgaHR0cHM6Ly93d3cudmVyaXNpZ24uY29tL3JwYSAoYykwOTEeMBwG
 A1UECxMVUGVyc29uYSBOb3QgVmFsaWRhdGVkMTcwNQYDVQQDEy5WZXJpU2lnbiBDbGFzcyAxIElu
 ZGl2aWR1YWwgU3Vic2NyaWJlciBDQSAtIEczAhB2w6jIrUJ4+UHfNZjF99bjMA0GCSqGSIb3DQEB
 AQUABIIBACugx9Zyp2/IqveAaaTRY6p1XsMMYLaMCQdnE3HMg6MHEaBlXeINtJsJdxLGNTLwibEg
 W16vLZkIA7+bAlgU4qgDb28RrP7EHAEuN2Q4x/Mnh3/EhyEdx+EeT4BUQRhLDEeDeYnmWvhiGy3M
 5CuVY9TvTUTtaEhu/8ydNC63xcnWDY6WkdhlOZ448m6+FQ/9NEoydTBcAs15RhutlqgH2eBnTu4r
 alynxdahTo8xvfeij3QxOBkMx1QVKs5peqUVfYTMq4A+w6c+jMN4AtGpAQTZWY9BlLr6tH/Knphb
 Fy8qJaOrbmkM4e2KADwOHFvV3GxBOTNzCXZb+MkOQhz71eYAAAAAAAA=
 
 --Apple-Mail=_3F01F5D9-3857-41EE-900B-3321CCB0DE7F--

State changed from "open" to "feedback" by samth at Thu, 23 Aug 2012 13:19:24 -0400
Reason>>> .


State changed from "feedback" to "closed" by eli at Mon, 19 Aug 2013 01:58:27 -0400
Reason>>> Old reply from the OP:

Okay, the binding was from srfi/13 not racket. I apologize! 
Lesson learned - (require (prefix-in whatever: library))!

