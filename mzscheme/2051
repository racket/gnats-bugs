From robby@cs.rice.edu  Tue Sep  4 19:53:15 2001
Return-Path: <robby@cs.rice.edu>
Received: from localhost (unknown [155.99.212.124])
	by cs.rice.edu (Postfix) with ESMTP id D76E817C2
	for <plt-gnats>; Tue,  4 Sep 2001 19:53:11 -0500 (CDT)
Message-Id: <20010905005312.D76E817C2@cs.rice.edu>
Date: Tue,  4 Sep 2001 19:53:12 -0500 (CDT)
From: robby@cs.rice.edu
To: plt-gnats@cs.rice.edu
Subject: 'origin property missing from let* and let*-values macros

>Number:         2051
>Category:       mzscheme
>Synopsis:       'origin property missing from let* and let*-values macros
>Confidential:   no
>Severity:       serious
>Priority:       medium
>Responsible:    mflatt
>State:          closed
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Wed Sep  5 01:00:02 GMT 2001
>Last-Modified:  Mon Sep 17 10:13:49 CDT 2001
>Originator:     Robert Bruce Findler
>Organization:
titan
>Release:        199.21d2
>Environment:
unix "Linux seesen 2.4.4 #23 \262\320 5\267\356 1 14:50:29 JST 2001 ppc unknown" (ppc-linux) (get-display-depth) = 24
Tools: ("CVS" "compiled" "unit-bundle")
Docs Installed:
("help" "icons" "r5rs" "mred" "mzscheme" "drscheme" "mzlib" "framework" "tools" "mzc")
Collections:
(("/home/robby/cvs/exp/plt/collects" ("CVS" "doc" "browser" "compiler" "debug" "defaults" "drjava" "drscheme" "dynext" "errortrace" "framework" "games" "graphics" "help" "hierlist" "htdp" "html" "icons" "lang" "launcher" "make" "mred" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "readline" "setup" "slatex" "srpersist" "string-constants" "syntax" "tests" "texpict" "userspce" "xml")) ("/home/robby/cvs/robby/collects" ("CVS" "backgammon" "checkers" "friendly" "icfp-pc-99" "mac-cd-database" "magic" "mahjongg" "paper-utils" "pente" "pop-pop" "set-fonts" "solutions" "test-image-map" "xmahjongg")) ("/home/robby/cvs/mflatt/collects" ("CVS" "sirmail")))
>Description:
 
>How-To-Repeat:

> (syntax-property (expand #'(let*-values () 1)) 'origin)
false
;; expected non-false

> (expand #'(let*-values () 1))
#'(let-values () (#%datum . 1))
;; see that output is not the input, to back up expectation above

> (syntax-property (expand #'(let* () 1)) 'origin)
false
;; expected non-false

> (expand #'(let* ([x 1][y x]) 1))
#'(let-values (((x) (#%datum . 1))) (let-values (((y) x)) (#%datum . 1)))
;; see output is not the same as input to backup above expectation

>Fix:
>Audit-Trail:

Responsible-Changed-From-To: steck->mflatt
Responsible-Changed-By: mflatt
Responsible-Changed-When: Mon Sep 17 10:13:43 2001
Responsible-Changed-Why:

State-Changed-From-To: open-closed
State-Changed-By: mflatt
State-Changed-When: Mon Sep 17 10:13:45 2001
State-Changed-Why:
Fixed in 199.22

>Unformatted:
