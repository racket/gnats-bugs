From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Fri May 21 17:40:59 2010
Received: from mail-gw0-f44.google.com (mail-gw0-f44.google.com [74.125.83.44])
	by champlain.ccs.neu.edu (8.14.3/8.14.3) with ESMTP id o4LLevKL015495
	for <bugs@bugs.plt-scheme.org>; Fri, 21 May 2010 17:40:57 -0400
Message-Id: <201005212140.o4LLetc5015488@champlain.ccs.neu.edu>
Date: Fri, 21 May 2010 17:40:55 -0400
From: cce@ccs.neu.edu
To: bugs@plt-scheme.org
Subject: Mutable and weak hash tables print identically to immutable hash tables

>Number:         10921
>Category:       mzscheme
>Synopsis:       Mutable and weak hash tables print identically to immutable hash tables
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       non-critical
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Fri May 21 17:44:01 -0400 2010
>Closed-Date:    Tue May 03 18:20:56 -0400 2011
>Last-Modified:  Tue May 03 18:20:56 -0400 2011
>Originator:     Carl Eastlund
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.0.0.1--2010-05-21(-/f)
>Environment:
macosx "Darwin Gotham.ccs.neu.edu 10.2.0 Darwin Kernel Version 10.2.0: Tue Nov  3 23:08:29 PST 2009; root:xnu-1486.2.11~3/RELEASE_I386 i386" (i386-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 490950156

Collections:
(("/Users/cce/git/work/plt/add-on/5.0.0.1/collects" non-existent-path) ("/Users/cce/git/work/plt/collects" ".gitignore" "2htdp" "afm" "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "meta" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "redex" "repo-time-stamp" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "sirmail" "slatex" "slideshow" "srfi" "srpersist" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "tes!
 t-engine" "tests" "tex2page" "texpict" "trace" "typed" "typed-scheme" "unstable" "version" "waterworld" "web-server" "wxme" "xml"))
Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t))
>Description:
Illustrating the difference between immutable, mutable, and weak hash tables in scribble examples (as well as at the REPL) is difficult because they don't print differently.  All three forms print as a form that would read back in as an immutable hash table.

Since mutable and weak hash tables cannot be read in, I propose giving them an output that is distinct and does not read as something else.  For instance, #hash!(...) for mutable hash tables and #hash!w(...) for weak hash tables (similarly for hasheq and hasheqv).
>How-To-Repeat:
#lang racket
(make-immutable-hash null)
(make-hash)
(make-weak-hash)

prints:

'#hash()
'#hash()
'#hash()
>Fix:
>Audit-Trail:
From: Matthew Flatt <mflatt@cs.utah.edu>
To: cce@ccs.neu.edu, bugs@plt-scheme.org
Cc: nobody@plt-scheme.org, bug-notification@plt-scheme.org
Subject: Re: [plt-bug] all/10921: Mutable and weak hash tables print identically to immutable hash tables
Date: Fri, 21 May 2010 18:59:43 -0600

 At Fri, 21 May 2010 17:44:01 -0400, cce@ccs.neu.edu wrote:
 > Illustrating the difference between immutable, mutable, and weak hash tables 
 > in scribble examples (as well as at the REPL) is difficult because they don't 
 > print differently.  All three forms print as a form that would read back in as 
 > an immutable hash table.
 > 
 > Since mutable and weak hash tables cannot be read in, 
 
 The same is true of mutable vectors, boxes, strings, and byte strings,
 right? Mutable values tend to print as immutable forms.
 
 Is it worth making an exception for hash tables --- or more generally
 trying to be precise about mutability in printed forms? I haven't tried
 it, and my opinion is biased by inertia, but it seems like overkill.
 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: cce@ccs.neu.edu, bugs@plt-scheme.org, nobody@plt-scheme.org,
        bug-notification@plt-scheme.org
Subject: Re: [plt-bug] all/10921: Mutable and weak hash tables print 
	identically to immutable hash tables
Date: Fri, 21 May 2010 20:02:05 -0500

 Also could it trip up some 3d code?
 
 Robby
 
 On Fri, May 21, 2010 at 7:59 PM, Matthew Flatt <mflatt@cs.utah.edu> wrote:
 > At Fri, 21 May 2010 17:44:01 -0400, cce@ccs.neu.edu wrote:
 >> Illustrating the difference between immutable, mutable, and weak hash ta=
 bles
 >> in scribble examples (as well as at the REPL) is difficult because they =
 don't
 >> print differently. =C2=A0All three forms print as a form that would read=
  back in as
 >> an immutable hash table.
 >>
 >> Since mutable and weak hash tables cannot be read in,
 >
 > The same is true of mutable vectors, boxes, strings, and byte strings,
 > right? Mutable values tend to print as immutable forms.
 >
 > Is it worth making an exception for hash tables --- or more generally
 > trying to be precise about mutability in printed forms? I haven't tried
 > it, and my opinion is biased by inertia, but it seems like overkill.
 >
 >
From: Carl Eastlund <cce@ccs.neu.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: Matthew Flatt <mflatt@cs.utah.edu>, bugs@plt-scheme.org,
        nobody@plt-scheme.org, bug-notification@plt-scheme.org
Subject: Re: [plt-bug] all/10921: Mutable and weak hash tables print 
	identically to immutable hash tables
Date: Fri, 21 May 2010 23:53:12 -0400

 3D code isn't based on printing, though, is it?
 
 Anyway, Matthew is probably right that if we don't illustrate this in
 general then I should just live with it for hash tables.
 
 Carl Eastlund
 
 On Fri, May 21, 2010 at 9:02 PM, Robby Findler
 <robby@eecs.northwestern.edu> wrote:
 > Also could it trip up some 3d code?
 >
 > Robby
 >
 > On Fri, May 21, 2010 at 7:59 PM, Matthew Flatt <mflatt@cs.utah.edu> wrote=
 :
 >> At Fri, 21 May 2010 17:44:01 -0400, cce@ccs.neu.edu wrote:
 >>> Illustrating the difference between immutable, mutable, and weak hash t=
 ables
 >>> in scribble examples (as well as at the REPL) is difficult because they=
  don't
 >>> print differently. =A0All three forms print as a form that would read b=
 ack in as
 >>> an immutable hash table.
 >>>
 >>> Since mutable and weak hash tables cannot be read in,
 >>
 >> The same is true of mutable vectors, boxes, strings, and byte strings,
 >> right? Mutable values tend to print as immutable forms.
 >>
 >> Is it worth making an exception for hash tables --- or more generally
 >> trying to be precise about mutability in printed forms? I haven't tried
 >> it, and my opinion is biased by inertia, but it seems like overkill.

State changed from "open" to "closed" by ryanc at Tue, 03 May 2011 18:20:56 -0400
Reason>>> resolved

