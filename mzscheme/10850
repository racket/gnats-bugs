From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Tue Apr  6 22:10:13 2010
Received: from mail-yx0-f179.google.com (mail-yx0-f179.google.com [209.85.210.179])
	by champlain.ccs.neu.edu (8.14.3/8.14.3) with ESMTP id o372AAtS019424
	for <bugs@bugs.plt-scheme.org>; Tue, 6 Apr 2010 22:10:11 -0400
Message-Id: <201004070209.o3729ngf019407@champlain.ccs.neu.edu>
Date: Tue, 6 Apr 2010 22:09:49 -0400
From: sam@shrughes.com
To: bugs@plt-scheme.org
Subject: mzscheme segfaults with (for ([x (in-list 3)]) x) at prompt

>Number:         10850
>Category:       mzscheme
>Synopsis:       mzscheme segfaults with (for ([x (in-list 3)]) x) at prompt
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Tue Apr 06 22:12:01 -0400 2010
>Closed-Date:    Tue Apr 06 22:31:14 -0400 2010
>Last-Modified:  Tue Apr 06 22:31:14 -0400 2010
>Originator:     Sam Hughes
>Organization:
plt
>Submitter-Id:   unknown
>Release:        4.2.4
>Environment:
macosx "Darwin mini.local 9.8.0 Darwin Kernel Version 9.8.0: Wed Jul 15 16:55:01 PDT 2009; root:xnu-1228.15.4~1/RELEASE_I386 i386 i386" (i386-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 121012584

Collections:
(("/Users/shrughes/Library/PLT Scheme/4.2.4/collects" non-existent-path) ("/Users/shrughes/PLT Scheme v4.2.4/collects" "2htdp" "afm" "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "defaults" "deinprogramm" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "help" "hierlist" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "readline" "redex" "rnrs" "s-exp" "scheme" "scribble" "scribblings" "scriblib" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tex2page" "texpict" "trace" "typed" "typed-scheme" "unstable" "version" "web-server" "wxme" "xml"))
Computer Language: (("Module") (#(#t write mixed-fraction-e #f #t debug) (default) #() "#lang scheme\n" #t))
>Description:
mzscheme segfaults when using (in-list 3) directly inside iteration/comprehension forms.  This does not happen in the drscheme GUI, which gives the error "car: expects argument of type <pair>; given 3".  If I load the code from a file at the mzscheme prompt, using enter! or some such thing, I get the same error as I get in drscheme.

Also, in both drscheme and mzscheme, if we assign (in-list 3) to some variable or return it from some function and then use that in an iteration/comprehension form, (in-list 3) gets treated as an empty sequence, instead of giving an error at some point in time.
>How-To-Repeat:
Make a file foo.ss that looks like this:
;; begin foo.ss
#lang scheme

(define (test)
  (for ([x (in-list 3)])
    (write x)))

(define (testseq) (in-list 3))

(define (test2)
  (for ([x (testseq)])
    (write x)))
;; end foo.ss

Then I get these results at the command prompt.

$ which mzscheme
/Users/shrughes/PLT Scheme v4.2.4/bin/mzscheme

$ mzscheme
Welcome to MzScheme v4.2.4 [3m], Copyright (c) 2004-2010 PLT Scheme Inc.
> (for ([x (in-list 3)]) 'anything)
Seg fault (internal error) at 0xf
Bus error


$ mzscheme
Welcome to MzScheme v4.2.4 [3m], Copyright (c) 2004-2010 PLT Scheme Inc.
> (enter! "foo.ss")
 [loading /Users/shrughes/blah/foo.ss]
 [loading /Users/shrughes/PLT Scheme v4.2.4/collects/scheme/lang/compiled/reader_ss.zo]
 [loading /Users/shrughes/PLT Scheme v4.2.4/collects/syntax/compiled/module-reader_ss.zo]
 [loading /Users/shrughes/PLT Scheme v4.2.4/collects/syntax/compiled/readerr_ss.zo]
> (test)
(test)
car: expects argument of type <pair>; given 3

 === context ===
/Users/shrughes/blah/foo.ss:4:2: for-loop
/Users/shrughes/PLT Scheme v4.2.4/collects/scheme/private/misc.ss:74:7

> (test2)
> 
>Fix:
>Audit-Trail:
State changed from "open" to "closed" by mflatt at Tue, 06 Apr 2010 22:31:14 -0400
Reason>>> Fixed in SVN.

The crash happens during compilation when the compiler
tries to constant-fold `(unsafe-cdr 3)'. The crash doesn't
happen with DrScheme, because instrumentation for debugging
obscures the code enough that the compiler doesn't see the
constant-folding opportunity. Moving `(in-list 3)' out of
the `for' form similarly hides `(unsafe-cdr 3)' from the
compiler.

The repair is to make sure that constant folding of
`unsafe-car' and `unsafe-cdr' applications are attempted
with `car' and `cdr' at compile time.

Thanks very much for the report!

