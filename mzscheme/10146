From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Sun Mar 22 12:03:53 2009
Received: from mail-qy0-f130.google.com (mail-qy0-f130.google.com [209.85.221.130])
	by champlain.ccs.neu.edu (8.14.2/8.14.2) with ESMTP id n2MG3hmV018878
	for <bugs@bugs.plt-scheme.org>; Sun, 22 Mar 2009 12:03:43 -0400
Message-Id: <200903221603.n2MG3fl0018871@champlain.ccs.neu.edu>
Date: Sun, 22 Mar 2009 12:03:41 -0400
From: rmbruijn@gmail.com
To: bugs@plt-scheme.org
Subject: Thread does not return immediately

>Number:         10146
>Category:       mzscheme
>Synopsis:       Thread does not return immediately
>Class:          sw-bug
>Responsible:    matthias
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Sun Mar 22 12:04:01 -0400 2009
>Closed-Date:    Sat May 09 12:43:12 -0400 2009
>Last-Modified:  Sat May 09 12:43:12 -0400 2009
>Originator:     Ron de Bruijn
>Organization:
plt
>Submitter-Id:   unknown
>Release:        4.1.3
>Environment:
Linux i686 / Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.7) Gecko/2009030516 Ubuntu/9.04 (jaunty) Firefox/3.0.7
>Description:
The function thread should return immediately according to the documentation. It does return in lots of cases, but not all. I believe the correct behaviour is to always return regardless of the thunk it should evaluate. 

I have added a complete program which shows the problem on my machine. The problem is that the second call to thread is never executed. 

And finally a user-question: is parallelism also supported (as opposed to just interleaving computations)? 
>How-To-Repeat:
#lang scheme

(define (infloop) (infloop))
(thread (infloop)) ; named expression foo
(thread (infloop)) ; this line of code is "never" called on my machine. It is certainly not observable that foo expression returns immediately , which it should do according to the documentation. 

;Calls thunk with no arguments in a new thread of control. The thread procedure returns immediately with a thread descriptor value. When the invocation of thunk returns, the thread created to invoke thunk terminates.
>Fix:
>Audit-Trail:
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: rmbruijn@gmail.com, bugs@plt-scheme.org
Cc: nobody@plt-scheme.org, eli@plt-scheme.org, matthias@plt-scheme.org,
        sk@plt-scheme.org, mflatt@plt-scheme.org, robby@plt-scheme.org,
        clements@plt-scheme.org, jay@plt-scheme.org, meunier@plt-scheme.org,
        kathyg@plt-scheme.org, jacobm@plt-scheme.org, cce@plt-scheme.org,
        samth@plt-scheme.org, ryanc@plt-scheme.org, gcooper@plt-scheme.org,
        sstrickl@plt-scheme.org, sperber@deinprogramm.de
Subject: Re: [plt-bug] all/10146: Thread does not return immediately
Date: Sun, 22 Mar 2009 12:12:38 -0400

 thread is a function of one input: a thunk. When you apply thread to  
 an expression, the application evaluates this expression to determine  
 which thunk you want to supply. In your case, you're applying thread  
 to the expression (infloop). Evaluating infloop does NOT yield a  
 thunk ever, and so you can't ever invoke thread. Ergo, it can't return.
 
 Here is thread's type signature as a function:
 
    thread : (-> Any) -> Thunk
 
 
 
 
 
 
 
 On Mar 22, 2009, at 12:04 PM, rmbruijn@gmail.com wrote:
 
 > A new problem report is waiting at
 >   http://bugs.plt-scheme.org/query/?cmd=view&pr=10146
 >
 > Reported by Ron de Bruijn for release: 4.1.3
 >
 > *** Description:
 > The function thread should return immediately according to the  
 > documentation. It does return in lots of cases, but not all. I  
 > believe the correct behaviour is to always return regardless of the  
 > thunk it should evaluate.
 >
 > I have added a complete program which shows the problem on my  
 > machine. The problem is that the second call to thread is never  
 > executed.
 >
 > And finally a user-question: is parallelism also supported (as  
 > opposed to just interleaving computations)?
 >
 > *** How to repeat:
 > #lang scheme
 >
 > (define (infloop) (infloop))
 > (thread (infloop)) ; named expression foo
 > (thread (infloop)) ; this line of code is "never" called on my  
 > machine. It is certainly not observable that foo expression returns  
 > immediately , which it should do according to the documentation.
 >
 > ;Calls thunk with no arguments in a new thread of control. The  
 > thread procedure returns immediately with a thread descriptor  
 > value. When the invocation of thunk returns, the thread created to  
 > invoke thunk terminates.
 >
 > *** Environment:
 > Linux i686 / Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.7)  
 > Gecko/2009030516 Ubuntu/9.04 (jaunty) Firefox/3.0.7
 >
 


Responsible changed from "nobody" to "matthias" by eli at Sat, 09 May 2009 12:43:12 -0400
Reason>>> Matthias replied

State changed from "open" to "closed" by eli at Sat, 09 May 2009 12:43:12 -0400
Reason>>> see reply

