From apache@plt-scheme.org Tue Nov 30 02:59:01 2004
Received: from champlain.ccs.neu.edu (champlain.ccs.neu.edu [127.0.0.1])
	by champlain.ccs.neu.edu (8.12.10/8.12.10) with ESMTP id iAU7x0nA004228
	for <bugs@plt-scheme.org>; Tue, 30 Nov 2004 02:59:00 -0500
Message-Id: <200411300759.iAU7x0ri004226@champlain.ccs.neu.edu>
Date: Tue, 30 Nov 2004 02:59:00 -0500
From: lealanko@ssh.com
To: bugs@plt-scheme.org
Subject: Segfaults sometimes when invoking a continuation captured from a now-dead thread

>Number:         7128
>Category:       mzscheme
>Synopsis:       Segfaults sometimes when invoking a continuation captured from a now-dead thread
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Tue Nov 30 03:00:01 -0500 2004
>Last-Modified:  Fri Jan 28 11:05:46 -0500 2005
>Originator:     Lauri Alanko
>Organization:
plt
>Submitter-Id:   unknown
>Release:        2.99.21
>Environment:
linux-other
>Description:
This one is a bit tricky, and I wasn't able to find out a simple code sample that would exhibit the problem. But here's what's happens when it happens:

There's a thread with some continuation marks in its continuation, which then gets captured by call/cc. In call_cc, cont->cont_mark_stack_owner is initialized to point to the current thread.

Later, the current thread gets killed, and in remove_thread and thread_is_dead its cont_mark_stack and cont_mark_stack_segments fields are cleared.

_However_ (and here's the bug), after this, if RUNSTACK_IS_GLOBAL is set (as it usually is), in scheme_swap_thread the newly killed thread's cont_mark_stack is overwritten back from the global MZ_CONT_MARK_STACK to a non-zero value.

Consequently, when at a later time the continuation is invoked, the process segfaults in copy_out_mark_stack, because the killed thread's cont_mark_stack_segments is NULL but cont_mark_stack is non-zero.

When RUNSTACK_IS_GLOBAL is not set, everything works just fine. (Frankly, I don't quite see the point of the global variables. It just makes things more fragile and cannot really be much of an optimization...)
>How-To-Repeat:
>Fix:
>Audit-Trail:
Responsible changed from "nobody" to "mflatt" by eli at Fri, 21 Jan 2005 23:12:01 -0500
Reason>>> mzscheme

State changed from "open" to "closed" by mflatt at Fri, 28 Jan 2005 11:05:46 -0500
Reason>>> Fixed a while ago - thanks!

Matthew

