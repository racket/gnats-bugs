From nobody@champlain.ccs.neu.edu  Sun Mar 23 12:26:33 2003
Received: (from nobody@localhost)
	by champlain.ccs.neu.edu (8.9.3/8.8.7) id MAA20753
	for bugs@plt-scheme.org; Sun, 23 Mar 2003 12:26:33 -0500
Message-Id: <200303231726.MAA20753@champlain.ccs.neu.edu>
Date: Sun, 23 Mar 2003 12:26:33 -0500
From: neil@neilvandyke.org
To: bugs@plt-scheme.org
Subject: scheme_extract_index false_ok error message backwards

>Number:         6166
>Category:       mzscheme
>Synopsis:       scheme_extract_index false_ok error message backwards
>Confidential:   no
>Severity:       non-critical
>Priority:       low
>Responsible:    mflatt
>State:          closed
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Sun Mar 23 12:30:01 EST 2003
>Closed-Date:    Tue Apr 01 14:44:29 EST 2003
>Last-Modified:  Tue Apr 01 14:44:29 EST 2003
>Originator:     Neil W. Van Dyke
>Release:        203.6
>Organization:
plt
>Environment:
linux-other
>Description:
In scheme_extract_index in string.c, the error messages are backwards:

(false_ok ? "non-negative exact integer" : "non-negative exact integer or #f"),

Incidentally, a convenient extension to R5RS would be for `substring' to
permit #f for the index terms, similar to `regexp-match'.
>How-To-Repeat:
(substring "abc" 1 #f)
substring: expects type <non-negative exact integer or #f> as 3rd argument, given: #f; other arguments were: "abc" 1
>Fix:

>Release-Note:

>Audit-Trail:
Responsible-Changed-From-To: steck->mflatt
Responsible-Changed-By: mflatt
Responsible-Changed-When: Tue Apr  1 14:44:29 2003
Responsible-Changed-Why:
    mz
State-Changed-From-To: open->closed
State-Changed-By: mflatt
State-Changed-When: Tue Apr  1 14:44:29 2003
State-Changed-Why:
    Thanks for the patch!
    
    I've made the 2nd argument to `substring' optional
    (instead of allowing #f).
    
    Matthew
>Unformatted:

