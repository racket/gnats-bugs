From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Thu Jan  3 22:27:10 2008
Received: from fk-out-0910.google.com (fk-out-0910.google.com [209.85.128.187])
	by champlain.ccs.neu.edu (8.13.8/8.13.7) with ESMTP id m043R9Ct023356
	for <bugs@bugs.plt-scheme.org>; Thu, 3 Jan 2008 22:27:09 -0500
Message-Id: <200801040327.m043R3as023350@champlain.ccs.neu.edu>
Date: Thu, 3 Jan 2008 22:27:03 -0500
From: dherman@ccs.neu.edu
To: bugs@plt-scheme.org
Subject: infinite loop at repl

>Number:         9135
>Category:       mzscheme
>Synopsis:       infinite loop at repl
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Thu Jan 03 22:30:01 -0500 2008
>Closed-Date:    Tue May 03 17:01:24 -0400 2011
>Last-Modified:  Tue May 03 17:01:24 -0400 2011
>Originator:     Dave Herman
>Organization:
plt
>Submitter-Id:   unknown
>Release:        3.99.0.8-svn2jan2008
>Environment:
windows "Windows NT 5.1 (Build 2600) Service Pack 2" (win32\i386\3m) (get-display-depth) = 32
Docs Installed:
()
Human Language: english
(current-memory-use) 50818364

Collections:
(("C:\\Documents and Settings\\dherman\\Application Data\\PLT Scheme\\3.99.0.8\\collects" non-existent-path) ("C:\\Program Files\\plt\\collects" "afm" "algol60" "browser" "combinator-parser" "compiler" "config" "defaults" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu-module" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrflow" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "mztake" "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profj" "profjWizard" "r5rs" "readline" "repos-time-stamp" "s-exp" "scheme" "scribble" "scribblings" "setup" "sgl" "sirmail" "skipper" "slatex" "slideshow" "srfi" "srpersist" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "tests" "tex2page" "texpict" "trace" "version" "waterworld" "web-server" "wxme" "xelda"!
  "xml"))
Computer Language: (("Legacy Languages" "PLT" "Textual (MzScheme, includes R5RS)") #(#t write mixed-fraction-e #f #t debug))
>Description:
Typing #lang scheme 4 at the REPL causes an infinite (?) loop.
>How-To-Repeat:
Type the following at the REPL:
> #lang scheme 4
It appears to get stuck in a loop.
>Fix:
>Audit-Trail:
From: "Robby Findler" <robby@cs.uchicago.edu>
To: "Matthias Felleisen" <matthias@ccs.neu.edu>
Cc: dherman@ccs.neu.edu, bugs@plt-scheme.org, nobody@plt-scheme.org,
        eli@plt-scheme.org, matthias@plt-scheme.org, sk@plt-scheme.org,
        mflatt@plt-scheme.org, clements@plt-scheme.org, jay@plt-scheme.org,
        meunier@plt-scheme.org, sowens@plt-scheme.org, kathyg@plt-scheme.org,
        awick@plt-scheme.org, jacobm@plt-scheme.org, cce@plt-scheme.org,
        dalev@plt-scheme.org, samth@plt-scheme.org, ryanc@plt-scheme.org
Subject: Re: [plt-bug] all/9135: infinite loop at repl
Date: Thu, 3 Jan 2008 22:18:57 -0600

 Not desirable, but short of disabling #lang at the repl, I'm not sure
 what one could do that would be better. You have ideas?
 
 Robby
 
 On Jan 3, 2008 10:03 PM, Matthias Felleisen <matthias@ccs.neu.edu> wrote:
 > I'd still consider this behavior undesirable. No?
 >
 >
 >
 > On Jan 3, 2008, at 10:35 PM, Robby Findler wrote:
 >
 > > Its actually blocked (as you can probably tell from teh CPU usage). In
 > > particular, it is waiting for an EOF.
 > >
 > > In MzScheme, you can type control-d (or control-z, I suppose) to send
 > > one, but in drscheme you have to break it or hit run or something.
 > >
 > > Robby
 > >
 > > On Jan 3, 2008 9:30 PM,  <dherman@ccs.neu.edu> wrote:
 > >> A new problem report is waiting at
 > >>   http://bugs.plt-scheme.org/query/?cmd=view&pr=9135
 > >>
 > >> Reported by Dave Herman for release: 3.99.0.8-svn2jan2008
 > >>
 > >> *** Description:
 > >> Typing #lang scheme 4 at the REPL causes an infinite (?) loop.
 > >>
 > >> *** How to repeat:
 > >> Type the following at the REPL:
 > >>> #lang scheme 4
 > >> It appears to get stuck in a loop.
 > >>
 > >> *** Environment:
 > >> windows "Windows NT 5.1 (Build 2600) Service Pack 2" (win32\i386
 > >> \3m) (get-display-depth) = 32
 > >> Docs Installed:
 > >> ()
 > >> Human Language: english
 > >> (current-memory-use) 50818364
 > >>
 > >> Collections:
 > >> (("C:\\Documents and Settings\\dherman\\Application Data\\PLT
 > >> Scheme\\3.99.0.8\\collects" non-existent-path) ("C:\\Program Files\
 > >> \plt\\collects" "afm" "algol60" "browser" "combinator-parser"
 > >> "compiler" "config" "defaults" "drscheme" "dynext" "embedded-gui"
 > >> "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games"
 > >> "graphics" "guibuilder" "handin-client" "handin-server" "help"
 > >> "hierlist" "honu-module" "htdch" "htdp" "html" "icons" "info-
 > >> domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred"
 > >> "mrflow" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "mztake"
 > >> "net" "openssl" "parser-tools" "planet" "plot" "preprocessor"
 > >> "profj" "profjWizard" "r5rs" "readline" "repos-time-stamp" "s-exp"
 > >> "scheme" "scribble" "scribblings" "setup" "sgl" "sirmail"
 > >> "skipper" "slatex" "slideshow" "srfi" "srpersist" "stepper"
 > >> "string-constants" "swindle" "syntax" "syntax-color" "teachpack"
 > >> "test-box-recovery" "tests" "tex2page" "texpict" "trace" "version"
 > >> "waterworld" "web-server" "wxme" "xelda"!
 > >>   "xml"))
 > >> Computer Language: (("Legacy Languages" "PLT" "Textual (MzScheme,
 > >> includes R5RS)") #(#t write mixed-fraction-e #f #t debug))
 > >>
 > >>
 >
 >
From: Eli Barzilay <eli@barzilay.org>
To: "Robby Findler" <robby@cs.uchicago.edu>
Cc: "Matthias Felleisen" <matthias@ccs.neu.edu>, dherman@ccs.neu.edu,
        bugs@plt-scheme.org, nobody@plt-scheme.org, matthias@plt-scheme.org,
        sk@plt-scheme.org, mflatt@plt-scheme.org, clements@plt-scheme.org,
        jay@plt-scheme.org, meunier@plt-scheme.org, sowens@plt-scheme.org,
        kathyg@plt-scheme.org, awick@plt-scheme.org, jacobm@plt-scheme.org,
        cce@plt-scheme.org, dalev@plt-scheme.org, samth@plt-scheme.org,
        ryanc@plt-scheme.org
Subject: Re: [plt-bug] all/9135: infinite loop at repl
Date: Fri, 4 Jan 2008 00:45:10 -0500

 How about making the `#lang' reader throw an error if the input port
 does not have a path as its name?  -- Instead of the `'page' in
 "syntax/module-reader.ss".
 
 (BTW, I thought that the module-reader functionality should be part of
 `#lang' which would make this solution better -- it would apply to all
 `#lang's instead to just ones that use `syntax/module-reader'...)
 
 
 On Jan  3, Robby Findler wrote:
 > Not desirable, but short of disabling #lang at the repl, I'm not sure
 > what one could do that would be better. You have ideas?
 > 
 > Robby
 > 
 > On Jan 3, 2008 10:03 PM, Matthias Felleisen <matthias@ccs.neu.edu> wrote:
 > > I'd still consider this behavior undesirable. No?
 > >
 > >
 > >
 > > On Jan 3, 2008, at 10:35 PM, Robby Findler wrote:
 > >
 > > > Its actually blocked (as you can probably tell from teh CPU usage). In
 > > > particular, it is waiting for an EOF.
 > > >
 > > > In MzScheme, you can type control-d (or control-z, I suppose) to send
 > > > one, but in drscheme you have to break it or hit run or something.
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                   http://www.barzilay.org/                 Maze is Life!
From: "Sam TH" <samth@plt-scheme.org>
To: "Eli Barzilay" <eli@barzilay.org>
Cc: "Robby Findler" <robby@cs.uchicago.edu>,
        "Matthias Felleisen" <matthias@ccs.neu.edu>, dherman@ccs.neu.edu,
        bugs@plt-scheme.org, nobody@plt-scheme.org, matthias@plt-scheme.org,
        sk@plt-scheme.org, mflatt@plt-scheme.org, clements@plt-scheme.org,
        jay@plt-scheme.org, meunier@plt-scheme.org, sowens@plt-scheme.org,
        kathyg@plt-scheme.org, awick@plt-scheme.org, jacobm@plt-scheme.org,
        cce@plt-scheme.org, dalev@plt-scheme.org, ryanc@plt-scheme.org
Subject: Re: [plt-bug] all/9135: infinite loop at repl
Date: Fri, 4 Jan 2008 09:19:25 -0500

 On Jan 4, 2008 12:45 AM, Eli Barzilay <eli@barzilay.org> wrote:
 > How about making the `#lang' reader throw an error if the input port
 > does not have a path as its name?  -- Instead of the `'page' in
 > "syntax/module-reader.ss".
 
 This is a really bad idea.  There's no reason I should have to create
 files in order to test out the behavior of module.  I very regularly
 do something like the following:
 
 1. Ctrl-= for a new tab
 2. Enter #lang scheme ..some stuff..
 3. Hit run, and see what happens
 4. Close the tab
 
 I wouldn't want to make saving a file part of this workflow.
 
 sam th
 
 >
 > (BTW, I thought that the module-reader functionality should be part of
 > `#lang' which would make this solution better -- it would apply to all
 > `#lang's instead to just ones that use `syntax/module-reader'...)
 >
 >
 > On Jan  3, Robby Findler wrote:
 > > Not desirable, but short of disabling #lang at the repl, I'm not sure
 > > what one could do that would be better. You have ideas?
 > >
 > > Robby
 > >
 > > On Jan 3, 2008 10:03 PM, Matthias Felleisen <matthias@ccs.neu.edu> wrote:
 > > > I'd still consider this behavior undesirable. No?
 > > >
 > > >
 > > >
 > > > On Jan 3, 2008, at 10:35 PM, Robby Findler wrote:
 > > >
 > > > > Its actually blocked (as you can probably tell from teh CPU usage). In
 > > > > particular, it is waiting for an EOF.
 > > > >
 > > > > In MzScheme, you can type control-d (or control-z, I suppose) to send
 > > > > one, but in drscheme you have to break it or hit run or something.
 >
 > --
 >           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
 >                   http://www.barzilay.org/                 Maze is Life!
 >
 
 
 
 -- 
 sam th
 samth@ccs.neu.edu
From: Dave Herman <dherman@ccs.neu.edu>
To: Sam TH <samth@plt-scheme.org>
Cc: Eli Barzilay <eli@barzilay.org>, Robby Findler <robby@cs.uchicago.edu>,
        Matthias Felleisen <matthias@ccs.neu.edu>, bugs@plt-scheme.org,
        nobody@plt-scheme.org, matthias@plt-scheme.org, sk@plt-scheme.org,
        mflatt@plt-scheme.org, clements@plt-scheme.org, jay@plt-scheme.org,
        meunier@plt-scheme.org, sowens@plt-scheme.org, kathyg@plt-scheme.org,
        awick@plt-scheme.org, jacobm@plt-scheme.org, cce@plt-scheme.org,
        dalev@plt-scheme.org, ryanc@plt-scheme.org
Subject: Re: [plt-bug] all/9135: infinite loop at repl
Date: Fri, 04 Jan 2008 09:33:29 -0500

 What about something like here-docs?
 
 #lang<< scheme END
 (define x 4)
 (provide x)
 END
 
 Sam TH wrote:
 > On Jan 4, 2008 12:45 AM, Eli Barzilay <eli@barzilay.org> wrote:
 >> How about making the `#lang' reader throw an error if the input port
 >> does not have a path as its name?  -- Instead of the `'page' in
 >> "syntax/module-reader.ss".
 > 
 > This is a really bad idea.  There's no reason I should have to create
 > files in order to test out the behavior of module.  I very regularly
 > do something like the following:
 > 
 > 1. Ctrl-= for a new tab
 > 2. Enter #lang scheme ..some stuff..
 > 3. Hit run, and see what happens
 > 4. Close the tab
 > 
 > I wouldn't want to make saving a file part of this workflow.
 > 
 > sam th
 > 
 >> (BTW, I thought that the module-reader functionality should be part of
 >> `#lang' which would make this solution better -- it would apply to all
 >> `#lang's instead to just ones that use `syntax/module-reader'...)
 >>
 >>
 >> On Jan  3, Robby Findler wrote:
 >>> Not desirable, but short of disabling #lang at the repl, I'm not sure
 >>> what one could do that would be better. You have ideas?
 >>>
 >>> Robby
 >>>
 >>> On Jan 3, 2008 10:03 PM, Matthias Felleisen <matthias@ccs.neu.edu> wrote:
 >>>> I'd still consider this behavior undesirable. No?
 >>>>
 >>>>
 >>>>
 >>>> On Jan 3, 2008, at 10:35 PM, Robby Findler wrote:
 >>>>
 >>>>> Its actually blocked (as you can probably tell from teh CPU usage). In
 >>>>> particular, it is waiting for an EOF.
 >>>>>
 >>>>> In MzScheme, you can type control-d (or control-z, I suppose) to send
 >>>>> one, but in drscheme you have to break it or hit run or something.
 >> --
 >>           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
 >>                   http://www.barzilay.org/                 Maze is Life!
 >>
 > 
 > 
 > 
 
From: Eli Barzilay <eli@barzilay.org>
To: "Sam TH" <samth@plt-scheme.org>
Cc: "Robby Findler" <robby@cs.uchicago.edu>,
        "Matthias Felleisen" <matthias@ccs.neu.edu>, dherman@ccs.neu.edu,
        bugs@plt-scheme.org, nobody@plt-scheme.org, matthias@plt-scheme.org,
        sk@plt-scheme.org, mflatt@plt-scheme.org, clements@plt-scheme.org,
        jay@plt-scheme.org, meunier@plt-scheme.org, sowens@plt-scheme.org,
        kathyg@plt-scheme.org, awick@plt-scheme.org, jacobm@plt-scheme.org,
        cce@plt-scheme.org, dalev@plt-scheme.org, ryanc@plt-scheme.org
Subject: Re: [plt-bug] all/9135: infinite loop at repl
Date: Fri, 4 Jan 2008 11:55:30 -0500

 On Jan  4, Sam TH wrote:
 > On Jan 4, 2008 12:45 AM, Eli Barzilay <eli@barzilay.org> wrote:
 > > How about making the `#lang' reader throw an error if the input
 > > port does not have a path as its name?  -- Instead of the `'page'
 > > in "syntax/module-reader.ss".
 > 
 > This is a really bad idea.  There's no reason I should have to
 > create files in order to test out the behavior of module.  I very
 > regularly do something like the following:
 > 
 > 1. Ctrl-= for a new tab
 > 2. Enter #lang scheme ..some stuff..
 > 3. Hit run, and see what happens
 > 4. Close the tab
 > 
 > I wouldn't want to make saving a file part of this workflow.
 
 That's fixable -- make an unsaved definitions window have some other
 kind of "blessed" (non-path) value.  Alternatively, make the mzscheme
 repl and the interaction window have some "cursed" value.
 
 I actually thought that your argument should be about trying such a
 thing on a mzscheme console, or maybe trying to run
 
   echo "..." | mzscheme
 
 but both of these are examples where things can work now, but
 shouldn't.
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                   http://www.barzilay.org/                 Maze is Life!
From: Eli Barzilay <eli@barzilay.org>
To: Dave Herman <dherman@ccs.neu.edu>
Cc: Sam TH <samth@plt-scheme.org>, Robby Findler <robby@cs.uchicago.edu>,
        Matthias Felleisen <matthias@ccs.neu.edu>, bugs@plt-scheme.org,
        nobody@plt-scheme.org, matthias@plt-scheme.org, sk@plt-scheme.org,
        mflatt@plt-scheme.org, clements@plt-scheme.org, jay@plt-scheme.org,
        meunier@plt-scheme.org, sowens@plt-scheme.org, kathyg@plt-scheme.org,
        awick@plt-scheme.org, jacobm@plt-scheme.org, cce@plt-scheme.org,
        dalev@plt-scheme.org, ryanc@plt-scheme.org
Subject: Re: [plt-bug] all/9135: infinite loop at repl
Date: Fri, 4 Jan 2008 11:58:39 -0500

 On Jan  4, Dave Herman wrote:
 > What about something like here-docs?
 > 
 > #lang<< scheme END
 > (define x 4)
 > (provide x)
 > END
 
 The whole point of `#lang' was to avoid such a marker (which is easy
 enough in sexpr languages).  But in any case, if you want to do that,
 then you'd probably also want a way to name these modules, which makes
 it even more verbose.  (But maybe not pointless: I won't be surprised
 if this issue will come up periodically...)
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                   http://www.barzilay.org/                 Maze is Life!
From: Eli Barzilay <eli@barzilay.org>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: "Robby Findler" <robby@cs.uchicago.edu>, dherman@ccs.neu.edu,
        bugs@plt-scheme.org, nobody@plt-scheme.org, matthias@plt-scheme.org,
        sk@plt-scheme.org, mflatt@plt-scheme.org, clements@plt-scheme.org,
        jay@plt-scheme.org, meunier@plt-scheme.org, sowens@plt-scheme.org,
        kathyg@plt-scheme.org, awick@plt-scheme.org, jacobm@plt-scheme.org,
        cce@plt-scheme.org, dalev@plt-scheme.org, samth@plt-scheme.org,
        ryanc@plt-scheme.org
Subject: Re: [plt-bug] all/9135: infinite loop at repl
Date: Fri, 4 Jan 2008 12:41:36 -0500

 Actually, I think that I like Robby's solution better -- an explicit
 disabling instead of relying on an implicit property of the input
 port.  So maybe extend the `read-accept-reader' with another value
 that forbids only `#lang's?
 
 
 On Jan  4, Matthias Felleisen wrote:
 > 
 > That or Eli's solution would make sense.
 > 
 > On Jan 3, 2008, at 11:18 PM, Robby Findler wrote:
 > 
 > > Not desirable, but short of disabling #lang at the repl, I'm not sure
 > > what one could do that would be better. You have ideas?
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                   http://www.barzilay.org/                 Maze is Life!
From: Eli Barzilay <eli@barzilay.org>
To: Dave Herman <dherman@ccs.neu.edu>, Sam TH <samth@plt-scheme.org>,
        Robby Findler <robby@cs.uchicago.edu>,
        Matthias Felleisen <matthias@ccs.neu.edu>, bugs@plt-scheme.org,
        nobody@plt-scheme.org, matthias@plt-scheme.org, sk@plt-scheme.org,
        mflatt@plt-scheme.org, clements@plt-scheme.org, jay@plt-scheme.org,
        meunier@plt-scheme.org, sowens@plt-scheme.org, kathyg@plt-scheme.org,
        awick@plt-scheme.org, jacobm@plt-scheme.org, cce@plt-scheme.org,
        dalev@plt-scheme.org, ryanc@plt-scheme.org
Cc: 
Subject: Re: [plt-bug] all/9135: infinite loop at repl
Date: Fri, 4 Jan 2008 12:38:22 -0500

 On Jan  4, Eli Barzilay wrote:
 > On Jan  4, Dave Herman wrote:
 > > What about something like here-docs?
 > > 
 > > #lang<< scheme END
 > > (define x 4)
 > > (provide x)
 > > END
 > 
 > The whole point of `#lang' was to avoid such a marker (which is easy
 > enough in sexpr languages).  But in any case, if you want to do
 > that, then you'd probably also want a way to name these modules,
 > which makes it even more verbose.  (But maybe not pointless: I won't
 > be surprised if this issue will come up periodically...)
 
 (I forgot to add that this wouldn't have fixed your original problem.)
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                   http://www.barzilay.org/                 Maze is Life!

State changed from "open" to "closed" by ryanc at Tue, 03 May 2011 17:01:24 -0400
Reason>>> resolved

