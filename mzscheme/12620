From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Tue Mar  6 09:37:16 2012
Received: from mail-vx0-f172.google.com (mail-vx0-f172.google.com [209.85.220.172])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id q26EbC3K014245
	for <bugs@bugs.plt-scheme.org>; Tue, 6 Mar 2012 09:37:13 -0500
Message-Id: <201203061437.q26Eb8ac014239@champlain.ccs.neu.edu>
Date: Tue, 6 Mar 2012 09:37:08 -0500
From: samth@ccs.neu.edu
To: bugs@racket-lang.org
Subject: the . regexp on bytes fails to match high bytes

>Number:         12620
>Category:       mzscheme
>Synopsis:       the . regexp on bytes fails to match high bytes
>Class:          doc-bug
>Responsible:    samth
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Tue Mar 06 09:40:01 -0500 2012
>Last-Modified:  Wed Apr 18 15:16:51 -0400 2012
>Originator:     Sam TH
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.2.1.7--2012-03-01(eb5cd27/g)
>Environment:
unix "Linux loki 3.0.0-16-generic #28-Ubuntu SMP Fri Jan 27 17:44:39 UTC 2012 x86_64 x86_64 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 486388672
Links: (links) = ("gcstat" "raco-git" "assignments" "var" "disassemble" "book" "class"); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()


Collections:
("/home/samth/sw/plt/add-on/5.2.1.7/collects"
 ("info-domain"))
("/home/samth/sw/plt/collects"
 ("datalog" "scriblib" "html" "racklog" "drracket" "sqr.png" "dynext" "honu" "2htdp" "graphics" "make" "eopl" "test-box-recovery" "hierlist" "racket" "rackunit" "openssl" "r5rs" "algol60" "mzcom" "redex" "texpict" "swindle" "defaults" "trace" "combinator-parser" "mysterx" "info-domain" "meta" "teachpack" "setup" "repo-time-stamp" "games" "r6rs" "trig.png" "icons" "typed-scheme" "test-engine" "lazy" "stepper" "at-exp" "planet" "tests" "rnrs" "db" "web-server" "framework" "net" "scribblings" "string-constants" "help" "browser" "tex2page" "mzlib" "parser-tools" "errortrace" "data" "sirmail" "plot" "launcher" "handin-client" "syntax" "profile" "s-exp" ".gitignore" "slideshow" "plai" "htdp" "typed-racket" "scheme" "syntax-color" "guibuilder" "drscheme" "raco" "srfi" "reader" "preprocessor" "compiler" "config" "mred" "handin-server" "schemeunit" "typed" "macro-debugger" "deinprogramm" "afm" "ffi" "gui-debugger" "readline" "scribble" "unstable" "picturing-programs" "file" "sgl" "im!
 ages" "wxme" "xrepl" "lang" "xml" "mrlib" "version" "frtime" "mzscheme" "embedded-gui" "slatex"))

Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang typed/racket\n" #t #t))
>Description:
This program produces #f, but the match should succeed:

#lang racket

(define d #"\370")
(regexp-match #rx"." d)

This program:
(for/list ([i (in-range 256)]
             #:when (not (regexp-match "." (list->bytes (list i)))))
    i)

prints all the numbers from 128-255.
>How-To-Repeat:
>Fix:
>Audit-Trail:
From: Matthew Flatt <mflatt@cs.utah.edu>
To: samth@ccs.neu.edu, bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12620: the . regexp on bytes fails to match high bytes
Date: Tue, 6 Mar 2012 07:41:44 -0700

 At Tue, 6 Mar 2012 09:40:02 -0500, samth@ccs.neu.edu wrote:
 > This program produces #f, but the match should succeed:
 > 
 > #lang racket
 > 
 > (define d #"\370")
 > (regexp-match #rx"." d)
 > 
 > This program:
 > (for/list ([i (in-range 256)]
 >              #:when (not (regexp-match "." (list->bytes (list i)))))
 >     i)
 > 
 > prints all the numbers from 128-255.
 
 That's all correct.
 
 In a string regexp, "." means "match a utf-8 encoding for a single
 character", and individual bytes in the range 128-255 are not encoding
 sequences.
 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: samth@ccs.neu.edu, bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12620: the . regexp on bytes fails to match high bytes
Date: Tue, 6 Mar 2012 08:45:09 -0600

 And just in case (altho you probably already knew this), you can use
 byte regexps:
 
 > (regexp-match #rx#"." #"\370")
 '(#"\370")
 
 
 On Tue, Mar 6, 2012 at 8:41 AM, Matthew Flatt <mflatt@cs.utah.edu> wrote:
 > At Tue, 6 Mar 2012 09:40:02 -0500, samth@ccs.neu.edu wrote:
 >> This program produces #f, but the match should succeed:
 >>
 >> #lang racket
 >>
 >> (define d #"\370")
 >> (regexp-match #rx"." d)
 >>
 >> This program:
 >> (for/list ([i (in-range 256)]
 >>              #:when (not (regexp-match "." (list->bytes (list i)))))
 >>     i)
 >>
 >> prints all the numbers from 128-255.
 >
 > That's all correct.
 >
 > In a string regexp, "." means "match a utf-8 encoding for a single
 > character", and individual bytes in the range 128-255 are not encoding
 > sequences.
 >
 
From: Sam Tobin-Hochstadt <samth@ccs.neu.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12620: the . regexp on bytes fails to match high bytes
Date: Tue, 6 Mar 2012 09:44:51 -0500

 On Tue, Mar 6, 2012 at 9:41 AM, Matthew Flatt <mflatt@cs.utah.edu> wrote:
 > At Tue, 6 Mar 2012 09:40:02 -0500, samth@ccs.neu.edu wrote:
 >> This program produces #f, but the match should succeed:
 >>
 >> #lang racket
 >>
 >> (define d #"\370")
 >> (regexp-match #rx"." d)
 >>
 >> This program:
 >> (for/list ([i (in-range 256)]
 >>              #:when (not (regexp-match "." (list->bytes (list i)))))
 >>     i)
 >>
 >> prints all the numbers from 128-255.
 >
 > That's all correct.
 >
 > In a string regexp, "." means "match a utf-8 encoding for a single
 > character", and individual bytes in the range 128-255 are not encoding
 > sequences.
 
 In that case, the documentation should be clarified, since right now
 the docs for "." just say "matches any".  What should I change them to
 say?  Also, are there other places where the behavior of byte and
 string regular expressions differ?
 
 -- 
 sam th
 samth@ccs.neu.edu
 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Sam Tobin-Hochstadt <samth@ccs.neu.edu>
Cc: Matthew Flatt <mflatt@cs.utah.edu>, bugs@racket-lang.org,
        nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12620: the . regexp on bytes fails to match high bytes
Date: Tue, 6 Mar 2012 08:49:54 -0600

 On Tue, Mar 6, 2012 at 8:44 AM, Sam Tobin-Hochstadt <samth@ccs.neu.edu> wrote:
 > In that case, the documentation should be clarified, since right now
 > the docs for "." just say "matches any".  What should I change them to
 > say?
 
 I think that what it says there is fine (for the reference). The issue
 is writing up what happens when you use a string regexp on a bytes. I
 don't know where that is, but it affects everything, not just '.'.
 
 > Also, are there other places where the behavior of byte and
 > string regular expressions differ?
 
 Everywhere the encoding of a string is not just a byte (the same
 byte). All characters that are not (7-bit) ASCII in the utf-8 encoding
 (which is I think the one being used here).
 
 Robby
 
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: Sam Tobin-Hochstadt <samth@ccs.neu.edu>,
        Matthew Flatt <mflatt@cs.utah.edu>, bugs@racket-lang.org,
        nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12620: the . regexp on bytes fails to match high bytes
Date: Tue, 6 Mar 2012 09:53:22 -0500

 On Mar 6, 2012, at 9:49 AM, Robby Findler wrote:
 
 > On Tue, Mar 6, 2012 at 8:44 AM, Sam Tobin-Hochstadt <samth@ccs.neu.edu> wrote:
 >> In that case, the documentation should be clarified, since right now
 >> the docs for "." just say "matches any".  What should I change them to
 >> say?
 > 
 > I think that what it says there is fine (for the reference). The issue
 > is writing up what happens when you use a string regexp on a bytes. I
 > don't know where that is, but it affects everything, not just '.'.
 > 
 >> Also, are there other places where the behavior of byte and
 >> string regular expressions differ?
 > 
 > Everywhere the encoding of a string is not just a byte (the same
 > byte). All characters that are not (7-bit) ASCII in the utf-8 encoding
 > (which is I think the one being used here).
 > 
 > Robby
 
 
 FWIW, I think we could significantly improve the reference with a
 series of examples including borderline cases such as the above. 
 
 
From: Matthew Flatt <mflatt@cs.utah.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: Sam Tobin-Hochstadt <samth@ccs.neu.edu>, bugs@racket-lang.org,
        nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12620: the . regexp on bytes fails to match high bytes
Date: Tue, 6 Mar 2012 07:54:07 -0700

 At Tue, 6 Mar 2012 08:49:54 -0600, Robby Findler wrote:
 > On Tue, Mar 6, 2012 at 8:44 AM, Sam Tobin-Hochstadt <samth@ccs.neu.edu> wrote:
 > > In that case, the documentation should be clarified, since right now
 > > the docs for "." just say "matches any".  What should I change them to
 > > say?
 > 
 > I think that what it says there is fine (for the reference). The issue
 > is writing up what happens when you use a string regexp on a bytes. I
 > don't know where that is, but it affects everything, not just '.'.
 
 Right: The issue is what it means to use a string regexp on a byte
 string. In the context of string matching, "." means match any
 character. When applied to a byte string, string regexps match UTF-8
 encoding sequences corresponding to matching characters, always. It's
 not a special case for ".".
 
 That information is the first paragraph of the section; maybe there's
 some way to highlight it more clearly.
 
 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: Sam Tobin-Hochstadt <samth@ccs.neu.edu>,
        Matthew Flatt <mflatt@cs.utah.edu>, bugs@racket-lang.org,
        nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12620: the . regexp on bytes fails to match high bytes
Date: Tue, 6 Mar 2012 08:56:27 -0600

 On Tue, Mar 6, 2012 at 8:53 AM, Matthias Felleisen <matthias@ccs.neu.edu> wrote:
 >
 > On Mar 6, 2012, at 9:49 AM, Robby Findler wrote:
 >
 >> On Tue, Mar 6, 2012 at 8:44 AM, Sam Tobin-Hochstadt <samth@ccs.neu.edu> wrote:
 >>> In that case, the documentation should be clarified, since right now
 >>> the docs for "." just say "matches any".  What should I change them to
 >>> say?
 >>
 >> I think that what it says there is fine (for the reference). The issue
 >> is writing up what happens when you use a string regexp on a bytes. I
 >> don't know where that is, but it affects everything, not just '.'.
 >>
 >>> Also, are there other places where the behavior of byte and
 >>> string regular expressions differ?
 >>
 >> Everywhere the encoding of a string is not just a byte (the same
 >> byte). All characters that are not (7-bit) ASCII in the utf-8 encoding
 >> (which is I think the one being used here).
 >>
 >> Robby
 >
 >
 > FWIW, I think we could significantly improve the reference with a
 > series of examples including borderline cases such as the above.
 
 IMO, this is an issue that can be explained more clearly in a
 Guide-like setting, not the reference. The reference is for people who
 already understand how the bigger pieces fit together, and the Guide
 is the place where you explain that.
 
 Perhaps more judicious use of margin notes could have helped Sam here,
 tho, I'm not sure.
 
 Robby
 
From: Sam Tobin-Hochstadt <samth@ccs.neu.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: Robby Findler <robby@eecs.northwestern.edu>, bugs@racket-lang.org,
        nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12620: the . regexp on bytes fails to match high bytes
Date: Tue, 6 Mar 2012 09:57:11 -0500

 On Tue, Mar 6, 2012 at 9:54 AM, Matthew Flatt <mflatt@cs.utah.edu> wrote:
 > At Tue, 6 Mar 2012 08:49:54 -0600, Robby Findler wrote:
 >> On Tue, Mar 6, 2012 at 8:44 AM, Sam Tobin-Hochstadt <samth@ccs.neu.edu> wrote:
 >> > In that case, the documentation should be clarified, since right now
 >> > the docs for "." just say "matches any".  What should I change them to
 >> > say?
 >>
 >> I think that what it says there is fine (for the reference). The issue
 >> is writing up what happens when you use a string regexp on a bytes. I
 >> don't know where that is, but it affects everything, not just '.'.
 >
 > Right: The issue is what it means to use a string regexp on a byte
 > string. In the context of string matching, "." means match any
 > character. When applied to a byte string, string regexps match UTF-8
 > encoding sequences corresponding to matching characters, always. It's
 > not a special case for ".".
 >
 > That information is the first paragraph of the section; maybe there's
 > some way to highlight it more clearly.
 
 Ah, I see it now.  I think Matthias' suggestion is right, that
 examples are the way to go.  I'll try to come up with some.
 
 
 -- 
 sam th
 samth@ccs.neu.edu
 

Class changed from "sw-bug" to "doc-bug" by samth at Wed, 18 Apr 2012 15:16:51 -0400
Reason>>> Need examples

Responsible changed from "nobody" to "samth" by samth at Wed, 18 Apr 2012 15:16:51 -0400
Reason>>> .

