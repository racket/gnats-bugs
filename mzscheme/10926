From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Mon May 24 13:54:34 2010
Received: from mail-gx0-f228.google.com (mail-gx0-f228.google.com [209.85.217.228])
	by champlain.ccs.neu.edu (8.14.3/8.14.3) with ESMTP id o4OHsWcB031361
	for <bugs@bugs.plt-scheme.org>; Mon, 24 May 2010 13:54:32 -0400
Message-Id: <201005241754.o4OHsTr8031353@champlain.ccs.neu.edu>
Date: Mon, 24 May 2010 13:54:29 -0400
From: rafkind@cs.utah.edu
To: bugs@plt-scheme.org
Subject: racket search path

>Number:         10926
>Category:       mzscheme
>Synopsis:       racket search path
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Mon May 24 13:56:01 -0400 2010
>Last-Modified:  Tue May 03 18:19:52 -0400 2011
>Originator:     Jon Rafkind
>Organization:
plt
>Submitter-Id:   unknown
>Release:        4.2.5.16
>Environment:
Linux i686 / Mozilla/5.0 (X11; U; Linux i686; en-US) AppleWebKit/533.9 (KHTML, like Gecko) Chrome/6.0.401.1 Safari/533.9
>Description:
Racket's selection of the file to run when given an argument is unintuitive to me.

$ ls
x x.rkt x.ss
$ racket x.ss
.. x.rkt will be loaded ..
$ racket x
.. x will be loaded ..

I feel that if 'racket x' tries to load the file 'x' then 'racket x.ss' should load 'x.ss'.
>How-To-Repeat:
>Fix:
>Audit-Trail:
From: Matthew Flatt <mflatt@cs.utah.edu>
To: rafkind@cs.utah.edu, bugs@plt-scheme.org
Cc: nobody@plt-scheme.org, bug-notification@plt-scheme.org
Subject: Re: [plt-bug] all/10926: racket search path
Date: Mon, 24 May 2010 14:17:37 -0600

 At Mon, 24 May 2010 13:56:02 -0400, rafkind@cs.utah.edu wrote:
 > Racket's selection of the file to run when given an argument is
 > unintuitive to me.
 > 
 > $ ls
 > x x.rkt x.ss
 > $ racket x.ss
 > .. x.rkt will be loaded ..
 > $ racket x
 > .. x will be loaded ..
 > 
 > I feel that if 'racket x' tries to load the file 'x' then 'racket
 > x.ss' should load 'x.ss'.
 
 I'd prefer that, too, but I couldn't make it work with anything that
 seemed workable for backward compatibility and that wasn't even less
 intuitive. (I tried specifically for a while to make that example
 work.)
 
 The key relevant constraints for the current design were
 
  1. providers and consumers of ".ss" and ".rkt" files should be able to
     independently switch from ".ss" to ".rkt", and
 
  2. the existing module-resolution framework should remain in place.
 
 As a result, ".ss" and ".rkt" module paths need to be equated prior to
 checking the filesystem, and that's why ".ss" gets automatically
 converted to ".rkt", while that doesn't happen for any other suffix
 (including a lack of a suffix).
 
 
From: Carl Eastlund <cce@plt-scheme.org>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: rafkind@cs.utah.edu, bugs@plt-scheme.org, nobody@plt-scheme.org,
        bug-notification@plt-scheme.org
Subject: Re: [plt-bug] all/10926: racket search path
Date: Mon, 24 May 2010 16:25:25 -0400

 On Mon, May 24, 2010 at 4:17 PM, Matthew Flatt <mflatt@cs.utah.edu> wrote:
 > At Mon, 24 May 2010 13:56:02 -0400, rafkind@cs.utah.edu wrote:
 >> Racket's selection of the file to run when given an argument is
 >> unintuitive to me.
 >>
 >> $ ls
 >> x x.rkt x.ss
 >> $ racket x.ss
 >> .. x.rkt will be loaded ..
 >> $ racket x
 >> .. x will be loaded ..
 >>
 >> I feel that if 'racket x' tries to load the file 'x' then 'racket
 >> x.ss' should load 'x.ss'.
 >
 > I'd prefer that, too, but I couldn't make it work with anything that
 > seemed workable for backward compatibility and that wasn't even less
 > intuitive. (I tried specifically for a while to make that example
 > work.)
 >
 > The key relevant constraints for the current design were
 >
 > =A01. providers and consumers of ".ss" and ".rkt" files should be able to
 > =A0 =A0independently switch from ".ss" to ".rkt", and
 >
 > =A02. the existing module-resolution framework should remain in place.
 >
 > As a result, ".ss" and ".rkt" module paths need to be equated prior to
 > checking the filesystem, and that's why ".ss" gets automatically
 > converted to ".rkt", while that doesn't happen for any other suffix
 > (including a lack of a suffix).
 
 Would it perhaps be possible to look first for "x.ss" and second for
 "x.rkt" when given an "x.ss" name?  This way we'd still have
 compatibility both ways, but the default would be a little less
 surprising.
 
 --Carl
From: Jon Rafkind <rafkind@cs.utah.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: bugs@plt-scheme.org, nobody@plt-scheme.org,
        bug-notification@plt-scheme.org
Subject: Re: [plt-bug] all/10926: racket search path
Date: Mon, 24 May 2010 14:27:45 -0600

 On 05/24/2010 02:17 PM, Matthew Flatt wrote:
 > At Mon, 24 May 2010 13:56:02 -0400, rafkind@cs.utah.edu wrote:
 >    
 >> Racket's selection of the file to run when given an argument is
 >> unintuitive to me.
 >>
 >> $ ls
 >> x x.rkt x.ss
 >> $ racket x.ss
 >> .. x.rkt will be loaded ..
 >> $ racket x
 >> .. x will be loaded ..
 >>
 >> I feel that if 'racket x' tries to load the file 'x' then 'racket
 >> x.ss' should load 'x.ss'.
 >>      
 > I'd prefer that, too, but I couldn't make it work with anything that
 > seemed workable for backward compatibility and that wasn't even less
 > intuitive. (I tried specifically for a while to make that example
 > work.)
 >
 > The key relevant constraints for the current design were
 >
 >   1. providers and consumers of ".ss" and ".rkt" files should be able to
 >      independently switch from ".ss" to ".rkt", and
 >
 >   2. the existing module-resolution framework should remain in place.
 >
 > As a result, ".ss" and ".rkt" module paths need to be equated prior to
 > checking the filesystem, and that's why ".ss" gets automatically
 > converted to ".rkt", while that doesn't happen for any other suffix
 > (including a lack of a suffix).
 >    
 
 Ok. I can sympathize with these reasons but can the system provide some 
 information to the user if the above situation occurs? Something like
 
 $ racket x.ss
 Warning: running x.rkt instead of x.ss
 
 In general I should get rid of all my .ss files and used .rkt instead 
 but in the meantime I'd rather not have to debug this sort of situation.
From: Matthew Flatt <mflatt@cs.utah.edu>
To: Carl Eastlund <cce@plt-scheme.org>
Cc: rafkind@cs.utah.edu, bugs@plt-scheme.org, nobody@plt-scheme.org,
        bug-notification@plt-scheme.org
Subject: Re: [plt-bug] all/10926: racket search path
Date: Mon, 24 May 2010 14:30:27 -0600

 At Mon, 24 May 2010 16:25:25 -0400, Carl Eastlund wrote:
 > On Mon, May 24, 2010 at 4:17 PM, Matthew Flatt <mflatt@cs.utah.edu> wrote=
 :
 > > At Mon, 24 May 2010 13:56:02 -0400, rafkind@cs.utah.edu wrote:
 > >> Racket's selection of the file to run when given an argument is
 > >> unintuitive to me.
 > >>
 > >> $ ls
 > >> x x.rkt x.ss
 > >> $ racket x.ss
 > >> .. x.rkt will be loaded ..
 > >> $ racket x
 > >> .. x will be loaded ..
 > >>
 > >> I feel that if 'racket x' tries to load the file 'x' then 'racket
 > >> x.ss' should load 'x.ss'.
 > >
 > > I'd prefer that, too, but I couldn't make it work with anything that
 > > seemed workable for backward compatibility and that wasn't even less
 > > intuitive. (I tried specifically for a while to make that example
 > > work.)
 > >
 > > The key relevant constraints for the current design were
 > >
 > > =C2=A01. providers and consumers of ".ss" and ".rkt" files should be ab=
 le to
 > > =C2=A0 =C2=A0independently switch from ".ss" to ".rkt", and
 > >
 > > =C2=A02. the existing module-resolution framework should remain in plac=
 e.
 > >
 > > As a result, ".ss" and ".rkt" module paths need to be equated prior to
 > > checking the filesystem, and that's why ".ss" gets automatically
 > > converted to ".rkt", while that doesn't happen for any other suffix
 > > (including a lack of a suffix).
 >=20
 > Would it perhaps be possible to look first for "x.ss" and second for
 > "x.rkt" when given an "x.ss" name?  This way we'd still have
 > compatibility both ways, but the default would be a little less
 > surprising.
 
 Please see "prior to checking the filesystem" above. Various bits of
 infrastructure rely in subtle ways on being able to manipulate modules
 paths without checking the filesystem, either because they don't have
 permission or because the files may not exist (e.g., not yet installed)
 at the time that the path is manipulated.
 
From: Sam Tobin-Hochstadt <samth@ccs.neu.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: rafkind <rafkind@cs.utah.edu>, bugs <bugs@plt-scheme.org>,
        nobody <nobody@plt-scheme.org>,
        bug-notification <bug-notification@plt-scheme.org>
Subject: Re: [plt-bug] all/10926: racket search path
Date: Mon, 24 May 2010 13:43:27 -0700

 On Mon, May 24, 2010 at 1:40 PM, Matthew Flatt <mflatt@cs.utah.edu> wrote:
 > At Mon, 24 May 2010 14:27:45 -0600, Jon Rafkind wrote:
 >> On 05/24/2010 02:17 PM, Matthew Flatt wrote:
 >> > At Mon, 24 May 2010 13:56:02 -0400, rafkind@cs.utah.edu wrote:
 >> >
 >> >> Racket's selection of the file to run when given an argument is
 >> >> unintuitive to me.
 >> >>
 >> >> $ ls
 >> >> x x.rkt x.ss
 >> >> $ racket x.ss
 >> >> .. x.rkt will be loaded ..
 >> >> $ racket x
 >> >> .. x will be loaded ..
 >> >>
 >> >> I feel that if 'racket x' tries to load the file 'x' then 'racket
 >> >> x.ss' should load 'x.ss'.
 >> >>
 >> > I'd prefer that, too, but I couldn't make it work with anything that
 >> > seemed workable for backward compatibility and that wasn't even less
 >> > intuitive. (I tried specifically for a while to make that example
 >> > work.)
 >> >
 >> > The key relevant constraints for the current design were
 >> >
 >> > =A0 1. providers and consumers of ".ss" and ".rkt" files should be abl=
 e to
 >> > =A0 =A0 =A0independently switch from ".ss" to ".rkt", and
 >> >
 >> > =A0 2. the existing module-resolution framework should remain in place=
 .
 >> >
 >> > As a result, ".ss" and ".rkt" module paths need to be equated prior to
 >> > checking the filesystem, and that's why ".ss" gets automatically
 >> > converted to ".rkt", while that doesn't happen for any other suffix
 >> > (including a lack of a suffix).
 >> >
 >>
 >> Ok. I can sympathize with these reasons but can the system provide some
 >> information to the user if the above situation occurs? Something like
 >>
 >> $ racket x.ss
 >> Warning: running x.rkt instead of x.ss
 >>
 >> In general I should get rid of all my .ss files and used .rkt instead
 >> but in the meantime I'd rather not have to debug this sort of situation.
 >
 > Either the warning has to be enabled in some way so that no one will
 > see it (e.g., a log entry at the 'warning level), or it seems like the
 > warning would pollute the stdout of lots of programs and thus violate
 > constraint 1.
 
 I think the suggestion is only to warn if both x.ss and x.rkt exist,
 which seems like it would be a very rare case.
 --=20
 sam th
 samth@ccs.neu.edu
From: Matthew Flatt <mflatt@cs.utah.edu>
To: rafkind@cs.utah.edu
Cc: bugs@plt-scheme.org, nobody@plt-scheme.org,
        bug-notification@plt-scheme.org
Subject: Re: [plt-bug] all/10926: racket search path
Date: Mon, 24 May 2010 14:40:37 -0600

 At Mon, 24 May 2010 14:27:45 -0600, Jon Rafkind wrote:
 > On 05/24/2010 02:17 PM, Matthew Flatt wrote:
 > > At Mon, 24 May 2010 13:56:02 -0400, rafkind@cs.utah.edu wrote:
 > >    
 > >> Racket's selection of the file to run when given an argument is
 > >> unintuitive to me.
 > >>
 > >> $ ls
 > >> x x.rkt x.ss
 > >> $ racket x.ss
 > >> .. x.rkt will be loaded ..
 > >> $ racket x
 > >> .. x will be loaded ..
 > >>
 > >> I feel that if 'racket x' tries to load the file 'x' then 'racket
 > >> x.ss' should load 'x.ss'.
 > >>      
 > > I'd prefer that, too, but I couldn't make it work with anything that
 > > seemed workable for backward compatibility and that wasn't even less
 > > intuitive. (I tried specifically for a while to make that example
 > > work.)
 > >
 > > The key relevant constraints for the current design were
 > >
 > >   1. providers and consumers of ".ss" and ".rkt" files should be able to
 > >      independently switch from ".ss" to ".rkt", and
 > >
 > >   2. the existing module-resolution framework should remain in place.
 > >
 > > As a result, ".ss" and ".rkt" module paths need to be equated prior to
 > > checking the filesystem, and that's why ".ss" gets automatically
 > > converted to ".rkt", while that doesn't happen for any other suffix
 > > (including a lack of a suffix).
 > >    
 > 
 > Ok. I can sympathize with these reasons but can the system provide some 
 > information to the user if the above situation occurs? Something like
 > 
 > $ racket x.ss
 > Warning: running x.rkt instead of x.ss
 > 
 > In general I should get rid of all my .ss files and used .rkt instead 
 > but in the meantime I'd rather not have to debug this sort of situation.
 
 Either the warning has to be enabled in some way so that no one will
 see it (e.g., a log entry at the 'warning level), or it seems like the
 warning would pollute the stdout of lots of programs and thus violate
 constraint 1.
 
From: Jon Rafkind <rafkind@cs.utah.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: bugs@plt-scheme.org, nobody@plt-scheme.org,
        bug-notification@plt-scheme.org
Subject: Re: [plt-bug] all/10926: racket search path
Date: Mon, 24 May 2010 14:43:50 -0600

 >> $ racket x.ss
 >> Warning: running x.rkt instead of x.ss
 >>
 >> In general I should get rid of all my .ss files and used .rkt instead
 >> but in the meantime I'd rather not have to debug this sort of situation.
 >>      
 > Either the warning has to be enabled in some way so that no one will
 > see it (e.g., a log entry at the 'warning level), or it seems like the
 > warning would pollute the stdout of lots of programs and thus violate
 > constraint 1.
 >    
 
 Ah, I just set `PLTSTDERR=warning' in my shell and now I see interesting 
 warnings! (like from the bytecode optimizer). I would be happy if the 
 warning about .ss -> rkt was printed at this level.
From: Jon Rafkind <rafkind@cs.utah.edu>
To: Sam Tobin-Hochstadt <samth@ccs.neu.edu>
Cc: Matthew Flatt <mflatt@cs.utah.edu>, bugs <bugs@plt-scheme.org>,
        nobody <nobody@plt-scheme.org>,
        bug-notification <bug-notification@plt-scheme.org>
Subject: Re: [plt-bug] all/10926: racket search path
Date: Mon, 24 May 2010 14:47:00 -0600

 On 05/24/2010 02:43 PM, Sam Tobin-Hochstadt wrote:
 > On Mon, May 24, 2010 at 1:40 PM, Matthew Flatt<mflatt@cs.utah.edu>  wrote:
 >    
 >> At Mon, 24 May 2010 14:27:45 -0600, Jon Rafkind wrote:
 >>      
 >>> On 05/24/2010 02:17 PM, Matthew Flatt wrote:
 >>>        
 >>>> At Mon, 24 May 2010 13:56:02 -0400, rafkind@cs.utah.edu wrote:
 >>>>
 >>>>          
 >>>>> Racket's selection of the file to run when given an argument is
 >>>>> unintuitive to me.
 >>>>>
 >>>>> $ ls
 >>>>> x x.rkt x.ss
 >>>>> $ racket x.ss
 >>>>> .. x.rkt will be loaded ..
 >>>>> $ racket x
 >>>>> .. x will be loaded ..
 >>>>>
 >>>>> I feel that if 'racket x' tries to load the file 'x' then 'racket
 >>>>> x.ss' should load 'x.ss'.
 >>>>>
 >>>>>            
 >>>> I'd prefer that, too, but I couldn't make it work with anything that
 >>>> seemed workable for backward compatibility and that wasn't even less
 >>>> intuitive. (I tried specifically for a while to make that example
 >>>> work.)
 >>>>
 >>>> The key relevant constraints for the current design were
 >>>>
 >>>>    1. providers and consumers of ".ss" and ".rkt" files should be able to
 >>>>       independently switch from ".ss" to ".rkt", and
 >>>>
 >>>>    2. the existing module-resolution framework should remain in place.
 >>>>
 >>>> As a result, ".ss" and ".rkt" module paths need to be equated prior to
 >>>> checking the filesystem, and that's why ".ss" gets automatically
 >>>> converted to ".rkt", while that doesn't happen for any other suffix
 >>>> (including a lack of a suffix).
 >>>>
 >>>>          
 >>> Ok. I can sympathize with these reasons but can the system provide some
 >>> information to the user if the above situation occurs? Something like
 >>>
 >>> $ racket x.ss
 >>> Warning: running x.rkt instead of x.ss
 >>>
 >>> In general I should get rid of all my .ss files and used .rkt instead
 >>> but in the meantime I'd rather not have to debug this sort of situation.
 >>>        
 >> Either the warning has to be enabled in some way so that no one will
 >> see it (e.g., a log entry at the 'warning level), or it seems like the
 >> warning would pollute the stdout of lots of programs and thus violate
 >> constraint 1.
 >>      
 > I think the suggestion is only to warn if both x.ss and x.rkt exist,
 > which seems like it would be a very rare case.
 >    
 I think a warning should be printed in the following case as well:
 
 $ ls
 x.rkt
 $ racket x.ss
 .. x.rkt gets loaded ..

