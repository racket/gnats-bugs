From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Thu Jan 20 01:57:37 2011
Received: from mail-fx0-f44.google.com (mail-fx0-f44.google.com [209.85.161.44])
	by champlain.ccs.neu.edu (8.14.3/8.14.3) with ESMTP id p0K6vWGw026348
	for <bugs@bugs.plt-scheme.org>; Thu, 20 Jan 2011 01:57:33 -0500
Message-Id: <201101200657.p0K6vQrA026339@champlain.ccs.neu.edu>
Date: Thu, 20 Jan 2011 01:57:26 -0500
From: rafkind@cs.utah.edu
To: bugs@racket-lang.org
Subject: is-a? does not work with mixins

>Number:         11651
>Category:       mzscheme
>Synopsis:       is-a? does not work with mixins
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Thu Jan 20 02:00:01 -0500 2011
>Last-Modified:  Wed Feb 02 14:46:37 -0500 2011
>Originator:     Jon Rafkind
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.0.2.1
>Environment:
Linux i686 / Mozilla/5.0 (X11; U; Linux i686; en-US) AppleWebKit/534.7 (KHTML, like Gecko) Chrome/7.0.517.8 Safari/534.7
>Description:
#lang racket

(define foo-interface (interface ()))
(define foo-mixin
  (mixin () (foo-interface)
         (super-new)))

(define x (new (foo-mixin object%)))
(is-a? x foo-mixin) ;; check 1
(is-a? x foo-interface) ;; check 2

Check 1 yields the error
  is-a?: expects type <class or interface> as 2nd argument, given: #<procedure:foo-mixin>; other arguments were: (object:/home/jon/tmp/q.rkt:5:2 ...)

Check 2 yields #t. Making an interface is a reasonable workaround but it seems like mixins shouldn't be all that different from classes in this case.

>How-To-Repeat:
>Fix:
