From nobody@champlain.ccs.neu.edu  Sat Jun 28 08:46:51 2003
Received: (from nobody@localhost)
	by champlain.ccs.neu.edu (8.9.3/8.8.7) id IAA19632
	for bugs@plt-scheme.org; Sat, 28 Jun 2003 08:46:51 -0400
Message-Id: <200306281246.IAA19632@champlain.ccs.neu.edu>
Date: Sat, 28 Jun 2003 08:46:51 -0400
From: karltk@gentoo.org
Reply-To:
To: bugs@plt-scheme.org
Subject: 204 does not compile with gcc 3.2.2

>Number:         6334
>Category:       mzscheme
>Synopsis:       204 does not compile with gcc 3.2.2
>Confidential:   no
>Severity:       critical
>Priority:       medium
>Responsible:    mflatt
>State:          closed
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Sat Jun 28 08:50:00 EDT 2003
>Closed-Date:    Fri Jul 25 11:37:33 EDT 2003
>Last-Modified:  Fri Jul 25 11:37:33 EDT 2003
>Originator:     Karl Trygve Kalleberg
>Release:        204
>Organization:
plt
>Environment:
linux-other
>Description:
make mzscheme 
make[3]: Entering directory `/var/tmp/portage/drscheme-204/work/plt/src/mzscheme
'
gcc -O3 -mcpu=i686 -pipe -Wall    -I./include -c ./main.c -o main.o
gcc -o mzscheme main.o  libmzscheme.a libmzgc.a -ldl -lm  -rdynamic 
libmzscheme.a(salloc.o)(.text+0x362): In function `scheme_get_stack_base':
: undefined reference to `GC_get_stack_base'
libmzgc.a(alloc.o)(.text+0xa54): In function `GC_finish_collection':
: undefined reference to `GC_print_address_map'
libmzgc.a(alloc.o)(.text+0xb29): In function `GC_expand_hp_inner':
: undefined reference to `GC_page_size'
libmzgc.a(alloc.o)(.text+0xb56): In function `GC_expand_hp_inner':
: undefined reference to `GC_unix_get_mem'
libmzgc.a(reclaim.o)(.text+0x4b6): In function `GC_reclaim_generic':
: undefined reference to `GC_write_hint'
libmzgc.a(reclaim.o)(.text+0x500): In function `GC_reclaim_generic':
: undefined reference to `GC_write_hint'
libmzgc.a(reclaim.o)(.text+0x52c): In function `GC_reclaim_generic':
: undefined reference to `GC_write_hint'
libmzgc.a(reclaim.o)(.text+0x54f): In function `GC_reclaim_generic':
: undefined reference to `GC_write_hint'
libmzgc.a(reclaim.o)(.text+0x590): In function `GC_reclaim_generic':
: undefined reference to `GC_write_hint'
libmzgc.a(reclaim.o)(.text+0x600): more undefined references to `GC_write_hint' 
follow
libmzgc.a(misc.o)(.text+0x369): In function `GC_init_inner':
: undefined reference to `GC_setpagesize'
libmzgc.a(misc.o)(.text+0x4a1): In function `GC_init_inner':
: undefined reference to `GC_register_data_segments'
libmzgc.a(misc.o)(.text+0x4ab): In function `GC_init_inner':
: undefined reference to `GC_get_stack_base'
libmzgc.a(misc.o)(.text+0x7c1): In function `GC_enable_incremental':
: undefined reference to `GC_setpagesize'
libmzgc.a(misc.o)(.text+0x7c6): In function `GC_enable_incremental':
: undefined reference to `GC_dirty_init'
libmzgc.a(misc.o)(.text+0x7e6): In function `GC_enable_incremental':
: undefined reference to `GC_read_dirty'
libmzgc.a(mark_rts.o)(.text+0x940): In function `GC_push_roots':
: undefined reference to `GC_push_other_roots'
libmzgc.a(headers.o)(.text+0x3d): In function `GC_scratch_alloc':
: undefined reference to `GC_unix_get_mem'
libmzgc.a(headers.o)(.text+0x73): In function `GC_scratch_alloc':
: undefined reference to `GC_unix_get_mem'
libmzgc.a(headers.o)(.text+0x6b): In function `GC_scratch_alloc':
: undefined reference to `GC_unix_get_mem'
libmzgc.a(mark.o)(.text+0xb6d): In function `alloc_mark_stack':
: undefined reference to `GC_page_size'
libmzgc.a(mark.o)(.text+0x167a): In function `GC_push_next_marked_dirty':
: undefined reference to `GC_dirty_maintained'
libmzgc.a(mark.o)(.text+0x171b): In function `GC_push_next_marked_dirty':
: undefined reference to `GC_page_was_dirty'
libmzgc.a(mark.o)(.text+0x173a): In function `GC_push_next_marked_dirty':
: undefined reference to `GC_page_was_dirty'
libmzgc.a(mark.o)(.text+0x1987): In function `GC_initiate_gc':
: undefined reference to `GC_dirty_maintained'
libmzgc.a(mark.o)(.text+0x19d1): In function `GC_initiate_gc':
: undefined reference to `GC_read_dirty'
libmzgc.a(mark.o)(.text+0x1bdf): In function `GC_push_conditional':
: undefined reference to `GC_page_was_dirty'
libmzgc.a(mark.o)(.text+0x1ed4): In function `GC_block_was_dirty':
: undefined reference to `GC_page_was_dirty'
libmzgc.a(mark.o)(.text+0x1f03): In function `GC_block_was_dirty':
: undefined reference to `GC_page_was_dirty'
collect2: ld returned 1 exit status
make[3]: *** [mzscheme] Error 1
make[3]: Leaving directory `/var/tmp/portage/drscheme-204/work/plt/src/mzscheme'
make[2]: *** [normal-bin] Error 2
>How-To-Repeat:
1. unpack
2. cd src
2. configure --prefix=/usr/share/drscheme
3. make 
>Fix:

>Release-Note:

>Audit-Trail:

From: Matthew Flatt <mflatt@cs.utah.edu>
To: karltk@gentoo.org
Cc: bugs@plt-scheme.org
Subject: Re: all/6334: 204 does not compile with gcc 3.2.2
Date: Wed, 16 Jul 2003 10:35:28 -0600

 Sorry that it's taken me so long to get back to you.
 
 I'm using gcc 3.2.2 with RedHat 9, and things seem ok.
 
 In looking at the trace you sent, it appears that
 src/mzscheme/gc/os_dep.c didn't build, or didn't get included in the
 "libmzgc.a". Offhand, I can't figure out wht that would be, since
 os_dep.c isn't compiled in any special way (unlike, say, mach_dep.c).
 
 I wonder whether you have time to provide a more complete trace of the
 make, which might reveal the problem?
 
 If you have even more time, could you perhaps help us test v205 (in a
 couple of weeks) to make sure it compiles ok?
 
 Thanks,
 Matthew
 

From: Karl Trygve Kalleberg <karltk@prosalg.no>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: karltk@gentoo.org, bugs@plt-scheme.org
Subject: Re: all/6334: 204 does not compile with gcc 3.2.2
Date: Thu, 17 Jul 2003 19:52:04 +0200 (MET DST)

 On Wed, 16 Jul 2003, Matthew Flatt wrote:
 
 > Sorry that it's taken me so long to get back to you.
 > 
 > I'm using gcc 3.2.2 with RedHat 9, and things seem ok.
 > 
 > In looking at the trace you sent, it appears that
 > src/mzscheme/gc/os_dep.c didn't build, or didn't get included in the
 > "libmzgc.a". Offhand, I can't figure out wht that would be, since
 > os_dep.c isn't compiled in any special way (unlike, say, mach_dep.c).
 > 
 > I wonder whether you have time to provide a more complete trace of the
 > make, which might reveal the problem?
 
 I have retried with our updated compiler, and that seems to solve it. I'll
 report back if I manage to reproduce the problem and figure out the
 underlying flaw. Sorry for bothering.
  
 > If you have even more time, could you perhaps help us test v205 (in a
 > couple of weeks) to make sure it compiles ok?
 
 Yes, sure. If you could cc me an announce message or similar, I'll give it
 a spin.
 
 
 Kind regards,
 
 Karl T
 
 
Responsible-Changed-From-To: eli->mflatt
Responsible-Changed-By: mflatt
Responsible-Changed-When: Fri Jul 25 11:37:32 2003
Responsible-Changed-Why:
    mz
State-Changed-From-To: open->closed
State-Changed-By: mflatt
State-Changed-When: Fri Jul 25 11:37:32 2003
State-Changed-Why:
    .
>Unformatted:

