From nobody@cs.rice.edu  Tue Oct 12 13:15:42 1999
Received: from web.cs.rice.edu (web.cs.rice.edu [128.42.1.163])
	by cs.rice.edu (8.9.0/8.9.0) with ESMTP id NAA20281
	for <plt-gnats@cs.rice.edu>; Tue, 12 Oct 1999 13:15:42 -0500 (CDT)
Message-Id: <199910121815.NAA15753@web.cs.rice.edu>
Date: Tue, 12 Oct 1999 13:15:41 -0500 (CDT)
From: ptg@rice.edu
Reply-To: ptg@rice.edu
To: plt-gnats@cs.rice.edu
Subject: reading /dev/null is broken 

>Number:         1224
>Category:       mzscheme
>Synopsis:       reading /dev/null is broken
>Confidential:   no
>Severity:       serious
>Priority:       medium
>Responsible:    mflatt
>State:          closed
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Tue Oct 12 18:30:01 GMT 1999
>Last-Modified:  Thu Dec  2 14:52:07 CST 1999
>Originator:     Paul Graunke
>Organization:
titan
>Release:        101/6
>Environment:
Solaris
>Description:
reading from /dev/null returns #<eof> as it should under Linux.
It hangs under Solaris (sun.cs.rice.edu).
>How-To-Repeat:
Run this in mzscheme or drscheme
(define dev-null (open-input-file "/dev/null"))
(read-char dev-null)

>Fix:

>Audit-Trail:

Responsible-Changed-From-To: steck->mflatt
Responsible-Changed-By: mflatt
Responsible-Changed-When: Fri Oct 15 15:47:04 1999
Responsible-Changed-Why:


From: Matthew Flatt <mflatt@cs.utah.edu>
To: ptg@rice.edu
Cc: plt-gnats@cs.rice.edu
Subject: Re: all/1224: reading /dev/null is broken 
Date: Tue, 19 Oct 1999 10:22:14 -0600 (MDT)

 Quoting ptg@rice.edu:
 > reading from /dev/null returns #<eof> as it should under Linux.
 > It hangs under Solaris (sun.cs.rice.edu).
 
 From the Solaris man page for select():
 
      The select() function supports regular files,  terminal  and
      pseudo-terminal  devices,  STREAMS-based  files,  FIFOs  and
      pipes. The behavior of select()  on  file  descriptors  that
      refer to other types of file is unspecified.
 
 Thus, select is not defined for file descriptors connected to /dev/null
 or /dev/zero. That's awfully inconvenient.
 
 After taking a survey from easily-accessible machines, I see that
 FreeBSD, Linux, and SunOS 4 do not have such a restriction, but HP/UX
 does. So it's probably a BSD versus SYSV thing. I'll have to consult an
 expert.
 
 Yuck yuck yuck.
 
 Matthew

State-Changed-From-To: open-closed
State-Changed-By: mflatt
State-Changed-When: Thu Dec  2 14:48:57 1999
State-Changed-Why:

I figured out how to fix the problem without too much pain, and
without taking a huge performance hit. MzScheme still uses select(),
but for Solaris and HP/UX, it double-checks with a non-blocking read()
when the select() fails. It seems obvious in retorspect, but maybe I
had forgotten about `ungetc' before.


>Unformatted:
