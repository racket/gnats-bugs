From nobody@cs.rice.edu  Sun Dec 13 23:39:00 1998
Received: from web.cs.rice.edu (web.cs.rice.edu [128.42.1.163])
	by cs.rice.edu (8.9.0/8.9.0) with ESMTP id XAA17415
	for <plt-gnats@cs.rice.edu>; Sun, 13 Dec 1998 23:38:59 -0600 (CST)
Message-Id: <199812140538.XAA07339@web.cs.rice.edu>
Date: Sun, 13 Dec 1998 23:38:59 -0600 (CST)
From: raffael@mediaone.net
Reply-To: raffael@mediaone.net
To: plt-gnats@cs.rice.edu
Subject: mzc cannot accept input from a file 

>Number:         858
>Category:       mzscheme
>Synopsis:       mzc cannot accept input from a file
>Confidential:   no
>Severity:       serious
>Priority:       medium
>Responsible:    mflatt
>State:          closed
>Class:          doc-bug
>Submitter-Id:   unknown
>Arrival-Date:   Mon Dec 14 05:45:01 GMT 1998
>Last-Modified:  Sat Jan 16 10:27:35 CST 1999
>Originator:     Raffael Cavallaro
>Organization:
titan
>Release:        53
>Environment:
Mac PowerPC
>Description:
MzScheme PPC (or mzc) displays a dialog which asks the user to choose an input option (either from a file, or from the command line) and an output option (either to the console, or to a file).

When the user selects input from a file, selects a source file from the resulting choose file dialog, the following error is generated:

"mzc: expects <file or collection> [<file or sub-collection>] ... on the command line, given 0 arguments"

However, the same exact source file can be compiled without error if the user selects the command-line option and types in the path to the file. Clearly, mzc is "expecting" command line input, even when the user selects the file input option, and chooses a valid source file.
>How-To-Repeat:
1. Double-click either mzc or MzScheme PPC to start the MzScheme PPC app.
2. Click on the "file" radio button on the left for file input. Select either console output, or file output on the right - either will produce this bug.
3. Select a source file from the resulting choose file dialog.
4. Click "OK" to begin compilation.
5. mzc will present you with the error:

"mzc: expects <file or collection> [<file or sub-collection>] ... on the command line, given 0 arguments"
>Fix:

>Audit-Trail:

From: Matthew Flatt <mflatt@cs.rice.edu>
To: raffael@mediaone.net
Cc: plt-gnats@cs.rice.edu
Subject: Re: all/858: mzc cannot accept input from a file 
Date: Mon, 14 Dec 1998 07:57:43 -0600 (CST)

 Quoting raffael@mediaone.net:
 > MzScheme PPC (or mzc) displays a dialog which asks the user to
 > choose an input option (either from a file, or from the command
 > line) and an output option (either to the console, or to a file).
 >
 > When the user selects input from a file, selects a source file from
 > the resulting choose file dialog, the following error is generated:
 >
 > "mzc: expects <file or collection> [<file or sub-collection>] ... on
 > the command line, given 0 arguments"
 >
 > However, the same exact source file can be compiled without error if
 > the user selects the command-line option and types in the path to
 > the file. Clearly, mzc is "expecting" command line input, even when
 > the user selects the file input option, and chooses a valid source
 > file.
 
 The startup dialog for MzScheme/MacOS (mzc uses the same dialog) tries
 to give the user the same set of options that a Unix user would
 get. Under Unix, there is a concept of "stdin", which generally
 corresponds to interactive input from the user, but this input can be
 redirected so that the "interactive" input comes from a file.
 
 The input-file button in MzScheme's startup dialog sets the source for
 this interactive input.  In plain MzScheme, redirecting input causes
 the read-eval-print loop input to be read from the given file.
 
 mzc does not use interactive input, so redirecting the input to a file
 has no effect. Instead, mzc expects files to be provided on its
 command line, which corresponds to typing the path of the file into
 the text field of the startup dialog. You can also drag a file onto
 the `mzc' icon, and then leave the command line field blank when mzc
 starts up.
 
 While mzc's convention works well under Unix, it is, of course, quite
 clumsy under MacOS. Our long-term solution is to have all of our tools
 availabel within DrScheme (so there will be something like a "Compile"
 button in DrScheme's GUI).
 
 Matthew

From: Matthew Flatt <mflatt@cs.rice.edu>
To: raffael@mediaone.net
Cc: plt-gnats@cs.rice.edu
Subject: Re: all/858: mzc cannot accept input from a file 
Date: Mon, 14 Dec 1998 08:27:44 -0600 (CST)

 I forgot to mention that in the next release, the command-line dialog
 will only show up if you hold down the command key, so dragging a file
 onto mzc wil be the natural way to compile. We'll have to see how well
 this works in practice.
 
 Thanks for your bug report. Although I can't address the problem
 directly for now, I can at least improve the documentation.
 
 Matthew

Responsible-Changed-From-To: steck->mflatt
Responsible-Changed-By: mflatt
Responsible-Changed-When: Mon Dec 14 17:28:40 1998
Responsible-Changed-Why:

State-Changed-From-To: open-closed
State-Changed-By: mflatt
State-Changed-When: Sat Jan 16 10:27:31 1999
State-Changed-Why:
Docs revised.

>Unformatted:
