From ptg@rice.edu  Fri Oct  6 15:16:46 2000
Received: from localhost (ollie.cs.rice.edu [128.42.3.101])
	by cs.rice.edu (8.9.0/8.9.0) with ESMTP id PAA13636
	for <plt-gnats>; Fri, 6 Oct 2000 15:16:46 -0500 (CDT)
Message-Id: <200010062016.PAA13636@cs.rice.edu>
Date: Fri, 6 Oct 2000 15:16:46 -0500 (CDT)
From: ptg@rice.edu
To: plt-gnats@cs.rice.edu
Subject: dynamic-wind doesn't unwind when custodian shuts down

>Number:         1697
>Category:       mzscheme
>Synopsis:       dynamic-wind doesn't unwind when custodian shuts down
>Confidential:   no
>Severity:       serious
>Priority:       medium
>Responsible:    mflatt
>State:          open
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Fri Oct  6 20:30:03 GMT 2000
>Last-Modified:  Tue Oct 31 16:07:43 CST 2000
>Originator:     Paul Graunke
>Organization:
titan
>Release:        103.1d100
>Environment:
unix (i386-linux) (get-display-depth) = 8
Tools: ("CVS" "analysis" "debug" "syncheck" "unit-bundle" "project-manager" "typeset")
Docs Installed:
("docindex.html" "doctable.html" "drfaq" "drscheme" "framework" "help" "icons" "index.html" "insidemz" "logo.gif" "m3" "match" "misclib" "mred" "mrspidey" "mzc" "mzscheme" "old" "old-logo.gif" "r5rs" "teach" "tools")
Collections:
(("/net/jam/ptg/plt/collects" ("CVS" "afm" "browser" "cogen" "compiler" "mrdemo" "drscheme" "drscheme-jr" "dynext" "errortrace" "framework" "games" "graphics" "guibuilder" "help" "hierarchy" "hierlist" "icons" "launcher" "make" "typeset" "mred" "mrspidey" "countdwn" "mzlib" "mzscheme" "net" "slatex" "quasiquote" "readline" "slibinit" "stepper" "tests" "texpict" "doc" "defaults" "drjava" "userspce" "zodiac" "xml" "setup" "mzcom" "htdp" "html" "mysterx" "guserspce" "browser2" "srpersist" "stepper-graphical")))
>Description:
There is a conflict between wanting threads to stop when you tell
them to vs allowing them to clean up after themselves.  Perhaps
there should be (custodian-break-all cust) that breaks all the
threads and closes all the ports?  Perhaps custodian-shutdown-all
could take an extra argument that specifies how long the thread
has to clean itself up (i.e. unwind).  +inf.0 would be like
break-all, and 0 would be shutdown-all.
>How-To-Repeat:
(define cust (make-custodian))
(parameterize ([current-custodian cust])
  (thread (lambda ()
            (dynamic-wind
             void
             (lambda () (sleep 10))
             (lambda () (printf "Hello, World!~n"))))))
(custodian-shutdown-all cust)


commenting out the last line prints "Hello, World", otherwise
it doesn't come out.
>Fix:
>Audit-Trail:

From: Matthew Flatt <mflatt@cs.utah.edu>
To: ptg@rice.edu
Cc: plt-gnats@cs.rice.edu
Subject: Re: all/1697: dynamic-wind doesn't unwind when custodian shuts down
Date: Sat, 7 Oct 2000 07:15:00 -0500 (CDT)

 Quoting ptg@rice.edu:
 > There is a conflict between wanting threads to stop when you tell
 > them to vs allowing them to clean up after themselves.  Perhaps
 > there should be (custodian-break-all cust) that breaks all the
 > threads and closes all the ports?  Perhaps custodian-shutdown-all
 > could take an extra argument that specifies how long the thread
 > has to clean itself up (i.e. unwind).  +inf.0 would be like
 > break-all, and 0 would be shutdown-all.
 
 Is it unreasonable to have the programmer implement this himself?
 Variants of `thread', `kill-thread', `custodian-shutdown-all', etc.,
 could implement this behavior, if used consistently.
 
 Matthew
 
 
 _____NetZero Free Internet Access and Email______
    http://www.netzero.net/download/index.html

Responsible-Changed-From-To: steck->mflatt
Responsible-Changed-By: mflatt
Responsible-Changed-When: Tue Oct 31 16:07:36 2000
Responsible-Changed-Why:

>Unformatted:
