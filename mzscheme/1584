From nobody@cs.rice.edu  Tue Jul 25 12:00:37 2000
Received: from web.cs.rice.edu (web.cs.rice.edu [128.42.1.163])
	by cs.rice.edu (8.9.0/8.9.0) with ESMTP id MAA25432
	for <plt-gnats@cs.rice.edu>; Tue, 25 Jul 2000 12:00:37 -0500 (CDT)
Message-Id: <200007251700.MAA25398@web.cs.rice.edu>
Date: Tue, 25 Jul 2000 12:00:36 -0500 (CDT)
From: eli@cs.cornell.edu
Reply-To: eli@cs.cornell.edu
To: plt-gnats@cs.rice.edu
Subject: process[*]/ports problem with ports 

>Number:         1584
>Category:       mzscheme
>Synopsis:       process[*]/ports problem with ports
>Confidential:   no
>Severity:       serious
>Priority:       medium
>Responsible:    mflatt
>State:          closed
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Tue Jul 25 17:15:08 GMT 2000
>Last-Modified:  Mon Sep  4 12:32:05 CDT 2000
>Originator:     Eli Barzilay
>Organization:
titan
>Release:        103/1
>Environment:
Linux
>Description:
The process[*]/ports behaves strangely when given some ports.

For example,
  (process*/ports #f (current-output-port) (current-error-port)
                  "/bin/grep" "foo")
should return an output port that goes into the process's stdin, but
instead we get an input port from it (which should be #f).

Also,
  (define g (process* "/bin/grep" "foo"))
should be the same as
  (define g (process*/ports #f #f #f "/bin/grep" "foo"))
but after the latter, evaluate (fprintf (cadr g) "foooo~%") and you get a
broken pipe error, hit C-d and C-c and you get a segfault

The same problem happens when process/ports is used, and it seems that
process and process* are still fine.  My guess is that there is some
confusion in the huge process function, but I couldn't trace it.

BTW, the source uses a `synchonous' variable name  (But I'm not a native
English speaker...)

>How-To-Repeat:
One was described above:
  (define g (process*/ports #f #f #f "/bin/grep" "foo"))
  (fprintf (cadr g) "foooo~%")
  C-d
  C-c

>Fix:

>Audit-Trail:

From: Matthew Flatt <mflatt@cs.utah.edu>
To: eli@cs.cornell.edu
Cc: plt-gnats@cs.rice.edu
Subject: Re: all/1584: process[*]/ports problem with ports 
Date: Tue, 25 Jul 2000 11:51:50 -0600 (MDT)

 Quoting eli@cs.cornell.edu:
 > The same problem happens when process/ports is used, and it seems that
 > process and process* are still fine.  My guess is that there is some
 > confusion in the huge process function, but I couldn't trace it.
 
 The confusion all had to do with "in" versus "out". In particular, the
 arguments to process[*]/ports were in the wrong order, and that set me
 up for further confusion. To match the output, the process's output
 port should come first.
 
 I didn't notice the bug because my crappy test only tried setting both.
 :(
 
 > Also,
 >  (define g (process* "/bin/grep" "foo"))
 > should be the same as
 >  (define g (process*/ports #f #f #f "/bin/grep" "foo"))
 > but after the latter, evaluate (fprintf (cadr g) "foooo~%") and you get a
 > broken pipe error, hit C-d and C-c and you get a segfault
 
 More crappy testing (tried `process' and not `process*').
 
 > BTW, the source uses a `synchonous' variable name  (But I'm not a native
 > English speaker...)
 
 When I consistently mistype a name, sometimes it seems best to leave it
 misspelled.
 
 I've committed and exp-tagged a new port.c. You may want to wait until
 I've written a responsible test suite, though.
 
 Matthew
 

From: Matthew Flatt <mflatt@cs.utah.edu>
To: eli@cs.cornell.edu
Cc: plt-gnats@cs.rice.edu
Subject: Re: all/1584: process[*]/ports problem with ports 
Date: Tue, 25 Jul 2000 12:42:30 -0600 (MDT)

 Oops - I moved the exp tag back to version 1.187 for port.c. I just
 realized that reversing the arguments could break a working program, so
 I shouldn't exp-tag the fix until the next version number.
 
 If you want to use the new port.c, you can use cvs update -r 1.188, of
 course.
 
 Matthew

Responsible-Changed-From-To: steck->mflatt
Responsible-Changed-By: mflatt
Responsible-Changed-When: Wed Jul 26 14:55:56 2000
Responsible-Changed-Why:

State-Changed-From-To: open-closed
State-Changed-By: mflatt
State-Changed-When: Mon Sep  4 12:31:56 2000
State-Changed-Why:
Test suite implemented.

 
>Unformatted:
