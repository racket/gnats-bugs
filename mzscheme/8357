From apache@plt-scheme.org Mon Oct 30 16:55:37 2006
Received: from py-out-1112.google.com (py-out-1112.google.com [64.233.166.176])
	by champlain.ccs.neu.edu (8.13.7/8.13.7) with ESMTP id k9ULtVY9001510
	for <bugs@bugs.plt-scheme.org>; Mon, 30 Oct 2006 16:55:32 -0500
Message-Id: <200610302155.k9ULtV1p001504@champlain.ccs.neu.edu>
Date: Mon, 30 Oct 2006 16:55:31 -0500
From: dvanhorn@cs.brandeis.edu
To: bugs@plt-scheme.org
Subject: boundmap documentation bug

>Number:         8357
>Category:       mzscheme
>Synopsis:       boundmap documentation bug
>Class:          doc-bug
>Responsible:    mflatt
>Severity:       non-critical
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Mon Oct 30 17:00:01 -0500 2006
>Closed-Date:    Mon Jan 17 17:47:58 -0500 2011
>Last-Modified:  Mon Jan 17 17:47:58 -0500 2011
>Originator:     David Van Horn
>Organization:
plt
>Submitter-Id:   unknown
>Release:        350
>Environment:
macosx "Darwin dyn-129-64-200-121.wireless-bg.brandeis.edu 8.7.1 Darwin Kernel Version 8.7.1: Wed Jun  7 16:19:56 PDT 2006; root:xnu-792.9.72.obj~2/RELEASE_I386 i386 i386" (i386-macosx) (get-display-depth) = 32
Docs Installed:
(("/Applications/PLT Scheme v350/doc" "r5rs" "mzscheme" "mred" "help" "tour" "drscheme" "srfi" "mzlib" "misclib" "mrlib" "framework" "foreign" "mzc" "tools" "insidemz" "web-server" "swindle" "plot" "release-notes" "t-y-scheme" "tex2page" "beginning" "beginning-abbr" "intermediate" "intermediate-lambda" "advanced" "teachpack" "teachpack-htdc" "profj-beginner" "profj-intermediate" "profj-advanced"))
Collections:
(("/Users/dvanhorn/Library/PLT Scheme/350/collects" ".DS_Store" "closure-calculus" "multi-return-calculus") ("/Applications/PLT Scheme v350/collects" "afm" "algol60" "browser" "compiler" "config" "defaults" "drscheme" "DrScheme.init" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "framework" "frtime" "games" "graphics" "help" "hierlist" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher" "make" "mred" "mrlib" "mzlib" "mzscheme" "mztake" "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profj" "profjBoxes" "profjWizard" "r5rs" "setup" "sgl" "slatex" "slib" "slib3a3.zip" "slibinit" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-suite" "tex2page" "texpict" "trace" "version" "web-server" "xml"))
Human Language: english
Teachpack filenames: ()
Computer Language: (("Professional Languages" "PLT" "Textual (MzScheme, includes R5RS)") #6(#t write mixed-fraction-e #f #t debug))
>Description:
In section _boundmap.ss_, under > (make-bound-identifier-mapping):

"The mapping uses `bound-identifier=?' to compare mapping keys, but
   also uses a hash table based on symbol equality to make the mapping
   efficient in the common case (i.e., where the identifiers print
   differently)."

The common case is when the identifiers print the same, not differently.

The bug is duplicated under the > (make-module-identifier-mapping) section.
>How-To-Repeat:
>Fix:
>Audit-Trail:
From: Matthew Flatt <mflatt@cs.utah.edu>
To: dvanhorn@cs.brandeis.edu, bugs@plt-scheme.org
Cc: 
Subject: Re: all/8357: boundmap documentation bug
Date: Tue, 31 Oct 2006 06:11:56 0800

 At Mon, 30 Oct 2006 17:00:01 -0500, dvanhorn@cs.brandeis.edu wrote:
 > In section _boundmap.ss_, under > (make-bound-identifier-mapping):
 > 
 > "The mapping uses `bound-identifier=?' to compare mapping keys, but
 >    also uses a hash table based on symbol equality to make the mapping
 >    efficient in the common case (i.e., where the identifiers print
 >    differently)."
 > 
 > The common case is when the identifiers print the same, not differently.
 
 I still think "different" is the common case, but that depends on many
 poor uses of terminology. So, I changed the text to
 
    The mapping uses `bound-identifier=?' to compare mapping keys, but
    also uses a hash table based on symbol equality to make the mapping
    efficient in the common case (i.e., where non-equivalent identifiers
    are derived from different symbolic names).
 
 and
 
    The mapping uses `module-identifier=?' to compare mapping
    keys, but also uses a hash table based on symbol equality
    to make the mapping efficient in the common case (i.e., where
    non-equivalent identifiers are derived from different symbolic
    names at their definition sites).
 
 Is that an improvement?
 
 Thanks,
 Matthew
 
From: Sam TH <samth@ccs.neu.edu>
To: dvanhorn@cs.brandeis.edu, bugs@plt-scheme.org
Cc: 
Subject: Re: all/8357: boundmap documentation bug
Date: Mon, 30 Oct 2006 17:18:57 -0500

 On Mon, 2006-10-30 at 17:00 -0500, dvanhorn@cs.brandeis.edu wrote:
 > A new problem report is waiting at
 >   http://bugs.plt-scheme.org/query/?cmd=view&pr=8357
 > 
 > Reported by David Van Horn for release: 350
 > 
 > *** Description:
 > In section _boundmap.ss_, under > (make-bound-identifier-mapping):
 > 
 > "The mapping uses `bound-identifier=?' to compare mapping keys, but
 >    also uses a hash table based on symbol equality to make the mapping
 >    efficient in the common case (i.e., where the identifiers print
 >    differently)."
 > 
 > The common case is when the identifiers print the same, not differently.
 > 
 > The bug is duplicated under the > (make-module-identifier-mapping) section.
 
 The common case is that a number of different identifiers are used, but
 all of them print differently (that is, they have different symbolic
 names, as well as potentially-different binding information).  In this
 case, an eq? hash table is faster.  
 
 The case where they print the same only occurs when two different
 identifiers with the same symbolic name are used, for example if two
 modules both provide a definition of `f'.
 
From: David Van Horn <dvanhorn@cs.brandeis.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: bugs@plt-scheme.org
Subject: Re: all/8357: boundmap documentation bug
Date: Mon, 30 Oct 2006 17:37:29 -0500

 Matthew Flatt wrote:
 > At Mon, 30 Oct 2006 17:00:01 -0500, dvanhorn@cs.brandeis.edu wrote:
 >> In section _boundmap.ss_, under > (make-bound-identifier-mapping):
 >>
 >> "The mapping uses `bound-identifier=?' to compare mapping keys, but
 >>    also uses a hash table based on symbol equality to make the mapping
 >>    efficient in the common case (i.e., where the identifiers print
 >>    differently)."
 >>
 >> The common case is when the identifiers print the same, not differently.
 > 
 > I still think "different" is the common case, but that depends on many
 > poor uses of terminology. So, I changed the text to
 > 
 >    The mapping uses `bound-identifier=?' to compare mapping keys, but
 >    also uses a hash table based on symbol equality to make the mapping
 >    efficient in the common case (i.e., where non-equivalent identifiers
 >    are derived from different symbolic names).
 > 
 > and
 > 
 >    The mapping uses `module-identifier=?' to compare mapping
 >    keys, but also uses a hash table based on symbol equality
 >    to make the mapping efficient in the common case (i.e., where
 >    non-equivalent identifiers are derived from different symbolic
 >    names at their definition sites).
 > 
 > Is that an improvement?
 
 I see, I misunderstood the first time around.  Yes, this is an 
 improvement, but still a bit confusing for me.  The sentence shifts from 
 the notion of equality (*-identifer=?) to the notion of inequality and 
 the common case of inequality (different symbolic names) without a clear 
 marker-- or at least not clear to me.
 
 David
 

Responsible changed from "nobody" to "mflatt" by eli at Tue, 31 Oct 2006 16:32:40 -0500
Reason>>> (probably to close)


State changed from "open" to "closed" by eli at Mon, 17 Jan 2011 17:47:58 -0500
Reason>>> closed as "obsolete" with respect to v5.0.99.6 and later; 
either the bug
is long-since fixed, the relevant code doesn't exist 
anymore, the
relevant platform hasn't been supported recently, or a new 
bug report is
needed if the problem really isn't fixed and someone 
actually cares

