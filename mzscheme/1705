From steck@cs.rice.edu  Wed Oct 11 15:35:38 2000
Received: from localhost (sun.cs.rice.edu [128.42.1.42])
	by cs.rice.edu (8.9.0/8.9.0) with ESMTP id PAA03066
	for <plt-gnats>; Wed, 11 Oct 2000 15:35:37 -0500 (CDT)
Message-Id: <200010112035.PAA03066@cs.rice.edu>
Date: Wed, 11 Oct 2000 15:35:37 -0500 (CDT)
From: steck@cs.rice.edu
To: plt-gnats@cs.rice.edu
Subject: void procedure misnamed

>Number:         1705
>Category:       mzscheme
>Synopsis:       void procedure misnamed
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       non-critical
>Priority:       low
>State:          closed
>Confidential:   no
>Arrival-Date:   Wed Oct 11 16:45:04 -0400 2000
>Closed-Date:    Fri Dec 02 15:22:55 -0500 2011
>Last-Modified:  Fri Dec 02 15:22:55 -0500 2011
>Originator:     Paul Steckler
>Organization:
titan
>Submitter-Id:   unknown
>Release:        103.1d100
>Environment:
unix (sparc-solaris) (get-display-depth) = 24
Tools: ("CVS" "analysis" "debug" "syncheck" "unit-bundle" "project-manager" "typeset")
Docs Installed:
("index.html" "docindex.html" "doctable.html" "tools" "m3" "mzc" "teachpack" "mrspidey" "r5rs" "framework" "old" "help" "misclib" "drfaq" "drscheme" "icons" ".htaccess" "insidemz" "logo.gif" ".htaccess~" "match" "mred" "mzscheme" "old-logo.gif" "advanced" "beginning" "intermediate" "doc")
Collections:
(("/home/scheme/plt/collects" ("CVS" "browser" "afm" "mzcom" "compiler" "countdwn" "drscheme" "graphics" "guibuilder" "stepper" "hierlist" "icons" "make" "mrdemo" "mrspidey" "mzlib" "drjava" "mred" "games" "mzscheme" "net" "quasiquote" "help" "texpict" "zodiac" "userspce" "hierarchy" "dynext" "readline" "launcher" "drscheme-jr" "errortrace" "doc" "mysterx" "framework" "slatex" "slibinit" "srpersist" "xml" "tests" "htdp" "typeset" "setup" "html" "defaults" "guserspce" "browser2" "stepper-graphical")))
>Description:
I believe the MzScheme void procedure is misnamed.
In any case, I've always found it confusing.

We have the curiosity

  (void? void) => #f

but

  (void? (void) => #t

In the MzScheme library, scheme_void 
does not denote void, instead it denotes
the result of (void).

Do we really need the void procedure?  If we 
had a constant for the result of (void), call it
void-value, we could always write (lambda _ void-value)

Scanning through the MzLib collection, it looks like
void is most often used either

  - as (void)
  - as an always-succeeds predicate in with-handlers

So the former could be replaced with void-value (which
really ought to be called void), and the latter is
an obfuscated way of writing (lambda (exn) #t).

>How-To-Repeat:
>Fix:
>Audit-Trail:
From: Matthew Flatt <mflatt@cs.utah.edu>
To: steck@cs.rice.edu
Cc: plt-gnats@cs.rice.edu
Subject: Re: all/1705: void procedure misnamed
Date: Wed, 11 Oct 2000 14:50:52 -0600 (MDT)

 Quoting steck@cs.rice.edu:
 > I believe the MzScheme void procedure is misnamed.
 
 The name and semantics comes from Chez, originally.
 
 > If we had a constant for the result of (void), call it void-value, we
 > could always write (lambda _ void-value)
 
 And waste all those poor cons cells?!
 
 > Scanning through the MzLib collection, it looks like
 > void is most often used either
 > 
 >   - as (void)
 >   - as an always-succeeds predicate in with-handlers
 
 The latter should almost always be replaced with `not-break-exn?'.
 
 Also, I often use `void' as a trivial GUI callback when testing.
 
 Actually, I agree with most all of your comments. Still, I really,
 really don't want to change at this point.
 
 Matthew
 

From: "Paul A. Steckler" <steck@cs.rice.edu>
To: "Matthew Flatt" <mflatt@cs.utah.edu>
Cc: <plt-gnats@cs.rice.edu>
Subject: Re: all/1705: void procedure misnamed
Date: Wed, 11 Oct 2000 16:15:25 -0500

 >Actually, I agree with most all of your comments. Still, I really,
 >really don't want to change at this point.
 
 Yes, well I got tired of working on a paper, and just needed 
 to vent.  Just happens that void was the target. :-)
 
 But I'll keep the PR open just in case you change your mind.
 
 -- Paul

Responsible-Changed-From-To: steck->mflatt
Responsible-Changed-By: mflatt
Responsible-Changed-When: Tue Oct 31 16:14:38 2000
Responsible-Changed-Why:

State-Changed-From-To: open-suspended
State-Changed-By: mflatt
State-Changed-When: Tue Oct 31 16:14:40 2000
State-Changed-Why:


 
State changed from "suspended" to "closed" by samth at Fri, 02 Dec 2011 15:22:55 -0500
Reason>>> mind not changed in the last 10 years

>Unformatted:
