From apache@plt-scheme.org Mon Oct  3 16:17:53 2005
Received: from champlain.ccs.neu.edu (champlain.ccs.neu.edu [127.0.0.1])
	by champlain.ccs.neu.edu (8.12.10/8.12.10) with ESMTP id j93KHjZS032201
	for <bugs@plt-scheme.org>; Mon, 3 Oct 2005 16:17:45 -0400
Message-Id: <200510032017.j93KHjeZ032199@champlain.ccs.neu.edu>
Date: Mon, 3 Oct 2005 16:17:45 -0400
From: jepri@babylon.alphacomplex.org
To: bugs@plt-scheme.org
Subject: TCP ports appear to be write buffered?

>Number:         7614
>Category:       mzscheme
>Synopsis:       TCP ports appear to be write buffered?
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Mon Oct 03 16:20:00 -0400 2005
>Last-Modified:  Tue Oct 04 01:23:27 -0400 2005
>Originator:     Jeremy
>Organization:
plt
>Submitter-Id:   unknown
>Release:        299.400
>Environment:
windows-xp
>Description:
After upgrading to 299.400 my network programs appeared to stop working.  After making some test cases it seems like tcp-accept is now returning TCP ports that are buffered.  Writes to output ports are now delayed an indefinate amount of time, or until the buffer fills.

The included program demonstrates the issue, it should print "Message from server", but doesn't.

Uncomment the 
;(file-stream-buffer-mode 
command to see it work.

This might be a problem with my particular installation (sorry I can't test others right now).  If it is intended to work this way then please update the documentation on ports to reflect the change, since it will probably confuse a lot of programmers.
>How-To-Repeat:
(define write-it (lambda (outp)
                   (display "Message from server" outp)(newline outp)))

(define server (lambda ()
                 (let ((listener (tcp-listen 3000 1 #t)))
                   (display "Listener created")(newline)
                   (let-values (((inp outp) (tcp-accept listener)))
                     (display "connection accepted")(newline)
                     ; Uncomment the next line to make it work
                     ; (file-stream-buffer-mode outp 'none)
                     (write-it outp)))))

(define  readit (lambda ( inp )
                  (display (read-char inp))
                  (readit inp)))

(define client (lambda ()
                 (let-values (((inp outp) (tcp-connect  "127.0.0.1" 3000)))
                   (display "Opened connection to server")(newline)
                   (readit inp))))

(thread server)
(sleep 2)
(thread client)
>Fix:
>Audit-Trail:
From: Matthew Flatt <mflatt@cs.utah.edu>
To: jepri@babylon.alphacomplex.org, bugs@plt-scheme.org
Cc: 
Subject: Re: all/7614: TCP ports appear to be write buffered?
Date: Mon, 3 Oct 2005 14:23:56 -0600

 At Mon, 3 Oct 2005 16:20:11 -0400, jepri@babylon.alphacomplex.org wrote:
 > After upgrading to 299.400 my network programs appeared to stop
 > working. After making some test cases it seems like tcp-accept is now
 > returning TCP ports that are buffered. Writes to output ports are now
 > delayed an indefinate amount of time, or until the buffer fills.
 
 Yes - this is an intentional change in the 299.X series.
 
 > If it is intended to work this way then please update the
 > documentation on ports to reflect the change, since it will probably
 > confuse a lot of programmers.
 
 Can you point me to the misleading docs? I did update the docs for
 `tcp-connect' and `tcp-accept', for example, but I can easily imagine
 missing something.
 
 There's also a bullet in the release notes (4th bullet in
 plt/notes/mzscheme/MzScheme_300.txt.)
 
 Thanks,
 Matthew
 
From: Jepri <jepri@babylon.alphacomplex.org>
To: bugs@plt-scheme.org, jepri@babylon.alphacomplex.org
Cc: 
Subject: Re: all/7614: TCP ports appear to be write buffered?
Date: Sun, 13 Mar 2005 07:42:59 +1100

 I'm sorry, my tired eyes did indeed skip over the important line in 11.4:
 
 "Initially, the returned input port is block-buffered, and the returned 
 output port is block-buffered. Change the buffer mode using 
 file-stream-buffer-mode (see section 11.1.6)."
 
 That'll teach me not to submit bug reports late at night.  Sorry for the 
 bother.

State changed from "open" to "closed" by eli at Tue, 04 Oct 2005 01:23:27 -0400
Reason>>> not a bug

