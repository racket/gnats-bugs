From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Tue Sep 27 05:02:48 2011
Received: from mail-gy0-f172.google.com (mail-gy0-f172.google.com [209.85.160.172])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id p8R92eNU001202
	for <bugs@bugs.plt-scheme.org>; Tue, 27 Sep 2011 05:02:40 -0400
Message-Id: <201109270902.p8R92Xc7001129@champlain.ccs.neu.edu>
Date: Tue, 27 Sep 2011 05:02:33 -0400
From: ryanc@racket-lang.org
To: bugs@racket-lang.org
Subject: struct-out error on struct name imported along two paths

>Number:         12233
>Category:       mzscheme
>Synopsis:       struct-out error on struct name imported along two paths
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Tue Sep 27 05:04:01 -0400 2011
>Last-Modified:  Wed Oct 12 11:01:09 -0400 2011
>Originator:     Ryan Culpepper
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.1.3.10--2011-09-26(fd9a3e3/g)
>Environment:
unix "Linux artichoke 2.6.38-11-generic #48-Ubuntu SMP Fri Jul 29 19:02:55 UTC 2011 x86_64 x86_64 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 217971240
Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()


Collections:
("/home/ryan/.racket/5.1.3.10/collects"
 (non-existent-path))
("/home/ryan/projects/racket/collects"
 (".gitignore" "slideshow" "config" "lang" "mrlib" "teachpack" "version" "dynext" "eopl" "trace" "racklog" "r6rs" "tex2page" "games" "rackunit" "guibuilder" "srfi" "schemeunit" "drracket" "picturing-programs" "typed" "string-constants" "datalog" "xrepl" "algol60" "compiler" "sirmail" "unstable" "combinator-parser" "deinprogramm" "file" "texpict" "gui-debugger" "handin-server" "2htdp" "openssl" "scheme" "r5rs" "icons" "lazy" "mzcom" "mzlib" "readline" "typed-racket" "browser" "web-server" "make" "mysterx" "info-domain" "embedded-gui" "data" "preprocessor" "help" "test-engine" "planet" "handin-client" "slatex" "repo-time-stamp" "sgl" "s-exp" "typed-scheme" "frtime" "stepper" "at-exp" "redex" "plai" "test-box-recovery" "htdp" "xml" "setup" "swindle" "raco" "macro-debugger" "mred" "srpersist" "parser-tools" "graphics" "hierlist" "net" "scriblib" "syntax-color" "plot" "defaults" "errortrace" "reader" "meta" "tests" "launcher" "framework" "ffi" "profile" "afm" "drscheme" "scribble!
 " "waterworld" "scribblings" "html" "racket" "wxme" "mzscheme" "honu" "syntax" "db" "rnrs"))

Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t none) (default) #() "#lang racket\n" #f #t))
>Description:
The struct-out form raises an error on a struct type name if that struct type name is imported into the enclosing module by two different requires (but both refer to the same struct definition, so the requires succeed). It should succeed instead, since it is possible to re-provide a single name imported by two different requires.
>How-To-Repeat:
The following set of modules triggers the error:

(module a racket/base (struct s (x y)) (provide (struct-out s)))
(module b racket/base (require 'a) (provide (struct-out s)))
(module c racket/base (require 'a 'b) (provide (struct-out s)))

=> readline-input::173: struct-out: multiple bindings (s and s) for structure-type identifier at: s in: (struct-out s)

In contrast, if (provide (struct-out s)) is replaced with (provide s), there is no error. That suggests to me that struct-out is being overly picky.
>Fix:
