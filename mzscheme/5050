From nobody@champlain.ccs.neu.edu  Mon Nov 26 07:32:14 2001
Received: (from nobody@localhost)
	by champlain.ccs.neu.edu (8.9.3/8.8.7) id HAA11938
	for bugs@plt-scheme.org; Mon, 26 Nov 2001 07:32:14 -0500
Message-Id: <200111261232.HAA11938@champlain.ccs.neu.edu>
Date: Mon, 26 Nov 2001 07:32:14 -0500
From: Christian.Schuhegger@cern.ch
Reply-To:
To: bugs@plt-scheme.org
Cc:
Subject: embedding mzscheme in a visual c++ multithreaded dll project on win2k does not work

>Number:         5050
>Category:       mzscheme
>Synopsis:       embedding mzscheme in a visual c++ multithreaded dll project on win2k does not work
>Confidential:   no
>Severity:       serious
>Priority:       high
>Responsible:    mflatt
>State:          closed
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Mon Nov 26 07:40:01 EST 2001
>Closed-Date:    Tue Dec 11 08:28:21 EST 2001
>Last-Modified:  Tue Dec 11 08:28:21 EST 2001
>Originator:     Christian Schuhegger
>Release:        103p1
>Organization:
plt
>Environment:
windows-2000
>Description:
when i try to embedding mzscheme in a visual c++ multithreaded dll project 
on win2k i get an access violation in the function:
ptr_t GC_generic_malloc_inner(lb, k)

i use the main as given in the inside plt mzscheme manual:
http://www.cs.rice.edu/CS/PLT/packages/doc/insidemz/node6.htm

the code works in a normal multithread visual c++ project.

i tried already to copy the visual c++ project
plt\src\worksp\mzscheme,
set the active project configuration to: "win32 mt dll"
and replace the main of the main.c with the main in the example given 
above. this was to make sure that i use the correct preprocessor defines
and the correct libraries to link to, but the problem still persists.

i think this is strange because the mzscheme executable builds fine in the
"win32 mt dll" configuration.

by the way, i found no way to download MzScheme 200alpha1 as proposed
above.

many thanks for any comments!

>How-To-Repeat:
use the main given in the example:

#include "scheme.h"
int main(int argc, char *argv[])
{
  Scheme_Env *e = scheme_basic_env();
  Scheme_Object *curout = scheme_get_param(scheme_config, MZCONFIG_OUTPUT_PORT);
  int i;
  for (i = 1; i < argc; i++) {
    if (scheme_setjmp(scheme_error_buf)) {
      return -1; /* There was an error */
    } else {
      Scheme_Object *v = scheme_eval_string(argv[i], e);
      scheme_display(v, curout);
      scheme_display(scheme_make_character('\n'), curout);
    }
  }
  return 0;
}

and use the "win32 mt dll" configuration.

>Fix:

>Release-Note:

>Audit-Trail:
Responsible-Changed-From-To: steck->mflatt
Responsible-Changed-By: mflatt
Responsible-Changed-When: Tue Dec 11 08:28:20 2001
Responsible-Changed-Why:
    im
State-Changed-From-To: open->closed
State-Changed-By: mflatt
State-Changed-When: Tue Dec 11 08:28:20 2001
State-Changed-Why:
    addressed via plt-scheme
>Unformatted:

