From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Thu May 21 12:14:18 2009
Received: from qw-out-2122.google.com (qw-out-2122.google.com [74.125.92.25])
	by champlain.ccs.neu.edu (8.14.2/8.14.2) with ESMTP id n4LGE9B5019674
	for <bugs@bugs.plt-scheme.org>; Thu, 21 May 2009 12:14:09 -0400
Message-Id: <200905211613.n4LGDw9n019665@champlain.ccs.neu.edu>
Date: Thu, 21 May 2009 12:13:58 -0400
From: matthias@ccs.neu.edu
To: bugs@plt-scheme.org
Subject: scheme/signature and scheme/unit should be module languages 

>Number:         10251
>Category:       mzscheme
>Synopsis:       scheme/signature and scheme/unit should be module languages
>Class:          change-request
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Thu May 21 12:16:01 -0400 2009
>Last-Modified:  Sat Dec 03 11:41:41 -0500 2011
>Originator:     matthias
>Organization:
plt
>Submitter-Id:   unknown
>Release:        4.2.0.2-svn19may2009
>Environment:
macosx "Darwin antarctica.local 8.11.1 Darwin Kernel Version 8.11.1: Wed Oct 10 18:23:28 PDT 2007; root:xnu-792.25.20~1/RELEASE_I386 i386 i386" (i386-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 134114932

Collections:
(("/Users/matthias/0Unison/collects/" ".DS_Store" "compiled" "date" "finance" "info-domain" "info.ss" "short" "testing" "tll-collects" "utils" "web") ("/Users/matthias/Library/PLT Scheme/4.2.0.2/collects" non-existent-path) ("/Users/matthias/plt/collects" ".DS_Store" ".svn" "2htdp" "afm" "algol60" "at-exp" "big" "browser" "combinator-parser" "compiler" "config" "defaults" "deinprogramm" "doc" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu" "honu-module" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "little-helper" "macro-debugger" "make" "mred" "mrflow" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "mztake" "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profile" "profj" "profjBoxes" "profjWizard" "r5rs" "r6rs" "readline" "redex" "repos-time-stamp" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" !
 "scribblings" "scriblib" "setup" "sgl" "sirmail" "skipper" "slatex" "slibinit" "slideshow" "srfi" "srpersist" "stepper" "string-constants" "stxclass" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "test-suite" "tests" "tex2page" "texpict" "trace" "typed" "typed-scheme" "version" "waterworld" "web-server" "wxme" "xml"))
Computer Language: (("Module") (#(#t write mixed-fraction-e #f #t debug) (default) #() "#lang scheme\n" #t))
>Description:
I'd like to be able to experiment with units like this: 

#lang scheme/load 

(module s scheme/signature/lang 
  p?
  newp
  #; (contracted (newp (-> any/c p?))))

(module u scheme/unit/lang
  (require 's)
  (import)
  (export s^)
  (define-struct p ())
  (define (newp x)
    (printf "~s\n" x)
    (make-p)))

(module v scheme/unit/lang
  (require 's)
  (import s^)
  (export)
  (newp 10))

(module c scheme
  (require 's 'u 'v)
  
  (define-signature g^ ((contracted (f (-> number? number?)))))

  (invoke-unit
   (compound-unit 
     (import) (export)
     (link (((U : s^)) u@)
           (() v@ U)))))

(require 'c)

but without having to switch language names between #lang scheme/signature and scheme/signature/lang etc. 
>How-To-Repeat:
>Fix:
