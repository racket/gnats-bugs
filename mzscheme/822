From nobody@cs.rice.edu  Wed Oct 21 14:55:39 1998
Received: from web.cs.rice.edu (web.cs.rice.edu [128.42.1.163])
	by cs.rice.edu (8.9.0/8.9.0) with ESMTP id OAA20905
	for <plt-gnats@cs.rice.edu>; Wed, 21 Oct 1998 14:55:38 -0500 (CDT)
Message-Id: <199810211955.OAA09088@web.cs.rice.edu>
Date: Wed, 21 Oct 1998 14:55:37 -0500 (CDT)
From: ptg@rice.edu
Reply-To: ptg@rice.edu
To: plt-gnats@cs.rice.edu
Subject: char-ready? fails on closing input ports. 

>Number:         822
>Category:       mzscheme
>Synopsis:       char-ready? fails on closing input ports.
>Confidential:   no
>Severity:       serious
>Priority:       medium
>Responsible:    mflatt
>State:          closed
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Wed Oct 21 20:00:01 GMT 1998
>Last-Modified:  Fri Dec 11 20:22:13 CST 1998
>Originator:     Paul Graunke
>Organization:
titan
>Release:        53
>Environment:
Solaris
>Description:
In the program I care about, I close an input file port.  Then this
blank box the size and shape of an internal error box pops up and hangs
Dr Scheme.  On the console I get this:

char-ready?: input port is closed
error trying to display error: exception raised: char-ready?: input port is closed

In my poem program, The box actualy says, "char-ready?: input port is closed,"
but I get the same error message on the console.  Dr. hangs after I
click the okay button, which isn't present when my actual program runs.
>How-To-Repeat:
Start DrScheme.
antarctica:ptg$ mkfifo foo
antarctica:ptg$ cat > foo
Don't type anything into the cat.
In the repl run
(define in (open-input-file "foo"))
(define t1 (thread (lambda () (read in))))
(close-input-port in)
Notice the Internal Error box pop up.
See the message on the console.
Kill DrScheme, which is now hung.

>Fix:

>Audit-Trail:

From: Matthew Flatt <mflatt@cs.rice.edu>
To: ptg@rice.edu
Cc: plt-gnats@cs.rice.edu, robby@cs.rice.edu
Subject: Re: all/822: char-ready? fails on closing input ports. 
Date: Wed, 21 Oct 1998 15:13:08 -0500 (CDT)

 Quoting ptg@rice.edu:
 > >How-To-Repeat:
 > Start DrScheme.
 > antarctica:ptg$ mkfifo foo
 > antarctica:ptg$ cat > foo
 > Don't type anything into the cat.
 > In the repl run
 > (define in (open-input-file "foo"))
 > (define t1 (thread (lambda () (read in))))
 > (close-input-port in)
 > Notice the Internal Error box pop up.
 > See the message on the console.
 > Kill DrScheme, which is now hung.
 
 This might already be fixed for DrScheme 100. MzScheme 53 didn't
 correctly handle un-blocking a thread that was blocked on a port that
 was meanwhile closed by another thread. The problem was fixed in
 MzScheme 100/3 or so.
 
 Obviously, DrScheme 100 isn't running, yet, but you can see the
 difference by running in following in MzScheme 53 and 100:
 
  (define-values (in out) (make-pipe))
  (thread (lambda () (read in)))
  (close-input-port in)
 
 MzScheme 53 displays "char-ready?: input port is closed" a bunch of
 times (perhaps 50), then displays "error trying to escape from error"
 a few times (perhaps 3) and finally exits in exasperation. MzScheme
 100 prints "char-ready?: input port is closed" just once and lets the
 REPL continue.
 
 Matthew

Responsible-Changed-From-To: steck->mflatt
Responsible-Changed-By: mflatt
Responsible-Changed-When: Wed Nov  4 15:17:06 1998
Responsible-Changed-Why:

State-Changed-From-To: open-closed
State-Changed-By: mflatt
State-Changed-When: Fri Dec 11 20:21:55 1998
State-Changed-Why:

I'm rather certain that this is fixed, since a bug was clearly in
MzScheme.

>Unformatted:
