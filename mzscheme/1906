From matthias@cs.rice.edu  Wed Mar 21 17:19:27 2001
Received: from localhost (europa.rice.edu [192.225.19.49])
	by cs.rice.edu (8.9.0/8.9.0) with ESMTP id RAA09517
	for <plt-gnats>; Wed, 21 Mar 2001 17:19:26 -0600 (CST)
Message-Id: <200103212319.RAA09517@cs.rice.edu>
Date: Wed, 21 Mar 2001 17:19:26 -0600 (CST)
From: matthias@cs.rice.edu
To: plt-gnats@cs.rice.edu
Subject: infinite loop within apply breaks drs

>Number:         1906
>Category:       mzscheme
>Synopsis:       infinite loop within apply breaks drs
>Confidential:   no
>Severity:       serious
>Priority:       medium
>Responsible:    mflatt
>State:          closed
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Wed Mar 21 23:30:04 GMT 2001
>Last-Modified:  Mon Mar 26 10:31:01 CST 2001
>Originator:     matthias
>Organization:
titan
>Release:        103
>Environment:
unix (i386-linux) (get-display-depth) = 16
Tools: ("CVS" "analysis" "debug" "syncheck" "mail" "project-manager" "unit-bundle")
Docs Installed:
("help" "r5rs" "mzscheme" "mred" "drscheme" "misclib" "framework" "mzc" "index.html" "icons" "teach" "teachpack" "tools" "mrspidey" "beginning" "advanced" "intermediate")
Collections:
(("/home/scheme/plt/collects" ("CVS" "afm" "backward" "browser" "xml" "compiler" "countdwn" "drscheme" "drscheme-jr" "dynext" "errortrace" "framework" "games" "graphics" "guibuilder" "gusrspce" "help" "helpdoc" "hierarchy" "hierlist" "icons" "launcher" "make" "mrdemo" "mred" "mrspidey" "mysterx" "mzdynext" "mzlib" "mzos" "mzscheme" "net" "quasiquote" "readline" "slatex" "stepper" "system" "test" "tests" "texpict" "userspce" "zodiac" "doc" "drjava" "release-notes" "htdp" "setup" "defaults" "guserspce" "stepper-graphical")))
>Description:
Evaluate: 

(define ones (cons 1 1))
(set-cdr! ones ones)
(apply + ones)

DrScheme freezes. 
>How-To-Repeat:
s/a
>Fix:
>Audit-Trail:

From: Robert Bruce Findler <robby@cs.rice.edu>
To: mflatt@cs.utah.edu
Cc: plt-gnats@cs.rice.edu
Subject: Re: all/1906: infinite loop within apply breaks drs
Date: Fri, 23 Mar 2001 11:19:19 -0600

 I suspect that this is a problem with mzscheme. This code:
 
 (let ()
    (define ones (cons 1 1))
    (define s (make-semaphore 0))
    (define t (thread (lambda ()
                        (with-handlers ([(lambda (x) #t)
                                         (lambda (x)
                                           (printf "broken~n"))])
                          (set-cdr! ones ones)
                          (semaphore-post s)
                          (apply + ones)))))
    (semaphore-wait s)
    (sleep 1/2)
    (break-thread t))
 
 
 when run in raw mzscheme never prints broken.
 
 Robby

From: Matthew Flatt <mflatt@cs.utah.edu>
To: Robert Bruce Findler <robby@cs.rice.edu>
Cc: plt-gnats@cs.rice.edu
Subject: Re: all/1906: infinite loop within apply breaks drs
Date: Fri, 23 Mar 2001 10:23:08 -0700 (MST)

 Quoting Robert Bruce Findler:
 > I suspect that this is a problem with mzscheme.
 
 Yes, it's a problem with `apply' that will be fixed in today's 199.6
 release.
 
 Matthew
 

From: Robert Bruce Findler <robby@cs.rice.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: plt-gnats@cs.rice.edu
Subject: Re: all/1906: infinite loop within apply breaks drs
Date: Fri, 23 Mar 2001 11:23:48 -0600

 At 10:23 AM -0700 3/23/01, Matthew Flatt wrote:
 >Quoting Robert Bruce Findler:
 >>  I suspect that this is a problem with mzscheme.
 >
 >Yes, it's a problem with `apply' that will be fixed in today's 199.6
 >release.
 
 Yeah, I meant to put "apply" in my message :)
 
 Robby

Responsible-Changed-From-To: steck->mflatt
Responsible-Changed-By: mflatt
Responsible-Changed-When: Mon Mar 26 10:30:54 2001
Responsible-Changed-Why:

State-Changed-From-To: open-closed
State-Changed-By: mflatt
State-Changed-When: Mon Mar 26 10:30:56 2001
State-Changed-Why:
Fixed in 199.6.

>Unformatted:
