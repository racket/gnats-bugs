From apache@plt-scheme.org Mon Dec 26 17:23:08 2005
Received: from champlain.ccs.neu.edu (champlain.ccs.neu.edu [127.0.0.1])
	by champlain.ccs.neu.edu (8.12.10/8.12.10) with ESMTP id jBQMN5aE024348
	for <bugs@plt-scheme.org>; Mon, 26 Dec 2005 17:23:05 -0500
Message-Id: <200512262223.jBQMN57o024346@champlain.ccs.neu.edu>
Date: Mon, 26 Dec 2005 17:23:05 -0500
From: jensaxel@soegaard.net
To: bugs@plt-scheme.org
Subject: LET-VALUES doesn't handle arbitrary many values

>Number:         7781
>Category:       mzscheme
>Synopsis:       LET-VALUES doesn't handle arbitrary many values
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Mon Dec 26 17:25:00 -0500 2005
>Closed-Date:    Wed Aug 31 13:24:59 -0400 2011
>Last-Modified:  Wed Aug 31 13:24:59 -0400 2011
>Originator:     Jens Axel SÃ¸gaard
>Organization:
plt
>Submitter-Id:   unknown
>Release:        300
>Environment:
windows "Windows NT 5.1 (Build 2600) Service Pack 2" (win32\i386) (get-display-depth) = 32
Docs Installed:
(#<path:C:\Programmer\PLT\collects\doc\web-server> #<path:C:\Programmer\PLT\collects\doc\tour> #<path:C:\Programmer\PLT\collects\doc\tools> #<path:C:\Programmer\PLT\collects\doc\tex2page> #<path:C:\Programmer\PLT\collects\doc\teachpack> #<path:C:\Programmer\PLT\collects\doc\t-y-scheme> #<path:C:\Programmer\PLT\collects\doc\swindle> #<path:C:\Programmer\PLT\collects\doc\srfi> #<path:C:\Programmer\PLT\collects\doc\r5rs> #<path:C:\Programmer\PLT\collects\doc\profj-intermediate> #<path:C:\Programmer\PLT\collects\doc\profj-beginner> #<path:C:\Programmer\PLT\collects\doc\profj-advanced> #<path:C:\Programmer\PLT\collects\doc\plot> #<path:C:\Programmer\PLT\collects\doc\mzscheme> #<path:C:\Programmer\PLT\collects\doc\mzlib> #<path:C:\Programmer\PLT\collects\doc\mzc> #<path:C:\Programmer\PLT\collects\doc\mrlib> #<path:C:\Programmer\PLT\collects\doc\mred> #<path:C:\Programmer\PLT\collects\doc\misclib> #<path:C:\Programmer\PLT\collects\doc\intermediate-lambda> #<path:C:\Programmer\PLT\collects\doc\intermediate> #<path:C:\Programmer\PLT\collects\doc\insidemz> #<path:C:\Programmer\PLT\collects\doc\help> #<path:C:\Programmer\PLT\collects\doc\framework> #<path:C:\Programmer\PLT\collects\doc\foreign> #<path:C:\Programmer\PLT\collects\doc\drscheme> #<path:C:\Programmer\PLT\collects\doc\beginning-abbr> #<path:C:\Programmer\PLT\collects\doc\beginning> #<path:C:\Programmer\PLT\collects\doc\advanced>)
Collections:
((#<path:C:\Documents and Settings\js\Application Data\PLT Scheme\300\collects> "non-existent path") (#<path:C:\Programmer\PLT\collects> (#<path:afm> #<path:algol60> #<path:browser> #<path:compiler> #<path:defaults> #<path:doc> #<path:drscheme> #<path:dynext> #<path:embedded-gui> #<path:eopl> #<path:errortrace> #<path:ffi> #<path:framework> #<path:frtime> #<path:games> #<path:graphics> #<path:help> #<path:hierlist> #<path:htdp> #<path:html> #<path:icons> #<path:info-domain> #<path:lang> #<path:launcher> #<path:make> #<path:mred> #<path:mrlib> #<path:mysterx> #<path:mzcom> #<path:mzlib> #<path:mzscheme> #<path:mztake> #<path:net> #<path:openssl> #<path:parser-tools> #<path:planet> #<path:plot> #<path:preprocessor> #<path:profj> #<path:profjBoxes> #<path:r5rs> #<path:setup> #<path:sgl> #<path:slatex> #<path:slibinit> #<path:slideshow> #<path:srfi> #<path:ssax> #<path:stepper> #<path:string-constants> #<path:swindle> #<path:syntax> #<path:syntax-color> #<path:test-suite> #<path:tex2page> #<path:texpict> #<path:trace> #<path:version> #<path:web-server> #<path:xml>)))
Human Language: danish
Teachpack filenames: ()
Computer Language: (("Professionelle sprog" "PLT" "Temmelig omfattende Scheme (inklusiv MrEd og Avanceret)") #6(#t write mixed-fraction-e #f #t debug))
>Description:
The LET-VALUES specification in srfi-11 requires

  (let-values ([(a b . c) (values 1 2 3 4)])
    c)

to return (3 4).

The LET-VALUES in mzscheme doesn't allow this case:

>  (let-values ([(a b . c) (values 1 2 3 4)])
    c)
let-values: bad syntax in: c
>How-To-Repeat:
>Fix:
>Audit-Trail:
From: =?ISO-8859-1?Q?Jens_Axel_S=F8gaard?= <jensaxel@soegaard.net>
To: bugs@plt-scheme.org
Cc: 
Subject: Re: all/7781: LET-VALUES doesn't handle arbitrary many values
Date: Mon, 26 Dec 2005 23:28:19 +0100

 I forgot to mention why I needed it:
 
   ; get : key finite-map -> (union (values key element) #f)
   (define (get x m)
     (let ([b (set:get (cons x 'ignore) (bindings m))])
       (if b
           (values (key b) (value b))
           #f)))
  
   (define (lookup x m)
     (let-values ([(k . v) (get x m)])
       (if k
           (car v)
           #f)))
 
 


State changed from "open" to "closed" by samth at Wed, 31 Aug 2011 13:24:59 -0400
Reason>>> fixed by 36219c4b93b9a7cb87fc9c5f0118edab2adeab43 for SRFI 11

