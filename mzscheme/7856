From apache@plt-scheme.org Thu Feb  2 02:53:56 2006
Received: from champlain.ccs.neu.edu (champlain.ccs.neu.edu [127.0.0.1])
	by champlain.ccs.neu.edu (8.12.10/8.12.10) with ESMTP id k127rsip019098
	for <bugs@plt-scheme.org>; Thu, 2 Feb 2006 02:53:54 -0500
Message-Id: <200602020753.k127rsuN019096@champlain.ccs.neu.edu>
Date: Thu, 2 Feb 2006 02:53:54 -0500
From: iamphet@nm.ru
To: bugs@plt-scheme.org
Subject: SIGSEGV during installation on ARM

>Number:         7856
>Category:       mzscheme
>Synopsis:       SIGSEGV during installation on ARM
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Thu Feb 02 02:55:01 -0500 2006
>Closed-Date:    Mon Jan 17 17:45:12 -0500 2011
>Last-Modified:  Mon Jan 17 17:45:12 -0500 2011
>Originator:     Sergey Khorev
>Organization:
plt
>Submitter-Id:   unknown
>Release:        301
>Environment:
unix-other
>Description:
./install craches with SIGSEGV on Linux zaurus 2.4.18 armv5tel (pdaXrom) 

GCC 3.4.5

mzscheme configured with --enable-noopt --disable-foreign (because libffi doesn't support ffi closures on ARM)

debugger log follows
----------------------------------------------------------
Starting program: /usr/local/plt/bin/mzscheme -qC install

Program received signal SIGSEGV, Segmentation fault.
0x40089d64 in scheme_equal_hash_key (o=0x1c) at ./hash.c:917
917	  t = SCHEME_TYPE(o);
#0  0x40089d64 in scheme_equal_hash_key (o=0x1c) at ./hash.c:917
#1  0x4008a1c8 in scheme_equal_hash_key (o=0x2373fc) at ./hash.c:985
#2  0x4008a080 in scheme_equal_hash_key (o=0x22e2c0) at ./hash.c:969
#3  0x4008a1c8 in scheme_equal_hash_key (o=0x1e83e0) at ./hash.c:985
#4  0x4008a080 in scheme_equal_hash_key (o=0x261070) at ./hash.c:969
#5  0x40091a24 in make_hash_indices_for_equal (v=0x261070, _stk_h1=0xbfffc6d4, 
    _stk_h2=0xbfffc6d0) at ./list.c:1316
#6  0x40088340 in do_hash (table=0x21cdb0, key=0x261070, set=2, val=0x2eba60)
    at ./hash.c:143
#7  0x4008898c in scheme_hash_set (table=0x21cdb0, key=0x261070, val=0x2eba60)
    at ./hash.c:259
#8  0x40139120 in wraps_to_datum (w_in=0x2eba60, rns=0x21ce70, just_simplify=1)
    at ./stxobj.c:3481
#9  0x4013bbf0 in simplify_syntax_inner (o=0x2ecea0, rns=0x21ce70, marks=0x0)
    at ./stxobj.c:4387
#10 0x4013c250 in scheme_simplify_stx (stx=0x2ecea0, cache=0x21ce70)
    at ./stxobj.c:4500
#11 0x40048bf0 in scheme_resolve_prefix (phase=1, cp=0x22e220, simplify=1)
    at ./env.c:2588
#12 0x400a04e8 in $a () at ./module.c:3906
#13 0x400a04e8 in $a () at ./module.c:3906
Previous frame identical to this frame (corrupt stack?)
----------------------------------------------------------
>How-To-Repeat:
>Fix:
>Audit-Trail:
From: Alexander Shendi <Alexander.Shendi@bawue.de>
To: bugs@plt-scheme.org, mflatt@cs.utah.edu, sk@cs.brown.edu
Cc: Alexander Shendi <Alexander.Shendi@bawue.de>
Subject: Re: mzscheme/7856: SIGSEGV during installation on ARM
Date: Fri, 17 Feb 2006 23:35:35 +0100

 Hello,
 
 I can confirm the build problems on a Sharp Zaurus. However the stack
 trace looks slightly different in my case.
 
 uname -a ==> "Linux zaurus 2.4.20 #1 Tue, 5 Jul 2005 10:25:12 +0900  
 armv5tel unknown"
 Model: Sharp Zaurus SL-C3100, original Sharp ROM
 
 Compiler: GCC 2,95.1
 Configuration: CXXCPP='/usr/bin/gcc -D__cplusplus -E'  sh ./configure \
                             --prefix=/opt/QtPalmtop/bin --disable- 
 foreign --enable-sgc
 
 PLT mzscheme Version 301.5
 
 Requiring any module results in a segmentation violation. The problem
 is taking the SCHEME_TYPE(o), when o is NULL.
 
 Is there anything further I can do further to help?
 
 ------------------ Stack trace follows  
 ----------------------------------------------------------------------
 GNU gdb 5.1.1
 Copyright 2002 Free Software Foundation, Inc.
 GDB is free software, covered by the GNU General Public License, and  
 you are
 welcome to change it and/or distribute copies of it under certain  
 conditions.
 Type "show copying" to see the conditions.
 There is absolutely no warranty for GDB.  Type "show warranty" for  
 details.
 This GDB was configured as "arm-linux"...
 (gdb) run
 Starting program: /usr/mnt.rom/card/sources/plt/src/./mzscheme/mzscheme
 Welcome to MzScheme version 301.5 (sgc), Copyright (c) 2004-2006 PLT  
 Scheme Inc.
  > (require (lib "1.ss" "srfi"))
 Program received signal SIGSEGV, Segmentation fault.
 0x020427d8 in equal_hash_key (o=0x0, k=0) at ./hash.c:924
 924	  t = SCHEME_TYPE(o);
 (gdb) bt
 #0  0x020427d8 in equal_hash_key (o=0x0, k=0) at ./hash.c:924
 #1  0x02042b50 in equal_hash_key (o=0x40314cbc, k=84) at ./hash.c:1002
 #2  0x02042a80 in equal_hash_key (o=0x4035fe98, k=49) at ./hash.c:986
 #3  0x02042f74 in scheme_equal_hash_key (o=0x0) at ./hash.c:1145
 #4  0x02046fc4 in make_hash_indices_for_equal (v=0x4035fe98,
      _stk_h1=0xbfff94e4, _stk_h2=0xbfff94e0) at ./list.c:1314
 #5  0x02041a60 in do_hash (table=0x4034b698, key=0x4035fe98, set=2,
      val=0x4034f8c8) at ./hash.c:143
 #6  0x02041da4 in scheme_hash_set (table=0x4034b698, key=0x4035fe98,
      val=0x4034f8c8) at ./hash.c:259
 #7  0x020a6254 in wraps_to_datum (w_in=0x4034f8c8, rns=0x4034b638,
      just_simplify=1) at ./stxobj.c:3803
 #8  0x020a7954 in simplify_syntax_inner (o=0x40350138, rns=0x4034b638,
      marks=0x0) at ./stxobj.c:4714
 #9  0x020a7cd8 in scheme_simplify_stx (stx=0x0, cache=0x0) at ./ 
 stxobj.c:4827
 #10 0x0201d654 in scheme_resolve_prefix (phase=0, cp=0x40337ec8,  
 simplify=1)
      at ./env.c:2677
 #11 0x0204f8a0 in do_module_begin (form=0x4031c038, env=0x403113b0,
      rec=0xbfff9afc, drec=0) at ./module.c:4019
 #12 0x02052864 in module_begin_syntax (form=0x0, env=0x0,  
 rec=0xbfff94e0,
      drec=10000) at ./module.c:4968
 #13 0x020279b0 in scheme_compile_expand_expr (form=0x403171b8,  
 env=0x403113b0,
      rec=0xbfff9afc, drec=0, app_position=0) at ./eval.c:2609
 #14 0x02028b74 in scheme_compile_expr (form=0x0, env=0x0,  
 rec=0xbfff94e0,
      drec=10000) at ./eval.c:3010
 #15 0x0204dd9c in do_module (form=0x4030fb18, env=0x402841b0,  
 rec=0xbfff9afc,
      drec=0) at ./module.c:3269
 #16 0x0204e014 in module_syntax (form=0x0, env=0x0, rec=0xbfff94e0,  
 drec=10000)
      at ./module.c:3343
 #17 0x020279b0 in scheme_compile_expand_expr (form=0x4030fb18,  
 env=0x402841b0,
      rec=0xbfff9afc, drec=0, app_position=0) at ./eval.c:2609
 #18 0x02028b74 in scheme_compile_expr (form=0x0, env=0x0,  
 rec=0xbfff94e0,
      drec=10000) at ./eval.c:3010
 #19 0x02026ba0 in compile_k () at ./eval.c:2190
 #20 0x02035594 in top_level_do (k=0x20268ec <compile_k>, eb=0,
      sj_start=0xbfff9ea0) at ./fun.c:1218
 #21 0x020356ec in scheme_top_level_do (k=0, eb=0) at ./fun.c:1263
 #22 0x02026d68 in _compile (form=0xbfff9eb4, env=0x401a07b0,  
 writeable=0,
      for_eval=33713512, eb=0, rename=0) at ./eval.c:2262
 #23 0x0202c8c8 in do_default_compile_handler (env=0x0, argc=0,  
 argv=0xbfff94e0)
      at ./eval.c:5212
 #24 0x0202caf8 in scheme_default_compile_handler (argc=2,  
 argv=0xbfffa2dc)
      at ./eval.c:5289
 #25 0x0202ac80 in scheme_do_eval (obj=0x4019c040, num_rands=2,
      rands=0xbfffa2dc, get_value=1) at ./eval.c:3946
 #26 0x020358dc in apply_k () at ./fun.c:1374
 #27 0x02035594 in top_level_do (k=0x2035898 <apply_k>, eb=0,
      sj_start=0xbfffa29c) at ./fun.c:1218
 #28 0x020356ec in scheme_top_level_do (k=0, eb=0) at ./fun.c:1263
 #29 0x02035924 in _apply (rator=0x0, num_rands=0, rands=0xbfff94e0,
      multi=10000, eb=1) at ./fun.c:1387
 #30 0x02035950 in scheme_apply (rator=0x0, num_rands=0,  
 rands=0xbfff94e0)
      at ./fun.c:1393
 #31 0x020266f4 in call_compile_handler (form=0x0, immediate_eval=0)
      at ./eval.c:2050
 #32 0x02026b30 in compile_k () at ./eval.c:2177
 #33 0x02035594 in top_level_do (k=0x20268ec <compile_k>, eb=0,
      sj_start=0xbfffa6d0) at ./fun.c:1218
 #34 0x020356ec in scheme_top_level_do (k=0, eb=0) at ./fun.c:1263
 #35 0x02026d68 in _compile (form=0xbfffa6e4, env=0x401a07b0,  
 writeable=0,
      for_eval=33713512, eb=0, rename=0) at ./eval.c:2262
 #36 0x0202c874 in do_default_eval_handler (env=0x401a07b0, argc=0,
      argv=0xbfff94e0) at ./eval.c:5204
 #37 0x0202cacc in scheme_default_eval_handler (argc=1, argv=0xbfffa7c0)
      at ./eval.c:5281
 #38 0x0202ac80 in scheme_do_eval (obj=0x4019a038, num_rands=1,
      rands=0xbfffa7c0, get_value=-1) at ./eval.c:3946
 #39 0x02076c08 in do_load_handler (data=0x0) at ./portfun.c:4184
 #40 0x02039d74 in scheme_dynamic_wind (pre=0, act=0x20767f4  
 <do_load_handler>,
      post=0x20767dc <post_load_handler>, jmp_handler=0, data=0x402e62d4)
      at ./fun.c:3995
 #41 0x02077014 in default_load (argc=1076045360, argv=0x402e62c0)
      at ./portfun.c:4301
 #42 0x0202ac80 in scheme_do_eval (obj=0x4019a2f8, num_rands=2,
      rands=0x401a2e38, get_value=-1) at ./eval.c:3946
 #43 0x0202bc74 in scheme_do_eval (obj=0xffffffff, num_rands=-1,  
 rands=0x0,
      get_value=-1) at ./eval.c:4665
 #44 0x0202bc74 in scheme_do_eval (obj=0xffffffff, num_rands=3,
      rands=0xbfffae00, get_value=1) at ./eval.c:4665
 #45 0x020358dc in apply_k () at ./fun.c:1374
 #46 0x02035594 in top_level_do (k=0x2035898 <apply_k>, eb=0,
      sj_start=0xbfffadc0) at ./fun.c:1218
 #47 0x020356ec in scheme_top_level_do (k=0, eb=0) at ./fun.c:1263
 #48 0x02035924 in _apply (rator=0x0, num_rands=0, rands=0xbfff94e0,
      multi=10000, eb=1) at ./fun.c:1387
 #49 0x02035950 in scheme_apply (rator=0x0, num_rands=0,  
 rands=0xbfff94e0)
      at ./fun.c:1393
 #50 0x0204b200 in _module_resolve (modidx=0x40233ef8, stx=0x40300bd8)
      at ./module.c:1731
 #51 0x020535c8 in parse_requires (form=0x40300b98,  
 base_modidx=0x40233d60,
      env=0x402cb570, rn=0x40233d78, post_ex_rn=0x40233e50,
      ck=0x204e524 <check_require_name>, data=0xbfffb0e4, start=0,  
 expstart=1,
      redef_modname=0x0, unpack_kern=0, copy_vars=0,  
 all_simple=0xbfffaff0)
      at ./module.c:5279
 #52 0x0204fad8 in do_module_begin (form=0x402e2738, env=0x40230230,
      rec=0xbfffb360, drec=0) at ./module.c:4054
 #53 0x02052864 in module_begin_syntax (form=0x0, env=0x0,  
 rec=0xbfff94e0,
      drec=10000) at ./module.c:4968
 #54 0x020279b0 in scheme_compile_expand_expr (form=0x402ba398,  
 env=0x40230230,
      rec=0xbfffb360, drec=0, app_position=0) at ./eval.c:2609
 #55 0x02028b74 in scheme_compile_expr (form=0x0, env=0x0,  
 rec=0xbfff94e0,
      drec=10000) at ./eval.c:3010
 #56 0x0204dd9c in do_module (form=0x401cedf8, env=0x401bb530,  
 rec=0xbfffb360,
      drec=0) at ./module.c:3269
 #57 0x0204e014 in module_syntax (form=0x0, env=0x0, rec=0xbfff94e0,  
 drec=10000)
      at ./module.c:3343
 #58 0x020279b0 in scheme_compile_expand_expr (form=0x401cedf8,  
 env=0x401bb530,
      rec=0xbfffb360, drec=0, app_position=0) at ./eval.c:2609
 #59 0x02028b74 in scheme_compile_expr (form=0x0, env=0x0,  
 rec=0xbfff94e0,
      drec=10000) at ./eval.c:3010
 #60 0x02026ba0 in compile_k () at ./eval.c:2190
 #61 0x02035594 in top_level_do (k=0x20268ec <compile_k>, eb=0,
      sj_start=0xbfffb704) at ./fun.c:1218
 #62 0x020356ec in scheme_top_level_do (k=0, eb=0) at ./fun.c:1263
 #63 0x02026d68 in _compile (form=0xbfffb718, env=0x401a07b0,  
 writeable=0,
      for_eval=33713512, eb=0, rename=0) at ./eval.c:2262
 #64 0x0202c8c8 in do_default_compile_handler (env=0x0, argc=0,  
 argv=0xbfff94e0)
      at ./eval.c:5212
 #65 0x0202caf8 in scheme_default_compile_handler (argc=2,  
 argv=0xbfffbb40)
      at ./eval.c:5289
 #66 0x0202ac80 in scheme_do_eval (obj=0x4019c040, num_rands=2,
      rands=0xbfffbb40, get_value=1) at ./eval.c:3946
 #67 0x020358dc in apply_k () at ./fun.c:1374
 #68 0x02035594 in top_level_do (k=0x2035898 <apply_k>, eb=0,
      sj_start=0xbfffbb00) at ./fun.c:1218
 #69 0x020356ec in scheme_top_level_do (k=0, eb=0) at ./fun.c:1263
 #70 0x02035924 in _apply (rator=0x0, num_rands=0, rands=0xbfff94e0,
      multi=10000, eb=1) at ./fun.c:1387
 #71 0x02035950 in scheme_apply (rator=0x0, num_rands=0,  
 rands=0xbfff94e0)
      at ./fun.c:1393
 #72 0x020266f4 in call_compile_handler (form=0x0, immediate_eval=0)
      at ./eval.c:2050
 #73 0x02026b30 in compile_k () at ./eval.c:2177
 #74 0x02035594 in top_level_do (k=0x20268ec <compile_k>, eb=0,
      sj_start=0xbfffbf34) at ./fun.c:1218
 #75 0x020356ec in scheme_top_level_do (k=0, eb=0) at ./fun.c:1263
 #76 0x02026d68 in _compile (form=0xbfffbf48, env=0x401a07b0,  
 writeable=0,
      for_eval=33713512, eb=0, rename=0) at ./eval.c:2262
 #77 0x0202c874 in do_default_eval_handler (env=0x401a07b0, argc=0,
      argv=0xbfff94e0) at ./eval.c:5204
 #78 0x0202cacc in scheme_default_eval_handler (argc=1, argv=0xbfffc024)
      at ./eval.c:5281
 #79 0x0202ac80 in scheme_do_eval (obj=0x4019a038, num_rands=1,
      rands=0xbfffc024, get_value=-1) at ./eval.c:3946
 #80 0x02076c08 in do_load_handler (data=0x0) at ./portfun.c:4184
 #81 0x02039d74 in scheme_dynamic_wind (pre=0, act=0x20767f4  
 <do_load_handler>,
      post=0x20767dc <post_load_handler>, jmp_handler=0, data=0x402ada68)
      at ./fun.c:3995
 #82 0x02077014 in default_load (argc=1075583856, argv=0x402ada54)
      at ./portfun.c:4301
 #83 0x0202ac80 in scheme_do_eval (obj=0x4019a2f8, num_rands=2,
      rands=0x401a2e94, get_value=-1) at ./eval.c:3946
 #84 0x0202bc74 in scheme_do_eval (obj=0xffffffff, num_rands=-1,  
 rands=0x0,
      get_value=-1) at ./eval.c:4665
 #85 0x0202bc74 in scheme_do_eval (obj=0xffffffff, num_rands=3,
      rands=0xbfffc664, get_value=1) at ./eval.c:4665
 #86 0x020358dc in apply_k () at ./fun.c:1374
 #87 0x02035594 in top_level_do (k=0x2035898 <apply_k>, eb=0,
      sj_start=0xbfffc624) at ./fun.c:1218
 #88 0x020356ec in scheme_top_level_do (k=0, eb=0) at ./fun.c:1263
 #89 0x02035924 in _apply (rator=0x0, num_rands=0, rands=0xbfff94e0,
      multi=10000, eb=1) at ./fun.c:1387
 #90 0x02035950 in scheme_apply (rator=0x0, num_rands=0,  
 rands=0xbfff94e0)
      at ./fun.c:1393
 #91 0x0204b200 in _module_resolve (modidx=0x40233ca0, stx=0x401ce0b8)
      at ./module.c:1731
 #92 0x020535c8 in parse_requires (form=0x401ce078,  
 base_modidx=0x40233af0,
      env=0x4024b390, rn=0x40233b08, post_ex_rn=0x40233bf8,
      ck=0x204e524 <check_require_name>, data=0xbfffc948, start=0,  
 expstart=1,
      redef_modname=0x0, unpack_kern=0, copy_vars=0,  
 all_simple=0xbfffc854)
      at ./module.c:5279
 #93 0x0204fad8 in do_module_begin (form=0x402cad58, env=0x402101b0,
      rec=0xbfffcbc4, drec=0) at ./module.c:4054
 #94 0x02052864 in module_begin_syntax (form=0x0, env=0x0,  
 rec=0xbfff94e0,
      drec=10000) at ./module.c:4968
 #95 0x020279b0 in scheme_compile_expand_expr (form=0x402aa9b8,  
 env=0x402101b0,
      rec=0xbfffcbc4, drec=0, app_position=0) at ./eval.c:2609
 #96 0x02028b74 in scheme_compile_expr (form=0x0, env=0x0,  
 rec=0xbfff94e0,
      drec=10000) at ./eval.c:3010
 #97 0x0204dd9c in do_module (form=0x402aa598, env=0x40210a30,  
 rec=0xbfffcbc4,
      drec=0) at ./module.c:3269
 #98 0x0204e014 in module_syntax (form=0x0, env=0x0, rec=0xbfff94e0,  
 drec=10000)
      at ./module.c:3343
 #99 0x020279b0 in scheme_compile_expand_expr (form=0x402aa598,  
 env=0x40210a30,
      rec=0xbfffcbc4, drec=0, app_position=0) at ./eval.c:2609
 #100 0x02028b74 in scheme_compile_expr (form=0x0, env=0x0,  
 rec=0xbfff94e0,
      drec=10000) at ./eval.c:3010
 #101 0x02026ba0 in compile_k () at ./eval.c:2190
 #102 0x02035594 in top_level_do (k=0x20268ec <compile_k>, eb=0,
      sj_start=0xbfffcf68) at ./fun.c:1218
 #103 0x020356ec in scheme_top_level_do (k=0, eb=0) at ./fun.c:1263
 #104 0x02026d68 in _compile (form=0xbfffcf7c, env=0x401a07b0,  
 writeable=0,
      for_eval=33713512, eb=0, rename=0) at ./eval.c:2262
 #105 0x0202c8c8 in do_default_compile_handler (env=0x0, argc=0,
      argv=0xbfff94e0) at ./eval.c:5212
 #106 0x0202caf8 in scheme_default_compile_handler (argc=2,  
 argv=0xbfffd3a4)
      at ./eval.c:5289
 #107 0x0202ac80 in scheme_do_eval (obj=0x4019c040, num_rands=2,
      rands=0xbfffd3a4, get_value=1) at ./eval.c:3946
 #108 0x020358dc in apply_k () at ./fun.c:1374
 #109 0x02035594 in top_level_do (k=0x2035898 <apply_k>, eb=0,
      sj_start=0xbfffd364) at ./fun.c:1218
 #110 0x020356ec in scheme_top_level_do (k=0, eb=0) at ./fun.c:1263
 #111 0x02035924 in _apply (rator=0x0, num_rands=0, rands=0xbfff94e0,
      multi=10000, eb=1) at ./fun.c:1387
 #112 0x02035950 in scheme_apply (rator=0x0, num_rands=0,  
 rands=0xbfff94e0)
      at ./fun.c:1393
 #113 0x020266f4 in call_compile_handler (form=0x0, immediate_eval=0)
      at ./eval.c:2050
 #114 0x02026b30 in compile_k () at ./eval.c:2177
 #115 0x02035594 in top_level_do (k=0x20268ec <compile_k>, eb=0,
      sj_start=0xbfffd798) at ./fun.c:1218
 #116 0x020356ec in scheme_top_level_do (k=0, eb=0) at ./fun.c:1263
 #117 0x02026d68 in _compile (form=0xbfffd7ac, env=0x401a07b0,  
 writeable=0,
      for_eval=33713512, eb=0, rename=0) at ./eval.c:2262
 #118 0x0202c874 in do_default_eval_handler (env=0x401a07b0, argc=0,
      argv=0xbfff94e0) at ./eval.c:5204
 #119 0x0202cacc in scheme_default_eval_handler (argc=1, argv=0xbfffd888)
      at ./eval.c:5281
 #120 0x0202ac80 in scheme_do_eval (obj=0x4019a038, num_rands=1,
      rands=0xbfffd888, get_value=-1) at ./eval.c:3946
 #121 0x02076c08 in do_load_handler (data=0x0) at ./portfun.c:4184
 #122 0x02039d74 in scheme_dynamic_wind (pre=0,
      act=0x20767f4 <do_load_handler>, post=0x20767dc  
 <post_load_handler>,
      jmp_handler=0, data=0x40275900) at ./fun.c:3995
 #123 0x02077014 in default_load (argc=1075582128, argv=0x40255464)
      at ./portfun.c:4301
 #124 0x0202ac80 in scheme_do_eval (obj=0x4019a2f8, num_rands=2,
      rands=0x401a2ef0, get_value=-1) at ./eval.c:3946
 #125 0x0202bc74 in scheme_do_eval (obj=0xffffffff, num_rands=-1,  
 rands=0x0,
      get_value=-1) at ./eval.c:4665
 #126 0x0202bc74 in scheme_do_eval (obj=0xffffffff, num_rands=3,
      rands=0xbfffdec8, get_value=1) at ./eval.c:4665
 #127 0x020358dc in apply_k () at ./fun.c:1374
 #128 0x02035594 in top_level_do (k=0x2035898 <apply_k>, eb=0,
      sj_start=0xbfffde88) at ./fun.c:1218
 #129 0x020356ec in scheme_top_level_do (k=0, eb=0) at ./fun.c:1263
 #130 0x02035924 in _apply (rator=0x0, num_rands=0, rands=0xbfff94e0,
      multi=10000, eb=1) at ./fun.c:1387
 #131 0x02035950 in scheme_apply (rator=0x0, num_rands=0,  
 rands=0xbfff94e0)
      at ./fun.c:1393
 #132 0x0204b200 in _module_resolve (modidx=0x40233a30, stx=0x4026be98)
      at ./module.c:1731
 #133 0x020535c8 in parse_requires (form=0x4026be58,  
 base_modidx=0x2103434,
      env=0x401a07b0, rn=0x40233a18, post_ex_rn=0x40233a18,
      ck=0x2053ccc <check_dup_require>, data=0x4025e9c8, start=0,  
 expstart=0,
      redef_modname=0x0, unpack_kern=0, copy_vars=0, all_simple=0x0)
      at ./module.c:5279
 #134 0x020540c4 in do_require (form=0x4026be58, env=0x402108b0,
      rec=0xbfffe0e4, drec=0, for_phase=0) at ./module.c:5588
 #135 0x02054150 in require_syntax (form=0x0, env=0x0, rec=0xbfff94e0,
      drec=10000) at ./module.c:5609
 #136 0x020279b0 in scheme_compile_expand_expr (form=0x4026be58,
      env=0x402108b0, rec=0xbfffe0e4, drec=0, app_position=0) at ./ 
 eval.c:2609
 #137 0x02028b74 in scheme_compile_expr (form=0x0, env=0x0,  
 rec=0xbfff94e0,
      drec=10000) at ./eval.c:3010
 #138 0x02026ba0 in compile_k () at ./eval.c:2190
 #139 0x02035594 in top_level_do (k=0x20268ec <compile_k>, eb=0,
      sj_start=0xbfffe488) at ./fun.c:1218
 #140 0x020356ec in scheme_top_level_do (k=0, eb=0) at ./fun.c:1263
 #141 0x02026d68 in _compile (form=0xbfffe49c, env=0x401a07b0,  
 writeable=0,
      for_eval=33713512, eb=0, rename=0) at ./eval.c:2262
 #142 0x0202c8c8 in do_default_compile_handler (env=0x0, argc=0,
      argv=0xbfff94e0) at ./eval.c:5212
 #143 0x0202caf8 in scheme_default_compile_handler (argc=2,  
 argv=0xbfffe8c4)
      at ./eval.c:5289
 #144 0x0202ac80 in scheme_do_eval (obj=0x4019c040, num_rands=2,
      rands=0xbfffe8c4, get_value=1) at ./eval.c:3946
 #145 0x020358dc in apply_k () at ./fun.c:1374
 #146 0x02035594 in top_level_do (k=0x2035898 <apply_k>, eb=0,
      sj_start=0xbfffe884) at ./fun.c:1218
 #147 0x020356ec in scheme_top_level_do (k=0, eb=0) at ./fun.c:1263
 #148 0x02035924 in _apply (rator=0x0, num_rands=0, rands=0xbfff94e0,
      multi=10000, eb=1) at ./fun.c:1387
 #149 0x02035950 in scheme_apply (rator=0x0, num_rands=0,  
 rands=0xbfff94e0)
      at ./fun.c:1393
 #150 0x020266f4 in call_compile_handler (form=0x0, immediate_eval=0)
      at ./eval.c:2050
 #151 0x02026b30 in compile_k () at ./eval.c:2177
 #152 0x02035594 in top_level_do (k=0x20268ec <compile_k>, eb=0,
      sj_start=0xbfffecb8) at ./fun.c:1218
 #153 0x020356ec in scheme_top_level_do (k=0, eb=0) at ./fun.c:1263
 #154 0x02026d68 in _compile (form=0xbfffeccc, env=0x401a07b0,  
 writeable=0,
      for_eval=33713512, eb=0, rename=0) at ./eval.c:2262
 #155 0x0202c874 in do_default_eval_handler (env=0x401a07b0, argc=0,
      argv=0xbfff94e0) at ./eval.c:5204
 #156 0x0202cacc in scheme_default_eval_handler (argc=1, argv=0x401a2f4c)
      at ./eval.c:5281
 #157 0x0202ac80 in scheme_do_eval (obj=0x4019a038, num_rands=1,
      rands=0x401a2f4c, get_value=-1) at ./eval.c:3946
 #158 0x02037710 in call_with_values (argc=2, argv=0x401a2f54) at ./ 
 fun.c:2506
 #159 0x0202ac80 in scheme_do_eval (obj=0x4019a098, num_rands=2,
      rands=0x401a2f54, get_value=-1) at ./eval.c:3946
 #160 0x02039a00 in do_dyn_wind (d=0x0) at ./fun.c:3862
 #161 0x02039d74 in scheme_dynamic_wind (pre=0x2039a04 <pre_dyn_wind>,
      act=0x20399e0 <do_dyn_wind>, post=0x2039a1c <post_dyn_wind>,
      jmp_handler=0, data=0x402a5734) at ./fun.c:3995
 #162 0x02039ad4 in dynamic_wind (c=3, argv=0x401a2f64) at ./fun.c:3893
 #163 0x0202ac80 in scheme_do_eval (obj=0x4019c268, num_rands=3,
      rands=0x401a2f64, get_value=-1) at ./eval.c:3946
 #164 0x02037a78 in scheme_call_ec (argc=10000, argv=0x401a2f80) at ./ 
 fun.c:2623
 #165 0x0202ac80 in scheme_do_eval (obj=0x4019a0d8, num_rands=1,
      rands=0x401a2f80, get_value=-1) at ./eval.c:3946
 #166 0x0202bc74 in scheme_do_eval (obj=0xffffffff, num_rands=0,
      rands=0x21023f8, get_value=-1) at ./eval.c:4665
 #167 0x02037a78 in scheme_call_ec (argc=10000, argv=0x401a2f94) at ./ 
 fun.c:2623
 #168 0x0202ac80 in scheme_do_eval (obj=0x4019a0d8, num_rands=1,
      rands=0x401a2f94, get_value=-1) at ./eval.c:3946
 #169 0x02039a00 in do_dyn_wind (d=0x0) at ./fun.c:3862
 #170 0x02039d74 in scheme_dynamic_wind (pre=0x2039a04 <pre_dyn_wind>,
      act=0x20399e0 <do_dyn_wind>, post=0x2039a1c <post_dyn_wind>,
      jmp_handler=0, data=0x402a5704) at ./fun.c:3995
 #171 0x02039ad4 in dynamic_wind (c=3, argv=0x401a2fa0) at ./fun.c:3893
 #172 0x0202ac80 in scheme_do_eval (obj=0x4019c268, num_rands=3,
      rands=0x401a2fa0, get_value=1) at ./eval.c:3946
 #173 0x020358dc in apply_k () at ./fun.c:1374
 #174 0x02035594 in top_level_do (k=0x2035898 <apply_k>, eb=0,
      sj_start=0xbffff814) at ./fun.c:1218
 #175 0x020356ec in scheme_top_level_do (k=0, eb=0) at ./fun.c:1263
 #176 0x02035924 in _apply (rator=0x0, num_rands=0, rands=0xbfff94e0,
      multi=10000, eb=1) at ./fun.c:1387
 #177 0x02035950 in scheme_apply (rator=0x0, num_rands=0,  
 rands=0xbfff94e0)
      at ./fun.c:1393
 #178 0x02013558 in do_scheme_rep (env=0x401a07b0) at ./main.c:404
 #179 0x02011bd8 in finish_cmd_line_run (fa=0x4026bd38,
      repl=0x2013518 <do_scheme_rep>) at cmdline.inc:412
 #180 0x02013504 in cont_run (f=0x4026bd38) at ./main.c:385
 #181 0x0201337c in run_from_cmd_line (argc=0, _argv=0xbffffb64,
      mk_basic_env=0x2019c8c <scheme_basic_env>, cont_run=0x20134e4  
 <cont_run>)
      at cmdline.inc:1092
 #182 0x020134b8 in actual_main (argc=1, argv=0xbffffb64) at ./main.c:374
 #183 0x02043870 in scheme_image_main (argc=0, argv=0x0) at ./image.c:770
 #184 0x0201345c in main (argc=1, argv=0xbffffb64) at ./main.c:284
 #185 0x40042070 in __libc_start_main () from /lib/libc.so.6
 (gdb) q
 The program is running.  Exit anyway? (y or n)
 
From: Anthony Green <green@redhat.com>
To: sk@plt-scheme.org, bugs@plt-scheme.org, iamphet@nm.ru,
        mflatt@plt-scheme.org
Cc: 
Subject: Re: mzscheme/7856: SIGSEGV during installation on ARM
Date: Mon, 25 Feb 2008 09:05:57 -0800

 libffi 3 supports closures on ARM.  http://sourceware.org/libffi
 
 Also, see bug 9209.
 
 Anthony Green
 
 
 
 
 

State changed from "open" to "closed" by eli at Mon, 17 Jan 2011 17:45:12 -0500
Reason>>> closed as "obsolete" with respect to v5.0.99.6 and later; 
either the bug
is long-since fixed, the relevant code doesn't exist 
anymore, the
relevant platform hasn't been supported recently, or a new 
bug report is
needed if the problem really isn't fixed and someone 
actually cares

