From apache@plt-scheme.org Thu May 27 08:11:57 2004
Received: from champlain.ccs.neu.edu (champlain.ccs.neu.edu [127.0.0.1])
	by champlain.ccs.neu.edu (8.12.10/8.12.10) with ESMTP id i4RCBu0u009477
	for <bugs@plt-scheme.org>; Thu, 27 May 2004 08:11:56 -0400
Message-Id: <200405271211.i4RCBuDL009475@champlain.ccs.neu.edu>
Date: Thu, 27 May 2004 08:11:56 -0400
From: tim@cityc.co.uk
To: bugs@plt-scheme.org
Subject: HP/UX PA RISC 2, 64-bit is not properly handled in sconfig.h

>Number:         6880
>Category:       mzscheme
>Synopsis:       HP/UX PA RISC 2, 64-bit is not properly handled in sconfig.h
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Thu May 27 08:15:00 -0400 2004
>Last-Modified:  Wed Jul 21 15:47:35 -0400 2004
>Originator:     Tim Brown
>Organization:
plt
>Submitter-Id:   unknown
>Release:        207
>Environment:
unix-other
>Description:
Building on HPUX/11 64 bit fails because sconfig.h, line 402:

#if (defined(_PA_RISC1_0) || defined(_PA_RISC1_1)) && !defined(linux)

does not include the HPUX 64 bit case (PA RISC Architecture is PA RISC 2.0).

Adding:

#if (defined(__hppa) ...)

does the trick, since until show otherwise, HP-UX PA RISC is source
compatible across versions of PA RISC.
>How-To-Repeat:
Building on a 64 bit HP-UX system:

> uname -a
HP-UX salty B.11.00 U 9000/800

Initial manifestation of the bug:

During the build of "port.c" I am told that "FNDELAY" is undeclared.
This is being selected for the "MZ_NONBLOCKING" macro in "schpriv.h"
because "USE_FCNTL_O_NONBLOCK" is not defined in "sconfig.h"

I believe this should be set in the only HP/UX block in "sconfig.h", i.e.
the block starting at line 400. This only catches the cases where
_PA_RISC1_0 or _PA_RISC1_1 are set for the architecture.

The following symbols are defined by the C compiler:

                    Operating system:      unix           __unix

                     Hardware:  hp9000s200     hp9000s300     __hp9000s300
                                hp9000s500     hp9000s800     __hp9000s800
                                hp9000ipc      hppa           __hppa
                                _PA_RISC1_0    _PA_RISC1_1    _SIO     _WSIO

                     UNIX systems variant:  hpux           __hpux
                                            _HPUX_SOURCE   PWB
                                            _PWB

Of which, "hppa", "__hppa", "hpux" and "__hpux" are possibly the most
appropriate definitions to use. I fixed the bug for myself using:

#if (defined(__hppa) || defined(_PA_RISC1_0) || defined(_PA_RISC1_1)) && !defined(linux)
>Fix:
>Audit-Trail:
Responsible changed from "nobody" to "mflatt" by eli at Sat, 05 Jun 2004 17:02:08 -0400
Reason>>> mzscheme compilation

State changed from "open" to "closed" by mflatt at Wed, 21 Jul 2004 15:47:35 -0400
Reason>>> Based on another recommendation, I changed it to
just
  #if defined(__hpux)

Let me know if that seems wrong.

Thanks,
Matthew


