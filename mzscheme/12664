From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Fri Mar 30 05:46:51 2012
Received: from mail-vx0-f172.google.com (mail-vx0-f172.google.com [209.85.220.172])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id q2U9klGH001902
	for <bugs@bugs.plt-scheme.org>; Fri, 30 Mar 2012 05:46:47 -0400
Message-Id: <201203300946.q2U9kihT001892@champlain.ccs.neu.edu>
Date: Fri, 30 Mar 2012 05:46:44 -0400
From: eli@barzilay.org
To: bugs@racket-lang.org
Subject: `make-keyword-procedure' should preserve inferred name

>Number:         12664
>Category:       mzscheme
>Synopsis:       `make-keyword-procedure' should preserve inferred name
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Fri Mar 30 05:48:01 -0400 2012
>Last-Modified:  Wed Apr 18 16:49:01 -0400 2012
>Originator:     Eli Barzilay
>Organization:
plt
>Submitter-Id:   unknown
>Release:        HEAD
>Environment:
Windows
>Description:
See below -- `make-keyword-procedure' should be a macro just to propagate
the inferred name into the function expression.
>How-To-Repeat:
-> (define foo (make-keyword-procedure (λ (kws kvs . rest) 1)))
-> foo
#<procedure:...t/private/kw.rkt:189:14>
>Fix:
>Audit-Trail:
From: Eli Barzilay <eli@barzilay.org>
To: bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12664: `make-keyword-procedure' should preserve inferred name
Date: Fri, 30 Mar 2012 05:50:41 -0400

 Just now, eli@barzilay.org wrote:
 > -> (define foo (make-keyword-procedure (λ (kws kvs . rest) 1)))
 > -> foo
 > #<procedure:...t/private/kw.rkt:189:14>
 
 Actually, even this is not working:
 
   (make-keyword-procedure (let ((foo (λ (kws kvs . rest) 1))) foo))
 
 and probably should.  (Could be easy if `rename-procedure' doesn't add
 an overhead.)
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!
 
From: Matthew Flatt <mflatt@cs.utah.edu>
To: Eli Barzilay <eli@barzilay.org>
Cc: bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12664: `make-keyword-procedure' should preserve inferred name
Date: Sat, 31 Mar 2012 07:26:21 -0600

 At Fri, 30 Mar 2012 05:50:41 -0400, Eli Barzilay wrote:
 > Just now, eli@barzilay.org wrote:
 > > -> (define foo (make-keyword-procedure (λ (kws kvs . rest) 1)))
 > > -> foo
 > > #<procedure:...t/private/kw.rkt:189:14>
 > 
 > Actually, even this is not working:
 > 
 >   (make-keyword-procedure (let ((foo (λ (kws kvs . rest) 1))) foo))
 > 
 > and probably should.  (Could be easy if `rename-procedure' doesn't add
 > an overhead.)
 
 The procedure name is taken from the second argument (as is the arity
 for `procedure-arity'):
 
  > (make-keyword-procedure values 
                            (let ((foo (lambda (kws kvs . rest) 1))) foo))
  #<procedure:foo>
 
 That choice has to do with minimizing the overhead for keywordless
 calls.
 
 Overall, I think this PR goes with PR 12663: a syntactic form over
 `make-keyword-procedure' would better manage these details.
 
 
From: Eli Barzilay <eli@barzilay.org>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12664: `make-keyword-procedure' should preserve inferred name
Date: Sat, 31 Mar 2012 16:46:37 -0400

 7 hours ago, Matthew Flatt wrote:
 > At Fri, 30 Mar 2012 05:50:41 -0400, Eli Barzilay wrote:
 > > Just now, eli@barzilay.org wrote:
 > > > -> (define foo (make-keyword-procedure (λ (kws kvs . rest) 1)))
 > > > -> foo
 > > > #<procedure:...t/private/kw.rkt:189:14>
 > > 
 > > Actually, even this is not working:
 > > 
 > >   (make-keyword-procedure (let ((foo (λ (kws kvs . rest) 1))) foo))
 > > 
 > > and probably should.  (Could be easy if `rename-procedure' doesn't add
 > > an overhead.)
 > 
 > The procedure name is taken from the second argument (as is the arity
 > for `procedure-arity'):
 > 
 >  > (make-keyword-procedure values 
 >                            (let ((foo (lambda (kws kvs . rest) 1))) foo))
 >  #<procedure:foo>
 > 
 > That choice has to do with minimizing the overhead for keywordless
 > calls.
 
 Is it practical to have another struct for keyword procedures without
 the `plain-proc'?  Seems like the overhead would be the same for this,
 and it will allow controlling the name and arity better.  (But maybe
 if possible, maybe it's impractical in complicating the code?)
 
 
 > Overall, I think this PR goes with PR 12663: a syntactic form over
 > `make-keyword-procedure' would better manage these details.
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!
 

