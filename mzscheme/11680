From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Sat Jan 29 17:33:14 2011
Received: from mail-fx0-f44.google.com (mail-fx0-f44.google.com [209.85.161.44])
	by champlain.ccs.neu.edu (8.14.3/8.14.3) with ESMTP id p0TMXAxn016565
	for <bugs@bugs.plt-scheme.org>; Sat, 29 Jan 2011 17:33:10 -0500
Message-Id: <201101292233.p0TMX5ak016558@champlain.ccs.neu.edu>
Date: Sat, 29 Jan 2011 17:33:05 -0500
From: clklein@eecs.northwestern.edu
To: bugs@racket-lang.org
Subject: Crash when allocation fails

>Number:         11680
>Category:       mzscheme
>Synopsis:       Crash when allocation fails
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Sat Jan 29 17:36:01 -0500 2011
>Last-Modified:  Wed Feb 02 14:52:08 -0500 2011
>Originator:     Casey Klein
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.1.0.1--2011-01-29(3250ff8/g)
>Environment:
macosx "Darwin spaghetti.cs.northwestern.edu 10.5.0 Darwin Kernel Version 10.5.0: Fri Nov  5 23:20:39 PDT 2010; root:xnu-1504.9.17~1/RELEASE_I386 i386" (i386-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 143141748

Collections:
("/Users/clklein/Library/Racket/5.1.0.1/collects"
 (non-existent-path))
("/Users/clklein/git/plt/collects"
 (".gitignore" "2htdp" "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "data" "datalog" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "meta" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "picturing-programs" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "redex" "repo-time-stamp" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "sirmail" "slatex" "slideshow" "srfi" "srpersist" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tests" "tex2page" "texpict" "trace" "typed" "typed-scheme" "un!
 stable" "version" "waterworld" "web-server" "wxme" "xml"))

Computer Language: (("Determine language from source") (#(#t quasiquote mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t))
>Description:
The program below reliably crashes DrRacket (and racket too) with the following message.

Couldn't allocate memory: (os/kern) no space available
Abort trap (core dumped)

It's probably my fault that the program uses so much memory, but it seems wrong for DrRacket to "quit unexpectedly" when I've imposed a 256 MB memory limit on the program's execution.

I can post the core dump if it's useful. (Sorry the program's so large; I was unable to simplify it any more.)
>How-To-Repeat:
#lang racket

(require redex/examples/cont-mark-transform/randomized-tests
         redex)

(same-result?
 (term
  ((κ (hole))
   (("")
    (w-c-m
     (κ hole)
     ("KtNhv")
     (w-c-m
      (κ hole)
      ("XivwoYZS" ("euMKKhYR"))
      (w-c-m
       (λ (fa j E M E R B B q)
         (match
             ("KClMVE" ("g") HD)
           (("FBtj" I S) (letrec () (call/cc b)))
           (("SJh" l q Gk i Q R PO m M Vstg o r m n m BL D T xL) (w-c-m F d (call/cc H)))
           (("SWhGKIy") (w-c-m h Rl (call/cc b)))
           (("" d) (match Hu))
           (("P") (match m))
           (("" z O) (c-c-m ()))
           (("PtEPXULDNNgauw" Kq) (match a))))
       ("F"
        ("Y"
         (""
          (λ () (call/cc ("abort")))
          (λ () (call/cc ("c")))
          ("eHFwakB" ("EPSDRGJbbJdsCvSXLNfRXR"))
          ("u")
          (λ () (call/cc ("match")))
          (κ hole))
         ("" (""))
         (λ (y t) (w-c-m t y (call/cc t)))
         ("h" (""))
         (κ hole)
         (κ hole)
         (λ (F F) (letrec () (call/cc F)))
         ("rRcXmHYrDH" ("KJxDK") ("MDyUkBa")))
        (λ (t r L n d J w bD T M U G qaR S Uv) (w-c-m M ("MdTIR") (letrec () (call/cc U))))
        (κ hole)
        ("z")
        ("" ("FHVj") ("r"))
        ("uGf" (κ hole) (κ hole))
        (κ hole))
       (w-c-m
        (κ (w-c-m (ref a) (ref aeL) hole))
        ("PLXnfnlIzSnICmHESyNVb" ("bCXElutWwMAojZcf") ("RuIwbrpd"))
        (w-c-m
         ("c" ("") (ref cd))
         (λ (JK U D UY L) (letrec () (call/cc JK)))
         (w-c-m
          ("mJj")
          (κ hole)
          (w-c-m
           (ref T)
           ("f")
           (w-c-m
            (κ hole)
            ("klOZL")
            (abort
             ("Z" ("oab" ("") ("E") ("") ("RxdA")) ("qDEOJYv") ("GsLUAxCTqACmXMiOfJkX") ("NMyo")))))))))))))))

#|

#0  0x9502f176 in __kill ()
(gdb) bt
#0  0x9502f176 in __kill ()
#1  0x9502f168 in kill$UNIX2003 ()
#2  0x950c189d in raise ()
#3  0x950d79bc in abort ()
#4  0x0022b4ed in malloc_pages (gc=<value temporarily unavailable, due to optimizations>, len=<value temporarily unavailable, due to optimizations>, alignment=<value temporarily unavailable, due to optimizations>, dirty=<value temporarily unavailable, due to optimizations>, type=Could not find the frame base for "malloc_pages".
) at vm_osx.c:183
#5  0x0022caf3 in allocate_big (request_size_bytes=16384, type=2) at newgc.c:818
#6  0x0008f40e in do_hash (table=0x5352170, key=0xfe7a76a8, set=2, val=0xf67c0998) at hash.c:272
#7  0x0008fa87 in scheme_hash_set (table=0x5352170, key=0xfe7a76a8, val=0xf67c0998) at hash.c:339
#8  0x0001159b in union_check (obj1=0xf67c0998, obj2=0xfe7a76a8, eql=0xbfff05ec) at bool.c:317
#9  0x000121fc in is_equal (obj1=0xf67c0998, obj2=0xfe7a76a8, eql=<value temporarily unavailable, due to optimizations>) at bool.c:404
#10 0x00012232 in is_equal (obj1=0xf67c0958, obj2=0xfe7a7668, eql=0xbfff05ec) at bool.c:408
#11 0x00012232 in is_equal (obj1=0xf67c0928, obj2=0xfe7a7638, eql=0xbfff05ec) at bool.c:408
#12 0x00012232 in is_equal (obj1=0xf67c08f8, obj2=0xfe7a7608, eql=0xbfff05ec) at bool.c:408
#13 0x00012232 in is_equal (obj1=0xf67c08d8, obj2=0xfe7a75e8, eql=0xbfff05ec) at bool.c:408
#14 0x00012232 in is_equal (obj1=0xf6774ae0, obj2=0x396d6c60, eql=0xbfff05ec) at bool.c:408
#15 0x00012232 in is_equal (obj1=0xf6774aa0, obj2=0x396d6c20, eql=0xbfff05ec) at bool.c:408
#16 0x00012232 in is_equal (obj1=0xf6774a40, obj2=0x396d6bc0, eql=0xbfff05ec) at bool.c:408
#17 0x00012232 in is_equal (obj1=0xf67749e0, obj2=0x396d6b60, eql=0xbfff05ec) at bool.c:408
#18 0x00012232 in is_equal (obj1=0xf6774980, obj2=0x396d6b00, eql=0xbfff05ec) at bool.c:408
#19 0x00012232 in is_equal (obj1=0xf6774920, obj2=0x396d6aa0, eql=0xbfff05ec) at bool.c:408
#20 0x00012232 in is_equal (obj1=0x38595488, obj2=0x52f40b8, eql=0xbfff05ec) at bool.c:408
#21 0x0001346e in scheme_get_thread_local_variables [inlined] () at /Users/clklein/git/plt/src/racket/include/schthread.h:274
#22 0x0001346e in scheme_equal (obj1=0x38595488, obj2=0x52f40b8) at bool.c:274
#23 0x000ea228 in compare_equal (v1=0x38595488, v2=0x52f40b8) at list.c:1705
#24 0x0008f2ca in do_hash (table=0xd3aebc68, key=0x52f40b8, set=2, val=0x5352100) at hash.c:212
#25 0x0008f7b4 in scheme_get_thread_local_variables [inlined] () at /Users/clklein/git/plt/src/racket/include/schthread.h:394
#26 0x0008f7b4 in scheme_hash_set (table=0xd3aebc68, key=0x52f40b8, val=0x5352100) at hash.c:397
#27 0x000ec7a9 in hash_table_put_bang (argc=3, argv=0x6d884338) at list.c:2175
#28 0x003a2fed in ?? ()
#29 0x0039fc50 in ?? ()
#30 0x0039fc50 in ?? ()
#31 0x0039fc50 in ?? ()
#32 0x003e458f in ?? ()
#33 0x003e458f in ?? ()
#34 0x003e458f in ?? ()
#35 0x0004fa86 in scheme_do_eval (obj=0x0, num_rands=1, rands=0xbfff0b70, get_value=-1) at eval.c:9488
#36 0x00075342 in do_call_ec (argc=1, argv=0x6d884464, _for_cc=0x0) at fun.c:4726
#37 0x00075526 in scheme_call_ec (argc=1, argv=0x6d884464) at fun.c:4744
#38 0x0039899f in ?? ()
[...]
#49 0x003e458f in ?? ()
#50 0x0004fa86 in scheme_do_eval (obj=0x0, num_rands=1, rands=0xbfff10d0, get_value=-1) at eval.c:9488
#51 0x00075342 in do_call_ec (argc=1, argv=0x6d884608, _for_cc=0x0) at fun.c:4726
#52 0x00075526 in scheme_call_ec (argc=1, argv=0x6d884608) at fun.c:4744
#53 0x0039899f in ?? ()
#54 0x003a55a0 in ?? ()
#55 0x0039fc50 in ?? ()
#56 0x0039fc50 in ?? ()
#57 0x0039fc50 in ?? ()
#58 0x0039fc50 in ?? ()
#59 0x003e458f in ?? ()
#60 0x003e458f in ?? ()
#61 0x0004fa86 in scheme_do_eval (obj=0x0, num_rands=1, rands=0xbfff1530, get_value=-1) at eval.c:9488
#62 0x00075342 in do_call_ec (argc=1, argv=0x6d88471c, _for_cc=0x0) at fun.c:4726
#63 0x00075526 in scheme_call_ec (argc=1, argv=0x6d88471c) at fun.c:4744
#64 0x0039899f in ?? ()
#65 0x003a55a0 in ?? ()
#66 0x0039fc50 in ?? ()
#67 0x0039fc50 in ?? ()
#68 0x0004fa86 in scheme_do_eval (obj=0x0, num_rands=2, rands=0x494c2d0, get_value=-1) at eval.c:9488
#69 0x00085be0 in scheme_apply_chaperone (o=<value temporarily unavailable, due to optimizations>, argc=2, argv=0x6d88477c, auto_val=0x0) at fun.c:4390
#70 0x0004f5ab in scheme_do_eval (obj=0x15c1158, num_rands=2, rands=0x6d88477c, get_value=1) at eval.c:9621
#71 0x00050ce8 in _scheme_apply_from_native (rator=0x15c1158, argc=2, argv=0x6d88477c) at schnapp.inc:74
#72 0x0039ff3f in ?? ()
#73 0x017d0860 in ?? ()
#74 0x017d0860 in ?? ()
#75 0x003a5920 in ?? ()
#76 0x0004fa86 in scheme_do_eval (obj=0x0, num_rands=2, rands=0xfe75a428, get_value=-1) at eval.c:9488
#77 0x00085be0 in scheme_apply_chaperone (o=<value temporarily unavailable, due to optimizations>, argc=2, argv=0x6d884804, auto_val=0x0) at fun.c:4390
#78 0x0004f5ab in scheme_do_eval (obj=0x177e0ef8, num_rands=2, rands=0x6d884804, get_value=1) at eval.c:9621
#79 0x00050ce8 in _scheme_apply_from_native (rator=0x177e0ef8, argc=2, argv=0x6d884804) at schnapp.inc:74
#80 0x0039ff3f in ?? ()
[...]
#322 0x003f5760 in ?? ()
#323 0x0004fa86 in scheme_do_eval (obj=0x0, num_rands=5, rands=0x28de4088, get_value=-1) at eval.c:9488
#324 0x00050af8 in do_eval_k () at eval.c:8582
#325 0x00040543 in scheme_enlarge_runstack (size=8000, k=0x50a90 <do_eval_k>) at eval.c:669
#326 0x0004e7a2 in scheme_do_eval (obj=0x51ac8f0, num_rands=5, rands=0x28de4088, get_value=-1) at eval.c:9480
#327 0x00050b58 in _scheme_apply_multi_from_native (rator=0x51ac8f0, argc=5, argv=0x28de4088) at schnapp.inc:84
#328 0x0039ec7a in ?? ()
[...]
#610 0x003f5760 in ?? ()
#611 0x0004fa86 in scheme_do_eval (obj=0x0, num_rands=5, rands=0x2fb4c090, get_value=-1) at eval.c:9488
#612 0x00050af8 in do_eval_k () at eval.c:8582
#613 0x00040543 in scheme_enlarge_runstack (size=4000, k=0x50a90 <do_eval_k>) at eval.c:669
#614 0x0004e7a2 in scheme_do_eval (obj=0x51ac8f0, num_rands=5, rands=0x2fb4c090, get_value=-1) at eval.c:9480
#615 0x00050b58 in _scheme_apply_multi_from_native (rator=0x51ac8f0, argc=5, argv=0x2fb4c090) at schnapp.inc:84
#616 0x0039ec7a in ?? ()
[...]
#755 0x003f5760 in ?? ()
#756 0x0004fa86 in scheme_do_eval (obj=0x0, num_rands=5, rands=0x350090, get_value=-1) at eval.c:9488
#757 0x00050af8 in do_eval_k () at eval.c:8582
#758 0x00040543 in scheme_enlarge_runstack (size=2000, k=0x50a90 <do_eval_k>) at eval.c:669
#759 0x0004e7a2 in scheme_do_eval (obj=0x51ac8f0, num_rands=5, rands=0x350090, get_value=-1) at eval.c:9480
#760 0x00050b58 in _scheme_apply_multi_from_native (rator=0x51ac8f0, argc=5, argv=0x350090) at schnapp.inc:84
#761 0x0039ec7a in ?? ()
[...]
#830 0x0039f860 in ?? ()
#831 0x0004fa86 in scheme_do_eval (obj=0x0, num_rands=1, rands=0xbfffe500, get_value=-1) at eval.c:9488
#832 0x00050b58 in _scheme_apply_multi_from_native (rator=0x3ee2358, argc=1, argv=0xbfffe500) at schnapp.inc:84
#833 0x0039893d in ?? ()
#834 0x0004fa86 in scheme_do_eval (obj=0x0, num_rands=1, rands=0xbfffe500, get_value=-1) at eval.c:9488
#835 0x00075342 in do_call_ec (argc=1, argv=0x350fa4, _for_cc=0x0) at fun.c:4726
#836 0x00075526 in scheme_call_ec (argc=1, argv=0x350fa4) at fun.c:4744
#837 0x0039899f in ?? ()
#838 0x0004fa86 in scheme_do_eval (obj=0x0, num_rands=1, rands=0x350fb0, get_value=-1) at eval.c:9488
#839 0x001eb2dd in apply_values_execute (data=0x6e0c560) at syntax.c:2066
#840 0x0004f18b in scheme_do_eval (obj=0x6e0c550, num_rands=-1, rands=0x0, get_value=-1) at eval.c:9707
#841 0x0010756e in body_one_expr (prefix_plus_expr=0x177e0fe0, argc=0, argv=0x0) at module.c:4575
#842 0x000501de in scheme_do_eval (obj=0x177e0ff0, num_rands=0, rands=0x0, get_value=-1) at eval.c:9642
#843 0x00074478 in scheme_finish_apply_for_prompt (prompt=0x1a55df70, _prompt_tag=0x3608d0, proc=0x177e0ff0, argc=0, argv=0x0) at fun.c:6660
#844 0x00074617 in scheme_apply_for_prompt (prompt=0x1a55df70, prompt_tag=0x3608d0, proc=0x177e0ff0, argc=0, argv=0x0) at fun.c:6739
#845 0x00082ca1 in call_with_prompt (in_argc=3, in_argv=0xbfffed40) at fun.c:7064
#846 0x0004fbff in scheme_do_eval (obj=0x1200210, num_rands=3, rands=0xbfffed40, get_value=-1) at eval.c:9229
#847 0x000798d9 in do_call_with_prompt (f=<value temporarily unavailable, due to optimizations>, data=<value temporarily unavailable, due to optimizations>, multi=1, top_level=0) at fun.c:7256
#848 0x00107264 in scheme_module_run_finish (menv=0x6e04af0, env=0x3611b8) at module.c:4674
#849 0x003473a3 in ?? ()
#850 0x000a41b6 in scheme_module_run_start (menv=0x6e04af0, env=0x3611b8, name=0x177e1030) at jit.c:14901
#851 0x000f4c6a in scheme_get_thread_local_variables [inlined] () at /Users/clklein/git/plt/src/racket/include/schthread.h:4564
#852 0x000f4c6a in eval_module_body (menv=0x6e04af0, env=0x3611b8) at module.c:4565
#853 0x000f4d81 in do_start_module (m=0x6e04b88, menv=0x6e04af0, env=0x3611b8, restart=0) at module.c:4376
#854 0x000fc506 in start_module (m=0x6e04b88, env=0x3611b8, restart=0, syntax_idx=0x6e04ac0, eval_exp=-1, eval_run=1, base_phase=0, cycle_list=0x28c890) at module.c:4467
#855 0x000fcd48 in parse_requires (form=0x6e04c78, base_modidx=0x2747f8, main_env=0x3611b8, for_m=0x0, rn_set=0x6e04c58, post_ex_rn_set=0x0, ck=0, data=0x0, redef_modname=0x0, unpack_kern=1, copy_vars=0, can_save_marshal=0, eval_exp=-1, eval_run=1, all_simple=0x0) at module.c:9649
#856 0x000fe69a in scheme_get_thread_local_variables [inlined] () at /Users/clklein/git/plt/src/racket/include/schthread.h:1219
#857 0x000fe69a in do_namespace_require (env=0x3611b8, argc=<value temporarily unavailable, due to optimizations>, argv=0xbffff64c, copy=0, etonly=0) at module.c:1227
#858 0x0004fbff in scheme_do_eval (obj=0x1202670, num_rands=1, rands=0xbffff64c, get_value=1) at eval.c:9229
#859 0x000761a4 in apply_k () at fun.c:2469
#860 0x00076bd3 in scheme_top_level_do_worker (k=0x760f0 <apply_k>, eb=1, new_thread=0, dyn_state=0x0) at fun.c:2308
#861 0x000776d8 in scheme_top_level_do (k=0x760f0 <apply_k>, eb=1) at fun.c:2221
#862 0x00002fcd in finish_cmd_line_run ()
#863 0x000042bb in main_after_stack ()
#864 0x0000bb23 in do_main_stack_setup [inlined] () at /Users/clklein/git/plt/src/racket/src/salloc.c:183
#865 0x0000bb23 in scheme_main_stack_setup (no_auto_statics=1, _main=0x39f0 <main_after_stack>, data=0xbffff8f8) at salloc.c:287
#866 0x00002416 in main ()

|#
>Fix:
>Audit-Trail:
From: Robby Findler <robby@eecs.northwestern.edu>
To: clklein@eecs.northwestern.edu, bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11680: Crash when allocation fails
Date: Sat, 29 Jan 2011 16:41:16 -0600

 The PR system mangles non-ASCII; can you provide an ascii version of
 the program?
 
 Also, does drracket crash if you set the limit lower?
 
 Robby
 
 On Sat, Jan 29, 2011 at 4:36 PM,  <clklein@eecs.northwestern.edu> wrote:
 > A new problem report is waiting at
 > =C2=A0http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D11680
 >
 > Reported by Casey Klein for release: 5.1.0.1--2011-01-29(3250ff8/g)
 >
 > *** Description:
 > The program below reliably crashes DrRacket (and racket too) with the fol=
 lowing message.
 >
 > Couldn't allocate memory: (os/kern) no space available
 > Abort trap (core dumped)
 >
 > It's probably my fault that the program uses so much memory, but it seems=
  wrong for DrRacket to "quit unexpectedly" when I've imposed a 256 MB memor=
 y limit on the program's execution.
 >
 > I can post the core dump if it's useful. (Sorry the program's so large; I=
  was unable to simplify it any more.)
 >
 > *** How to repeat:
 > #lang racket
 >
 > (require redex/examples/cont-mark-transform/randomized-tests
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 redex)
 >
 > (same-result?
 > =C2=A0(term
 > =C2=A0((=E9=AD=8F (hole))
 > =C2=A0 (("")
 > =C2=A0 =C2=A0(w-c-m
 > =C2=A0 =C2=A0 (=E9=AD=8F hole)
 > =C2=A0 =C2=A0 ("KtNhv")
 > =C2=A0 =C2=A0 (w-c-m
 > =C2=A0 =C2=A0 =C2=A0(=E9=AD=8F hole)
 > =C2=A0 =C2=A0 =C2=A0("XivwoYZS" ("euMKKhYR"))
 > =C2=A0 =C2=A0 =C2=A0(w-c-m
 > =C2=A0 =C2=A0 =C2=A0 (=E4=BD=8D (fa j E M E R B B q)
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 (match
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 ("KClMVE" ("g") HD)
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 (("FBtj" I S) (letrec () (call/cc b)))
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 (("SJh" l q Gk i Q R PO m M Vstg o r m=
  n m BL D T xL) (w-c-m F d (call/cc H)))
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 (("SWhGKIy") (w-c-m h Rl (call/cc b)))
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 (("" d) (match Hu))
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 (("P") (match m))
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 (("" z O) (c-c-m ()))
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 (("PtEPXULDNNgauw" Kq) (match a))))
 > =C2=A0 =C2=A0 =C2=A0 ("F"
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0("Y"
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 (""
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(=E4=BD=8D () (call/cc ("abort")))
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(=E4=BD=8D () (call/cc ("c")))
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0("eHFwakB" ("EPSDRGJbbJdsCvSXLNfRXR"))
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0("u")
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(=E4=BD=8D () (call/cc ("match")))
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(=E9=AD=8F hole))
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 ("" (""))
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 (=E4=BD=8D (y t) (w-c-m t y (call/cc t)))
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 ("h" (""))
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 (=E9=AD=8F hole)
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 (=E9=AD=8F hole)
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 (=E4=BD=8D (F F) (letrec () (call/cc F)))
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 ("rRcXmHYrDH" ("KJxDK") ("MDyUkBa")))
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0(=E4=BD=8D (t r L n d J w bD T M U G qaR S Uv)=
  (w-c-m M ("MdTIR") (letrec () (call/cc U))))
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0(=E9=AD=8F hole)
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0("z")
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0("" ("FHVj") ("r"))
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0("uGf" (=E9=AD=8F hole) (=E9=AD=8F hole))
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0(=E9=AD=8F hole))
 > =C2=A0 =C2=A0 =C2=A0 (w-c-m
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0(=E9=AD=8F (w-c-m (ref a) (ref aeL) hole))
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0("PLXnfnlIzSnICmHESyNVb" ("bCXElutWwMAojZcf") =
 ("RuIwbrpd"))
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0(w-c-m
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 ("c" ("") (ref cd))
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 (=E4=BD=8D (JK U D UY L) (letrec () (call/cc =
 JK)))
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 (w-c-m
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0("mJj")
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(=E9=AD=8F hole)
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(w-c-m
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 (ref T)
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 ("f")
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 (w-c-m
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(=E9=AD=8F hole)
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0("klOZL")
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(abort
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 ("Z" ("oab" ("") ("E") ("") ("R=
 xdA")) ("qDEOJYv") ("GsLUAxCTqACmXMiOfJkX") ("NMyo")))))))))))))))
 >
 > #|
 >
 > #0 =C2=A00x9502f176 in __kill ()
 > (gdb) bt
 > #0 =C2=A00x9502f176 in __kill ()
 > #1 =C2=A00x9502f168 in kill$UNIX2003 ()
 > #2 =C2=A00x950c189d in raise ()
 > #3 =C2=A00x950d79bc in abort ()
 > #4 =C2=A00x0022b4ed in malloc_pages (gc=3D<value temporarily unavailable,=
  due to optimizations>, len=3D<value temporarily unavailable, due to optimi=
 zations>, alignment=3D<value temporarily unavailable, due to optimizations>=
 , dirty=3D<value temporarily unavailable, due to optimizations>, type=3DCou=
 ld not find the frame base for "malloc_pages".
 > ) at vm_osx.c:183
 > #5 =C2=A00x0022caf3 in allocate_big (request_size_bytes=3D16384, type=3D2=
 ) at newgc.c:818
 > #6 =C2=A00x0008f40e in do_hash (table=3D0x5352170, key=3D0xfe7a76a8, set=
 =3D2, val=3D0xf67c0998) at hash.c:272
 > #7 =C2=A00x0008fa87 in scheme_hash_set (table=3D0x5352170, key=3D0xfe7a76=
 a8, val=3D0xf67c0998) at hash.c:339
 > #8 =C2=A00x0001159b in union_check (obj1=3D0xf67c0998, obj2=3D0xfe7a76a8,=
  eql=3D0xbfff05ec) at bool.c:317
 > #9 =C2=A00x000121fc in is_equal (obj1=3D0xf67c0998, obj2=3D0xfe7a76a8, eq=
 l=3D<value temporarily unavailable, due to optimizations>) at bool.c:404
 > #10 0x00012232 in is_equal (obj1=3D0xf67c0958, obj2=3D0xfe7a7668, eql=3D0=
 xbfff05ec) at bool.c:408
 > #11 0x00012232 in is_equal (obj1=3D0xf67c0928, obj2=3D0xfe7a7638, eql=3D0=
 xbfff05ec) at bool.c:408
 > #12 0x00012232 in is_equal (obj1=3D0xf67c08f8, obj2=3D0xfe7a7608, eql=3D0=
 xbfff05ec) at bool.c:408
 > #13 0x00012232 in is_equal (obj1=3D0xf67c08d8, obj2=3D0xfe7a75e8, eql=3D0=
 xbfff05ec) at bool.c:408
 > #14 0x00012232 in is_equal (obj1=3D0xf6774ae0, obj2=3D0x396d6c60, eql=3D0=
 xbfff05ec) at bool.c:408
 > #15 0x00012232 in is_equal (obj1=3D0xf6774aa0, obj2=3D0x396d6c20, eql=3D0=
 xbfff05ec) at bool.c:408
 > #16 0x00012232 in is_equal (obj1=3D0xf6774a40, obj2=3D0x396d6bc0, eql=3D0=
 xbfff05ec) at bool.c:408
 > #17 0x00012232 in is_equal (obj1=3D0xf67749e0, obj2=3D0x396d6b60, eql=3D0=
 xbfff05ec) at bool.c:408
 > #18 0x00012232 in is_equal (obj1=3D0xf6774980, obj2=3D0x396d6b00, eql=3D0=
 xbfff05ec) at bool.c:408
 > #19 0x00012232 in is_equal (obj1=3D0xf6774920, obj2=3D0x396d6aa0, eql=3D0=
 xbfff05ec) at bool.c:408
 > #20 0x00012232 in is_equal (obj1=3D0x38595488, obj2=3D0x52f40b8, eql=3D0x=
 bfff05ec) at bool.c:408
 > #21 0x0001346e in scheme_get_thread_local_variables [inlined] () at /User=
 s/clklein/git/plt/src/racket/include/schthread.h:274
 > #22 0x0001346e in scheme_equal (obj1=3D0x38595488, obj2=3D0x52f40b8) at b=
 ool.c:274
 > #23 0x000ea228 in compare_equal (v1=3D0x38595488, v2=3D0x52f40b8) at list=
 .c:1705
 > #24 0x0008f2ca in do_hash (table=3D0xd3aebc68, key=3D0x52f40b8, set=3D2, =
 val=3D0x5352100) at hash.c:212
 > #25 0x0008f7b4 in scheme_get_thread_local_variables [inlined] () at /User=
 s/clklein/git/plt/src/racket/include/schthread.h:394
 > #26 0x0008f7b4 in scheme_hash_set (table=3D0xd3aebc68, key=3D0x52f40b8, v=
 al=3D0x5352100) at hash.c:397
 > #27 0x000ec7a9 in hash_table_put_bang (argc=3D3, argv=3D0x6d884338) at li=
 st.c:2175
 > #28 0x003a2fed in ?? ()
 > #29 0x0039fc50 in ?? ()
 > #30 0x0039fc50 in ?? ()
 > #31 0x0039fc50 in ?? ()
 > #32 0x003e458f in ?? ()
 > #33 0x003e458f in ?? ()
 > #34 0x003e458f in ?? ()
 > #35 0x0004fa86 in scheme_do_eval (obj=3D0x0, num_rands=3D1, rands=3D0xbff=
 f0b70, get_value=3D-1) at eval.c:9488
 > #36 0x00075342 in do_call_ec (argc=3D1, argv=3D0x6d884464, _for_cc=3D0x0)=
  at fun.c:4726
 > #37 0x00075526 in scheme_call_ec (argc=3D1, argv=3D0x6d884464) at fun.c:4=
 744
 > #38 0x0039899f in ?? ()
 > [...]
 > #49 0x003e458f in ?? ()
 > #50 0x0004fa86 in scheme_do_eval (obj=3D0x0, num_rands=3D1, rands=3D0xbff=
 f10d0, get_value=3D-1) at eval.c:9488
 > #51 0x00075342 in do_call_ec (argc=3D1, argv=3D0x6d884608, _for_cc=3D0x0)=
  at fun.c:4726
 > #52 0x00075526 in scheme_call_ec (argc=3D1, argv=3D0x6d884608) at fun.c:4=
 744
 > #53 0x0039899f in ?? ()
 > #54 0x003a55a0 in ?? ()
 > #55 0x0039fc50 in ?? ()
 > #56 0x0039fc50 in ?? ()
 > #57 0x0039fc50 in ?? ()
 > #58 0x0039fc50 in ?? ()
 > #59 0x003e458f in ?? ()
 > #60 0x003e458f in ?? ()
 > #61 0x0004fa86 in scheme_do_eval (obj=3D0x0, num_rands=3D1, rands=3D0xbff=
 f1530, get_value=3D-1) at eval.c:9488
 > #62 0x00075342 in do_call_ec (argc=3D1, argv=3D0x6d88471c, _for_cc=3D0x0)=
  at fun.c:4726
 > #63 0x00075526 in scheme_call_ec (argc=3D1, argv=3D0x6d88471c) at fun.c:4=
 744
 > #64 0x0039899f in ?? ()
 > #65 0x003a55a0 in ?? ()
 > #66 0x0039fc50 in ?? ()
 > #67 0x0039fc50 in ?? ()
 > #68 0x0004fa86 in scheme_do_eval (obj=3D0x0, num_rands=3D2, rands=3D0x494=
 c2d0, get_value=3D-1) at eval.c:9488
 > #69 0x00085be0 in scheme_apply_chaperone (o=3D<value temporarily unavaila=
 ble, due to optimizations>, argc=3D2, argv=3D0x6d88477c, auto_val=3D0x0) at=
  fun.c:4390
 > #70 0x0004f5ab in scheme_do_eval (obj=3D0x15c1158, num_rands=3D2, rands=
 =3D0x6d88477c, get_value=3D1) at eval.c:9621
 > #71 0x00050ce8 in _scheme_apply_from_native (rator=3D0x15c1158, argc=3D2,=
  argv=3D0x6d88477c) at schnapp.inc:74
 > #72 0x0039ff3f in ?? ()
 > #73 0x017d0860 in ?? ()
 > #74 0x017d0860 in ?? ()
 > #75 0x003a5920 in ?? ()
 > #76 0x0004fa86 in scheme_do_eval (obj=3D0x0, num_rands=3D2, rands=3D0xfe7=
 5a428, get_value=3D-1) at eval.c:9488
 > #77 0x00085be0 in scheme_apply_chaperone (o=3D<value temporarily unavaila=
 ble, due to optimizations>, argc=3D2, argv=3D0x6d884804, auto_val=3D0x0) at=
  fun.c:4390
 > #78 0x0004f5ab in scheme_do_eval (obj=3D0x177e0ef8, num_rands=3D2, rands=
 =3D0x6d884804, get_value=3D1) at eval.c:9621
 > #79 0x00050ce8 in _scheme_apply_from_native (rator=3D0x177e0ef8, argc=3D2=
 , argv=3D0x6d884804) at schnapp.inc:74
 > #80 0x0039ff3f in ?? ()
 > [...]
 > #322 0x003f5760 in ?? ()
 > #323 0x0004fa86 in scheme_do_eval (obj=3D0x0, num_rands=3D5, rands=3D0x28=
 de4088, get_value=3D-1) at eval.c:9488
 > #324 0x00050af8 in do_eval_k () at eval.c:8582
 > #325 0x00040543 in scheme_enlarge_runstack (size=3D8000, k=3D0x50a90 <do_=
 eval_k>) at eval.c:669
 > #326 0x0004e7a2 in scheme_do_eval (obj=3D0x51ac8f0, num_rands=3D5, rands=
 =3D0x28de4088, get_value=3D-1) at eval.c:9480
 > #327 0x00050b58 in _scheme_apply_multi_from_native (rator=3D0x51ac8f0, ar=
 gc=3D5, argv=3D0x28de4088) at schnapp.inc:84
 > #328 0x0039ec7a in ?? ()
 > [...]
 > #610 0x003f5760 in ?? ()
 > #611 0x0004fa86 in scheme_do_eval (obj=3D0x0, num_rands=3D5, rands=3D0x2f=
 b4c090, get_value=3D-1) at eval.c:9488
 > #612 0x00050af8 in do_eval_k () at eval.c:8582
 > #613 0x00040543 in scheme_enlarge_runstack (size=3D4000, k=3D0x50a90 <do_=
 eval_k>) at eval.c:669
 > #614 0x0004e7a2 in scheme_do_eval (obj=3D0x51ac8f0, num_rands=3D5, rands=
 =3D0x2fb4c090, get_value=3D-1) at eval.c:9480
 > #615 0x00050b58 in _scheme_apply_multi_from_native (rator=3D0x51ac8f0, ar=
 gc=3D5, argv=3D0x2fb4c090) at schnapp.inc:84
 > #616 0x0039ec7a in ?? ()
 > [...]
 > #755 0x003f5760 in ?? ()
 > #756 0x0004fa86 in scheme_do_eval (obj=3D0x0, num_rands=3D5, rands=3D0x35=
 0090, get_value=3D-1) at eval.c:9488
 > #757 0x00050af8 in do_eval_k () at eval.c:8582
 > #758 0x00040543 in scheme_enlarge_runstack (size=3D2000, k=3D0x50a90 <do_=
 eval_k>) at eval.c:669
 > #759 0x0004e7a2 in scheme_do_eval (obj=3D0x51ac8f0, num_rands=3D5, rands=
 =3D0x350090, get_value=3D-1) at eval.c:9480
 > #760 0x00050b58 in _scheme_apply_multi_from_native (rator=3D0x51ac8f0, ar=
 gc=3D5, argv=3D0x350090) at schnapp.inc:84
 > #761 0x0039ec7a in ?? ()
 > [...]
 > #830 0x0039f860 in ?? ()
 > #831 0x0004fa86 in scheme_do_eval (obj=3D0x0, num_rands=3D1, rands=3D0xbf=
 ffe500, get_value=3D-1) at eval.c:9488
 > #832 0x00050b58 in _scheme_apply_multi_from_native (rator=3D0x3ee2358, ar=
 gc=3D1, argv=3D0xbfffe500) at schnapp.inc:84
 > #833 0x0039893d in ?? ()
 > #834 0x0004fa86 in scheme_do_eval (obj=3D0x0, num_rands=3D1, rands=3D0xbf=
 ffe500, get_value=3D-1) at eval.c:9488
 > #835 0x00075342 in do_call_ec (argc=3D1, argv=3D0x350fa4, _for_cc=3D0x0) =
 at fun.c:4726
 > #836 0x00075526 in scheme_call_ec (argc=3D1, argv=3D0x350fa4) at fun.c:47=
 44
 > #837 0x0039899f in ?? ()
 > #838 0x0004fa86 in scheme_do_eval (obj=3D0x0, num_rands=3D1, rands=3D0x35=
 0fb0, get_value=3D-1) at eval.c:9488
 > #839 0x001eb2dd in apply_values_execute (data=3D0x6e0c560) at syntax.c:20=
 66
 > #840 0x0004f18b in scheme_do_eval (obj=3D0x6e0c550, num_rands=3D-1, rands=
 =3D0x0, get_value=3D-1) at eval.c:9707
 > #841 0x0010756e in body_one_expr (prefix_plus_expr=3D0x177e0fe0, argc=3D0=
 , argv=3D0x0) at module.c:4575
 > #842 0x000501de in scheme_do_eval (obj=3D0x177e0ff0, num_rands=3D0, rands=
 =3D0x0, get_value=3D-1) at eval.c:9642
 > #843 0x00074478 in scheme_finish_apply_for_prompt (prompt=3D0x1a55df70, _=
 prompt_tag=3D0x3608d0, proc=3D0x177e0ff0, argc=3D0, argv=3D0x0) at fun.c:66=
 60
 > #844 0x00074617 in scheme_apply_for_prompt (prompt=3D0x1a55df70, prompt_t=
 ag=3D0x3608d0, proc=3D0x177e0ff0, argc=3D0, argv=3D0x0) at fun.c:6739
 > #845 0x00082ca1 in call_with_prompt (in_argc=3D3, in_argv=3D0xbfffed40) a=
 t fun.c:7064
 > #846 0x0004fbff in scheme_do_eval (obj=3D0x1200210, num_rands=3D3, rands=
 =3D0xbfffed40, get_value=3D-1) at eval.c:9229
 > #847 0x000798d9 in do_call_with_prompt (f=3D<value temporarily unavailabl=
 e, due to optimizations>, data=3D<value temporarily unavailable, due to opt=
 imizations>, multi=3D1, top_level=3D0) at fun.c:7256
 > #848 0x00107264 in scheme_module_run_finish (menv=3D0x6e04af0, env=3D0x36=
 11b8) at module.c:4674
 > #849 0x003473a3 in ?? ()
 > #850 0x000a41b6 in scheme_module_run_start (menv=3D0x6e04af0, env=3D0x361=
 1b8, name=3D0x177e1030) at jit.c:14901
 > #851 0x000f4c6a in scheme_get_thread_local_variables [inlined] () at /Use=
 rs/clklein/git/plt/src/racket/include/schthread.h:4564
 > #852 0x000f4c6a in eval_module_body (menv=3D0x6e04af0, env=3D0x3611b8) at=
  module.c:4565
 > #853 0x000f4d81 in do_start_module (m=3D0x6e04b88, menv=3D0x6e04af0, env=
 =3D0x3611b8, restart=3D0) at module.c:4376
 > #854 0x000fc506 in start_module (m=3D0x6e04b88, env=3D0x3611b8, restart=
 =3D0, syntax_idx=3D0x6e04ac0, eval_exp=3D-1, eval_run=3D1, base_phase=3D0, =
 cycle_list=3D0x28c890) at module.c:4467
 > #855 0x000fcd48 in parse_requires (form=3D0x6e04c78, base_modidx=3D0x2747=
 f8, main_env=3D0x3611b8, for_m=3D0x0, rn_set=3D0x6e04c58, post_ex_rn_set=3D=
 0x0, ck=3D0, data=3D0x0, redef_modname=3D0x0, unpack_kern=3D1, copy_vars=3D=
 0, can_save_marshal=3D0, eval_exp=3D-1, eval_run=3D1, all_simple=3D0x0) at =
 module.c:9649
 > #856 0x000fe69a in scheme_get_thread_local_variables [inlined] () at /Use=
 rs/clklein/git/plt/src/racket/include/schthread.h:1219
 > #857 0x000fe69a in do_namespace_require (env=3D0x3611b8, argc=3D<value te=
 mporarily unavailable, due to optimizations>, argv=3D0xbffff64c, copy=3D0, =
 etonly=3D0) at module.c:1227
 > #858 0x0004fbff in scheme_do_eval (obj=3D0x1202670, num_rands=3D1, rands=
 =3D0xbffff64c, get_value=3D1) at eval.c:9229
 > #859 0x000761a4 in apply_k () at fun.c:2469
 > #860 0x00076bd3 in scheme_top_level_do_worker (k=3D0x760f0 <apply_k>, eb=
 =3D1, new_thread=3D0, dyn_state=3D0x0) at fun.c:2308
 > #861 0x000776d8 in scheme_top_level_do (k=3D0x760f0 <apply_k>, eb=3D1) at=
  fun.c:2221
 > #862 0x00002fcd in finish_cmd_line_run ()
 > #863 0x000042bb in main_after_stack ()
 > #864 0x0000bb23 in do_main_stack_setup [inlined] () at /Users/clklein/git=
 /plt/src/racket/src/salloc.c:183
 > #865 0x0000bb23 in scheme_main_stack_setup (no_auto_statics=3D1, _main=3D=
 0x39f0 <main_after_stack>, data=3D0xbffff8f8) at salloc.c:287
 > #866 0x00002416 in main ()
 >
 > |#
 >
 > *** Environment:
 > macosx "Darwin spaghetti.cs.northwestern.edu 10.5.0 Darwin Kernel Version=
  10.5.0: Fri Nov =C2=A05 23:20:39 PDT 2010; root:xnu-1504.9.17~1/RELEASE_I3=
 86 i386" (i386-macosx/3m) (get-display-depth) =3D 32
 > Human Language: english
 > (current-memory-use) 143141748
 >
 > Collections:
 > ("/Users/clklein/Library/Racket/5.1.0.1/collects"
 > =C2=A0(non-existent-path))
 > ("/Users/clklein/git/plt/collects"
 > =C2=A0(".gitignore" "2htdp" "algol60" "at-exp" "browser" "combinator-pars=
 er" "compiler" "config" "data" "datalog" "defaults" "deinprogramm" "drracke=
 t" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "fra=
 mework" "frtime" "games" "graphics" "gui-debugger" "guibuilder" "handin-cli=
 ent" "handin-server" "help" "hierlist" "honu" "htdp" "html" "icons" "info-d=
 omain" "lang" "launcher" "lazy" "macro-debugger" "make" "meta" "mred" "mrli=
 b" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "pic=
 turing-programs" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6=
 rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "redex" "repo-=
 time-stamp" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "=
 scriblib" "setup" "sgl" "sirmail" "slatex" "slideshow" "srfi" "srpersist" "=
 stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "=
 test-box-recovery" "test-engine" "tests" "tex2page" "texpict" "trace" "type=
 d" "typed-scheme" "un!
 > =C2=A0stable" "version" "waterworld" "web-server" "wxme" "xml"))
 >
 > Computer Language: (("Determine language from source") (#(#t quasiquote m=
 ixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t))
 >
 >

From: Casey Klein <clklein@eecs.northwestern.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: bugs <bugs@racket-lang.org>, nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/11680: Crash when allocation fails
Date: Sat, 29 Jan 2011 16:52:48 -0600

 On Sat, Jan 29, 2011 at 4:41 PM, Robby Findler
 <robby@eecs.northwestern.edu> wrote:
 > The PR system mangles non-ASCII; can you provide an ascii version of
 > the program?
 
 Not easily (it would require changing the Redex model), but I've
 uploaded the program as an attachment, and it does not appear mangled.
 
 > Also, does drracket crash if you set the limit lower?
 
 DrRacket stops the program gracefully when the memory limit is 128 MB.
 For all I know, though, the program doesn't get very far with this
 tighter limit.
 
 > Robby
 >
 > On Sat, Jan 29, 2011 at 4:36 PM,  <clklein@eecs.northwestern.edu> wrote:
 >> A new problem report is waiting at
 >>  http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D11680
 >>
 >> Reported by Casey Klein for release: 5.1.0.1--2011-01-29(3250ff8/g)
 >>
 >> *** Description:
 >> The program below reliably crashes DrRacket (and racket too) with the fo=
 llowing message.
 >>
 >> Couldn't allocate memory: (os/kern) no space available
 >> Abort trap (core dumped)
 >>
 >> It's probably my fault that the program uses so much memory, but it seem=
 s wrong for DrRacket to "quit unexpectedly" when I've imposed a 256 MB memo=
 ry limit on the program's execution.
 >>
 >> I can post the core dump if it's useful. (Sorry the program's so large; =
 I was unable to simplify it any more.)
 >>
 >> *** How to repeat:
 >> #lang racket
 >>
 >> (require redex/examples/cont-mark-transform/randomized-tests
 >>         redex)
 >>
 >> (same-result?
 >>  (term
 >>  ((=C3Q (hole))
 >>   (("")
 >>    (w-c-m
 >>     (=C3Q hole)
 >>     ("KtNhv")
 >>     (w-c-m
 >>      (=C3Q hole)
 >>      ("XivwoYZS" ("euMKKhYR"))
 >>      (w-c-m
 >>       (=A6=EC (fa j E M E R B B q)
 >>         (match
 >>             ("KClMVE" ("g") HD)
 >>           (("FBtj" I S) (letrec () (call/cc b)))
 >>           (("SJh" l q Gk i Q R PO m M Vstg o r m n m BL D T xL) (w-c-m F=
  d (call/cc H)))
 >>           (("SWhGKIy") (w-c-m h Rl (call/cc b)))
 >>           (("" d) (match Hu))
 >>           (("P") (match m))
 >>           (("" z O) (c-c-m ()))
 >>           (("PtEPXULDNNgauw" Kq) (match a))))
 >>       ("F"
 >>        ("Y"
 >>         (""
 >>          (=A6=EC () (call/cc ("abort")))
 >>          (=A6=EC () (call/cc ("c")))
 >>          ("eHFwakB" ("EPSDRGJbbJdsCvSXLNfRXR"))
 >>          ("u")
 >>          (=A6=EC () (call/cc ("match")))
 >>          (=C3Q hole))
 >>         ("" (""))
 >>         (=A6=EC (y t) (w-c-m t y (call/cc t)))
 >>         ("h" (""))
 >>         (=C3Q hole)
 >>         (=C3Q hole)
 >>         (=A6=EC (F F) (letrec () (call/cc F)))
 >>         ("rRcXmHYrDH" ("KJxDK") ("MDyUkBa")))
 >>        (=A6=EC (t r L n d J w bD T M U G qaR S Uv) (w-c-m M ("MdTIR") (l=
 etrec () (call/cc U))))
 >>        (=C3Q hole)
 >>        ("z")
 >>        ("" ("FHVj") ("r"))
 >>        ("uGf" (=C3Q hole) (=C3Q hole))
 >>        (=C3Q hole))
 >>       (w-c-m
 >>        (=C3Q (w-c-m (ref a) (ref aeL) hole))
 >>        ("PLXnfnlIzSnICmHESyNVb" ("bCXElutWwMAojZcf") ("RuIwbrpd"))
 >>        (w-c-m
 >>         ("c" ("") (ref cd))
 >>         (=A6=EC (JK U D UY L) (letrec () (call/cc JK)))
 >>         (w-c-m
 >>          ("mJj")
 >>          (=C3Q hole)
 >>          (w-c-m
 >>           (ref T)
 >>           ("f")
 >>           (w-c-m
 >>            (=C3Q hole)
 >>            ("klOZL")
 >>            (abort
 >>             ("Z" ("oab" ("") ("E") ("") ("RxdA")) ("qDEOJYv") ("GsLUAxCT=
 qACmXMiOfJkX") ("NMyo")))))))))))))))
 >>
 >> #|
 >>
 >> #0  0x9502f176 in __kill ()
 >> (gdb) bt
 >> #0  0x9502f176 in __kill ()
 >> #1  0x9502f168 in kill$UNIX2003 ()
 >> #2  0x950c189d in raise ()
 >> #3  0x950d79bc in abort ()
 >> #4  0x0022b4ed in malloc_pages (gc=3D<value temporarily unavailable, due=
  to optimizations>, len=3D<value temporarily unavailable, due to optimizati=
 ons>, alignment=3D<value temporarily unavailable, due to optimizations>, di=
 rty=3D<value temporarily unavailable, due to optimizations>, type=3DCould n=
 ot find the frame base for "malloc_pages".
 >> ) at vm_osx.c:183
 >> #5  0x0022caf3 in allocate_big (request_size_bytes=3D16384, type=3D2) at=
  newgc.c:818
 >> #6  0x0008f40e in do_hash (table=3D0x5352170, key=3D0xfe7a76a8, set=3D2,=
  val=3D0xf67c0998) at hash.c:272
 >> #7  0x0008fa87 in scheme_hash_set (table=3D0x5352170, key=3D0xfe7a76a8, =
 val=3D0xf67c0998) at hash.c:339
 >> #8  0x0001159b in union_check (obj1=3D0xf67c0998, obj2=3D0xfe7a76a8, eql=
 =3D0xbfff05ec) at bool.c:317
 >> #9  0x000121fc in is_equal (obj1=3D0xf67c0998, obj2=3D0xfe7a76a8, eql=3D=
 <value temporarily unavailable, due to optimizations>) at bool.c:404
 >> #10 0x00012232 in is_equal (obj1=3D0xf67c0958, obj2=3D0xfe7a7668, eql=3D=
 0xbfff05ec) at bool.c:408
 >> #11 0x00012232 in is_equal (obj1=3D0xf67c0928, obj2=3D0xfe7a7638, eql=3D=
 0xbfff05ec) at bool.c:408
 >> #12 0x00012232 in is_equal (obj1=3D0xf67c08f8, obj2=3D0xfe7a7608, eql=3D=
 0xbfff05ec) at bool.c:408
 >> #13 0x00012232 in is_equal (obj1=3D0xf67c08d8, obj2=3D0xfe7a75e8, eql=3D=
 0xbfff05ec) at bool.c:408
 >> #14 0x00012232 in is_equal (obj1=3D0xf6774ae0, obj2=3D0x396d6c60, eql=3D=
 0xbfff05ec) at bool.c:408
 >> #15 0x00012232 in is_equal (obj1=3D0xf6774aa0, obj2=3D0x396d6c20, eql=3D=
 0xbfff05ec) at bool.c:408
 >> #16 0x00012232 in is_equal (obj1=3D0xf6774a40, obj2=3D0x396d6bc0, eql=3D=
 0xbfff05ec) at bool.c:408
 >> #17 0x00012232 in is_equal (obj1=3D0xf67749e0, obj2=3D0x396d6b60, eql=3D=
 0xbfff05ec) at bool.c:408
 >> #18 0x00012232 in is_equal (obj1=3D0xf6774980, obj2=3D0x396d6b00, eql=3D=
 0xbfff05ec) at bool.c:408
 >> #19 0x00012232 in is_equal (obj1=3D0xf6774920, obj2=3D0x396d6aa0, eql=3D=
 0xbfff05ec) at bool.c:408
 >> #20 0x00012232 in is_equal (obj1=3D0x38595488, obj2=3D0x52f40b8, eql=3D0=
 xbfff05ec) at bool.c:408
 >> #21 0x0001346e in scheme_get_thread_local_variables [inlined] () at /Use=
 rs/clklein/git/plt/src/racket/include/schthread.h:274
 >> #22 0x0001346e in scheme_equal (obj1=3D0x38595488, obj2=3D0x52f40b8) at =
 bool.c:274
 >> #23 0x000ea228 in compare_equal (v1=3D0x38595488, v2=3D0x52f40b8) at lis=
 t.c:1705
 >> #24 0x0008f2ca in do_hash (table=3D0xd3aebc68, key=3D0x52f40b8, set=3D2,=
  val=3D0x5352100) at hash.c:212
 >> #25 0x0008f7b4 in scheme_get_thread_local_variables [inlined] () at /Use=
 rs/clklein/git/plt/src/racket/include/schthread.h:394
 >> #26 0x0008f7b4 in scheme_hash_set (table=3D0xd3aebc68, key=3D0x52f40b8, =
 val=3D0x5352100) at hash.c:397
 >> #27 0x000ec7a9 in hash_table_put_bang (argc=3D3, argv=3D0x6d884338) at l=
 ist.c:2175
 >> #28 0x003a2fed in ?? ()
 >> #29 0x0039fc50 in ?? ()
 >> #30 0x0039fc50 in ?? ()
 >> #31 0x0039fc50 in ?? ()
 >> #32 0x003e458f in ?? ()
 >> #33 0x003e458f in ?? ()
 >> #34 0x003e458f in ?? ()
 >> #35 0x0004fa86 in scheme_do_eval (obj=3D0x0, num_rands=3D1, rands=3D0xbf=
 ff0b70, get_value=3D-1) at eval.c:9488
 >> #36 0x00075342 in do_call_ec (argc=3D1, argv=3D0x6d884464, _for_cc=3D0x0=
 ) at fun.c:4726
 >> #37 0x00075526 in scheme_call_ec (argc=3D1, argv=3D0x6d884464) at fun.c:=
 4744
 >> #38 0x0039899f in ?? ()
 >> [...]
 >> #49 0x003e458f in ?? ()
 >> #50 0x0004fa86 in scheme_do_eval (obj=3D0x0, num_rands=3D1, rands=3D0xbf=
 ff10d0, get_value=3D-1) at eval.c:9488
 >> #51 0x00075342 in do_call_ec (argc=3D1, argv=3D0x6d884608, _for_cc=3D0x0=
 ) at fun.c:4726
 >> #52 0x00075526 in scheme_call_ec (argc=3D1, argv=3D0x6d884608) at fun.c:=
 4744
 >> #53 0x0039899f in ?? ()
 >> #54 0x003a55a0 in ?? ()
 >> #55 0x0039fc50 in ?? ()
 >> #56 0x0039fc50 in ?? ()
 >> #57 0x0039fc50 in ?? ()
 >> #58 0x0039fc50 in ?? ()
 >> #59 0x003e458f in ?? ()
 >> #60 0x003e458f in ?? ()
 >> #61 0x0004fa86 in scheme_do_eval (obj=3D0x0, num_rands=3D1, rands=3D0xbf=
 ff1530, get_value=3D-1) at eval.c:9488
 >> #62 0x00075342 in do_call_ec (argc=3D1, argv=3D0x6d88471c, _for_cc=3D0x0=
 ) at fun.c:4726
 >> #63 0x00075526 in scheme_call_ec (argc=3D1, argv=3D0x6d88471c) at fun.c:=
 4744
 >> #64 0x0039899f in ?? ()
 >> #65 0x003a55a0 in ?? ()
 >> #66 0x0039fc50 in ?? ()
 >> #67 0x0039fc50 in ?? ()
 >> #68 0x0004fa86 in scheme_do_eval (obj=3D0x0, num_rands=3D2, rands=3D0x49=
 4c2d0, get_value=3D-1) at eval.c:9488
 >> #69 0x00085be0 in scheme_apply_chaperone (o=3D<value temporarily unavail=
 able, due to optimizations>, argc=3D2, argv=3D0x6d88477c, auto_val=3D0x0) a=
 t fun.c:4390
 >> #70 0x0004f5ab in scheme_do_eval (obj=3D0x15c1158, num_rands=3D2, rands=
 =3D0x6d88477c, get_value=3D1) at eval.c:9621
 >> #71 0x00050ce8 in _scheme_apply_from_native (rator=3D0x15c1158, argc=3D2=
 , argv=3D0x6d88477c) at schnapp.inc:74
 >> #72 0x0039ff3f in ?? ()
 >> #73 0x017d0860 in ?? ()
 >> #74 0x017d0860 in ?? ()
 >> #75 0x003a5920 in ?? ()
 >> #76 0x0004fa86 in scheme_do_eval (obj=3D0x0, num_rands=3D2, rands=3D0xfe=
 75a428, get_value=3D-1) at eval.c:9488
 >> #77 0x00085be0 in scheme_apply_chaperone (o=3D<value temporarily unavail=
 able, due to optimizations>, argc=3D2, argv=3D0x6d884804, auto_val=3D0x0) a=
 t fun.c:4390
 >> #78 0x0004f5ab in scheme_do_eval (obj=3D0x177e0ef8, num_rands=3D2, rands=
 =3D0x6d884804, get_value=3D1) at eval.c:9621
 >> #79 0x00050ce8 in _scheme_apply_from_native (rator=3D0x177e0ef8, argc=3D=
 2, argv=3D0x6d884804) at schnapp.inc:74
 >> #80 0x0039ff3f in ?? ()
 >> [...]
 >> #322 0x003f5760 in ?? ()
 >> #323 0x0004fa86 in scheme_do_eval (obj=3D0x0, num_rands=3D5, rands=3D0x2=
 8de4088, get_value=3D-1) at eval.c:9488
 >> #324 0x00050af8 in do_eval_k () at eval.c:8582
 >> #325 0x00040543 in scheme_enlarge_runstack (size=3D8000, k=3D0x50a90 <do=
 _eval_k>) at eval.c:669
 >> #326 0x0004e7a2 in scheme_do_eval (obj=3D0x51ac8f0, num_rands=3D5, rands=
 =3D0x28de4088, get_value=3D-1) at eval.c:9480
 >> #327 0x00050b58 in _scheme_apply_multi_from_native (rator=3D0x51ac8f0, a=
 rgc=3D5, argv=3D0x28de4088) at schnapp.inc:84
 >> #328 0x0039ec7a in ?? ()
 >> [...]
 >> #610 0x003f5760 in ?? ()
 >> #611 0x0004fa86 in scheme_do_eval (obj=3D0x0, num_rands=3D5, rands=3D0x2=
 fb4c090, get_value=3D-1) at eval.c:9488
 >> #612 0x00050af8 in do_eval_k () at eval.c:8582
 >> #613 0x00040543 in scheme_enlarge_runstack (size=3D4000, k=3D0x50a90 <do=
 _eval_k>) at eval.c:669
 >> #614 0x0004e7a2 in scheme_do_eval (obj=3D0x51ac8f0, num_rands=3D5, rands=
 =3D0x2fb4c090, get_value=3D-1) at eval.c:9480
 >> #615 0x00050b58 in _scheme_apply_multi_from_native (rator=3D0x51ac8f0, a=
 rgc=3D5, argv=3D0x2fb4c090) at schnapp.inc:84
 >> #616 0x0039ec7a in ?? ()
 >> [...]
 >> #755 0x003f5760 in ?? ()
 >> #756 0x0004fa86 in scheme_do_eval (obj=3D0x0, num_rands=3D5, rands=3D0x3=
 50090, get_value=3D-1) at eval.c:9488
 >> #757 0x00050af8 in do_eval_k () at eval.c:8582
 >> #758 0x00040543 in scheme_enlarge_runstack (size=3D2000, k=3D0x50a90 <do=
 _eval_k>) at eval.c:669
 >> #759 0x0004e7a2 in scheme_do_eval (obj=3D0x51ac8f0, num_rands=3D5, rands=
 =3D0x350090, get_value=3D-1) at eval.c:9480
 >> #760 0x00050b58 in _scheme_apply_multi_from_native (rator=3D0x51ac8f0, a=
 rgc=3D5, argv=3D0x350090) at schnapp.inc:84
 >> #761 0x0039ec7a in ?? ()
 >> [...]
 >> #830 0x0039f860 in ?? ()
 >> #831 0x0004fa86 in scheme_do_eval (obj=3D0x0, num_rands=3D1, rands=3D0xb=
 fffe500, get_value=3D-1) at eval.c:9488
 >> #832 0x00050b58 in _scheme_apply_multi_from_native (rator=3D0x3ee2358, a=
 rgc=3D1, argv=3D0xbfffe500) at schnapp.inc:84
 >> #833 0x0039893d in ?? ()
 >> #834 0x0004fa86 in scheme_do_eval (obj=3D0x0, num_rands=3D1, rands=3D0xb=
 fffe500, get_value=3D-1) at eval.c:9488
 >> #835 0x00075342 in do_call_ec (argc=3D1, argv=3D0x350fa4, _for_cc=3D0x0)=
  at fun.c:4726
 >> #836 0x00075526 in scheme_call_ec (argc=3D1, argv=3D0x350fa4) at fun.c:4=
 744
 >> #837 0x0039899f in ?? ()
 >> #838 0x0004fa86 in scheme_do_eval (obj=3D0x0, num_rands=3D1, rands=3D0x3=
 50fb0, get_value=3D-1) at eval.c:9488
 >> #839 0x001eb2dd in apply_values_execute (data=3D0x6e0c560) at syntax.c:2=
 066
 >> #840 0x0004f18b in scheme_do_eval (obj=3D0x6e0c550, num_rands=3D-1, rand=
 s=3D0x0, get_value=3D-1) at eval.c:9707
 >> #841 0x0010756e in body_one_expr (prefix_plus_expr=3D0x177e0fe0, argc=3D=
 0, argv=3D0x0) at module.c:4575
 >> #842 0x000501de in scheme_do_eval (obj=3D0x177e0ff0, num_rands=3D0, rand=
 s=3D0x0, get_value=3D-1) at eval.c:9642
 >> #843 0x00074478 in scheme_finish_apply_for_prompt (prompt=3D0x1a55df70, =
 _prompt_tag=3D0x3608d0, proc=3D0x177e0ff0, argc=3D0, argv=3D0x0) at fun.c:6=
 660
 >> #844 0x00074617 in scheme_apply_for_prompt (prompt=3D0x1a55df70, prompt_=
 tag=3D0x3608d0, proc=3D0x177e0ff0, argc=3D0, argv=3D0x0) at fun.c:6739
 >> #845 0x00082ca1 in call_with_prompt (in_argc=3D3, in_argv=3D0xbfffed40) =
 at fun.c:7064
 >> #846 0x0004fbff in scheme_do_eval (obj=3D0x1200210, num_rands=3D3, rands=
 =3D0xbfffed40, get_value=3D-1) at eval.c:9229
 >> #847 0x000798d9 in do_call_with_prompt (f=3D<value temporarily unavailab=
 le, due to optimizations>, data=3D<value temporarily unavailable, due to op=
 timizations>, multi=3D1, top_level=3D0) at fun.c:7256
 >> #848 0x00107264 in scheme_module_run_finish (menv=3D0x6e04af0, env=3D0x3=
 611b8) at module.c:4674
 >> #849 0x003473a3 in ?? ()
 >> #850 0x000a41b6 in scheme_module_run_start (menv=3D0x6e04af0, env=3D0x36=
 11b8, name=3D0x177e1030) at jit.c:14901
 >> #851 0x000f4c6a in scheme_get_thread_local_variables [inlined] () at /Us=
 ers/clklein/git/plt/src/racket/include/schthread.h:4564
 >> #852 0x000f4c6a in eval_module_body (menv=3D0x6e04af0, env=3D0x3611b8) a=
 t module.c:4565
 >> #853 0x000f4d81 in do_start_module (m=3D0x6e04b88, menv=3D0x6e04af0, env=
 =3D0x3611b8, restart=3D0) at module.c:4376
 >> #854 0x000fc506 in start_module (m=3D0x6e04b88, env=3D0x3611b8, restart=
 =3D0, syntax_idx=3D0x6e04ac0, eval_exp=3D-1, eval_run=3D1, base_phase=3D0, =
 cycle_list=3D0x28c890) at module.c:4467
 >> #855 0x000fcd48 in parse_requires (form=3D0x6e04c78, base_modidx=3D0x274=
 7f8, main_env=3D0x3611b8, for_m=3D0x0, rn_set=3D0x6e04c58, post_ex_rn_set=
 =3D0x0, ck=3D0, data=3D0x0, redef_modname=3D0x0, unpack_kern=3D1, copy_vars=
 =3D0, can_save_marshal=3D0, eval_exp=3D-1, eval_run=3D1, all_simple=3D0x0) =
 at module.c:9649
 >> #856 0x000fe69a in scheme_get_thread_local_variables [inlined] () at /Us=
 ers/clklein/git/plt/src/racket/include/schthread.h:1219
 >> #857 0x000fe69a in do_namespace_require (env=3D0x3611b8, argc=3D<value t=
 emporarily unavailable, due to optimizations>, argv=3D0xbffff64c, copy=3D0,=
  etonly=3D0) at module.c:1227
 >> #858 0x0004fbff in scheme_do_eval (obj=3D0x1202670, num_rands=3D1, rands=
 =3D0xbffff64c, get_value=3D1) at eval.c:9229
 >> #859 0x000761a4 in apply_k () at fun.c:2469
 >> #860 0x00076bd3 in scheme_top_level_do_worker (k=3D0x760f0 <apply_k>, eb=
 =3D1, new_thread=3D0, dyn_state=3D0x0) at fun.c:2308
 >> #861 0x000776d8 in scheme_top_level_do (k=3D0x760f0 <apply_k>, eb=3D1) a=
 t fun.c:2221
 >> #862 0x00002fcd in finish_cmd_line_run ()
 >> #863 0x000042bb in main_after_stack ()
 >> #864 0x0000bb23 in do_main_stack_setup [inlined] () at /Users/clklein/gi=
 t/plt/src/racket/src/salloc.c:183
 >> #865 0x0000bb23 in scheme_main_stack_setup (no_auto_statics=3D1, _main=
 =3D0x39f0 <main_after_stack>, data=3D0xbffff8f8) at salloc.c:287
 >> #866 0x00002416 in main ()
 >>
 >> |#
 >>
 >> *** Environment:
 >> macosx "Darwin spaghetti.cs.northwestern.edu 10.5.0 Darwin Kernel Versio=
 n 10.5.0: Fri Nov  5 23:20:39 PDT 2010; root:xnu-1504.9.17~1/RELEASE_I386 i=
 386" (i386-macosx/3m) (get-display-depth) =3D 32
 >> Human Language: english
 >> (current-memory-use) 143141748
 >>
 >> Collections:
 >> ("/Users/clklein/Library/Racket/5.1.0.1/collects"
 >>  (non-existent-path))
 >> ("/Users/clklein/git/plt/collects"
 >>  (".gitignore" "2htdp" "algol60" "at-exp" "browser" "combinator-parser" =
 "compiler" "config" "data" "datalog" "defaults" "deinprogramm" "drracket" "=
 drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framewo=
 rk" "frtime" "games" "graphics" "gui-debugger" "guibuilder" "handin-client"=
  "handin-server" "help" "hierlist" "honu" "htdp" "html" "icons" "info-domai=
 n" "lang" "launcher" "lazy" "macro-debugger" "make" "meta" "mred" "mrlib" "=
 mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "picturi=
 ng-programs" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" =
 "racket" "racklog" "rackunit" "raco" "reader" "readline" "redex" "repo-time=
 -stamp" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scri=
 blib" "setup" "sgl" "sirmail" "slatex" "slideshow" "srfi" "srpersist" "step=
 per" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test=
 -box-recovery" "test-engine" "tests" "tex2page" "texpict" "trace" "typed" "=
 typed-scheme" "un!
 >>  stable" "version" "waterworld" "web-server" "wxme" "xml"))
 >>
 >> Computer Language: (("Determine language from source") (#(#t quasiquote =
 mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t))
 >>
 >>
 >
From: Robby Findler <robby@eecs.northwestern.edu>
To: Casey Klein <clklein@eecs.northwestern.edu>
Cc: bugs <bugs@racket-lang.org>, nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/11680: Crash when allocation fails
Date: Sat, 29 Jan 2011 16:55:52 -0600

 2011/1/29 Casey Klein <clklein@eecs.northwestern.edu>:
 > On Sat, Jan 29, 2011 at 4:41 PM, Robby Findler
 > <robby@eecs.northwestern.edu> wrote:
 >> The PR system mangles non-ASCII; can you provide an ascii version of
 >> the program?
 >
 > Not easily (it would require changing the Redex model), but I've
 > uploaded the program as an attachment, and it does not appear mangled.
 >
 >> Also, does drracket crash if you set the limit lower?
 >
 > DrRacket stops the program gracefully when the memory limit is 128 MB.
 > For all I know, though, the program doesn't get very far with this
 > tighter limit.
 
 The memory limits are not really measured in the same units as the
 numbers that the OS tells you (despite the words "megabytes"), so
 probably what is happening is that at 256 megs you're actually running
 out of real memory.
 
 You can watch in 'top' or something and see for sure.
 
 Robby
From: Casey Klein <clklein@eecs.northwestern.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: bugs <bugs@racket-lang.org>, nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/11680: Crash when allocation fails
Date: Sat, 29 Jan 2011 17:55:04 -0600

 On Sat, Jan 29, 2011 at 4:55 PM, Robby Findler
 <robby@eecs.northwestern.edu> wrote:
 > 2011/1/29 Casey Klein <clklein@eecs.northwestern.edu>:
 >> On Sat, Jan 29, 2011 at 4:41 PM, Robby Findler
 >> <robby@eecs.northwestern.edu> wrote:
 >>> The PR system mangles non-ASCII; can you provide an ascii version of
 >>> the program?
 >>
 >> Not easily (it would require changing the Redex model), but I've
 >> uploaded the program as an attachment, and it does not appear mangled.
 >>
 >>> Also, does drracket crash if you set the limit lower?
 >>
 >> DrRacket stops the program gracefully when the memory limit is 128 MB.
 >> For all I know, though, the program doesn't get very far with this
 >> tighter limit.
 >
 > The memory limits are not really measured in the same units as the
 > numbers that the OS tells you (despite the words "megabytes"), so
 > probably what is happening is that at 256 megs you're actually running
 > out of real memory.
 >
 > You can watch in 'top' or something and see for sure.
 >
 
 You might be right. When I launch DrRacket from a shell where I've set
 
 ulimit -m 1048576 # 1 GB
 
 and run the program, the 256 "MB" memory limit does fire.
>Unformatted:
 ----gnatsweb-attachment----
 Content-Type: application/octet-stream; name="allocation-crash.rkt"
 Content-Transfer-Encoding: base64
 Content-Disposition: attachment; filename="allocation-crash.rkt"
 
 I2xhbmcgcmFja2V0CgoocmVxdWlyZSByZWRleC9leGFtcGxlcy9jb250LW1hcmstdHJhbnNmb3Jt
 L3JhbmRvbWl6ZWQtdGVzdHMKICAgICAgICAgcmVkZXgpCgooc2FtZS1yZXN1bHQ/CiAodGVybQog
 ICgozrogKGhvbGUpKQogICAoKCIiKQogICAgKHctYy1tCiAgICAgKM66IGhvbGUpCiAgICAgKCJL
 dE5odiIpCiAgICAgKHctYy1tCiAgICAgICjOuiBob2xlKQogICAgICAoIlhpdndvWVpTIiAoImV1
 TUtLaFlSIikpCiAgICAgICh3LWMtbQogICAgICAgKM67IChmYSBqIEUgTSBFIFIgQiBCIHEpCiAg
 ICAgICAgIChtYXRjaAogICAgICAgICAgICAgKCJLQ2xNVkUiICgiZyIpIEhEKQogICAgICAgICAg
 ICgoIkZCdGoiIEkgUykgKGxldHJlYyAoKSAoY2FsbC9jYyBiKSkpCiAgICAgICAgICAgKCgiU0po
 IiBsIHEgR2sgaSBRIFIgUE8gbSBNIFZzdGcgbyByIG0gbiBtIEJMIEQgVCB4TCkgKHctYy1tIEYg
 ZCAoY2FsbC9jYyBIKSkpCiAgICAgICAgICAgKCgiU1doR0tJeSIpICh3LWMtbSBoIFJsIChjYWxs
 L2NjIGIpKSkKICAgICAgICAgICAoKCIiIGQpIChtYXRjaCBIdSkpCiAgICAgICAgICAgKCgiUCIp
 IChtYXRjaCBtKSkKICAgICAgICAgICAoKCIiIHogTykgKGMtYy1tICgpKSkKICAgICAgICAgICAo
 KCJQdEVQWFVMRE5OZ2F1dyIgS3EpIChtYXRjaCBhKSkpKQogICAgICAgKCJGIgogICAgICAgICgi
 WSIKICAgICAgICAgKCIiCiAgICAgICAgICAozrsgKCkgKGNhbGwvY2MgKCJhYm9ydCIpKSkKICAg
 ICAgICAgICjOuyAoKSAoY2FsbC9jYyAoImMiKSkpCiAgICAgICAgICAoImVIRndha0IiICgiRVBT
 RFJHSmJiSmRzQ3ZTWExOZlJYUiIpKQogICAgICAgICAgKCJ1IikKICAgICAgICAgICjOuyAoKSAo
 Y2FsbC9jYyAoIm1hdGNoIikpKQogICAgICAgICAgKM66IGhvbGUpKQogICAgICAgICAoIiIgKCIi
 KSkKICAgICAgICAgKM67ICh5IHQpICh3LWMtbSB0IHkgKGNhbGwvY2MgdCkpKQogICAgICAgICAo
 ImgiICgiIikpCiAgICAgICAgICjOuiBob2xlKQogICAgICAgICAozrogaG9sZSkKICAgICAgICAg
 KM67IChGIEYpIChsZXRyZWMgKCkgKGNhbGwvY2MgRikpKQogICAgICAgICAoInJSY1htSFlyREgi
 ICgiS0p4REsiKSAoIk1EeVVrQmEiKSkpCiAgICAgICAgKM67ICh0IHIgTCBuIGQgSiB3IGJEIFQg
 TSBVIEcgcWFSIFMgVXYpICh3LWMtbSBNICgiTWRUSVIiKSAobGV0cmVjICgpIChjYWxsL2NjIFUp
 KSkpCiAgICAgICAgKM66IGhvbGUpCiAgICAgICAgKCJ6IikKICAgICAgICAoIiIgKCJGSFZqIikg
 KCJyIikpCiAgICAgICAgKCJ1R2YiICjOuiBob2xlKSAozrogaG9sZSkpCiAgICAgICAgKM66IGhv
 bGUpKQogICAgICAgKHctYy1tCiAgICAgICAgKM66ICh3LWMtbSAocmVmIGEpIChyZWYgYWVMKSBo
 b2xlKSkKICAgICAgICAoIlBMWG5mbmxJelNuSUNtSEVTeU5WYiIgKCJiQ1hFbHV0V3dNQW9qWmNm
 IikgKCJSdUl3YnJwZCIpKQogICAgICAgICh3LWMtbQogICAgICAgICAoImMiICgiIikgKHJlZiBj
 ZCkpCiAgICAgICAgICjOuyAoSksgVSBEIFVZIEwpIChsZXRyZWMgKCkgKGNhbGwvY2MgSkspKSkK
 ICAgICAgICAgKHctYy1tCiAgICAgICAgICAoIm1KaiIpCiAgICAgICAgICAozrogaG9sZSkKICAg
 ICAgICAgICh3LWMtbQogICAgICAgICAgIChyZWYgVCkKICAgICAgICAgICAoImYiKQogICAgICAg
 ICAgICh3LWMtbQogICAgICAgICAgICAozrogaG9sZSkKICAgICAgICAgICAgKCJrbE9aTCIpCiAg
 ICAgICAgICAgIChhYm9ydAogICAgICAgICAgICAgKCJaIiAoIm9hYiIgKCIiKSAoIkUiKSAoIiIp
 ICgiUnhkQSIpKSAoInFERU9KWXYiKSAoIkdzTFVBeENUcUFDbVhNaU9mSmtYIikgKCJOTXlvIikp
 KSkpKSkpKSkpKSkpKQo=
 
