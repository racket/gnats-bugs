From nobody@cs.rice.edu  Fri Aug  8 14:47:02 1997
Received: from web.cs.rice.edu (web.cs.rice.edu [128.42.1.163]) by cs.rice.edu (8.8.5/8.7.1) with ESMTP id OAA07510 for <plt-gnats@cs.rice.edu>; Fri, 8 Aug 1997 14:47:02 -0500 (CDT)
Message-Id: <199708081947.OAA17151@web.cs.rice.edu>
Date: Fri, 8 Aug 1997 14:47:01 -0500 (CDT)
From: tmiller@cs.rice.edu
Reply-To: tmiller@cs.rice.edu
To: plt-gnats@cs.rice.edu
Subject: Documentation bug for "foldr" in MzLib Functions library 

>Number:         251
>Category:       mzscheme
>Synopsis:       Documentation bug for "foldr" in MzLib Functions library
>Confidential:   no
>Severity:       serious
>Priority:       medium
>Responsible:    mflatt
>State:          closed
>Class:          doc-bug
>Submitter-Id:   unknown
>Arrival-Date:   Fri Aug  8 19:50:01 GMT 1997
>Last-Modified:  Wed Aug 13 12:53:54 CDT 1997
>Originator:     Tim Miller
>Organization:
titan
>Release:        
>Environment:
unknown
>Description:
Currently reads:

 (foldr f init l ...) (procedure) 

Like foldl, but the lists are traversed from right to left. 

For example, map can be defined in terms of foldr:  
   (define map
     (lambda (f . lists)
       (apply foldr (lambda (v l) (cons (f v) l)) '() lists))) 

This definition of map does not work for f with arity > 1, because the
arity of the first argument to foldr needs to be one greater than the arity
of f.
>How-To-Repeat:
(define map
  (lambda (f . lists)
    (apply foldr (lambda (v l) (cons (f v) l)) '() lists)))

(map + '(1 2 3) '(3 2 1))

#<procedure>: expects 2 arguments, given 3: 3 1 ()

>Fix:

Here's a quick fix:
(define chop-last
    (lambda (list)
      (let* [(last 'foo)
	     (rest (foldr (lambda (v l)
			    (if (symbol? l)
				(begin (set! last v) '())
				(cons v l))) 'foo list))]
	(values rest last))))

(define map
    (lambda (f . lists)
      (apply foldr (lambda args
		     (let-values [((args list) (chop-last args))]
		       (cons (apply f args) list))) '() lists)))

However, I would recommend that we find a cleaner example.

>Audit-Trail:

Responsible-Changed-From-To: ptg->mflatt
Responsible-Changed-By: mflatt
Responsible-Changed-When: Fri Aug  8 17:02:12 1997
Responsible-Changed-Why:

State-Changed-From-To: open-analyzed
State-Changed-By: mflatt
State-Changed-When: Tue Aug 12 09:02:08 1997
State-Changed-Why:
Fixed (but not built).

State-Changed-From-To: analyzed-closed
State-Changed-By: mflatt
State-Changed-When: Wed Aug 13 12:53:49 1997
State-Changed-Why:
Built.

>Unformatted:
