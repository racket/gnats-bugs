From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Fri Aug 16 12:11:18 2013
Received: from mail-oa0-f52.google.com (mail-oa0-f52.google.com [209.85.219.52])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id r7GGBEtV003567
	for <bugs@bugs.plt-scheme.org>; Fri, 16 Aug 2013 12:11:14 -0400
Message-Id: <201308161611.r7GGBCcK003562@champlain.ccs.neu.edu>
Date: Fri, 16 Aug 2013 12:11:12 -0400
From: ianj@ccs.neu.edu
To: bugs@racket-lang.org
Subject: struct-copy breaks hygiene, causing adverse effects with prop:struct-info

>Number:         13969
>Category:       mzscheme
>Synopsis:       struct-copy breaks hygiene, causing adverse effects with prop:struct-info
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       non-critical
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Fri Aug 16 12:12:01 -0400 2013
>Last-Modified:  Mon Oct 21 10:13:45 -0400 2013
>Originator:     J. Ian Johnson
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.90.0.5
>Environment:
Linux x86_64 / Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:23.0) Gecko/20100101 Firefox/23.0
>Description:
The common usage of struct-copy is okay:
(struct a (x y))
(struct-copy a (a 0 1) [x 2])
However, it uses datum->syntax of the formatted string for the struct identifier a, dash field x. This does not work when a is bound to a struct with prop:struct-info that points to info for a struct type, say, a-container. The accessor construction needs to take the struct type into consideration. Unfortunately this requires light parsing of the accessor functions, since fields themselves are not saved in struct-info.
>How-To-Repeat:
(require (for-syntax racket/struct-info))
(begin-for-syntax
 (struct S (info) #:property prop:struct-info (Î» (s) (S-info s))))
(struct a-container (x))
(define-syntax a (S (extract-struct-info (syntax-local-value #'a-container))))
(struct-copy a (a-container 4) [x 0]) ;; syntax error about a-x
>Fix:
