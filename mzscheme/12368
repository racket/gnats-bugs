From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Wed Nov 16 10:10:28 2011
Received: from mail-pz0-f48.google.com (mail-pz0-f48.google.com [209.85.210.48])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id pAGFAPOb009820
	for <bugs@bugs.plt-scheme.org>; Wed, 16 Nov 2011 10:10:25 -0500
Message-Id: <201111161509.pAGF9ImU009746@champlain.ccs.neu.edu>
Date: Wed, 16 Nov 2011 10:09:18 -0500
From: morazanm@gmail.com
To: bugs@racket-lang.org
Subject: syntaxes in unit signatures are broken

>Number:         12368
>Category:       mzscheme
>Synopsis:       syntaxes in unit signatures are broken
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Wed Nov 16 10:12:02 -0500 2011
>Last-Modified:  Sun Nov 20 14:19:34 -0500 2011
>Originator:     matthias
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.2.0.2--2011-11-12(a0378a2/g)
>Environment:
macosx "Darwin antarctica.ccs.neu.edu 10.8.0 Darwin Kernel Version 10.8.0: Tue Jun  7 16:33:36 PDT 2011; root:xnu-1504.15.3~1/RELEASE_I386 i386" (x86_64-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 414224424
Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()


Collections:
("/Users/matthias/0Unison/collects/"
 (".DS_Store" "compiled" "date" "finance" "info-domain" "info.ss" "pdf.ss~" "session" "short" "testing" "tll-collects" "utils" "web"))
("/Users/matthias/Library/Racket/5.2.0.2/collects"
 (non-existent-path))
("/Users/matthias/plt/collects"
 (".gitignore" "2htdp" "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "data" "datalog" "db" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "meta" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "picturing-programs" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "redex" "repo-time-stamp" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "sirmail" "slatex" "slideshow" "srfi" "srpersist" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tests" "tex2page" "texpict" "trace" "typed" "typed-racket!
 " "typed-scheme" "unstable" "version" "waterworld" "web-server" "wxme" "xml" "xrepl"))

Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t))
>Description:
a 'syntax' defined in signature foo^ is not propagated through a n (except sig id) specification. 
(I also can't get it across a 'require' via modules.) 
>How-To-Repeat:
Run code below: 

(define-signature dice-of-doom^
  (except doom^ create-game))

(define-signature roll^ 
  (;; -> Void
   ;; launch the doom-of-dice game 
   roll-the-dice))

(define-signature doom^
  (;; export the equivalent of (struct game (board player gt))
   ;; but allow 'gt' field to be optionally lazy 
   game? 
   game-board
   game-player
   game-gt
   ;; expression is also: (game a b c)
   (define-syntaxes (game)
     (let ((game 
            (lambda (stx)
              (syntax-case stx ()
                [(_ a b c) 
                 #'(create-game a b (lambda () c))]))))
       (values game)))
   create-game))


(define client@
  (unit (import doom^) ;; will fail if I change this to dice-of-doom^ 
        (export roll^)
        (define roll-the-dice (game 1 2 (displayln "hello world")))))
>Fix:
>Audit-Trail:
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: morazanm@gmail.com, bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12368: syntaxes in unit signatures are broken
Date: Wed, 16 Nov 2011 10:14:05 -0500

 Apologies -- last time I submitted a bug from this machine I did it for Marco. 
 I am the submitter -- Matthias
 
 
 
 On Nov 16, 2011, at 10:12 AM, morazanm@gmail.com wrote:
 
 > A new problem report is waiting at
 >  http://bugs.racket-lang.org/query/?cmd=view&pr=12368
 > 
 > Reported by marco for release: 5.2.0.2--2011-11-12(a0378a2/g)
 > 
 > *** Description:
 > a 'syntax' defined in signature foo^ is not propagated through a n (except sig id) specification. 
 > (I also can't get it across a 'require' via modules.) 
 > 
 > *** How to repeat:
 > Run code below: 
 > 
 > (define-signature dice-of-doom^
 >  (except doom^ create-game))
 > 
 > (define-signature roll^ 
 >  (;; -> Void
 >   ;; launch the doom-of-dice game 
 >   roll-the-dice))
 > 
 > (define-signature doom^
 >  (;; export the equivalent of (struct game (board player gt))
 >   ;; but allow 'gt' field to be optionally lazy 
 >   game? 
 >   game-board
 >   game-player
 >   game-gt
 >   ;; expression is also: (game a b c)
 >   (define-syntaxes (game)
 >     (let ((game 
 >            (lambda (stx)
 >              (syntax-case stx ()
 >                [(_ a b c) 
 >                 #'(create-game a b (lambda () c))]))))
 >       (values game)))
 >   create-game))
 > 
 > 
 > (define client@
 >  (unit (import doom^) ;; will fail if I change this to dice-of-doom^ 
 >        (export roll^)
 >        (define roll-the-dice (game 1 2 (displayln "hello world")))))
 > 
 > *** Environment:
 > macosx "Darwin antarctica.ccs.neu.edu 10.8.0 Darwin Kernel Version 10.8.0: Tue Jun  7 16:33:36 PDT 2011; root:xnu-1504.15.3~1/RELEASE_I386 i386" (x86_64-macosx/3m) (get-display-depth) = 32
 > Human Language: english
 > (current-memory-use) 414224424
 > Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()
 > 
 > 
 > Collections:
 > ("/Users/matthias/0Unison/collects/"
 > (".DS_Store" "compiled" "date" "finance" "info-domain" "info.ss" "pdf.ss~" "session" "short" "testing" "tll-collects" "utils" "web"))
 > ("/Users/matthias/Library/Racket/5.2.0.2/collects"
 > (non-existent-path))
 > ("/Users/matthias/plt/collects"
 > (".gitignore" "2htdp" "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "data" "datalog" "db" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "meta" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "picturing-programs" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "redex" "repo-time-stamp" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "sirmail" "slatex" "slideshow" "srfi" "srpersist" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tests" "tex2page" "texpict" "trace" "typed" "typed-racket!
 > " "typed-scheme" "unstable" "version" "waterworld" "web-server" "wxme" "xml" "xrepl"))
 > 
 > Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t))
 > 
 
 


From: Stevie Strickland <sstrickl@ccs.neu.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>, bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12368: syntaxes in unit signatures are broken
Date: Thu, 17 Nov 2011 13:13:22 -0500

 On Nov 16, 2011, at 10:12 AM, morazanm@gmail.com wrote:
 > A new problem report is waiting at
 >  http://bugs.racket-lang.org/query/?cmd=view&pr=12368
 > 
 > Reported by marco for release: 5.2.0.2--2011-11-12(a0378a2/g)
 > 
 > *** Description:
 > a 'syntax' defined in signature foo^ is not propagated through a n (except sig id) specification. 
 > (I also can't get it across a 'require' via modules.) 
 > 
 > *** How to repeat:
 > Run code below: 
 > 
 > (define-signature dice-of-doom^
 >  (except doom^ create-game))
 
 If I change this to:
 
 (define-signature dice-of-doom^
  (except doom^ create-game game))
 
 Then it seems to execute correctly.  Does this work for you?
 
 Stevie
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Stevie Strickland <sstrickl@ccs.neu.edu>
Cc: bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12368: syntaxes in unit signatures are broken
Date: Thu, 17 Nov 2011 13:20:41 -0500

 On Nov 17, 2011, at 1:13 PM, Stevie Strickland wrote:
 
 > If I change this to:
 > 
 > (define-signature dice-of-doom^
 > (except doom^ create-game game))
 > 
 > Then it seems to execute correctly.  Does this work for you?
 > 
 > Stevie
 
 
 'game' is the syntax defined in doom^ that I want to export, and I want to hide the actual constructor (create-game) so clients can't abuse it. 
 
 
From: Stevie Strickland <sstrickl@ccs.neu.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>,
        Ryan Culpepper <ryanc@racket-lang.org>
Cc: bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12368: syntaxes in unit signatures are broken
Date: Thu, 17 Nov 2011 13:39:17 -0500

 Right, right, of course.  You're doing except, not only, which I overlooked for no good reason.
 
 Ryan, was this working before when you first added define-{values,syntaxes} to unit signatures?  Also, it seems like adding game to the except clause causes it to be AVAILABLE, which is also problematic.
 
 On Nov 17, 2011, at 1:20 PM, Matthias Felleisen wrote:
 > 
 > On Nov 17, 2011, at 1:13 PM, Stevie Strickland wrote:
 > 
 >> If I change this to:
 >> 
 >> (define-signature dice-of-doom^
 >> (except doom^ create-game game))
 >> 
 >> Then it seems to execute correctly.  Does this work for you?
 >> 
 >> Stevie
 > 
 > 'game' is the syntax defined in doom^ that I want to export, and I want to hide the actual constructor (create-game) so clients can't abuse it. 
 
 


