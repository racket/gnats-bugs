From robby@cs.rice.edu  Wed Aug 16 10:58:27 2000
Received: from localhost (cupertino.cs.rice.edu [128.42.2.124])
	by cs.rice.edu (8.9.0/8.9.0) with ESMTP id KAA12534
	for <plt-gnats>; Wed, 16 Aug 2000 10:58:27 -0500 (CDT)
Message-Id: <200008161558.KAA12534@cs.rice.edu>
Date: Wed, 16 Aug 2000 10:58:27 -0500 (CDT)
From: robby@cs.rice.edu
To: plt-gnats@cs.rice.edu
Subject: parameters don't check their initial values

>Number:         1611
>Category:       mzscheme
>Synopsis:       parameters don't check their initial values
>Class:          change-request
>Responsible:    steck
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Wed Aug 16 12:00:16 -0400 2000
>Last-Modified:  Mon May 05 15:45:06 -0400 2008
>Originator:     Robert Bruce Findler
>Organization:
titan
>Submitter-Id:   unknown
>Release:        103/3d2
>Environment:
macos (ppc-mac) (get-display-depth) = 16
Tools: ("analysis" "CVS" "debug" "project-manager" "syncheck" "typeset" "unit-bundle")
Docs Installed:
("advanced" "beginning" "drscheme" "framework" "help" "icons" "intermediate" "misclib" "mred" "mrspidey" "mzc" "mzscheme" "r5rs" "teach" "teachpack" "tools")
Collections:
(("Cupertino:Robby:cvs:robby:collects" ("account" "backgammon" "checkers" "CVS" "doonesbury" "friendly" "icfp-pc-99" "magic" "mahjongg" "paper-utils" "pente" "pop-pop" "set-fonts" "solutions" "test-image-map" "xmahjongg")) ("Cupertino:Robby:cvs:robby:proj:talks" ("CVS" "drscheme-architecture" "icfp98" "Jcontracts.ppt" "lc" "lunch1" "unit-patterns" "unit-proposal" "util")) ("Cupertino:Robby:cvs:robby:proj:papers" ("c+u.save" "CVS" "dr" "dr-column" "dr-journal" "drafthead.sty" "geometric-control" "graphical-units" "java-blame" "java-blame-theory" "sba-procedures" "senior-thesis" "signature-constraints" "type-safety" "typed-unit-calculus" "unit" "unit-semantics")) ("Cupertino:Robby:cvs:plt exp:collects" ("afm" "browser" "cogen" "compiler" "countdwn" "CVS" "defaults" "doc" "drjava" "drscheme" "drscheme-jr" "dynext" "errortrace" "framework" "games" "graphics" "guibuilder" "guserspce" "help" "hierarchy" "hierlist" "htdp" "html" "icons" "launcher" "make" "mrdemo" "mred" "mrspidey" "mysterx" "mzlib" "mzos" "mzscheme" "net" "quasiquote" "readline" "setup" "slatex" "slibinit" "srpersist" "stepper" "stepper-graphical" "tests" "texpict" "typeset" "userspce" "xml" "zodiac")) ("Cupertino:cvs:robby:mflatt:collects" "non-existant path"))
>Description:
parameters don't apply their guard procedures to their initial
values, but I think that they should. Helps find errors earlier...

(the actual example that motivated this was a forward variable
 reference (#<undefined>) got stuck into a parameter, which
 wouldn't have passed the guard proc)
>How-To-Repeat:
> (define p (make-parameter #t (lambda (x) (unless (number? x) (error 'no)))))
#<void>
> (p)
#t
> (p #t)
error: no
> 
>Fix:
>Audit-Trail:
State-Changed-From-To: open-closed
State-Changed-By: robby
State-Changed-When: Wed Aug 16 13:21:42 2000
State-Changed-Why:

no change, intentionally. This version is more flexible.


From: Matthew Flatt <mflatt@cs.utah.edu>
To: robby@cs.rice.edu
Cc: plt-gnats@cs.rice.edu
Subject: Re: all/1611: parameters don't check their initial values
Date: Wed, 16 Aug 2000 11:18:41 -0700 (PDT)

 Quoting robby@cs.rice.edu:
 > parameters don't apply their guard procedures to their initial
 > values, 
 
 Correct --- that's intentional.
 
 > but I think that they should. Helps find errors earlier...
 
 I agree that it would help catch a small number of bugs faster.
 However, it also would make other tasks more difficult.
 
 For example, a guard might reject a change to the parameter when X is
 true; if X happens to be true when the parameter is created, the
 programmer will have to work hard to handle the special case of
 initialization.
 
 More generally, a guard might perform some side-effect each time the
 parameter is changed, where the side-effect shouldn't happen on
 initialization.
 
 I might even go so far as to say this falls into the same design domain
 as callbacks on GUI items. A checkbox callback isn't called when the
 checkbox is created; it would make a few programs slightly better, but
 it make a few other programs much worse.
 
 Matthew
 

From: Robert Bruce Findler <robby@cs.rice.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: plt-gnats@cs.rice.edu
Subject: Re: all/1611: parameters don't check their initial values
Date: Wed, 16 Aug 2000 13:21:20 -0500

 At 11:18 AM -0700 8/16/00, Matthew Flatt wrote:
 >
 >I agree that it would help catch a small number of bugs faster.
 >However, it also would make other tasks more difficult.
 >
 >   [...]
 
 Okay. I will retract my request.  (I will close the PR)
 
 
 >I might even go so far as to say this falls into the same design domain
 >as callbacks on GUI items. A checkbox callback isn't called when the
 >checkbox is created; it would make a few programs slightly better, but
 >it make a few other programs much worse.
 
 I definately agree with the GUI programs bit, but don't agree that 
 the situations are analgous. The guard procedure is not documented as 
 being designed for callback-style situations. Perhaps we should say 
 that it is?
 
 Robby

From: "Paul A. Steckler" <steck@cs.rice.edu>
To: "Plt-Design@Cs. Rice. Edu" <plt-design@cs.rice.edu>
Cc: "Plt-Gnats@Cs. Rice. Edu" <plt-gnats@cs.rice.edu>
Subject: Re: all/1611: parameters don't check their initial values
Date: Wed, 16 Aug 2000 14:36:23 -0500

 > Quoting robby@cs.rice.edu:
 > > parameters don't apply their guard procedures to their initial
 > > values, 
 > 
 > Correct --- that's intentional.
 > 
 > > but I think that they should. Helps find errors earlier...
 > 
 > I agree that it would help catch a small number of bugs faster.
 > However, it also would make other tasks more difficult.
 
 How about adding (yet another) optional argument `check-init-value' 
 to make-parameter?  The default value is #f, but if it's other-than-#f,
 make-parameter applies the guard procedure to the initial value.
 Wouldn't this satisfy both Robby's and Matthew's concerns?
 
 -- Paul
 
 
>Unformatted:
