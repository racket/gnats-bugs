From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Mon Jul  9 21:10:57 2012
Received: from mail-vb0-f44.google.com (mail-vb0-f44.google.com [209.85.212.44])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id q6A1AsIC024398
	for <bugs@bugs.plt-scheme.org>; Mon, 9 Jul 2012 21:10:54 -0400
Message-Id: <201207100110.q6A1Aojk024393@champlain.ccs.neu.edu>
Date: Mon, 9 Jul 2012 21:10:50 -0400
From: chiovolonit@gmail.com
To: bugs@racket-lang.org
Subject: Inaccessible identifier shows up in error message involving structs.

>Number:         12890
>Category:       mzscheme
>Synopsis:       Inaccessible identifier shows up in error message involving structs.
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       non-critical
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Mon Jul 09 21:12:01 -0400 2012
>Last-Modified:  Tue Jul 24 20:07:32 -0400 2012
>Originator:     Thom Chiovoloni
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.2.1
>Environment:
MacIntel / Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.15 Safari/537.1
>Description:
Mysterious error messages involving never-defined identifiers show up when struct constructors are used before the struct is defined.  For example, when I evaluate

(define the-foo (foo))
(struct foo ())

I get an error: "reference to an identifier before its definition: foo1.2".  Clearly this should refer to foo and not to foo1.2.

>How-To-Repeat:
evaluate in DrRacket:

(define the-foo (foo))
(struct foo ())
>Fix:
