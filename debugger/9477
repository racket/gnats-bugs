From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Wed Jun 11 01:07:58 2008
Received: from fg-out-1718.google.com (fg-out-1718.google.com [72.14.220.153])
	by champlain.ccs.neu.edu (8.14.2/8.14.2) with ESMTP id m5B57oj6020138
	for <bugs@bugs.plt-scheme.org>; Wed, 11 Jun 2008 01:07:50 -0400
Message-Id: <200806110507.m5B57gX6020131@champlain.ccs.neu.edu>
Date: Wed, 11 Jun 2008 01:07:42 -0400
From: eli@barzilay.org
To: bugs@plt-scheme.org
Subject: Debugger shows bogus return values

>Number:         9477
>Category:       debugger
>Synopsis:       Debugger shows bogus return values
>Class:          sw-bug
>Responsible:    gmarceau
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Wed Jun 11 01:08:01 -0400 2008
>Closed-Date:    Wed Feb 08 15:53:07 -0500 2012
>Last-Modified:  Wed Feb 08 15:53:07 -0500 2012
>Originator:     Eli Barzilay
>Organization:
plt
>Submitter-Id:   unknown
>Release:        3.99.0.9
>Environment:
...or type
>Description:
When debugging the program below, after a single step the top
bar shows "(foo) => #<void>".  I'm not sure what it should show,
but I think that it should be "(foo) => 1".
>How-To-Repeat:
Module language,

  #lang scheme
  (define (foo) 1)
  (foo)
>Fix:
>Audit-Trail:
From: Matthew Flatt <mflatt@cs.utah.edu>
To: eli@barzilay.org, bugs@plt-scheme.org
Cc: nobody@plt-scheme.org, eli@plt-scheme.org, matthias@plt-scheme.org,
        sk@plt-scheme.org, robby@plt-scheme.org, clements@plt-scheme.org,
        jay@plt-scheme.org, meunier@plt-scheme.org, sowens@plt-scheme.org,
        kathyg@plt-scheme.org, jacobm@plt-scheme.org, cce@plt-scheme.org,
        samth@plt-scheme.org, ryanc@plt-scheme.org, gcooper@plt-scheme.org
Subject: Re: [plt-bug] all/9477: Debugger shows bogus return values
Date: Wed, 11 Jun 2008 07:15:42 -0600

 At Wed, 11 Jun 2008 01:08:02 -0400, eli@barzilay.org wrote:
 > A new problem report is waiting at
 >   http://bugs.plt-scheme.org/query/?cmd=view&pr=9477
 > 
 > Reported by Eli Barzilay for release: 3.99.0.9
 > 
 > *** Description:
 > When debugging the program below, after a single step the top
 > bar shows "(foo) => #<void>".  I'm not sure what it should show,
 > but I think that it should be "(foo) => 1".
 > 
 > *** How to repeat:
 > Module language,
 > 
 >   #lang scheme
 >   (define (foo) 1)
 >   (foo)
 
 I think this is because `(foo)' is wrapped by the `scheme' language as
 `(call-with-values (lambda () (foo)) print-values)' given the source
 location of `(foo)'. The debugger is showing the result from the
 `call-with-values' wrapper; note that `1' is printed in the REPL when
 the debugger stops.
 
 The debugger should probably stop at only expressions in the original
 program. Simply throwing in a `syntax-original?' test doesn't work,
 though, so it will take some time to iron out this one.
 
 Matthew
 



State changed from "open" to "closed" by samth at Wed, 08 Feb 2012 15:53:07 -0500
Reason>>> Guillaume reports that this bug has been fixed.

