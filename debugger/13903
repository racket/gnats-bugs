From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Wed Jul  3 16:47:49 2013
Received: from mail-oa0-f46.google.com (mail-oa0-f46.google.com [209.85.219.46])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id r63Kli2c027603
	for <bugs@bugs.plt-scheme.org>; Wed, 3 Jul 2013 16:47:45 -0400
Message-Id: <201307032047.r63KlhZQ027598@champlain.ccs.neu.edu>
Date: Wed, 3 Jul 2013 16:47:43 -0400
From: dented42lists@icloud.com
To: bugs@racket-lang.org
Subject: continuations seem to cause different behavior in DrRacket's debugger

>Number:         13903
>Category:       debugger
>Synopsis:       continuations seem to cause different behavior in DrRacket's debugger
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Wed Jul 03 16:48:01 -0400 2013
>Last-Modified:  Fri Oct 25 20:49:29 -0400 2013
>Originator:     Matias Eyzaguirre
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.3.4
>Environment:
mac-i386-osx
>Description:
the following program causes different behavior depending on whether or not it's being run in the debugger. In the debugger it exhibits (what seems to me to be) the correct behavior, whereas when run normally in DrRacket or from the command line it crashes.
>How-To-Repeat:
#lang racket

(require racket/control)

(define-syntax-rule (with-thing name body ...)
  (begin
    (displayln (format "4: starting ~a" name))
    body ...
    (displayln (format "9: ending ~a" name))))

(define-syntax-rule (let/comp k body ...)
  (call/comp (lambda (k)
               body ...)))

(define bang-escape-tag
  (make-continuation-prompt-tag 'bang-escape-tag))

(define (bang)
  (displayln "2: outside outer cc")
  (let/cc k ; this let/cc needs to be in the tail position
    (displayln "3: inside outer cc")
    (with-thing "hi"
                (displayln "5: inside thing")
                (let/comp k*
                  (displayln "6: inside inner cc")
                  (k k*))
                (displayln "8: exiting"))
    (displayln "10: almost finished with bang")))

(displayln "1: before bang")
(define foo (bang))
(displayln "7: inside bang")
(foo)
(displayln "11: after end")
>Fix:
>Audit-Trail:
Responsible changed from "gmarceau" to "mflatt" by samth at Fri, 25 Oct 2013 20:49:29 -0400
Reason>>> .

