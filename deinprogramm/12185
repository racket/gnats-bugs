From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Wed Sep  7 13:59:05 2011
Received: from mail-vx0-f172.google.com (mail-vx0-f172.google.com [209.85.220.172])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id p87Hx1gk023617
	for <bugs@bugs.plt-scheme.org>; Wed, 7 Sep 2011 13:59:01 -0400
Message-Id: <201109071758.p87HwuR7023608@champlain.ccs.neu.edu>
Date: Wed, 7 Sep 2011 13:58:56 -0400
From: dyoo@hashcollision.org
To: bugs@racket-lang.org
Subject: Violating signatures in Die Macht der Abstraktion does not raise exception

>Number:         12185
>Category:       deinprogramm
>Synopsis:       Violating signatures in Die Macht der Abstraktion does not raise exception
>Class:          sw-bug
>Responsible:    sperber
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Wed Sep 07 14:00:02 -0400 2011
>Closed-Date:    Wed Sep 14 16:00:52 -0400 2011
>Last-Modified:  Wed Sep 14 16:00:52 -0400 2011
>Originator:     Danny Yoo
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.1.3
>Environment:
unix "Linux draper 2.6.32-5-686-bigmem #1 SMP Mon Jun 13 05:03:09 UTC 2011 i686 GNU/Linux" (i386-linux/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 109236008

Collections:
("/home/dyoo/.racket/5.1.3/collects"
 ("cs019-lang" "installed-teachpacks"))
("/local/projects/racket/releases/5.1.3/collects"
 ("syntax" "planet" "errortrace" "xml" "scribblings" "file" "htdp" "s-exp" "schemeunit" "eopl" "slatex" "syntax-color" "hierlist" "deinprogramm" "make" "gui-debugger" "picturing-programs" "unstable" "slideshow" "info-domain" "openssl" "version" "parser-tools" "combinator-parser" "r6rs" "defaults" "rnrs" "scriblib" "dynext" "r5rs" "rackunit" "string-constants" "lazy" "launcher" "readline" "mysterx" "mrlib" "browser" "mzcom" "lang" "embedded-gui" "framework" "at-exp" "graphics" "test-box-recovery" "mred" "datalog" "games" "compiler" "profile" "web-server" "icons" "frtime" "teachpack" "raco" "wxme" "typed-scheme" "trace" "texpict" "ffi" "algol60" "racket" "setup" "scribble" "plot" "drracket" "drscheme" "typed" "scheme" "racklog" "data" "html" "tex2page" "stepper" "srfi" "mzscheme" "macro-debugger" "net" "test-engine" "config" "sgl" "mzlib" "help" "swindle" "plai" "reader" "redex" "2htdp" "preprocessor"))

Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t))
>Description:
I tried the following program in ASL.  In Definitions:

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(: g (Number -> Number))
(define g
 (lambda (x)
   (if (= x 0)
       x
       (list "three" x))))
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

I ran Definitions, and then in my Interactions window, entered:

  > (g 20)

I got back a result that was not a number, but I did not see an expected signature error.  I tried this in Die Macht der Abstraktion, with identical results.


This is broken in Racket 5.0.1, 5.1.1, and 5.1.3.
>How-To-Repeat:
>Fix:
>Audit-Trail:
From: Michael Sperber <sperber@deinprogramm.de>
To: dyoo@hashcollision.org
Cc: bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org,
        Robby Findler <robby@eecs.northwestern.edu>
Subject: Re: [racket-bug] all/12185: Violating signatures in Die Macht der Abstraktion does not raise exception
Date: Fri, 09 Sep 2011 18:32:13 +0200

 dyoo@hashcollision.org writes:
 
 > A new problem report is waiting at
 >   http://bugs.racket-lang.org/query/?cmd=view&pr=12185
 >
 > Reported by Danny Yoo for release: 5.1.3
 >
 > *** Description:
 > I tried the following program in ASL.  In Definitions:
 >
 > ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 > (: g (Number -> Number))
 > (define g
 >  (lambda (x)
 >    (if (= x 0)
 >        x
 >        (list "three" x))))
 > ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 >
 > I ran Definitions, and then in my Interactions window, entered:
 >
 >   > (g 20)
 >
 > I got back a result that was not a number, but I did not see an expected signature error.  I tried this in Die Macht der Abstraktion, with identical results.
 >
 
 Just checkpointing what I found out.  I'll try to look into it some more
 tomorrow:
 
 It's this patch that introduced the bug:
 
 commit 7f9bd528573ddbe5c3b4607e0b9d842e93662427
 Author: Robby Findler <robby@racket-lang.org>
 Date:   Thu Apr 21 21:37:35 2011 -0500
 
     fixed a bug in the way PR 11775 was fixed
       related to PR 11775
       pls. merge to release branch
 
 The new `first-test-since-run?' variable doesn't get set to #t for
 signature tests.
 
 Of course, it fixes something else, so there.
 
 We keep yo-yoing on this issue, which is worrying.
 
 -- 
 Cheers =8-} Mike
 Friede, Völkerverständigung und überhaupt blabla
From: Robby Findler <robby@eecs.northwestern.edu>
To: Michael Sperber <sperber@deinprogramm.de>
Cc: dyoo@hashcollision.org, bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12185: Violating signatures in Die Macht der
 Abstraktion does not raise exception
Date: Fri, 9 Sep 2011 12:03:38 -0500

 On Fri, Sep 9, 2011 at 11:32 AM, Michael Sperber
 <sperber@deinprogramm.de> wrote:
 >
 > dyoo@hashcollision.org writes:
 >
 >> A new problem report is waiting at
 >>   http://bugs.racket-lang.org/query/?cmd=view&pr=12185
 >>
 >> Reported by Danny Yoo for release: 5.1.3
 >>
 >> *** Description:
 >> I tried the following program in ASL.  In Definitions:
 >>
 >> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 >> (: g (Number -> Number))
 >> (define g
 >>  (lambda (x)
 >>    (if (= x 0)
 >>        x
 >>        (list "three" x))))
 >> ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 >>
 >> I ran Definitions, and then in my Interactions window, entered:
 >>
 >>   > (g 20)
 >>
 >> I got back a result that was not a number, but I did not see an expected signature error.  I tried this in Die Macht der Abstraktion, with identical results.
 >>
 >
 > Just checkpointing what I found out.  I'll try to look into it some more
 > tomorrow:
 >
 > It's this patch that introduced the bug:
 >
 > commit 7f9bd528573ddbe5c3b4607e0b9d842e93662427
 > Author: Robby Findler <robby@racket-lang.org>
 > Date:   Thu Apr 21 21:37:35 2011 -0500
 >
 >    fixed a bug in the way PR 11775 was fixed
 >      related to PR 11775
 >      pls. merge to release branch
 >
 > The new `first-test-since-run?' variable doesn't get set to #t for
 > signature tests.
 >
 > Of course, it fixes something else, so there.
 >
 
 Yes, we need better test suites.
 
 Thanks for looking into this. At least the PR should have some help
 for adding more tests. (And it seems pretty clear that the behavior in
 the PR is undesirable.)
 
 > We keep yo-yoing on this issue, which is worrying.
 
 I don't think we're going back and forth between the same two places
 if that's what you mean here.
 
 Robby
 
From: Michael Sperber <sperber@deinprogramm.de>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: dyoo@hashcollision.org, bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12185: Violating signatures in Die Macht der Abstraktion does not raise exception
Date: Sat, 10 Sep 2011 16:43:56 +0200

 Robby Findler <robby@eecs.northwestern.edu> writes:
 
 > I don't think we're going back and forth between the same two places
 > if that's what you mean here.
 
 Yes, that's exactly what we're doing:
 
 We keep going back and forth between popping up the test results too
 often and not enough: This has happened a couple of times now.  
 
 I've stared at your patch for a while, but can't even understand what
 problem it fixes, or what the rationale is.  It is very clear how it
 causes the problem Danny reported - in fact it seems designed to do just
 that :-) Could you elaborate on what it does?
 
 Sorry for needing babysitting on this one once again ...
 
 This one:
 
 commit 7f9bd528573ddbe5c3b4607e0b9d842e93662427
 Author: Robby Findler <robby@racket-lang.org>
 Date:   Thu Apr 21 21:37:35 2011 -0500
 
     fixed a bug in the way PR 11775 was fixed
       related to PR 11775
       pls. merge to release branch
 
 -- 
 Cheers =8-} Mike
 Friede, Völkerverständigung und überhaupt blabla
From: Robby Findler <robby@eecs.northwestern.edu>
To: Michael Sperber <sperber@deinprogramm.de>
Cc: dyoo@hashcollision.org, bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12185: Violating signatures in Die Macht der
 Abstraktion does not raise exception
Date: Sat, 10 Sep 2011 09:55:00 -0500

 I have no memory but the PR it claims to fix was definitely a bug.
 
 I think the problem here is that no one knows how this code is
 supposed to work and what other things depend on it.
 
 Do we have a volunteer to figure that out? Or at least a volunteer to
 enumerate a useful set of test cases/use cases?
 
 Robby
 
 On Sat, Sep 10, 2011 at 9:43 AM, Michael Sperber
 <sperber@deinprogramm.de> wrote:
 >
 > Robby Findler <robby@eecs.northwestern.edu> writes:
 >
 >> I don't think we're going back and forth between the same two places
 >> if that's what you mean here.
 >
 > Yes, that's exactly what we're doing:
 >
 > We keep going back and forth between popping up the test results too
 > often and not enough: This has happened a couple of times now.
 >
 > I've stared at your patch for a while, but can't even understand what
 > problem it fixes, or what the rationale is.  It is very clear how it
 > causes the problem Danny reported - in fact it seems designed to do just
 > that :-) Could you elaborate on what it does?
 >
 > Sorry for needing babysitting on this one once again ...
 >
 > This one:
 >
 > commit 7f9bd528573ddbe5c3b4607e0b9d842e93662427
 > Author: Robby Findler <robby@racket-lang.org>
 > Date:   Thu Apr 21 21:37:35 2011 -0500
 >
 >    fixed a bug in the way PR 11775 was fixed
 >      related to PR 11775
 >      pls. merge to release branch
 >
 > --
 > Cheers =8-} Mike
 > Friede, Völkerverständigung und überhaupt blabla
 >
 

From: Michael Sperber <sperber@deinprogramm.de>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: dyoo@hashcollision.org, bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12185: Violating signatures in Die Macht der Abstraktion does not raise exception
Date: Sun, 11 Sep 2011 09:26:24 +0200

 Robby Findler <robby@eecs.northwestern.edu> writes:
 
 > I have no memory but the PR it claims to fix was definitely a bug.
 
 Absolutely: But the original fix is from me, and I'm not aware of any
 problems it introduced.  Here's the history on test-engine.rkt:
 
 commit 7f9bd528573ddbe5c3b4607e0b9d842e93662427
 Author: Robby Findler <robby@racket-lang.org>
 Date:   Thu Apr 21 21:37:35 2011 -0500
 
     fixed a bug in the way PR 11775 was fixed
       related to PR 11775
       pls. merge to release branch
 
 commit 2bdb9884d33039b72a4249a8a065e7a4f3ec5aa7
 Author: Mike Sperber <sperber@deinprogramm.de>
 Date:   Sat Mar 5 17:48:02 2011 +0100
 
     Don't pop up test-engine window upon innocent REPL interaction.
     
     Closes PR 11775
 
 -- 
 Regards,
 Mike
From: Robby Findler <robby@eecs.northwestern.edu>
To: Michael Sperber <sperber@deinprogramm.de>
Cc: dyoo@hashcollision.org, bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12185: Violating signatures in Die Macht der
 Abstraktion does not raise exception
Date: Sun, 11 Sep 2011 07:36:54 -0500

 Oh. So the pending question is "what goes wrong if we revert my
 commit", I guess. Argh.
 
 My email suggests that this tests/drracket/test-engine-test.rkt test
 suite fails with my commit. Maybe that's a starting point.
 
 Robby
 
 On Sun, Sep 11, 2011 at 2:26 AM, Michael Sperber
 <sperber@deinprogramm.de> wrote:
 >
 > Robby Findler <robby@eecs.northwestern.edu> writes:
 >
 >> I have no memory but the PR it claims to fix was definitely a bug.
 >
 > Absolutely: But the original fix is from me, and I'm not aware of any
 > problems it introduced.  Here's the history on test-engine.rkt:
 >
 > commit 7f9bd528573ddbe5c3b4607e0b9d842e93662427
 > Author: Robby Findler <robby@racket-lang.org>
 > Date:   Thu Apr 21 21:37:35 2011 -0500
 >
 >    fixed a bug in the way PR 11775 was fixed
 >      related to PR 11775
 >      pls. merge to release branch
 >
 > commit 2bdb9884d33039b72a4249a8a065e7a4f3ec5aa7
 > Author: Mike Sperber <sperber@deinprogramm.de>
 > Date:   Sat Mar 5 17:48:02 2011 +0100
 >
 >    Don't pop up test-engine window upon innocent REPL interaction.
 >
 >    Closes PR 11775
 >
 > --
 > Regards,
 > Mike
 >
 
From: Michael Sperber <sperber@deinprogramm.de>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: dyoo@hashcollision.org, bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12185: Violating signatures in Die Macht der Abstraktion does not raise exception
Date: Sun, 11 Sep 2011 16:07:38 +0200

 --=-=-=
 Content-Type: text/plain; charset=iso-8859-1
 Content-Transfer-Encoding: 8bit
 
 
 Robby Findler <robby@eecs.northwestern.edu> writes:
 
 > Oh. So the pending question is "what goes wrong if we revert my
 > commit", I guess. Argh.
 >
 > My email suggests that this tests/drracket/test-engine-test.rkt test
 > suite fails with my commit. Maybe that's a starting point.
 
 Ah, yes it is, thanks.  I've attached a patch that tries to reflect more
 accurately people's expectations of what should pop up in what
 circumstances.  Passes the test suite, too.  I'd appreciate a quick
 review.
 
 -- 
 Cheers =8-} Mike
 Friede, Völkerverständigung und überhaupt blabla
 
 --=-=-=
 Content-Disposition: inline
 
 diff --git a/collects/test-engine/racket-tests.rkt b/collects/test-engine/racket-tests.rkt
 index 6a4bb61..536177b 100644
 --- a/collects/test-engine/racket-tests.rkt
 +++ b/collects/test-engine/racket-tests.rkt
 @@ -377,6 +377,8 @@
  	 
      (define signature-violations '())
  
 +    (inherit report-failure)
 +
      (define/pubment (signature-failed obj signature message blame)
  
        (let* ((cms
 @@ -401,15 +403,18 @@
  	(set! signature-violations
  	      (cons (make-signature-violation obj signature message srcloc blame)
  		    signature-violations)))
 +      (report-failure)
        (inner (void) signature-failed obj signature message))
  
      (define/public (failed-signatures) (reverse signature-violations))
      
      (inherit add-check-failure)
      (define/pubment (property-failed result src-info)
 +      (report-failure)
        (add-check-failure (make-property-fail src-info (test-format) result) #f))
  
      (define/pubment (property-error exn src-info)
 +      (report-failure)
        (add-check-failure (make-property-error src-info (test-format) (exn-message exn) exn) exn))
  
      (super-instantiate ())))
 diff --git a/collects/test-engine/test-engine.rkt b/collects/test-engine/test-engine.rkt
 index 0f7c388..1f08436 100644
 --- a/collects/test-engine/test-engine.rkt
 +++ b/collects/test-engine/test-engine.rkt
 @@ -142,8 +142,8 @@
      (define display-rep #f)
      (define display-event-space #f)
      (define silent-mode #t)
 -    (define test-run-since-last-display? #f)
 -    (define first-test-since-run? #t)
 +    (define initial-report-done #f)
 +    (define unreported-tests #f)
  
      (super-instantiate ())
  
 @@ -154,7 +154,7 @@
      (define/public (add-analysis a) (send test-info add-analysis a))
  
      (define/public (setup-info style)
 -      (set! first-test-since-run? #t)
 +      (set! initial-report-done #f)
        (set! test-info (make-object (info-class) style)))
      (define/pubment (setup-display cur-rep event-space)
        (set! test-display (make-object display-class cur-rep))
 @@ -175,8 +175,9 @@
  
      (define/public (summarize-results port)
        (cond
 -       ((and (not test-run-since-last-display?)
 -             (not first-test-since-run?)))
 +       ((and initial-report-done
 +	     (not unreported-tests)
 +	     (not (send test-info has-unreported-failures))))
         ((test-execute)
          (unless test-display (setup-display #f #f))
  	(send test-display install-info test-info)
 @@ -191,16 +192,16 @@
  					       (+ (send test-info tests-run)
  						  (send test-info checks-run)))]
  		[(mixed-results)
 -		 (display-results display-rep display-event-space)]))))
 +		 (display-results display-rep display-event-space)])))
 +	(send test-info clear-unreported-failures)
 +	(set! initial-report-done #t)
 +	(set! unreported-tests #f))
         (else
 -	(display-disabled port)))
 -      (set! first-test-since-run? #f)
 -      (set! test-run-since-last-display? #f))
 +	(display-disabled port))))
  
      (define/private (display-success port event-space count)
 -      (when test-run-since-last-display?
 -	(clear-results event-space)
 -	(send test-display display-success-summary port count)))
 +      (clear-results event-space)
 +      (send test-display display-success-summary port count))
  
      (define/public (display-results rep event-space)
        (cond
 @@ -214,19 +215,17 @@
         [else (send test-display display-results)]))
  
      (define/public (display-untested port)
 -      (when (and test-run-since-last-display?
 -		 (not silent-mode))
 +      (when (not silent-mode)
  	(send test-display display-untested-summary port)))
  
      (define/public (display-disabled port)
 -      (when test-run-since-last-display?
 -	(send test-display display-disabled-summary port)))
 +      (send test-display display-disabled-summary port))
  
      (define/pubment (initialize-test test)
        (inner (void) initialize-test test))
  
      (define/pubment (run-test test)
 -      (set! test-run-since-last-display? #t)
 +      (set! unreported-tests #t)
        (inner (void) run-test test))
  
      (define/pubment (run-testcase testcase)
 diff --git a/collects/test-engine/test-info.scm b/collects/test-engine/test-info.scm
 index 429b93e..91e91ea 100644
 --- a/collects/test-engine/test-info.scm
 +++ b/collects/test-engine/test-info.scm
 @@ -58,6 +58,17 @@
      (define failures null)
      (define wishes null)
  
 +    (define unreported-failures #f)
 +
 +    (define/public (clear-unreported-failures)
 +      (set! unreported-failures #f))
 +
 +    (define/public (report-failure)
 +      (set! unreported-failures #t))
 +
 +    (define/public (has-unreported-failures)
 +      unreported-failures)
 +
      (define/public (test-style) style)
      (define/public (tests-run) total-tsts)
      (define/public (tests-failed) failed-tsts)
 @@ -105,10 +116,12 @@
  		 msg
  		 (make-message-error src #f msg))))
  	(add-check-failure fail exn?)
 +	(report-failure)
  	(inner (void) check-failed fail src exn?)))
  
      (define/pubment (test-failed failed-info)
        (set! failed-tsts (add1 failed-tsts))
 +      (report-failure)
        (inner (void) test-failed failed-info))
  
      (define/public (add-analysis a) (set! analyses (cons a analyses)))
 
 --=-=-=--
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Michael Sperber <sperber@deinprogramm.de>
Cc: Robby Findler <robby@eecs.northwestern.edu>, dyoo@hashcollision.org,
        bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12185: Violating signatures in Die Macht der Abstraktion does not raise exception
Date: Sun, 11 Sep 2011 19:41:57 -0400

 I installed the patches and I played with them. Nothing deep, just what Danny complained about etc. 
 
 As far as I can tell, the (undocked) violation window behaves in a desirable manner:
  -- it stays out of my way when I correctly apply functions 
  -- it pops up when I call a function with bad args from the repl 
  -- it pops up when I get an undesirable result
 
 It also works when I dock the window. 
 
 (To this day, however, I find that signatures should be treated differently from test failures. Stop the program. But that's a discussion for a different thread.) 
 
 I'd say apply the patch and push. 
 
 
 
 
 On Sep 11, 2011, at 10:07 AM, Michael Sperber wrote:
 
 > 
 > Robby Findler <robby@eecs.northwestern.edu> writes:
 > 
 >> Oh. So the pending question is "what goes wrong if we revert my
 >> commit", I guess. Argh.
 >> 
 >> My email suggests that this tests/drracket/test-engine-test.rkt test
 >> suite fails with my commit. Maybe that's a starting point.
 > 
 > Ah, yes it is, thanks.  I've attached a patch that tries to reflect more
 > accurately people's expectations of what should pop up in what
 > circumstances.  Passes the test suite, too.  I'd appreciate a quick
 > review.
 > 
 > -- 
 > Cheers =8-} Mike
 > Friede, Völkerverständigung und überhaupt blabla
 > diff --git a/collects/test-engine/racket-tests.rkt b/collects/test-engine/racket-tests.rkt
 > index 6a4bb61..536177b 100644
 > --- a/collects/test-engine/racket-tests.rkt
 > +++ b/collects/test-engine/racket-tests.rkt
 > @@ -377,6 +377,8 @@
 > 	 
 >     (define signature-violations '())
 > 
 > +    (inherit report-failure)
 > +
 >     (define/pubment (signature-failed obj signature message blame)
 > 
 >       (let* ((cms
 > @@ -401,15 +403,18 @@
 > 	(set! signature-violations
 > 	      (cons (make-signature-violation obj signature message srcloc blame)
 > 		    signature-violations)))
 > +      (report-failure)
 >       (inner (void) signature-failed obj signature message))
 > 
 >     (define/public (failed-signatures) (reverse signature-violations))
 > 
 >     (inherit add-check-failure)
 >     (define/pubment (property-failed result src-info)
 > +      (report-failure)
 >       (add-check-failure (make-property-fail src-info (test-format) result) #f))
 > 
 >     (define/pubment (property-error exn src-info)
 > +      (report-failure)
 >       (add-check-failure (make-property-error src-info (test-format) (exn-message exn) exn) exn))
 > 
 >     (super-instantiate ())))
 > diff --git a/collects/test-engine/test-engine.rkt b/collects/test-engine/test-engine.rkt
 > index 0f7c388..1f08436 100644
 > --- a/collects/test-engine/test-engine.rkt
 > +++ b/collects/test-engine/test-engine.rkt
 > @@ -142,8 +142,8 @@
 >     (define display-rep #f)
 >     (define display-event-space #f)
 >     (define silent-mode #t)
 > -    (define test-run-since-last-display? #f)
 > -    (define first-test-since-run? #t)
 > +    (define initial-report-done #f)
 > +    (define unreported-tests #f)
 > 
 >     (super-instantiate ())
 > 
 > @@ -154,7 +154,7 @@
 >     (define/public (add-analysis a) (send test-info add-analysis a))
 > 
 >     (define/public (setup-info style)
 > -      (set! first-test-since-run? #t)
 > +      (set! initial-report-done #f)
 >       (set! test-info (make-object (info-class) style)))
 >     (define/pubment (setup-display cur-rep event-space)
 >       (set! test-display (make-object display-class cur-rep))
 > @@ -175,8 +175,9 @@
 > 
 >     (define/public (summarize-results port)
 >       (cond
 > -       ((and (not test-run-since-last-display?)
 > -             (not first-test-since-run?)))
 > +       ((and initial-report-done
 > +	     (not unreported-tests)
 > +	     (not (send test-info has-unreported-failures))))
 >        ((test-execute)
 >         (unless test-display (setup-display #f #f))
 > 	(send test-display install-info test-info)
 > @@ -191,16 +192,16 @@
 > 					       (+ (send test-info tests-run)
 > 						  (send test-info checks-run)))]
 > 		[(mixed-results)
 > -		 (display-results display-rep display-event-space)]))))
 > +		 (display-results display-rep display-event-space)])))
 > +	(send test-info clear-unreported-failures)
 > +	(set! initial-report-done #t)
 > +	(set! unreported-tests #f))
 >        (else
 > -	(display-disabled port)))
 > -      (set! first-test-since-run? #f)
 > -      (set! test-run-since-last-display? #f))
 > +	(display-disabled port))))
 > 
 >     (define/private (display-success port event-space count)
 > -      (when test-run-since-last-display?
 > -	(clear-results event-space)
 > -	(send test-display display-success-summary port count)))
 > +      (clear-results event-space)
 > +      (send test-display display-success-summary port count))
 > 
 >     (define/public (display-results rep event-space)
 >       (cond
 > @@ -214,19 +215,17 @@
 >        [else (send test-display display-results)]))
 > 
 >     (define/public (display-untested port)
 > -      (when (and test-run-since-last-display?
 > -		 (not silent-mode))
 > +      (when (not silent-mode)
 > 	(send test-display display-untested-summary port)))
 > 
 >     (define/public (display-disabled port)
 > -      (when test-run-since-last-display?
 > -	(send test-display display-disabled-summary port)))
 > +      (send test-display display-disabled-summary port))
 > 
 >     (define/pubment (initialize-test test)
 >       (inner (void) initialize-test test))
 > 
 >     (define/pubment (run-test test)
 > -      (set! test-run-since-last-display? #t)
 > +      (set! unreported-tests #t)
 >       (inner (void) run-test test))
 > 
 >     (define/pubment (run-testcase testcase)
 > diff --git a/collects/test-engine/test-info.scm b/collects/test-engine/test-info.scm
 > index 429b93e..91e91ea 100644
 > --- a/collects/test-engine/test-info.scm
 > +++ b/collects/test-engine/test-info.scm
 > @@ -58,6 +58,17 @@
 >     (define failures null)
 >     (define wishes null)
 > 
 > +    (define unreported-failures #f)
 > +
 > +    (define/public (clear-unreported-failures)
 > +      (set! unreported-failures #f))
 > +
 > +    (define/public (report-failure)
 > +      (set! unreported-failures #t))
 > +
 > +    (define/public (has-unreported-failures)
 > +      unreported-failures)
 > +
 >     (define/public (test-style) style)
 >     (define/public (tests-run) total-tsts)
 >     (define/public (tests-failed) failed-tsts)
 > @@ -105,10 +116,12 @@
 > 		 msg
 > 		 (make-message-error src #f msg))))
 > 	(add-check-failure fail exn?)
 > +	(report-failure)
 > 	(inner (void) check-failed fail src exn?)))
 > 
 >     (define/pubment (test-failed failed-info)
 >       (set! failed-tsts (add1 failed-tsts))
 > +      (report-failure)
 >       (inner (void) test-failed failed-info))
 > 
 >     (define/public (add-analysis a) (set! analyses (cons a analyses)))
 
 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: Michael Sperber <sperber@deinprogramm.de>, dyoo@hashcollision.org,
        bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12185: Violating signatures in Die Macht der
 Abstraktion does not raise exception
Date: Sun, 11 Sep 2011 21:27:10 -0500

 Can we also get the test case that Danny pointed out put into a test
 suite somewhere so we avoid going back and forth and just go forth?
 
 Robby
 
 On Sun, Sep 11, 2011 at 6:41 PM, Matthias Felleisen
 <matthias@ccs.neu.edu> wrote:
 >
 > I installed the patches and I played with them. Nothing deep, just what Danny complained about etc.
 >
 > As far as I can tell, the (undocked) violation window behaves in a desirable manner:
 >  -- it stays out of my way when I correctly apply functions
 >  -- it pops up when I call a function with bad args from the repl
 >  -- it pops up when I get an undesirable result
 >
 > It also works when I dock the window.
 >
 > (To this day, however, I find that signatures should be treated differently from test failures. Stop the program. But that's a discussion for a different thread.)
 >
 > I'd say apply the patch and push.
 >
 >
 >
 >
 > On Sep 11, 2011, at 10:07 AM, Michael Sperber wrote:
 >
 >>
 >> Robby Findler <robby@eecs.northwestern.edu> writes:
 >>
 >>> Oh. So the pending question is "what goes wrong if we revert my
 >>> commit", I guess. Argh.
 >>>
 >>> My email suggests that this tests/drracket/test-engine-test.rkt test
 >>> suite fails with my commit. Maybe that's a starting point.
 >>
 >> Ah, yes it is, thanks.  I've attached a patch that tries to reflect more
 >> accurately people's expectations of what should pop up in what
 >> circumstances.  Passes the test suite, too.  I'd appreciate a quick
 >> review.
 >>
 >> --
 >> Cheers =8-} Mike
 >> Friede, Völkerverständigung und überhaupt blabla
 >> diff --git a/collects/test-engine/racket-tests.rkt b/collects/test-engine/racket-tests.rkt
 >> index 6a4bb61..536177b 100644
 >> --- a/collects/test-engine/racket-tests.rkt
 >> +++ b/collects/test-engine/racket-tests.rkt
 >> @@ -377,6 +377,8 @@
 >>
 >>     (define signature-violations '())
 >>
 >> +    (inherit report-failure)
 >> +
 >>     (define/pubment (signature-failed obj signature message blame)
 >>
 >>       (let* ((cms
 >> @@ -401,15 +403,18 @@
 >>       (set! signature-violations
 >>             (cons (make-signature-violation obj signature message srcloc blame)
 >>                   signature-violations)))
 >> +      (report-failure)
 >>       (inner (void) signature-failed obj signature message))
 >>
 >>     (define/public (failed-signatures) (reverse signature-violations))
 >>
 >>     (inherit add-check-failure)
 >>     (define/pubment (property-failed result src-info)
 >> +      (report-failure)
 >>       (add-check-failure (make-property-fail src-info (test-format) result) #f))
 >>
 >>     (define/pubment (property-error exn src-info)
 >> +      (report-failure)
 >>       (add-check-failure (make-property-error src-info (test-format) (exn-message exn) exn) exn))
 >>
 >>     (super-instantiate ())))
 >> diff --git a/collects/test-engine/test-engine.rkt b/collects/test-engine/test-engine.rkt
 >> index 0f7c388..1f08436 100644
 >> --- a/collects/test-engine/test-engine.rkt
 >> +++ b/collects/test-engine/test-engine.rkt
 >> @@ -142,8 +142,8 @@
 >>     (define display-rep #f)
 >>     (define display-event-space #f)
 >>     (define silent-mode #t)
 >> -    (define test-run-since-last-display? #f)
 >> -    (define first-test-since-run? #t)
 >> +    (define initial-report-done #f)
 >> +    (define unreported-tests #f)
 >>
 >>     (super-instantiate ())
 >>
 >> @@ -154,7 +154,7 @@
 >>     (define/public (add-analysis a) (send test-info add-analysis a))
 >>
 >>     (define/public (setup-info style)
 >> -      (set! first-test-since-run? #t)
 >> +      (set! initial-report-done #f)
 >>       (set! test-info (make-object (info-class) style)))
 >>     (define/pubment (setup-display cur-rep event-space)
 >>       (set! test-display (make-object display-class cur-rep))
 >> @@ -175,8 +175,9 @@
 >>
 >>     (define/public (summarize-results port)
 >>       (cond
 >> -       ((and (not test-run-since-last-display?)
 >> -             (not first-test-since-run?)))
 >> +       ((and initial-report-done
 >> +          (not unreported-tests)
 >> +          (not (send test-info has-unreported-failures))))
 >>        ((test-execute)
 >>         (unless test-display (setup-display #f #f))
 >>       (send test-display install-info test-info)
 >> @@ -191,16 +192,16 @@
 >>                                              (+ (send test-info tests-run)
 >>                                                 (send test-info checks-run)))]
 >>               [(mixed-results)
 >> -              (display-results display-rep display-event-space)]))))
 >> +              (display-results display-rep display-event-space)])))
 >> +     (send test-info clear-unreported-failures)
 >> +     (set! initial-report-done #t)
 >> +     (set! unreported-tests #f))
 >>        (else
 >> -     (display-disabled port)))
 >> -      (set! first-test-since-run? #f)
 >> -      (set! test-run-since-last-display? #f))
 >> +     (display-disabled port))))
 >>
 >>     (define/private (display-success port event-space count)
 >> -      (when test-run-since-last-display?
 >> -     (clear-results event-space)
 >> -     (send test-display display-success-summary port count)))
 >> +      (clear-results event-space)
 >> +      (send test-display display-success-summary port count))
 >>
 >>     (define/public (display-results rep event-space)
 >>       (cond
 >> @@ -214,19 +215,17 @@
 >>        [else (send test-display display-results)]))
 >>
 >>     (define/public (display-untested port)
 >> -      (when (and test-run-since-last-display?
 >> -              (not silent-mode))
 >> +      (when (not silent-mode)
 >>       (send test-display display-untested-summary port)))
 >>
 >>     (define/public (display-disabled port)
 >> -      (when test-run-since-last-display?
 >> -     (send test-display display-disabled-summary port)))
 >> +      (send test-display display-disabled-summary port))
 >>
 >>     (define/pubment (initialize-test test)
 >>       (inner (void) initialize-test test))
 >>
 >>     (define/pubment (run-test test)
 >> -      (set! test-run-since-last-display? #t)
 >> +      (set! unreported-tests #t)
 >>       (inner (void) run-test test))
 >>
 >>     (define/pubment (run-testcase testcase)
 >> diff --git a/collects/test-engine/test-info.scm b/collects/test-engine/test-info.scm
 >> index 429b93e..91e91ea 100644
 >> --- a/collects/test-engine/test-info.scm
 >> +++ b/collects/test-engine/test-info.scm
 >> @@ -58,6 +58,17 @@
 >>     (define failures null)
 >>     (define wishes null)
 >>
 >> +    (define unreported-failures #f)
 >> +
 >> +    (define/public (clear-unreported-failures)
 >> +      (set! unreported-failures #f))
 >> +
 >> +    (define/public (report-failure)
 >> +      (set! unreported-failures #t))
 >> +
 >> +    (define/public (has-unreported-failures)
 >> +      unreported-failures)
 >> +
 >>     (define/public (test-style) style)
 >>     (define/public (tests-run) total-tsts)
 >>     (define/public (tests-failed) failed-tsts)
 >> @@ -105,10 +116,12 @@
 >>                msg
 >>                (make-message-error src #f msg))))
 >>       (add-check-failure fail exn?)
 >> +     (report-failure)
 >>       (inner (void) check-failed fail src exn?)))
 >>
 >>     (define/pubment (test-failed failed-info)
 >>       (set! failed-tsts (add1 failed-tsts))
 >> +      (report-failure)
 >>       (inner (void) test-failed failed-info))
 >>
 >>     (define/public (add-analysis a) (set! analyses (cons a analyses)))
 >
 >
 
State changed from "open" to "closed" by sperber@racket-lang.org at Wed, 14 Sep 2011 16:00:52 -0400
Reason>>> A commit by sperber@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/bbb38c0ff9
