From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Thu Aug 25 16:02:17 2011
Received: from mail-vw0-f44.google.com (mail-vw0-f44.google.com [209.85.212.44])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id p7PK2EhW024014
	for <bugs@bugs.plt-scheme.org>; Thu, 25 Aug 2011 16:02:14 -0400
Message-Id: <201108252002.p7PK2AQh024009@champlain.ccs.neu.edu>
Date: Thu, 25 Aug 2011 16:02:10 -0400
From: djg@cs.washington.edu
To: bugs@racket-lang.org
Subject: don't like name/description of andmap, ormap

>Number:         12132
>Category:       scribble
>Synopsis:       don't like name/description of andmap, ormap
>Class:          change-request
>Responsible:    mflatt
>Severity:       non-critical
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Thu Aug 25 16:04:01 -0400 2011
>Closed-Date:    Wed Mar 27 15:30:57 -0400 2013
>Last-Modified:  Wed Mar 27 15:30:57 -0400 2013
>Originator:     Dan Grossman
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.1.3
>Environment:
Win32 / Mozilla/5.0 (Windows NT 6.1; rv:6.0) Gecko/20100101 Firefox/6.0
>Description:
[Please let me know if there is a better way to provide this sort of language feedback.  I'll be using Racket for 2-3 weeks of an undergrad PL course this Fall.  Much has changed since I last did this in 2008, so I've been reading the Racket User's Guide.  It is *excellent* and many of the recent changes are *fantastic*.]

I wish andmap and ormap didn't have "map" in their name since the notion of "maps" vs. "reductions" has become widely influential and these forms are short-circuiting variants of the latter, with less relation to the former.  I would also quibble with the documentation in 3.9.3 of the User's Guide -- they're easier to explain in terms of foldl than map.
>How-To-Repeat:
>Fix:
>Audit-Trail:
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: djg@cs.washington.edu, bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12132: don't like name/description of andmap, ormap
Date: Thu, 25 Aug 2011 19:55:03 -0400

 On Aug 25, 2011, at 4:04 PM, djg@cs.washington.edu wrote:
 
 > A new problem report is waiting at
 >  http://bugs.racket-lang.org/query/?cmd=view&pr=12132
 > 
 > Reported by Dan Grossman for release: 5.1.3
 > 
 > *** Description:
 > 
 > [Please let me know if there is a better way to provide this sort of language feedback.  I'll be using Racket for 2-3 weeks of an undergrad PL course this Fall.  Much has changed since I last did this in 2008, so I've been reading the Racket User's Guide.  It is *excellent* and many of the recent changes are *fantastic*.]
 > 
 > I wish andmap and ormap didn't have "map" in their name since the notion of "maps" vs. "reductions" has become widely influential and these forms are short-circuiting variants of the latter, with less relation to the former.  I would also quibble with the documentation in 3.9.3 of the User's Guide -- they're easier to explain in terms of foldl than map.
 
 
 We can't do anything about the names but we can change the docs. Would it be enough to change 'similar to map' to 'similar to fold'? Did you see the docs in the teaching languages or do you intend to use full Racket? 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: djg@cs.washington.edu, bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12132: don't like name/description of andmap, ormap
Date: Thu, 25 Aug 2011 19:43:41 -0500

 Also, if you have the energy, Racket's support for building new
 languages is pretty good and it is easy to make a language that has
 just what you want for your course. FWIW.
 
 Robby
 
 On Thu, Aug 25, 2011 at 6:55 PM, Matthias Felleisen
 <matthias@ccs.neu.edu> wrote:
 >
 >
 > On Aug 25, 2011, at 4:04 PM, djg@cs.washington.edu wrote:
 >
 >> A new problem report is waiting at
 >>  http://bugs.racket-lang.org/query/?cmd=view&pr=12132
 >>
 >> Reported by Dan Grossman for release: 5.1.3
 >>
 >> *** Description:
 >>
 >> [Please let me know if there is a better way to provide this sort of language feedback.  I'll be using Racket for 2-3 weeks of an undergrad PL course this Fall.  Much has changed since I last did this in 2008, so I've been reading the Racket User's Guide.  It is *excellent* and many of the recent changes are *fantastic*.]
 >>
 >> I wish andmap and ormap didn't have "map" in their name since the notion of "maps" vs. "reductions" has become widely influential and these forms are short-circuiting variants of the latter, with less relation to the former.  I would also quibble with the documentation in 3.9.3 of the User's Guide -- they're easier to explain in terms of foldl than map.
 >
 >
 > We can't do anything about the names but we can change the docs. Would it be enough to change 'similar to map' to 'similar to fold'? Did you see the docs in the teaching languages or do you intend to use full Racket?
 
From: Dan Grossman <djg@cs.washington.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: Matthias Felleisen <matthias@ccs.neu.edu>, bugs@racket-lang.org,
        nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12132: don't like name/description of andmap, ormap
Date: Thu, 25 Aug 2011 22:02:35 -0700

 Thank you both for the speedy reply.
 
 This really was a minor nit, pointing out to you that I think ormap
 and andmap are misnamed.  It won't really affect my class in any
 meaningful way -- if these functions come up, it will be an
 opportunity to point out that nobody is perfect. :-) Re-reading
 section 3.9.3 of the Racket reference carefully, the docs as written
 are quite accurate.  "Similar to map" is referring to this paragraph
 that describes map:
 
 > Applies proc to the elements of the lsts from the first elements to the last. The proc argument must accept > the same number of arguments as the number of supplied lsts, and all lsts must have the same number of > elements. The result is a list containing each result of proc in order.
 
 And indeed everything in that paragraph applies to andmap and ormap
 except the last sentence.  Pointing to foldl/foldr instead is more
 cumbersome because of the explicit accumulator.  So I can't recommend
 changing the docs, even though andmap and ormap are not maps.
 
 More generally, I appreciate the flexibility of being able to define
 my own language, but I definitely plan to stick to full Racket and
 have the students' primary source outside of my own lecture notes be
 the Racket Guide (not the Reference).  I am very happy with this
 documentation and that it accurately describes a real, complete, and
 modern language.  I also use SML and Ruby in the course.  While using
 Racket, I teach about several topics, including various scope
 definitions, dynamic typing, generative structs, very basic macros,
 some module stuff, streams, and memoization (using mcons for those
 last two).
 
 I do have questions and comments on a couple more topics, one
 substantive... do you want those on this email thread or would you
 rather I submit them separately?
 
 --Dan
 
 On Thu, Aug 25, 2011 at 5:43 PM, Robby Findler
 <robby@eecs.northwestern.edu> wrote:
 > Also, if you have the energy, Racket's support for building new
 > languages is pretty good and it is easy to make a language that has
 > just what you want for your course. FWIW.
 >
 > Robby
 >
 > On Thu, Aug 25, 2011 at 6:55 PM, Matthias Felleisen
 > <matthias@ccs.neu.edu> wrote:
 >>
 >>
 >> On Aug 25, 2011, at 4:04 PM, djg@cs.washington.edu wrote:
 >>
 >>> A new problem report is waiting at
 >>>  http://bugs.racket-lang.org/query/?cmd=view&pr=12132
 >>>
 >>> Reported by Dan Grossman for release: 5.1.3
 >>>
 >>> *** Description:
 >>>
 >>> [Please let me know if there is a better way to provide this sort of language feedback.  I'll be using Racket for 2-3 weeks of an undergrad PL course this Fall.  Much has changed since I last did this in 2008, so I've been reading the Racket User's Guide.  It is *excellent* and many of the recent changes are *fantastic*.]
 >>>
 >>> I wish andmap and ormap didn't have "map" in their name since the notion of "maps" vs. "reductions" has become widely influential and these forms are short-circuiting variants of the latter, with less relation to the former.  I would also quibble with the documentation in 3.9.3 of the User's Guide -- they're easier to explain in terms of foldl than map.
 >>
 >>
 >> We can't do anything about the names but we can change the docs. Would it be enough to change 'similar to map' to 'similar to fold'? Did you see the docs in the teaching languages or do you intend to use full Racket?
 >
 
From: Eli Barzilay <eli@barzilay.org>
To: Dan Grossman <djg@cs.washington.edu>
Cc: Robby Findler <robby@eecs.northwestern.edu>,
        Matthias Felleisen <matthias@ccs.neu.edu>, bugs@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12132: don't like name/description of andmap, ormap
Date: Fri, 26 Aug 2011 01:23:55 -0400

 10 minutes ago, Dan Grossman wrote:
 > 
 > More generally, I appreciate the flexibility of being able to define
 > my own language, but I definitely plan to stick to full Racket and
 > have the students' primary source outside of my own lecture notes be
 > the Racket Guide (not the Reference).  I am very happy with this
 > documentation and that it accurately describes a real, complete, and
 > modern language.  I also use SML and Ruby in the course.  While
 > using Racket, I teach about several topics, including various scope
 > definitions, dynamic typing, generative structs, very basic macros,
 > some module stuff, streams, and memoization (using mcons for those
 > last two).
 
 2½ quick notes:
 
 1. Especially given that you're using SML too, you should really do
    some typed racket.  Good to avoid the common misconception that
    static typing means HM and nothing else.  Plus, you're getting a
    type system where you can choose one of several types, and get a
    first-hand experience in the tradeoffs between using very specific
    and very vague types.  (Something that is completely nonexistent in
    SML.)
 
 2. Doing streams is cute, but it doesn't really give students an idea
    of how things work in a lazy language.  For that, we have a lazy
    laguage too, which works much better.  (Assuming that demonstrating
    laziness is a desired goal.)  That can come in addition to streams,
    eg, showing how some laziness can be used in a strict language.
 
 2.5. Using mcons doesn't sound like a good idea in a class context.
      Boxes work much better in general, and also if you're showing SML
      code since they're the same as references.
 
 
 > I do have questions and comments on a couple more topics, one
 > substantive... do you want those on this email thread or would you
 > rather I submit them separately?
 
 (Seems to me like it's better to do this on the mailing list.)
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!
 
From: Ryan Culpepper <ryan@cs.utah.edu>
To: Dan Grossman <djg@cs.washington.edu>
Cc: Robby Findler <robby@eecs.northwestern.edu>,
        Matthias Felleisen <matthias@ccs.neu.edu>, bugs@racket-lang.org,
        nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12132: don't like name/description of andmap,
 ormap
Date: Fri, 26 Aug 2011 00:52:40 -0600

 On 08/25/2011 11:02 PM, Dan Grossman wrote:
 > Thank you both for the speedy reply.
 >
 > This really was a minor nit, pointing out to you that I think ormap
 > and andmap are misnamed.  It won't really affect my class in any
 > meaningful way -- if these functions come up, it will be an
 > opportunity to point out that nobody is perfect. :-) Re-reading
 > section 3.9.3 of the Racket reference carefully, the docs as written
 > are quite accurate.  "Similar to map" is referring to this paragraph
 > that describes map:
 >
 >> Applies proc to the elements of the lsts from the first elements to
 >> the last. The proc argument must accept>  the same number of
 >> arguments as the number of supplied lsts, and all lsts must have
 >> the same number of>  elements. The result is a list containing each
 >> result of proc in order.
 >
 > And indeed everything in that paragraph applies to andmap and ormap
 > except the last sentence.  Pointing to foldl/foldr instead is more
 > cumbersome because of the explicit accumulator.  So I can't recommend
 > changing the docs, even though andmap and ormap are not maps.
 
 I think the key is "similar to map" as opposed to "kinds of maps", and 
 the best justification for that claim is the following set of equations:
 
 (map    f (list v1 v2 ...) = (list (f v1) (f v2) ...)
 (andmap f (list v1 v2 ...) = (and  (f v1) (f v2) ...)
 (ormap  f (list v1 v2 ...) = (or   (f v1) (f v2) ...)
 
 Ryan
From: Robby Findler <robby@eecs.northwestern.edu>
To: Eli Barzilay <eli@barzilay.org>
Cc: Dan Grossman <djg@cs.washington.edu>,
        Matthias Felleisen <matthias@ccs.neu.edu>, bugs@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12132: don't like name/description of andmap, ormap
Date: Fri, 26 Aug 2011 06:36:37 -0500

 On Fri, Aug 26, 2011 at 12:23 AM, Eli Barzilay <eli@barzilay.org> wrote:
 >> I do have questions and comments on a couple more topics, one
 >> substantive... do you want those on this email thread or would you
 >> rather I submit them separately?
 >
 > (Seems to me like it's better to do this on the mailing list.)
 
 Yes, I agree.
 
 Robby
From: Shriram Krishnamurthi <sk@cs.brown.edu>
To: Eli Barzilay <eli@barzilay.org>
Cc: Dan Grossman <djg@cs.washington.edu>,
        Robby Findler <robby@eecs.northwestern.edu>,
        Matthias Felleisen <matthias@ccs.neu.edu>, bugs@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12132: don't like name/description of andmap, ormap
Date: Fri, 26 Aug 2011 09:22:24 -0400

 I'll look forward to this continuing on the mailing list, but I wanted
 to add one remark to what Eli said re Typed Racket.
 
 I find my students get a *huge* a-ha the very first time they see a
 untyped/typed interaction.  Simple, small programs; I show them the
 run-time error on the untyped side, move code into typed, keep the
 call in untyped, ask them to predict what will happen; most expect the
 same thing, the skeptical few know there's a catch but just can't tell
 what it's going to be; I run it, and then we spend 5-10 minutes
 talking about the error they saw.
 
 For the weaker students they at least feel like they sat through
 something significant; for the better students, it's a truly
 eye-opening experience.
 
 [As a Racket partisan, I get to also point out that they've just seen
 why *I* use Racket, and that they're seeing something that is truly on
 the cutting edge of PL research -- try doing this in Python, I say,
 and they know they can't.  You can do the same without the partisan
 edge, since the rest is all just fact.]
 
 Shriram
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Ryan Culpepper <ryan@cs.utah.edu>
Cc: Dan Grossman <djg@cs.washington.edu>,
        Robby Findler <robby@eecs.northwestern.edu>, bugs@racket-lang.org,
        nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12132: don't like name/description of andmap, ormap
Date: Fri, 26 Aug 2011 09:20:03 -0400

 All I can say is that we should put this somewhere in the docs. (It's something that I may have written down on a BB, and I may be guilty of having inspired the 'like map' description.) 
 
 
 On Aug 26, 2011, at 2:52 AM, Ryan Culpepper wrote:
 
 > I think the key is "similar to map" as opposed to "kinds of maps", and the best justification for that claim is the following set of equations:
 > 
 > (map    f (list v1 v2 ...) = (list (f v1) (f v2) ...)
 > (andmap f (list v1 v2 ...) = (and  (f v1) (f v2) ...)
 > (ormap  f (list v1 v2 ...) = (or   (f v1) (f v2) ...)
 
 


State changed from "open" to "closed" by dyoo at Wed, 27 Mar 2013 15:30:57 -0400
Reason>>> Discussion moved to mailing list.  http://lists.racket-
lang.org/users/archive/2011-August/047504.html

