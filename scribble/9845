From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Sat Oct 18 21:34:02 2008
Received: from rv-out-0506.google.com (rv-out-0506.google.com [209.85.198.234])
	by champlain.ccs.neu.edu (8.14.2/8.14.2) with ESMTP id m9J1Xsgb028857
	for <bugs@bugs.plt-scheme.org>; Sat, 18 Oct 2008 21:33:54 -0400
Message-Id: <200810190133.m9J1XpFx028850@champlain.ccs.neu.edu>
Date: Sat, 18 Oct 2008 21:33:51 -0400
From: robby@cs.uchicago.edu
To: bugs@plt-scheme.org
Subject: scribble/eval doesn't like result of sandbox's make-evaluator

>Number:         9845
>Category:       scribble
>Synopsis:       scribble/eval doesn't like result of sandbox's make-evaluator
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Sat Oct 18 21:36:01 -0400 2008
>Closed-Date:    Thu May 12 19:08:17 -0400 2011
>Last-Modified:  Thu May 12 19:08:17 -0400 2011
>Originator:     Robby Findler
>Organization:
plt
>Submitter-Id:   unknown
>Release:        4.1.1.2-svn13oct2008
>Environment:
macosx "Darwin chienshi.local 9.5.0 Darwin Kernel Version 9.5.0: Wed Sep  3 11:29:43 PDT 2008; root:xnu-1228.7.58~1/RELEASE_I386 i386" (i386-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 136486080

Collections:
(("/Users/robby/Library/PLT Scheme/4.1.1.2/collects" non-existent-path) ("/Users/robby/svn/exp/plt/collects" ".svn" "afm" "algol60" "browser" "combinator-parser" "compiler" "config" "defaults" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profj" "profjWizard" "r5rs" "r6rs" "readline" "redex" "repos-time-stamp" "rnrs" "s-exp" "scheme" "scribble" "scribblings" "setup" "sgl" "sirmail" "slatex" "slideshow" "srfi" "srpersist" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tests" "tex2page" "texpict" "trace" "typed-scheme" "version" "waterworld" "web-server" "wxme" "xml"!
 ))
Computer Language: (("Module") (#(#t write mixed-fraction-e #f #t debug/profile) (default) #() "#lang scheme\n"))
>Description:
Run the below. At a min it is wrong because there is no call to string=? visible, nor empty strings.
>How-To-Repeat:
#lang scheme
(require scheme/sandbox scribble/eval)
(interaction 
 #:eval (make-evaluator 'scheme)
 1)

;; ==> 

string=?: expects type <string> as 2nd argument, given: #f; other arguments were: ""
>Fix:
>Audit-Trail:
From: Matthew Flatt <mflatt@cs.utah.edu>
To: robby@cs.uchicago.edu, bugs@plt-scheme.org
Cc: 
Subject: Re: [plt-bug] all/9845: scribble/eval doesn't like result of sandbox's make-evaluator
Date: Sun, 19 Oct 2008 06:00:28 -0500

 At Sat, 18 Oct 2008 21:36:02 -0400, robby@cs.uchicago.edu wrote:
 > #lang scheme
 > (require scheme/sandbox scribble/eval)
 > (interaction 
 >  #:eval (make-evaluator 'scheme)
 >  1)
 
 Here's how to make it work:
 
  (interaction 
   #:eval (parameterize ([sandbox-output 'string]
                         [sandbox-error-output 'string])
            (make-evaluator 'scheme))
   1)
 
From: "Robby Findler" <robby@cs.uchicago.edu>
To: "Matthew Flatt" <mflatt@cs.utah.edu>
Cc: bugs@plt-scheme.org
Subject: Re: [plt-bug] all/9845: scribble/eval doesn't like result of sandbox's make-evaluator
Date: Sun, 19 Oct 2008 07:29:43 -0500

 Is interaction a function? Could it have a contract on its #:eval
 argument that would avoid the internal error?
 
 Robby
 
 On Sun, Oct 19, 2008 at 6:00 AM, Matthew Flatt <mflatt@cs.utah.edu> wrote:
 > At Sat, 18 Oct 2008 21:36:02 -0400, robby@cs.uchicago.edu wrote:
 >> #lang scheme
 >> (require scheme/sandbox scribble/eval)
 >> (interaction
 >>  #:eval (make-evaluator 'scheme)
 >>  1)
 >
 > Here's how to make it work:
 >
 >  (interaction
 >  #:eval (parameterize ([sandbox-output 'string]
 >                        [sandbox-error-output 'string])
 >           (make-evaluator 'scheme))
 >  1)
 >
 >
 >
From: Matthew Flatt <mflatt@cs.utah.edu>
To: "Robby Findler" <robby@cs.uchicago.edu>
Cc: bugs@plt-scheme.org
Subject: Re: [plt-bug] all/9845: scribble/eval doesn't like result of sandbox's make-evaluator
Date: Sun, 19 Oct 2008 10:39:55 -0500

 At Sun, 19 Oct 2008 07:29:43 -0500, "Robby Findler" wrote:
 > Is interaction a function? 
 
 No, though I imagine a contract could be associated indirectly, if a
 contract would work...
 
 > Could it have a contract on its #:eval
 > argument that would avoid the internal error?
 
 I don't think the sandbox currently offers a mechanism to check whether
 an evaluator directs [error] output to a string. Calling `get-output'
 actually extracts the string, for example. So I don't think the
 restriction can be formulated as a contract at the moment.
 
 Certainly, though, the implementation of `interaction' could check the
 result from `get-output'.
 
 
 > On Sun, Oct 19, 2008 at 6:00 AM, Matthew Flatt <mflatt@cs.utah.edu> wrote:
 > > At Sat, 18 Oct 2008 21:36:02 -0400, robby@cs.uchicago.edu wrote:
 > >> #lang scheme
 > >> (require scheme/sandbox scribble/eval)
 > >> (interaction
 > >>  #:eval (make-evaluator 'scheme)
 > >>  1)
 > >
 > > Here's how to make it work:
 > >
 > >  (interaction
 > >  #:eval (parameterize ([sandbox-output 'string]
 > >                        [sandbox-error-output 'string])
 > >           (make-evaluator 'scheme))
 > >  1)
 > >
 > >
 > >
From: robby@cs.uchicago.edu
To: "Matthew Flatt" <mflatt@cs.utah.edu>
Cc: bugs@plt-scheme.org
Subject: Re: [plt-bug] all/9845: scribble/eval doesn't like result of sandbox's make-evaluator
Date: Sun, 19 Oct 2008 11:42:32 -0500

 Am I wrong that the original error could have been prevented
 (redirected) with a contract on the #:eval argument?
 
 (I'm not at a computer now....)
 
 Robby
 
 On 10/19/08, Matthew Flatt <mflatt@cs.utah.edu> wrote:
 > At Sun, 19 Oct 2008 07:29:43 -0500, "Robby Findler" wrote:
 >> Is interaction a function?
 >
 > No, though I imagine a contract could be associated indirectly, if a
 > contract would work...
 >
 >> Could it have a contract on its #:eval
 >> argument that would avoid the internal error?
 >
 > I don't think the sandbox currently offers a mechanism to check whether
 > an evaluator directs [error] output to a string. Calling `get-output'
 > actually extracts the string, for example. So I don't think the
 > restriction can be formulated as a contract at the moment.
 >
 > Certainly, though, the implementation of `interaction' could check the
 > result from `get-output'.
 >
 >
 >> On Sun, Oct 19, 2008 at 6:00 AM, Matthew Flatt <mflatt@cs.utah.edu> wrote:
 >> > At Sat, 18 Oct 2008 21:36:02 -0400, robby@cs.uchicago.edu wrote:
 >> >> #lang scheme
 >> >> (require scheme/sandbox scribble/eval)
 >> >> (interaction
 >> >>  #:eval (make-evaluator 'scheme)
 >> >>  1)
 >> >
 >> > Here's how to make it work:
 >> >
 >> >  (interaction
 >> >  #:eval (parameterize ([sandbox-output 'string]
 >> >                        [sandbox-error-output 'string])
 >> >           (make-evaluator 'scheme))
 >> >  1)
 >> >
 >> >
 >> >
 >
 >
From: Matthew Flatt <mflatt@cs.utah.edu>
To: robby@cs.uchicago.edu
Cc: bugs@plt-scheme.org
Subject: Re: [plt-bug] all/9845: scribble/eval doesn't like result of sandbox's make-evaluator
Date: Sun, 19 Oct 2008 18:44:11 -0500

 At Sun, 19 Oct 2008 11:42:32 -0500, robby@cs.uchicago.edu wrote:
 > Am I wrong that the original error could have been prevented
 > (redirected) with a contract on the #:eval argument?
 
 Right. The sandbox library doesn't currently offer a predicate that
 would indicated whether a function represents an evaluator that sends
 its output to a string (which can be retrieved with `get-output'), so
 there's no way to write the check as a contract on the function
 supplied via `#:eval'.
 
 
 > (I'm not at a computer now....)
 > 
 > Robby
 > 
 > On 10/19/08, Matthew Flatt <mflatt@cs.utah.edu> wrote:
 > > At Sun, 19 Oct 2008 07:29:43 -0500, "Robby Findler" wrote:
 > >> Is interaction a function?
 > >
 > > No, though I imagine a contract could be associated indirectly, if a
 > > contract would work...
 > >
 > >> Could it have a contract on its #:eval
 > >> argument that would avoid the internal error?
 > >
 > > I don't think the sandbox currently offers a mechanism to check whether
 > > an evaluator directs [error] output to a string. Calling `get-output'
 > > actually extracts the string, for example. So I don't think the
 > > restriction can be formulated as a contract at the moment.
 > >
 > > Certainly, though, the implementation of `interaction' could check the
 > > result from `get-output'.
 > >
 > >
 > >> On Sun, Oct 19, 2008 at 6:00 AM, Matthew Flatt <mflatt@cs.utah.edu> wrote:
 > >> > At Sat, 18 Oct 2008 21:36:02 -0400, robby@cs.uchicago.edu wrote:
 > >> >> #lang scheme
 > >> >> (require scheme/sandbox scribble/eval)
 > >> >> (interaction
 > >> >>  #:eval (make-evaluator 'scheme)
 > >> >>  1)
 > >> >
 > >> > Here's how to make it work:
 > >> >
 > >> >  (interaction
 > >> >  #:eval (parameterize ([sandbox-output 'string]
 > >> >                        [sandbox-error-output 'string])
 > >> >           (make-evaluator 'scheme))
 > >> >  1)
 > >> >
 > >> >
 > >> >
 > >
 > >
From: Eli Barzilay <eli@barzilay.org>
To: Matthew Flatt <mflatt@cs.utah.edu>, bugs@plt-scheme.org
Cc: nobody@plt-scheme.org
Subject: Re: [plt-bug] all/9845: scribble/eval doesn't like result of sandbox's make-evaluator
Date: Sun, 19 Oct 2008 22:13:47 -0400

 On Oct 19, Matthew Flatt wrote:
 > 
 >  At Sun, 19 Oct 2008 11:42:32 -0500, robby@cs.uchicago.edu wrote:
 >  > Am I wrong that the original error could have been prevented
 >  > (redirected) with a contract on the #:eval argument?
 >  
 >  Right. The sandbox library doesn't currently offer a predicate that
 >  would indicated whether a function represents an evaluator that sends
 >  its output to a string (which can be retrieved with `get-output'), so
 >  there's no way to write the check as a contract on the function
 >  supplied via `#:eval'.
 
 Quick comments:
 
 1. It should be possible to just try getting the output right after
    the sandbox is setup -- the result will be #f or an empty string.
    (But that might interfere with future languages that may want to
    print something right when they start).
 
 2. Adding a predicate is not really a problem, but then there's a
    bunch of other things that can/should be added to gether.
 
 3. The right solution in this case seems to me similar to what the
    handin server is doing: make scribble provide its own
    `make-evaluator' which always uses the output-to-string option.
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                   http://www.barzilay.org/                 Maze is Life!
From: "Robby Findler" <robby@cs.uchicago.edu>
To: "Matthew Flatt" <mflatt@cs.utah.edu>
Cc: bugs@plt-scheme.org, "Eli Barzilay" <eli@barzilay.org>
Subject: Re: [plt-bug] all/9845: scribble/eval doesn't like result of sandbox's make-evaluator
Date: Sun, 19 Oct 2008 22:19:17 -0500

 U28gaXMgaXQgYSBidWcgaW4gZ2V0LW91dHB1dCAob3IgaXRzIGRvY3MpIHRoYXQgaXQgcmV0dXJu
 cyAjZj8gSSBzZWU6CgogIGdldC1vdXRwdXQgZXZhbHVhdG9yKSDihpIgKG9yL2MgaW5wdXQtcG9y
 dD8gYnl0ZXM/IHN0cmluZz8pCiAgICBldmFsdWF0b3IgOiAoYW55L2MgLiAtPiAuIGFueSkKCmlu
 IHRoZSBkb2N1bWVudGF0aW9uLgoKUm9iYnkKCk9uIFN1biwgT2N0IDE5LCAyMDA4IGF0IDY6NDQg
 UE0sIE1hdHRoZXcgRmxhdHQgPG1mbGF0dEBjcy51dGFoLmVkdT4gd3JvdGU6Cj4gQXQgU3VuLCAx
 OSBPY3QgMjAwOCAxMTo0MjozMiAtMDUwMCwgcm9iYnlAY3MudWNoaWNhZ28uZWR1IHdyb3RlOgo+
 PiBBbSBJIHdyb25nIHRoYXQgdGhlIG9yaWdpbmFsIGVycm9yIGNvdWxkIGhhdmUgYmVlbiBwcmV2
 ZW50ZWQKPj4gKHJlZGlyZWN0ZWQpIHdpdGggYSBjb250cmFjdCBvbiB0aGUgIzpldmFsIGFyZ3Vt
 ZW50Pwo+Cj4gUmlnaHQuIFRoZSBzYW5kYm94IGxpYnJhcnkgZG9lc24ndCBjdXJyZW50bHkgb2Zm
 ZXIgYSBwcmVkaWNhdGUgdGhhdAo+IHdvdWxkIGluZGljYXRlZCB3aGV0aGVyIGEgZnVuY3Rpb24g
 cmVwcmVzZW50cyBhbiBldmFsdWF0b3IgdGhhdCBzZW5kcwo+IGl0cyBvdXRwdXQgdG8gYSBzdHJp
 bmcgKHdoaWNoIGNhbiBiZSByZXRyaWV2ZWQgd2l0aCBgZ2V0LW91dHB1dCcpLCBzbwo+IHRoZXJl
 J3Mgbm8gd2F5IHRvIHdyaXRlIHRoZSBjaGVjayBhcyBhIGNvbnRyYWN0IG9uIHRoZSBmdW5jdGlv
 bgo+IHN1cHBsaWVkIHZpYSBgIzpldmFsJy4KPgo+Cj4+IChJJ20gbm90IGF0IGEgY29tcHV0ZXIg
 bm93Li4uLikKPj4KPj4gUm9iYnkKPj4KPj4gT24gMTAvMTkvMDgsIE1hdHRoZXcgRmxhdHQgPG1m
 bGF0dEBjcy51dGFoLmVkdT4gd3JvdGU6Cj4+ID4gQXQgU3VuLCAxOSBPY3QgMjAwOCAwNzoyOTo0
 MyAtMDUwMCwgIlJvYmJ5IEZpbmRsZXIiIHdyb3RlOgo+PiA+PiBJcyBpbnRlcmFjdGlvbiBhIGZ1
 bmN0aW9uPwo+PiA+Cj4+ID4gTm8sIHRob3VnaCBJIGltYWdpbmUgYSBjb250cmFjdCBjb3VsZCBi
 ZSBhc3NvY2lhdGVkIGluZGlyZWN0bHksIGlmIGEKPj4gPiBjb250cmFjdCB3b3VsZCB3b3JrLi4u
 Cj4+ID4KPj4gPj4gQ291bGQgaXQgaGF2ZSBhIGNvbnRyYWN0IG9uIGl0cyAjOmV2YWwKPj4gPj4g
 YXJndW1lbnQgdGhhdCB3b3VsZCBhdm9pZCB0aGUgaW50ZXJuYWwgZXJyb3I/Cj4+ID4KPj4gPiBJ
 IGRvbid0IHRoaW5rIHRoZSBzYW5kYm94IGN1cnJlbnRseSBvZmZlcnMgYSBtZWNoYW5pc20gdG8g
 Y2hlY2sgd2hldGhlcgo+PiA+IGFuIGV2YWx1YXRvciBkaXJlY3RzIFtlcnJvcl0gb3V0cHV0IHRv
 IGEgc3RyaW5nLiBDYWxsaW5nIGBnZXQtb3V0cHV0Jwo+PiA+IGFjdHVhbGx5IGV4dHJhY3RzIHRo
 ZSBzdHJpbmcsIGZvciBleGFtcGxlLiBTbyBJIGRvbid0IHRoaW5rIHRoZQo+PiA+IHJlc3RyaWN0
 aW9uIGNhbiBiZSBmb3JtdWxhdGVkIGFzIGEgY29udHJhY3QgYXQgdGhlIG1vbWVudC4KPj4gPgo+
 PiA+IENlcnRhaW5seSwgdGhvdWdoLCB0aGUgaW1wbGVtZW50YXRpb24gb2YgYGludGVyYWN0aW9u
 JyBjb3VsZCBjaGVjayB0aGUKPj4gPiByZXN1bHQgZnJvbSBgZ2V0LW91dHB1dCcuCj4+ID4KPj4g
 Pgo+PiA+PiBPbiBTdW4sIE9jdCAxOSwgMjAwOCBhdCA2OjAwIEFNLCBNYXR0aGV3IEZsYXR0IDxt
 ZmxhdHRAY3MudXRhaC5lZHU+IHdyb3RlOgo+PiA+PiA+IEF0IFNhdCwgMTggT2N0IDIwMDggMjE6
 MzY6MDIgLTA0MDAsIHJvYmJ5QGNzLnVjaGljYWdvLmVkdSB3cm90ZToKPj4gPj4gPj4gI2xhbmcg
 c2NoZW1lCj4+ID4+ID4+IChyZXF1aXJlIHNjaGVtZS9zYW5kYm94IHNjcmliYmxlL2V2YWwpCj4+
 ID4+ID4+IChpbnRlcmFjdGlvbgo+PiA+PiA+PiAgIzpldmFsIChtYWtlLWV2YWx1YXRvciAnc2No
 ZW1lKQo+PiA+PiA+PiAgMSkKPj4gPj4gPgo+PiA+PiA+IEhlcmUncyBob3cgdG8gbWFrZSBpdCB3
 b3JrOgo+PiA+PiA+Cj4+ID4+ID4gIChpbnRlcmFjdGlvbgo+PiA+PiA+ICAjOmV2YWwgKHBhcmFt
 ZXRlcml6ZSAoW3NhbmRib3gtb3V0cHV0ICdzdHJpbmddCj4+ID4+ID4gICAgICAgICAgICAgICAg
 ICAgICAgICBbc2FuZGJveC1lcnJvci1vdXRwdXQgJ3N0cmluZ10pCj4+ID4+ID4gICAgICAgICAg
 IChtYWtlLWV2YWx1YXRvciAnc2NoZW1lKSkKPj4gPj4gPiAgMSkKPj4gPj4gPgo+PiA+PiA+Cj4+
 ID4+ID4KPj4gPgo+PiA+Cj4KPgo=
From: Eli Barzilay <eli@barzilay.org>
To: "Robby Findler" <robby@cs.uchicago.edu>
Cc: "Matthew Flatt" <mflatt@cs.utah.edu>, bugs@plt-scheme.org
Subject: Re: [plt-bug] all/9845: scribble/eval doesn't like result of sandbox's make-evaluator
Date: Sun, 19 Oct 2008 23:28:26 -0400

 On Oct 19, Robby Findler wrote:
 > So is it a bug in get-output (or its docs) that it returns #f? I see:
 > 
 >   get-output evaluator) ? (or/c input-port? bytes? string?)
 >     evaluator : (any/c . -> . any)
 > 
 > in the documentation.
 
 Definitely (as the description below that says).  Fixed.
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                   http://www.barzilay.org/                 Maze is Life!

State changed from "open" to "closed" by ryanc at Thu, 12 May 2011 19:08:17 -0400
Reason>>> resolved

