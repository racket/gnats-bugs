From apache@plt-scheme.org Mon Jul 31 08:10:00 2006
Received: from champlain.ccs.neu.edu (champlain.ccs.neu.edu [127.0.0.1])
	by champlain.ccs.neu.edu (8.13.7/8.13.6) with ESMTP id k6VCA0kt026658
	for <bugs@plt-scheme.org>; Mon, 31 Jul 2006 08:10:00 -0400
Message-Id: <200607311210.k6VCA0HF026657@champlain.ccs.neu.edu>
Date: Mon, 31 Jul 2006 08:10:00 -0400
From: matthias@ccs.neu.edu
To: bugs@plt-scheme.org
Subject: ProfessorJ (Advanced) s type unsound due to privacy specifications

>Number:         8203
>Category:       profj
>Synopsis:       ProfessorJ (Advanced) s type unsound due to privacy specifications
>Class:          sw-bug
>Responsible:    kathyg
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Mon Jul 31 08:10:01 -0400 2006
>Closed-Date:    Tue Aug 01 23:56:24 -0400 2006
>Last-Modified:  Wed Aug 02 13:15:01 -0400 2006
>Originator:     matthias
>Organization:
plt
>Submitter-Id:   unknown
>Release:        351.1-svn24jul2006
>Environment:
macosx "Darwin europe.local 8.7.0 Darwin Kernel Version 8.7.0: Fri May 26 15:20:53 PDT 2006; root:xnu-792.6.76.obj~1/RELEASE_PPC Power Macintosh powerpc" (ppc-macosx/3m) (get-display-depth) = 32
Docs Installed:
(("/Users/matthias/plt/doc" "help" "release-notes" "teachpack-htdc"))
Human Language: english
(current-memory-use) 67070964

Collections:
(("/Users/matthias/Unison/collects/" ".DS_Store" "date" "finance" "testing" "utils" "web") ("/Users/matthias/Library/PLT Scheme/351.1/collects" non-existent-path) ("/Users/matthias/plt/collects" ".svn" "afm" "algol60" "browser" "compiler" "config" "defaults" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "framework" "frtime" "games" "graphics" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu-module" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher" "make" "mred" "mrflow" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "mztake" "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profj" "profjBoxes" "profjWizard" "r5rs" "r6rs" "readline" "repos-time-stamp" "scribble" "setup" "sgl" "sirmail" "skipper" "slatex" "slibinit" "slideshow" "srfi" "srpersist" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-suite" "tests" "tex2page" "texpict" "trace" "version" "waterworld" "web-server" "xelda" "xml"))
Teachpack filenames: ()
Computer Language: (("Experimental Languages" "ProfessorJ" "Advanced") ((field) (#f) (#t) (#f) (#t) (#t)))
>Description:
Compile this program.
   Evaluate new Go().
   Press uparrow. 
   See

      . send: no such method: fireShot for class: AUP

   even though AUP has such a method and the type checker blessed the
   program.

   Note: making both fireShot methods public solves the problem.
   (It shouldn't.)
>How-To-Repeat:
import idraw.*;
import colors.*;
import geometry.*;

// representing the world of UFOs, AUPs, and Shots
class WorldUFO extends World {
 private int HEIGHT;
 private int WIDTH; 

 private UFO ufo;
 private AUP aup;
 private IShots shots = new MtShots();
 private Color BACKGROUND = new Blue();

 public WorldUFO(int w, int h) { 
  WIDTH  = w; 
  HEIGHT = h; 

  ufo = new UFO(new Posn(88,20),HEIGHT,WIDTH);
  aup = new AUP(10,HEIGHT,WIDTH);
 }

 public void go() { 
  bigBang(HEIGHT,WIDTH,.1);
  return ; 
 }


 // what happens on every tick of the clock 
 public void onTick() {
  if (this.ufo.landedP())
   this.endOfWorld("hello world");
  else if (this.shots.hit(this.ufo))
   this.endOfWorld("hello world");
  else 
   this.move();
  return ;
 }

 // what happens on a key event
 public void onKeyEvent(String k) { 
  if (k.equals("up")) 
   this.fireShot();
  else 
   this.aup.move(k);
  return ;
 }

 // move the objects in this world that move on time 
 // this ought to be PRIVATE but ProfessorJ has a bug that prevents this
 protected void move() {
  this.ufo.move();
  this.shots.move();
  return ;
 }

 // add a shot to the list of shots 
 private void fireShot() { 
  this. shots = new ConsShots(this.aup.fireShot(),this.shots);
  return ;
 }

 // draw this World 
 public void draw() {
  this.ufo.draw(this.theCanvas);
  this.aup.draw(this.theCanvas);
  this.shots.draw(this.theCanvas);
  return ; 
 }

 // erase this World
 public void erase() { 
  this.theCanvas.drawRect(new Posn(0,0),this.WIDTH,this.HEIGHT,this.BACKGROUND);
  return ;
 }
}


/*
+----------------+
| AUP            |
+----------------+
| int location   |
| Color aupColor |
+----------------+

*/

// an anti-ufo platform
class AUP {
 private int WIDTH; 
 private int HEIGHT;
 private int location;
 private Color aupColor = new Red();
 private double CLOSE = 10.0;

 AUP(int l, int w, int h) {
  WIDTH = w; 
  HEIGHT = h; 
  location = l;
 }

 // move this AUP to the right by three pixels
 void move(String k) {
  if (k.equals("left"))
   this.location = this.location-3;
  else if (k.equals("right"))
   this.location = this.location+3;
  else 
   return ;
  return ; 
 }

 // is this location close to this AUP
 boolean isHit(Posn x) { 
  return this.distanceTo(x) <= this.CLOSE;
 }

 // compute distance between l and this.location
 double distanceTo(Posn l) { 
  return this.distanceToO(l.x-this.location,555); // THIS REQUIRES KNOWLEDGE OF WHERE the AUP is at Y  
 }

 // compute distance of (x,y) to origin
 double distanceToO(double x, double y) { 
  return Math.sqrt(x*x + y*y);
 }

 // fire a shot (create it)
 Shot fireShot() { 
  return new Shot(new Posn(this.location+12,HEIGHT-22));
 }

 // draw this AUP
 void draw(Canvas w) {
  w.drawRect(new Posn(this.location,HEIGHT-10),24,6,this.aupColor);
  w.drawRect(new Posn(this.location+12,HEIGHT-20),4,10,this.aupColor);
  return; 
 }
}

/*
+----------------+
| UFO            |
+----------------+
| Posn location  |
| Color colorUFO |
+----------------+

*/

// representing a UFO
class UFO {
 private int WIDTH; 
 private int HEIGHT;
 private Posn location;
 private Color colorUFO = new Green();
 private double CLOSE = 10.0;

 UFO(Posn l, int w, int h) {
  WIDTH  = w; 
  HEIGHT = h; 
  location = l;
 }

 // move this UFO down by 3 pixels 
 void move() {
  if (this.landedP())
   return ; // don't move anymore, it's on the ground 
  else {
   this.location = new Posn(this.location.x,this.location.y+3);
   return ; 
  }
 }

 // has the UFO landed yet?
 boolean landedP() {
  return this.location.y >= HEIGHT - 3;
 }

 // is this location close to this UFO 
 boolean isHit(Posn x) { 
  return this.distanceTo(x) <= this.CLOSE;
 }

 // compute distance between l and this.location
 double distanceTo(Posn l) { 
  return this.distanceToO(l.x-this.location.x,l.y-this.location.y);
 }

 // compute distance of (x,y) to origin
 double distanceToO(double x, double y) { 
  return Math.sqrt(x*x + y*y);
 }

 // draw this UFO into the world's canvas
 void draw(Canvas w) {
  w.drawDisk(this.location,10,this.colorUFO);
  w.drawRect(new Posn(this.location.x-30,this.location.y-2),60,4,this.colorUFO); 
  return ;
 }
}
                            
/*
+---------------+
| Shot          |
+---------------+
| Posn location |
+---------------+

*/

// a shot in flight
class Shot {
 Posn location;
 Color shotColor = new Yellow(); 

 Shot(Posn location) {
   this.location = location;
 }

 // move this shot up by 3 pixels 
 void move() {
  this.location = new Posn(this.location.x,this.location.y-3);
  return ; 
 }

 // did this shot hit the UFO
 boolean hit(UFO u) {
  return u.isHit(this.location);
 }

 // draw this shot on the canvas 
 void draw(Canvas w) { 
  w.drawRect(this.location,2,10,this.shotColor);
  return ;
 }
}

/*
            +--------+               
            | AShots |<-------------+
            +--------+              |
            +--------+              |
               / \                  |
               ---                  |
                |                   |
       ------------------           |
       |                |           |
  +---------+    +-------------+    |
  | MtShots |    | ConsShots   |    |
  +---------+    +-------------+    |
  +---------+    | Shot first  |    |
                 | AShots rest |-+  |
                 +-------------+ |  |
                                 |  |
                                 +--+

*/

// managing a number of shots
interface IShots {
 // move all these shots
 void move();

 // did any of these shots hit the UFO
 boolean hit(UFO u);

 // draw these Shots into w
 void draw(Canvas w);
}

// no shots
class MtShots implements IShots {
 MtShots() { }

 void move() { return ; }
 boolean hit(UFO u) { return false; }
 void draw(Canvas w) { return ; }
}

// add one to the bunch 
class ConsShots implements IShots {
 Shot first;
 IShots rest;

 ConsShots(Shot first, IShots rest) {
  this.first = first;
  this.rest = rest;
 }

 void move() { 
  this.first.move();
  this.rest.move();
  return ; 
 }

 boolean hit(UFO u) { 
  return this.first.hit(u) || this.rest.hit(u);
 }

 void draw(Canvas w) { 
  this.first.draw(w);
  this.rest.draw(w); 
  return ;
 }
}

/*
+---------------+
| Charge        |
+---------------+
| Posn location |
+---------------+

*/

// a charge dropped from UFO, in flight
class Charge {
 Posn location;
 Color chargeColor = new White(); 

 Charge(Posn location) {
   this.location = location;
 }

 // move this charge up by 3 pixels 
 void move() {
  this.location = new Posn(this.location.x,this.location.y-3);
  return ; 
 }

 // did this charge hit the AUP
 boolean hit(AUP u) {
  return u.isHit(this.location);
 }

 // draw this charge on the canvas 
 void draw(Canvas w) { 
  w.drawRect(this.location,2,10,this.chargeColor);
  return ;
 }
}

// -----------------------------------------------------------------------------

/*
            +--------+               
            | ACharges |<-------------+
            +--------+              |
            +--------+              |
               / \                  |
               ---                  |
                |                   |
       ------------------           |
       |                |           |
  +---------+    +-------------+    |
  | MtCharges |    | ConsCharges   |    |
  +---------+    +-------------+    |
  +---------+    | Charge first  |    |
                 | ACharges rest |-+  |
                 +-------------+ |  |
                                 |  |
                                 +--+

*/

// managing a number of charges
interface ICharges {
 // move all these charges
 void move();

 // did any of these charges hit the AUP
 boolean hit(AUP u);

 // draw these Shots into w
 void draw(Canvas w);
}

// no charges
class MtCharges implements ICharges {
 MtCharges() { }

 void move() { return ; }
 boolean hit(AUP u) { return false; }
 void draw(Canvas w) { return ; }
}

// add one to the bunch 
class ConsCharges implements ICharges {
 Charge first;
 ICharges rest;

 ConsCharges(Charge first, ICharges rest) {
  this.first = first;
  this.rest = rest;
 }

 void move() { 
  this.first.move();
  this.rest.move();
  return ; 
 }

 boolean hit(AUP u) { 
  return this.first.hit(u) || this.rest.hit(u);
 }

 void draw(Canvas w) { 
  this.first.draw(w);
  this.rest.draw(w); 
  return ;
 }
}
// -----------------------------------------------------------------------------

class Go {
  
  WorldUFO ufow = new WorldUFO(400,700);
  Go() { ufow.go(); }
}

// -----------------------------------------------------------------------------

class ExampleShots {
 boolean testIShotsMove() { 
  Shot s1 = new Shot(new Posn(10,20));
  Shot s2 = new Shot(new Posn(15,30));
  IShots los = new ConsShots(s1,new ConsShots(s2,new MtShots()));
  IShots move_los = new ConsShots(new Shot(new Posn(10,17)),
			new ConsShots(new Shot(new Posn(15,27)),
			    new MtShots()));

  los.move();

  return (check s1.location expect new Posn(10,17))
	   && (check s2.location expect new Posn(15,27))
 	   && (check los expect move_los);
 }
}

class ExampleCharges {
 boolean testIChargesMove() { 
  Charge s1 = new Charge(new Posn(10,20));
  Charge s2 = new Charge(new Posn(15,30));
  ICharges los = new ConsCharges(s1,new ConsCharges(s2,new MtCharges()));
  ICharges move_los = new ConsCharges(new Charge(new Posn(10,17)),
			new ConsCharges(new Charge(new Posn(15,27)),
			    new MtCharges()));

  los.move();

  return (check s1.location expect new Posn(10,17))
	   && (check s2.location expect new Posn(15,27))
 	   && (check los expect move_los);
 }
}
>Fix:
>Audit-Trail:
Responsible changed from "nobody" to "kathyg" by kathyg at Tue, 01 Aug 2006 23:56:24 -0400
Reason>>> .

State changed from "open" to "closed" by kathyg at Tue, 01 Aug 2006 23:56:24 -0400
Reason>>> This bug has been corrected in svn. 
The problem arose because methods with the same name but different access 
privleges (namely private vs anything else) could interefere with each other 
due to a misunderstanding of define-local-member-name.

From: Matthias Felleisen <matthias@ccs.neu.edu>
To: bugs@plt-scheme.org
Cc: Kathy Gray <kathyg@cs.utah.edu>, nobody@plt-scheme.org,
        Matthew Flatt <mflatt@cs.utah.edu>
Subject: Re: profj/8203 ProfessorJ (Advanced) s type unsound due to privacy specifications
Date: Wed, 2 Aug 2006 07:54:54 -0400

 Is it worth fixing the docs?
 
 On Aug 1, 2006, at 11:56 PM, kathyg@cs.utah.edu wrote:
 
 >
 > Responsible changed from "nobody" to "kathyg" by kathyg at Tue, 01  
 > Aug 2006 23:56:24 -0400
 > Reason>>> .
 >
 > State changed from "open" to "closed" by kathyg at Tue, 01 Aug 2006  
 > 23:56:24 -0400
 > Reason>>> This bug has been corrected in svn.
 > The problem arose because methods with the same name but different  
 > access
 > privleges (namely private vs anything else) could interefere with  
 > each other
 > due to a misunderstanding of define-local-member-name.
 >
 >
 > View:
 >   http://bugs.plt-scheme.org/query/?cmd=view&pr=8203
 >
 
From: Kathy Gray <kathyg@cs.utah.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: bugs@plt-scheme.org, nobody@plt-scheme.org,
        Matthew Flatt <mflatt@cs.utah.edu>
Subject: Re: profj/8203 ProfessorJ (Advanced) s type unsound due to privacy specifications
Date: Wed, 2 Aug 2006 11:13:59 -0600

 I think the docs are better now than when I first read about define- 
 local-member-name due to the addition of member-name and member-key,  
 which help clarify what is really happening.
 
 -Kathy
 
 
 On Aug 2, 2006, at 5:54 AM, Matthias Felleisen wrote:
 
 > Is it worth fixing the docs?
 >
 > On Aug 1, 2006, at 11:56 PM, kathyg@cs.utah.edu wrote:
 >
 >>
 >> Responsible changed from "nobody" to "kathyg" by kathyg at Tue, 01  
 >> Aug 2006 23:56:24 -0400
 >> Reason>>> .
 >>
 >> State changed from "open" to "closed" by kathyg at Tue, 01 Aug  
 >> 2006 23:56:24 -0400
 >> Reason>>> This bug has been corrected in svn.
 >> The problem arose because methods with the same name but different  
 >> access
 >> privleges (namely private vs anything else) could interefere with  
 >> each other
 >> due to a misunderstanding of define-local-member-name.
 >>
 >>
 >> View:
 >>   http://bugs.plt-scheme.org/query/?cmd=view&pr=8203
 >>
 
