From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Mon Aug 13 20:41:43 2007
Received: from wx-out-0506.google.com (wx-out-0506.google.com [66.249.82.231])
	by champlain.ccs.neu.edu (8.13.8/8.13.7) with ESMTP id l7E0fgTv022443
	for <bugs@bugs.plt-scheme.org>; Mon, 13 Aug 2007 20:41:42 -0400
Message-Id: <18112.64066.824652.982317@winooski.ccs.neu.edu>
Date: Mon, 13 Aug 2007 20:41:38 -0400
From: Eli Barzilay <eli@barzilay.org>
To: bugs@plt-scheme.org
Subject: professorJ is highly inaccurate for null pointer exception

>Number:         8868
>Category:       profj
>Synopsis:       professorJ is highly inaccurate for null pointer exception
>Class:          sw-bug
>Responsible:    kathyg
>Notify-List:    matthias@ccs.neu.edu
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Mon Aug 13 20:45:01 -0400 2007
>Closed-Date:    Mon Oct 01 05:05:13 -0400 2007
>Last-Modified:  Mon Oct 01 05:05:13 -0400 2007
>Originator:     matthias
>Organization:
plt
>Submitter-Id:   unknown
>Release:        371-svn11aug2007
>Environment:
macosx "Darwin europe.local 8.10.1 Darwin Kernel Version 8.10.1: Wed May 23
16:33:00 PDT 2007; root:xnu-792.22.5~1/RELEASE_I386 i386 i386"
(i386-macosx/3m) (get-display-depth) = 32
Docs Installed:
(("/Users/matthias/plt/doc" "r5rs" "mzscheme" "mred" "help" "tour"
"drscheme" "srfi" "mzlib" "misclib" "mrlib" "framework" "foreign" "mzc"
"tools" "insidemz" "web-server" "swindle" "plot" "guide" "quick" "reference"
"release-notes" "scribble" "t-y-scheme" "web-server-guide"
"web-server-reference" "tex2page" "beginning" "beginning-abbr"
"intermediate" "intermediate-lambda" "advanced" "teachpack" "teachpack-htdc"
"profj-beginner" "profj-intermediate" "profj-advanced")
("/Users/matthias/plt/collects/doc" "teachpack"))
Human Language: english
(current-memory-use) 169695520

Collections:
(("/Users/matthias/Unison/collects/" ".DS_Store" "date" "finance" "testing"
"utils" "web") ("/Users/matthias/Library/PLT Scheme/371/collects"
non-existent-path) ("/Users/matthias/plt/collects" ".DS_Store" ".svn" "afm"
"algol60" "big" "browser" "combinator-parser" "compiler" "config" "defaults"
"doc" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi"
"framework" "frtime" "games" "graphics" "guibuilder" "handin-client"
"handin-server" "help" "hierlist" "honu-module" "htdch" "htdp" "html"
"icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make"
"mred" "mrflow" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "mztake" "net"
"openssl" "parser-tools" "planet" "plot" "preprocessor" "profj" "profjBoxes"
"profjWizard" "r5rs" "r6rs" "readline" "repos-time-stamp" "scribble"
"scribblings" "setup" "sgl" "sirmail" "skipper" "slatex" "slibinit"
"slideshow" "srfi" "srpersist" "stepper" "string-constants" "swindle"
"syntax" "syntax-color" "teachpack" "test-box-recovery" "!
test-suite" "tests" "tex2page" "texpict" "trace" "version" "waterworld"
"web-server" "wxme" "xelda" "xml"))
Computer Language: (("Experimental Languages" "ProfessorJ" "Intermediate")
((field) (#f) (#t) (#f) (#t) (#t)))
>Description:
When I reference a null object in a Program,
I get a highly inaccurate position report.
It's rather confusing at first glance. I
would hope DrScheme/ProfessorJ can do better.
>How-To-Repeat:
import draw.*;
import geometry.*;

class Sample extends World {
  Sample() { }
  boolean draw() { return this.theCanvas.drawString(new Posn(50,50),"hello
world"); }
  World onTick() { return this; }
  World onKeyEvent(String s) { return this; }

  boolean go() { return this.bigBang(100,100,.1) && this.theCanvas.show(); }

  boolean show() { return this.theCanvas.show(); }
}

class Example {
  Sample s = new Sample();
  boolean test = this.s.show();
}

Run this program. In this case you get the uninformative
messages "This value cannot access a method to call as it
is null and therefore has no methods" WITHOUT any highlighting.

If you also evaluate

> new Sample().show()
. This value cannot access a method to call as it is null
and therefore has no methods

in the REPL, you get a highlighting for new Sample().show().
BUT new Sample() is certainly not NULL. What is NULL is the
variable theCanvas, which I (wrongly) set to NULL and initialize
after bigBang only. (If I don't fix the bug before v371 goes
out, please re-assign the bug report to me after you have
fixed the high-lighting.)
>Fix:
>Audit-Trail:
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Eli Barzilay <eli@barzilay.org>, bugs@plt-scheme.org
Cc: nobody@plt-scheme.org, eli@plt-scheme.org, matthias@plt-scheme.org,
        sk@plt-scheme.org, mflatt@plt-scheme.org, robby@plt-scheme.org,
        clements@plt-scheme.org, jay@plt-scheme.org, meunier@plt-scheme.org,
        sowens@plt-scheme.org, kathyg@plt-scheme.org, awick@plt-scheme.org,
        jacobm@plt-scheme.org, cce@plt-scheme.org, dalev@plt-scheme.org,
        samth@plt-scheme.org, ryanc@plt-scheme.org
Subject: Re: [plt-bug] all/8868: professorJ is highly inaccurate for null pointer exception
Date: Mon, 13 Aug 2007 21:00:34 -0400

 WARNING: I have in the meantime eliminated the NULL from World.java  
 in collects/hdtch/draw/
 
 The version I checked in is 7093. So get a version from before that  
 otherwise you can't reconstruct this particular bug. (Of course,  
 idraw is still bad, so you can get a similar bug from there.)
 
 -- Matthias
 
 
 import draw.*;
 import geometry.*;
 
 class Sample extends World {
    Sample() { }
    boolean draw() { return this.theCanvas.drawString(new Posn 
 (50,50),"hello world"); }
    World onTick() { return this; }
    World onKeyEvent(String s) { return this; }
 
    boolean go() { return this.bigBang(100,100,.1) &&  
 this.theCanvas.show(); }
 
    boolean show() { return this.theCanvas.show(); }
 }
 
 class Example {
    Sample s = new Sample();
    boolean test = this.s.show();
 }
 

From: Kathy Gray <kathyg@cs.utah.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>,
        John Clements <clements@brinckerhoff.org>
Cc: bugs@plt-scheme.org
Subject: Re: [plt-bug] all/8868: professorJ is highly inaccurate for null pointer exception
Date: Tue, 14 Aug 2007 03:17:06 +0100

 I'm hoping that one of you can help me understand my highlighting bug  
 a little better, if you have the time.
 I'm using current-continuation-marks and exceptions to get DrScheme  
 to highlight runtime errors, but the generated code isn't acting like  
 I expect.
 
 If I write the code
 (let ([foo null])
         (if (null? foo)
             (javaRuntime:nullError 'method (current-continuation-marks))
             foo))))
 in a plain mzscheme interactions window, where nullError raises an  
 exception using the provided marks, the visible (current-continuation- 
 marks) is highlighted as I would expect.
 
 I generate similar code to provide highlighting within the  
 definitions window and the interactions for Java. The code I use to  
 generate follows
 (create-syntax #f
                 `(let ((,unique-name ,expression))
                    (if (null? ,unique-name)
                        ,(create-syntax #f '(javaRuntime:nullError  
 'method (current-continuation-marks)) expression)
                        (send ,unique-name ,name ,@translated-args)))
                 (build-src src))
 
 Where expression is a syntax-object with full source information, and  
 create-syntax is a wrapper over datum->syntax-object with a original- 
 property added in
 
 Can either of you see something that I might be doing wrong that  
 would cause an exception thrown out of nullError using the current- 
 continuation-marks to not highlight the source indicated for  
 expression? (I also tried wrapping the source location around just  
 the call to continuation-marks, with no discernible difference)
 
 Thanks,
 -Kathy
 
 
 On Aug 14, 2007, at 1:45 AM, Eli Barzilay wrote:
 
 > A new problem report is waiting at
 >   http://bugs.plt-scheme.org/query/?cmd=view&pr=8868
 >
 > Reported by matthias for release: 371-svn11aug2007
 >
 > *** Description:
 > When I reference a null object in a Program,
 > I get a highly inaccurate position report.
 > It's rather confusing at first glance. I
 > would hope DrScheme/ProfessorJ can do better.
 >
 > *** How to repeat:
 > import draw.*;
 > import geometry.*;
 >
 > class Sample extends World {
 >   Sample() { }
 >   boolean draw() { return this.theCanvas.drawString(new Posn 
 > (50,50),"hello
 > world"); }
 >   World onTick() { return this; }
 >   World onKeyEvent(String s) { return this; }
 >
 >   boolean go() { return this.bigBang(100,100,.1) &&  
 > this.theCanvas.show(); }
 >
 >   boolean show() { return this.theCanvas.show(); }
 > }
 >
 > class Example {
 >   Sample s = new Sample();
 >   boolean test = this.s.show();
 > }
 >
 > Run this program. In this case you get the uninformative
 > messages "This value cannot access a method to call as it
 > is null and therefore has no methods" WITHOUT any highlighting.
 >
 > If you also evaluate
 >
 >> new Sample().show()
 > . This value cannot access a method to call as it is null
 > and therefore has no methods
 >
 > in the REPL, you get a highlighting for new Sample().show().
 > BUT new Sample() is certainly not NULL. What is NULL is the
 > variable theCanvas, which I (wrongly) set to NULL and initialize
 > after bigBang only. (If I don't fix the bug before v371 goes
 > out, please re-assign the bug report to me after you have
 > fixed the high-lighting.)
 >
 > *** Environment:
 > macosx "Darwin europe.local 8.10.1 Darwin Kernel Version 8.10.1:  
 > Wed May 23
 > 16:33:00 PDT 2007; root:xnu-792.22.5~1/RELEASE_I386 i386 i386"
 > (i386-macosx/3m) (get-display-depth) = 32
 > Docs Installed:
 > (("/Users/matthias/plt/doc" "r5rs" "mzscheme" "mred" "help" "tour"
 > "drscheme" "srfi" "mzlib" "misclib" "mrlib" "framework" "foreign"  
 > "mzc"
 > "tools" "insidemz" "web-server" "swindle" "plot" "guide" "quick"  
 > "reference"
 > "release-notes" "scribble" "t-y-scheme" "web-server-guide"
 > "web-server-reference" "tex2page" "beginning" "beginning-abbr"
 > "intermediate" "intermediate-lambda" "advanced" "teachpack"  
 > "teachpack-htdc"
 > "profj-beginner" "profj-intermediate" "profj-advanced")
 > ("/Users/matthias/plt/collects/doc" "teachpack"))
 > Human Language: english
 > (current-memory-use) 169695520
 >
 > Collections:
 > (("/Users/matthias/Unison/collects/" ".DS_Store" "date" "finance"  
 > "testing"
 > "utils" "web") ("/Users/matthias/Library/PLT Scheme/371/collects"
 > non-existent-path) ("/Users/matthias/plt/collects" ".DS_Store"  
 > ".svn" "afm"
 > "algol60" "big" "browser" "combinator-parser" "compiler" "config"  
 > "defaults"
 > "doc" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi"
 > "framework" "frtime" "games" "graphics" "guibuilder" "handin-client"
 > "handin-server" "help" "hierlist" "honu-module" "htdch" "htdp" "html"
 > "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make"
 > "mred" "mrflow" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme"  
 > "mztake" "net"
 > "openssl" "parser-tools" "planet" "plot" "preprocessor" "profj"  
 > "profjBoxes"
 > "profjWizard" "r5rs" "r6rs" "readline" "repos-time-stamp" "scribble"
 > "scribblings" "setup" "sgl" "sirmail" "skipper" "slatex" "slibinit"
 > "slideshow" "srfi" "srpersist" "stepper" "string-constants" "swindle"
 > "syntax" "syntax-color" "teachpack" "test-box-recovery" "!
 > test-suite" "tests" "tex2page" "texpict" "trace" "version"  
 > "waterworld"
 > "web-server" "wxme" "xelda" "xml"))
 > Computer Language: (("Experimental Languages" "ProfessorJ"  
 > "Intermediate")
 > ((field) (#f) (#t) (#f) (#t) (#t)))
 

State changed from "open" to "closed" by kathyg at Mon, 01 Oct 2007 05:05:13 -0400
Reason>>> Corrected in svn, (had lost annotations from errortrace)

