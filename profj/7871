From apache@plt-scheme.org Mon Feb  6 10:52:50 2006
Received: from champlain.ccs.neu.edu (champlain.ccs.neu.edu [127.0.0.1])
	by champlain.ccs.neu.edu (8.12.10/8.12.10) with ESMTP id k16Fqgip023321
	for <bugs@plt-scheme.org>; Mon, 6 Feb 2006 10:52:42 -0500
Message-Id: <200602061552.k16FqgkD023319@champlain.ccs.neu.edu>
Date: Mon, 6 Feb 2006 10:52:42 -0500
From: matthias@ccs.neu.edu
To: bugs@plt-scheme.org
Subject: infinite loops in DrScheme/ProfessorJ

>Number:         7871
>Category:       profj
>Synopsis:       infinite loops in DrScheme/ProfessorJ
>Class:          change-request
>Responsible:    robby
>Severity:       critical
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Mon Feb 06 10:55:00 -0500 2006
>Closed-Date:    Fri Aug 03 10:26:58 -0400 2007
>Last-Modified:  Fri Aug 03 10:26:58 -0400 2007
>Originator:     matthias
>Organization:
plt
>Submitter-Id:   unknown
>Release:        301.4-svn1feb2006
>Environment:
macosx "Darwin america.local 7.9.0 Darwin Kernel Version 7.9.0: Wed Mar 30 20:11:17 PST 2005; root:xnu/xnu-517.12.7.obj~1/RELEASE_PPC  Power Macintosh powerpc" (ppc-macosx) (get-display-depth) = 32
Docs Installed:
(#<path:/Users/matthias/plt/collects/doc/r5rs> #<path:/Users/matthias/plt/collects/doc/mzscheme> #<path:/Users/matthias/plt/collects/doc/mred> #<path:/Users/matthias/plt/collects/doc/help> #<path:/Users/matthias/plt/collects/doc/tour> #<path:/Users/matthias/plt/collects/doc/drscheme> #<path:/Users/matthias/plt/collects/doc/srfi> #<path:/Users/matthias/plt/collects/doc/mzlib> #<path:/Users/matthias/plt/collects/doc/misclib> #<path:/Users/matthias/plt/collects/doc/mrlib> #<path:/Users/matthias/plt/collects/doc/framework> #<path:/Users/matthias/plt/collects/doc/foreign> #<path:/Users/matthias/plt/collects/doc/mzc> #<path:/Users/matthias/plt/collects/doc/tools> #<path:/Users/matthias/plt/collects/doc/insidemz> #<path:/Users/matthias/plt/collects/doc/web-server> #<path:/Users/matthias/plt/collects/doc/swindle> #<path:/Users/matthias/plt/collects/doc/plot> #<path:/Users/matthias/plt/collects/doc/t-y-scheme> #<path:/Users/matthias/plt/collects/doc/acl2> #<path:/Users/matthias/plt/collects/doc/tex2page> #<path:/Users/matthias/plt/collects/doc/beginning> #<path:/Users/matthias/plt/collects/doc/beginning-abbr> #<path:/Users/matthias/plt/collects/doc/intermediate> #<path:/Users/matthias/plt/collects/doc/intermediate-lambda> #<path:/Users/matthias/plt/collects/doc/advanced> #<path:/Users/matthias/plt/collects/doc/teachpack> #<path:/Users/matthias/plt/collects/doc/profj-beginner> #<path:/Users/matthias/plt/collects/doc/profj-intermediate> #<path:/Users/matthias/plt/collects/doc/profj-advanced>)
Collections:
((#<path:/Users/matthias/Unison/collects/> (#<path:.DS_Store> #<path:date> #<path:finance> #<path:testing> #<path:utils> #<path:web>)) (#<path:/Users/matthias/Library/PLT Scheme/301.4/collects> "non-existent path") (#<path:/Users/matthias/plt/collects> (#<path:.DS_Store> #<path:.svn> #<path:afm> #<path:algol60> #<path:browser> #<path:compiler> #<path:defaults> #<path:doc> #<path:drscheme> #<path:dynext> #<path:embedded-gui> #<path:eopl> #<path:errortrace> #<path:ffi> #<path:finish-install> #<path:framework> #<path:frtime> #<path:games> #<path:graphics> #<path:guibuilder> #<path:handin-client> #<path:handin-server> #<path:help> #<path:hierlist> #<path:honu> #<path:honu-module> #<path:htdch> #<path:htdp> #<path:html> #<path:icons> #<path:info-domain> #<path:lang> #<path:launcher> #<path:make> #<path:mred> #<path:mrflow> #<path:mrlib> #<path:mysterx> #<path:mzcom> #<path:mzlib> #<path:mzscheme> #<path:mztake> #<path:net> #<path:openssl> #<path:parser-tools> #<path:plai> #<path:planet> #<path:plot> #<path:preprocessor> #<path:profj> #<path:profjBoxes> #<path:profjWizard> #<path:r5rs> #<path:r6rs> #<path:readline> #<path:reduction-semantics> #<path:repos-time-stamp> #<path:setup> #<path:sgl> #<path:sirmail> #<path:skipper> #<path:slatex> #<path:slibinit> #<path:slideshow> #<path:srfi> #<path:srpersist> #<path:ssax> #<path:stepper> #<path:string-constants> #<path:swindle> #<path:syntax> #<path:syntax-color> #<path:test-suite> #<path:tests> #<path:tex2page> #<path:texpict> #<path:trace> #<path:version> #<path:waterworld> #<path:web-server> #<path:xelda> #<path:xml>)))
Human Language: english
Teachpack filenames: ()
Computer Language: (("Teaching Languages" "How to Design Programs" "Advanced Student") (#6(#t constructor repeating-decimal #t #t none) #f))
>Description:
bytes->string/utf-8: string is not a well-formed UTF-8 encoding: #" %a}%a\254lass MT implements IList {%a int length() { %a  return 0; %a }%a}%a\254lass Cons impl...

 === context ===
(next-key . #<struct:srcloc>)
(next-pair . #<struct:srcloc>)
(loop . #<struct:srcloc>)
(string->url . #<struct:srcloc>)
(#f . #f)
(call-with-break-parameterization . #f)
(as-entry . #<struct:srcloc>)
>How-To-Repeat:
This is a general problem that we discussed on the list and privately. Here is a bug report. 

1. I just wrote an exercise in HtDCH that asks students to run 
an infinite loop on a "tight data loop" (see program below).

I need this. 

2. On the Mac, clicking on Stop doesn't prevent the program from going on. The gc light blinks non-stop on a machine with a gig of memory. 

3. When I finally remembered KILL, I did that and I got the above error text, when I also brought up help text to request this feature change. 

My request: let's change STOP into KILL behavior as default for all teaching languages. Keep the language STOP. I don't want KILL to show up at the surface. Indeed, I'd like it to disappear altogether. 

interface IList {
 // the number of items on the list 
 int length(); 
}

class MT implements IList {
 int length() { 
  return 0; 
 }
}

class Cons implements IList {
 int fst; 
 IList rst;

 Cons(int fst, IList rst) { 
  this.fst = fst; 
  this.rst = rst; 
 }

 int length() { 
  return 1 + this. rst.length(); 
 }
}

class Example {
 Cons alist = new Cons(1,new MT()); 
 
 Example() { 
  alist.rst = alist; 
 }

 boolean test() { 
  return 1 == new Cons(2,new MT()).length(); 
 }

 boolean testCyclic() { 
  return 0 == alist.length();
 }
}
>Fix:
>Audit-Trail:
From: Robby Findler <robby@cs.uchicago.edu>
To: plt-internal@list.cs.brown.edu
Cc: bugs@plt-scheme.org
Subject: Re: all/7871: infinite loops in DrScheme/ProfessorJ
Date: Mon, 6 Feb 2006 09:57:57 -0600

 We discussed changing the meaning of the stop button a while back to
 make it do custodian-shutdown-all by default, in all languages.
 
 Were there any objectors? (I forget.)
 
 Robby
From: Robby Findler <robby@cs.uchicago.edu>
To: mflatt@cs.utah.edu, matthias@ccs.neu.edu, kathyg@cs.utah.edu
Cc: bugs@plt-scheme.org
Subject: Re: all/7871: infinite loops in DrScheme/ProfessorJ
Date: Mon, 6 Feb 2006 10:11:31 -0600

 Matthew, do you understand the stack trace below? It's confusing me.
 
 Matthias, did this show up in the REPL or in an internal error message
 box, or in the console (or somewhere else)?
 
 Robby
 
 At Mon, 6 Feb 2006 10:55:03 -0500, matthias@ccs.neu.edu wrote:
 > *** Description:
 > bytes->string/utf-8: string is not a well-formed UTF-8 encoding: #" %a}%a\254lass MT 
 > implements IList {%a int length() { %a  return 0; %a }%a}%a\254lass Cons impl...
 > 
 >  === context ===
 > (next-key . #<struct:srcloc>)
 > (next-pair . #<struct:srcloc>)
 > (loop . #<struct:srcloc>)
 > (string->url . #<struct:srcloc>)
 > (#f . #f)
 > (call-with-break-parameterization . #f)
 > (as-entry . #<struct:srcloc>)
 
From: Matthew Flatt <mflatt@cs.utah.edu>
To: matthias@ccs.neu.edu, bugs@plt-scheme.org
Cc: robby@cs.uchicago.edu
Subject: Re: all/7871: infinite loops in DrScheme/ProfessorJ
Date: Mon, 6 Feb 2006 09:10:57 -0700

 At Mon, 6 Feb 2006 10:55:03 -0500, matthias@ccs.neu.edu wrote:
 > 1. I just wrote an exercise in HtDCH that asks students to run 
 > an infinite loop on a "tight data loop" (see program below).
 > 
 > I need this. 
 > 
 > 2. On the Mac, clicking on Stop doesn't prevent the program from going on. The 
 > gc light blinks non-stop on a machine with a gig of memory. 
 > 
 > 3. When I finally remembered KILL, I did that and I got the above error text, 
 > when I also brought up help text to request this feature change. 
 > 
 > My request: let's change STOP into KILL behavior as default for all teaching 
 > languages.
 
 I think this change is unlikely to solve your problem. Isn't the
 problem that the button click isn't working, instead of the button
 trying to break instead of kill?
 
 Matthew
 
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Robby Findler <robby@cs.uchicago.edu>
Cc: mflatt@cs.utah.edu, kathyg@cs.utah.edu, bugs@plt-scheme.org
Subject: Re: all/7871: infinite loops in DrScheme/ProfessorJ
Date: Mon, 6 Feb 2006 11:42:41 -0500

 On Feb 6, 2006, at 11:11 AM, Robby Findler wrote:
 
 > Matthew, do you understand the stack trace below? It's confusing me.
 >
 > Matthias, did this show up in the REPL or in an internal error message
 > box, or in the console (or somewhere else)?
 
 Not repl but both in the console (from where I launched drs) and an 
 internal error box.
 
 > Robby
 >
 > At Mon, 6 Feb 2006 10:55:03 -0500, matthias@ccs.neu.edu wrote:
 >> *** Description:
 >> bytes->string/utf-8: string is not a well-formed UTF-8 encoding: #" 
 >> %a}%a\254lass MT
 >> implements IList {%a int length() { %a  return 0; %a }%a}%a\254lass 
 >> Cons impl...
 >>
 >>  === context ===
 >> (next-key . #<struct:srcloc>)
 >> (next-pair . #<struct:srcloc>)
 >> (loop . #<struct:srcloc>)
 >> (string->url . #<struct:srcloc>)
 >> (#f . #f)
 >> (call-with-break-parameterization . #f)
 >> (as-entry . #<struct:srcloc>)
 >
 
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: robby@cs.uchicago.edu, bugs@plt-scheme.org
Subject: Re: all/7871: infinite loops in DrScheme/ProfessorJ
Date: Mon, 6 Feb 2006 11:44:34 -0500

 On Feb 6, 2006, at 11:10 AM, Matthew Flatt wrote:
 
 > At Mon, 6 Feb 2006 10:55:03 -0500, matthias@ccs.neu.edu wrote:
 >> 1. I just wrote an exercise in HtDCH that asks students to run
 >> an infinite loop on a "tight data loop" (see program below).
 >>
 >> I need this.
 >>
 >> 2. On the Mac, clicking on Stop doesn't prevent the program from 
 >> going on. The
 >> gc light blinks non-stop on a machine with a gig of memory.
 >>
 >> 3. When I finally remembered KILL, I did that and I got the above 
 >> error text,
 >> when I also brought up help text to request this feature change.
 >>
 >> My request: let's change STOP into KILL behavior as default for all 
 >> teaching
 >> languages.
 >
 > I think this change is unlikely to solve your problem. Isn't the
 > problem that the button click isn't working, instead of the button
 > trying to break instead of kill?
 
 I must admit I can't parse the question.
 
 I can "click" on STOP, but it appears to have no effect. Last time we 
 discussed this you suggested that on the Mac button clicks may not 
 register quickly enough or something like that. The menu items still 
 work, if that helps. How can I test this conjecture, assuming this is 
 what you mean. BTW, Cmd K works, too.
 
 
From: Matthew Flatt <mflatt@cs.utah.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: robby@cs.uchicago.edu, bugs@plt-scheme.org
Subject: Re: all/7871: infinite loops in DrScheme/ProfessorJ
Date: Mon, 6 Feb 2006 10:23:17 -0700

 At Mon, 6 Feb 2006 11:44:34 -0500, Matthias Felleisen wrote:
 > > I think this change is unlikely to solve your problem. Isn't the
 > > problem that the button click isn't working, instead of the button
 > > trying to break instead of kill?
 > 
 > I must admit I can't parse the question.
 > 
 > I can "click" on STOP, but it appears to have no effect.
 
 Yes, that's what I mean. The button ignores the click.
 
 Matthew
 
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: robby@cs.uchicago.edu, bugs@plt-scheme.org
Subject: Re: all/7871: infinite loops in DrScheme/ProfessorJ
Date: Mon, 6 Feb 2006 13:27:17 -0500

 On Feb 6, 2006, at 12:23 PM, Matthew Flatt wrote:
 
 > At Mon, 6 Feb 2006 11:44:34 -0500, Matthias Felleisen wrote:
 >>> I think this change is unlikely to solve your problem. Isn't the
 >>> problem that the button click isn't working, instead of the button
 >>> trying to break instead of kill?
 >>
 >> I must admit I can't parse the question.
 >>
 >> I can "click" on STOP, but it appears to have no effect.
 >
 > Yes, that's what I mean. The button ignores the click.
 
 How can I confirm your conjecture? How can you distinguish these two 
 behaviors:
 
   1. click but click has no effect
   2. click and the handler calls stop but stop has no effect
 
 -- Matthias
 
From: Robby Findler <robby@cs.uchicago.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: Matthew Flatt <mflatt@cs.utah.edu>, bugs@plt-scheme.org
Subject: Re: all/7871: infinite loops in DrScheme/ProfessorJ
Date: Mon, 6 Feb 2006 12:26:01 -0600

 At Mon, 6 Feb 2006 13:27:17 -0500, Matthias Felleisen wrote:
 > 
 > On Feb 6, 2006, at 12:23 PM, Matthew Flatt wrote:
 > 
 > > At Mon, 6 Feb 2006 11:44:34 -0500, Matthias Felleisen wrote:
 > >>> I think this change is unlikely to solve your problem. Isn't the
 > >>> problem that the button click isn't working, instead of the button
 > >>> trying to break instead of kill?
 > >>
 > >> I must admit I can't parse the question.
 > >>
 > >> I can "click" on STOP, but it appears to have no effect.
 > >
 > > Yes, that's what I mean. The button ignores the click.
 > 
 > How can I confirm your conjecture? How can you distinguish these two 
 > behaviors:
 > 
 >   1. click but click has no effect
 >   2. click and the handler calls stop but stop has no effect
 
 You can use the menu shortcuts. My drscheme is building, so I can't
 check them right now, but cmd-k is kill and I think that break also has
 a shortcut. You can also select the menu, if not.
 
 Robby
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Robby Findler <robby@cs.uchicago.edu>
Cc: Matthew Flatt <mflatt@cs.utah.edu>, bugs@plt-scheme.org
Subject: Re: all/7871: infinite loops in DrScheme/ProfessorJ
Date: Mon, 6 Feb 2006 13:31:43 -0500

 On Feb 6, 2006, at 1:26 PM, Robby Findler wrote:
 
 > At Mon, 6 Feb 2006 13:27:17 -0500, Matthias Felleisen wrote:
 >>
 >> On Feb 6, 2006, at 12:23 PM, Matthew Flatt wrote:
 >>
 >>> At Mon, 6 Feb 2006 11:44:34 -0500, Matthias Felleisen wrote:
 >>>>> I think this change is unlikely to solve your problem. Isn't the
 >>>>> problem that the button click isn't working, instead of the button
 >>>>> trying to break instead of kill?
 >>>>
 >>>> I must admit I can't parse the question.
 >>>>
 >>>> I can "click" on STOP, but it appears to have no effect.
 >>>
 >>> Yes, that's what I mean. The button ignores the click.
 >>
 >> How can I confirm your conjecture? How can you distinguish these two
 >> behaviors:
 >>
 >>   1. click but click has no effect
 >>   2. click and the handler calls stop but stop has no effect
 >
 > You can use the menu shortcuts. My drscheme is building, so I can't
 > check them right now, but cmd-k is kill and I think that break also has
 > a shortcut. You can also select the menu, if not.
 
 As I wrote in the original message, I did. And KILL worked. But how 
 does this discern the two behaviors?
 
From: Matthew Flatt <mflatt@cs.utah.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: robby@cs.uchicago.edu, bugs@plt-scheme.org
Subject: Re: all/7871: infinite loops in DrScheme/ProfessorJ
Date: Mon, 6 Feb 2006 11:35:44 -0700

 At Mon, 6 Feb 2006 13:27:17 -0500, Matthias Felleisen wrote:
 > 
 > On Feb 6, 2006, at 12:23 PM, Matthew Flatt wrote:
 > 
 > > At Mon, 6 Feb 2006 11:44:34 -0500, Matthias Felleisen wrote:
 > >>> I think this change is unlikely to solve your problem. Isn't the
 > >>> problem that the button click isn't working, instead of the button
 > >>> trying to break instead of kill?
 > >>
 > >> I must admit I can't parse the question.
 > >>
 > >> I can "click" on STOP, but it appears to have no effect.
 > >
 > > Yes, that's what I mean. The button ignores the click.
 > 
 > How can I confirm your conjecture? How can you distinguish these two 
 > behaviors:
 > 
 >   1. click but click has no effect
 >   2. click and the handler calls stop but stop has no effect
 
 Hold down the mouse button until the GUI button highlights. If the
 button highlights, then it registers your click.
 
 Matthew
 
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: robby@cs.uchicago.edu, bugs@plt-scheme.org
Subject: Re: all/7871: infinite loops in DrScheme/ProfessorJ
Date: Mon, 6 Feb 2006 13:53:07 -0500

 On Feb 6, 2006, at 1:35 PM, Matthew Flatt wrote:
 
 > At Mon, 6 Feb 2006 13:27:17 -0500, Matthias Felleisen wrote:
 >>
 >> On Feb 6, 2006, at 12:23 PM, Matthew Flatt wrote:
 >>
 >>> At Mon, 6 Feb 2006 11:44:34 -0500, Matthias Felleisen wrote:
 >>>>> I think this change is unlikely to solve your problem. Isn't the
 >>>>> problem that the button click isn't working, instead of the button
 >>>>> trying to break instead of kill?
 >>>>
 >>>> I must admit I can't parse the question.
 >>>>
 >>>> I can "click" on STOP, but it appears to have no effect.
 >>>
 >>> Yes, that's what I mean. The button ignores the click.
 >>
 >> How can I confirm your conjecture? How can you distinguish these two
 >> behaviors:
 >>
 >>   1. click but click has no effect
 >>   2. click and the handler calls stop but stop has no effect
 >
 > Hold down the mouse button until the GUI button highlights. If the
 > button highlights, then it registers your click.
 
 AH! I held down the button until it STOP lit up, and up it lit (after
 some 3 or 4 seconds).
 
 The repl came back and said user break.
 
 Then I clicked on RUN immediately and it took a minute or  so to
 compile and execute this program. In the meantime, the color wheel
 was spinning and nothing else was visible in dr.
 
 -- Matthias
 
From: Matthew Flatt <mflatt@cs.utah.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: robby@cs.uchicago.edu, bugs@plt-scheme.org
Subject: Re: all/7871: infinite loops in DrScheme/ProfessorJ
Date: Mon, 6 Feb 2006 11:50:39 -0700

 At Mon, 6 Feb 2006 13:53:07 -0500, Matthias Felleisen wrote:
 > Then I clicked on RUN immediately and it took a minute or  so to
 > compile and execute this program. In the meantime, the color wheel
 > was spinning and nothing else was visible in dr.
 
 That's GCing and paging due to the stopped loop's memory use, right?
 (It should be about the same for killing.)
 
 Matthew
 
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: robby@cs.uchicago.edu, bugs@plt-scheme.org
Subject: Re: all/7871: infinite loops in DrScheme/ProfessorJ
Date: Mon, 6 Feb 2006 14:01:54 -0500

 On Feb 6, 2006, at 1:50 PM, Matthew Flatt wrote:
 
 > At Mon, 6 Feb 2006 13:53:07 -0500, Matthias Felleisen wrote:
 >> Then I clicked on RUN immediately and it took a minute or  so to
 >> compile and execute this program. In the meantime, the color wheel
 >> was spinning and nothing else was visible in dr.
 >
 > That's GCing and paging due to the stopped loop's memory use, right?
 
 I assumed it was paging.
 
 > (It should be about the same for killing.)
 
 Yes.
 
 ;; ---
 
 So what does this mean for drscheme? Is there a way to register the 
 click faster than that? 
 
From: Matthew Flatt <mflatt@cs.utah.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: robby@cs.uchicago.edu, bugs@plt-scheme.org
Subject: Re: all/7871: infinite loops in DrScheme/ProfessorJ
Date: Mon, 6 Feb 2006 12:00:43 -0700

 At Mon, 6 Feb 2006 14:01:54 -0500, Matthias Felleisen wrote:
 > So what does this mean for drscheme? Is there a way to register the 
 > click faster than that? 
 
 Yes, I'll work on MrEd's handling of button clicks.
 
 Matthew
 
From: Matthew Flatt <mflatt@cs.utah.edu>
To: Robby Findler <robby@cs.uchicago.edu>
Cc: matthias@ccs.neu.edu, kathyg@cs.utah.edu, bugs@plt-scheme.org
Subject: Re: all/7871: infinite loops in DrScheme/ProfessorJ
Date: Mon, 6 Feb 2006 12:03:33 -0700

 At Mon, 6 Feb 2006 10:11:31 -0600, Robby Findler wrote:
 > Matthew, do you understand the stack trace below? It's confusing me.
 
 I've fixed the mangled context. I'll look more into the error message.
 
 Matthew
 
 > At Mon, 6 Feb 2006 10:55:03 -0500, matthias@ccs.neu.edu wrote:
 > > *** Description:
 > > bytes->string/utf-8: string is not a well-formed UTF-8 encoding: #" 
 > %a}%a\254lass MT 
 > > implements IList {%a int length() { %a  return 0; %a }%a}%a\254lass Cons 
 > impl...
 > > 
 > >  === context ===
 > > (next-key . #<struct:srcloc>)
 > > (next-pair . #<struct:srcloc>)
 > > (loop . #<struct:srcloc>)
 > > (string->url . #<struct:srcloc>)
 > > (#f . #f)
 > > (call-with-break-parameterization . #f)
 > > (as-entry . #<struct:srcloc>)
From: Robby Findler <robby@cs.uchicago.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: Matthew Flatt <mflatt@cs.utah.edu>, bugs@plt-scheme.org
Subject: Re: all/7871: infinite loops in DrScheme/ProfessorJ
Date: Mon, 6 Feb 2006 14:13:33 -0600

 At Mon, 6 Feb 2006 13:31:43 -0500, Matthias Felleisen wrote:
 > 
 > On Feb 6, 2006, at 1:26 PM, Robby Findler wrote:
 > 
 > > At Mon, 6 Feb 2006 13:27:17 -0500, Matthias Felleisen wrote:
 > >>
 > >> On Feb 6, 2006, at 12:23 PM, Matthew Flatt wrote:
 > >>
 > >>> At Mon, 6 Feb 2006 11:44:34 -0500, Matthias Felleisen wrote:
 > >>>>> I think this change is unlikely to solve your problem. Isn't the
 > >>>>> problem that the button click isn't working, instead of the button
 > >>>>> trying to break instead of kill?
 > >>>>
 > >>>> I must admit I can't parse the question.
 > >>>>
 > >>>> I can "click" on STOP, but it appears to have no effect.
 > >>>
 > >>> Yes, that's what I mean. The button ignores the click.
 > >>
 > >> How can I confirm your conjecture? How can you distinguish these two
 > >> behaviors:
 > >>
 > >>   1. click but click has no effect
 > >>   2. click and the handler calls stop but stop has no effect
 > >
 > > You can use the menu shortcuts. My drscheme is building, so I can't
 > > check them right now, but cmd-k is kill and I think that break also has
 > > a shortcut. You can also select the menu, if not.
 > 
 > As I wrote in the original message, I did. And KILL worked. But how 
 > does this discern the two behaviors?
 
 The point is that you can use the shortcut to do break, too ...

From: John Clements <clements@brinckerhoff.org>
To: matthias@ccs.neu.edu, bugs@plt-scheme.org, kathyg@plt-scheme.org
Cc: 
Subject: Re: profj/7871: infinite loops in DrScheme/ProfessorJ
Date: Thu, 21 Dec 2006 11:23:03 -0500

 %3Fcmd%3Dview%2520audit-trail%26database%3Ddefault%26pr%3D7871
 
 It looks like this bug should be closed, or at a minimum not assigned  
 to Kathy.
 
 John
 
 (p.s.: somehow the URL at the top of the e-mail got mangled.  The  
 fault of gnats or Mail, I suppose.)

Responsible changed from "kathyg" to "robby" by kathyg at Thu, 02 Aug 2007 11:11:38 -0400
Reason>>> I don't know if this should be closed, but I don't think this should be my PR

From: "Robby Findler" <robby@cs.uchicago.edu>
To: bugs@plt-scheme.org
Cc: kathyg@plt-scheme.org, matthias@ccs.neu.edu
Subject: Re: [plt-bug] profj/7871 infinite loops in DrScheme/ProfessorJ
Date: Thu, 2 Aug 2007 18:47:33 -0500

 Matthias: does the memory limit change your request?
 
 Robby
 
 On 8/2/07, kathyg@plt-scheme.org <kathyg@plt-scheme.org> wrote:
 >
 > Responsible changed from "kathyg" to "robby" by kathyg at Thu, 02 Aug 2007 11:11:38 -0400
 > Reason>>> I don't know if this should be closed, but I don't think this should be my PR
 >
 >
 > View:
 >   http://bugs.plt-scheme.org/query/?cmd=view&pr=7871
 >
 >

State changed from "open" to "closed" by matthias at Fri, 03 Aug 2007 10:26:58 -0400
Reason>>> the changes in mred's behavior suffice. we just need to let students know that 
they need to hold down the mouse on stop until they get a break. 

the error trace is gone, too. 

