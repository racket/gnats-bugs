From apache@plt-scheme.org Fri May 19 14:36:01 2006
Received: from champlain.ccs.neu.edu (champlain.ccs.neu.edu [127.0.0.1])
	by champlain.ccs.neu.edu (8.12.10/8.12.10) with ESMTP id k4JIZr3X018132
	for <bugs@plt-scheme.org>; Fri, 19 May 2006 14:35:54 -0400
Message-Id: <200605191835.k4JIZrH8018130@champlain.ccs.neu.edu>
Date: Fri, 19 May 2006 14:35:53 -0400
From: matthias@ccs.neu.edu
To: bugs@plt-scheme.org
Subject: professorJ (branch) is looking for classrecord?

>Number:         8056
>Category:       profj
>Synopsis:       professorJ (branch) is looking for classrecord?
>Class:          sw-bug
>Responsible:    kathyg
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Fri May 19 14:40:00 -0400 2006
>Last-Modified:  Thu Jun 01 22:30:23 -0400 2006
>Originator:     matthias
>Organization:
plt
>Submitter-Id:   unknown
>Release:        301.15-svn18may2006
>Environment:
macosx "Darwin america.local 7.9.0 Darwin Kernel Version 7.9.0: Wed Mar 30 20:11:17 PST 2005; root:xnu/xnu-517.12.7.obj~1/RELEASE_PPC  Power Macintosh powerpc" (ppc-macosx) (get-display-depth) = 32
Docs Installed:
(#<path:/Users/matthias/plt/collects/doc/r5rs> #<path:/Users/matthias/plt/collects/doc/mzscheme> #<path:/Users/matthias/plt/collects/doc/mred> #<path:/Users/matthias/plt/collects/doc/help> #<path:/Users/matthias/plt/doc/help> #<path:/Users/matthias/plt/collects/doc/tour> #<path:/Users/matthias/plt/collects/doc/drscheme> #<path:/Users/matthias/plt/collects/doc/srfi> #<path:/Users/matthias/plt/collects/doc/mzlib> #<path:/Users/matthias/plt/collects/doc/misclib> #<path:/Users/matthias/plt/collects/doc/mrlib> #<path:/Users/matthias/plt/collects/doc/framework> #<path:/Users/matthias/plt/collects/doc/mzc> #<path:/Users/matthias/plt/collects/doc/foreign> #<path:/Users/matthias/plt/collects/doc/tools> #<path:/Users/matthias/plt/collects/doc/insidemz> #<path:/Users/matthias/plt/collects/doc/web-server> #<path:/Users/matthias/plt/collects/doc/swindle> #<path:/Users/matthias/plt/collects/doc/plot> #<path:/Users/matthias/plt/collects/doc/teachpack-htdc> #<path:/Users/matthias/plt/collects/doc/t-y-scheme> #<path:/Users/matthias/plt/collects/doc/acl2> #<path:/Users/matthias/plt/doc/release-notes> #<path:/Users/matthias/plt/doc/.svn> #<path:/Users/matthias/plt/collects/doc/tex2page> #<path:/Users/matthias/plt/collects/doc/beginning> #<path:/Users/matthias/plt/collects/doc/beginning-abbr> #<path:/Users/matthias/plt/collects/doc/intermediate> #<path:/Users/matthias/plt/collects/doc/intermediate-lambda> #<path:/Users/matthias/plt/collects/doc/advanced> #<path:/Users/matthias/plt/collects/doc/teachpack> #<path:/Users/matthias/plt/collects/doc/profj-beginner> #<path:/Users/matthias/plt/collects/doc/profj-intermediate> #<path:/Users/matthias/plt/collects/doc/profj-advanced>)
Collections:
((#<path:/Users/matthias/Unison/collects/> (#<path:.DS_Store> #<path:date> #<path:finance> #<path:testing> #<path:utils> #<path:web>)) (#<path:/Users/matthias/Library/PLT Scheme/301.15/collects> "non-existent path") (#<path:/Users/matthias/plt/collects> (#<path:.DS_Store> #<path:.svn> #<path:afm> #<path:algol60> #<path:browser> #<path:compiler> #<path:config> #<path:defaults> #<path:doc> #<path:drscheme> #<path:dynext> #<path:embedded-gui> #<path:eopl> #<path:errortrace> #<path:ffi> #<path:finish-install> #<path:framework> #<path:frtime> #<path:games> #<path:graphics> #<path:guibuilder> #<path:handin-client> #<path:handin-server> #<path:help> #<path:hierlist> #<path:honu> #<path:honu-module> #<path:htdch> #<path:htdp> #<path:html> #<path:icons> #<path:info-domain> #<path:lang> #<path:launcher> #<path:make> #<path:mred> #<path:mrflow> #<path:mrlib> #<path:mysterx> #<path:mzcom> #<path:mzlib> #<path:mzscheme> #<path:mztake> #<path:net> #<path:openssl> #<path:parser-tools> #<path:plai> #<path:planet> #<path:plot> #<path:preprocessor> #<path:profj> #<path:profjBoxes> #<path:profjWizard> #<path:r5rs> #<path:r6rs> #<path:readline> #<path:reduction-semantics> #<path:repos-time-stamp> #<path:scribble> #<path:setup> #<path:sgl> #<path:sirmail> #<path:skipper> #<path:slatex> #<path:slibinit> #<path:slideshow> #<path:srfi> #<path:srpersist> #<path:ssax> #<path:stepper> #<path:string-constants> #<path:swindle> #<path:syntax> #<path:syntax-color> #<path:teachpack> #<path:test-suite> #<path:tests> #<path:tex2page> #<path:texpict> #<path:trace> #<path:version> #<path:waterworld> #<path:web-server> #<path:xelda> #<path:xml>)))
Human Language: english
Teachpack filenames: ()
Computer Language: (("Experimental Languages" "ProfessorJ" "Advanced") ((field) (#f) (#t) (#t)))
>Description:
I am getting this for an ill-formed check ... expect ... 

class-record-class?: expects argument of type <struct:class-record>; given ()
>How-To-Repeat:
/*
+-------------------+
| Bank              |
+-------------------+
| int accountNumber |
| IAccounts accts   |
+-------------------+

                +-----------------------+                    
                | IAccounts             |<------------------+
                +-----------------------+                   |
                +-----------------------+                   |
                | Account lookup(int x) |                   |
                +-----------------------+                   |
                            |                               |
                           / \                              |
                           ---                              |
                            |                               |
              ------------------------------                |
              |                            |                |
  +-----------------------+    +-----------------------+    |
  | MTAccounts            |    | ConsAccounts          |    |
  +-----------------------+    +-----------------------+    |
  +-----------------------+    | Account first         |    |
  | Account lookup(int x) |    | IAccounts rest        |-+  |
  +-----------------------+    +-----------------------+ |  |
                               | Account lookup(int x) | |  |
                               +-----------------------+ |  |
                                                         |  |
                                                         +--+

+-------------------+
| Account           |
+-------------------+
| String name       |
| int amount        |
| int accountNumber |
+-------------------+

*/


// represent a bank and its accounts
class Bank {
 private int accountNumber = 0; 
 private IAccounts accts = new MTAccounts();

 public Bank() { }
 private Bank(int accountNumber, IAccounts accts) {
  this.accountNumber = accountNumber;
  this.accts = accts;
 }

 // open an account and computer an account number for the customer 
 public int openAccount(String name, int deposit) { 
  accountNumber = accountNumber + 1; 
  accts = new ConsAccounts(new Account(name,deposit,accountNumber),accts);
  return accountNumber;
 }

 // a customer withdraws a from account id
 void withdraw(int id, int a) { 
  Account acct = accts.lookup(a);
  Account acct2 = acct.withdraw(a);

  accts = new ConsAccounts(acct2,accts);
  return ;  
 }

 // how much money does the customer have in account id
 String checkBalance(int id) { 
  return accts.lookup(id).balance();
 }
}

// a list of accounts
interface IAccounts {
  Account lookup(int x);
}

// no accounts
class MTAccounts implements IAccounts {

  MTAccounts() {
  }

  // ** DRAFT TEMPLATE ** Edit as needed.
  public Account lookup(int x) {
   return Util.error("can't happen");
  }
}

// more accounts
class ConsAccounts implements IAccounts {
 Account first;
 IAccounts rest;

 ConsAccounts(Account first, IAccounts rest) {
  this.first = first;
  this.rest = rest;
 }

 // lookup the Account with number x in this list
 public Account lookup(int x) {
  if (this.first.accountNumber == x)
    return this.first;
   else
  return this.rest.lookup(x);
 }
}


// a checking account
class Account {
  String name;
  int amount;
  int accountNumber;

  Account(String name, int amount, int accountNumber) {
    this.name = name;
    this.amount = amount;
    this.accountNumber = accountNumber;
  }

  Account withdraw(int a) { 
   return new Account(this.name,this.amount-a,this.accountNumber);
  }

 // $\mbox{a balance statement}$
 // $\mbox{of \scheme{this} account}$
 String balance() { 
  return
   this. name.
    concat(": ".
     concat(
      String.valueOf(this. amount)));
 }
}

// -----------------------------------------------------------------------------
class Examples {
 Bank aBank = new Bank();

 boolean test1() { 
  aBank.openAccount("Kathy",1000);
  return true;
 }

 boolean test2() { 
  aBank.withdraw(1,900);
  return check aBank.checkBalance(1) expect 100; 
 }
}
>Fix:
>Audit-Trail:
State changed from "open" to "closed" by kathyg at Thu, 01 Jun 2006 22:30:23 -0400
Reason>>> Corrected bug in svn

