From vkp@ccs.neu.edu  Fri Feb 13 18:25:47 2004
Received: from localhost (IDENT:root@localhost.localdomain [127.0.0.1])
	by champlain.ccs.neu.edu (8.9.3/8.9.3) with ESMTP id SAA15914
	for <bugs>; Fri, 13 Feb 2004 18:25:47 -0500
Message-Id: <200402132325.SAA15914@champlain.ccs.neu.edu>
Date: Fri, 13 Feb 2004 18:25:47 -0500
From: vkp <vkp@ccs.neu.edu>
To: bugs@plt-scheme.org
Subject: ProfJ test cases don't work for lists

>Number:         6707
>Category:       profj
>Synopsis:       ProfJ test cases don't work for lists
>Confidential:   no
>Severity:       serious
>Priority:       medium
>Responsible:    kathyg
>State:          closed
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Fri Feb 13 18:30:00 -0500 2004
>Closed-Date:    Fri Feb 13 19:25:42 -0500 2004
>Last-Modified:  Sun Mar 28 03:48:47 -0500 2004
>Originator:     vkp
>Release:        206p1
>Organization:
titan
>Environment:
windows "Windows NT 5.1 (Build 2600) Service Pack 1" (win32\i386) (get-display-depth) = 32
Docs Installed:
("C:\\Program Files\\PLT\\collects\\doc\\tour" "C:\\Program Files\\PLT\\collects\\doc\\tools" "C:\\Program Files\\PLT\\collects\\doc\\tex2page" "C:\\Program Files\\PLT\\collects\\doc\\teachpack" "C:\\Program Files\\PLT\\collects\\doc\\t-y-scheme" "C:\\Program Files\\PLT\\collects\\doc\\srfi" "C:\\Program Files\\PLT\\collects\\doc\\r5rs" "C:\\Program Files\\PLT\\collects\\doc\\profj-intermediate" "C:\\Program Files\\PLT\\collects\\doc\\profj-beginner" "C:\\Program Files\\PLT\\collects\\doc\\profj-advanced" "C:\\Program Files\\PLT\\collects\\doc\\mzscheme" "C:\\Program Files\\PLT\\collects\\doc\\mzlib" "C:\\Program Files\\PLT\\collects\\doc\\mzc" "C:\\Program Files\\PLT\\collects\\doc\\mred" "C:\\Program Files\\PLT\\collects\\doc\\misclib" "C:\\Program Files\\PLT\\collects\\doc\\intermediate-lambda" "C:\\Program Files\\PLT\\collects\\doc\\intermediate" "C:\\Program Files\\PLT\\collects\\doc\\insidemz" "C:\\Program Files\\PLT\\collects\\doc\\help" "C:\\Program Files\\PLT\\collects\\doc\\framework" "C:\\Program Files\\PLT\\collects\\doc\\drscheme" "C:\\Program Files\\PLT\\collects\\doc\\beginning-abbr" "C:\\Program Files\\PLT\\collects\\doc\\beginning" "C:\\Program Files\\PLT\\collects\\doc\\advanced")
Collections: 
(("C:\\Documents and Settings\\Viera\\Application Data\\PLT Scheme\\206p1\\collects" "non-existent path") ("C:\\Program Files\\PLT\\collects" ("afm" "algol60" "browser" "compiler" "defaults" "doc" "drscheme" "dynext" "eopl" "errortrace" "framework" "games" "graphics" "help" "hierlist" "htdp" "html" "icons" "lang" "launcher" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "preprocessor" "profj" "setup" "sgl" "slatex" "slibinit" "slideshow" "srfi" "stepper" "string-constants" "syntax" "syntax-color" "test-suite" "tex2page" "texpict" "version" "web-server" "xml")))
 
Human Language: english
 
Teachpack filenames: ()
Computer Language: (("Experimental Languages" "ProfessorJ" "Advanced") ((type) (#f)))
>Description:
define a list class of ints, say 
create a test case that compares a computed list with an expected list
watch ProfJ fail because it just prints the short hand of the list and doesn't do a comparison
>How-To-Repeat:
interface IRange{
  boolean hasMore();
  Object current();
  void next();
}

class ListRange implements IRange{
  ALOO list;
 
  ListRange(ALOO list){
    this.list = list;
  }

  boolean hasMore(){ return (this.list instanceof ConsLOO); }

  Object current(){ return ((ConsLOO) list).fst; }

  void next(){ list = ((ConsLOO) list).rst; }
}

abstract class ALOO{}

class MTLOO extends ALOO{
  MTLOO(){}
}

class ConsLOO extends ALOO{
  Object fst;
  ALOO rst;

  ConsLOO(Object fst, ALOO rst){
    this.fst = fst;
    this.rst = rst;
  }
}

class Book{
  int year;
  String title;

  Book(int year, String title){
    this.year = year;
    this.title = title;
  }
}

class Examples {
  Book b1 = new Book(1920, "Martin Eden");
  Book b2 = new Book(1990, "Beaches");
  Book b3 = new Book(2003, "Losing Season");

  ALOO mtl = new MTLOO();
  ALOO list1 = new ConsLOO(b1, mtl);
  ALOO list2 = new ConsLOO(b2, list1);

  // test traversal with IRange
  // produce a list of titles of the books in the given list
  ALOO titles(IRange it){
    ALOO result = new MTLOO();
    for (; it.hasMore(); it.next()){
      result = new ConsLOO(((Book)(it.current())).title, result);
    }
    return result;
  }
}

test case:

new Examples().titles(new ListRange(new Examples().list2))
expected: 
new ConsLOO("Martin Eden", new ConsLOO("Beaches", new ConsLOO("Losing Season", new MTLOO())));
>Fix:
In the submitted code, the list given to the test-case to test and the list given to expected are not equivalent lists (one has 2 entries, the other 3).

By default, ProfJ Advanced displays only the class name of an object value. This can be changed under Language -> Choose language -> Show details : Then change class to class + fields 
>Release-Note:
>Audit-Trail:
Responsible-Changed-From-To: eli->kathyg
Responsible-Changed-By: kathyg
Responsible-Changed-When: Fri Feb 13 19:25:42 2004
Responsible-Changed-Why:
    ProfJ
State-Changed-From-To: open->closed
State-Changed-By: kathyg
State-Changed-When: Fri Feb 13 19:25:42 2004
State-Changed-Why:
    Not a bug. See fix for explanation of what went wrong.
>Unformatted:
