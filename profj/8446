From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Thu Dec 21 22:06:06 2006
Received: from wx-out-0506.google.com (wx-out-0506.google.com [66.249.82.233])
	by champlain.ccs.neu.edu (8.13.8/8.13.7) with ESMTP id kBM360Jf015208
	for <bugs@bugs.plt-scheme.org>; Thu, 21 Dec 2006 22:06:00 -0500
Message-Id: <200612220305.kBM35x1f015202@champlain.ccs.neu.edu>
Date: Thu, 21 Dec 2006 22:05:59 -0500
From: clements@brinckerhoff.org
To: bugs@plt-scheme.org
Subject: ProfJ: strange test case behavior with int->double cast?

>Number:         8446
>Category:       profj
>Synopsis:       ProfJ: strange test case behavior with int->double cast?
>Class:          sw-bug
>Responsible:    kathyg
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Thu Dec 21 22:10:01 -0500 2006
>Closed-Date:    Fri Dec 22 10:12:21 -0500 2006
>Last-Modified:  Fri Dec 22 10:12:21 -0500 2006
>Originator:     John Clements
>Organization:
plt
>Submitter-Id:   unknown
>Release:        360
>Environment:
macosx "Darwin john-clements-computer.local 8.8.1 Darwin Kernel Version 8.8.1: Mon Sep 25 19:42:00 PDT 2006; root:xnu-792.13.8.obj~1/RELEASE_I386 i386 i386" (i386-macosx) (get-display-depth) = 32
Docs Installed:
(("/Applications/PLT Scheme v360/doc" "r5rs" "mzscheme" "mred" "help" "tour" "drscheme" "srfi" "mzlib" "misclib" "mrlib" "framework" "foreign" "mzc" "tools" "insidemz" "web-server" "swindle" "plot" "release-notes" "t-y-scheme" "tex2page" "beginning" "beginning-abbr" "intermediate" "intermediate-lambda" "advanced" "teachpack" "teachpack-htdc" "profj-beginner" "profj-intermediate" "profj-advanced"))
Human Language: english
(current-memory-use) 94842880

Collections:
(("/Users/clements/Library/PLT Scheme/360/collects" non-existent-path) ("/Applications/PLT Scheme v360/collects" "afm" "algol60" "browser" "compiler" "config" "defaults" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "framework" "frtime" "games" "graphics" "help" "hierlist" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mzlib" "mzscheme" "mztake" "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profj" "profjBoxes" "profjWizard" "r5rs" "readline" "setup" "sgl" "slatex" "slibinit" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-suite" "tex2page" "texpict" "trace" "version" "web-server" "xml"))
Teachpack filenames: ()
Computer Language: (("Experimental Languages" "ProfessorJ" "Beginner") ((field) (#f) (#t) (#f) (#t) (#t)))
>Description:
In the following example, the test case fails although my reading of the documentation suggests that it should succeed. It appears to have to do with the cast of the expected value to a double. Bizarrely, replacing the definition of distFrom with a simple "return 5.0;" _also_ makes the problem go away.  
>How-To-Repeat:
Evaluate this program in ProfessorJ beginner:

// represent point
class Point {
  double x;
  double y;

  double distFrom(Point other){
    //return 5.0;
    return Math.sqrt(Math.pow(other.x - this.x,2) 
                     + Math.pow(other.y - this.y,2));
  }

  Point(double x, double y) {
    this.x = x;
    this.y = y;
  }
}

class PointExamples{
/*	boolean testPoint () {
    return 
      check new Point(3,4)
      expect new Point(3,4);
  }*/

  boolean testDist() {
    return check new Point(0,0).distFrom(new Point(3,4)) expect 5 within 2.0;
}

  PointExamples(){}
}
>Fix:
>Audit-Trail:
From: Kathy Gray <kathyg@cs.utah.edu>
To: clements@brinckerhoff.org, bugs@plt-scheme.org
Cc: 
Subject: Re: [plt-bug] all/8446: ProfJ: strange test case behavior with int->double cast?
Date: Fri, 22 Dec 2006 12:25:06 +0000

 When I run the program in either 359.100 or 369.1, the check passes.
 
 I've tried a few variations on the check, changing values between  
 ints and doubles and I still can't get the bug to repeat. Would you  
 mind double checking the code you've included?
 
 Thanks,
 -Kathy
 
 
 On Dec 22, 2006, at 3:10 AM, clements@brinckerhoff.org wrote:
 
 > A new problem report is waiting at
 >   http://bugs.plt-scheme.org/query/?cmd=view&pr=8446
 >
 > Reported by John Clements for release: 360
 >
 > *** Description:
 > In the following example, the test case fails although my reading  
 > of the documentation suggests that it should succeed. It appears to  
 > have to do with the cast of the expected value to a double.  
 > Bizarrely, replacing the definition of distFrom with a simple  
 > "return 5.0;" _also_ makes the problem go away.
 >
 > *** How to repeat:
 > Evaluate this program in ProfessorJ beginner:
 >
 > // represent point
 > class Point {
 >   double x;
 >   double y;
 >
 >   double distFrom(Point other){
 >     //return 5.0;
 >     return Math.sqrt(Math.pow(other.x - this.x,2)
 >                      + Math.pow(other.y - this.y,2));
 >   }
 >
 >   Point(double x, double y) {
 >     this.x = x;
 >     this.y = y;
 >   }
 > }
 >
 > class PointExamples{
 > /*	boolean testPoint () {
 >     return
 >       check new Point(3,4)
 >       expect new Point(3,4);
 >   }*/
 >
 >   boolean testDist() {
 >     return check new Point(0,0).distFrom(new Point(3,4)) expect 5  
 > within 2.0;
 > }
 >
 >   PointExamples(){}
 > }
 >
 > *** Environment:
 > macosx "Darwin john-clements-computer.local 8.8.1 Darwin Kernel  
 > Version 8.8.1: Mon Sep 25 19:42:00 PDT 2006;  
 > root:xnu-792.13.8.obj~1/RELEASE_I386 i386 i386" (i386-macosx) (get- 
 > display-depth) = 32
 > Docs Installed:
 > (("/Applications/PLT Scheme v360/doc" "r5rs" "mzscheme" "mred"  
 > "help" "tour" "drscheme" "srfi" "mzlib" "misclib" "mrlib"  
 > "framework" "foreign" "mzc" "tools" "insidemz" "web-server"  
 > "swindle" "plot" "release-notes" "t-y-scheme" "tex2page"  
 > "beginning" "beginning-abbr" "intermediate" "intermediate-lambda"  
 > "advanced" "teachpack" "teachpack-htdc" "profj-beginner" "profj- 
 > intermediate" "profj-advanced"))
 > Human Language: english
 > (current-memory-use) 94842880
 >
 > Collections:
 > (("/Users/clements/Library/PLT Scheme/360/collects" non-existent- 
 > path) ("/Applications/PLT Scheme v360/collects" "afm" "algol60"  
 > "browser" "compiler" "config" "defaults" "drscheme" "dynext"  
 > "embedded-gui" "eopl" "errortrace" "ffi" "framework" "frtime"  
 > "games" "graphics" "help" "hierlist" "htdch" "htdp" "html" "icons"  
 > "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make"  
 > "mred" "mrlib" "mzlib" "mzscheme" "mztake" "net" "openssl" "parser- 
 > tools" "planet" "plot" "preprocessor" "profj" "profjBoxes"  
 > "profjWizard" "r5rs" "readline" "setup" "sgl" "slatex" "slibinit"  
 > "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax"  
 > "syntax-color" "teachpack" "test-suite" "tex2page" "texpict"  
 > "trace" "version" "web-server" "xml"))
 > Teachpack filenames: ()
 > Computer Language: (("Experimental Languages" "ProfessorJ"  
 > "Beginner") ((field) (#f) (#t) (#f) (#t) (#t)))
 
From: John Clements <clements@brinckerhoff.org>
To: Kathy Gray <kathyg@cs.utah.edu>
Cc: bugs@plt-scheme.org
Subject: Re: [plt-bug] all/8446: ProfJ: strange test case behavior with int->double cast?
Date: Fri, 22 Dec 2006 08:33:08 -0500

 --Apple-Mail-1--491372554
 Content-Transfer-Encoding: 7bit
 Content-Type: text/plain;
 	charset=US-ASCII;
 	delsp=yes;
 	format=flowed
 
 
 On Dec 22, 2006, at 7:25 AM, Kathy Gray wrote:
 
 >> // represent point
 >> class Point {
 >>   double x;
 >>   double y;
 >>
 >>   double distFrom(Point other){
 >>     //return 5.0;
 >>     return Math.sqrt(Math.pow(other.x - this.x,2)
 >>                      + Math.pow(other.y - this.y,2));
 >>   }
 >>
 >>   Point(double x, double y) {
 >>     this.x = x;
 >>     this.y = y;
 >>   }
 >> }
 >>
 >> class PointExamples{
 >> /*	boolean testPoint () {
 >>     return
 >>       check new Point(3,4)
 >>       expect new Point(3,4);
 >>   }*/
 >>
 >>   boolean testDist() {
 >>     return check new Point(0,0).distFrom(new Point(3,4)) expect 5  
 >> within 2.0;
 >> }
 >>
 >>   PointExamples(){}
 >> }
 
 Whoops!  That 5 should be a 4.  As in:
 
 // represent point
 class Point {
    double x;
    double y;
 
    double distFrom(Point other){
      //return 5.0;
      return Math.sqrt(Math.pow(other.x - this.x,2)
                       + Math.pow(other.y - this.y,2));
    }
 
    Point(double x, double y) {
      this.x = x;
      this.y = y;
    }
 }
 
 class PointExamples{
 /*	boolean testPoint () {
      return
        check new Point(3,4)
        expect new Point(3,4);
    }*/
 
    boolean testDist() {
      return check new Point(0,0).distFrom(new Point(3,4)) expect 4  
 within 2.0;
 }
 
    PointExamples(){}
 }
 
 Still a bug (I claim), but I didn't make your life any easier.
 
 Thanks for your patience,
 
 John
 
 
 --Apple-Mail-1--491372554
 Content-Transfer-Encoding: quoted-printable
 Content-Type: text/html;
 	charset=ISO-8859-1
 
 <HTML><BODY style=3D"word-wrap: break-word; -khtml-nbsp-mode: space; =
 -khtml-line-break: after-white-space; "><BR><DIV><DIV>On Dec 22, 2006, =
 at 7:25 AM, Kathy Gray wrote:</DIV><BR =
 class=3D"Apple-interchange-newline"><BLOCKQUOTE type=3D"cite"><BLOCKQUOTE =
 type=3D"cite"><P style=3D"margin: 0.0px 0.0px 0.0px 10.0px"><FONT =
 face=3D"Helvetica" size=3D"3" style=3D"font: 12.0px Helvetica">// =
 represent point</FONT></P> <P style=3D"margin: 0.0px 0.0px 0.0px =
 10.0px"><FONT face=3D"Helvetica" size=3D"3" style=3D"font: 12.0px =
 Helvetica">class Point {</FONT></P> <P style=3D"margin: 0.0px 0.0px =
 0.0px 10.0px"><FONT face=3D"Helvetica" size=3D"3" style=3D"font: 12.0px =
 Helvetica"><SPAN class=3D"Apple-converted-space">=A0 </SPAN>double =
 x;</FONT></P> <P style=3D"margin: 0.0px 0.0px 0.0px 10.0px"><FONT =
 face=3D"Helvetica" size=3D"3" style=3D"font: 12.0px Helvetica"><SPAN =
 class=3D"Apple-converted-space">=A0 </SPAN>double y;</FONT></P> <P =
 style=3D"margin: 0.0px 0.0px 0.0px 10.0px; font: 12.0px Helvetica; =
 min-height: 14.0px"><BR></P> <P style=3D"margin: 0.0px 0.0px 0.0px =
 10.0px"><FONT face=3D"Helvetica" size=3D"3" style=3D"font: 12.0px =
 Helvetica"><SPAN class=3D"Apple-converted-space">=A0 </SPAN>double =
 distFrom(Point other){</FONT></P> <P style=3D"margin: 0.0px 0.0px 0.0px =
 10.0px"><FONT face=3D"Helvetica" size=3D"3" style=3D"font: 12.0px =
 Helvetica"><SPAN class=3D"Apple-converted-space">=A0 =A0 </SPAN>//return =
 5.0;</FONT></P> <P style=3D"margin: 0.0px 0.0px 0.0px 10.0px"><FONT =
 face=3D"Helvetica" size=3D"3" style=3D"font: 12.0px Helvetica"><SPAN =
 class=3D"Apple-converted-space">=A0 =A0 </SPAN>return =
 Math.sqrt(Math.pow(other.x - this.x,2)</FONT></P> <P style=3D"margin: =
 0.0px 0.0px 0.0px 10.0px"><FONT face=3D"Helvetica" size=3D"3" =
 style=3D"font: 12.0px Helvetica"><SPAN class=3D"Apple-converted-space">=A0=
 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 </SPAN>+ Math.pow(other.y - =
 this.y,2));</FONT></P> <P style=3D"margin: 0.0px 0.0px 0.0px =
 10.0px"><FONT face=3D"Helvetica" size=3D"3" style=3D"font: 12.0px =
 Helvetica"><SPAN class=3D"Apple-converted-space">=A0 </SPAN>}</FONT></P> =
 <P style=3D"margin: 0.0px 0.0px 0.0px 10.0px; font: 12.0px Helvetica; =
 min-height: 14.0px"><BR></P> <P style=3D"margin: 0.0px 0.0px 0.0px =
 10.0px"><FONT face=3D"Helvetica" size=3D"3" style=3D"font: 12.0px =
 Helvetica"><SPAN class=3D"Apple-converted-space">=A0 </SPAN>Point(double =
 x, double y) {</FONT></P> <P style=3D"margin: 0.0px 0.0px 0.0px =
 10.0px"><FONT face=3D"Helvetica" size=3D"3" style=3D"font: 12.0px =
 Helvetica"><SPAN class=3D"Apple-converted-space">=A0 =A0 </SPAN>this.x =3D=
  x;</FONT></P> <P style=3D"margin: 0.0px 0.0px 0.0px 10.0px"><FONT =
 face=3D"Helvetica" size=3D"3" style=3D"font: 12.0px Helvetica"><SPAN =
 class=3D"Apple-converted-space">=A0 =A0 </SPAN>this.y =3D y;</FONT></P> =
 <P style=3D"margin: 0.0px 0.0px 0.0px 10.0px"><FONT face=3D"Helvetica" =
 size=3D"3" style=3D"font: 12.0px Helvetica"><SPAN =
 class=3D"Apple-converted-space">=A0 </SPAN>}</FONT></P> <P =
 style=3D"margin: 0.0px 0.0px 0.0px 10.0px"><FONT face=3D"Helvetica" =
 size=3D"3" style=3D"font: 12.0px Helvetica">}</FONT></P> <P =
 style=3D"margin: 0.0px 0.0px 0.0px 10.0px; font: 12.0px Helvetica; =
 min-height: 14.0px"><BR></P> <P style=3D"margin: 0.0px 0.0px 0.0px =
 10.0px"><FONT face=3D"Helvetica" size=3D"3" style=3D"font: 12.0px =
 Helvetica">class PointExamples{</FONT></P> <P style=3D"margin: 0.0px =
 0.0px 0.0px 10.0px"><FONT face=3D"Helvetica" size=3D"3" style=3D"font: =
 12.0px Helvetica">/*<SPAN class=3D"Apple-tab-span" =
 style=3D"white-space:pre">	</SPAN>boolean testPoint () {</FONT></P> =
 <P style=3D"margin: 0.0px 0.0px 0.0px 10.0px"><FONT face=3D"Helvetica" =
 size=3D"3" style=3D"font: 12.0px Helvetica"><SPAN =
 class=3D"Apple-converted-space">=A0 =A0 </SPAN>return</FONT></P> <P =
 style=3D"margin: 0.0px 0.0px 0.0px 10.0px"><FONT face=3D"Helvetica" =
 size=3D"3" style=3D"font: 12.0px Helvetica"><SPAN =
 class=3D"Apple-converted-space">=A0 =A0 =A0 </SPAN>check new =
 Point(3,4)</FONT></P> <P style=3D"margin: 0.0px 0.0px 0.0px =
 10.0px"><FONT face=3D"Helvetica" size=3D"3" style=3D"font: 12.0px =
 Helvetica"><SPAN class=3D"Apple-converted-space">=A0 =A0 =A0 =
 </SPAN>expect new Point(3,4);</FONT></P> <P style=3D"margin: 0.0px 0.0px =
 0.0px 10.0px"><FONT face=3D"Helvetica" size=3D"3" style=3D"font: 12.0px =
 Helvetica"><SPAN class=3D"Apple-converted-space">=A0 =
 </SPAN>}*/</FONT></P> <P style=3D"margin: 0.0px 0.0px 0.0px 10.0px; =
 font: 12.0px Helvetica; min-height: 14.0px"><BR></P> <P style=3D"margin: =
 0.0px 0.0px 0.0px 10.0px"><FONT face=3D"Helvetica" size=3D"3" =
 style=3D"font: 12.0px Helvetica"><SPAN class=3D"Apple-converted-space">=A0=
  </SPAN>boolean testDist() {</FONT></P> <P style=3D"margin: 0.0px 0.0px =
 0.0px 10.0px"><FONT face=3D"Helvetica" size=3D"3" style=3D"font: 12.0px =
 Helvetica"><SPAN class=3D"Apple-converted-space">=A0 =A0 </SPAN>return =
 check new Point(0,0).distFrom(new Point(3,4)) expect 5 within =
 2.0;</FONT></P> <P style=3D"margin: 0.0px 0.0px 0.0px 10.0px"><FONT =
 face=3D"Helvetica" size=3D"3" style=3D"font: 12.0px =
 Helvetica">}</FONT></P> <P style=3D"margin: 0.0px 0.0px 0.0px 10.0px; =
 font: 12.0px Helvetica; min-height: 14.0px"><BR></P> <P style=3D"margin: =
 0.0px 0.0px 0.0px 10.0px"><FONT face=3D"Helvetica" size=3D"3" =
 style=3D"font: 12.0px Helvetica"><SPAN class=3D"Apple-converted-space">=A0=
  </SPAN>PointExamples(){}</FONT></P> <P style=3D"margin: 0.0px 0.0px =
 0.0px 10.0px"><FONT face=3D"Helvetica" size=3D"3" style=3D"font: 12.0px =
 Helvetica">}</FONT></P> =
 </BLOCKQUOTE></BLOCKQUOTE></DIV><BR><DIV>Whoops!=A0 That 5 should be a =
 4.=A0 As in:</DIV><DIV><BR class=3D"khtml-block-placeholder"></DIV><DIV>//=
  represent point</DIV><DIV>class Point {</DIV><DIV>=A0 double =
 x;</DIV><DIV>=A0 double y;</DIV><DIV><BR =
 class=3D"khtml-block-placeholder"></DIV><DIV>=A0 double distFrom(Point =
 other){</DIV><DIV>=A0 =A0 //return 5.0;</DIV><DIV>=A0 =A0 return =
 Math.sqrt(Math.pow(other.x - this.x,2)</DIV><DIV>=A0 =A0 =A0 =A0 =A0 =A0 =
 =A0 =A0 =A0 =A0=A0 + Math.pow(other.y - this.y,2));</DIV><DIV>=A0 =
 }</DIV><DIV><BR class=3D"khtml-block-placeholder"></DIV><DIV>=A0 =
 Point(double x, double y) {</DIV><DIV>=A0 =A0 this.x =3D x;</DIV><DIV>=A0 =
 =A0 this.y =3D y;</DIV><DIV>=A0 }</DIV><DIV>}</DIV><DIV><BR =
 class=3D"khtml-block-placeholder"></DIV><DIV>class =
 PointExamples{</DIV><DIV>/*<SPAN class=3D"Apple-tab-span" =
 style=3D"white-space:pre">	</SPAN>boolean testPoint () =
 {</DIV><DIV>=A0 =A0 return</DIV><DIV>=A0 =A0 =A0 check new =
 Point(3,4)</DIV><DIV>=A0 =A0 =A0 expect new Point(3,4);</DIV><DIV>=A0 =
 }*/</DIV><DIV><BR class=3D"khtml-block-placeholder"></DIV><DIV>=A0 =
 boolean testDist() {</DIV><DIV>=A0 =A0 return check new =
 Point(0,0).distFrom(new Point(3,4)) expect 4 within =
 2.0;</DIV><DIV>}</DIV><DIV><BR =
 class=3D"khtml-block-placeholder"></DIV><DIV>=A0 =
 PointExamples(){}</DIV><DIV>}</DIV><DIV><BR =
 class=3D"khtml-block-placeholder"></DIV><DIV>Still a bug (I claim), but =
 I didn't make your life any easier.</DIV><DIV><BR =
 class=3D"khtml-block-placeholder"></DIV><DIV>Thanks for your =
 patience,</DIV><DIV><BR =
 class=3D"khtml-block-placeholder"></DIV><DIV>John</DIV><DIV><BR =
 class=3D"khtml-block-placeholder"></DIV></BODY></HTML>=
 
 --Apple-Mail-1--491372554--
From: Kathy Gray <kathyg@cs.utah.edu>
To: John Clements <clements@brinckerhoff.org>
Cc: bugs@plt-scheme.org
Subject: Re: [plt-bug] all/8446: ProfJ: strange test case behavior with int->double cast?
Date: Fri, 22 Dec 2006 15:02:24 +0000

 On Dec 22, 2006, at 1:33 PM, John Clements wrote:
 
 > Still a bug (I claim), but I didn't make your life any easier.
 >
 Ah, there's the bug. Thanks John. Now I can start fixing it.
 
 -Kathy

Responsible changed from "nobody" to "kathyg" by kathyg at Fri, 22 Dec 2006 10:12:21 -0500
Reason>>> .

State changed from "open" to "closed" by kathyg at Fri, 22 Dec 2006 10:12:21 -0500
Reason>>> Corrected behavior in svn. check ... within... was ignoring the range when 
comparing against an exact value 

