From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Mon Sep 10 13:29:56 2007
Received: from nf-out-0910.google.com (nf-out-0910.google.com [64.233.182.185])
	by champlain.ccs.neu.edu (8.13.8/8.13.7) with ESMTP id l8AHTtbp006190
	for <bugs@bugs.plt-scheme.org>; Mon, 10 Sep 2007 13:29:56 -0400
Message-Id: <200709101729.l8AHTmZk006185@champlain.ccs.neu.edu>
Date: Mon, 10 Sep 2007 13:29:48 -0400
From: matthias@ccs.neu.edu
To: bugs@plt-scheme.org
Subject: professorJ parser goes into infinite loop

>Number:         8918
>Category:       profj
>Synopsis:       professorJ parser goes into infinite loop
>Class:          sw-bug
>Responsible:    kathyg
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Mon Sep 10 13:30:01 -0400 2007
>Closed-Date:    Tue Apr 29 11:51:56 -0400 2008
>Last-Modified:  Tue Apr 29 11:51:56 -0400 2008
>Originator:     matthias
>Organization:
plt
>Submitter-Id:   unknown
>Release:        371.2-svn10sep2007
>Environment:
macosx "Darwin america.local 8.10.0 Darwin Kernel Version 8.10.0: Wed May 23 16:50:59 PDT 2007; root:xnu-792.21.3~1/RELEASE_PPC Power Macintosh powerpc" (ppc-macosx/3m) (get-display-depth) = 32
Docs Installed:
(("/Users/matthias/plt/doc" "r5rs" "mzscheme" "mred" "help" "tour" "drscheme" "srfi" "mzlib" "misclib" "mrlib" "framework" "foreign" "mzc" "tools" "insidemz" "web-server" "swindle" "plot" "gui" "guide" "quick" "reference" "release-notes" "scribble" "web-server-guide" "web-server-reference" "tex2page" "beginning" "beginning-abbr" "intermediate" "intermediate-lambda" "advanced" "teachpack" "teachpack-htdc" "profj-beginner" "profj-intermediate" "profj-intermediate-access" "profj-advanced") ("/Users/matthias/plt/collects/doc" "help" "acl2" "teachpack"))
Human Language: english
(current-memory-use) 145056964

Collections:
(("/Users/matthias/Unison/collects/" ".DS_Store" "date" "finance" "testing" "utils" "web") ("/Users/matthias/Library/PLT Scheme/371.2/collects" non-existent-path) ("/Users/matthias/plt/collects" ".DS_Store" ".svn" "afm" "algol60" "big" "browser" "combinator-parser" "compiler" "config" "defaults" "doc" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "finish-install" "framework" "frtime" "games" "graphics" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu" "honu-module" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrflow" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "mztake" "net" "openssl" "parser-tools" "plai" "planet" "plot" "preprocessor" "profj" "profjBoxes" "profjWizard" "r5rs" "r6rs" "readline" "reduction-semantics" "repos-time-stamp" "scribble" "scribblings" "setup" "sgl" "sirmail" "skipper" "slatex" "slibinit" "slideshow" "srfi" "srpersist" "ssax" "stepper" "string-constants" "swin!
 dle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-suite" "tests" "tex2page" "texpict" "trace" "version" "waterworld" "web-server" "wxme" "xelda" "xml"))
Computer Language: (("Experimental Languages" "ProfessorJ" "Intermediate") ((field) (#f) (#t) (#f) (#t) (#t)))
>Description:
subjects says it all, smallest possible example (time permitting) is attached
>How-To-Repeat:
// -----------------------------------------------------------------------------
// Part 1:
class Station { 
  String name; 
  IStations toAlewife; 
  IStations toJFK; 

  Station(String name,IStations toAlewife,IStations toJFK) { 
    this.name = name; 
    this.toAlewife = toAlewife; 
    this.toJFK = toJFK; 
  }
} 

interface IStations { }

class Mt implements IStations {

  Mt() {}
}

class Cons implements IStations {
  String first;
  IStations rest;

  Cons(String first, IStations rest) {
    this.first = first;
    this.rest = rest;
  }
}

class StationExamples { 
  IStations mt = new Mt();

  IStations davisLR = new Cons("Alewife",this.mt);
  IStations porterLR = new Cons("Davis",this.davisLR); 
  IStations jfk = new Cons("Porter",this.porterLR); 
  
  IStations porterRL = new Cons("JFK",this.mt);
  IStations davisRL = new Cons("Porter",this.porterRL);
  IStations alewife = new Cons("Davis",this.davisRL);
  
  Station AlewifeS = new Station("Alewife",this.mt,this.alewife);
  Station Davis    = new Station("Davis",this.davisLR,this.davisRL);
  Station Porter   = new Station("Porter",this.porterLR,this.porterRL);
  Station JFKS     = new Station("JFK",this.jfk,this.mt);
}
  

// -----------------------------------------------------------------------------
// Part 2:
class DLStation {
  String name; 
  DLStation toAlewife = null; // neighbor in one direction 
  DLStation toJFK = null; // neighbor in different direction 

  DLStation(String name) { 
    this. name = name; 
  }

  // connect this station with its neighbors 
  void connect(DLStation toAlewife, DLStation toJFK) { 
    this. toAlewife = toAlewife; 
    this. toJFK = toJFK; 
  }
 
  // compute the direction to get to name, starting from this station 
  String findDirection(String destination) { 
    if (this.name.equals(destination))   // ------------- ERROR here: missing braces ----
      return "you are at ".concat(destination); // ------ runs for 30 seconds before I break
    else if (this.followAlewife(destination)) 
      return "take a train going to Alewife"; 
    else if (this.followJFK(destination)) 
      return "take a train going to JFK"; 
    else  
      return Util.error("cant find: ".concat(destination)); 
  }
  
  // is it possible to reach the station destination from this station
  // with an Alewife-bound train? 
  boolean followAlewife(String destination) { 
    return (this. name.equals(destination)) 
        || ((this.toAlewife == null) && this.toAlewife.followAlewife(destination));
  }

  // is it possible to reach the station destination from this station
  // with an JFK-bound train? 
  boolean followJFK(String destination) { 
    return (this. name.equals(destination))
        || ((this.toJFK != null) && this.toJFK.followJFK(destination));
  }
}
>Fix:
>Audit-Trail:
From: Kathy Gray <kathyg@cs.utah.edu>
To: matthias@ccs.neu.edu, bugs@plt-scheme.org
Cc: 
Subject: Re: [plt-bug] all/8918: professorJ parser goes into infinite loop
Date: Mon, 10 Sep 2007 20:20:38 +0100

 It terminates for me in less than 10... I svn up'ed this morning and  
 rebuilt everything. I've made no local changes. I've no idea why it's  
 looping for you and not me.
 -Kathy
 
 
 On Sep 10, 2007, at 6:30 PM, matthias@ccs.neu.edu wrote:
 
 > class Station {
 >   String name;
 >   IStations toAlewife;
 >   IStations toJFK;
 >
 >   Station(String name,IStations toAlewife,IStations toJFK) {
 >     this.name = name;
 >     this.toAlewife = toAlewife;
 >     this.toJFK = toJFK;
 >   }
 > }
 >
 > interface IStations { }
 >
 > class Mt implements IStations {
 >
 >   Mt() {}
 > }
 >
 > class Cons implements IStations {
 >   String first;
 >   IStations rest;
 >
 >   Cons(String first, IStations rest) {
 >     this.first = first;
 >     this.rest = rest;
 >   }
 > }
 >
 > class StationExamples {
 >   IStations mt = new Mt();
 >
 >   IStations davisLR = new Cons("Alewife",this.mt);
 >   IStations porterLR = new Cons("Davis",this.davisLR);
 >   IStations jfk = new Cons("Porter",this.porterLR);
 >
 >   IStations porterRL = new Cons("JFK",this.mt);
 >   IStations davisRL = new Cons("Porter",this.porterRL);
 >   IStations alewife = new Cons("Davis",this.davisRL);
 >
 >   Station AlewifeS = new Station("Alewife",this.mt,this.alewife);
 >   Station Davis    = new Station("Davis",this.davisLR,this.davisRL);
 >   Station Porter   = new Station 
 > ("Porter",this.porterLR,this.porterRL);
 >   Station JFKS     = new Station("JFK",this.jfk,this.mt);
 > }
 >
 >
 > //  
 > ---------------------------------------------------------------------- 
 > -------
 > // Part 2:
 > class DLStation {
 >   String name;
 >   DLStation toAlewife = null; // neighbor in one direction
 >   DLStation toJFK = null; // neighbor in different direction
 >
 >   DLStation(String name) {
 >     this. name = name;
 >   }
 >
 >   // connect this station with its neighbors
 >   void connect(DLStation toAlewife, DLStation toJFK) {
 >     this. toAlewife = toAlewife;
 >     this. toJFK = toJFK;
 >   }
 >
 >   // compute the direction to get to name, starting from this station
 >   String findDirection(String destination) {
 >     if (this.name.equals(destination))   // ------------- ERROR  
 > here: missing braces ----
 >       return "you are at ".concat(destination); // ------ runs for  
 > 30 seconds before I break
 >     else if (this.followAlewife(destination))
 >       return "take a train going to Alewife";
 >     else if (this.followJFK(destination))
 >       return "take a train going to JFK";
 >     else
 >       return Util.error("cant find: ".concat(destination));
 >   }
 >
 >   // is it possible to reach the station destination from this station
 >   // with an Alewife-bound train?
 >   boolean followAlewife(String destination) {
 >     return (this. name.equals(destination))
 >         || ((this.toAlewife == null) && this.toAlewife.followAlewife 
 > (destination));
 >   }
 >
 >   // is it possible to reach the station destination from this station
 >   // with an JFK-bound train?
 >   boolean followJFK(String destination) {
 >     return (this. name.equals(destination))
 >         || ((this.toJFK != null) && this.toJFK.followJFK 
 > (destination));
 >   }
 > }
 
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Kathy Gray <kathyg@cs.utah.edu>
Cc: bugs@plt-scheme.org
Subject: Re: [plt-bug] all/8918: professorJ parser goes into infinite loop
Date: Mon, 10 Sep 2007 16:23:25 -0400

 On Sep 10, 2007, at 3:20 PM, Kathy Gray wrote:
 
 > It terminates for me in less than 10... I svn up'ed this morning  
 > and rebuilt everything. I've made no local changes. I've no idea  
 > why it's looping for you and not me.
 
 
 
 My svn update is from this morning, too. I am running on a G5 dual  
 core. Did you modify the file in any way? It does terminate in 10  
 secs if I take even one seemingly unrelated line away from this  
 thing. (Which suggests that it is a question of complexity not  
 termination per se.)
 
 Matthew: any idea on how to get this reconstructed?
 
 -- Matthias
 
 
 
 
 
 
 > -Kathy
 >
 >
 > On Sep 10, 2007, at 6:30 PM, matthias@ccs.neu.edu wrote:
 >
 >> class Station {
 >>   String name;
 >>   IStations toAlewife;
 >>   IStations toJFK;
 >>
 >>   Station(String name,IStations toAlewife,IStations toJFK) {
 >>     this.name = name;
 >>     this.toAlewife = toAlewife;
 >>     this.toJFK = toJFK;
 >>   }
 >> }
 >>
 >> interface IStations { }
 >>
 >> class Mt implements IStations {
 >>
 >>   Mt() {}
 >> }
 >>
 >> class Cons implements IStations {
 >>   String first;
 >>   IStations rest;
 >>
 >>   Cons(String first, IStations rest) {
 >>     this.first = first;
 >>     this.rest = rest;
 >>   }
 >> }
 >>
 >> class StationExamples {
 >>   IStations mt = new Mt();
 >>
 >>   IStations davisLR = new Cons("Alewife",this.mt);
 >>   IStations porterLR = new Cons("Davis",this.davisLR);
 >>   IStations jfk = new Cons("Porter",this.porterLR);
 >>
 >>   IStations porterRL = new Cons("JFK",this.mt);
 >>   IStations davisRL = new Cons("Porter",this.porterRL);
 >>   IStations alewife = new Cons("Davis",this.davisRL);
 >>
 >>   Station AlewifeS = new Station("Alewife",this.mt,this.alewife);
 >>   Station Davis    = new Station("Davis",this.davisLR,this.davisRL);
 >>   Station Porter   = new Station 
 >> ("Porter",this.porterLR,this.porterRL);
 >>   Station JFKS     = new Station("JFK",this.jfk,this.mt);
 >> }
 >>
 >>
 >> //  
 >> --------------------------------------------------------------------- 
 >> --------
 >> // Part 2:
 >> class DLStation {
 >>   String name;
 >>   DLStation toAlewife = null; // neighbor in one direction
 >>   DLStation toJFK = null; // neighbor in different direction
 >>
 >>   DLStation(String name) {
 >>     this. name = name;
 >>   }
 >>
 >>   // connect this station with its neighbors
 >>   void connect(DLStation toAlewife, DLStation toJFK) {
 >>     this. toAlewife = toAlewife;
 >>     this. toJFK = toJFK;
 >>   }
 >>
 >>   // compute the direction to get to name, starting from this station
 >>   String findDirection(String destination) {
 >>     if (this.name.equals(destination))   // ------------- ERROR  
 >> here: missing braces ----
 >>       return "you are at ".concat(destination); // ------ runs for  
 >> 30 seconds before I break
 >>     else if (this.followAlewife(destination))
 >>       return "take a train going to Alewife";
 >>     else if (this.followJFK(destination))
 >>       return "take a train going to JFK";
 >>     else
 >>       return Util.error("cant find: ".concat(destination));
 >>   }
 >>
 >>   // is it possible to reach the station destination from this  
 >> station
 >>   // with an Alewife-bound train?
 >>   boolean followAlewife(String destination) {
 >>     return (this. name.equals(destination))
 >>         || ((this.toAlewife == null) &&  
 >> this.toAlewife.followAlewife(destination));
 >>   }
 >>
 >>   // is it possible to reach the station destination from this  
 >> station
 >>   // with an JFK-bound train?
 >>   boolean followJFK(String destination) {
 >>     return (this. name.equals(destination))
 >>         || ((this.toJFK != null) && this.toJFK.followJFK 
 >> (destination));
 >>   }
 >> }
 >
 
From: Kathy Gray <kathyg@cs.utah.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: bugs@plt-scheme.org
Subject: Re: [plt-bug] all/8918: professorJ parser goes into infinite loop
Date: Mon, 10 Sep 2007 21:51:15 +0100

 I copied the whole program as it appeared. I'll push at it and see if  
 I can get the loop to appear. I've noticed complexity loops before.
 -Kathy
 
 
 On Sep 10, 2007, at 9:23 PM, Matthias Felleisen wrote:
 
 >
 > On Sep 10, 2007, at 3:20 PM, Kathy Gray wrote:
 >
 >> It terminates for me in less than 10... I svn up'ed this morning  
 >> and rebuilt everything. I've made no local changes. I've no idea  
 >> why it's looping for you and not me.
 >
 >
 >
 > My svn update is from this morning, too. I am running on a G5 dual  
 > core. Did you modify the file in any way? It does terminate in 10  
 > secs if I take even one seemingly unrelated line away from this  
 > thing. (Which suggests that it is a question of complexity not  
 > termination per se.)
 >
 > Matthew: any idea on how to get this reconstructed?
 >
 > -- Matthias
 >
 >
 >
 >
 >
 >
 >> -Kathy
 >>
 >>
 >> On Sep 10, 2007, at 6:30 PM, matthias@ccs.neu.edu wrote:
 >>
 >>> class Station {
 >>>   String name;
 >>>   IStations toAlewife;
 >>>   IStations toJFK;
 >>>
 >>>   Station(String name,IStations toAlewife,IStations toJFK) {
 >>>     this.name = name;
 >>>     this.toAlewife = toAlewife;
 >>>     this.toJFK = toJFK;
 >>>   }
 >>> }
 >>>
 >>> interface IStations { }
 >>>
 >>> class Mt implements IStations {
 >>>
 >>>   Mt() {}
 >>> }
 >>>
 >>> class Cons implements IStations {
 >>>   String first;
 >>>   IStations rest;
 >>>
 >>>   Cons(String first, IStations rest) {
 >>>     this.first = first;
 >>>     this.rest = rest;
 >>>   }
 >>> }
 >>>
 >>> class StationExamples {
 >>>   IStations mt = new Mt();
 >>>
 >>>   IStations davisLR = new Cons("Alewife",this.mt);
 >>>   IStations porterLR = new Cons("Davis",this.davisLR);
 >>>   IStations jfk = new Cons("Porter",this.porterLR);
 >>>
 >>>   IStations porterRL = new Cons("JFK",this.mt);
 >>>   IStations davisRL = new Cons("Porter",this.porterRL);
 >>>   IStations alewife = new Cons("Davis",this.davisRL);
 >>>
 >>>   Station AlewifeS = new Station("Alewife",this.mt,this.alewife);
 >>>   Station Davis    = new Station("Davis",this.davisLR,this.davisRL);
 >>>   Station Porter   = new Station 
 >>> ("Porter",this.porterLR,this.porterRL);
 >>>   Station JFKS     = new Station("JFK",this.jfk,this.mt);
 >>> }
 >>>
 >>>
 >>> //  
 >>> -------------------------------------------------------------------- 
 >>> ---------
 >>> // Part 2:
 >>> class DLStation {
 >>>   String name;
 >>>   DLStation toAlewife = null; // neighbor in one direction
 >>>   DLStation toJFK = null; // neighbor in different direction
 >>>
 >>>   DLStation(String name) {
 >>>     this. name = name;
 >>>   }
 >>>
 >>>   // connect this station with its neighbors
 >>>   void connect(DLStation toAlewife, DLStation toJFK) {
 >>>     this. toAlewife = toAlewife;
 >>>     this. toJFK = toJFK;
 >>>   }
 >>>
 >>>   // compute the direction to get to name, starting from this  
 >>> station
 >>>   String findDirection(String destination) {
 >>>     if (this.name.equals(destination))   // ------------- ERROR  
 >>> here: missing braces ----
 >>>       return "you are at ".concat(destination); // ------ runs  
 >>> for 30 seconds before I break
 >>>     else if (this.followAlewife(destination))
 >>>       return "take a train going to Alewife";
 >>>     else if (this.followJFK(destination))
 >>>       return "take a train going to JFK";
 >>>     else
 >>>       return Util.error("cant find: ".concat(destination));
 >>>   }
 >>>
 >>>   // is it possible to reach the station destination from this  
 >>> station
 >>>   // with an Alewife-bound train?
 >>>   boolean followAlewife(String destination) {
 >>>     return (this. name.equals(destination))
 >>>         || ((this.toAlewife == null) &&  
 >>> this.toAlewife.followAlewife(destination));
 >>>   }
 >>>
 >>>   // is it possible to reach the station destination from this  
 >>> station
 >>>   // with an JFK-bound train?
 >>>   boolean followJFK(String destination) {
 >>>     return (this. name.equals(destination))
 >>>         || ((this.toJFK != null) && this.toJFK.followJFK 
 >>> (destination));
 >>>   }
 >>> }
 >>
 


State changed from "open" to "closed" by kathyg at Tue, 29 Apr 2008 11:51:56 -0400
Reason>>> instant response (not even the 10s my e-mail trail spoke of)

