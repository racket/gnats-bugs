From apache@plt-scheme.org Thu Jun 15 14:00:26 2006
Received: from champlain.ccs.neu.edu (champlain.ccs.neu.edu [127.0.0.1])
	by champlain.ccs.neu.edu (8.12.10/8.12.10) with ESMTP id k5FI0GKf004252
	for <bugs@plt-scheme.org>; Thu, 15 Jun 2006 14:00:16 -0400
Message-Id: <200606151800.k5FI0Gr6004250@champlain.ccs.neu.edu>
Date: Thu, 15 Jun 2006 14:00:16 -0400
From: matthias@ccs.neu.edu
To: bugs@plt-scheme.org
Subject: ProfessorJ reports car: expects argument of type <pair>; given ()

>Number:         8117
>Category:       profj
>Synopsis:       ProfessorJ reports car: expects argument of type <pair>; given ()
>Class:          sw-bug
>Responsible:    kathyg
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Thu Jun 15 14:05:00 -0400 2006
>Last-Modified:  Thu Jun 22 16:39:50 -0400 2006
>Originator:     matthias
>Organization:
plt
>Submitter-Id:   unknown
>Release:        349.100
>Environment:
macosx "Darwin america.local 7.9.0 Darwin Kernel Version 7.9.0: Wed Mar 30 20:11:17 PST 2005; root:xnu/xnu-517.12.7.obj~1/RELEASE_PPC  Power Macintosh powerpc" (ppc-macosx) (get-display-depth) = 32
Docs Installed:
(("/Applications/PLT Scheme v349.100/doc" "r5rs" "mzscheme" "mred" "help" "tour" "drscheme" "srfi" "mzlib" "misclib" "mrlib" "framework" "foreign" "mzc" "tools" "insidemz" "web-server" "swindle" "plot" "release-notes" "t-y-scheme" "teachpack-htdc" "tex2page" "beginning" "beginning-abbr" "intermediate" "intermediate-lambda" "advanced" "teachpack" "profj-beginner" "profj-intermediate" "profj-advanced"))
Collections:
(("/Users/matthias/Library/PLT Scheme/349.100/collects" non-existent-path) ("/Applications/PLT Scheme v349.100/collects" "afm" "algol60" "browser" "compiler" "config" "defaults" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "framework" "frtime" "games" "graphics" "help" "hierlist" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher" "make" "mred" "mrlib" "mzlib" "mzscheme" "mztake" "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profj" "profjBoxes" "profjWizard" "r5rs" "setup" "sgl" "slatex" "slibinit" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-suite" "tex2page" "texpict" "trace" "version" "web-server" "xml"))
Human Language: english
Teachpack filenames: ()
Computer Language: (("Experimental Languages" "ProfessorJ" "Advanced") ((field) (#f) (#t) (#t) (#t)))
>Description:
Run the program below, see error report mentioned in summary: 

Welcome to DrScheme, version 349.100.
Language: ProfessorJ: Advanced.
car: expects argument of type <pair>; given ()
> 

I will try to make a smaller example this afternoon. 
>How-To-Repeat:
/*
+-------------------------+
| Account                 |
+-------------------------+
| String name             |
| int amount              |
+-------------------------+
| Account deposit(int d)  |
| Account withdraw(int d) |
| int balance()           |
| IAccounts consolidate(  |
|  IAccounts loa)         |
+-------------------------+
*/

// a bank account
class Account {
 private String name;
 private int amount;

 public Account(String name, int amount) {
  this.name = name;
  this.amount = amount;
 }

 // move the money from all the accounts in \scheme{loa} into \scheme{this} account
 public IAccounts consolidate(IAccounts loa) { 
  return loa.consolidate(this);
 }

 // how much money is in \scheme{this} account?
 public int balance() { 
  return amount; 
 }

 // withdraw \scheme{w} from \scheme{this} account 
 public Account withdraw(int w) { 
  return new Account(this.name,this.amount-w);
 }

 // deposit \scheme{d} into \scheme{this} account
 public Account deposit(int d) { 
  return new Account(this.name,this.amount+d); 
 }
}

/*
                      +----------------------------------+                         
                      | IAccounts                        |<-----------------------+
                      +----------------------------------+                        |
                      +----------------------------------+                        |
                      | IAccounts consolidate(Account x) |                        |
                      +----------------------------------+                        |
                                       |                                          |
                                      / \                                         |
                                      ---                                         |
                                       |                                          |
                   -----------------------------------------                      |
                   |                                       |                      |
  +----------------------------------+    +----------------------------------+    |
  | NoAccounts                       |    | ConsAccount                      |    |
  +----------------------------------+    +----------------------------------+    |
  +----------------------------------+    | Account first                    |    |
  | IAccounts consolidate(Account x) |    | IAccounts rest                   |----+
  +----------------------------------+    +----------------------------------+
                                          | IAccounts consolidate(Account x) |
                                          +----------------------------------+
*/

// a list of accounts 
interface IAccounts {
 // transfer the money from these accounts to \scheme{a}
 // this list of accounts doesn't contain \scheme{a};
 // the resulting list contains it at the end 
 IAccounts consolidate(Account a);
}

class NoAccounts implements IAccounts {

 NoAccounts() { }

 public IAccounts consolidate(Account x) {
  return new ConsAccount(x,this);   
 }
}

class ConsAccount implements IAccounts {
 Account first;
 IAccounts rest;

 ConsAccount(Account first, IAccounts rest) {
  this.first = first;
  this.rest = rest;
 }

 public IAccounts consolidate(Account a) {
  return
   new ConsAccount(
       this.first.withdraw(this.first.balance()),
       this.rest.consolidate(a.deposit(this.first.balance())));
 }
}



// -----------------------------------------------------------------------------
class Examples {
 Account a1 = new Account("Matthias",100);
 Account a2 = new Account("Matthew",200); 
 Account bb = new Account("PLT",0);

 IAccounts a = new ConsAccount(a1,new ConsAccount(a2,new NoAccounts()));

 boolean test1 = check bb.consolidate(a) 
		 expect 
		  new ConsAccount(a1.withdraw(100),
		   new ConsAccount(a2.withdraw(200),
		    new ConsAccount(bb.deposit(300),
		     new NoAccounts())));
}
>Fix:
>Audit-Trail:
From: Matthew Flatt <mflatt@cs.utah.edu>
To: kathyg@cs.utah.edu, bugs@plt-scheme.org
Cc: 
Subject: Re: all/8117: ProfessorJ reports car: expects argument of type <pair>; given ()
Date: Thu, 15 Jun 2006 18:35:12 -0600

 Is the solution to change the way `conversion-steps' in "types.ss"
 computes the parents of a class?:
 
               (from-class-parents (append
 				   (class-record-parents from-class)
 				   (class-record-ifaces from-class))))
 
 Matthew
 
From: Kathy Gray <kathyg@cs.utah.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: bugs@plt-scheme.org
Subject: Re: all/8117: ProfessorJ reports car: expects argument of type <pair>; given ()
Date: Thu, 15 Jun 2006 19:50:54 -0600

 Yes, that is exactly the spot with the error. The below is not quite  
 the right fix, however as it would cause the overloading resolver to  
 select the incorrect method in some circumstances. Correct fix coming  
 soon.
 -Kathy
 
 
 On Jun 15, 2006, at 6:35 PM, Matthew Flatt wrote:
 
 > Is the solution to change the way `conversion-steps' in "types.ss"
 > computes the parents of a class?:
 >
 >               (from-class-parents (append
 > 				   (class-record-parents from-class)
 > 				   (class-record-ifaces from-class))))
 >
 > Matthew
 
From: Kathy Gray <kathyg@cs.utah.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>,
        Matthias Felleisen <matthias@ccs.neu.edu>
Cc: bugs@plt-scheme.org
Subject: Re: all/8117: ProfessorJ reports car: expects argument of type <pair>; given ()
Date: Thu, 15 Jun 2006 20:33:46 -0600

 I've committed a correction to this bug into svn, but I'm going to  
 wait to close it until I've added a few more test cases.
 -Kathy
 
 
 On Jun 15, 2006, at 6:35 PM, Matthew Flatt wrote:
 
 > Is the solution to change the way `conversion-steps' in "types.ss"
 > computes the parents of a class?:
 >
 >               (from-class-parents (append
 > 				   (class-record-parents from-class)
 > 				   (class-record-ifaces from-class))))
 >
 > Matthew
 


State changed from "open" to "closed" by kathyg at Thu, 22 Jun 2006 16:39:50 -0400
Reason>>> Completed test suite; found and fixed additional bugs in overloading resolution.

