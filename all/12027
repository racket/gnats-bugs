From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Wed Jul  6 21:49:17 2011
Received: from mail-vx0-f172.google.com (mail-vx0-f172.google.com [209.85.220.172])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id p671nExD022897
	for <bugs@bugs.plt-scheme.org>; Wed, 6 Jul 2011 21:49:14 -0400
Message-Id: <201107070149.p671nAGi022891@champlain.ccs.neu.edu>
Date: Wed, 6 Jul 2011 21:49:10 -0400
From: sbloch@adelphi.edu
To: bugs@racket-lang.org
Subject: error messages triggered by check-with

>Number:         12027
>Category:       all
>Synopsis:       error messages triggered by check-with
>Class:          change-request
>Responsible:    matthias
>Severity:       non-critical
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Wed Jul 06 21:52:01 -0400 2011
>Closed-Date:    Wed Jul 06 23:09:31 -0400 2011
>Last-Modified:  Wed Jul 06 23:09:31 -0400 2011
>Originator:     Stephen Bloch
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.1.1.9--2011-07-06(8cd1e9f/g)
>Environment:
macosx "Darwin Winchester.local 10.7.0 Darwin Kernel Version 10.7.0: Sat Jan 29 15:17:16 PST 2011; root:xnu-1504.9.37~1/RELEASE_I386 i386" (i386-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 178644772

Collections:
("/Users/bloch/Library/Racket/5.1.1.9/collects"
 (non-existent-path))
("/Users/bloch/programming/teachpacks/racket/plt/collects"
 (".DS_Store" ".gitignore" "2htdp" "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "data" "datalog" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "meta" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "picturing-programs" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "redex" "repo-time-stamp" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "sirmail" "slatex" "slideshow" "srfi" "srpersist" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tests" "tex2page" "texpict" "trace" "typed" "typed!
 -scheme" "unstable" "version" "waterworld" "web-server" "wxme" "xml"))

Computer Language: (("Teaching Languages" "How to Design Programs" "Beginning Student") (#(#t constructor repeating-decimal #f #t none) #f ()))
>Description:
The whole purpose of the check-with clause of big-bang is to produce useful error messages, correctly attributed to a handler that has returned the wrong type.

In version 5.1.1, I get something like
(lambda (w) (pptock w)) callback: result of type <World (see check-with)> expected, your function produced #(struct:object:image% ...)

which is horrible.

In the latest git pull, I get something better:
check-with: ...rivate/world.rkt:310:33 returned #(struct:object:image% ...), which fails to pass check-with's number? test

This says correctly that the function returned an image and that it was supposed to be a number... but what's with this "...rivate/world.rkt:310:33" nonsense?

A USEFUL error message would be "Your tick handler returned an image, which failed check-with's number? test."  Since there are only a few handlers that could have triggered the problem, it ought to be easy to say in English which one it was.  Coming up with a user-friendly description of the actual type may be trickier, but it might be worth while checking for a few of the most likely types that beginning students use, so you can describe them in English.

I would take a hack at this myself, but I'm busy running a workshop this week :-)
>How-To-Repeat:
(require picturing-programs)

; circle-of-size : number -> image
(check-expect (circle-of-size 5) (circle 5 "solid" "blue"))
(define (circle-of-size r)
  (circle r "solid" "blue"))

; Student is confused, and has written a tick handler
; that tries to also do the draw handler's job.
; add1-and-draw : number -> image
(check-expect (add1-and-draw 5) (circle 6 "solid" "blue"))
(define (add1-and-draw r)
  (circle (add1 r) "solid" "blue"))

(big-bang 1
          (check-with number?)
          (on-draw circle-of-size 100 100)
          (on-tick add1-and-draw 1)
          )
>Fix:
>Audit-Trail:
Responsible changed from "nobody" to "matthias" by matthias@racket-lang.org at Wed, 06 Jul 2011 23:09:31 -0400
Reason>>> A commit by matthias@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/4698e94127
State changed from "open" to "closed" by matthias@racket-lang.org at Wed, 06 Jul 2011 23:09:31 -0400
Reason>>> A commit by matthias@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/4698e94127
