From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Sun Feb 11 10:01:14 2018
Received: from mail-ot0-f177.google.com (mail-ot0-f177.google.com [74.125.82.177])
	by winooski.ccs.neu.edu (8.14.7/8.14.7) with ESMTP id w1BF1Dik007913
	for <bugs@bugs.plt-scheme.org>; Sun, 11 Feb 2018 10:01:13 -0500
Message-Id: <201802111501.w1BF1AOq007900@winooski.ccs.neu.edu>
Date: Sun, 11 Feb 2018 10:01:10 -0500
From: jdhayes.linux@gmail.com
To: bugs@racket-lang.org
Subject: cond opration description wording in section 2.2.5

>Number:         15515
>Category:       all
>Synopsis:       cond opration description wording in section 2.2.5
>Class:          doc-bug
>Responsible:    nobody
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Sun Feb 11 10:04:01 -0500 2018
>Last-Modified:  Sun Feb 11 13:04:02 -0500 2018
>Originator:     John
>Organization:
plt
>Submitter-Id:   unknown
>Release:        6.10.1
>Environment:
Linux x86_64 / Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:58.0) Gecko/20100101 Firefox/58.0
>Description:
A cond form contains a sequence of clauses between square brackets. In each clause, the first ‹expr› is a test expression. ******If it produces true, then the clause’s remaining ‹expr›s are evaluated, and the last one in the clause provides the answer for the entire cond expression; the rest of the clauses are ignored.******** If the test ‹expr› produces #f, then the clause’s remaining ‹expr›s are ignored, and evaluation continues with the next clause. The last clause can use else as a synonym for a #t test expression.

Should't that operate like a case statement and break out of the condition evaluation after giving the result when the evaluation is true? The example in the documentation shows that when stepping through it and if you switch the conditions (equal? hello) (equal? goodbye)the stepper evaluates both with the call (reply-more "hello racket there is").
>How-To-Repeat:

>Fix:
>Audit-Trail:
From: "John Clements" <clements@brinckerhoff.org>
To: jdhayes.linux@gmail.com, bugs@racket-lang.org
Cc: 
Subject: Re: [racket-bug] all/15515: cond opration description wording in
 section 2.2.5
Date: 11 Feb 2018 13:00:56 -0500

 I want to clarify your comment. Specifically, it looks to me like you’re misreading this text. You’re absolutely right that after a test expression, the remainder of the *clauses* are ignored. However, a clause may contain more than one right-hand-side *expression*; all of the expressions in the clause that succeeded are evaluated. 
 
 For instance, consider the expression
 
 (cond [#f (display "dog") (display "horse") 5]
       [#t (display "frog") (display "insect") 34]
       [#t (display "cow") (display "orange") 97])
 
 Since the second clause’s ‘test’ expression is true, then all of the expressions on the right-hand side are evaluated, and both “frog” and “insect” are displayed. However, the remaining clause is ignored.
 
 Does this make sense to you, or am I misunderstanding your comment?
 
 Best,
 
 John Clements
 
 > On Feb 11, 2018, at 07:04, jdhayes.linux@gmail.com wrote:
 > 
 > A new problem report is waiting at
 >  http://bugs.racket-lang.org/query/?cmd=view&pr=15515
 > 
 > Reported by John for release: 6.10.1
 > 
 > *** Description:
 > A cond form contains a sequence of clauses between square brackets. In each clause, the first ‹expr› is a test expression. ******If it produces true, then the clause’s remaining ‹expr›s are evaluated, and the last one in the clause provides the answer for the entire cond expression; the rest of the clauses are ignored.******** If the test ‹expr› produces #f, then the clause’s remaining ‹expr›s are ignored, and evaluation continues with the next clause. The last clause can use else as a synonym for a #t test expression.
 > 
 > Should't that operate like a case statement and break out of the condition evaluation after giving the result when the evaluation is true? The example in the documentation shows that when stepping through it and if you switch the conditions (equal? hello) (equal? goodbye)the stepper evaluates both with the call (reply-more "hello racket there is").
 > 
 > *** How to repeat:
 > 
 > 
 > *** Environment:
 > Linux x86_64 / Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:58.0) Gecko/20100101 Firefox/58.0
 > 
 
 
 
 
