From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Fri Sep 17 08:23:35 2010
Received: from mail-gw0-f44.google.com (mail-gw0-f44.google.com [74.125.83.44])
	by champlain.ccs.neu.edu (8.14.3/8.14.3) with ESMTP id o8HCNWFb003419
	for <bugs@bugs.plt-scheme.org>; Fri, 17 Sep 2010 08:23:32 -0400
Message-Id: <201009171223.o8HCNRqM003410@champlain.ccs.neu.edu>
Date: Fri, 17 Sep 2010 08:23:27 -0400
From: ryanc@racket-lang.org
To: bugs@racket-lang.org
Subject: ->i reports wrong name in arity error

>Number:         11220
>Category:       all
>Synopsis:       ->i reports wrong name in arity error
>Class:          sw-bug
>Responsible:    robby
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Fri Sep 17 08:24:01 -0400 2010
>Closed-Date:    Fri Sep 17 12:30:09 -0400 2010
>Last-Modified:  Fri Sep 17 12:30:09 -0400 2010
>Originator:     Ryan Culpepper
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.0.1.5--2010-09-17(4bf8d3b/g)
>Environment:
unix "Linux artichoke 2.6.31-22-generic #63-Ubuntu SMP Wed Aug 18 22:54:26 UTC 2010 i686 GNU/Linux" (i386-linux/3m) (get-display-depth) = 24
Human Language: english
(current-memory-use) 116305496

Collections:
(("/home/ryan/.racket/5.0.1.5/collects" non-existent-path) ("/home/ryan/projects/racket/collects" "swindle" "raco" "planet" "help" "info-domain" "scheme" "repo-time-stamp" "games" "honu" "syntax" "graphics" "browser" "stepper" "mzlib" "texpict" "redex" "r6rs" "typed" "version" "meta" "macro-debugger" "mzscheme" "mred" "preprocessor" "syntax-color" "framework" "mrlib" "sirmail" "rnrs" "htdp" "tests" "lazy" "frtime" "combinator-parser" "scriblib" "srfi" "waterworld" "afm" "compiler" "2htdp" "net" "srpersist" "at-exp" "config" "data" "schemeunit" "dynext" "defaults" "web-server" "make" "icons" "ffi" "xml" "typed-scheme" "algol60" "tex2page" "reader" "readline" "trace" "deinprogramm" "launcher" "racklog" "scribblings" "hierlist" "embedded-gui" "guibuilder" "racket" "handin-client" ".gitignore" "slatex" "profile" "datalog" "lang" "mzcom" "plai" "html" "file" "test-box-recovery" "setup" "scribble" "string-constants" "plot" "test-engine" "drracket" "unstable" "teachpack" "s-exp" "m!
 ysterx" "eopl" "r5rs" "gui-debugger" "errortrace" "mz" "parser-tools" "wxme" "rackunit" "drscheme" "handin-server" "openssl" "sgl" "slideshow"))
Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t))
>Description:
Arity errors for a procedure wrapped by ->i report the wrong name. They seem to get the name of the contract, if it has one.
>How-To-Repeat:
> (define the-contract (->i ([x any/c] [y any/c]) any))
> (define/contract (f x y) the-contract (+ x y))
> (f 1)
procedure the-contract: expects 2 arguments, given 1: 1

That's the behavior in racket. In DrRacket, errortrace causes "procedure the-contract" to be replace with "#<procedure>".
>Fix:
>Audit-Trail:
From: Robby Findler <robby@eecs.northwestern.edu>
To: ryanc@racket-lang.org, bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11220: ->i reports wrong name in arity error
Date: Fri, 17 Sep 2010 07:28:13 -0500

 FWIW, this is not something specific to ->i.
 
 #lang racket
 (define the-contract (-> any/c any/c any))
 (define/contract (f x y) the-contract (+ x y))
 (f 1)
 
 produces
 
   procedure the-contract: expects 2 arguments, given 1: 1
 
 In general, the wrapper function is created by the contract combinator
 and thus gets its name at that point. So this will work, for example:
 
   #lang racket
   (define/contract (f x y) (-> any/c any/c any) (+ x y))
   (f 1)
 
 Robby
 
 On Fri, Sep 17, 2010 at 7:24 AM,  <ryanc@racket-lang.org> wrote:
 > A new problem report is waiting at
 > =C2=A0http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D11220
 >
 > Reported by Ryan Culpepper for release: 5.0.1.5--2010-09-17(4bf8d3b/g)
 >
 > *** Description:
 > Arity errors for a procedure wrapped by ->i report the wrong name. They s=
 eem to get the name of the contract, if it has one.
 >
 > *** How to repeat:
 >> (define the-contract (->i ([x any/c] [y any/c]) any))
 >> (define/contract (f x y) the-contract (+ x y))
 >> (f 1)
 > procedure the-contract: expects 2 arguments, given 1: 1
 >
 > That's the behavior in racket. In DrRacket, errortrace causes "procedure =
 the-contract" to be replace with "#<procedure>".
 >
 > *** Environment:
 > unix "Linux artichoke 2.6.31-22-generic #63-Ubuntu SMP Wed Aug 18 22:54:2=
 6 UTC 2010 i686 GNU/Linux" (i386-linux/3m) (get-display-depth) =3D 24
 > Human Language: english
 > (current-memory-use) 116305496
 >
 > Collections:
 > (("/home/ryan/.racket/5.0.1.5/collects" non-existent-path) ("/home/ryan/p=
 rojects/racket/collects" "swindle" "raco" "planet" "help" "info-domain" "sc=
 heme" "repo-time-stamp" "games" "honu" "syntax" "graphics" "browser" "stepp=
 er" "mzlib" "texpict" "redex" "r6rs" "typed" "version" "meta" "macro-debugg=
 er" "mzscheme" "mred" "preprocessor" "syntax-color" "framework" "mrlib" "si=
 rmail" "rnrs" "htdp" "tests" "lazy" "frtime" "combinator-parser" "scriblib"=
  "srfi" "waterworld" "afm" "compiler" "2htdp" "net" "srpersist" "at-exp" "c=
 onfig" "data" "schemeunit" "dynext" "defaults" "web-server" "make" "icons" =
 "ffi" "xml" "typed-scheme" "algol60" "tex2page" "reader" "readline" "trace"=
  "deinprogramm" "launcher" "racklog" "scribblings" "hierlist" "embedded-gui=
 " "guibuilder" "racket" "handin-client" ".gitignore" "slatex" "profile" "da=
 talog" "lang" "mzcom" "plai" "html" "file" "test-box-recovery" "setup" "scr=
 ibble" "string-constants" "plot" "test-engine" "drracket" "unstable" "teach=
 pack" "s-exp" "m!
 > =C2=A0ysterx" "eopl" "r5rs" "gui-debugger" "errortrace" "mz" "parser-tool=
 s" "wxme" "rackunit" "drscheme" "handin-server" "openssl" "sgl" "slideshow"=
 ))
 > Computer Language: (("Determine language from source") (#(#t print mixed-=
 fraction-e #f #t debug) (default) #() "#lang racket\n" #t))
 >
 >
From: Ryan Culpepper <ryanc@ccs.neu.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: ryanc@racket-lang.org, bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11220: ->i reports wrong name in arity error
Date: Fri, 17 Sep 2010 06:41:51 -0600

 Whoops, I missed that.
 
 Would it be difficult to preserve the name of wrapped procedures? That 
 error message is disturbing.
 
 Ryan
 
 
 Robby Findler wrote:
 > FWIW, this is not something specific to ->i.
 > 
 > #lang racket
 > (define the-contract (-> any/c any/c any))
 > (define/contract (f x y) the-contract (+ x y))
 > (f 1)
 > 
 > produces
 > 
 >   procedure the-contract: expects 2 arguments, given 1: 1
 > 
 > In general, the wrapper function is created by the contract combinator
 > and thus gets its name at that point. So this will work, for example:
 > 
 >   #lang racket
 >   (define/contract (f x y) (-> any/c any/c any) (+ x y))
 >   (f 1)
 > 
 > Robby
 > 
 > On Fri, Sep 17, 2010 at 7:24 AM,  <ryanc@racket-lang.org> wrote:
 >> A new problem report is waiting at
 >>  http://bugs.racket-lang.org/query/?cmd=view&pr=11220
 >>
 >> Reported by Ryan Culpepper for release: 5.0.1.5--2010-09-17(4bf8d3b/g)
 >>
 >> *** Description:
 >> Arity errors for a procedure wrapped by ->i report the wrong name. They seem to get the name of the contract, if it has one.
 >>
 >> *** How to repeat:
 >>> (define the-contract (->i ([x any/c] [y any/c]) any))
 >>> (define/contract (f x y) the-contract (+ x y))
 >>> (f 1)
 >> procedure the-contract: expects 2 arguments, given 1: 1
 >>
 >> That's the behavior in racket. In DrRacket, errortrace causes "procedure the-contract" to be replace with "#<procedure>".
 >>
 >> *** Environment:
 >> unix "Linux artichoke 2.6.31-22-generic #63-Ubuntu SMP Wed Aug 18 22:54:26 UTC 2010 i686 GNU/Linux" (i386-linux/3m) (get-display-depth) = 24
 >> Human Language: english
 >> (current-memory-use) 116305496
 >>
 >> Collections:
 >> (("/home/ryan/.racket/5.0.1.5/collects" non-existent-path) ("/home/ryan/projects/racket/collects" "swindle" "raco" "planet" "help" "info-domain" "scheme" "repo-time-stamp" "games" "honu" "syntax" "graphics" "browser" "stepper" "mzlib" "texpict" "redex" "r6rs" "typed" "version" "meta" "macro-debugger" "mzscheme" "mred" "preprocessor" "syntax-color" "framework" "mrlib" "sirmail" "rnrs" "htdp" "tests" "lazy" "frtime" "combinator-parser" "scriblib" "srfi" "waterworld" "afm" "compiler" "2htdp" "net" "srpersist" "at-exp" "config" "data" "schemeunit" "dynext" "defaults" "web-server" "make" "icons" "ffi" "xml" "typed-scheme" "algol60" "tex2page" "reader" "readline" "trace" "deinprogramm" "launcher" "racklog" "scribblings" "hierlist" "embedded-gui" "guibuilder" "racket" "handin-client" ".gitignore" "slatex" "profile" "datalog" "lang" "mzcom" "plai" "html" "file" "test-box-recovery" "setup" "scribble" "string-constants" "plot" "test-engine" "drracket" "unstable" "teachpack" "s-exp" 
 "m!
 >>  ysterx" "eopl" "r5rs" "gui-debugger" "errortrace" "mz" "parser-tools" "wxme" "rackunit" "drscheme" "handin-server" "openssl" "sgl" "slideshow"))
 >> Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t))
 >>
 >>
 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Ryan Culpepper <ryanc@ccs.neu.edu>
Cc: ryanc@racket-lang.org, bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11220: ->i reports wrong name in arity error
Date: Fri, 17 Sep 2010 07:43:25 -0500

 Actually we have procedure-rename these days, don't we! I can use that.
 
 Robby
 
 On Fri, Sep 17, 2010 at 7:41 AM, Ryan Culpepper <ryanc@ccs.neu.edu> wrote:
 > Whoops, I missed that.
 >
 > Would it be difficult to preserve the name of wrapped procedures? That er=
 ror
 > message is disturbing.
 >
 > Ryan
 >
 >
 > Robby Findler wrote:
 >>
 >> FWIW, this is not something specific to ->i.
 >>
 >> #lang racket
 >> (define the-contract (-> any/c any/c any))
 >> (define/contract (f x y) the-contract (+ x y))
 >> (f 1)
 >>
 >> produces
 >>
 >> =C2=A0procedure the-contract: expects 2 arguments, given 1: 1
 >>
 >> In general, the wrapper function is created by the contract combinator
 >> and thus gets its name at that point. So this will work, for example:
 >>
 >> =C2=A0#lang racket
 >> =C2=A0(define/contract (f x y) (-> any/c any/c any) (+ x y))
 >> =C2=A0(f 1)
 >>
 >> Robby
 >>
 >> On Fri, Sep 17, 2010 at 7:24 AM, =C2=A0<ryanc@racket-lang.org> wrote:
 >>>
 >>> A new problem report is waiting at
 >>> =C2=A0http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D11220
 >>>
 >>> Reported by Ryan Culpepper for release: 5.0.1.5--2010-09-17(4bf8d3b/g)
 >>>
 >>> *** Description:
 >>> Arity errors for a procedure wrapped by ->i report the wrong name. They
 >>> seem to get the name of the contract, if it has one.
 >>>
 >>> *** How to repeat:
 >>>>
 >>>> (define the-contract (->i ([x any/c] [y any/c]) any))
 >>>> (define/contract (f x y) the-contract (+ x y))
 >>>> (f 1)
 >>>
 >>> procedure the-contract: expects 2 arguments, given 1: 1
 >>>
 >>> That's the behavior in racket. In DrRacket, errortrace causes "procedur=
 e
 >>> the-contract" to be replace with "#<procedure>".
 >>>
 >>> *** Environment:
 >>> unix "Linux artichoke 2.6.31-22-generic #63-Ubuntu SMP Wed Aug 18
 >>> 22:54:26 UTC 2010 i686 GNU/Linux" (i386-linux/3m) (get-display-depth) =
 =3D 24
 >>> Human Language: english
 >>> (current-memory-use) 116305496
 >>>
 >>> Collections:
 >>> (("/home/ryan/.racket/5.0.1.5/collects" non-existent-path)
 >>> ("/home/ryan/projects/racket/collects" "swindle" "raco" "planet" "help"
 >>> "info-domain" "scheme" "repo-time-stamp" "games" "honu" "syntax" "graph=
 ics"
 >>> "browser" "stepper" "mzlib" "texpict" "redex" "r6rs" "typed" "version"
 >>> "meta" "macro-debugger" "mzscheme" "mred" "preprocessor" "syntax-color"
 >>> "framework" "mrlib" "sirmail" "rnrs" "htdp" "tests" "lazy" "frtime"
 >>> "combinator-parser" "scriblib" "srfi" "waterworld" "afm" "compiler" "2h=
 tdp"
 >>> "net" "srpersist" "at-exp" "config" "data" "schemeunit" "dynext" "defau=
 lts"
 >>> "web-server" "make" "icons" "ffi" "xml" "typed-scheme" "algol60" "tex2p=
 age"
 >>> "reader" "readline" "trace" "deinprogramm" "launcher" "racklog"
 >>> "scribblings" "hierlist" "embedded-gui" "guibuilder" "racket"
 >>> "handin-client" ".gitignore" "slatex" "profile" "datalog" "lang" "mzcom=
 "
 >>> "plai" "html" "file" "test-box-recovery" "setup" "scribble"
 >>> "string-constants" "plot" "test-engine" "drracket" "unstable" "teachpac=
 k"
 >>> "s-exp"
 >
 > "m!
 >>>
 >>> =C2=A0ysterx" "eopl" "r5rs" "gui-debugger" "errortrace" "mz" "parser-to=
 ols"
 >>> "wxme" "rackunit" "drscheme" "handin-server" "openssl" "sgl" "slideshow=
 "))
 >>> Computer Language: (("Determine language from source") (#(#t print
 >>> mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t))
 >>>
 >>>
 >
 >
From: Eli Barzilay <eli@barzilay.org>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: Ryan Culpepper <ryanc@ccs.neu.edu>, ryanc@racket-lang.org,
        bugs@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11220: ->i reports wrong name in arity error
Date: Fri, 17 Sep 2010 11:04:41 -0400

 On Sep 17, Robby Findler wrote:
 > Actually we have procedure-rename these days, don't we! I can use
 > that.
 
 (It also adds an overhead to the call.)
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!
From: Robby Findler <robby@eecs.northwestern.edu>
To: Eli Barzilay <eli@barzilay.org>
Cc: Ryan Culpepper <ryanc@ccs.neu.edu>, ryanc@racket-lang.org,
        bugs@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11220: ->i reports wrong name in arity error
Date: Fri, 17 Sep 2010 10:08:30 -0500

 On Fri, Sep 17, 2010 at 10:08 AM, Robby Findler
 <robby@eecs.northwestern.edu> wrote:
 > On Fri, Sep 17, 2010 at 10:04 AM, Eli Barzilay <eli@barzilay.org> wrote:
 >> On Sep 17, Robby Findler wrote:
 >>> Actually we have procedure-rename these days, don't we! I can use
 >>> that.
 >>
 >> (It also adds an overhead to the call.)
 >
 > In my (uncommitted, unpushed) version of the contract library where
 > I'm playing with this, I only rename when the name is different. So if
 > you were to write, say,
 >
 > =C2=A0(provide/contract [f (-> integer? integer?)])
 >
 > instead of
 >
 > =C2=A0(define the-ctc (-> integer? integer?))
 > =C2=A0(provide/contract [f the-ctc])
 >
 > you would not get a renaming.
 
 To be precise, in that case, you do not get any calls to procedure-rename.
 
 > (There is an extra test done to see if
 > the renaming is going to happen; that seems minor tho.)
 >
 > Robby
 >
From: Robby Findler <robby@eecs.northwestern.edu>
To: Eli Barzilay <eli@barzilay.org>
Cc: Ryan Culpepper <ryanc@ccs.neu.edu>, ryanc@racket-lang.org,
        bugs@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11220: ->i reports wrong name in arity error
Date: Fri, 17 Sep 2010 10:08:03 -0500

 On Fri, Sep 17, 2010 at 10:04 AM, Eli Barzilay <eli@barzilay.org> wrote:
 > On Sep 17, Robby Findler wrote:
 >> Actually we have procedure-rename these days, don't we! I can use
 >> that.
 >
 > (It also adds an overhead to the call.)
 
 In my (uncommitted, unpushed) version of the contract library where
 I'm playing with this, I only rename when the name is different. So if
 you were to write, say,
 
   (provide/contract [f (-> integer? integer?)])
 
 instead of
 
   (define the-ctc (-> integer? integer?))
   (provide/contract [f the-ctc])
 
 you would not get a renaming. (There is an extra test done to see if
 the renaming is going to happen; that seems minor tho.)
 
 Robby
From: Robby Findler <robby@eecs.northwestern.edu>
To: Eli Barzilay <eli@barzilay.org>
Cc: Ryan Culpepper <ryanc@ccs.neu.edu>, ryanc@racket-lang.org,
        bugs@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11220: ->i reports wrong name in arity error
Date: Fri, 17 Sep 2010 11:16:46 -0500

 In case anyone is curious, below is the list of renamings that were
 being missed before (covering only starting up drracket and building
 the docs, tho).
 
 Robby
 
 renaming #f to call/input-url
 renaming #f to drracket:get/extend:extend-definitions-canvas
 renaming #f to drracket:get/extend:extend-definitions-text
 renaming #f to drracket:get/extend:extend-interactions-canvas
 renaming #f to drracket:get/extend:extend-interactions-text
 renaming #f to drracket:get/extend:extend-tab
 renaming #f to drracket:get/extend:extend-unit-frame
 renaming #f to drracket:unit:open-drscheme-window
 renaming #f to drscheme:get/extend:extend-definitions-canvas
 renaming #f to drscheme:get/extend:extend-definitions-text
 renaming #f to drscheme:get/extend:extend-interactions-canvas
 renaming #f to drscheme:get/extend:extend-interactions-text
 renaming #f to drscheme:get/extend:extend-tab
 renaming #f to drscheme:get/extend:extend-unit-frame
 renaming #f to drscheme:unit:open-drscheme-window
 renaming #f to gui-utils:cursor-delay
 renaming #f to make-async-channel
 renaming #f to read-bytes-line-evt
 renaming #f to read-line-evt
 renaming #f to static
 renaming #f to test:run-interval
 renaming checker to check-expression
 renaming checker to check-identifier
 renaming checker to check-stx-boolean
 renaming checker to check-stx-string
 renaming dict-count-contract to dict-count
 renaming dict-iterate-first-contract to dict-iterate-first
 renaming dict-iterate-key-contract to dict-iterate-key
 renaming dict-iterate-next-contract to dict-iterate-next
 renaming dict-iterate-value-contract to dict-iterate-value
 renaming dict-ref-contract to dict-ref
 renaming dict-remove!-contract to dict-remove!
 renaming dict-remove-contract to dict-remove
 renaming dict-set!-contract to dict-set!
 renaming dict-set-contract to dict-set
 renaming editor:get-standard-style-list3 to editor:get-standard-style-list
 renaming elem-like-contract to bold
 renaming elem-like-contract to emph
 renaming elem-like-contract to italic
 renaming elem-like-contract to larger
 renaming elem-like-contract to smaller
 renaming elem-like-contract to subscript
 renaming elem-like-contract to superscript
 renaming elem-like-contract to tt
 renaming extreme-contract to dict-iterate-max
 renaming extreme-contract to dict-iterate-min
 renaming flat-or/c to SideClause/c
 renaming flat-or/c to html-content/c
 renaming flat-or/c to location/c
 renaming flat-or/c to misc/c
 renaming generated-contract158 to insert-large-letters156
 renaming generated-contract35 to pick-new-language32
 renaming generated-contract38 to looks-like-module?36
 renaming get-face-list8 to get-face-list
 renaming gui-utils:ok/cancel-buttons5 to gui-utils:ok/cancel-buttons
 renaming is-foldr to foldr
 renaming make-flat-contract to spec/c
 renaming make-flat-contract to xexpr/c
 renaming make-module-identifier-mapping to make-free-identifier-mapping
 renaming merge to union
 renaming mk-char-set to char-set
 renaming module-identifier-mapping-for-each to free-identifier-mapping-for-each
 renaming module-identifier-mapping-get to free-identifier-mapping-get
 renaming module-identifier-mapping-put! to free-identifier-mapping-put!
 renaming open-input-text-editor16 to open-input-text-editor
 renaming predicate-contract to DeclEntry/c
 renaming predicate-contract to DeclEnv/c
 renaming preferences:get-drracket:large-letters-font6 to
 preferences:get-drracket:large-letters-font
 renaming preferences:set-default1 to preferences:set-default
 renaming preferences:set2 to preferences:set
 renaming search-contract to dict-iterate-greatest/<=?
 renaming search-contract to dict-iterate-greatest/<?
 renaming search-contract to dict-iterate-least/>=?
 renaming search-contract to dict-iterate-least/>?
 renaming styling-f/c to DFlag
 renaming styling-f/c to DPFlag
 renaming styling-f/c to Flag
 renaming styling-f/c to PFlag
 renaming styling-f/c to defterm
 renaming styling-f/c to envvar
 renaming styling-f/c to exec
 renaming styling-f/c to filepath
 renaming styling-f/c to idefterm
 renaming styling-f/c to indexed-envvar
 renaming styling-f/c to indexed-file
 renaming styling-f/c to math
 renaming styling-f/c to onscreen
 renaming styling-f/c to pidefterm
 renaming styling-f/c to procedure
 renaming styling-f/c to racketerror
 renaming styling-f/c to racketfont
 renaming styling-f/c to racketidfont
 renaming styling-f/c to racketkeywordfont
 renaming styling-f/c to racketmetafont
 renaming styling-f/c to racketmodfont
 renaming styling-f/c to racketoutput
 renaming styling-f/c to racketparenfont
 renaming styling-f/c to racketresultfont
 renaming styling-f/c to racketvalfont
 renaming styling-f/c to racketvarfont
 renaming styling-f/c to schemeerror
 renaming styling-f/c to schemefont
 renaming styling-f/c to schemeidfont
 renaming styling-f/c to schemekeywordfont
 renaming styling-f/c to schememetafont
 renaming styling-f/c to schemeparenfont
 renaming styling-f/c to schemeresultfont
 renaming styling-f/c to schemevalfont
 renaming styling-f/c to schemevarfont
 renaming syntax? to ct-phase/c
Responsible changed from "nobody" to "robby" by robby@racket-lang.org at Fri, 17 Sep 2010 12:30:09 -0400
Reason>>> A commit by robby@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/c6fc7137ee
State changed from "open" to "closed" by robby@racket-lang.org at Fri, 17 Sep 2010 12:30:09 -0400
Reason>>> A commit by robby@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/c6fc7137ee
