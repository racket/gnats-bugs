From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Thu Jan 10 14:30:50 2019
Received: from mail-oi1-f170.google.com (mail-oi1-f170.google.com [209.85.167.170])
	by winooski.ccs.neu.edu (8.14.7/8.14.7) with ESMTP id x0AJUehe014894
	for <bugs@bugs.plt-scheme.org>; Thu, 10 Jan 2019 14:30:40 -0500
Message-Id: <201901101930.x0AJUb1S014887@winooski.ccs.neu.edu>
Date: Thu, 10 Jan 2019 14:30:37 -0500
From: wrokon@gmail.com
To: bugs@racket-lang.org
Subject: DrRacket Internal Error while working on a "How to Code: Simple Data" problem

>Number:         15573
>Category:       all
>Synopsis:       DrRacket Internal Error while working on a "How to Code: Simple Data" problem
>Class:          sw-bug
>Responsible:    nobody
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Thu Jan 10 14:32:01 -0500 2019
>Closed-Date:    Fri Jan 11 10:38:01 -0500 2019
>Last-Modified:  Fri Jan 11 10:38:01 -0500 2019
>Originator:     Christopher Chang
>Organization:
plt
>Submitter-Id:   unknown
>Release:        7.1
>Environment:
macosx "Darwin totoro.local 18.2.0 Darwin Kernel Version 18.2.0: Mon Nov 12 20:24:46 PST 2018; root:xnu-4903.231.4~2/RELEASE_X86_64 x86_64" (x86_64-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 507335340
raco pkg (show):
Installation-wide:
 Package            Checksum             Source
 main-distribution  107e1b59943f693b...  catalog...tribution
 racket-lib         21fbc2a1a2972f1f...  catalog racket-lib
 [198 auto-installed packages not shown]
User-specific for installation "7.1":
 [none]



Collections:
("/Users/cbc/Library/Racket/7.1/collects"
 (non-existent-path))
("/Applications/Racket v7.1/collects"
 ("acks" "compiler" "data" "db" "dynext" "ffi" "file" "info" "info-domain" "json" "launcher" "net" "openssl" "pkg" "planet" "racket" "raco" "reader" "realm" "s-exp" "setup" "syntax" "version" "xml"))

Recent Internal Errors: Saved 1 internal error:

erase in dc<%>: drawing context is not ok: (wrapper-object:bitmap-dc% ...)
  context...:
   ...higher-order.rkt:357:33
   /Applications/Racket v7.1/share/pkgs/gui-lib/mrlib/image-core.rkt:424:4: compute-cached-bitmap method in image%
   /Applications/Racket v7.1/share/pkgs/gui-lib/mrlib/image-core.rkt:89:0: compute-image-cache
   /Applications/Racket v7.1/share/pkgs/gui-lib/framework/private/text.rkt:3296:0: send-snip-to-port
   /Applications/Racket v7.1/collects/racket/contract/private/arrow-val-first.rkt:388:18
   /Applications/Racket v7.1/share/pkgs/drracket/drracket/private/language.rkt:441:6: drracket-pretty-print-print-hook
   /Applications/Racket v7.1/collects/racket/pretty.rkt:755:2: wr*
   /Applications/Racket v7.1/collects/racket/pretty.rkt:420:0: generic-write17
   /Applications/Racket v7.1/collects/racket/pretty.rkt:212:14: unpack34
   /Applications/Racket v7.1/share/pkgs/htdp-lib/test-engine/racket-gui.rkt:10:4
   /Applications/Racket v7.1/share/pkgs/htdp-lib/test-engine/test-display.scm:263:14: print-formatted
   /Applications/Racket v7.1/share/pkgs/htdp-lib/test-engine/print.rkt:12:4: loop
   /Applications/Racket v7.1/share/pkgs/htdp-lib/test-engine/test-display.scm:254:4: display-reason
   /Applications/Racket v7.1/share/pkgs/htdp-lib/test-engine/test-display.scm:243:4: make-link
   /Applications/Racket v7.1/share/pkgs/htdp-lib/test-engine/test-display.scm:215:6: for-loop
   /Applications/Racket v7.1/share/pkgs/htdp-lib/test-engine/test-display.scm:212:4: display-check-failures method in test-display%
   ...

Computer Language: (("Teaching Languages" "How to Design Programs" "Beginning Student") (#(#t constructor repeating-decimal #f #t none) #f () #f))
>Description:
I don't know if this is an actual bug, or poor error reporting, but when I run the program below I get a window called "DrRacket Internal Error" popping up with the following contents:

erase in dc<%>: drawing context is not ok: (wrapper-object:bitmap-dc% ...)
  context...:
   ...higher-order.rkt:357:33
   /Applications/Racket v7.1/share/pkgs/gui-lib/mrlib/image-core.rkt:424:4: compute-cached-bitmap method in image%
   /Applications/Racket v7.1/share/pkgs/gui-lib/mrlib/image-core.rkt:89:0: compute-image-cache
   /Applications/Racket v7.1/share/pkgs/gui-lib/framework/private/text.rkt:3296:0: send-snip-to-port
   /Applications/Racket v7.1/collects/racket/contract/private/arrow-val-first.rkt:388:18
   /Applications/Racket v7.1/share/pkgs/drracket/drracket/private/language.rkt:441:6: drracket-pretty-print-print-hook
   /Applications/Racket v7.1/collects/racket/pretty.rkt:755:2: wr*
   /Applications/Racket v7.1/collects/racket/pretty.rkt:420:0: generic-write17
   /Applications/Racket v7.1/collects/racket/pretty.rkt:212:14: unpack34
   /Applications/Racket v7.1/share/pkgs/htdp-lib/test-engine/racket-gui.rkt:10:4
   /Applications/Racket v7.1/share/pkgs/htdp-lib/test-engine/test-display.scm:263:14: print-formatted
   /Applications/Racket v7.1/share/pkgs/htdp-lib/test-engine/print.rkt:12:4: loop
   /Applications/Racket v7.1/share/pkgs/htdp-lib/test-engine/test-display.scm:254:4: display-reason
   /Applications/Racket v7.1/share/pkgs/htdp-lib/test-engine/test-display.scm:243:4: make-link
   /Applications/Racket v7.1/share/pkgs/htdp-lib/test-engine/test-display.scm:215:6: for-loop
   /Applications/Racket v7.1/share/pkgs/htdp-lib/test-engine/test-display.scm:212:4: display-check-failures method in test-display%
   ...
>How-To-Repeat:
(require 2htdp/image)

;; tuition-graph-starter.rkt  (just the problem statements)

; 
; PROBLEM:
; 
; Eva is trying to decide where to go to university. One important factor for her is 
; tuition costs. Eva is a visual thinker, and has taken Systematic Program Design, 
; so she decides to design a program that will help her visualize the costs at 
; different schools. She decides to start simply, knowing she can revise her design
; later.
; 
; The information she has so far is the names of some schools as well as their 
; international student tuition costs. She would like to be able to represent that
; information in bar charts like this one:
; 
; 
;         .
;         
; (A) Design data definitions to represent the information Eva has.
; (B) Design a function that consumes information about schools and their
;     tuition and produces a bar chart.
; (C) Design a function that consumes information about schools and produces
;     the school with the lowest international student tuition.
; 


(define-struct school (name cost))
;; School is (make-school String Number)
;; interp. a school named name and international student tuition that costs cost

(define SCHOOL-1 (make-school "MIT" 70000))
(define SCHOOL-2 (make-school "UCB" 40000))
(define SCHOOL-3 (make-school "Stanford" 65000))

#;
(define (fn-for-school s)
  (... (school-name s)       ;String
       (school-cost s)))     ;Number
;; Template rules usec:
;;  - compound: 2 fields

;; ListOfSchool is one of:
;;  - empty
;;  - (cons School ListOfSchool)
;; interp. a list of schools

(define LOS-1 empty)
(define LOS-2 (cons SCHOOL-1 empty))
(define LOS-3 (cons SCHOOL-1 (cons SCHOOL-2 empty)))

#;
(define (fn-for-los los)
  (cond [(empty? los) (...)]                    ;BASE CASE
        [else (... (first los)                  ;School
                   (fn-for-los (rest los)))]))  ;NATURAL RECURSION

;; Template rules used:
;;  - one of: 2 cases
;;  - atomic distinct: empty
;;  - compound: (cons School ListOfSchool)
;;  - self-reference: (rest los) is ListOfSchool

(define BAR-WIDTH 30) ;; width of one bar in pixels
(define BAR-COLOR "skyblue") ;; color of a bar
(define OUTLINE-COLOR "black") ;; color of the outline
(define TEXT-COLOR "black") ;; color of text
(define TEXT-SIZE 24) ;; font size in pixels of text

;; School Number -> Image
;; render an image representing a school using a vertical rectangle. the height
;; of the rectangle is scaled according to the given scale factor, which represents
;; the number of pixels per thousand dollars.
(check-expect (draw-school (make-school "UCB" 40000)
                           2)
              (overlay/align "middle" "bottom"
                  (rotate 90 (text "UCB" TEXT-SIZE TEXT-COLOR))
                  (overlay (rectangle BAR-WIDTH (round (* (/ 40000 1000) 2)) "solid" BAR-COLOR)
                           (rectangle (add1 BAR-WIDTH) (add1 (round (* (/ 40000 1000) 2)))  "outline" OUTLINE-COLOR))))
                   

; (define (draw-school s scale-factor) (rectangle 10 50 "solid" "skyblue")) ;stub

;; used template from School, sort of â€“ also had to add scale-factor
;; should probably refactor the computation of height to a separate function
(define (draw-school s scale-factor)
  (overlay/align "middle" "bottom"
                  (rotate 90 (text (school-name s) TEXT-SIZE TEXT-COLOR))
                  (overlay (rectangle BAR-WIDTH (round (* (/ (school-cost s) 1000) scale-factor)) "solid" BAR-COLOR)
                           (rectangle (add1 BAR-WIDTH) (add1 (round (* (/ (school-cost s) 1000) scale-factor)))  "outline" OUTLINE-COLOR))))     


(define EMPTY-HISTOGRAM (rectangle 0 0 "solid" "black")) ; an Image representing an empty histogram
(define MAX-BAR-HEIGHT 100) ; the maximum height in pixels of a single bar in the histogram. this is approximate

;; ListOfSchool -> Image
;; render a histogram of schools.
(check-expect (draw-histogram empty)
              EMPTY-HISTOGRAM)
(check-expect (draw-histogram (cons (make-school "UCB" 40000) empty))
              (draw-school (make-school "UCB" 40000) (/ 100 40)))
(check-expect (draw-histogram (cons (make-school "UCB" 40000)
                                    (cons (make-school "Harvard" 80000) empty)))
              (beside/align "bottom"
                            (draw-school (make-school "UCB" 40000) (/ 100 80))
                            (draw-school (make-school "Harvard" 80000) (/ 100 80))))


;(define (draw-histogram los) (rectangle 10 10 "solid" "blue")) ;stub

;; going to finish the rest of this "quickly"

(define (max-cost los)
  (if (empty? los)
      0
      (if (> (school-cost (first los)) (max-cost (rest los)))
          (school-cost (first los))
          (max-cost (rest los)))))

(define (draw-histogram-with-max-cost los max-cost)
  (if (empty? los)
      EMPTY-HISTOGRAM
      (beside/align "bottom"
                    (draw-school (first los) (/ MAX-BAR-HEIGHT (/ max-cost 1000)))
                    (draw-histogram-with-max-cost (rest los) (/ MAX-BAR-HEIGHT (/ max-cost 1000))))))

(define (draw-histogram los)
  (draw-histogram-with-max-cost los (max-cost los)))
>Fix:
>Audit-Trail:
State changed from "open" to "closed" by robby at Fri, 11 Jan 2019 10:38:01 -0500
Reason>>> 
Thanks! I've pushed a fix here:

https://github.com/racket/gui/commit/1094b6d346871dd6fca4f741460
531c8abe7e87c

