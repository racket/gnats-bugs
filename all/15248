From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Sun Feb 14 13:09:25 2016
Received: from mail-io0-f177.google.com (mail-io0-f177.google.com [209.85.223.177])
	by winooski.ccs.neu.edu (8.14.7/8.14.7) with ESMTP id u1EI9MHK014697
	for <bugs@bugs.plt-scheme.org>; Sun, 14 Feb 2016 13:09:22 -0500
Message-Id: <201602141809.u1EI9K5W014682@winooski.ccs.neu.edu>
Date: Sun, 14 Feb 2016 13:09:20 -0500
From: tonyg@ccs.neu.edu
To: bugs@racket-lang.org
Subject: JSON reading should treat BOM as whitespace between tokens

>Number:         15248
>Category:       all
>Synopsis:       JSON reading should treat BOM as whitespace between tokens
>Class:          sw-bug
>Responsible:    nobody
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Sun Feb 14 13:12:01 -0500 2016
>Last-Modified:  Sun Feb 14 17:16:01 -0500 2016
>Originator:     Tony Garnock-Jones
>Organization:
plt
>Submitter-Id:   unknown
>Release:        6.3.0.3--2015-11-15(e3d78e4/a)
>Environment:
unix "Linux hop 4.3.0-1-amd64 #1 SMP Debian 4.3.3-7 (2016-01-19) x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 491459348
raco pkg (show):
Installation-wide:
 Package            Checksum     Source
 main-distribution  742d21e9...  catalog main-distribution
 net-doc                         link /home/tonyg/src/racket-net/net-doc
 net-lib                         link /home/tonyg/src/racket-net/net-lib
 racket-lib         37b0854a...  catalog racket-lib
 [181 auto-installed packages not shown]
User-specific for installation "snapshot":
 Package        Checksum              Source
 ansi                                 link...c/racket-ansi
 bitsyntax                            link...ket-bitsyntax
 logbook                              link...acket-logbook
 marketplace                          link...c/marketplace
 minimart                             link.../src/minimart
 packet-socket                        link...packet-socket
 prospect                             link.../src/prospect
 prospect-gl                          link...c/prospect-gl
 rfc6455                              link...acket-rfc6455
 rmacs                                link...nyg/src/rmacs
 unstable-lib   6d2564bf...           catalog...stable-lib
 [7 auto-installed packages not shown]



Collections:
("/home/tonyg/.racket/snapshot/collects"
 (non-existent-path))
("/home/tonyg/src/racket/racket-6.3.0.3/collects"
 (".gitignore" "acks" "compiler" "data" "db" "dynext" "ffi" "file" "info" "info-domain" "json" "launcher" "net" "openssl" "pkg" "planet" "racket" "rackunit" "raco" "reader" "realm" "s-exp" "scheme" "setup" "srfi" "syntax" "unstable" "version" "xml"))

Recent Internal Errors: 
Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((test) (main)) #t))
>Description:
Given input "\uFEFF123" (Unicode BOM), the Racket JSON implementation should yield the number 123, effectively treating the BOM as whitespace when it occurs between tokens. The specifications say that implementations MAY treat BOM in this way, but are not required to, so this isn't quite a must-have, but I think it would be sensible to ignore BOMs.
>How-To-Repeat:
#lang racket
;; These test cases should, IMO, all pass.
(require json)
(require rackunit)
(check-equal? (string->jsexpr " \"123\"") "123")
(check-equal? (string->jsexpr " 123") 123)
(check-equal? (string->jsexpr "\uFEFF\"123\"") "123")
(check-equal? (string->jsexpr "\uFEFF123") 123)
>Fix:
>Audit-Trail:
From: Eli Barzilay <eli@barzilay.org>
To: Tony Garnock-Jones <tonyg@ccs.neu.edu>,
        "bugs@racket-lang.org" <bugs@racket-lang.org>
Cc: "nobody@racket-lang.org" <nobody@racket-lang.org>,
        "bug-notification@racket-lang.org" <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/15248: JSON reading should treat BOM as
 whitespace between tokens
Date: Sun, 14 Feb 2016 14:47:37 -0500

 On Sun, Feb 14, 2016 at 1:12 PM,  <tonyg@ccs.neu.edu> wrote:
 > Given input "\uFEFF123" (Unicode BOM), the Racket JSON implementation
 > should yield the number 123, effectively treating the BOM as
 > whitespace when it occurs between tokens. The specifications say that
 > implementations MAY treat BOM in this way, but are not required to, so
 > this isn't quite a must-have, but I think it would be sensible to
 > ignore BOMs.
 
 IMO, for least surprise, it should do whatever the Racket reader is
 doing -- so I would strongly prefer that it keeps doing what it's doing
 now.  IOW, I would *expect* these tests to fail IFF the equivalent tests
 for `read` fail.  See also https://github.com/racket/racket/issues/1114.
 (And as long as they do fail, you need to clear out the BOM somehow,
 though I don't see an easy way to do that.)
 
 -- 
                     ((x=>x(x))(x=>x(x)))                   Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!
From: Tony Garnock-Jones <tonyg@ccs.neu.edu>
To: Eli Barzilay <eli@barzilay.org>,
        "bugs@racket-lang.org" <bugs@racket-lang.org>
Cc: "nobody@racket-lang.org" <nobody@racket-lang.org>,
        "bug-notification@racket-lang.org" <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/15248: JSON reading should treat BOM as
 whitespace between tokens
Date: Sun, 14 Feb 2016 15:04:39 -0500

 On 02/14/2016 02:47 PM, Eli Barzilay wrote:
 > IMO, for least surprise, it should do whatever the Racket reader is
 > doing
 
 Why couple the reading of one language to the reading of another? This
 has no bearing on S-expression reading.
 
 Suggested patch:
 
 --- a/racket/collects/json/main.rkt
 +++ b/racket/collects/json/main.rkt
 @@ -111,7 +111,7 @@
      (define-values [l c p] (port-next-location i))
      (raise-read-error (format "~a: ~a" who (apply format fmt args))
                        (object-name i) l c p #f))
 -  (define (skip-whitespace) (regexp-match? #px#"^\\s*" i))
 +  (define (skip-whitespace) (regexp-match? #px#"^(\\s|\357\273\277)*"
 i)) ;; whitespace or BOM
    ;;
    ;; Reading a string *could* have been nearly trivial using the racket
    ;; reader, except that it won't handle a "\/"...
 
 
 Tony
From: Eli Barzilay <eli@barzilay.org>
To: Tony Garnock-Jones <tonyg@ccs.neu.edu>
Cc: "bugs@racket-lang.org" <bugs@racket-lang.org>,
        "nobody@racket-lang.org" <nobody@racket-lang.org>,
        "bug-notification@racket-lang.org" <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/15248: JSON reading should treat BOM as
 whitespace between tokens
Date: Sun, 14 Feb 2016 16:00:06 -0500

 On Sun, Feb 14, 2016 at 3:04 PM, Tony Garnock-Jones <tonyg@ccs.neu.edu> wrote:
 > On 02/14/2016 02:47 PM, Eli Barzilay wrote:
 >> IMO, for least surprise, it should do whatever the Racket reader is
 >> doing
 >
 > Why couple the reading of one language to the reading of another? This
 > has no bearing on S-expression reading.
 
 It is unrelated to any language, not sexprs and not json; it's the
 treatment of a meta-property of the text, related to its transport, and
 therefore something that should be resolved in a single place (different
 from this code) instead of piling local hacks in random places that deal
 with text over some possible-BOM-carrying wire.  To put this
 differently, I don't see any specific treatment of BOM in JSON that
 doesn't apply to Sexprs.  (Specifically, I don't see it mentioned in
 json.org, in RFC 4627 and 7159, and in ECMA-404; if there's some place
 that says that "implementations MAY treat BOM [as whitespace]", then
 this sounds again like a generic meta-statement, following from the
 standard unicode definition of the BOM as a ZWNBSP.)
 
 > Suggested patch:
 > [...]
 
 On top of the above issue with this being a bad solution, it's treating
 BOMs as whitespace everywhere; which I haven't seen any parser do.  As
 above, this might be desired in some situation, but then the same issue
 holds: it's a meta-property of the specific transport rather than
 changing how JSON is parsed.
 
 (Sidenote: compare also to JSON.parse().)
 
 -- 
                     ((x=>x(x))(x=>x(x)))                   Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!
From: Tony Garnock-Jones <tonyg@ccs.neu.edu>
To: Eli Barzilay <eli@barzilay.org>
Cc: "bugs@racket-lang.org" <bugs@racket-lang.org>,
        "nobody@racket-lang.org" <nobody@racket-lang.org>,
        "bug-notification@racket-lang.org" <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/15248: JSON reading should treat BOM as
 whitespace between tokens
Date: Sun, 14 Feb 2016 17:04:33 -0500

 On 02/14/2016 04:00 PM, Eli Barzilay wrote:
 > doesn't apply to Sexprs.  (Specifically, I don't see it mentioned in
 > json.org, in RFC 4627 and 7159, and in ECMA-404; if there's some place
 > that says that "implementations MAY treat BOM [as whitespace]", then
 > this sounds again like a generic meta-statement, following from the
 > standard unicode definition of the BOM as a ZWNBSP.)
 
 From 7159:
 
    Implementations MUST NOT add a byte order mark to the beginning of a
    JSON text.  In the interests of interoperability, implementations
    that parse JSON texts MAY ignore the presence of a byte order mark
    rather than treating it as an error.
 
 ;;--
 
 I agree that it would be nice if there were some facility in Racket for
 dealing with files or streams containing Unicode text, separate from the
 code for dealing with UTF and the code for parsing individual JSON values.
 
 However, I do not think there will be any harm done by making the JSON
 code ignore BOM and ZWNBSP, treating both as skippable whitespace, at
 least while no general Unicode text handling facility exists. On the
 contrary, ignoring BOM/ZWNBSP will allow Racket's JSON-reading code to
 be used in places where it fails to work right now.
 
 Choking on BOM is graceless. Racket should be graceful, where possible.
 
 Tony
 
From: Eli Barzilay <eli@barzilay.org>
To: Tony Garnock-Jones <tonyg@ccs.neu.edu>
Cc: "bugs@racket-lang.org" <bugs@racket-lang.org>,
        "nobody@racket-lang.org" <nobody@racket-lang.org>,
        "bug-notification@racket-lang.org" <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/15248: JSON reading should treat BOM as
 whitespace between tokens
Date: Sun, 14 Feb 2016 17:14:18 -0500

 On Sun, Feb 14, 2016 at 5:04 PM, Tony Garnock-Jones <tonyg@ccs.neu.edu> wrote:
 >
 > From 7159: [...]
 
 (OK, this is the non-mandatory thing then.)
 
 
 > [...]
 > Choking on BOM is graceless. Racket should be graceful, where
 > possible.
 
 (I'm still unconvinced since the same exact arguments hold for any kind
 of structure reading; and that issue is demonstrating that it does
 matter in these other contexts too.)
 
 -- 
                     ((x=>x(x))(x=>x(x)))                   Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!
