From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Wed May 29 11:47:11 2013
Received: from mail-oa0-f48.google.com (mail-oa0-f48.google.com [209.85.219.48])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id r4TFl74D011904
	for <bugs@bugs.plt-scheme.org>; Wed, 29 May 2013 11:47:08 -0400
Message-Id: <201305291547.r4TFl59U011898@champlain.ccs.neu.edu>
Date: Wed, 29 May 2013 11:47:05 -0400
From: matthias@ccs.neu.edu
To: bugs@racket-lang.org
Subject: planetcute does not work with *SL

>Number:         13797
>Category:       all
>Synopsis:       planetcute does not work with *SL
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Wed May 29 11:48:01 -0400 2013
>Closed-Date:    Sun Apr 13 22:21:15 -0400 2014
>Last-Modified:  Sun Apr 13 22:21:15 -0400 2014
>Originator:     matthias
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.3.4.10--2013-05-29(05524114/d)
>Environment:
macosx "Darwin antarctica.ccs.neu.edu 12.3.0 Darwin Kernel Version 12.3.0: Sun Jan  6 22:37:10 PST 2013; root:xnu-2050.22.13~1/RELEASE_X86_64 x86_64" (x86_64-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 312946072
Links: (links) = ("Acquire"); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()
raco pkg (show):
Installation-wide:
 [none]
User-specific, all-version:
 [none]
User-specific, version-specific (5.3.4.10):
 [none]



Collections:
("/Users/matthias/0Unison/collects/"
 (".DS_Store" "date" "finance" "info-domain" "info.ss" "pdf.ss~" "session" "short" "testing" "tll-collects" "utils" "web"))
("/Users/matthias/Library/Racket/5.3.4.10/collects"
 (non-existent-path))
("/Users/matthias/plt/collects"
 (".gitignore" "2htdp" "algol60" "at-exp" "browser" "combinator-parser" "compatibility" "compiler" "config" "data" "datalog" "db" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "future-visualizer" "games" "graphics" "gui-debugger" "handin-client" "handin-server" "help" "hierlist" "honu" "htdp" "html" "icons" "images" "info-domain" "json" "lang" "launcher" "lazy" "macro-debugger" "make" "math" "meta" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "pict" "picturing-programs" "pkg" "plai" "planet" "planet2" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "realm" "redex" "repo-time-stamp" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "sirmail" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-e!
 ngine" "tests" "tex2page" "texpict" "trace" "typed" "typed-racket" "typed-scheme" "unstable" "version" "web-server" "wxme" "xml" "xrepl"))

Computer Language: (("Teaching Languages" "How to Design Programs" "Beginning Student with List Abbreviations") (#(#t constructor repeating-decimal #f #t none) #f ()))
>Description:
1. Using planetcute variables in the Definitions window of DrRacket, renders them 
as some strange text. 

2. Using planetcue variables in the Interactions window, raises an error. 
>How-To-Repeat:
1. Place 

 (require 2htdp/planetcute)
 water-block

in Def window 'run' and get this: 

 Welcome to DrRacket, version 5.3.4.10--2013-05-29(05524114/d) [3m].
 Language: Beginning Student with List Abbreviations.
 (instantiate (class ...) ...)
 > 


2. Place 

 (require 2htdp/planetcute)

in Def window, 'run' and see this happening: 

Welcome to DrRacket, version 5.3.4.10--2013-05-29(05524114/d) [3m].
Language: Beginning Student with List Abbreviations.
> water-block
?: module mismatch;
 attempted to use a module that is not available
  possible cause:
   using (dynamic-require .... #f)
   but need (dynamic-require .... 0)
  module: "/Users/matthias/plt/collects/2htdp/planetcute/water-block.rkt"
  phase: 0
>Fix:
>Audit-Trail:
From: Asumu Takikawa <asumu@ccs.neu.edu>
To: matthias@ccs.neu.edu, nobody@racket-lang.org, bugs@racket-lang.org,
        bug-notification@racket-lang.org
Cc: 
Subject: Re: all/13797: planetcute does not work with *SL
Date: Fri, 11 Apr 2014 02:48:08 -0400

 (bumping an old PR since the issue came up again)
 
 http://bugs.racket-lang.org/query/?cmd=view&audit-trail&database=default&pr=13797
 
 > 1. Using planetcute variables in the Definitions window of DrRacket, renders them
 > as some strange text.
 >
 > 2. Using planetcue variables in the Interactions window, raises an error.
 
 This bug is actually reproducible outside of the teaching languages too (e.g.,
 in #lang racket).
 
 Someone on StackOverflow ran into it: http://stackoverflow.com/q/23001650/898073
 
 I can't reproduce problem #1, but problem #2 still occurs as of Racket
 v6.0.0.4. It doesn't occur if you refer to the variable in the
 definitions area first and then refer to it in the interactions area
 after pressing "Run".
 
 Cheers,
 Asumu
From: Robby Findler <robby@eecs.northwestern.edu>
To: Asumu Takikawa <asumu@ccs.neu.edu>, Matthew Flatt <mflatt@cs.utah.edu>
Cc: Matthias Felleisen <matthias@ccs.neu.edu>, nobody <nobody@racket-lang.org>,
        bugs <bugs@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: all/13797: planetcute does not work with *SL
Date: Fri, 11 Apr 2014 09:30:01 -0500

 --001a11346e9a43d64c04f6c52b87
 Content-Type: text/plain; charset=UTF-8
 
 I'm not seeing what is wrong with the implementation (in 2htdp/planetcute).
 As far as I can tell, when the require is lifted into the top-level (as
 opposed to into a module), then we get the mentioned error, eg:
 
 #lang racket/base
 
 (let ()
   (define ns (make-base-namespace))
   (parameterize ([current-namespace ns])
     (eval '(module m racket/base (require 2htdp/planetcute)))
     (eval '(require 'm))
     (parameterize ([current-namespace (module->namespace ''m)])
       (eval 'water-block))))
 ==>
 ?: module mismatch;
  attempted to use a module that is not available
   possible cause:
    using (dynamic-require .... #f)
    but need (dynamic-require .... 0)
   module:
 "/Users/robby/git/plt/pkgs/htdp-pkgs/htdp-lib/2htdp/planetcute/water-block.rkt"
   phase: 0
   in: water-block
   context...:
    /Users/robby/tmp.rkt: [running body]
 
 I thought that it might make sense to just fall back to dynamic-require,
 but I can't see when to tell that I'd be lifting to the top-level (as
 opposed to lifting to a module).
 
 Perhaps one way to do this is to change/enhance syntax-local-lift-context
 so that it tells when the lift target would be the top-level and then I can
 just call dynamic-require in that case?
 
 Or maybe I'm doing something wrong in make-planetcute-transformer that I
 just don't see?
 
 Robby
 
 
 
 
 On Fri, Apr 11, 2014 at 1:48 AM, Asumu Takikawa <asumu@ccs.neu.edu> wrote:
 
 > (bumping an old PR since the issue came up again)
 >
 >
 > http://bugs.racket-lang.org/query/?cmd=view&audit-trail&database=default&pr=13797
 >
 > > 1. Using planetcute variables in the Definitions window of DrRacket,
 > renders them
 > > as some strange text.
 > >
 > > 2. Using planetcue variables in the Interactions window, raises an error.
 >
 > This bug is actually reproducible outside of the teaching languages too
 > (e.g.,
 > in #lang racket).
 >
 > Someone on StackOverflow ran into it:
 > http://stackoverflow.com/q/23001650/898073
 >
 > I can't reproduce problem #1, but problem #2 still occurs as of Racket
 > v6.0.0.4. It doesn't occur if you refer to the variable in the
 > definitions area first and then refer to it in the interactions area
 > after pressing "Run".
 >
 > Cheers,
 > Asumu
 >
 
 --001a11346e9a43d64c04f6c52b87
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 <div dir=3D"ltr">I&#39;m not seeing what is wrong with the implementation (=
 in 2htdp/planetcute). As far as I can tell, when the require is lifted into=
  the top-level (as opposed to into a module), then we get the mentioned err=
 or, eg:<div>
 <br></div><div><div>#lang racket/base</div><div><br></div><div>(let ()</div=
 ><div>=C2=A0 (define ns (make-base-namespace))</div><div>=C2=A0 (parameteri=
 ze ([current-namespace ns])</div><div>=C2=A0 =C2=A0 (eval &#39;(module m ra=
 cket/base (require 2htdp/planetcute)))</div>
 <div>=C2=A0 =C2=A0 (eval &#39;(require &#39;m))</div><div>=C2=A0 =C2=A0 (pa=
 rameterize ([current-namespace (module-&gt;namespace &#39;&#39;m)])</div><d=
 iv>=C2=A0 =C2=A0 =C2=A0 (eval &#39;water-block))))</div></div><div>=3D=3D&g=
 t;=C2=A0</div><div><div>?: module mismatch;</div>
 <div>=C2=A0attempted to use a module that is not available</div><div>=C2=A0=
  possible cause:</div><div>=C2=A0 =C2=A0using (dynamic-require .... #f)</di=
 v><div>=C2=A0 =C2=A0but need (dynamic-require .... 0)</div><div>=C2=A0 modu=
 le: &quot;/Users/robby/git/plt/pkgs/htdp-pkgs/htdp-lib/2htdp/planetcute/wat=
 er-block.rkt&quot;</div>
 <div>=C2=A0 phase: 0</div><div>=C2=A0 in: water-block</div><div>=C2=A0 cont=
 ext...:</div><div>=C2=A0 =C2=A0/Users/robby/tmp.rkt: [running body]</div></=
 div><div><br></div><div>I thought that it might make sense to just fall bac=
 k to dynamic-require, but I can&#39;t see when to tell that I&#39;d be lift=
 ing to the top-level (as opposed to lifting to a module).</div>
 <div><br></div><div>Perhaps one way to do this is to change/enhance=C2=A0sy=
 ntax-local-lift-context so that it tells when the lift target would be the =
 top-level and then I can just call dynamic-require in that case?</div><div>=
 <br>
 </div><div>Or maybe I&#39;m doing something wrong in=C2=A0make-planetcute-t=
 ransformer that I just don&#39;t see?</div><div><br></div><div>Robby</div><=
 div><br></div><div><br></div></div><div class=3D"gmail_extra"><br><br><div =
 class=3D"gmail_quote">
 On Fri, Apr 11, 2014 at 1:48 AM, Asumu Takikawa <span dir=3D"ltr">&lt;<a hr=
 ef=3D"mailto:asumu@ccs.neu.edu" target=3D"_blank">asumu@ccs.neu.edu</a>&gt;=
 </span> wrote:<br><blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .=
 8ex;border-left:1px #ccc solid;padding-left:1ex">
 (bumping an old PR since the issue came up again)<br>
 <br>
 <a href=3D"http://bugs.racket-lang.org/query/?cmd=3Dview&amp;audit-trail&am=
 p;database=3Ddefault&amp;pr=3D13797" target=3D"_blank">http://bugs.racket-l=
 ang.org/query/?cmd=3Dview&amp;audit-trail&amp;database=3Ddefault&amp;pr=3D1=
 3797</a><br>
 
 <br>
 &gt; 1. Using planetcute variables in the Definitions window of DrRacket, r=
 enders them<br>
 &gt; as some strange text.<br>
 &gt;<br>
 &gt; 2. Using planetcue variables in the Interactions window, raises an err=
 or.<br>
 <br>
 This bug is actually reproducible outside of the teaching languages too (e.=
 g.,<br>
 in #lang racket).<br>
 <br>
 Someone on StackOverflow ran into it: <a href=3D"http://stackoverflow.com/q=
 /23001650/898073" target=3D"_blank">http://stackoverflow.com/q/23001650/898=
 073</a><br>
 <br>
 I can&#39;t reproduce problem #1, but problem #2 still occurs as of Racket<=
 br>
 v6.0.0.4. It doesn&#39;t occur if you refer to the variable in the<br>
 definitions area first and then refer to it in the interactions area<br>
 after pressing &quot;Run&quot;.<br>
 <br>
 Cheers,<br>
 Asumu<br>
 </blockquote></div><br></div>
 
 --001a11346e9a43d64c04f6c52b87--
From: Matthew Flatt <mflatt@cs.utah.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: Asumu Takikawa <asumu@ccs.neu.edu>,
        Matthias Felleisen <matthias@ccs.neu.edu>,
        nobody <nobody@racket-lang.org>, bugs <bugs@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: all/13797: planetcute does not work with *SL
Date: Fri, 11 Apr 2014 08:38:45 -0600

 I bet that `syntax-local-lift-require` needs a repair for the case of
 lifting in a non-module context.
 
 At Fri, 11 Apr 2014 09:30:01 -0500, Robby Findler wrote:
 > I'm not seeing what is wrong with the implementation (in 2htdp/planetcute).
 > As far as I can tell, when the require is lifted into the top-level (as
 > opposed to into a module), then we get the mentioned error, eg:
 > 
 > #lang racket/base
 > 
 > (let ()
 >   (define ns (make-base-namespace))
 >   (parameterize ([current-namespace ns])
 >     (eval '(module m racket/base (require 2htdp/planetcute)))
 >     (eval '(require 'm))
 >     (parameterize ([current-namespace (module->namespace ''m)])
 >       (eval 'water-block))))
 > ==>
 > ?: module mismatch;
 >  attempted to use a module that is not available
 >   possible cause:
 >    using (dynamic-require .... #f)
 >    but need (dynamic-require .... 0)
 >   module:
 > "/Users/robby/git/plt/pkgs/htdp-pkgs/htdp-lib/2htdp/planetcute/water-block.rkt"
 >   phase: 0
 >   in: water-block
 >   context...:
 >    /Users/robby/tmp.rkt: [running body]
 > 
 > I thought that it might make sense to just fall back to dynamic-require,
 > but I can't see when to tell that I'd be lifting to the top-level (as
 > opposed to lifting to a module).
 > 
 > Perhaps one way to do this is to change/enhance syntax-local-lift-context
 > so that it tells when the lift target would be the top-level and then I can
 > just call dynamic-require in that case?
 > 
 > Or maybe I'm doing something wrong in make-planetcute-transformer that I
 > just don't see?
 > 
 > Robby
 > 
 > 
 > 
 > 
 > On Fri, Apr 11, 2014 at 1:48 AM, Asumu Takikawa <asumu@ccs.neu.edu> wrote:
 > 
 > > (bumping an old PR since the issue came up again)
 > >
 > >
 > > 
 > http://bugs.racket-lang.org/query/?cmd=view&audit-trail&database=default&pr=1379
 > 7
 > >
 > > > 1. Using planetcute variables in the Definitions window of DrRacket,
 > > renders them
 > > > as some strange text.
 > > >
 > > > 2. Using planetcue variables in the Interactions window, raises an error.
 > >
 > > This bug is actually reproducible outside of the teaching languages too
 > > (e.g.,
 > > in #lang racket).
 > >
 > > Someone on StackOverflow ran into it:
 > > http://stackoverflow.com/q/23001650/898073
 > >
 > > I can't reproduce problem #1, but problem #2 still occurs as of Racket
 > > v6.0.0.4. It doesn't occur if you refer to the variable in the
 > > definitions area first and then refer to it in the interactions area
 > > after pressing "Run".
 > >
 > > Cheers,
 > > Asumu
 > >
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: Asumu Takikawa <asumu@ccs.neu.edu>,
        Matthias Felleisen <matthias@ccs.neu.edu>,
        nobody <nobody@racket-lang.org>, bugs <bugs@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: all/13797: planetcute does not work with *SL
Date: Fri, 11 Apr 2014 13:37:44 -0500

 --047d7b471dfa2e023304f6c8a1c9
 Content-Type: text/plain; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 Well, it's not just something obvious, because this works:
 
 =E2=98=95  racket
 Welcome to Racket v6.0.1.1.
 > (define-syntax (m stx)
   (syntax-case stx ()
     [(_)
      (syntax-local-introduce
       (syntax-local-lift-require `(lib "water-block.rkt" "2htdp"
 "planetcute")
                                  (datum->syntax stx 'water-block)))]))
 > (list (m))
 (list (object:bitmap% ...))
 
 
 
 On Fri, Apr 11, 2014 at 9:38 AM, Matthew Flatt <mflatt@cs.utah.edu> wrote:
 
 > I bet that `syntax-local-lift-require` needs a repair for the case of
 > lifting in a non-module context.
 >
 > At Fri, 11 Apr 2014 09:30:01 -0500, Robby Findler wrote:
 > > I'm not seeing what is wrong with the implementation (in
 > 2htdp/planetcute).
 > > As far as I can tell, when the require is lifted into the top-level (as
 > > opposed to into a module), then we get the mentioned error, eg:
 > >
 > > #lang racket/base
 > >
 > > (let ()
 > >   (define ns (make-base-namespace))
 > >   (parameterize ([current-namespace ns])
 > >     (eval '(module m racket/base (require 2htdp/planetcute)))
 > >     (eval '(require 'm))
 > >     (parameterize ([current-namespace (module->namespace ''m)])
 > >       (eval 'water-block))))
 > > =3D=3D>
 > > ?: module mismatch;
 > >  attempted to use a module that is not available
 > >   possible cause:
 > >    using (dynamic-require .... #f)
 > >    but need (dynamic-require .... 0)
 > >   module:
 > >
 > "/Users/robby/git/plt/pkgs/htdp-pkgs/htdp-lib/2htdp/planetcute/water-bloc=
 k.rkt"
 > >   phase: 0
 > >   in: water-block
 > >   context...:
 > >    /Users/robby/tmp.rkt: [running body]
 > >
 > > I thought that it might make sense to just fall back to dynamic-require=
 ,
 > > but I can't see when to tell that I'd be lifting to the top-level (as
 > > opposed to lifting to a module).
 > >
 > > Perhaps one way to do this is to change/enhance syntax-local-lift-conte=
 xt
 > > so that it tells when the lift target would be the top-level and then I
 > can
 > > just call dynamic-require in that case?
 > >
 > > Or maybe I'm doing something wrong in make-planetcute-transformer that =
 I
 > > just don't see?
 > >
 > > Robby
 > >
 > >
 > >
 > >
 > > On Fri, Apr 11, 2014 at 1:48 AM, Asumu Takikawa <asumu@ccs.neu.edu>
 > wrote:
 > >
 > > > (bumping an old PR since the issue came up again)
 > > >
 > > >
 > > >
 > >
 > http://bugs.racket-lang.org/query/?cmd=3Dview&audit-trail&database=3Ddefa=
 ult&pr=3D1379
 > > 7
 > > >
 > > > > 1. Using planetcute variables in the Definitions window of DrRacket=
 ,
 > > > renders them
 > > > > as some strange text.
 > > > >
 > > > > 2. Using planetcue variables in the Interactions window, raises an
 > error.
 > > >
 > > > This bug is actually reproducible outside of the teaching languages t=
 oo
 > > > (e.g.,
 > > > in #lang racket).
 > > >
 > > > Someone on StackOverflow ran into it:
 > > > http://stackoverflow.com/q/23001650/898073
 > > >
 > > > I can't reproduce problem #1, but problem #2 still occurs as of Racke=
 t
 > > > v6.0.0.4. It doesn't occur if you refer to the variable in the
 > > > definitions area first and then refer to it in the interactions area
 > > > after pressing "Run".
 > > >
 > > > Cheers,
 > > > Asumu
 > > >
 >
 
 --047d7b471dfa2e023304f6c8a1c9
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 <div dir=3D"ltr">Well, it&#39;s not just something obvious, because this wo=
 rks:<div><br></div><div><div>=E2=98=95 =C2=A0racket</div><div>Welcome to Ra=
 cket v6.0.1.1.</div><div>&gt; (define-syntax (m stx)</div><div>=C2=A0 (synt=
 ax-case stx ()</div>
 <div>=C2=A0 =C2=A0 [(_)</div><div>=C2=A0 =C2=A0 =C2=A0(syntax-local-introdu=
 ce</div><div>=C2=A0 =C2=A0 =C2=A0 (syntax-local-lift-require `(lib &quot;wa=
 ter-block.rkt&quot; &quot;2htdp&quot; &quot;planetcute&quot;)</div><div>=C2=
 =A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(datum-&gt;syntax stx &#39;water-b=
 lock)))]))</div>
 <div>&gt; (list (m))</div><div>(list (object:bitmap% ...))</div></div><div>=
 <br></div></div><div class=3D"gmail_extra"><br><br><div class=3D"gmail_quot=
 e">On Fri, Apr 11, 2014 at 9:38 AM, Matthew Flatt <span dir=3D"ltr">&lt;<a =
 href=3D"mailto:mflatt@cs.utah.edu" target=3D"_blank">mflatt@cs.utah.edu</a>=
 &gt;</span> wrote:<br>
 <blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1p=
 x #ccc solid;padding-left:1ex">I bet that `syntax-local-lift-require` needs=
  a repair for the case of<br>
 lifting in a non-module context.<br>
 <div class=3D"HOEnZb"><div class=3D"h5"><br>
 At Fri, 11 Apr 2014 09:30:01 -0500, Robby Findler wrote:<br>
 &gt; I&#39;m not seeing what is wrong with the implementation (in 2htdp/pla=
 netcute).<br>
 &gt; As far as I can tell, when the require is lifted into the top-level (a=
 s<br>
 &gt; opposed to into a module), then we get the mentioned error, eg:<br>
 &gt;<br>
 &gt; #lang racket/base<br>
 &gt;<br>
 &gt; (let ()<br>
 &gt; =C2=A0 (define ns (make-base-namespace))<br>
 &gt; =C2=A0 (parameterize ([current-namespace ns])<br>
 &gt; =C2=A0 =C2=A0 (eval &#39;(module m racket/base (require 2htdp/planetcu=
 te)))<br>
 &gt; =C2=A0 =C2=A0 (eval &#39;(require &#39;m))<br>
 &gt; =C2=A0 =C2=A0 (parameterize ([current-namespace (module-&gt;namespace =
 &#39;&#39;m)])<br>
 &gt; =C2=A0 =C2=A0 =C2=A0 (eval &#39;water-block))))<br>
 &gt; =3D=3D&gt;<br>
 &gt; ?: module mismatch;<br>
 &gt; =C2=A0attempted to use a module that is not available<br>
 &gt; =C2=A0 possible cause:<br>
 &gt; =C2=A0 =C2=A0using (dynamic-require .... #f)<br>
 &gt; =C2=A0 =C2=A0but need (dynamic-require .... 0)<br>
 &gt; =C2=A0 module:<br>
 &gt; &quot;/Users/robby/git/plt/pkgs/htdp-pkgs/htdp-lib/2htdp/planetcute/wa=
 ter-block.rkt&quot;<br>
 &gt; =C2=A0 phase: 0<br>
 &gt; =C2=A0 in: water-block<br>
 &gt; =C2=A0 context...:<br>
 &gt; =C2=A0 =C2=A0/Users/robby/tmp.rkt: [running body]<br>
 &gt;<br>
 &gt; I thought that it might make sense to just fall back to dynamic-requir=
 e,<br>
 &gt; but I can&#39;t see when to tell that I&#39;d be lifting to the top-le=
 vel (as<br>
 &gt; opposed to lifting to a module).<br>
 &gt;<br>
 &gt; Perhaps one way to do this is to change/enhance syntax-local-lift-cont=
 ext<br>
 &gt; so that it tells when the lift target would be the top-level and then =
 I can<br>
 &gt; just call dynamic-require in that case?<br>
 &gt;<br>
 &gt; Or maybe I&#39;m doing something wrong in make-planetcute-transformer =
 that I<br>
 &gt; just don&#39;t see?<br>
 &gt;<br>
 &gt; Robby<br>
 &gt;<br>
 &gt;<br>
 &gt;<br>
 &gt;<br>
 &gt; On Fri, Apr 11, 2014 at 1:48 AM, Asumu Takikawa &lt;<a href=3D"mailto:=
 asumu@ccs.neu.edu">asumu@ccs.neu.edu</a>&gt; wrote:<br>
 &gt;<br>
 &gt; &gt; (bumping an old PR since the issue came up again)<br>
 &gt; &gt;<br>
 &gt; &gt;<br>
 &gt; &gt;<br>
 &gt; <a href=3D"http://bugs.racket-lang.org/query/?cmd=3Dview&amp;audit-tra=
 il&amp;database=3Ddefault&amp;pr=3D1379" target=3D"_blank">http://bugs.rack=
 et-lang.org/query/?cmd=3Dview&amp;audit-trail&amp;database=3Ddefault&amp;pr=
 =3D1379</a><br>
 
 &gt; 7<br>
 &gt; &gt;<br>
 &gt; &gt; &gt; 1. Using planetcute variables in the Definitions window of D=
 rRacket,<br>
 &gt; &gt; renders them<br>
 &gt; &gt; &gt; as some strange text.<br>
 &gt; &gt; &gt;<br>
 &gt; &gt; &gt; 2. Using planetcue variables in the Interactions window, rai=
 ses an error.<br>
 &gt; &gt;<br>
 &gt; &gt; This bug is actually reproducible outside of the teaching languag=
 es too<br>
 &gt; &gt; (e.g.,<br>
 &gt; &gt; in #lang racket).<br>
 &gt; &gt;<br>
 &gt; &gt; Someone on StackOverflow ran into it:<br>
 &gt; &gt; <a href=3D"http://stackoverflow.com/q/23001650/898073" target=3D"=
 _blank">http://stackoverflow.com/q/23001650/898073</a><br>
 &gt; &gt;<br>
 &gt; &gt; I can&#39;t reproduce problem #1, but problem #2 still occurs as =
 of Racket<br>
 &gt; &gt; v6.0.0.4. It doesn&#39;t occur if you refer to the variable in th=
 e<br>
 &gt; &gt; definitions area first and then refer to it in the interactions a=
 rea<br>
 &gt; &gt; after pressing &quot;Run&quot;.<br>
 &gt; &gt;<br>
 &gt; &gt; Cheers,<br>
 &gt; &gt; Asumu<br>
 &gt; &gt;<br>
 </div></div></blockquote></div><br></div>
 
 --047d7b471dfa2e023304f6c8a1c9--
From: Matthew Flatt <mflatt@cs.utah.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: Asumu Takikawa <asumu@ccs.neu.edu>,
        Matthias Felleisen <matthias@ccs.neu.edu>,
        nobody <nobody@racket-lang.org>, bugs <bugs@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: all/13797: planetcute does not work with *SL
Date: Fri, 11 Apr 2014 12:50:03 -0600

 Thanks! That helps a lot, and I should be able to get to this soon.
 
 At Fri, 11 Apr 2014 13:48:44 -0500, Robby Findler wrote:
 > Ah, here's a test case. It needs module->namespace.
 > 
 > #lang racket/base
 > (let ()
 >   (define ns (make-base-namespace))
 >   (parameterize ([current-namespace ns])
 >     (eval '(module m racket/base
 >              (require (for-syntax racket/base))
 >              (define-syntax (m stx)
 >                (syntax-case stx ()
 >                  [(_)
 >                   (syntax-local-introduce
 >                    (syntax-local-lift-require
 >                     'racket/list
 >                     (datum->syntax stx 'empty)))]))))
 >     (eval '(require 'm))
 >     (parameterize ([current-namespace (module->namespace ''m)])
 >       (eval '(m)))))
 > 
 > 
 > This produces
 > 
 > Welcome to DrRacket, version 6.0.1.1--2014-04-11(4bae66ed/d) [3m].
 > Language: racket/base; memory limit: 256 MB.
 > ?: module mismatch;
 >  attempted to use a module that is not available
 >   possible cause:
 >    using (dynamic-require .... #f)
 >    but need (dynamic-require .... 0)
 >   module: "/Users/robby/git/exp/plt/racket/collects/racket/list.rkt"
 >   phase: 0 in: empty
 > 
 > 
 > but it should probably actually return the empty list.
 > 
 > Robby
 > 
 > 
 > 
 > On Fri, Apr 11, 2014 at 1:37 PM, Robby Findler
 > <robby@eecs.northwestern.edu>wrote:
 > 
 > > Well, it's not just something obvious, because this works:
 > >
 > > ☕  racket
 > > Welcome to Racket v6.0.1.1.
 > > > (define-syntax (m stx)
 > >   (syntax-case stx ()
 > >     [(_)
 > >      (syntax-local-introduce
 > >       (syntax-local-lift-require `(lib "water-block.rkt" "2htdp"
 > > "planetcute")
 > >                                  (datum->syntax stx 'water-block)))]))
 > > > (list (m))
 > > (list (object:bitmap% ...))
 > >
 > >
 > >
 > > On Fri, Apr 11, 2014 at 9:38 AM, Matthew Flatt <mflatt@cs.utah.edu> wrote:
 > >
 > >> I bet that `syntax-local-lift-require` needs a repair for the case of
 > >> lifting in a non-module context.
 > >>
 > >> At Fri, 11 Apr 2014 09:30:01 -0500, Robby Findler wrote:
 > >> > I'm not seeing what is wrong with the implementation (in
 > >> 2htdp/planetcute).
 > >> > As far as I can tell, when the require is lifted into the top-level (as
 > >> > opposed to into a module), then we get the mentioned error, eg:
 > >> >
 > >> > #lang racket/base
 > >> >
 > >> > (let ()
 > >> >   (define ns (make-base-namespace))
 > >> >   (parameterize ([current-namespace ns])
 > >> >     (eval '(module m racket/base (require 2htdp/planetcute)))
 > >> >     (eval '(require 'm))
 > >> >     (parameterize ([current-namespace (module->namespace ''m)])
 > >> >       (eval 'water-block))))
 > >> > ==>
 > >> > ?: module mismatch;
 > >> >  attempted to use a module that is not available
 > >> >   possible cause:
 > >> >    using (dynamic-require .... #f)
 > >> >    but need (dynamic-require .... 0)
 > >> >   module:
 > >> >
 > >> 
 > "/Users/robby/git/plt/pkgs/htdp-pkgs/htdp-lib/2htdp/planetcute/water-block.rkt"
 > >> >   phase: 0
 > >> >   in: water-block
 > >> >   context...:
 > >> >    /Users/robby/tmp.rkt: [running body]
 > >> >
 > >> > I thought that it might make sense to just fall back to dynamic-require,
 > >> > but I can't see when to tell that I'd be lifting to the top-level (as
 > >> > opposed to lifting to a module).
 > >> >
 > >> > Perhaps one way to do this is to change/enhance
 > >> syntax-local-lift-context
 > >> > so that it tells when the lift target would be the top-level and then I
 > >> can
 > >> > just call dynamic-require in that case?
 > >> >
 > >> > Or maybe I'm doing something wrong in make-planetcute-transformer that I
 > >> > just don't see?
 > >> >
 > >> > Robby
 > >> >
 > >> >
 > >> >
 > >> >
 > >> > On Fri, Apr 11, 2014 at 1:48 AM, Asumu Takikawa <asumu@ccs.neu.edu>
 > >> wrote:
 > >> >
 > >> > > (bumping an old PR since the issue came up again)
 > >> > >
 > >> > >
 > >> > >
 > >> >
 > >> 
 > http://bugs.racket-lang.org/query/?cmd=view&audit-trail&database=default&pr=1379
 > >> > 7
 > >> > >
 > >> > > > 1. Using planetcute variables in the Definitions window of DrRacket,
 > >> > > renders them
 > >> > > > as some strange text.
 > >> > > >
 > >> > > > 2. Using planetcue variables in the Interactions window, raises an
 > >> error.
 > >> > >
 > >> > > This bug is actually reproducible outside of the teaching languages
 > >> too
 > >> > > (e.g.,
 > >> > > in #lang racket).
 > >> > >
 > >> > > Someone on StackOverflow ran into it:
 > >> > > http://stackoverflow.com/q/23001650/898073
 > >> > >
 > >> > > I can't reproduce problem #1, but problem #2 still occurs as of Racket
 > >> > > v6.0.0.4. It doesn't occur if you refer to the variable in the
 > >> > > definitions area first and then refer to it in the interactions area
 > >> > > after pressing "Run".
 > >> > >
 > >> > > Cheers,
 > >> > > Asumu
 > >> > >
 > >>
 > >
 > >
 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: Asumu Takikawa <asumu@ccs.neu.edu>,
        Matthias Felleisen <matthias@ccs.neu.edu>,
        nobody <nobody@racket-lang.org>, bugs <bugs@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: all/13797: planetcute does not work with *SL
Date: Fri, 11 Apr 2014 13:48:44 -0500

 --001a11346e9a79b0fb04f6c8c83e
 Content-Type: text/plain; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 Ah, here's a test case. It needs module->namespace.
 
 #lang racket/base
 (let ()
   (define ns (make-base-namespace))
   (parameterize ([current-namespace ns])
     (eval '(module m racket/base
              (require (for-syntax racket/base))
              (define-syntax (m stx)
                (syntax-case stx ()
                  [(_)
                   (syntax-local-introduce
                    (syntax-local-lift-require
                     'racket/list
                     (datum->syntax stx 'empty)))]))))
     (eval '(require 'm))
     (parameterize ([current-namespace (module->namespace ''m)])
       (eval '(m)))))
 
 
 This produces
 
 Welcome to DrRacket, version 6.0.1.1--2014-04-11(4bae66ed/d) [3m].
 Language: racket/base; memory limit: 256 MB.
 ?: module mismatch;
  attempted to use a module that is not available
   possible cause:
    using (dynamic-require .... #f)
    but need (dynamic-require .... 0)
   module: "/Users/robby/git/exp/plt/racket/collects/racket/list.rkt"
   phase: 0 in: empty
 
 
 but it should probably actually return the empty list.
 
 Robby
 
 
 
 On Fri, Apr 11, 2014 at 1:37 PM, Robby Findler
 <robby@eecs.northwestern.edu>wrote:
 
 > Well, it's not just something obvious, because this works:
 >
 > =E2=98=95  racket
 > Welcome to Racket v6.0.1.1.
 > > (define-syntax (m stx)
 >   (syntax-case stx ()
 >     [(_)
 >      (syntax-local-introduce
 >       (syntax-local-lift-require `(lib "water-block.rkt" "2htdp"
 > "planetcute")
 >                                  (datum->syntax stx 'water-block)))]))
 > > (list (m))
 > (list (object:bitmap% ...))
 >
 >
 >
 > On Fri, Apr 11, 2014 at 9:38 AM, Matthew Flatt <mflatt@cs.utah.edu> wrote=
 :
 >
 >> I bet that `syntax-local-lift-require` needs a repair for the case of
 >> lifting in a non-module context.
 >>
 >> At Fri, 11 Apr 2014 09:30:01 -0500, Robby Findler wrote:
 >> > I'm not seeing what is wrong with the implementation (in
 >> 2htdp/planetcute).
 >> > As far as I can tell, when the require is lifted into the top-level (a=
 s
 >> > opposed to into a module), then we get the mentioned error, eg:
 >> >
 >> > #lang racket/base
 >> >
 >> > (let ()
 >> >   (define ns (make-base-namespace))
 >> >   (parameterize ([current-namespace ns])
 >> >     (eval '(module m racket/base (require 2htdp/planetcute)))
 >> >     (eval '(require 'm))
 >> >     (parameterize ([current-namespace (module->namespace ''m)])
 >> >       (eval 'water-block))))
 >> > =3D=3D>
 >> > ?: module mismatch;
 >> >  attempted to use a module that is not available
 >> >   possible cause:
 >> >    using (dynamic-require .... #f)
 >> >    but need (dynamic-require .... 0)
 >> >   module:
 >> >
 >> "/Users/robby/git/plt/pkgs/htdp-pkgs/htdp-lib/2htdp/planetcute/water-blo=
 ck.rkt"
 >> >   phase: 0
 >> >   in: water-block
 >> >   context...:
 >> >    /Users/robby/tmp.rkt: [running body]
 >> >
 >> > I thought that it might make sense to just fall back to dynamic-requir=
 e,
 >> > but I can't see when to tell that I'd be lifting to the top-level (as
 >> > opposed to lifting to a module).
 >> >
 >> > Perhaps one way to do this is to change/enhance
 >> syntax-local-lift-context
 >> > so that it tells when the lift target would be the top-level and then =
 I
 >> can
 >> > just call dynamic-require in that case?
 >> >
 >> > Or maybe I'm doing something wrong in make-planetcute-transformer that=
  I
 >> > just don't see?
 >> >
 >> > Robby
 >> >
 >> >
 >> >
 >> >
 >> > On Fri, Apr 11, 2014 at 1:48 AM, Asumu Takikawa <asumu@ccs.neu.edu>
 >> wrote:
 >> >
 >> > > (bumping an old PR since the issue came up again)
 >> > >
 >> > >
 >> > >
 >> >
 >> http://bugs.racket-lang.org/query/?cmd=3Dview&audit-trail&database=3Ddef=
 ault&pr=3D1379
 >> > 7
 >> > >
 >> > > > 1. Using planetcute variables in the Definitions window of DrRacke=
 t,
 >> > > renders them
 >> > > > as some strange text.
 >> > > >
 >> > > > 2. Using planetcue variables in the Interactions window, raises an
 >> error.
 >> > >
 >> > > This bug is actually reproducible outside of the teaching languages
 >> too
 >> > > (e.g.,
 >> > > in #lang racket).
 >> > >
 >> > > Someone on StackOverflow ran into it:
 >> > > http://stackoverflow.com/q/23001650/898073
 >> > >
 >> > > I can't reproduce problem #1, but problem #2 still occurs as of Rack=
 et
 >> > > v6.0.0.4. It doesn't occur if you refer to the variable in the
 >> > > definitions area first and then refer to it in the interactions area
 >> > > after pressing "Run".
 >> > >
 >> > > Cheers,
 >> > > Asumu
 >> > >
 >>
 >
 >
 
 --001a11346e9a79b0fb04f6c8c83e
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 <div dir=3D"ltr">Ah, here&#39;s a test case. It needs module-&gt;namespace.=
 <div><br></div><div><div>#lang racket/base</div></div><div><div>(let ()</di=
 v><div>=C2=A0 (define ns (make-base-namespace))</div><div>=C2=A0 (parameter=
 ize ([current-namespace ns])</div>
 <div>=C2=A0 =C2=A0 (eval &#39;(module m racket/base=C2=A0</div><div>=C2=A0 =
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(require (for-syntax racket/base))=
 </div><div>=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(define-syntax (=
 m stx)</div><div>=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(sy=
 ntax-case stx ()</div><div>=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=
  =C2=A0 =C2=A0[(_)</div>
 <div>=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 (syntax=
 -local-introduce</div><div>=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=
  =C2=A0 =C2=A0 =C2=A0(syntax-local-lift-require=C2=A0</div><div>=C2=A0 =C2=
 =A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 &#39;racket/lis=
 t</div><div>=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =
 =C2=A0 (datum-&gt;syntax stx &#39;empty)))]))))</div>
 <div>=C2=A0 =C2=A0 (eval &#39;(require &#39;m))</div><div>=C2=A0 =C2=A0 (pa=
 rameterize ([current-namespace (module-&gt;namespace &#39;&#39;m)])</div><d=
 iv>=C2=A0 =C2=A0 =C2=A0 (eval &#39;(m)))))</div></div><div><br></div><div><=
 br></div><div>This produces=C2=A0</div>
 <div><br></div><div><div>Welcome to DrRacket, version 6.0.1.1--2014-04-11(4=
 bae66ed/d) [3m].</div><div>Language: racket/base; memory limit: 256 MB.</di=
 v><div>?: module mismatch;</div><div>=C2=A0attempted to use a module that i=
 s not available</div>
 <div>=C2=A0 possible cause:</div><div>=C2=A0 =C2=A0using (dynamic-require .=
 ... #f)</div><div>=C2=A0 =C2=A0but need (dynamic-require .... 0)</div><div>=
 =C2=A0 module: &quot;/Users/robby/git/exp/plt/racket/collects/racket/list.r=
 kt&quot;</div><div>=C2=A0 phase: 0 in: empty</div>
 <div><br></div></div><div><br></div><div>but it should probably actually re=
 turn the empty list.</div><div><br></div><div>Robby</div><div><br></div></d=
 iv><div class=3D"gmail_extra"><br><br><div class=3D"gmail_quote">On Fri, Ap=
 r 11, 2014 at 1:37 PM, Robby Findler <span dir=3D"ltr">&lt;<a href=3D"mailt=
 o:robby@eecs.northwestern.edu" target=3D"_blank">robby@eecs.northwestern.ed=
 u</a>&gt;</span> wrote:<br>
 <blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1p=
 x #ccc solid;padding-left:1ex"><div dir=3D"ltr">Well, it&#39;s not just som=
 ething obvious, because this works:<div><br></div><div><div>=E2=98=95 =C2=
 =A0racket</div><div>
 Welcome to Racket v6.0.1.1.</div><div>&gt; (define-syntax (m stx)</div><div=
 >=C2=A0 (syntax-case stx ()</div>
 <div>=C2=A0 =C2=A0 [(_)</div><div>=C2=A0 =C2=A0 =C2=A0(syntax-local-introdu=
 ce</div><div>=C2=A0 =C2=A0 =C2=A0 (syntax-local-lift-require `(lib &quot;wa=
 ter-block.rkt&quot; &quot;2htdp&quot; &quot;planetcute&quot;)</div><div>=C2=
 =A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(datum-&gt;syntax stx &#39;water-b=
 lock)))]))</div>
 
 <div>&gt; (list (m))</div><div>(list (object:bitmap% ...))</div></div><div>=
 <br></div></div><div class=3D"HOEnZb"><div class=3D"h5"><div class=3D"gmail=
 _extra"><br><br><div class=3D"gmail_quote">On Fri, Apr 11, 2014 at 9:38 AM,=
  Matthew Flatt <span dir=3D"ltr">&lt;<a href=3D"mailto:mflatt@cs.utah.edu" =
 target=3D"_blank">mflatt@cs.utah.edu</a>&gt;</span> wrote:<br>
 
 <blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1p=
 x #ccc solid;padding-left:1ex">I bet that `syntax-local-lift-require` needs=
  a repair for the case of<br>
 lifting in a non-module context.<br>
 <div><div><br>
 At Fri, 11 Apr 2014 09:30:01 -0500, Robby Findler wrote:<br>
 &gt; I&#39;m not seeing what is wrong with the implementation (in 2htdp/pla=
 netcute).<br>
 &gt; As far as I can tell, when the require is lifted into the top-level (a=
 s<br>
 &gt; opposed to into a module), then we get the mentioned error, eg:<br>
 &gt;<br>
 &gt; #lang racket/base<br>
 &gt;<br>
 &gt; (let ()<br>
 &gt; =C2=A0 (define ns (make-base-namespace))<br>
 &gt; =C2=A0 (parameterize ([current-namespace ns])<br>
 &gt; =C2=A0 =C2=A0 (eval &#39;(module m racket/base (require 2htdp/planetcu=
 te)))<br>
 &gt; =C2=A0 =C2=A0 (eval &#39;(require &#39;m))<br>
 &gt; =C2=A0 =C2=A0 (parameterize ([current-namespace (module-&gt;namespace =
 &#39;&#39;m)])<br>
 &gt; =C2=A0 =C2=A0 =C2=A0 (eval &#39;water-block))))<br>
 &gt; =3D=3D&gt;<br>
 &gt; ?: module mismatch;<br>
 &gt; =C2=A0attempted to use a module that is not available<br>
 &gt; =C2=A0 possible cause:<br>
 &gt; =C2=A0 =C2=A0using (dynamic-require .... #f)<br>
 &gt; =C2=A0 =C2=A0but need (dynamic-require .... 0)<br>
 &gt; =C2=A0 module:<br>
 &gt; &quot;/Users/robby/git/plt/pkgs/htdp-pkgs/htdp-lib/2htdp/planetcute/wa=
 ter-block.rkt&quot;<br>
 &gt; =C2=A0 phase: 0<br>
 &gt; =C2=A0 in: water-block<br>
 &gt; =C2=A0 context...:<br>
 &gt; =C2=A0 =C2=A0/Users/robby/tmp.rkt: [running body]<br>
 &gt;<br>
 &gt; I thought that it might make sense to just fall back to dynamic-requir=
 e,<br>
 &gt; but I can&#39;t see when to tell that I&#39;d be lifting to the top-le=
 vel (as<br>
 &gt; opposed to lifting to a module).<br>
 &gt;<br>
 &gt; Perhaps one way to do this is to change/enhance syntax-local-lift-cont=
 ext<br>
 &gt; so that it tells when the lift target would be the top-level and then =
 I can<br>
 &gt; just call dynamic-require in that case?<br>
 &gt;<br>
 &gt; Or maybe I&#39;m doing something wrong in make-planetcute-transformer =
 that I<br>
 &gt; just don&#39;t see?<br>
 &gt;<br>
 &gt; Robby<br>
 &gt;<br>
 &gt;<br>
 &gt;<br>
 &gt;<br>
 &gt; On Fri, Apr 11, 2014 at 1:48 AM, Asumu Takikawa &lt;<a href=3D"mailto:=
 asumu@ccs.neu.edu" target=3D"_blank">asumu@ccs.neu.edu</a>&gt; wrote:<br>
 &gt;<br>
 &gt; &gt; (bumping an old PR since the issue came up again)<br>
 &gt; &gt;<br>
 &gt; &gt;<br>
 &gt; &gt;<br>
 &gt; <a href=3D"http://bugs.racket-lang.org/query/?cmd=3Dview&amp;audit-tra=
 il&amp;database=3Ddefault&amp;pr=3D1379" target=3D"_blank">http://bugs.rack=
 et-lang.org/query/?cmd=3Dview&amp;audit-trail&amp;database=3Ddefault&amp;pr=
 =3D1379</a><br>
 
 
 &gt; 7<br>
 &gt; &gt;<br>
 &gt; &gt; &gt; 1. Using planetcute variables in the Definitions window of D=
 rRacket,<br>
 &gt; &gt; renders them<br>
 &gt; &gt; &gt; as some strange text.<br>
 &gt; &gt; &gt;<br>
 &gt; &gt; &gt; 2. Using planetcue variables in the Interactions window, rai=
 ses an error.<br>
 &gt; &gt;<br>
 &gt; &gt; This bug is actually reproducible outside of the teaching languag=
 es too<br>
 &gt; &gt; (e.g.,<br>
 &gt; &gt; in #lang racket).<br>
 &gt; &gt;<br>
 &gt; &gt; Someone on StackOverflow ran into it:<br>
 &gt; &gt; <a href=3D"http://stackoverflow.com/q/23001650/898073" target=3D"=
 _blank">http://stackoverflow.com/q/23001650/898073</a><br>
 &gt; &gt;<br>
 &gt; &gt; I can&#39;t reproduce problem #1, but problem #2 still occurs as =
 of Racket<br>
 &gt; &gt; v6.0.0.4. It doesn&#39;t occur if you refer to the variable in th=
 e<br>
 &gt; &gt; definitions area first and then refer to it in the interactions a=
 rea<br>
 &gt; &gt; after pressing &quot;Run&quot;.<br>
 &gt; &gt;<br>
 &gt; &gt; Cheers,<br>
 &gt; &gt; Asumu<br>
 &gt; &gt;<br>
 </div></div></blockquote></div><br></div>
 </div></div></blockquote></div><br></div>
 
 --001a11346e9a79b0fb04f6c8c83e--
Responsible changed from "nobody" to "mflatt" by mflatt@racket-lang.org at Sun, 13 Apr 2014 22:21:15 -0400
Reason>>> A commit by mflatt@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/414507699b
State changed from "open" to "closed" by mflatt@racket-lang.org at Sun, 13 Apr 2014 22:21:15 -0400
Reason>>> A commit by mflatt@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/414507699b
  | fix problem with `syntax-local-lift-require`
  | 
  | Closes PR 13797
  | 
  | Merge to v6.0.1

