From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Tue Feb 18 22:19:28 2014
Received: from mail-oa0-f51.google.com (mail-oa0-f51.google.com [209.85.219.51])
	by winooski.ccs.neu.edu (8.14.7/8.14.7) with ESMTP id s1J3JOmq026136
	for <bugs@bugs.plt-scheme.org>; Tue, 18 Feb 2014 22:19:24 -0500
Message-Id: <201402190319.s1J3JL6Y026129@winooski.ccs.neu.edu>
Date: Tue, 18 Feb 2014 22:19:21 -0500
From: asumu@ccs.neu.edu
To: bugs@racket-lang.org
Subject: syntax/stx: stx->list and its documentation do not match

>Number:         14359
>Category:       all
>Synopsis:       syntax/stx: stx->list and its documentation do not match
>Class:          sw-bug
>Responsible:    nobody
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Tue Feb 18 22:20:01 -0500 2014
>Originator:     Asumu Takikawa
>Organization:
plt
>Submitter-Id:   unknown
>Release:        6.0.0.2--2014-02-18(0c0befac/d)
>Environment:
unix "Linux howl 3.10-3-amd64 #1 SMP Debian 3.10.11-1 (2013-09-10) x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
Human Language: japanese
(current-memory-use) 307901804
Links: (links) = (); (links #:user? #f) = ("rkt-http" "drracket-vim-tool" "drracket-solarized" "metapict" "gradual-typing-bib"); (links #:root? #t) = (); (links #:user? #f #:root? #t) = (#<path:/home/asumu/code/racket/combinator-parser> #<path:/home/asumu/code/racket/racket-rsvg> #<path:/home/asumu/code/racket/raco-find-collection> #<path:/home/asumu/software/ragg> #<path:/home/asumu/code/racket/tr-pfds> #<path:/home/asumu/plt/racket-git/racket/share/pkgs/plai-typed>)
raco pkg (show):
/home/asumu/plt/racket-git/racket/share/devel-pkgs:
 Package              Checksum    Source
 main-distribution    #f          (static-link ../../../pkgs/main-distribution)
 plt-services         #f          (static-link ../../../pkgs/plt-services)
 racket-lib           #f          (static-link ../../../pkgs/racket-pkgs/racket-lib)
 [205 auto-installed packages not shown]
Installation-wide:
 Package                 Checksum                                    Source
 combinator-parser       #f                                          (link ../../../../../code/racket/combinator-parser)
 drracket-solarized      #f                                          (link ../../../../../code/racket/drracket-solarized)
 drracket-vim-tool       #f                                          (link ../../../../../software/drracket-vim-tool)
 gradual-typing-bib      #f                                          (link ../../../../../code/racket/gradual-typing-bib)
 metapict                #f                                          (link ../../../../../software/metapict)
 plai-typed              e917c5d9017ddf652eefb46a87cc37100999b5e6    (catalog plai-typed)
 racket-rsvg             #f                                          (link ../../../../../code/racket/racket-rsvg)
 raco-find-collection    #f                                          (link ../../../../../code/racket/raco-find-collection)
 ragg                    #f                                          (link ../../../../../software/ragg)
 rkt-http                #f                                          (link ../../../../../software/rkt-http)
 tr-pfds                 #f                                          (link ../../../../../code/racket/tr-pfds)
User-specific for installation "development":
 [none]



Collections:
("/home/asumu/plt/racket-git/add-on/development/collects"
 (non-existent-path))
("/home/asumu/plt/racket-git/racket/collects"
 (".gitignore" "acks" "compiler" "data" "db" "dynext" "ffi" "file" "info" "info-domain" "json" "launcher" "net" "openssl" "pkg" "planet" "racket" "rackunit" "raco" "reader" "realm" "s-exp" "scheme" "setup" "srfi" "syntax" "unstable" "version" "xml"))

Recent Internal Errors: 
Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((main) (test)) #t))
>Description:
Example:

  #lang racket
  (require syntax/stx)
  (stx->list 3.41)
  (stx->list #'a)

The docs claim that the `stx->list` function has the contract
(-> stx-list? (or/c list? #f)) but this does not match the
actual behavior.

The actual function will take any value and return it if it's
not a stx-list and not syntax.

If the argument is a stx-list it will return a list of either syntax
or anything.

If the argument is syntax, but not a stx-list, it will return #f.
>How-To-Repeat:

>Fix:
