From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Fri Nov  2 15:29:41 2012
Received: from mail-ia0-f172.google.com (mail-ia0-f172.google.com [209.85.210.172])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id qA2JTcuC006690
	for <bugs@bugs.plt-scheme.org>; Fri, 2 Nov 2012 15:29:38 -0400
Message-Id: <201211021929.qA2JTWdv006684@champlain.ccs.neu.edu>
Date: Fri, 2 Nov 2012 15:29:32 -0400
From: asumu@ccs.neu.edu
To: bugs@racket-lang.org
Subject: Interactions area vs. REPL vs. definitions area for submodule require

>Number:         13229
>Category:       all
>Synopsis:       Interactions area vs. REPL vs. definitions area for submodule require
>Class:          sw-bug
>Responsible:    nobody
>Severity:       non-critical
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Fri Nov 02 15:32:01 -0400 2012
>Last-Modified:  Fri Nov 02 16:08:01 -0400 2012
>Originator:     Asumu Takikawa
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.3.1.4--2012-11-02(7db2abb3/d/tr-control)
>Environment:
unix "Linux willamette 3.2.0-2-amd64 #1 SMP Mon May 21 17:45:41 UTC 2012 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 383228016
Links: (links) = ("pict-utils" "gcr-bug" "clojure"); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()


Collections:
("/home/asumu/plt/racket-git/add-on/5.3.1.4/collects"
 (non-existent-path))
("/home/asumu/plt/racket-git/collects"
 ("graphics" "future-visualizer" "frtime" "framework" "make" "sgl" "launcher" "compiler" "mred" "srfi" "setup" "wxme" "honu" "mrlib" "scriblib" "r5rs" "trace" "info-domain" "typed-racket" "racket" "net" "file" "slideshow" "string-constants" "racklog" "openssl" "macro-debugger" "xml" "mysterx" "html" "drscheme" "at-exp" "tmp2" "hierlist" "profile" "icons" "sirmail" "readline" "config" "syntax" "scribble" "texpict" "mzlib" "typed" "web-server" "plai" "handin-client" "rnrs" "eopl" "drracket" "handin-server" "planet" "syntax-color" "repo-time-stamp" "test-engine" "games" "picturing-programs" "ffi" "xrepl" "images" "errortrace" "json" "tmp3" "data" "unstable" "tmp1" "NormalizationTest.txt" "r6rs" "browser" "2htdp" "parser-tools" "slatex" "scheme" "compatibility" "algol60" "scribblings" "stepper" "lazy" "rackunit" "gui-debugger" "plot" "help" "meta" "redex" "version" "defaults" "s-exp" "tests" "swindle" "mzscheme" "deinprogramm" "raco" "tmp0-filelib" "preprocessor" "typed-scheme" !
 "db" "embedded-gui" "lang" "dynext" "reader" ".gitignore" "htdp" "schemeunit" "teachpack" "mzcom" "datalog"))

Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((main) (test))))
>Description:
The following program in the DrRacket definitions area works:

  #lang racket
  (module foo racket
    (define x 3)
    (provide x))
    
    (require 'foo)
    x ; produces 3

In the DrRacket interactions area, however, the require doesn't work:

> (require 'foo)
require: unknown module
  module name: #<resolved-module-path:'foo>

In the command-line REPL it's fine:

$ racket
Welcome to Racket v5.3.1.4.
-> (module foo racket
     (define x 3)
     (provide x))
-> (require 'foo)
-> x
3
>How-To-Repeat:

>Fix:
>Audit-Trail:
From: Eli Barzilay <eli@barzilay.org>
To: asumu@ccs.neu.edu, bugs@racket-lang.org
Cc: bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/13229: Interactions area vs. REPL vs. definitions area for submodule require
Date: Fri, 2 Nov 2012 15:50:05 -0400

 20 minutes ago, asumu@ccs.neu.edu wrote:
 > The following program in the DrRacket definitions area works:
 > [...]
 
 The problem is unrelated to drracket -- it's the fact that `require'
 is not seeing the locally defined submodules when it's in the context
 of a module.  In racket this is visible with `enter':
 
   -> (module blah racket
        (module foo racket
          (define x 3)
          (provide x)))
   -> ,en 'blah
   'blah> (require 'foo)
   ; require: unknown module
   [...]
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!
From: Ryan Culpepper <ryan@cs.utah.edu>
To: Eli Barzilay <eli@barzilay.org>
Cc: asumu@ccs.neu.edu, bugs@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/13229: Interactions area vs. REPL vs. definitions
 area for submodule require
Date: Fri, 02 Nov 2012 16:02:03 -0400

 On 11/02/2012 03:50 PM, Eli Barzilay wrote:
 > 20 minutes ago, asumu@ccs.neu.edu wrote:
 >> The following program in the DrRacket definitions area works:
 >> [...]
 >
 > The problem is unrelated to drracket -- it's the fact that `require'
 > is not seeing the locally defined submodules when it's in the context
 > of a module.  In racket this is visible with `enter':
 >
 >    -> (module blah racket
 >         (module foo racket
 >           (define x 3)
 >           (provide x)))
 >    -> ,en 'blah
 >    'blah> (require 'foo)
 >    ; require: unknown module
 >    [...]
 
 Not exactly, because (require (submod "." foo)) works. It's only the 
 quote abbreviation that is broken. I agree that it's not specific to 
 DrRacket, though.
 
 Ryan
 
From: Eli Barzilay <eli@barzilay.org>
To: Ryan Culpepper <ryan@cs.utah.edu>
Cc: asumu@ccs.neu.edu, bugs@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/13229: Interactions area vs. REPL vs. definitions
 area for submodule require
Date: Fri, 2 Nov 2012 16:06:32 -0400

 A few minutes ago, Ryan Culpepper wrote:
 > On 11/02/2012 03:50 PM, Eli Barzilay wrote:
 > > 20 minutes ago, asumu@ccs.neu.edu wrote:
 > >> The following program in the DrRacket definitions area works:
 > >> [...]
 > >
 > > The problem is unrelated to drracket -- it's the fact that `require'
 > > is not seeing the locally defined submodules when it's in the context
 > > of a module.  In racket this is visible with `enter':
 > >
 > >    -> (module blah racket
 > >         (module foo racket
 > >           (define x 3)
 > >           (provide x)))
 > >    -> ,en 'blah
 > >    'blah> (require 'foo)
 > >    ; require: unknown module
 > >    [...]
 > 
 > Not exactly, because (require (submod "." foo)) works. It's only the 
 > quote abbreviation that is broken. I agree that it's not specific to 
 > DrRacket, though.
 
 (Oh, right, I didn't try that.  And yes, I wanted to avoid the drr
 confusion.)
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!
