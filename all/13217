From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Tue Oct 30 16:13:50 2012
Received: from mail-ie0-f172.google.com (mail-ie0-f172.google.com [209.85.223.172])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id q9UKDkcl026840
	for <bugs@bugs.plt-scheme.org>; Tue, 30 Oct 2012 16:13:46 -0400
Message-Id: <201210302013.q9UKDgdY026827@champlain.ccs.neu.edu>
Date: Tue, 30 Oct 2012 16:13:42 -0400
From: kieron.hardy@gmail.com
To: bugs@racket-lang.org
Subject: Allow null label for check-box%

>Number:         13217
>Category:       all
>Synopsis:       Allow null label for check-box%
>Class:          change-request
>Responsible:    nobody
>Severity:       non-critical
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Tue Oct 30 16:16:01 -0400 2012
>Originator:     Kieron Hardy
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.3.1.2--2012-10-26(8bc3b70/a)
>Environment:
windows "Windows NT 6.0 (Build 6002) Service Pack 2" (win32\i386\3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 642032036
Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()


Collections:
("C:\\Users\\khardy\\AppData\\Roaming\\Racket\\5.3.1.2\\collects"
 (non-existent-path))
("c:\\tools\\Racket\\Racket-5.3.1.2\\collects"
 ("2htdp" "algol60" "at-exp" "browser" "compatibility" "compiler" "config" "data" "datalog" "db" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "future-visualizer" "games" "graphics" "gui-debugger" "help" "hierlist" "htdp" "html" "icons" "images" "info-domain" "json" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "picturing-programs" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "redex" "repo-time-stamp" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-engine" "texpict" "trace" "typed" "typed-racket" "typed-scheme" "unstable" "version" "web-server" "wxme" "xml" "xrepl"))
("C:\\Users\\khardy\\AppData\\Roaming\\Racket\\5.3.1.2\\collects"
 (non-existent-path))
("c:\\tools\\Racket\\Racket-5.3.1.2\\collects"
 ("2htdp" "algol60" "at-exp" "browser" "compatibility" "compiler" "config" "data" "datalog" "db" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "future-visualizer" "games" "graphics" "gui-debugger" "help" "hierlist" "htdp" "html" "icons" "images" "info-domain" "json" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "picturing-programs" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "redex" "repo-time-stamp" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-engine" "texpict" "trace" "typed" "typed-racket" "typed-scheme" "unstable" "version" "web-server" "wxme" "xml" "xrepl"))
("c:\\home\\RacketUtils"
 (".git" ".gitignore" "console" "gui"))

Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug/profile) (default) #() "#lang racket\n" #f #t ((main) (test))))
>Description:
Currently the check-box% requires either a bitmap or string label. Please extend to allow creating a check-box% with [label #f], i.e. to specify no label at all.

The following code uses an empty string for the label and a small dashed rectangle appears next to the check-box% when the check-box% has focus (i.e. the empty label is highlighted), and this looks a little strange and distracting. 
>How-To-Repeat:
#lang racket

(require racket/gui)

(define f (new frame% [parent #f] [label "Test check-box%"]))

(define c (new check-box% [parent f] [label ""]))

(send f show #t)
>Fix:
