From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Tue Jun 11 17:29:03 2013
Received: from mail-oa0-f47.google.com (mail-oa0-f47.google.com [209.85.219.47])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id r5BLT0a4026525
	for <bugs@bugs.plt-scheme.org>; Tue, 11 Jun 2013 17:29:00 -0400
Message-Id: <201306112128.r5BLSwu2026519@champlain.ccs.neu.edu>
Date: Tue, 11 Jun 2013 17:28:58 -0400
From: asumu@ccs.neu.edu
To: bugs@racket-lang.org
Subject: class introspection hides non-local-member uninterned names

>Number:         13846
>Category:       all
>Synopsis:       class introspection hides non-local-member uninterned names
>Class:          sw-bug
>Responsible:    nobody
>Severity:       non-critical
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Tue Jun 11 17:32:01 -0400 2013
>Originator:     Asumu Takikawa
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.3.4.10--2013-06-11(804dc807/d/tr-classes)
>Environment:
unix "Linux willamette 3.2.0-2-amd64 #1 SMP Mon May 21 17:45:41 UTC 2012 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 571418148
Links: (links) = ("tr-both"); (links #:user? #f) = (); (links #:root? #t) = (#<path:/home/asumu/code/contract-repl>); (links #:user? #f #:root? #t) = ()
raco pkg (show):
Installation-wide:
 [none]
User-specific, all-version:
 Package[*=auto]    Checksum    Source
 contract-repl      #f          (link /home/asumu/code/contract-repl)
User-specific, version-specific (5.3.4.10):
 [none]



Collections:
("/home/asumu/plt/racket-dev/add-on/5.3.4.10/collects"
 (non-existent-path))
("/home/asumu/plt/racket-dev/collects"
 ("graphics" "future-visualizer" "frtime" "framework" "make" "sgl" "launcher" "compiler" "mred" "srfi" "setup" "wxme" "honu" "mrlib" "scriblib" "r5rs" "trace" "info-domain" "typed-racket" "racket" "net" "file" "slideshow" "string-constants" "racklog" "openssl" "macro-debugger" "xml" "mysterx" "html" "drscheme" "at-exp" "hierlist" "profile" "icons" "readline" "config" "syntax" "scribble" "texpict" "mzlib" "realm" "math" "typed" "web-server" "plai" "rnrs" "eopl" "drracket" "planet" "syntax-color" "repo-time-stamp" "test-engine" "games" "picturing-programs" "ffi" "xrepl" "images" "errortrace" "json" "data" "unstable" "r6rs" "browser" "2htdp" "parser-tools" "slatex" "scheme" "compatibility" "algol60" "scribblings" "pkg" "stepper" "lazy" "rackunit" "gui-debugger" "plot" "help" "pict" "meta" "redex" "version" "defaults" "s-exp" "tests" "swindle" "mzscheme" "deinprogramm" "raco" "preprocessor" "typed-scheme" "db" "embedded-gui" "lang" "dynext" "reader" ".gitignore" "htdp" "schemeun!
 it" "teachpack" "mzcom" "datalog"))

Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t none) (default) #() "#lang racket\n" #t #f ((main) (test)) #t))
>Description:
When a class or object is reflectively accessed for its list of
field or method names, the members that are defined with a local
member name are left out.

This filtering is too coarse-grained, however, since *all* names
that are uninterned are hidden. Such names may be generated from
a macro that expands into a class.

An example demonstrating this is attached below:

    #lang racket
    (require (for-syntax syntax/parse))
    (define-syntax (my-class stx)
      (syntax-parse stx
        [(_ superclass e ...)
         #`(class superclass
             e ...
             (field [#,(gensym) 0]
                    [x 0]))]))
    (field-names (new (my-class object% (super-new))))

The last expression returns '(x) and is missing the
gensym-generated field name.
>How-To-Repeat:

>Fix:
