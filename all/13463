From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Mon Jan 28 15:08:58 2013
Received: from mail-ob0-f171.google.com (mail-ob0-f171.google.com [209.85.214.171])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id r0SK8rG0001768
	for <bugs@bugs.plt-scheme.org>; Mon, 28 Jan 2013 15:08:54 -0500
Message-Id: <201301282008.r0SK8pMC001763@champlain.ccs.neu.edu>
Date: Mon, 28 Jan 2013 15:08:51 -0500
From: matthias@ccs.neu.edu
To: bugs@racket-lang.org
Subject: bad error message when ... shows up in expression position 

>Number:         13463
>Category:       all
>Synopsis:       bad error message when ... shows up in expression position
>Class:          sw-bug
>Responsible:    nobody
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Mon Jan 28 15:12:01 -0500 2013
>Originator:     matthias
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.3.2.2--2013-01-28(5808b0c4/d)
>Environment:
macosx "Darwin europeii.westell.com 11.4.2 Darwin Kernel Version 11.4.2: Thu Aug 23 16:25:48 PDT 2012; root:xnu-1699.32.7~1/RELEASE_X86_64 x86_64" (x86_64-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 601734436
Links: (links) = ("Acquire"); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()
Planet2 (show):
Installation-wide:
 [none]
User-specific, all-version:
 [none]
User-specific, version-specific:
 [none]



Collections:
("/Users/matthias/0Unison/collects/"
 ("._.DS_Store" ".DS_Store" "compiled" "date" "finance" "info-domain" "info.ss" "pdf.ss~" "session" "short" "testing" "tll-collects" "utils" "web"))
("/Users/matthias/Library/Racket/5.3.2.2/collects"
 (non-existent-path))
("/Users/matthias/plt/collects"
 (".gitignore" "2htdp" "afm" "algol60" "at-exp" "browser" "combinator-parser" "compatibility" "compiler" "config" "data" "datalog" "db" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "future-visualizer" "games" "graphics" "gui-debugger" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu" "htdp" "html" "icons" "images" "info-domain" "json" "lang" "launcher" "lazy" "macro-debugger" "make" "math" "meta" "mred" "mrlib" "mysterx" "mz" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "picturing-programs" "plai" "planet" "planet2" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raclog" "raco" "racunit" "reader" "readline" "realm" "redex" "repo-time-stamp" "repos-time-stamp" "rnrs" "s-exp" "schelog" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "sirmail" "slatex" "slideshow" "srfi" "srpersist" "stepper" "string-constants" "s!
 windle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tests" "tex2page" "texpict" "tool" "trace" "typed" "typed-racket" "typed-scheme" "unstable" "version" "waterworld" "web-server" "wxme" "xml" "xrepl"))

Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((main) (test))))
>Description:
...: ellipses not allowed as an expression in: (... unsafe-car15)

I don't like the 'unsafe' part nor the 'car' nor the '-15'
>How-To-Repeat:
#lang racket

(define-syntax-rule 
  (define-predicate pred? (edge ((attribute class?) ...) nested? ...))
  ;; ==> 
  (define (pred? x)
    (match x
      [(list 'edge (list-no-order `(attribute ,(? class? attribute)) ...) (? nested? y) ...) #t]
      [else #f])))

(define-predicate foo (bar () number? ...))
>Fix:
