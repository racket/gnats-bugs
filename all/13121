From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Mon Sep 17 23:27:28 2012
Received: from mail-iy0-f172.google.com (mail-iy0-f172.google.com [209.85.210.172])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id q8I3RPYg019673
	for <bugs@bugs.plt-scheme.org>; Mon, 17 Sep 2012 23:27:25 -0400
Message-Id: <201209180327.q8I3RM7b019667@champlain.ccs.neu.edu>
Date: Mon, 17 Sep 2012 23:27:22 -0400
From: asumu@ccs.neu.edu
To: bugs@racket-lang.org
Subject: abort & interaction window in DrRacket

>Number:         13121
>Category:       all
>Synopsis:       abort & interaction window in DrRacket
>Class:          sw-bug
>Responsible:    robby
>Severity:       non-critical
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Mon Sep 17 23:28:01 -0400 2012
>Closed-Date:    Thu Sep 20 19:46:53 -0400 2012
>Last-Modified:  Thu Sep 20 20:08:02 -0400 2012
>Originator:     Asumu Takikawa
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.3.0.24--2012-09-17(59915409/d)
>Environment:
unix "Linux howl 3.2.0-3-amd64 #1 SMP Mon Jul 23 02:45:17 UTC 2012 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 331269872
Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()


Collections:
("/home/asumu/plt/racket-git/add-on/5.3.0.24/collects"
 (non-existent-path))
("/home/asumu/plt/racket-git/collects"
 ("typed" "rnrs" "plot" "version" "frtime" "combinator-parser" "compiler" "framework" "honu" "gui-debugger" "launcher" "srfi" "drscheme" "2htdp" "ffi" "datalog" "plai" "racklog" "compatibility" "tex2page" "scheme" "config" "profile" "algol60" "texpict" "handin-server" "dynext" "errortrace" "db" "mzlib" "make" "file" "sgl" "xrepl" "syntax" "slatex" "browser" "macro-debugger" "xml" "data" "at-exp" "trace" "r6rs" "syntax-color" "web-server" "graphics" "teachpack" "defaults" "racket" "lang" "openssl" "r5rs" "redex" "unstable" "deinprogramm" "mzcom" ".gitignore" "mred" "icons" "htdp" "drracket" "html" "readline" "test-engine" "mysterx" "typed-scheme" "reader" "repo-time-stamp" "handin-client" "games" "string-constants" "typed-racket" "hierlist" "net" "slideshow" "swindle" "sirmail" "schemeunit" "picturing-programs" "meta" "info-domain" "waterworld" "eopl" "setup" "future-visualizer" "tests" "rackunit" "scriblib" "json" "mrlib" "scribble" "mzscheme" "lazy" "preprocessor" "planet" !
 "images" "help" "guibuilder" "test-box-recovery" "wxme" "s-exp" "raco" "srpersist" "parser-tools" "stepper" "scribblings" "embedded-gui"))

Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((main) (test))))
>Description:
An abort with no prompt in 'racket' and DrRacket behave
differently when the value is something the default abort
handler does not expect.

For example, the following produces an error and returns to
the REPL prompt at the command line:

(abort-current-continuation (default-continuation-prompt-tag))
; call-with-continuation-prompt: result arity mismatch;
;  expected number of values not received
;   expected: 1
;   received: 0application of default prompt handler
;   values...:
; [,bt for context]

(BTW, the "received:" part looks wrong in this error)

In DrRacket, this causes the interactions area to hang. You have
to kill execution to get it back. If you provide a non-thunk
value, it still hangs but gives a different error.

In contrast, it's fine if the prompt just doesn't exist in the
continuation:

> (abort-current-continuation (make-continuation-prompt-tag))
abort-current-continuation: continuation includes no prompt with the given tag
  tag: #<continuation-prompt-tag>
>How-To-Repeat:

>Fix:
>Audit-Trail:
From: Robby Findler <robby@eecs.northwestern.edu>
To: asumu@ccs.neu.edu, bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/13121: abort & interaction window in DrRacket
Date: Wed, 19 Sep 2012 06:05:51 -0500

 Is the racket behavior the desired one?
 
 Robby
 
 On Mon, Sep 17, 2012 at 10:28 PM,  <asumu@ccs.neu.edu> wrote:
 > A new problem report is waiting at
 >   http://bugs.racket-lang.org/query/?cmd=view&pr=13121
 >
 > Reported by Asumu Takikawa for release: 5.3.0.24--2012-09-17(59915409/d)
 >
 > *** Description:
 > An abort with no prompt in 'racket' and DrRacket behave
 > differently when the value is something the default abort
 > handler does not expect.
 >
 > For example, the following produces an error and returns to
 > the REPL prompt at the command line:
 >
 > (abort-current-continuation (default-continuation-prompt-tag))
 > ; call-with-continuation-prompt: result arity mismatch;
 > ;  expected number of values not received
 > ;   expected: 1
 > ;   received: 0application of default prompt handler
 > ;   values...:
 > ; [,bt for context]
 >
 > (BTW, the "received:" part looks wrong in this error)
 >
 > In DrRacket, this causes the interactions area to hang. You have
 > to kill execution to get it back. If you provide a non-thunk
 > value, it still hangs but gives a different error.
 >
 > In contrast, it's fine if the prompt just doesn't exist in the
 > continuation:
 >
 >> (abort-current-continuation (make-continuation-prompt-tag))
 > abort-current-continuation: continuation includes no prompt with the given tag
 >   tag: #<continuation-prompt-tag>
 >
 > *** How to repeat:
 >
 >
 > *** Environment:
 > unix "Linux howl 3.2.0-3-amd64 #1 SMP Mon Jul 23 02:45:17 UTC 2012 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
 > Human Language: english
 > (current-memory-use) 331269872
 > Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()
 >
 >
 > Collections:
 > ("/home/asumu/plt/racket-git/add-on/5.3.0.24/collects"
 >  (non-existent-path))
 > ("/home/asumu/plt/racket-git/collects"
 >  ("typed" "rnrs" "plot" "version" "frtime" "combinator-parser" "compiler" "framework" "honu" "gui-debugger" "launcher" "srfi" "drscheme" "2htdp" "ffi" "datalog" "plai" "racklog" "compatibility" "tex2page" "scheme" "config" "profile" "algol60" "texpict" "handin-server" "dynext" "errortrace" "db" "mzlib" "make" "file" "sgl" "xrepl" "syntax" "slatex" "browser" "macro-debugger" "xml" "data" "at-exp" "trace" "r6rs" "syntax-color" "web-server" "graphics" "teachpack" "defaults" "racket" "lang" "openssl" "r5rs" "redex" "unstable" "deinprogramm" "mzcom" ".gitignore" "mred" "icons" "htdp" "drracket" "html" "readline" "test-engine" "mysterx" "typed-scheme" "reader" "repo-time-stamp" "handin-client" "games" "string-constants" "typed-racket" "hierlist" "net" "slideshow" "swindle" "sirmail" "schemeunit" "picturing-programs" "meta" "info-domain" "waterworld" "eopl" "setup" "future-visualizer" "tests" "rackunit" "scriblib" "json" "mrlib" "scribble" "mzscheme" "lazy" "preprocessor" "planet" !
 >  "images" "help" "guibuilder" "test-box-recovery" "wxme" "s-exp" "raco" "srpersist" "parser-tools" "stepper" "scribblings" "embedded-gui"))
 >
 > Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((main) (test))))
 >
 
From: Asumu Takikawa <asumu@ccs.neu.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/13121: abort & interaction window in DrRacket
Date: Wed, 19 Sep 2012 10:55:43 -0400

 On 2012-09-19 06:05:51 -0500, Robby Findler wrote:
 > Is the racket behavior the desired one?
 
 I think so. It's the behavior I expected anyway.
 
 Cheers,
 Asumu
From: Robby Findler <robby@eecs.northwestern.edu>
To: Asumu Takikawa <asumu@ccs.neu.edu>
Cc: Robby Findler <robby@eecs.northwestern.edu>,
        "bugs@racket-lang.org" <bugs@racket-lang.org>,
        "nobody@racket-lang.org" <nobody@racket-lang.org>,
        "bug-notification@racket-lang.org" <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/13121: abort & interaction window in DrRacket
Date: Thu, 20 Sep 2012 10:22:24 -0500

 --f46d0444ecfdbd61f304ca23b087
 Content-Type: text/plain; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 I'm looking into this and I'm not sure what the best thing to do is (and I
 mean that literally, not in the usual "I'm not sure" =3D "you are wrong" ki=
 nd
 of a way ;).
 
 So, here's my thinking. On line 1072 of drracket/private/rep.rkt is
 a call-with-continuation-prompt that I put there with the intention that
 nothing should escape from that point. That is, code outside of that is
 maintaining the REPL loop itself. I'm thinking that that invariant is still
 the right one to maintain.
 
 So, instead of the default handler, what I could do is use this handler:
 
   (=CE=BB args
     (cond
       [(and (pair? args)
             (null? (cdr args))
             (procedure? (car args))
             (procedure-arity-includes? (car args) 0))
        (call-with-continuation-prompt (car args)
                                       (default-continuation-prompt-tag)
                                       #f)]
       [else
        (call-with-continuation-prompt
         (=CE=BB ()
           (call-with-continuation-prompt
            (=CE=BB ()
              (apply
               abort-current-continuation
               (default-continuation-prompt-tag)
               args)))))]))
 
 The idea is that if there is a single thunk argument, then I'm in good
 shape and can just do what the default handler would have done. If not,
 then I know that there will be an error, so I just manufacture the same
 context to be sure I get the right error message, but with an extra prompt
 so I preserve the invariant.
 
 What do you think?
 
 Robby
 
 --f46d0444ecfdbd61f304ca23b087
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 <div>I&#39;m looking into this and I&#39;m not sure what the best thing to =
 do is (and I mean that literally, not in the usual &quot;I&#39;m not sure&q=
 uot; =3D &quot;you are wrong&quot; kind of a way ;).</div><div><br></div><d=
 iv>
 So, here&#39;s my thinking. On line 1072 of drracket/private/rep.rkt is a=
 =C2=A0call-with-continuation-prompt that I put there with the intention tha=
 t nothing should escape from that point. That is, code outside of that is m=
 aintaining the REPL loop itself. I&#39;m thinking that that invariant is st=
 ill the right one to maintain.=C2=A0</div>
 <div><br></div><div>So, instead of the default handler, what I could do is =
 use this handler:</div><div><br></div><div><div>=C2=A0 (=CE=BB args</div><d=
 iv>=C2=A0 =C2=A0 (cond</div><div>=C2=A0 =C2=A0 =C2=A0 [(and (pair? args)</d=
 iv><div>=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 (null? (cdr args))</div>
 <div>=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 (procedure? (car args))</div=
 ><div>=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 (procedure-arity-includes? =
 (car args) 0))</div><div>=C2=A0 =C2=A0 =C2=A0 =C2=A0(call-with-continuation=
 -prompt (car args)=C2=A0</div><div>=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
 =A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =
 =C2=A0 =C2=A0 =C2=A0 (default-continuation-prompt-tag)</div>
 <div>=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 #f)]</div><d=
 iv>=C2=A0 =C2=A0 =C2=A0 [else</div><div>=C2=A0 =C2=A0 =C2=A0 =C2=A0(call-wi=
 th-continuation-prompt</div><div>=C2=A0 =C2=A0 =C2=A0 =C2=A0 (=CE=BB ()</di=
 v><div>=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 (call-with-continuation-prompt</d=
 iv><div>=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(=CE=BB ()</div>
 <div>=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(apply</div><div>=C2=
 =A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 abort-current-continuation=C2=
 =A0</div><div>=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 (default-con=
 tinuation-prompt-tag)</div><div>=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =
 =C2=A0 args)))))]))</div></div><div><br></div><div>The idea is that if ther=
 e is a single thunk argument, then I&#39;m in good shape and can just do wh=
 at the default handler would have done. If not, then I know that there will=
  be an error, so I just manufacture the same context to be sure I get the r=
 ight error message, but with an extra prompt so I preserve the invariant.</=
 div>
 <div><br></div><div>What do you think?</div><div><br></div><div>Robby</div>=
 <div><br></div>
 
 --f46d0444ecfdbd61f304ca23b087--
From: Asumu Takikawa <asumu@ccs.neu.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: "bugs@racket-lang.org" <bugs@racket-lang.org>,
        "nobody@racket-lang.org" <nobody@racket-lang.org>,
        "bug-notification@racket-lang.org" <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/13121: abort & interaction window in DrRacket
Date: Thu, 20 Sep 2012 11:53:42 -0400

 On 2012-09-20 10:22:24 -0500, Robby Findler wrote:
 >    The idea is that if there is a single thunk argument, then I'm in good
 >    shape and can just do what the default handler would have done. If not,
 >    then I know that there will be an error, so I just manufacture the same
 >    context to be sure I get the right error message, but with an extra prompt
 >    so I preserve the invariant.
 
 This handler seems to work well for the first example I gave, but
 doesn't quite cover cases like this:
 
 (abort-current-continuation
  (default-continuation-prompt-tag)
  (lambda ()
    (abort-current-continuation (default-continuation-prompt-tag))))
 
 So I think the handler needs to recursively set itself (and not the
 default one) in the inner prompt.
 
 Also, if you put the abort in the definitions area:
   #lang racket
   (abort-current-continuation (default-continuation-prompt-tag))
 
 it still does something weird to the REPL state.
 
 Cheers,
 Asumu
From: Robby Findler <robby@eecs.northwestern.edu>
To: Asumu Takikawa <asumu@ccs.neu.edu>
Cc: "bugs@racket-lang.org" <bugs@racket-lang.org>,
        "nobody@racket-lang.org" <nobody@racket-lang.org>,
        "bug-notification@racket-lang.org" <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/13121: abort & interaction window in DrRacket
Date: Thu, 20 Sep 2012 11:36:52 -0500

 On Thu, Sep 20, 2012 at 10:53 AM, Asumu Takikawa <asumu@ccs.neu.edu> wrote:
 > On 2012-09-20 10:22:24 -0500, Robby Findler wrote:
 >>    The idea is that if there is a single thunk argument, then I'm in good
 >>    shape and can just do what the default handler would have done. If not,
 >>    then I know that there will be an error, so I just manufacture the same
 >>    context to be sure I get the right error message, but with an extra prompt
 >>    so I preserve the invariant.
 >
 > This handler seems to work well for the first example I gave, but
 > doesn't quite cover cases like this:
 >
 > (abort-current-continuation
 >  (default-continuation-prompt-tag)
 >  (lambda ()
 >    (abort-current-continuation (default-continuation-prompt-tag))))
 >
 > So I think the handler needs to recursively set itself (and not the
 > default one) in the inner prompt.
 
 Oh, right.
 
 Would that possibly lead to infinite loops?
 
 > Also, if you put the abort in the definitions area:
 >   #lang racket
 >   (abort-current-continuation (default-continuation-prompt-tag))
 >
 > it still does something weird to the REPL state.
 
 Oh, sorry. I mean to say that I think that this one's just the way
 things work. If you abort there, then #%top-interaction isn't defined,
 so it is just like you're using a language without #%top-interaction,
 which is how the REPL behaves in that case.
 
 ... that is, I don't think it is possible to catch that abort from
 outside the module and still get a binding for #%top-interaction from
 the module (unless I do something like discard the module body and try
 to build a repl from just the "#lang racket" part of the program).
 
 Robby
From: Asumu Takikawa <asumu@ccs.neu.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: "bugs@racket-lang.org" <bugs@racket-lang.org>,
        "nobody@racket-lang.org" <nobody@racket-lang.org>,
        "bug-notification@racket-lang.org" <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/13121: abort & interaction window in DrRacket
Date: Thu, 20 Sep 2012 16:51:25 -0400

 On 2012-09-20 11:36:52 -0500, Robby Findler wrote:
 > Oh, right.
 >
 > Would that possibly lead to infinite loops?
 
 Yes, it could. For example:
 
   (define (keep-aborting)
     (abort-current-continuation (default-continuation-prompt-tag)
                                 (lambda () (keep-aborting))))
   (keep-aborting)
 
 But you can already do this with the default prompt handler:
 
   (call-with-continuation-prompt (lambda () (keep-aborting)))
 
 I don't think it'll loop unless you specifically pass a thunk that keeps
 aborting repeatedly.
 
 Cheers,
 Asumu
Responsible changed from "nobody" to "robby" by robby@racket-lang.org at Thu, 20 Sep 2012 19:46:53 -0400
Reason>>> A commit by robby@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/a6d74c8e3b
State changed from "open" to "closed" by robby@racket-lang.org at Thu, 20 Sep 2012 19:46:53 -0400
Reason>>> A commit by robby@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/a6d74c8e3b
From: Robby Findler <robby@eecs.northwestern.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: Asumu Takikawa <asumu@ccs.neu.edu>,
        "bugs@racket-lang.org" <bugs@racket-lang.org>,
        "nobody@racket-lang.org" <nobody@racket-lang.org>,
        "bug-notification@racket-lang.org" <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/13121: abort & interaction window in DrRacket
Date: Thu, 20 Sep 2012 18:47:11 -0500

 --e89a8fb2052cfe388404ca2abd0e
 Content-Type: text/plain; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 Well, yes, of course loops can happen where you have things like this:
 
 (letrec ([f
              (=CE=BB ()
                (abort-current-continuation
                 (default-continuation-prompt-tag)
                 f))])
      (f))
 
 But on another careful reading of the docs, that seems to be just the way
 things work, and the racket repl also loops with that expression.
 
 Okay, thanks for the help!
 
 Robby
 
 --e89a8fb2052cfe388404ca2abd0e
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 <div>Well, yes, of course loops can happen where you have things like this:=
 </div><div><br></div><div><div>(letrec ([f</div><div>=C2=A0 =C2=A0 =C2=A0 =
 =C2=A0 =C2=A0 =C2=A0 =C2=A0(=CE=BB ()</div><div>=C2=A0 =C2=A0 =C2=A0 =C2=A0=
  =C2=A0 =C2=A0 =C2=A0 =C2=A0(abort-current-continuation</div><div>=C2=A0 =
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 (default-continuation-prom=
 pt-tag)</div>
 <div>=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 f))])</div><di=
 v>=C2=A0 =C2=A0 =C2=A0(f))</div></div><div><br></div><div>But on another ca=
 reful reading of the docs, that seems to be just the way things work, and t=
 he racket repl also loops with that expression.</div>
 <div><br></div><div>Okay, thanks for the help!</div><div><br></div><div>Rob=
 by</div>
 
 --e89a8fb2052cfe388404ca2abd0e--
From: Robby Findler <robby@eecs.northwestern.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: Asumu Takikawa <asumu@ccs.neu.edu>,
        "bugs@racket-lang.org" <bugs@racket-lang.org>,
        "nobody@racket-lang.org" <nobody@racket-lang.org>,
        "bug-notification@racket-lang.org" <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/13121: abort & interaction window in DrRacket
Date: Thu, 20 Sep 2012 19:04:46 -0500

 (Sorry-- looks like I missed your message from a few hours ago.)
 
 On Thu, Sep 20, 2012 at 6:47 PM, Robby Findler
 <robby@eecs.northwestern.edu> wrote:
 > Well, yes, of course loops can happen where you have things like this:
 >
 > (letrec ([f
 >              (λ ()
 >                (abort-current-continuation
 >                 (default-continuation-prompt-tag)
 >                 f))])
 >      (f))
 >
 > But on another careful reading of the docs, that seems to be just the way
 > things work, and the racket repl also loops with that expression.
 >
 > Okay, thanks for the help!
 >
 > Robby
 
