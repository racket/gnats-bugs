From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Sun Nov 17 17:17:02 2013
Received: from mail-ob0-f181.google.com (mail-ob0-f181.google.com [209.85.214.181])
	by winooski.ccs.neu.edu (8.14.7/8.14.7) with ESMTP id rAHMGxlB012698
	for <bugs@bugs.plt-scheme.org>; Sun, 17 Nov 2013 17:16:59 -0500
Message-Id: <201311172216.rAHMGuG0012691@winooski.ccs.neu.edu>
Date: Sun, 17 Nov 2013 17:16:56 -0500
From: s@xss.de
To: bugs@racket-lang.org
Subject: Drag and Drop errors in spider solitaire

>Number:         14164
>Category:       all
>Synopsis:       Drag and Drop errors in spider solitaire
>Class:          sw-bug
>Responsible:    robby
>Severity:       non-critical
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Sun Nov 17 17:20:01 -0500 2013
>Closed-Date:    Sun Nov 17 17:34:22 -0500 2013
>Last-Modified:  Sun Nov 17 18:04:01 -0500 2013
>Originator:     Stefan Schmiedl
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.90.0.11
>Environment:
unix "Linux tuxedo 3.12.0-gentoo-05 #8 SMP Wed Nov 13 14:32:15 CET 2013 x86_64 Intel(R) Core(TM) i7-3630QM CPU @ 2.40GHz GenuineIntel GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 392228044
Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()
raco pkg (show):
/home/stefan/repos/racket/racket/share/devel-pkgs:
 Package              Checksum    Source
 main-distribution    #f          (static-link ../../../pkgs/main-distribution)
 plt-services         #f          (static-link ../../../pkgs/plt-services)
 racket-lib           #f          (static-link ../../../pkgs/racket-pkgs/racket-lib)
 [201 auto-installed packages not shown]
Installation-wide:
 [none]
User-specific for installation "development":
 [none]



Collections:
("/home/stefan/.racket/development/collects"
 (non-existent-path))
("/home/stefan/repos/racket/racket/collects"
 (".gitignore" "acks" "compiler" "data" "db" "dynext" "ffi" "file" "info" "info-domain" "json" "launcher" "net" "openssl" "pkg" "planet" "racket" "rackunit" "raco" "reader" "realm" "s-exp" "scheme" "setup" "srfi" "syntax" "unstable" "version" "xml"))

Recent Internal Errors: 
Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((main) (test)) #t))
>Description:
Dragging cards (or selecting the source and target by two individual clicks) sometimes raised errors like the following:

car: contract violation
  expected: pair?
  given: '()
  context...:
   /home/stefan/repos/racket/pkgs/games/spider/spider.rkt:213:26
   /home/stefan/repos/racket/pkgs/games/cards/classes.rkt:248:21
...

car: contract violation
  expected: pair?
  given: '()
  context...:
   /home/stefan/repos/racket/pkgs/games/spider/spider.rkt:218:7
   /home/stefan/repos/racket/pkgs/games/cards/classes.rkt:290:18
...
>How-To-Repeat:
How about a patch instead? The problem seems to be that drag-ok? is sometimes called with an empty list. Wrapping the let with (and pair? cards ...) avoids the fatal code path while preserving behavior.

diff --git a/pkgs/games/spider/spider.rkt b/pkgs/games/spider/spider.rkt
index 21cccc9..3af63d0 100644
--- a/pkgs/games/spider/spider.rkt
+++ b/pkgs/games/spider/spider.rkt
@@ -195,12 +195,13 @@
       #f)))
 
 (define (drag-ok? cards i)
-  (let ([c (car cards)]
-        [l (vector-ref stacks i)])
-    (and l
-         (or (null? l)
-             (= (send (car l) get-value)
-                (add1 (send c get-value)))))))
+  (and (pair? cards)
+       (let ([c (car cards)]
+             [l (vector-ref stacks i)])
+         (and l
+              (or (null? l)
+                  (= (send (car l) get-value)
+                     (add1 (send c get-value))))))))
 
 (let loop ([i 0])
   (unless (= i (vector-length stacks))
>Fix:
>Audit-Trail:
Responsible changed from "nobody" to "robby" by robby@racket-lang.org at Sun, 17 Nov 2013 17:34:22 -0500
Reason>>> A commit by robby@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/4db57816fc
State changed from "open" to "closed" by robby@racket-lang.org at Sun, 17 Nov 2013 17:34:22 -0500
Reason>>> A commit by robby@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/4db57816fc
  | Guard drag-ok? so it handles the empty list properly
  | 
  | change suggested by Stefan Schmiedl; closes PR 14164
  | 
  | It seems a bit strange that a region callback can
  | be invoked when there are no cards, but looking at
  | the card library it isn't obvious that the list
  | is supposed to be non-empty, so probably better
  | to just be "defensive" in this case, rather than
  | attempting to tighten the contracts

From: Robby Findler <robby@eecs.northwestern.edu>
To: Stefan Schmiedl <s@xss.de>, bugs <bugs@racket-lang.org>
Cc: nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/14164: Drag and Drop errors in spider solitaire
Date: Sun, 17 Nov 2013 16:34:57 -0600

 --089e015383e4866f0804eb670aa2
 Content-Type: text/plain; charset=UTF-8
 
 It seems a bit strange that there could be an empty list of cards that get
 dragged somewhere, but I see that the docs for region callbacks allow the
 empty list to appear currently.
 
 Looking that the cards library, it isn't clear how to make that list always
 be non-empty so I've just applied your patch.
 
 Thanks!!
 
 Robby
 
 
 On Sun, Nov 17, 2013 at 4:20 PM, <s@xss.de> wrote:
 
 > A new problem report is waiting at
 >   http://bugs.racket-lang.org/query/?cmd=view&pr=14164
 >
 > Reported by Stefan Schmiedl for release: 5.90.0.11
 >
 > *** Description:
 > Dragging cards (or selecting the source and target by two individual
 > clicks) sometimes raised errors like the following:
 >
 > car: contract violation
 >   expected: pair?
 >   given: '()
 >   context...:
 >    /home/stefan/repos/racket/pkgs/games/spider/spider.rkt:213:26
 >    /home/stefan/repos/racket/pkgs/games/cards/classes.rkt:248:21
 > ...
 >
 > car: contract violation
 >   expected: pair?
 >   given: '()
 >   context...:
 >    /home/stefan/repos/racket/pkgs/games/spider/spider.rkt:218:7
 >    /home/stefan/repos/racket/pkgs/games/cards/classes.rkt:290:18
 > ...
 >
 > *** How to repeat:
 > How about a patch instead? The problem seems to be that drag-ok? is
 > sometimes called with an empty list. Wrapping the let with (and pair? cards
 > ...) avoids the fatal code path while preserving behavior.
 >
 > diff --git a/pkgs/games/spider/spider.rkt b/pkgs/games/spider/spider.rkt
 > index 21cccc9..3af63d0 100644
 > --- a/pkgs/games/spider/spider.rkt
 > +++ b/pkgs/games/spider/spider.rkt
 > @@ -195,12 +195,13 @@
 >        #f)))
 >
 >  (define (drag-ok? cards i)
 > -  (let ([c (car cards)]
 > -        [l (vector-ref stacks i)])
 > -    (and l
 > -         (or (null? l)
 > -             (= (send (car l) get-value)
 > -                (add1 (send c get-value)))))))
 > +  (and (pair? cards)
 > +       (let ([c (car cards)]
 > +             [l (vector-ref stacks i)])
 > +         (and l
 > +              (or (null? l)
 > +                  (= (send (car l) get-value)
 > +                     (add1 (send c get-value))))))))
 >
 >  (let loop ([i 0])
 >    (unless (= i (vector-length stacks))
 >
 > *** Environment:
 > unix "Linux tuxedo 3.12.0-gentoo-05 #8 SMP Wed Nov 13 14:32:15 CET 2013
 > x86_64 Intel(R) Core(TM) i7-3630QM CPU @ 2.40GHz GenuineIntel GNU/Linux"
 > (x86_64-linux/3m) (get-display-depth) = 32
 > Human Language: english
 > (current-memory-use) 392228044
 > Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = ();
 > (links #:user? #f #:root? #t) = ()
 > raco pkg (show):
 > /home/stefan/repos/racket/racket/share/devel-pkgs:
 >  Package              Checksum    Source
 >  main-distribution    #f          (static-link
 > ../../../pkgs/main-distribution)
 >  plt-services         #f          (static-link ../../../pkgs/plt-services)
 >  racket-lib           #f          (static-link
 > ../../../pkgs/racket-pkgs/racket-lib)
 >  [201 auto-installed packages not shown]
 > Installation-wide:
 >  [none]
 > User-specific for installation "development":
 >  [none]
 >
 >
 >
 > Collections:
 > ("/home/stefan/.racket/development/collects"
 >  (non-existent-path))
 > ("/home/stefan/repos/racket/racket/collects"
 >  (".gitignore" "acks" "compiler" "data" "db" "dynext" "ffi" "file" "info"
 > "info-domain" "json" "launcher" "net" "openssl" "pkg" "planet" "racket"
 > "rackunit" "raco" "reader" "realm" "s-exp" "scheme" "setup" "srfi" "syntax"
 > "unstable" "version" "xml"))
 >
 > Recent Internal Errors:
 > Computer Language: (("Determine language from source") (#(#t print
 > mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((main)
 > (test)) #t))
 >
 >
 
 --089e015383e4866f0804eb670aa2
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 <div dir=3D"ltr">It seems a bit strange that there could be an empty list o=
 f cards that get dragged somewhere, but I see that the docs for region call=
 backs allow the empty list to appear currently.<div><br></div><div>Looking =
 that the cards library, it isn&#39;t clear how to make that list always be =
 non-empty so I&#39;ve just applied your patch.</div>
 <div><br></div><div>Thanks!!</div><div><br></div><div>Robby</div></div><div=
  class=3D"gmail_extra"><br><br><div class=3D"gmail_quote">On Sun, Nov 17, 2=
 013 at 4:20 PM,  <span dir=3D"ltr">&lt;<a href=3D"mailto:s@xss.de" target=
 =3D"_blank">s@xss.de</a>&gt;</span> wrote:<br>
 <blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1p=
 x #ccc solid;padding-left:1ex">A new problem report is waiting at<br>
 =C2=A0 <a href=3D"http://bugs.racket-lang.org/query/?cmd=3Dview&amp;pr=3D14=
 164" target=3D"_blank">http://bugs.racket-lang.org/query/?cmd=3Dview&amp;pr=
 =3D14164</a><br>
 <br>
 Reported by Stefan Schmiedl for release: 5.90.0.11<br>
 <br>
 *** Description:<br>
 Dragging cards (or selecting the source and target by two individual clicks=
 ) sometimes raised errors like the following:<br>
 <br>
 car: contract violation<br>
 =C2=A0 expected: pair?<br>
 =C2=A0 given: &#39;()<br>
 =C2=A0 context...:<br>
 =C2=A0 =C2=A0/home/stefan/repos/racket/pkgs/games/spider/spider.rkt:213:26<=
 br>
 =C2=A0 =C2=A0/home/stefan/repos/racket/pkgs/games/cards/classes.rkt:248:21<=
 br>
 ...<br>
 <br>
 car: contract violation<br>
 =C2=A0 expected: pair?<br>
 =C2=A0 given: &#39;()<br>
 =C2=A0 context...:<br>
 =C2=A0 =C2=A0/home/stefan/repos/racket/pkgs/games/spider/spider.rkt:218:7<b=
 r>
 =C2=A0 =C2=A0/home/stefan/repos/racket/pkgs/games/cards/classes.rkt:290:18<=
 br>
 ...<br>
 <br>
 *** How to repeat:<br>
 How about a patch instead? The problem seems to be that drag-ok? is sometim=
 es called with an empty list. Wrapping the let with (and pair? cards ...) a=
 voids the fatal code path while preserving behavior.<br>
 <br>
 diff --git a/pkgs/games/spider/spider.rkt b/pkgs/games/spider/spider.rkt<br=
 >
 index 21cccc9..3af63d0 100644<br>
 --- a/pkgs/games/spider/spider.rkt<br>
 +++ b/pkgs/games/spider/spider.rkt<br>
 @@ -195,12 +195,13 @@<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0#f)))<br>
 <br>
 =C2=A0(define (drag-ok? cards i)<br>
 - =C2=A0(let ([c (car cards)]<br>
 - =C2=A0 =C2=A0 =C2=A0 =C2=A0[l (vector-ref stacks i)])<br>
 - =C2=A0 =C2=A0(and l<br>
 - =C2=A0 =C2=A0 =C2=A0 =C2=A0 (or (null? l)<br>
 - =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 (=3D (send (car l) get-value)<b=
 r>
 - =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(add1 (send c get-=
 value)))))))<br>
 + =C2=A0(and (pair? cards)<br>
 + =C2=A0 =C2=A0 =C2=A0 (let ([c (car cards)]<br>
 + =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 [l (vector-ref stacks i)])<br>
 + =C2=A0 =C2=A0 =C2=A0 =C2=A0 (and l<br>
 + =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(or (null? l)<br>
 + =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(=3D (send =
 (car l) get-value)<br>
 + =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 (ad=
 d1 (send c get-value))))))))<br>
 <br>
 =C2=A0(let loop ([i 0])<br>
 =C2=A0 =C2=A0(unless (=3D i (vector-length stacks))<br>
 <br>
 *** Environment:<br>
 unix &quot;Linux tuxedo 3.12.0-gentoo-05 #8 SMP Wed Nov 13 14:32:15 CET 201=
 3 x86_64 Intel(R) Core(TM) i7-3630QM CPU @ 2.40GHz GenuineIntel GNU/Linux&q=
 uot; (x86_64-linux/3m) (get-display-depth) =3D 32<br>
 Human Language: english<br>
 (current-memory-use) 392228044<br>
 Links: (links) =3D (); (links #:user? #f) =3D (); (links #:root? #t) =3D ()=
 ; (links #:user? #f #:root? #t) =3D ()<br>
 raco pkg (show):<br>
 /home/stefan/repos/racket/racket/share/devel-pkgs:<br>
 =C2=A0Package =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Checksum =C2=
 =A0 =C2=A0Source<br>
 =C2=A0main-distribution =C2=A0 =C2=A0#f =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(=
 static-link ../../../pkgs/main-distribution)<br>
 =C2=A0plt-services =C2=A0 =C2=A0 =C2=A0 =C2=A0 #f =C2=A0 =C2=A0 =C2=A0 =C2=
 =A0 =C2=A0(static-link ../../../pkgs/plt-services)<br>
 =C2=A0racket-lib =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 #f =C2=A0 =C2=A0 =C2=A0=
  =C2=A0 =C2=A0(static-link ../../../pkgs/racket-pkgs/racket-lib)<br>
 =C2=A0[201 auto-installed packages not shown]<br>
 Installation-wide:<br>
 =C2=A0[none]<br>
 User-specific for installation &quot;development&quot;:<br>
 =C2=A0[none]<br>
 <br>
 <br>
 <br>
 Collections:<br>
 (&quot;/home/stefan/.racket/development/collects&quot;<br>
 =C2=A0(non-existent-path))<br>
 (&quot;/home/stefan/repos/racket/racket/collects&quot;<br>
 =C2=A0(&quot;.gitignore&quot; &quot;acks&quot; &quot;compiler&quot; &quot;d=
 ata&quot; &quot;db&quot; &quot;dynext&quot; &quot;ffi&quot; &quot;file&quot=
 ; &quot;info&quot; &quot;info-domain&quot; &quot;json&quot; &quot;launcher&=
 quot; &quot;net&quot; &quot;openssl&quot; &quot;pkg&quot; &quot;planet&quot=
 ; &quot;racket&quot; &quot;rackunit&quot; &quot;raco&quot; &quot;reader&quo=
 t; &quot;realm&quot; &quot;s-exp&quot; &quot;scheme&quot; &quot;setup&quot;=
  &quot;srfi&quot; &quot;syntax&quot; &quot;unstable&quot; &quot;version&quo=
 t; &quot;xml&quot;))<br>
 
 <br>
 Recent Internal Errors:<br>
 Computer Language: ((&quot;Determine language from source&quot;) (#(#t prin=
 t mixed-fraction-e #f #t debug) (default) #() &quot;#lang racket\n&quot; #t=
  #t ((main) (test)) #t))<br>
 <br>
 </blockquote></div><br></div>
 
 --089e015383e4866f0804eb670aa2--
From: Stefan Schmiedl <s@xss.de>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: bugs <bugs@racket-lang.org>, nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/14164: Drag and Drop errors in spider solitaire
Date: Mon, 18 Nov 2013 00:03:12 +0100

 Robby Findler (17.11. 16:34):
 
 > It seems a bit strange that there could be an empty list of cards that get
 > dragged somewhere, but I see that the docs for region callbacks allow the
 > empty list to appear currently.
 > 
 > Looking that the cards library, it isn't clear how to make that list always
 > be non-empty so I've just applied your patch.
 
 When I'm playing too fast for my notebook (as if...) I sometimes seem
 to "drop" cards I was dragging. So it could very well be a combination
 of several "weird" circumstances that are not easily reproduced.
 
 The hardest part was _not_ setting the severity in the bug report to
 Critical :-)
 
 Thanks,
 s.
 
 > 
 > Thanks!!
 > 
 > Robby
 > 
 > 
 > On Sun, Nov 17, 2013 at 4:20 PM, <s@xss.de> wrote:
 > 
 > > A new problem report is waiting at
 > >   http://bugs.racket-lang.org/query/?cmd=view&pr=14164
 > >
 > > Reported by Stefan Schmiedl for release: 5.90.0.11
 > >
 > > *** Description:
 > > Dragging cards (or selecting the source and target by two individual
 > > clicks) sometimes raised errors like the following:
 > >
 > > car: contract violation
 > >   expected: pair?
 > >   given: '()
 > >   context...:
 > >    /home/stefan/repos/racket/pkgs/games/spider/spider.rkt:213:26
 > >    /home/stefan/repos/racket/pkgs/games/cards/classes.rkt:248:21
 > > ...
 > >
 > > car: contract violation
 > >   expected: pair?
 > >   given: '()
 > >   context...:
 > >    /home/stefan/repos/racket/pkgs/games/spider/spider.rkt:218:7
 > >    /home/stefan/repos/racket/pkgs/games/cards/classes.rkt:290:18
 > > ...
 > >
 > > *** How to repeat:
 > > How about a patch instead? The problem seems to be that drag-ok? is
 > > sometimes called with an empty list. Wrapping the let with (and pair? cards
 > > ...) avoids the fatal code path while preserving behavior.
 > >
 > > diff --git a/pkgs/games/spider/spider.rkt b/pkgs/games/spider/spider.rkt
 > > index 21cccc9..3af63d0 100644
 > > --- a/pkgs/games/spider/spider.rkt
 > > +++ b/pkgs/games/spider/spider.rkt
 > > @@ -195,12 +195,13 @@
 > >        #f)))
 > >
 > >  (define (drag-ok? cards i)
 > > -  (let ([c (car cards)]
 > > -        [l (vector-ref stacks i)])
 > > -    (and l
 > > -         (or (null? l)
 > > -             (= (send (car l) get-value)
 > > -                (add1 (send c get-value)))))))
 > > +  (and (pair? cards)
 > > +       (let ([c (car cards)]
 > > +             [l (vector-ref stacks i)])
 > > +         (and l
 > > +              (or (null? l)
 > > +                  (= (send (car l) get-value)
 > > +                     (add1 (send c get-value))))))))
 > >
 > >  (let loop ([i 0])
 > >    (unless (= i (vector-length stacks))
 > >
 > > *** Environment:
 > > unix "Linux tuxedo 3.12.0-gentoo-05 #8 SMP Wed Nov 13 14:32:15 CET 2013
 > > x86_64 Intel(R) Core(TM) i7-3630QM CPU @ 2.40GHz GenuineIntel GNU/Linux"
 > > (x86_64-linux/3m) (get-display-depth) = 32
 > > Human Language: english
 > > (current-memory-use) 392228044
 > > Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = ();
 > > (links #:user? #f #:root? #t) = ()
 > > raco pkg (show):
 > > /home/stefan/repos/racket/racket/share/devel-pkgs:
 > >  Package              Checksum    Source
 > >  main-distribution    #f          (static-link
 > > ../../../pkgs/main-distribution)
 > >  plt-services         #f          (static-link ../../../pkgs/plt-services)
 > >  racket-lib           #f          (static-link
 > > ../../../pkgs/racket-pkgs/racket-lib)
 > >  [201 auto-installed packages not shown]
 > > Installation-wide:
 > >  [none]
 > > User-specific for installation "development":
 > >  [none]
 > >
 > >
 > >
 > > Collections:
 > > ("/home/stefan/.racket/development/collects"
 > >  (non-existent-path))
 > > ("/home/stefan/repos/racket/racket/collects"
 > >  (".gitignore" "acks" "compiler" "data" "db" "dynext" "ffi" "file" "info"
 > > "info-domain" "json" "launcher" "net" "openssl" "pkg" "planet" "racket"
 > > "rackunit" "raco" "reader" "realm" "s-exp" "scheme" "setup" "srfi" "syntax"
 > > "unstable" "version" "xml"))
 > >
 > > Recent Internal Errors:
 > > Computer Language: (("Determine language from source") (#(#t print
 > > mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((main)
 > > (test)) #t))
 > >
 > >
