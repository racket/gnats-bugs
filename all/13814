From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Mon Jun  3 13:28:10 2013
Received: from mail-ob0-f174.google.com (mail-ob0-f174.google.com [209.85.214.174])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id r53HS6Ub015196
	for <bugs@bugs.plt-scheme.org>; Mon, 3 Jun 2013 13:28:06 -0400
Message-Id: <201306031728.r53HS59l015184@champlain.ccs.neu.edu>
Date: Mon, 3 Jun 2013 13:28:05 -0400
From: eric.n.dobson@gmail.com
To: bugs@racket-lang.org
Subject: Place code example doesn't work

>Number:         13814
>Category:       all
>Synopsis:       Place code example doesn't work
>Class:          sw-bug
>Responsible:    nobody
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Mon Jun 03 13:32:01 -0400 2013
>Originator:     Eric Dobson
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.3.2.3
>Environment:
MacIntel / Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_2) AppleWebKit/537.28 (KHTML, like Gecko) Chrome/26.0.1397.2 Safari/537.28
>Description:
dynamic-place can take a string, and the example makes you think it is a relative path. But it is a relative path to / not the current directory.
>How-To-Repeat:
(let ([pls (for/list ([i (in-range 2)])
              (dynamic-place "place-worker.rkt" 'place-main))])
   (for ([i (in-range 2)]
         [p pls])
      (place-channel-put p i)
      (printf "~a\n" (place-channel-get p)))
   (map place-wait pls))

and in "place-worker.rkt" in the same directory
#lang racket
(provide place-main)
 
(define (place-main pch)
  (place-channel-put pch (format "Hello from place ~a"
                                  (place-channel-get pch))))
>Fix:
