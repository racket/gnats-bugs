From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Tue Oct 12 15:16:53 2010
Received: from mail-yw0-f44.google.com (mail-yw0-f44.google.com [209.85.213.44])
	by champlain.ccs.neu.edu (8.14.3/8.14.3) with ESMTP id o9CJGk4x027522
	for <bugs@bugs.plt-scheme.org>; Tue, 12 Oct 2010 15:16:46 -0400
Message-Id: <201010121916.o9CJGin8027514@champlain.ccs.neu.edu>
Date: Tue, 12 Oct 2010 15:16:44 -0400
From: nickmshelley@gmail.com
To: bugs@racket-lang.org
Subject: ffi does not support intptr_t

>Number:         11311
>Category:       all
>Synopsis:       ffi does not support intptr_t
>Class:          sw-bug
>Responsible:    eli
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Tue Oct 12 15:20:01 -0400 2010
>Closed-Date:    Tue Oct 12 20:59:22 -0400 2010
>Last-Modified:  Tue Oct 12 21:00:01 -0400 2010
>Originator:     Nick Shelley
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.0.1.4--2010-08-30(76c3c76/g)
>Environment:
unix "Linux mulan 2.6.32-24-generic #42-Ubuntu SMP Fri Aug 20 14:21:58 UTC 2010 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 24
Human Language: english
(current-memory-use) 324680576

Collections:
(("/home/nick/.racket/5.0.1.4/collects" non-existent-path) ("/home/nick/plt/collects" ".gitignore" "2htdp" "afm" "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "data" "datalog" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu" "htdp" "html" "icons" "lang" "launcher" "lazy" "macro-debugger" "make" "meta" "mred" "mrlib" "mysterx" "mz" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "redex" "repo-time-stamp" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "sirmail" "slatex" "slideshow" "srfi" "srpersist" "stepper" "string-constants" "swindle" "syntax-color" "syntax" "teachpack" "test-box-recovery" "test-engine" "te!
 sts" "tex2page" "texpict" "trace" "typed-scheme" "typed" "unstable" "version" "waterworld" "web-server" "wxme" "xml" "info-domain"))
Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t))
>Description:
There appears to be no predefined ctype for this common C type. It would be very convenient in many APIs; in particular, OpenCL.
>How-To-Repeat:

>Fix:
>Audit-Trail:
From: Eli Barzilay <eli@barzilay.org>
To: nickmshelley@gmail.com, bugs@racket-lang.org
Cc: bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11311: ffi does not support intptr_t
Date: Tue, 12 Oct 2010 15:58:02 -0400

 40 minutes ago, nickmshelley@gmail.com wrote:
 > There appears to be no predefined ctype for this common C type. It
 > would be very convenient in many APIs; in particular, OpenCL.
 
 I've added it (will be pushed soon), but JFYI -- it's currently the
 same as `_long', so you can use that instead.
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!
From: Jay McCarthy <jay.mccarthy@gmail.com>
To: Eli Barzilay <eli@barzilay.org>
Cc: nickmshelley@gmail.com, bugs@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11311: ffi does not support intptr_t
Date: Tue, 12 Oct 2010 14:02:53 -0600

 Is that correct across 32bit and 64bit?
 
 Jay
 
 On Tue, Oct 12, 2010 at 1:58 PM, Eli Barzilay <eli@barzilay.org> wrote:
 > 40 minutes ago, nickmshelley@gmail.com wrote:
 >> There appears to be no predefined ctype for this common C type. It
 >> would be very convenient in many APIs; in particular, OpenCL.
 >
 > I've added it (will be pushed soon), but JFYI -- it's currently the
 > same as `_long', so you can use that instead.
 >
 > --
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0((lambda (x) (x x)) (lambda (x) (x x)))=
  =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Eli Barzilay:
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0http=
 ://barzilay.org/ =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =
 =C2=A0 Maze is Life!
 >
 
 
 
 --=20
 Jay McCarthy <jay@cs.byu.edu>
 Assistant Professor / Brigham Young University
 http://teammccarthy.org/jay
 
 "The glory of God is Intelligence" - D&C 93
From: Eli Barzilay <eli@barzilay.org>
To: Jay McCarthy <jay.mccarthy@gmail.com>
Cc: nickmshelley@gmail.com, bugs@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11311: ffi does not support intptr_t
Date: Tue, 12 Oct 2010 20:40:32 -0400

 Yes.  Here is the relevant comment in the foreign code:
 
 /***********************************************************************
  * The following are the only primitive types.
  * The tricky part is figuring out what width-ed types correspond to
  * what internal types.  Matthew says:
  *   Racket expects to be compiled such that sizeof(int) == 4,
  *   sizeof(long) == sizeof(void*), sizeof(short) >= 2,
  *   sizeof(char) == 1, sizeof(float) == 4, and sizeof(double) == 8.
  *   So, on a 64-bit OS, Racket expects only `long' to change.
  **********************************************************************/
 
 So right now it's true -- and the definition of `intptr' is
 essentially the same as the one for `long'.  (IIRC, Windows 64 is the
 only OS where there was something different.)
 
 
 5 hours ago, Jay McCarthy wrote:
 > Is that correct across 32bit and 64bit?
 > 
 > Jay
 > 
 > On Tue, Oct 12, 2010 at 1:58 PM, Eli Barzilay <eli@barzilay.org> wrote:
 > > 40 minutes ago, nickmshelley@gmail.com wrote:
 > >> There appears to be no predefined ctype for this common C type. It
 > >> would be very convenient in many APIs; in particular, OpenCL.
 > >
 > > I've added it (will be pushed soon), but JFYI -- it's currently the
 > > same as `_long', so you can use that instead.
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!
From: Jay McCarthy <jay.mccarthy@gmail.com>
To: Eli Barzilay <eli@barzilay.org>
Cc: "nickmshelley@gmail.com" <nickmshelley@gmail.com>,
        "bugs@racket-lang.org" <bugs@racket-lang.org>,
        "bug-notification@racket-lang.org" <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/11311: ffi does not support intptr_t
Date: Tue, 12 Oct 2010 18:51:07 -0600

 Will your push add this type as something opaque or as something where we ca=
 n treat both _int and _pointer as sub types?
 
 Jay
 
 Sent from my iPhone
 
 On Oct 12, 2010, at 6:40 PM, Eli Barzilay <eli@barzilay.org> wrote:
 
 > Yes.  Here is the relevant comment in the foreign code:
 >=20
 > /***********************************************************************
 > * The following are the only primitive types.
 > * The tricky part is figuring out what width-ed types correspond to
 > * what internal types.  Matthew says:
 > *   Racket expects to be compiled such that sizeof(int) =3D=3D 4,
 > *   sizeof(long) =3D=3D sizeof(void*), sizeof(short) >=3D 2,
 > *   sizeof(char) =3D=3D 1, sizeof(float) =3D=3D 4, and sizeof(double) =3D=3D=
  8.
 > *   So, on a 64-bit OS, Racket expects only `long' to change.
 > **********************************************************************/
 >=20
 > So right now it's true -- and the definition of `intptr' is
 > essentially the same as the one for `long'.  (IIRC, Windows 64 is the
 > only OS where there was something different.)
 >=20
 >=20
 > 5 hours ago, Jay McCarthy wrote:
 >> Is that correct across 32bit and 64bit?
 >>=20
 >> Jay
 >>=20
 >> On Tue, Oct 12, 2010 at 1:58 PM, Eli Barzilay <eli@barzilay.org> wrote:
 >>> 40 minutes ago, nickmshelley@gmail.com wrote:
 >>>> There appears to be no predefined ctype for this common C type. It
 >>>> would be very convenient in many APIs; in particular, OpenCL.
 >>>=20
 >>> I've added it (will be pushed soon), but JFYI -- it's currently the
 >>> same as `_long', so you can use that instead.
 >=20
 > --=20
 >          ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
 >                    http://barzilay.org/                   Maze is Life!
Responsible changed from "nobody" to "eli" by eli@racket-lang.org at Tue, 12 Oct 2010 20:59:22 -0400
Reason>>> A commit by eli@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/615d8f1329
State changed from "open" to "closed" by eli@racket-lang.org at Tue, 12 Oct 2010 20:59:22 -0400
Reason>>> A commit by eli@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/615d8f1329
From: Eli Barzilay <eli@barzilay.org>
To: Jay McCarthy <jay.mccarthy@gmail.com>
Cc: "nickmshelley@gmail.com" <nickmshelley@gmail.com>,
        "bugs@racket-lang.org" <bugs@racket-lang.org>,
        "bug-notification@racket-lang.org" <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/11311: ffi does not support intptr_t
Date: Tue, 12 Oct 2010 20:56:49 -0400

 Four minutes ago, Jay McCarthy wrote:
 > Will your push add this type as something opaque or as something
 > where we can treat both _int and _pointer as sub types?
 
 It's just a definition of the types in exactly the same way as `_long'
 etc.  I'll shuffle my commits and push this one now.
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!
