From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Sun Aug  2 15:12:17 2009
Received: from mail-yx0-f173.google.com (mail-yx0-f173.google.com [209.85.210.173])
	by champlain.ccs.neu.edu (8.14.2/8.14.2) with ESMTP id n72JCCQf007641
	for <bugs@bugs.plt-scheme.org>; Sun, 2 Aug 2009 15:12:12 -0400
Message-Id: <200908021912.n72JC9LD007633@champlain.ccs.neu.edu>
Date: Sun, 2 Aug 2009 15:12:09 -0400
From: matthias@ccs.neu.edu
To: bugs@plt-scheme.org
Subject: lazy issues severaly misleading bug report

>Number:         10371
>Category:       all
>Synopsis:       lazy issues severaly misleading bug report
>Class:          sw-bug
>Responsible:    samth
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Sun Aug 02 15:16:01 -0400 2009
>Closed-Date:    Sun Nov 20 18:17:19 -0500 2011
>Last-Modified:  Mon Feb 18 23:30:00 -0500 2013
>Originator:     matthias
>Organization:
plt
>Submitter-Id:   unknown
>Release:        4.2.1.5-svn2aug2009
>Environment:
macosx "Darwin europe.local 8.11.1 Darwin Kernel Version 8.11.1: Wed Oct 10 18:23:28 PDT 2007; root:xnu-792.25.20~1/RELEASE_I386 i386 i386" (i386-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 124548964

Collections:
(("/Users/matthias/0Unison/collects/" ".DS_Store" "date" "finance" "info-domain" "info.ss" "pdf.ss~" "session" "short" "testing" "tll-collects" "utils" "web") ("/Users/matthias/Library/PLT Scheme/4.2.1.5/collects" non-existent-path) ("/Users/matthias/plt/collects" ".svn" "2htdp" "afm" "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "defaults" "deinprogramm" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profile" "profj" "profjWizard" "r5rs" "r6rs" "readline" "redex" "repos-time-stamp" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "sirmail" "slatex" "slideshow" "srfi"!
  "srpersist" "stepper" "string-constants" "stxclass" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tests" "tex2page" "texpict" "trace" "typed" "typed-scheme" "version" "waterworld" "web-server" "wxme" "xml"))
Computer Language: (("Module") (#(#t write mixed-fraction-e #f #t none) (default) #() "#lang scheme\n" #t))
>Description:
Say you apply first in lazy to two arguments inside some 
procedure, drscheme points to some place INSIDE a lazy 
library for the error. I used the bug icon and the stack 
trace to chase it down, and opened the library to see what 
I could do to fix it. Only when I couldn't even find 'first'
there (I was wondering how come Eli uses first, he's so old)
that I looked at my own program. 
>How-To-Repeat:
Here is something that appromxiates what I had and creates the same problem. 

#lang lazy ; scheme 

;; all natural numbers
(define nats$ (cons 0 (map add1 nats$)))

;; all primes
(define (sieve s$)
  (define fst (first s$))
  (first s$ (sieve (filter (lambda (m) (not (= (remainder m fst) 0))) s$))))

(car (sieve (rest (rest nats$))))
>Fix:
>Audit-Trail:
From: Eli Barzilay <eli@barzilay.org>
To: matthias@ccs.neu.edu, bugs@plt-scheme.org
Cc: bug-notification@plt-scheme.org
Subject: Re: [plt-bug] all/10371: lazy issues severaly misleading bug report
Date: Sun, 2 Aug 2009 15:36:08 -0400

 On Aug  2, matthias@ccs.neu.edu wrote:
 > Say you apply first in lazy to two arguments inside some procedure,
 > drscheme points to some place INSIDE a lazy library for the error. I
 > used the bug icon and the stack trace to chase it down, and opened
 > the library to see what I could do to fix it. Only when I couldn't
 > even find 'first' there (I was wondering how come Eli uses first,
 > he's so old) that I looked at my own program.
 
 I'm not sure what exactly is the problem here.  I tried it and saw no
 reference to the lazy scheme implementation (and found a few other
 problems on the way that I'll report later).
 
 One obvious problem is the lack of any stack trace inside the my own
 code -- which is what we talked about in the lazy scheme paper: since
 the computation gets pulled out to where the value is used, there is
 no useful trace that includes the actual location where `first' is
 used.  But it doesn't look like the problem you're talking about.
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!
From: Robby Findler <robby@eecs.northwestern.edu>
To: matthias@ccs.neu.edu, bugs@plt-scheme.org
Cc: Eli Barzilay <eli@barzilay.org>
Subject: Re: [plt-bug] all/10371: lazy issues severaly misleading bug report
Date: Sun, 2 Aug 2009 14:42:51 -0500

 One other thing to note here: the module language's error reporting
 stuff has changed recently. So be sure to try it in the default mode
 and in errortrace mode (which should be closer to the old mode).
 
 Robby
 
 On Sun, Aug 2, 2009 at 2:16 PM, <matthias@ccs.neu.edu> wrote:
 > A new problem report is waiting at
 > =C2=A0http://bugs.plt-scheme.org/query/?cmd=3Dview&pr=3D10371
 >
 > Reported by matthias for release: 4.2.1.5-svn2aug2009
 >
 > *** Description:
 > Say you apply first in lazy to two arguments inside some
 > procedure, drscheme points to some place INSIDE a lazy
 > library for the error. I used the bug icon and the stack
 > trace to chase it down, and opened the library to see what
 > I could do to fix it. Only when I couldn't even find 'first'
 > there (I was wondering how come Eli uses first, he's so old)
 > that I looked at my own program.
 >
 > *** How to repeat:
 > Here is something that appromxiates what I had and creates the same probl=
 em.
 >
 > #lang lazy ; scheme
 >
 > ;; all natural numbers
 > (define nats$ (cons 0 (map add1 nats$)))
 >
 > ;; all primes
 > (define (sieve s$)
 > =C2=A0(define fst (first s$))
 > =C2=A0(first s$ (sieve (filter (lambda (m) (not (=3D (remainder m fst) 0)=
 )) s$))))
 >
 > (car (sieve (rest (rest nats$))))
 >
 > *** Environment:
 > macosx "Darwin europe.local 8.11.1 Darwin Kernel Version 8.11.1: Wed Oct =
 10 18:23:28 PDT 2007; root:xnu-792.25.20~1/RELEASE_I386 i386 i386" (i386-ma=
 cosx/3m) (get-display-depth) =3D 32
 > Human Language: english
 > (current-memory-use) 124548964
 >
 > Collections:
 > (("/Users/matthias/0Unison/collects/" ".DS_Store" "date" "finance" "info-=
 domain" "info.ss" "pdf.ss~" "session" "short" "testing" "tll-collects" "uti=
 ls" "web") ("/Users/matthias/Library/PLT Scheme/4.2.1.5/collects" non-exist=
 ent-path) ("/Users/matthias/plt/collects" ".svn" "2htdp" "afm" "algol60" "a=
 t-exp" "browser" "combinator-parser" "compiler" "config" "defaults" "deinpr=
 ogramm" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file"=
  "framework" "frtime" "games" "graphics" "gui-debugger" "guibuilder" "handi=
 n-client" "handin-server" "help" "hierlist" "honu" "htdch" "htdp" "html" "i=
 cons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred"=
  "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools=
 " "planet" "plot" "preprocessor" "profile" "profj" "profjWizard" "r5rs" "r6=
 rs" "readline" "redex" "repos-time-stamp" "rnrs" "s-exp" "scheme" "schemeun=
 it" "scribble" "scribblings" "scriblib" "setup" "sgl" "sirmail" "slatex" "s=
 lideshow" "srfi"!
 > =C2=A0"srpersist" "stepper" "string-constants" "stxclass" "swindle" "synt=
 ax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tests" "t=
 ex2page" "texpict" "trace" "typed" "typed-scheme" "version" "waterworld" "w=
 eb-server" "wxme" "xml"))
 > Computer Language: (("Module") (#(#t write mixed-fraction-e #f #t none) (=
 default) #() "#lang scheme\n" #t))
 >
 >
From: Eli Barzilay <eli@barzilay.org>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: matthias@ccs.neu.edu, bugs@plt-scheme.org
Subject: Re: [plt-bug] all/10371: lazy issues severaly misleading bug report
Date: Sun, 2 Aug 2009 16:11:38 -0400

 On Aug  2, Robby Findler wrote:
 > One other thing to note here: the module language's error reporting
 > stuff has changed recently. So be sure to try it in the default mode
 > and in errortrace mode (which should be closer to the old mode).
 
 I had a plateful of complaints...  All sent now.
 
 How do I turn on the errortrace mode to see if there's any difference?
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!
From: Robby Findler <robby@eecs.northwestern.edu>
To: Eli Barzilay <eli@barzilay.org>
Cc: matthias@ccs.neu.edu, bugs@plt-scheme.org
Subject: Re: [plt-bug] all/10371: lazy issues severaly misleading bug report
Date: Sun, 2 Aug 2009 15:35:08 -0500

 PS: it is off by default. You want to turn it on, I expect.
 
 Also, ifyouare really curious, you might do
 
 setup-plt --mode errortrace
 
 first as well.
 
 Robby
 
 On Sun, Aug 2, 2009 at 3:34 PM, Robby
 Findler<robby@eecs.northwestern.edu> wrote:
 > Language dialog, details section, radio boxes at the top.
 >
 > On Sun, Aug 2, 2009 at 3:11 PM, Eli Barzilay<eli@barzilay.org> wrote:
 >> On Aug =C2=A02, Robby Findler wrote:
 >>> One other thing to note here: the module language's error reporting
 >>> stuff has changed recently. So be sure to try it in the default mode
 >>> and in errortrace mode (which should be closer to the old mode).
 >>
 >> I had a plateful of complaints... =C2=A0All sent now.
 >>
 >> How do I turn on the errortrace mode to see if there's any difference?
 >>
 >> --
 >> =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0((lambda (x) (x x)) (lambda (x) (x x))=
 ) =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Eli Barzilay:
 >> =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0htt=
 p://barzilay.org/ =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =
 =C2=A0 Maze is Life!
 >>
 >
From: Eli Barzilay <eli@barzilay.org>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: matthias@ccs.neu.edu, bugs@plt-scheme.org
Subject: Re: [plt-bug] all/10371: lazy issues severaly misleading bug report
Date: Sun, 2 Aug 2009 16:35:35 -0400

 But I don't see anything related to errortrace there...
 
 
 On Aug  2, Robby Findler wrote:
 > Language dialog, details section, radio boxes at the top.
 >=20
 > On Sun, Aug 2, 2009 at 3:11 PM, Eli Barzilay<eli@barzilay.org> wrote:=
 
 > > On Aug =A02, Robby Findler wrote:
 > >> One other thing to note here: the module language's error reportin=
 g
 > >> stuff has changed recently. So be sure to try it in the default mo=
 de
 > >> and in errortrace mode (which should be closer to the old mode).
 > >
 > > I had a plateful of complaints... =A0All sent now.
 > >
 > > How do I turn on the errortrace mode to see if there's any differen=
 ce=3F
 
 --=20
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay=
 :
                     http://barzilay.org/                   Maze is Life=
 !
From: Robby Findler <robby@eecs.northwestern.edu>
To: Eli Barzilay <eli@barzilay.org>
Cc: matthias@ccs.neu.edu, bugs@plt-scheme.org
Subject: Re: [plt-bug] all/10371: lazy issues severaly misleading bug report
Date: Sun, 2 Aug 2009 15:34:27 -0500

 Language dialog, details section, radio boxes at the top.
 
 On Sun, Aug 2, 2009 at 3:11 PM, Eli Barzilay<eli@barzilay.org> wrote:
 > On Aug =C2=A02, Robby Findler wrote:
 >> One other thing to note here: the module language's error reporting
 >> stuff has changed recently. So be sure to try it in the default mode
 >> and in errortrace mode (which should be closer to the old mode).
 >
 > I had a plateful of complaints... =C2=A0All sent now.
 >
 > How do I turn on the errortrace mode to see if there's any difference?
 >
 > --
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0((lambda (x) (x x)) (lambda (x) (x x)))=
  =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Eli Barzilay:
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0http=
 ://barzilay.org/ =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =
 =C2=A0 Maze is Life!
 >
From: Robby Findler <robby@eecs.northwestern.edu>
To: Eli Barzilay <eli@barzilay.org>
Cc: matthias@ccs.neu.edu, bugs@plt-scheme.org
Subject: Re: [plt-bug] all/10371: lazy issues severaly misleading bug report
Date: Sun, 2 Aug 2009 15:36:25 -0500

 "debugging" is implemtned via the errortrace library (it is
 errotrace's debugging annotations, as opposed to its profiling or test
 coverage annotations)
 
 On Sun, Aug 2, 2009 at 3:35 PM, Eli Barzilay<eli@barzilay.org> wrote:
 > But I don't see anything related to errortrace there...
 >
 >
 > On Aug =C2=A02, Robby Findler wrote:
 >> Language dialog, details section, radio boxes at the top.
 >>
 >> On Sun, Aug 2, 2009 at 3:11 PM, Eli Barzilay<eli@barzilay.org> wrote:
 >> > On Aug =C2=A02, Robby Findler wrote:
 >> >> One other thing to note here: the module language's error reporting
 >> >> stuff has changed recently. So be sure to try it in the default mode
 >> >> and in errortrace mode (which should be closer to the old mode).
 >> >
 >> > I had a plateful of complaints... =C2=A0All sent now.
 >> >
 >> > How do I turn on the errortrace mode to see if there's any difference?
 >
 > --
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0((lambda (x) (x x)) (lambda (x) (x x)))=
  =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Eli Barzilay:
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0http=
 ://barzilay.org/ =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =
 =C2=A0 Maze is Life!
 >
From: Eli Barzilay <eli@barzilay.org>
To: Robby Findler <robby@eecs.northwestern.edu>, matthias@ccs.neu.edu,
        bugs@plt-scheme.org
Cc: 
Subject: Re: [plt-bug] all/10371: lazy issues severaly misleading bug report
Date: Sun, 2 Aug 2009 16:40:48 -0400

 On Aug  2, Eli Barzilay wrote:
 > On Aug  2, Robby Findler wrote:
 > > "debugging" is implemtned via the errortrace library (it is
 > > errotrace's debugging annotations, as opposed to its profiling or test
 > > coverage annotations)
 > 
 > Ah, so it's the same as it was.  Anyway, for some reason I had it
 > *on*, and things looked fine.  When I got it back to the default
 > (off), I saw what Matthias is talking about -- the error is showing
 > you the internals of the lazy implementation, and then some code from
 > scheme/private/more-scheme.
 
 (In other words, the bug is not a lazy scheme bug.)
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!
From: Eli Barzilay <eli@barzilay.org>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: matthias@ccs.neu.edu, bugs@plt-scheme.org
Subject: Re: [plt-bug] all/10371: lazy issues severaly misleading bug report
Date: Sun, 2 Aug 2009 16:40:24 -0400

 On Aug  2, Robby Findler wrote:
 > "debugging" is implemtned via the errortrace library (it is
 > errotrace's debugging annotations, as opposed to its profiling or test
 > coverage annotations)
 
 Ah, so it's the same as it was.  Anyway, for some reason I had it
 *on*, and things looked fine.  When I got it back to the default
 (off), I saw what Matthias is talking about -- the error is showing
 you the internals of the lazy implementation, and then some code from
 scheme/private/more-scheme.
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!
From: Robby Findler <robby@eecs.northwestern.edu>
To: Eli Barzilay <eli@barzilay.org>
Cc: matthias@ccs.neu.edu, bugs@plt-scheme.org,
        Matthew Flatt <mflatt@cs.utah.edu>
Subject: Re: [plt-bug] all/10371: lazy issues severaly misleading bug report
Date: Sun, 2 Aug 2009 15:55:43 -0500

 I don't think that rules out lazy scheme necessarily.
 
 The stack trace is what the stacktrace is, I think. Various
 compilation techniques can make it better or worse and that may be the
 only fix we have.
 
 Note that this is just getting the stack from the continuation mark set.
 
 Robby
 
 On Sun, Aug 2, 2009 at 3:40 PM, Eli Barzilay<eli@barzilay.org> wrote:
 > On Aug =C2=A02, Eli Barzilay wrote:
 >> On Aug =C2=A02, Robby Findler wrote:
 >> > "debugging" is implemtned via the errortrace library (it is
 >> > errotrace's debugging annotations, as opposed to its profiling or test
 >> > coverage annotations)
 >>
 >> Ah, so it's the same as it was. =C2=A0Anyway, for some reason I had it
 >> *on*, and things looked fine. =C2=A0When I got it back to the default
 >> (off), I saw what Matthias is talking about -- the error is showing
 >> you the internals of the lazy implementation, and then some code from
 >> scheme/private/more-scheme.
 >
 > (In other words, the bug is not a lazy scheme bug.)
 >
 > --
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0((lambda (x) (x x)) (lambda (x) (x x)))=
  =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Eli Barzilay:
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0http=
 ://barzilay.org/ =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =
 =C2=A0 Maze is Life!
 >
From: Eli Barzilay <eli@barzilay.org>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: matthias@ccs.neu.edu, bugs@plt-scheme.org,
        Matthew Flatt <mflatt@cs.utah.edu>
Subject: Re: [plt-bug] all/10371: lazy issues severaly misleading bug report
Date: Sun, 2 Aug 2009 17:03:12 -0400

 On Aug  2, Robby Findler wrote:
 > I don't think that rules out lazy scheme necessarily.
 > 
 > The stack trace is what the stacktrace is, I think. Various
 > compilation techniques can make it better or worse and that may be
 > the only fix we have.
 > 
 > Note that this is just getting the stack from the continuation mark set.
 
 Yes, I know that -- but I don't see how lazy-scheme could do something
 about it.  The problem is coming from a context inside a promise that
 is genrated it its code.
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!

State changed from "open" to "closed" by samth at Sun, 20 Nov 2011 18:17:19 -0500
Reason>>> Can't reproduce this with current DrRacket/lazy language.


Responsible changed from "nobody" to "samth" by eli at Mon, 18 Feb 2013 23:30:00 -0500
Reason>>> samth closed

