From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Wed Dec  7 08:56:47 2016
Received: from mail-oi0-f45.google.com (mail-oi0-f45.google.com [209.85.218.45])
	by winooski.ccs.neu.edu (8.14.7/8.14.7) with ESMTP id uB7DuiCk016357
	for <bugs@bugs.plt-scheme.org>; Wed, 7 Dec 2016 08:56:45 -0500
Message-Id: <201612071356.uB7DufxF016350@winooski.ccs.neu.edu>
Date: Wed, 7 Dec 2016 08:56:41 -0500
From: sk@cs.brown.edu
To: bugs@racket-lang.org
Subject: imports caching leads to inconsistency?

>Number:         15385
>Category:       all
>Synopsis:       imports caching leads to inconsistency?
>Class:          sw-bug
>Responsible:    nobody
>Severity:       non-critical
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Wed Dec 07 09:00:01 -0500 2016
>Originator:     Shriram Krishnamurthi
>Organization:
plt
>Submitter-Id:   unknown
>Release:        6.6
>Environment:
macosx "Darwin stelvio.local 16.1.0 Darwin Kernel Version 16.1.0: Thu Oct 13 21:26:57 PDT 2016; root:xnu-3789.21.3~60/RELEASE_X86_64 x86_64" (x86_64-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 695393692
raco pkg (show):
Installation-wide:
 Package            Checksum             Source
 main-distribution  e24e5af07557ac0f...  catalog...tribution
 racket-lib         21b7fee99c95a8d7...  catalog racket-lib
 [189 auto-installed packages not shown]
User-specific for installation "6.6":
 Package  Checksum                Source
 frog     4b785f912265827c0ee...  catalog.../frog/master
 [6 auto-installed packages not shown]



Collections:
("/Users/sk/Library/Racket/6.6/collects"
 (non-existent-path))
("/Applications/Racket v6.6/collects"
 ("acks" "compiler" "data" "db" "dynext" "ffi" "file" "info" "info-domain" "json" "launcher" "net" "openssl" "pkg" "planet" "racket" "raco" "reader" "realm" "s-exp" "setup" "syntax" "version" "xml"))

Recent Internal Errors: 
Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((test) (main)) #t))
>Description:
Say I have a file A and a file B. B imports from A. A provides p. B imports p. I run B, everything is good. 

Now I change A to [rename-out (p p!)] and save A. Now I go back to the B buffer.

I _simultaneously_ get

• hovering over p says p is imported from A [with an arrow to the `require` statement]
• an unbound identifier error saying that p is not bound

It seems like an integrity violation for p to both be imported and not bound, right?
>How-To-Repeat:

>Fix:
