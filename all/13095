From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Tue Sep  4 17:47:33 2012
Received: from mail-ie0-f172.google.com (mail-ie0-f172.google.com [209.85.223.172])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id q84LlU9w022928
	for <bugs@bugs.plt-scheme.org>; Tue, 4 Sep 2012 17:47:30 -0400
Message-Id: <201209042147.q84LlPD6022922@champlain.ccs.neu.edu>
Date: Tue, 4 Sep 2012 17:47:25 -0400
From: matthias@ccs.neu.edu
To: bugs@racket-lang.org
Subject: submodules interfere with binding-occurrence check and renaming in drracket

>Number:         13095
>Category:       all
>Synopsis:       submodules interfere with binding-occurrence check and renaming in drracket
>Class:          sw-bug
>Responsible:    robby
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Tue Sep 04 17:48:02 -0400 2012
>Closed-Date:    Wed Sep 19 07:48:43 -0400 2012
>Last-Modified:  Wed Sep 19 08:04:01 -0400 2012
>Originator:     matthias
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.3.0.21--2012-09-03(7d2ce136/d)
>Environment:
macosx "Darwin africa.westell.com 11.4.0 Darwin Kernel Version 11.4.0: Mon Apr  9 19:32:15 PDT 2012; root:xnu-1699.26.8~1/RELEASE_X86_64 x86_64" (x86_64-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 366844584
Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()


Collections:
("/Users/matthias/0Unison/collects/"
 ("._.DS_Store" ".DS_Store" "compiled" "date" "finance" "info-domain" "info.ss" "pdf.ss~" "session" "short" "testing" "tll-collects" "utils" "web"))
("/Users/matthias/Library/Racket/5.3.0.21/collects"
 (non-existent-path))
("/Users/matthias/plt/collects"
 (".gitignore" "2htdp" "afm" "algol60" "at-exp" "browser" "combinator-parser" "compatibility" "compiler" "config" "data" "datalog" "db" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "future-visualizer" "games" "graphics" "gui-debugger" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu" "htdp" "html" "icons" "images" "info-domain" "json" "lang" "launcher" "lazy" "macro-debugger" "make" "meta" "mred" "mrlib" "mysterx" "mz" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "picturing-programs" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raclog" "raco" "racunit" "reader" "readline" "redex" "repo-time-stamp" "repos-time-stamp" "rnrs" "s-exp" "schelog" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "sirmail" "slatex" "slideshow" "srfi" "srpersist" "stepper" "string-constants" "swindle" "syntax" "syntax-!
 color" "teachpack" "test-box-recovery" "test-engine" "tests" "tex2page" "texpict" "tool" "trace" "typed" "typed-racket" "typed-scheme" "unstable" "version" "waterworld" "web-server" "wxme" "xml" "xrepl"))

Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket" #t #t ((main) (test))))
>Description:
Take this program: 

#lang racket
(define white "white")
(module+ test (equal? (f white) white))
(define (f x) white)

When on-line cs is complete, mouse over the definition of 'white'. 
You see only one arrow, going to the body of f. That's what I mean 
with interference of binding occurrrence. 

When you now try to rename 'white' to 'black', drracket renames 
only the occurrence in the body of f, meaning the program becomes 
syntactically incorrect. 

[Apologues if this has been reported before.]
>How-To-Repeat:

>Fix:
>Audit-Trail:
From: Robby Findler <robby@eecs.northwestern.edu>
To: matthias@ccs.neu.edu, bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/13095: submodules interfere with
 binding-occurrence check and renaming in drracket
Date: Wed, 5 Sep 2012 07:52:36 +0200

 How should check syntax deal with this? By the time it gets it, it is
 a require and provide. I guess it has to track those explicitly for
 the submodule-with-#f case explicitly?
 
 Robby
 
 On Tue, Sep 4, 2012 at 11:48 PM,  <matthias@ccs.neu.edu> wrote:
 > A new problem report is waiting at
 >   http://bugs.racket-lang.org/query/?cmd=view&pr=13095
 >
 > Reported by matthias for release: 5.3.0.21--2012-09-03(7d2ce136/d)
 >
 > *** Description:
 > Take this program:
 >
 > #lang racket
 > (define white "white")
 > (module+ test (equal? (f white) white))
 > (define (f x) white)
 >
 > When on-line cs is complete, mouse over the definition of 'white'.
 > You see only one arrow, going to the body of f. That's what I mean
 > with interference of binding occurrrence.
 >
 > When you now try to rename 'white' to 'black', drracket renames
 > only the occurrence in the body of f, meaning the program becomes
 > syntactically incorrect.
 >
 > [Apologues if this has been reported before.]
 >
 > *** How to repeat:
 >
 >
 > *** Environment:
 > macosx "Darwin africa.westell.com 11.4.0 Darwin Kernel Version 11.4.0: Mon Apr  9 19:32:15 PDT 2012; root:xnu-1699.26.8~1/RELEASE_X86_64 x86_64" (x86_64-macosx/3m) (get-display-depth) = 32
 > Human Language: english
 > (current-memory-use) 366844584
 > Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()
 >
 >
 > Collections:
 > ("/Users/matthias/0Unison/collects/"
 >  ("._.DS_Store" ".DS_Store" "compiled" "date" "finance" "info-domain" "info.ss" "pdf.ss~" "session" "short" "testing" "tll-collects" "utils" "web"))
 > ("/Users/matthias/Library/Racket/5.3.0.21/collects"
 >  (non-existent-path))
 > ("/Users/matthias/plt/collects"
 >  (".gitignore" "2htdp" "afm" "algol60" "at-exp" "browser" "combinator-parser" "compatibility" "compiler" "config" "data" "datalog" "db" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "future-visualizer" "games" "graphics" "gui-debugger" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu" "htdp" "html" "icons" "images" "info-domain" "json" "lang" "launcher" "lazy" "macro-debugger" "make" "meta" "mred" "mrlib" "mysterx" "mz" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "picturing-programs" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raclog" "raco" "racunit" "reader" "readline" "redex" "repo-time-stamp" "repos-time-stamp" "rnrs" "s-exp" "schelog" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "sirmail" "slatex" "slideshow" "srfi" "srpersist" "stepper" "string-constants" "swindle" "syntax" "syntax-!
 >  color" "teachpack" "test-box-recovery" "test-engine" "tests" "tex2page" "texpict" "tool" "trace" "typed" "typed-racket" "typed-scheme" "unstable" "version" "waterworld" "web-server" "wxme" "xml" "xrepl"))
 >
 > Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket" #t #t ((main) (test))))
 >
 
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/13095: submodules interfere with binding-occurrence check and renaming in drracket
Date: Wed, 5 Sep 2012 09:00:21 -0400

 --Apple-Mail=_638AAE3F-8A17-46C5-B655-6E99D3DA1EC5
 Content-Transfer-Encoding: quoted-printable
 Content-Type: text/plain;
 	charset=us-ascii
 
 
 Submodules that import their surrounding context should be dealt with =
 explicitly. -- Matthias
 
 
 
 On Sep 5, 2012, at 1:52 AM, Robby Findler wrote:
 
 > How should check syntax deal with this? By the time it gets it, it is
 > a require and provide. I guess it has to track those explicitly for
 > the submodule-with-#f case explicitly?
 >=20
 > Robby
 >=20
 > On Tue, Sep 4, 2012 at 11:48 PM,  <matthias@ccs.neu.edu> wrote:
 >> A new problem report is waiting at
 >>  http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D13095
 >>=20
 >> Reported by matthias for release: 5.3.0.21--2012-09-03(7d2ce136/d)
 >>=20
 >> *** Description:
 >> Take this program:
 >>=20
 >> #lang racket
 >> (define white "white")
 >> (module+ test (equal? (f white) white))
 >> (define (f x) white)
 >>=20
 >> When on-line cs is complete, mouse over the definition of 'white'.
 >> You see only one arrow, going to the body of f. That's what I mean
 >> with interference of binding occurrrence.
 >>=20
 >> When you now try to rename 'white' to 'black', drracket renames
 >> only the occurrence in the body of f, meaning the program becomes
 >> syntactically incorrect.
 >>=20
 >> [Apologues if this has been reported before.]
 >>=20
 >> *** How to repeat:
 >>=20
 >>=20
 >> *** Environment:
 >> macosx "Darwin africa.westell.com 11.4.0 Darwin Kernel Version =
 11.4.0: Mon Apr  9 19:32:15 PDT 2012; =
 root:xnu-1699.26.8~1/RELEASE_X86_64 x86_64" (x86_64-macosx/3m) =
 (get-display-depth) =3D 32
 >> Human Language: english
 >> (current-memory-use) 366844584
 >> Links: (links) =3D (); (links #:user? #f) =3D (); (links #:root? #t) =
 =3D (); (links #:user? #f #:root? #t) =3D ()
 >>=20
 >>=20
 >> Collections:
 >> ("/Users/matthias/0Unison/collects/"
 >> ("._.DS_Store" ".DS_Store" "compiled" "date" "finance" "info-domain" =
 "info.ss" "pdf.ss~" "session" "short" "testing" "tll-collects" "utils" =
 "web"))
 >> ("/Users/matthias/Library/Racket/5.3.0.21/collects"
 >> (non-existent-path))
 >> ("/Users/matthias/plt/collects"
 >> (".gitignore" "2htdp" "afm" "algol60" "at-exp" "browser" =
 "combinator-parser" "compatibility" "compiler" "config" "data" "datalog" =
 "db" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" =
 "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" =
 "future-visualizer" "games" "graphics" "gui-debugger" "guibuilder" =
 "handin-client" "handin-server" "help" "hierlist" "honu" "htdp" "html" =
 "icons" "images" "info-domain" "json" "lang" "launcher" "lazy" =
 "macro-debugger" "make" "meta" "mred" "mrlib" "mysterx" "mz" "mzcom" =
 "mzlib" "mzscheme" "net" "openssl" "parser-tools" "picturing-programs" =
 "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" =
 "racklog" "rackunit" "raclog" "raco" "racunit" "reader" "readline" =
 "redex" "repo-time-stamp" "repos-time-stamp" "rnrs" "s-exp" "schelog" =
 "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" =
 "sirmail" "slatex" "slideshow" "srfi" "srpersist" "stepper" =
 "string-constants" "swindle" "syntax" "syntax-!
 >> color" "teachpack" "test-box-recovery" "test-engine" "tests" =
 "tex2page" "texpict" "tool" "trace" "typed" "typed-racket" =
 "typed-scheme" "unstable" "version" "waterworld" "web-server" "wxme" =
 "xml" "xrepl"))
 >>=20
 >> Computer Language: (("Determine language from source") (#(#t print =
 mixed-fraction-e #f #t debug) (default) #() "#lang racket" #t #t ((main) =
 (test))))
 >>=20
 
 
 --Apple-Mail=_638AAE3F-8A17-46C5-B655-6E99D3DA1EC5
 Content-Disposition: attachment;
 	filename=smime.p7s
 Content-Type: application/pkcs7-signature;
 	name=smime.p7s
 Content-Transfer-Encoding: base64
 
 MIAGCSqGSIb3DQEHAqCAMIACAQExCzAJBgUrDgMCGgUAMIAGCSqGSIb3DQEHAQAAoIIMTDCCBVYw
 ggQ+oAMCAQICEHbDqMitQnj5Qd81mMX31uMwDQYJKoZIhvcNAQEFBQAwgd0xCzAJBgNVBAYTAlVT
 MRcwFQYDVQQKEw5WZXJpU2lnbiwgSW5jLjEfMB0GA1UECxMWVmVyaVNpZ24gVHJ1c3QgTmV0d29y
 azE7MDkGA1UECxMyVGVybXMgb2YgdXNlIGF0IGh0dHBzOi8vd3d3LnZlcmlzaWduLmNvbS9ycGEg
 KGMpMDkxHjAcBgNVBAsTFVBlcnNvbmEgTm90IFZhbGlkYXRlZDE3MDUGA1UEAxMuVmVyaVNpZ24g
 Q2xhc3MgMSBJbmRpdmlkdWFsIFN1YnNjcmliZXIgQ0EgLSBHMzAeFw0xMjA3MjYwMDAwMDBaFw0x
 MzA3MjYyMzU5NTlaMIIBGTEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZlcmlT
 aWduIFRydXN0IE5ldHdvcmsxRjBEBgNVBAsTPXd3dy52ZXJpc2lnbi5jb20vcmVwb3NpdG9yeS9S
 UEEgSW5jb3JwLiBieSBSZWYuLExJQUIuTFREKGMpOTgxHjAcBgNVBAsTFVBlcnNvbmEgTm90IFZh
 bGlkYXRlZDEzMDEGA1UECxMqRGlnaXRhbCBJRCBDbGFzcyAxIC0gTmV0c2NhcGUgRnVsbCBTZXJ2
 aWNlMRswGQYDVQQDFBJNYXR0aGlhcyBGZWxsZWlzZW4xIzAhBgkqhkiG9w0BCQEWFG1hdHRoaWFz
 QGNjcy5uZXUuZWR1MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxoivceU706ZnD2XD
 JfoNFd4KTbYA9AObozHkSZ6BJLC8oSGjakZu6m11azFwk5LfPOjd7dQIKw9uDhmT1e4q6jP+B1FC
 a1qqwm7Rw9PcFhqYFBlE8MbqJUXJW53Ynw3dK2XiUNqTXFcBa2otI8XxMtrQch4f9oMUy+aIn/fZ
 QQDbkkzuwz3884xSbm0IMDneYUC6FF1OJe2+fkMqHqEDsSgY97RFcjdgTCOB012odwGhxJ3rIGaX
 WUs7ttjnftzyGODVILMIx8RBJpGJ+Ur4R67SJygV8Clpg1RBuRUSNaZAN0tCjO9YSkb9HfF2tAx9
 POWmQXdTtNNjZfJPbTVnkQIDAQABo4HSMIHPMAkGA1UdEwQCMAAwRAYDVR0gBD0wOzA5BgtghkgB
 hvhFAQcXATAqMCgGCCsGAQUFBwIBFhxodHRwczovL3d3dy52ZXJpc2lnbi5jb20vcnBhMAsGA1Ud
 DwQEAwIFoDAdBgNVHSUEFjAUBggrBgEFBQcDBAYIKwYBBQUHAwIwUAYDVR0fBEkwRzBFoEOgQYY/
 aHR0cDovL2luZGMxZGlnaXRhbGlkLWczLWNybC52ZXJpc2lnbi5jb20vSW5kQzFEaWdpdGFsSUQt
 RzMuY3JsMA0GCSqGSIb3DQEBBQUAA4IBAQCeAXGCjjlMmU1wb3Ii4V0yNygujjQcvJstFh7IyVcM
 oD5/5Ar7b36JL1O2tpBosTf0pVZaORKCMPAf1IfBS48CvvqSoeVyXCFG1goXDjr7Ut+ZwosuFXdr
 2gD6u9EftuoUy+UBdz46NcN9YC0WbX7CrRE96XxvYwPfWnGIjsoNY7WqFI4f7HLlM5dCmAOXySsw
 EbPKpflzEGPU8aKf4FqTX9ne+hTzPbCf5CDJdzrdyn5bQkqvSzxw+P3tvQSU9lnyZkG7wZ1cibna
 QIuSNEe+HKOKcEfeTeD50JhLa43RE24nMsaXWdX61VTiPE/2Y9woEVLxXBp+AFpMZjGYsF/yMIIG
 7jCCBdagAwIBAgIQcRVmBUrkkSFN6bxE+azT3DANBgkqhkiG9w0BAQUFADCByjELMAkGA1UEBhMC
 VVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQLExZWZXJpU2lnbiBUcnVzdCBOZXR3
 b3JrMTowOAYDVQQLEzEoYykgMTk5OSBWZXJpU2lnbiwgSW5jLiAtIEZvciBhdXRob3JpemVkIHVz
 ZSBvbmx5MUUwQwYDVQQDEzxWZXJpU2lnbiBDbGFzcyAxIFB1YmxpYyBQcmltYXJ5IENlcnRpZmlj
 YXRpb24gQXV0aG9yaXR5IC0gRzMwHhcNMDkwNTAxMDAwMDAwWhcNMTkwNDMwMjM1OTU5WjCB3TEL
 MAkGA1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQLExZWZXJpU2lnbiBU
 cnVzdCBOZXR3b3JrMTswOQYDVQQLEzJUZXJtcyBvZiB1c2UgYXQgaHR0cHM6Ly93d3cudmVyaXNp
 Z24uY29tL3JwYSAoYykwOTEeMBwGA1UECxMVUGVyc29uYSBOb3QgVmFsaWRhdGVkMTcwNQYDVQQD
 Ey5WZXJpU2lnbiBDbGFzcyAxIEluZGl2aWR1YWwgU3Vic2NyaWJlciBDQSAtIEczMIIBIjANBgkq
 hkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA7cRH3yooHXwGa7vXITLJbBOP6bGNQU4099oL42r6ZYgg
 CxET6ZvgSU6Lb9UB0F8NR5GKWkx0Pj/GkQm7TDSejW6hglFi92l2WJYHr54UGAdPWr2f0jGyVBlz
 RmoZQhHsEnMhjfXcMM3l2VYKMcU2bSkUl70t2olHGYjYSwQ967Y8Zx50ABMN0Ibak2f4MwOuGjxr
 aXj2wCyO4YM/d/mZ//6fUlrCtIcK2GypR8FUKWVDPkrAlh/Brfd3r2yxBF6+wbaULZeQLSfSux7p
 g2qE9sSyriMGZSalJ1grByK0b6ZiSBp38tVQJ5op05b7KPW6JHZi44xZ6/tu1ULEvkHH9QIDAQAB
 o4ICuTCCArUwNAYIKwYBBQUHAQEEKDAmMCQGCCsGAQUFBzABhhhodHRwOi8vb2NzcC52ZXJpc2ln
 bi5jb20wEgYDVR0TAQH/BAgwBgEB/wIBADBwBgNVHSAEaTBnMGUGC2CGSAGG+EUBBxcBMFYwKAYI
 KwYBBQUHAgEWHGh0dHBzOi8vd3d3LnZlcmlzaWduLmNvbS9jcHMwKgYIKwYBBQUHAgIwHhocaHR0
 cHM6Ly93d3cudmVyaXNpZ24uY29tL3JwYTA0BgNVHR8ELTArMCmgJ6AlhiNodHRwOi8vY3JsLnZl
 cmlzaWduLmNvbS9wY2ExLWczLmNybDAOBgNVHQ8BAf8EBAMCAQYwbgYIKwYBBQUHAQwEYjBgoV6g
 XDBaMFgwVhYJaW1hZ2UvZ2lmMCEwHzAHBgUrDgMCGgQUS2u5KJYGDLvQUjibKaxLB4shBRgwJhYk
 aHR0cDovL2xvZ28udmVyaXNpZ24uY29tL3ZzbG9nbzEuZ2lmMC4GA1UdEQQnMCWkIzAhMR8wHQYD
 VQQDExZQcml2YXRlTGFiZWw0LTIwNDgtMTE4MB0GA1UdDgQWBBR5R2EIQf04BKJL57XM9UP2SSsR
 +DCB8QYDVR0jBIHpMIHmoYHQpIHNMIHKMQswCQYDVQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24s
 IEluYy4xHzAdBgNVBAsTFlZlcmlTaWduIFRydXN0IE5ldHdvcmsxOjA4BgNVBAsTMShjKSAxOTk5
 IFZlcmlTaWduLCBJbmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxRTBDBgNVBAMTPFZlcmlT
 aWduIENsYXNzIDEgUHVibGljIFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgLSBHM4IR
 AItbdVaEVIULAM+vOEjOsaQwDQYJKoZIhvcNAQEFBQADggEBADlNz0GZgbWpBbVSOOk5hIls5DSo
 WufYbAlMJBq6WaSHO3Mh8ZOBz79oY1pn/jWFK6HDXaNKwjoZ3TDWzE3v8dKBl8pUWkO/N4t6jhmN
 D0OojPKvYLMVirOVnDzgnrMnmKQ1chfl/Cpdh9OKDcLRRSr4wPSsKpM61a4ScAjr+zvid+zoK2Q1
 ds262uDRyxTWcVibvtU+fbbZ6CTFJGZMXZEfdrMXPn8NxiGJL7M3uKH/XLJtSd5lUkL7DojS7Uod
 v0vj+Mxy+kgOZY5JyNb4mZg7t5Q+MXEGh/psWVMu198r7V9jAKwV7QO4VRaMxmgD5yKocwuxvKDa
 UljdCg5/wYIxggSLMIIEhwIBATCB8jCB3TELMAkGA1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWdu
 LCBJbmMuMR8wHQYDVQQLExZWZXJpU2lnbiBUcnVzdCBOZXR3b3JrMTswOQYDVQQLEzJUZXJtcyBv
 ZiB1c2UgYXQgaHR0cHM6Ly93d3cudmVyaXNpZ24uY29tL3JwYSAoYykwOTEeMBwGA1UECxMVUGVy
 c29uYSBOb3QgVmFsaWRhdGVkMTcwNQYDVQQDEy5WZXJpU2lnbiBDbGFzcyAxIEluZGl2aWR1YWwg
 U3Vic2NyaWJlciBDQSAtIEczAhB2w6jIrUJ4+UHfNZjF99bjMAkGBSsOAwIaBQCgggJtMBgGCSqG
 SIb3DQEJAzELBgkqhkiG9w0BBwEwHAYJKoZIhvcNAQkFMQ8XDTEyMDkwNTEzMDAyMlowIwYJKoZI
 hvcNAQkEMRYEFP4Vz3fdD2SK8mGcRONx10kOqEbaMIIBAwYJKwYBBAGCNxAEMYH1MIHyMIHdMQsw
 CQYDVQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZlcmlTaWduIFRy
 dXN0IE5ldHdvcmsxOzA5BgNVBAsTMlRlcm1zIG9mIHVzZSBhdCBodHRwczovL3d3dy52ZXJpc2ln
 bi5jb20vcnBhIChjKTA5MR4wHAYDVQQLExVQZXJzb25hIE5vdCBWYWxpZGF0ZWQxNzA1BgNVBAMT
 LlZlcmlTaWduIENsYXNzIDEgSW5kaXZpZHVhbCBTdWJzY3JpYmVyIENBIC0gRzMCEHbDqMitQnj5
 Qd81mMX31uMwggEFBgsqhkiG9w0BCRACCzGB9aCB8jCB3TELMAkGA1UEBhMCVVMxFzAVBgNVBAoT
 DlZlcmlTaWduLCBJbmMuMR8wHQYDVQQLExZWZXJpU2lnbiBUcnVzdCBOZXR3b3JrMTswOQYDVQQL
 EzJUZXJtcyBvZiB1c2UgYXQgaHR0cHM6Ly93d3cudmVyaXNpZ24uY29tL3JwYSAoYykwOTEeMBwG
 A1UECxMVUGVyc29uYSBOb3QgVmFsaWRhdGVkMTcwNQYDVQQDEy5WZXJpU2lnbiBDbGFzcyAxIElu
 ZGl2aWR1YWwgU3Vic2NyaWJlciBDQSAtIEczAhB2w6jIrUJ4+UHfNZjF99bjMA0GCSqGSIb3DQEB
 AQUABIIBAIBgHWoACotlubtRXx9GGMAb9VJQy0wEP+WhkrLckw2jt53dAlVktVyur8vuKNSj4uxQ
 RXD9bmtlfB6jjlUomh554QV4n/SgVlr1T1NX0q+xGvE5t0NoKx3mkWsGBnga0nHI8c7iRvUwR03J
 z+ZzaAHUkdXN6fgwKz3BY7ewevoEOzNB3djjmZhPYfbCI4KUCFPrJ+6jCBz+NbsTSnyw6k+A8wI2
 DMPLelQ/6WPT9H0hPH72GFLZ4FGto1b+p1piO35pwr/6kotX6U+SIoC0s2724Q2yD4TnmT7J/zr/
 J8JcZkxjiwHIrXIerHhb8zoNr0DEoiqw0wqapKH2ss/TEfQAAAAAAAA=
 
 --Apple-Mail=_638AAE3F-8A17-46C5-B655-6E99D3DA1EC5--
From: Matthew Flatt <mflatt@cs.utah.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: matthias@ccs.neu.edu, bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/13095: submodules interfere with
 binding-occurrence check and renaming in drracket
Date: Wed, 5 Sep 2012 07:05:52 -0600

 I'm not sure what you mean. There are no `require's or `provides' in
 the fully expanded form:
 
  (module w racket
    (#%module-begin
     (define-values (white) '"white")
     (define-values (f) (lambda (x) white))
     (module*
      test
      #f
      (#%module-begin
       (#%app
        call-with-values
        (lambda () (#%app equal? (#%app f white) white))
        print-values)))))
 
 At Wed, 5 Sep 2012 07:52:36 +0200, Robby Findler wrote:
 > How should check syntax deal with this? By the time it gets it, it is
 > a require and provide. I guess it has to track those explicitly for
 > the submodule-with-#f case explicitly?
 > 
 > Robby
 > 
 > On Tue, Sep 4, 2012 at 11:48 PM,  <matthias@ccs.neu.edu> wrote:
 > > A new problem report is waiting at
 > >   http://bugs.racket-lang.org/query/?cmd=view&pr=13095
 > >
 > > Reported by matthias for release: 5.3.0.21--2012-09-03(7d2ce136/d)
 > >
 > > *** Description:
 > > Take this program:
 > >
 > > #lang racket
 > > (define white "white")
 > > (module+ test (equal? (f white) white))
 > > (define (f x) white)
 > >
 > > When on-line cs is complete, mouse over the definition of 'white'.
 > > You see only one arrow, going to the body of f. That's what I mean
 > > with interference of binding occurrrence.
 > >
 > > When you now try to rename 'white' to 'black', drracket renames
 > > only the occurrence in the body of f, meaning the program becomes
 > > syntactically incorrect.
 > >
 > > [Apologues if this has been reported before.]
 > >
 > > *** How to repeat:
 > >
 > >
 > > *** Environment:
 > > macosx "Darwin africa.westell.com 11.4.0 Darwin Kernel Version 11.4.0: Mon 
 > Apr  9 19:32:15 PDT 2012; root:xnu-1699.26.8~1/RELEASE_X86_64 x86_64" 
 > (x86_64-macosx/3m) (get-display-depth) = 32
 > > Human Language: english
 > > (current-memory-use) 366844584
 > > Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); 
 > (links #:user? #f #:root? #t) = ()
 > >
 > >
 > > Collections:
 > > ("/Users/matthias/0Unison/collects/"
 > >  ("._.DS_Store" ".DS_Store" "compiled" "date" "finance" "info-domain" 
 > "info.ss" "pdf.ss~" "session" "short" "testing" "tll-collects" "utils" "web"))
 > > ("/Users/matthias/Library/Racket/5.3.0.21/collects"
 > >  (non-existent-path))
 > > ("/Users/matthias/plt/collects"
 > >  (".gitignore" "2htdp" "afm" "algol60" "at-exp" "browser" 
 > "combinator-parser" "compatibility" "compiler" "config" "data" "datalog" "db" 
 > "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" 
 > "errortrace" "ffi" "file" "framework" "frtime" "future-visualizer" "games" 
 > "graphics" "gui-debugger" "guibuilder" "handin-client" "handin-server" "help" 
 > "hierlist" "honu" "htdp" "html" "icons" "images" "info-domain" "json" "lang" 
 > "launcher" "lazy" "macro-debugger" "make" "meta" "mred" "mrlib" "mysterx" "mz" 
 > "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "picturing-programs" 
 > "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" 
 > "racklog" "rackunit" "raclog" "raco" "racunit" "reader" "readline" "redex" 
 > "repo-time-stamp" "repos-time-stamp" "rnrs" "s-exp" "schelog" "scheme" 
 > "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "sirmail" 
 > "slatex" "slideshow" "srfi" "srpersist" "stepper" "string-constants" "swindle" 
 > "syntax" "syntax-!
 > >  color" "teachpack" "test-box-recovery" "test-engine" "tests" "tex2page" 
 > "texpict" "tool" "trace" "typed" "typed-racket" "typed-scheme" "unstable" 
 > "version" "waterworld" "web-server" "wxme" "xml" "xrepl"))
 > >
 > > Computer Language: (("Determine language from source") (#(#t print 
 > mixed-fraction-e #f #t debug) (default) #() "#lang racket" #t #t ((main) 
 > (test))))
 > >
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: Robby Findler <robby@eecs.northwestern.edu>, bugs@racket-lang.org,
        nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/13095: submodules interfere with binding-occurrence check and renaming in drracket
Date: Wed, 5 Sep 2012 09:07:15 -0400

 --Apple-Mail=_B29346BD-146A-4A33-84D9-506375A00F15
 Content-Transfer-Encoding: quoted-printable
 Content-Type: text/plain;
 	charset=us-ascii
 
 
 I think module* .. #f could be perceived to require the entire =
 surrounding module, and the surrounding module provides all defined ids.=20=
 
 
 Do you think this view is wrong? Should it really be some sort of scope =
 nesting?=20
 
 
 
 On Sep 5, 2012, at 9:05 AM, Matthew Flatt wrote:
 
 > I'm not sure what you mean. There are no `require's or `provides' in
 > the fully expanded form:
 >=20
 > (module w racket
 >   (#%module-begin
 >    (define-values (white) '"white")
 >    (define-values (f) (lambda (x) white))
 >    (module*
 >     test
 >     #f
 >     (#%module-begin
 >      (#%app
 >       call-with-values
 >       (lambda () (#%app equal? (#%app f white) white))
 >       print-values)))))
 >=20
 > At Wed, 5 Sep 2012 07:52:36 +0200, Robby Findler wrote:
 >> How should check syntax deal with this? By the time it gets it, it is
 >> a require and provide. I guess it has to track those explicitly for
 >> the submodule-with-#f case explicitly?
 >>=20
 >> Robby
 >>=20
 >> On Tue, Sep 4, 2012 at 11:48 PM,  <matthias@ccs.neu.edu> wrote:
 >>> A new problem report is waiting at
 >>>  http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D13095
 >>>=20
 >>> Reported by matthias for release: 5.3.0.21--2012-09-03(7d2ce136/d)
 >>>=20
 >>> *** Description:
 >>> Take this program:
 >>>=20
 >>> #lang racket
 >>> (define white "white")
 >>> (module+ test (equal? (f white) white))
 >>> (define (f x) white)
 >>>=20
 >>> When on-line cs is complete, mouse over the definition of 'white'.
 >>> You see only one arrow, going to the body of f. That's what I mean
 >>> with interference of binding occurrrence.
 >>>=20
 >>> When you now try to rename 'white' to 'black', drracket renames
 >>> only the occurrence in the body of f, meaning the program becomes
 >>> syntactically incorrect.
 >>>=20
 >>> [Apologues if this has been reported before.]
 >>>=20
 >>> *** How to repeat:
 >>>=20
 >>>=20
 >>> *** Environment:
 >>> macosx "Darwin africa.westell.com 11.4.0 Darwin Kernel Version =
 11.4.0: Mon=20
 >> Apr  9 19:32:15 PDT 2012; root:xnu-1699.26.8~1/RELEASE_X86_64 x86_64"=20=
 
 >> (x86_64-macosx/3m) (get-display-depth) =3D 32
 >>> Human Language: english
 >>> (current-memory-use) 366844584
 >>> Links: (links) =3D (); (links #:user? #f) =3D (); (links #:root? #t) =
 =3D ();=20
 >> (links #:user? #f #:root? #t) =3D ()
 >>>=20
 >>>=20
 >>> Collections:
 >>> ("/Users/matthias/0Unison/collects/"
 >>> ("._.DS_Store" ".DS_Store" "compiled" "date" "finance" "info-domain"=20=
 
 >> "info.ss" "pdf.ss~" "session" "short" "testing" "tll-collects" =
 "utils" "web"))
 >>> ("/Users/matthias/Library/Racket/5.3.0.21/collects"
 >>> (non-existent-path))
 >>> ("/Users/matthias/plt/collects"
 >>> (".gitignore" "2htdp" "afm" "algol60" "at-exp" "browser"=20
 >> "combinator-parser" "compatibility" "compiler" "config" "data" =
 "datalog" "db"=20
 >> "defaults" "deinprogramm" "drracket" "drscheme" "dynext" =
 "embedded-gui" "eopl"=20
 >> "errortrace" "ffi" "file" "framework" "frtime" "future-visualizer" =
 "games"=20
 >> "graphics" "gui-debugger" "guibuilder" "handin-client" =
 "handin-server" "help"=20
 >> "hierlist" "honu" "htdp" "html" "icons" "images" "info-domain" "json" =
 "lang"=20
 >> "launcher" "lazy" "macro-debugger" "make" "meta" "mred" "mrlib" =
 "mysterx" "mz"=20
 >> "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" =
 "picturing-programs"=20
 >> "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" =
 "racket"=20
 >> "racklog" "rackunit" "raclog" "raco" "racunit" "reader" "readline" =
 "redex"=20
 >> "repo-time-stamp" "repos-time-stamp" "rnrs" "s-exp" "schelog" =
 "scheme"=20
 >> "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" =
 "sirmail"=20
 >> "slatex" "slideshow" "srfi" "srpersist" "stepper" "string-constants" =
 "swindle"=20
 >> "syntax" "syntax-!
 >>> color" "teachpack" "test-box-recovery" "test-engine" "tests" =
 "tex2page"=20
 >> "texpict" "tool" "trace" "typed" "typed-racket" "typed-scheme" =
 "unstable"=20
 >> "version" "waterworld" "web-server" "wxme" "xml" "xrepl"))
 >>>=20
 >>> Computer Language: (("Determine language from source") (#(#t print=20=
 
 >> mixed-fraction-e #f #t debug) (default) #() "#lang racket" #t #t =
 ((main)=20
 >> (test))))
 >>>=20
 
 
 --Apple-Mail=_B29346BD-146A-4A33-84D9-506375A00F15
 Content-Disposition: attachment;
 	filename=smime.p7s
 Content-Type: application/pkcs7-signature;
 	name=smime.p7s
 Content-Transfer-Encoding: base64
 
 MIAGCSqGSIb3DQEHAqCAMIACAQExCzAJBgUrDgMCGgUAMIAGCSqGSIb3DQEHAQAAoIIMTDCCBVYw
 ggQ+oAMCAQICEHbDqMitQnj5Qd81mMX31uMwDQYJKoZIhvcNAQEFBQAwgd0xCzAJBgNVBAYTAlVT
 MRcwFQYDVQQKEw5WZXJpU2lnbiwgSW5jLjEfMB0GA1UECxMWVmVyaVNpZ24gVHJ1c3QgTmV0d29y
 azE7MDkGA1UECxMyVGVybXMgb2YgdXNlIGF0IGh0dHBzOi8vd3d3LnZlcmlzaWduLmNvbS9ycGEg
 KGMpMDkxHjAcBgNVBAsTFVBlcnNvbmEgTm90IFZhbGlkYXRlZDE3MDUGA1UEAxMuVmVyaVNpZ24g
 Q2xhc3MgMSBJbmRpdmlkdWFsIFN1YnNjcmliZXIgQ0EgLSBHMzAeFw0xMjA3MjYwMDAwMDBaFw0x
 MzA3MjYyMzU5NTlaMIIBGTEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZlcmlT
 aWduIFRydXN0IE5ldHdvcmsxRjBEBgNVBAsTPXd3dy52ZXJpc2lnbi5jb20vcmVwb3NpdG9yeS9S
 UEEgSW5jb3JwLiBieSBSZWYuLExJQUIuTFREKGMpOTgxHjAcBgNVBAsTFVBlcnNvbmEgTm90IFZh
 bGlkYXRlZDEzMDEGA1UECxMqRGlnaXRhbCBJRCBDbGFzcyAxIC0gTmV0c2NhcGUgRnVsbCBTZXJ2
 aWNlMRswGQYDVQQDFBJNYXR0aGlhcyBGZWxsZWlzZW4xIzAhBgkqhkiG9w0BCQEWFG1hdHRoaWFz
 QGNjcy5uZXUuZWR1MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxoivceU706ZnD2XD
 JfoNFd4KTbYA9AObozHkSZ6BJLC8oSGjakZu6m11azFwk5LfPOjd7dQIKw9uDhmT1e4q6jP+B1FC
 a1qqwm7Rw9PcFhqYFBlE8MbqJUXJW53Ynw3dK2XiUNqTXFcBa2otI8XxMtrQch4f9oMUy+aIn/fZ
 QQDbkkzuwz3884xSbm0IMDneYUC6FF1OJe2+fkMqHqEDsSgY97RFcjdgTCOB012odwGhxJ3rIGaX
 WUs7ttjnftzyGODVILMIx8RBJpGJ+Ur4R67SJygV8Clpg1RBuRUSNaZAN0tCjO9YSkb9HfF2tAx9
 POWmQXdTtNNjZfJPbTVnkQIDAQABo4HSMIHPMAkGA1UdEwQCMAAwRAYDVR0gBD0wOzA5BgtghkgB
 hvhFAQcXATAqMCgGCCsGAQUFBwIBFhxodHRwczovL3d3dy52ZXJpc2lnbi5jb20vcnBhMAsGA1Ud
 DwQEAwIFoDAdBgNVHSUEFjAUBggrBgEFBQcDBAYIKwYBBQUHAwIwUAYDVR0fBEkwRzBFoEOgQYY/
 aHR0cDovL2luZGMxZGlnaXRhbGlkLWczLWNybC52ZXJpc2lnbi5jb20vSW5kQzFEaWdpdGFsSUQt
 RzMuY3JsMA0GCSqGSIb3DQEBBQUAA4IBAQCeAXGCjjlMmU1wb3Ii4V0yNygujjQcvJstFh7IyVcM
 oD5/5Ar7b36JL1O2tpBosTf0pVZaORKCMPAf1IfBS48CvvqSoeVyXCFG1goXDjr7Ut+ZwosuFXdr
 2gD6u9EftuoUy+UBdz46NcN9YC0WbX7CrRE96XxvYwPfWnGIjsoNY7WqFI4f7HLlM5dCmAOXySsw
 EbPKpflzEGPU8aKf4FqTX9ne+hTzPbCf5CDJdzrdyn5bQkqvSzxw+P3tvQSU9lnyZkG7wZ1cibna
 QIuSNEe+HKOKcEfeTeD50JhLa43RE24nMsaXWdX61VTiPE/2Y9woEVLxXBp+AFpMZjGYsF/yMIIG
 7jCCBdagAwIBAgIQcRVmBUrkkSFN6bxE+azT3DANBgkqhkiG9w0BAQUFADCByjELMAkGA1UEBhMC
 VVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQLExZWZXJpU2lnbiBUcnVzdCBOZXR3
 b3JrMTowOAYDVQQLEzEoYykgMTk5OSBWZXJpU2lnbiwgSW5jLiAtIEZvciBhdXRob3JpemVkIHVz
 ZSBvbmx5MUUwQwYDVQQDEzxWZXJpU2lnbiBDbGFzcyAxIFB1YmxpYyBQcmltYXJ5IENlcnRpZmlj
 YXRpb24gQXV0aG9yaXR5IC0gRzMwHhcNMDkwNTAxMDAwMDAwWhcNMTkwNDMwMjM1OTU5WjCB3TEL
 MAkGA1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQLExZWZXJpU2lnbiBU
 cnVzdCBOZXR3b3JrMTswOQYDVQQLEzJUZXJtcyBvZiB1c2UgYXQgaHR0cHM6Ly93d3cudmVyaXNp
 Z24uY29tL3JwYSAoYykwOTEeMBwGA1UECxMVUGVyc29uYSBOb3QgVmFsaWRhdGVkMTcwNQYDVQQD
 Ey5WZXJpU2lnbiBDbGFzcyAxIEluZGl2aWR1YWwgU3Vic2NyaWJlciBDQSAtIEczMIIBIjANBgkq
 hkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA7cRH3yooHXwGa7vXITLJbBOP6bGNQU4099oL42r6ZYgg
 CxET6ZvgSU6Lb9UB0F8NR5GKWkx0Pj/GkQm7TDSejW6hglFi92l2WJYHr54UGAdPWr2f0jGyVBlz
 RmoZQhHsEnMhjfXcMM3l2VYKMcU2bSkUl70t2olHGYjYSwQ967Y8Zx50ABMN0Ibak2f4MwOuGjxr
 aXj2wCyO4YM/d/mZ//6fUlrCtIcK2GypR8FUKWVDPkrAlh/Brfd3r2yxBF6+wbaULZeQLSfSux7p
 g2qE9sSyriMGZSalJ1grByK0b6ZiSBp38tVQJ5op05b7KPW6JHZi44xZ6/tu1ULEvkHH9QIDAQAB
 o4ICuTCCArUwNAYIKwYBBQUHAQEEKDAmMCQGCCsGAQUFBzABhhhodHRwOi8vb2NzcC52ZXJpc2ln
 bi5jb20wEgYDVR0TAQH/BAgwBgEB/wIBADBwBgNVHSAEaTBnMGUGC2CGSAGG+EUBBxcBMFYwKAYI
 KwYBBQUHAgEWHGh0dHBzOi8vd3d3LnZlcmlzaWduLmNvbS9jcHMwKgYIKwYBBQUHAgIwHhocaHR0
 cHM6Ly93d3cudmVyaXNpZ24uY29tL3JwYTA0BgNVHR8ELTArMCmgJ6AlhiNodHRwOi8vY3JsLnZl
 cmlzaWduLmNvbS9wY2ExLWczLmNybDAOBgNVHQ8BAf8EBAMCAQYwbgYIKwYBBQUHAQwEYjBgoV6g
 XDBaMFgwVhYJaW1hZ2UvZ2lmMCEwHzAHBgUrDgMCGgQUS2u5KJYGDLvQUjibKaxLB4shBRgwJhYk
 aHR0cDovL2xvZ28udmVyaXNpZ24uY29tL3ZzbG9nbzEuZ2lmMC4GA1UdEQQnMCWkIzAhMR8wHQYD
 VQQDExZQcml2YXRlTGFiZWw0LTIwNDgtMTE4MB0GA1UdDgQWBBR5R2EIQf04BKJL57XM9UP2SSsR
 +DCB8QYDVR0jBIHpMIHmoYHQpIHNMIHKMQswCQYDVQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24s
 IEluYy4xHzAdBgNVBAsTFlZlcmlTaWduIFRydXN0IE5ldHdvcmsxOjA4BgNVBAsTMShjKSAxOTk5
 IFZlcmlTaWduLCBJbmMuIC0gRm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxRTBDBgNVBAMTPFZlcmlT
 aWduIENsYXNzIDEgUHVibGljIFByaW1hcnkgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgLSBHM4IR
 AItbdVaEVIULAM+vOEjOsaQwDQYJKoZIhvcNAQEFBQADggEBADlNz0GZgbWpBbVSOOk5hIls5DSo
 WufYbAlMJBq6WaSHO3Mh8ZOBz79oY1pn/jWFK6HDXaNKwjoZ3TDWzE3v8dKBl8pUWkO/N4t6jhmN
 D0OojPKvYLMVirOVnDzgnrMnmKQ1chfl/Cpdh9OKDcLRRSr4wPSsKpM61a4ScAjr+zvid+zoK2Q1
 ds262uDRyxTWcVibvtU+fbbZ6CTFJGZMXZEfdrMXPn8NxiGJL7M3uKH/XLJtSd5lUkL7DojS7Uod
 v0vj+Mxy+kgOZY5JyNb4mZg7t5Q+MXEGh/psWVMu198r7V9jAKwV7QO4VRaMxmgD5yKocwuxvKDa
 UljdCg5/wYIxggSLMIIEhwIBATCB8jCB3TELMAkGA1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWdu
 LCBJbmMuMR8wHQYDVQQLExZWZXJpU2lnbiBUcnVzdCBOZXR3b3JrMTswOQYDVQQLEzJUZXJtcyBv
 ZiB1c2UgYXQgaHR0cHM6Ly93d3cudmVyaXNpZ24uY29tL3JwYSAoYykwOTEeMBwGA1UECxMVUGVy
 c29uYSBOb3QgVmFsaWRhdGVkMTcwNQYDVQQDEy5WZXJpU2lnbiBDbGFzcyAxIEluZGl2aWR1YWwg
 U3Vic2NyaWJlciBDQSAtIEczAhB2w6jIrUJ4+UHfNZjF99bjMAkGBSsOAwIaBQCgggJtMBgGCSqG
 SIb3DQEJAzELBgkqhkiG9w0BBwEwHAYJKoZIhvcNAQkFMQ8XDTEyMDkwNTEzMDcxNVowIwYJKoZI
 hvcNAQkEMRYEFO2Xemq+iyxLpjuDPalyRFK4JCFDMIIBAwYJKwYBBAGCNxAEMYH1MIHyMIHdMQsw
 CQYDVQQGEwJVUzEXMBUGA1UEChMOVmVyaVNpZ24sIEluYy4xHzAdBgNVBAsTFlZlcmlTaWduIFRy
 dXN0IE5ldHdvcmsxOzA5BgNVBAsTMlRlcm1zIG9mIHVzZSBhdCBodHRwczovL3d3dy52ZXJpc2ln
 bi5jb20vcnBhIChjKTA5MR4wHAYDVQQLExVQZXJzb25hIE5vdCBWYWxpZGF0ZWQxNzA1BgNVBAMT
 LlZlcmlTaWduIENsYXNzIDEgSW5kaXZpZHVhbCBTdWJzY3JpYmVyIENBIC0gRzMCEHbDqMitQnj5
 Qd81mMX31uMwggEFBgsqhkiG9w0BCRACCzGB9aCB8jCB3TELMAkGA1UEBhMCVVMxFzAVBgNVBAoT
 DlZlcmlTaWduLCBJbmMuMR8wHQYDVQQLExZWZXJpU2lnbiBUcnVzdCBOZXR3b3JrMTswOQYDVQQL
 EzJUZXJtcyBvZiB1c2UgYXQgaHR0cHM6Ly93d3cudmVyaXNpZ24uY29tL3JwYSAoYykwOTEeMBwG
 A1UECxMVUGVyc29uYSBOb3QgVmFsaWRhdGVkMTcwNQYDVQQDEy5WZXJpU2lnbiBDbGFzcyAxIElu
 ZGl2aWR1YWwgU3Vic2NyaWJlciBDQSAtIEczAhB2w6jIrUJ4+UHfNZjF99bjMA0GCSqGSIb3DQEB
 AQUABIIBAHL1B5s12K0YehR2E8m0BDqxK/0ZrSoW7IvlF8fMNJi1XVk7BWlhWmDNjC1f5ZHvJhmt
 IOwRnbBQd8cZ4Oz/Bi7Wx/1dazaxBtlYVoUZgUwPnoy3pVQNnMYOYOksGxLIZAVfKosMiO8/91tD
 N3vmrEXCtIh/SlGYgAe1zHIL9e3Bsdz/HtK4l9vU78eLl4vRIA3umpHplvlNqR0Wgw5YNpTOik0p
 lXthYqw8MZnOHVGxlmwmF//qp6XcoVpG6dvumnWle8NOKRl0CDADzSnZdJxrW4PiK/imMHT3NPNH
 kHRn5z0RMoqF90SAiOSnL45gKpgNmd29AAWiWmOBtqAAEkAAAAAAAAA=
 
 --Apple-Mail=_B29346BD-146A-4A33-84D9-506375A00F15--
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: matthias@ccs.neu.edu, bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/13095: submodules interfere with
 binding-occurrence check and renaming in drracket
Date: Wed, 5 Sep 2012 10:24:29 -0500

 Sorry, I should have looked at the output.
 
 In any case, I understand that check syntax should deal with nested module(*)s.
 
 Robby
 
 On Wed, Sep 5, 2012 at 8:05 AM, Matthew Flatt <mflatt@cs.utah.edu> wrote:
 > I'm not sure what you mean. There are no `require's or `provides' in
 > the fully expanded form:
 >
 >  (module w racket
 >    (#%module-begin
 >     (define-values (white) '"white")
 >     (define-values (f) (lambda (x) white))
 >     (module*
 >      test
 >      #f
 >      (#%module-begin
 >       (#%app
 >        call-with-values
 >        (lambda () (#%app equal? (#%app f white) white))
 >        print-values)))))
 >
 > At Wed, 5 Sep 2012 07:52:36 +0200, Robby Findler wrote:
 >> How should check syntax deal with this? By the time it gets it, it is
 >> a require and provide. I guess it has to track those explicitly for
 >> the submodule-with-#f case explicitly?
 >>
 >> Robby
 >>
 >> On Tue, Sep 4, 2012 at 11:48 PM,  <matthias@ccs.neu.edu> wrote:
 >> > A new problem report is waiting at
 >> >   http://bugs.racket-lang.org/query/?cmd=view&pr=13095
 >> >
 >> > Reported by matthias for release: 5.3.0.21--2012-09-03(7d2ce136/d)
 >> >
 >> > *** Description:
 >> > Take this program:
 >> >
 >> > #lang racket
 >> > (define white "white")
 >> > (module+ test (equal? (f white) white))
 >> > (define (f x) white)
 >> >
 >> > When on-line cs is complete, mouse over the definition of 'white'.
 >> > You see only one arrow, going to the body of f. That's what I mean
 >> > with interference of binding occurrrence.
 >> >
 >> > When you now try to rename 'white' to 'black', drracket renames
 >> > only the occurrence in the body of f, meaning the program becomes
 >> > syntactically incorrect.
 >> >
 >> > [Apologues if this has been reported before.]
 >> >
 >> > *** How to repeat:
 >> >
 >> >
 >> > *** Environment:
 >> > macosx "Darwin africa.westell.com 11.4.0 Darwin Kernel Version 11.4.0: Mon
 >> Apr  9 19:32:15 PDT 2012; root:xnu-1699.26.8~1/RELEASE_X86_64 x86_64"
 >> (x86_64-macosx/3m) (get-display-depth) = 32
 >> > Human Language: english
 >> > (current-memory-use) 366844584
 >> > Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = ();
 >> (links #:user? #f #:root? #t) = ()
 >> >
 >> >
 >> > Collections:
 >> > ("/Users/matthias/0Unison/collects/"
 >> >  ("._.DS_Store" ".DS_Store" "compiled" "date" "finance" "info-domain"
 >> "info.ss" "pdf.ss~" "session" "short" "testing" "tll-collects" "utils" "web"))
 >> > ("/Users/matthias/Library/Racket/5.3.0.21/collects"
 >> >  (non-existent-path))
 >> > ("/Users/matthias/plt/collects"
 >> >  (".gitignore" "2htdp" "afm" "algol60" "at-exp" "browser"
 >> "combinator-parser" "compatibility" "compiler" "config" "data" "datalog" "db"
 >> "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl"
 >> "errortrace" "ffi" "file" "framework" "frtime" "future-visualizer" "games"
 >> "graphics" "gui-debugger" "guibuilder" "handin-client" "handin-server" "help"
 >> "hierlist" "honu" "htdp" "html" "icons" "images" "info-domain" "json" "lang"
 >> "launcher" "lazy" "macro-debugger" "make" "meta" "mred" "mrlib" "mysterx" "mz"
 >> "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "picturing-programs"
 >> "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket"
 >> "racklog" "rackunit" "raclog" "raco" "racunit" "reader" "readline" "redex"
 >> "repo-time-stamp" "repos-time-stamp" "rnrs" "s-exp" "schelog" "scheme"
 >> "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "sirmail"
 >> "slatex" "slideshow" "srfi" "srpersist" "stepper" "string-constants" "swindle"
 >> "syntax" "syntax-!
 >> >  color" "teachpack" "test-box-recovery" "test-engine" "tests" "tex2page"
 >> "texpict" "tool" "trace" "typed" "typed-racket" "typed-scheme" "unstable"
 >> "version" "waterworld" "web-server" "wxme" "xml" "xrepl"))
 >> >
 >> > Computer Language: (("Determine language from source") (#(#t print
 >> mixed-fraction-e #f #t debug) (default) #() "#lang racket" #t #t ((main)
 >> (test))))
 >> >
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: matthias@ccs.neu.edu, bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/13095: submodules interfere with
 binding-occurrence check and renaming in drracket
Date: Wed, 19 Sep 2012 06:15:08 -0500

 The grammar given 1.2.3.1 doesn't contain the #%module-begin wrappers.
 
 I guess the fix is to add "(#%module-begin" and ")" around
 "module-level-form  ..." in the 4th, 5th, and 6th productions of
 "module-level-form", but I didn't add it, since I figured it would be
 better for you to double check me.
 
 Robby
 
 On Wed, Sep 5, 2012 at 8:05 AM, Matthew Flatt <mflatt@cs.utah.edu> wrote:
 > I'm not sure what you mean. There are no `require's or `provides' in
 > the fully expanded form:
 >
 >  (module w racket
 >    (#%module-begin
 >     (define-values (white) '"white")
 >     (define-values (f) (lambda (x) white))
 >     (module*
 >      test
 >      #f
 >      (#%module-begin
 >       (#%app
 >        call-with-values
 >        (lambda () (#%app equal? (#%app f white) white))
 >        print-values)))))
 >
 > At Wed, 5 Sep 2012 07:52:36 +0200, Robby Findler wrote:
 >> How should check syntax deal with this? By the time it gets it, it is
 >> a require and provide. I guess it has to track those explicitly for
 >> the submodule-with-#f case explicitly?
 >>
 >> Robby
 >>
 >> On Tue, Sep 4, 2012 at 11:48 PM,  <matthias@ccs.neu.edu> wrote:
 >> > A new problem report is waiting at
 >> >   http://bugs.racket-lang.org/query/?cmd=view&pr=13095
 >> >
 >> > Reported by matthias for release: 5.3.0.21--2012-09-03(7d2ce136/d)
 >> >
 >> > *** Description:
 >> > Take this program:
 >> >
 >> > #lang racket
 >> > (define white "white")
 >> > (module+ test (equal? (f white) white))
 >> > (define (f x) white)
 >> >
 >> > When on-line cs is complete, mouse over the definition of 'white'.
 >> > You see only one arrow, going to the body of f. That's what I mean
 >> > with interference of binding occurrrence.
 >> >
 >> > When you now try to rename 'white' to 'black', drracket renames
 >> > only the occurrence in the body of f, meaning the program becomes
 >> > syntactically incorrect.
 >> >
 >> > [Apologues if this has been reported before.]
 >> >
 >> > *** How to repeat:
 >> >
 >> >
 >> > *** Environment:
 >> > macosx "Darwin africa.westell.com 11.4.0 Darwin Kernel Version 11.4.0: Mon
 >> Apr  9 19:32:15 PDT 2012; root:xnu-1699.26.8~1/RELEASE_X86_64 x86_64"
 >> (x86_64-macosx/3m) (get-display-depth) = 32
 >> > Human Language: english
 >> > (current-memory-use) 366844584
 >> > Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = ();
 >> (links #:user? #f #:root? #t) = ()
 >> >
 >> >
 >> > Collections:
 >> > ("/Users/matthias/0Unison/collects/"
 >> >  ("._.DS_Store" ".DS_Store" "compiled" "date" "finance" "info-domain"
 >> "info.ss" "pdf.ss~" "session" "short" "testing" "tll-collects" "utils" "web"))
 >> > ("/Users/matthias/Library/Racket/5.3.0.21/collects"
 >> >  (non-existent-path))
 >> > ("/Users/matthias/plt/collects"
 >> >  (".gitignore" "2htdp" "afm" "algol60" "at-exp" "browser"
 >> "combinator-parser" "compatibility" "compiler" "config" "data" "datalog" "db"
 >> "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl"
 >> "errortrace" "ffi" "file" "framework" "frtime" "future-visualizer" "games"
 >> "graphics" "gui-debugger" "guibuilder" "handin-client" "handin-server" "help"
 >> "hierlist" "honu" "htdp" "html" "icons" "images" "info-domain" "json" "lang"
 >> "launcher" "lazy" "macro-debugger" "make" "meta" "mred" "mrlib" "mysterx" "mz"
 >> "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "picturing-programs"
 >> "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket"
 >> "racklog" "rackunit" "raclog" "raco" "racunit" "reader" "readline" "redex"
 >> "repo-time-stamp" "repos-time-stamp" "rnrs" "s-exp" "schelog" "scheme"
 >> "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "sirmail"
 >> "slatex" "slideshow" "srfi" "srpersist" "stepper" "string-constants" "swindle"
 >> "syntax" "syntax-!
 >> >  color" "teachpack" "test-box-recovery" "test-engine" "tests" "tex2page"
 >> "texpict" "tool" "trace" "typed" "typed-racket" "typed-scheme" "unstable"
 >> "version" "waterworld" "web-server" "wxme" "xml" "xrepl"))
 >> >
 >> > Computer Language: (("Determine language from source") (#(#t print
 >> mixed-fraction-e #f #t debug) (default) #() "#lang racket" #t #t ((main)
 >> (test))))
 >> >
Responsible changed from "nobody" to "robby" by robby@racket-lang.org at Wed, 19 Sep 2012 07:48:43 -0400
Reason>>> A commit by robby@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/21e0d9e031
State changed from "open" to "closed" by robby@racket-lang.org at Wed, 19 Sep 2012 07:48:43 -0400
Reason>>> A commit by robby@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/21e0d9e031
From: Matthew Flatt <mflatt@cs.utah.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: matthias@ccs.neu.edu, bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/13095: submodules interfere with
 binding-occurrence check and renaming in drracket
Date: Wed, 19 Sep 2012 06:01:51 -0600

 Right! I'll fix that.
 
 At Wed, 19 Sep 2012 06:15:08 -0500, Robby Findler wrote:
 > The grammar given 1.2.3.1 doesn't contain the #%module-begin wrappers.
 > 
 > I guess the fix is to add "(#%module-begin" and ")" around
 > "module-level-form  ..." in the 4th, 5th, and 6th productions of
 > "module-level-form", but I didn't add it, since I figured it would be
 > better for you to double check me.
 > 
 > Robby
 > 
 > On Wed, Sep 5, 2012 at 8:05 AM, Matthew Flatt <mflatt@cs.utah.edu> wrote:
 > > I'm not sure what you mean. There are no `require's or `provides' in
 > > the fully expanded form:
 > >
 > >  (module w racket
 > >    (#%module-begin
 > >     (define-values (white) '"white")
 > >     (define-values (f) (lambda (x) white))
 > >     (module*
 > >      test
 > >      #f
 > >      (#%module-begin
 > >       (#%app
 > >        call-with-values
 > >        (lambda () (#%app equal? (#%app f white) white))
 > >        print-values)))))
 > >
 > > At Wed, 5 Sep 2012 07:52:36 +0200, Robby Findler wrote:
 > >> How should check syntax deal with this? By the time it gets it, it is
 > >> a require and provide. I guess it has to track those explicitly for
 > >> the submodule-with-#f case explicitly?
 > >>
 > >> Robby
 > >>
 > >> On Tue, Sep 4, 2012 at 11:48 PM,  <matthias@ccs.neu.edu> wrote:
 > >> > A new problem report is waiting at
 > >> >   http://bugs.racket-lang.org/query/?cmd=view&pr=13095
 > >> >
 > >> > Reported by matthias for release: 5.3.0.21--2012-09-03(7d2ce136/d)
 > >> >
 > >> > *** Description:
 > >> > Take this program:
 > >> >
 > >> > #lang racket
 > >> > (define white "white")
 > >> > (module+ test (equal? (f white) white))
 > >> > (define (f x) white)
 > >> >
 > >> > When on-line cs is complete, mouse over the definition of 'white'.
 > >> > You see only one arrow, going to the body of f. That's what I mean
 > >> > with interference of binding occurrrence.
 > >> >
 > >> > When you now try to rename 'white' to 'black', drracket renames
 > >> > only the occurrence in the body of f, meaning the program becomes
 > >> > syntactically incorrect.
 > >> >
 > >> > [Apologues if this has been reported before.]
 > >> >
 > >> > *** How to repeat:
 > >> >
 > >> >
 > >> > *** Environment:
 > >> > macosx "Darwin africa.westell.com 11.4.0 Darwin Kernel Version 11.4.0: Mon
 > >> Apr  9 19:32:15 PDT 2012; root:xnu-1699.26.8~1/RELEASE_X86_64 x86_64"
 > >> (x86_64-macosx/3m) (get-display-depth) = 32
 > >> > Human Language: english
 > >> > (current-memory-use) 366844584
 > >> > Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = ();
 > >> (links #:user? #f #:root? #t) = ()
 > >> >
 > >> >
 > >> > Collections:
 > >> > ("/Users/matthias/0Unison/collects/"
 > >> >  ("._.DS_Store" ".DS_Store" "compiled" "date" "finance" "info-domain"
 > >> "info.ss" "pdf.ss~" "session" "short" "testing" "tll-collects" "utils" 
 > "web"))
 > >> > ("/Users/matthias/Library/Racket/5.3.0.21/collects"
 > >> >  (non-existent-path))
 > >> > ("/Users/matthias/plt/collects"
 > >> >  (".gitignore" "2htdp" "afm" "algol60" "at-exp" "browser"
 > >> "combinator-parser" "compatibility" "compiler" "config" "data" "datalog" 
 > "db"
 > >> "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" 
 > "eopl"
 > >> "errortrace" "ffi" "file" "framework" "frtime" "future-visualizer" "games"
 > >> "graphics" "gui-debugger" "guibuilder" "handin-client" "handin-server" 
 > "help"
 > >> "hierlist" "honu" "htdp" "html" "icons" "images" "info-domain" "json" "lang"
 > >> "launcher" "lazy" "macro-debugger" "make" "meta" "mred" "mrlib" "mysterx" 
 > "mz"
 > >> "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" 
 > "picturing-programs"
 > >> "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket"
 > >> "racklog" "rackunit" "raclog" "raco" "racunit" "reader" "readline" "redex"
 > >> "repo-time-stamp" "repos-time-stamp" "rnrs" "s-exp" "schelog" "scheme"
 > >> "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "sirmail"
 > >> "slatex" "slideshow" "srfi" "srpersist" "stepper" "string-constants" 
 > "swindle"
 > >> "syntax" "syntax-!
 > >> >  color" "teachpack" "test-box-recovery" "test-engine" "tests" "tex2page"
 > >> "texpict" "tool" "trace" "typed" "typed-racket" "typed-scheme" "unstable"
 > >> "version" "waterworld" "web-server" "wxme" "xml" "xrepl"))
 > >> >
 > >> > Computer Language: (("Determine language from source") (#(#t print
 > >> mixed-fraction-e #f #t debug) (default) #() "#lang racket" #t #t ((main)
 > >> (test))))
 > >> >
