From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Mon Jul  3 12:31:16 2017
Received: from mail-yb0-f171.google.com (mail-yb0-f171.google.com [209.85.213.171])
	by winooski.ccs.neu.edu (8.14.7/8.14.7) with ESMTP id v63GV9Wg020190
	for <bugs@bugs.plt-scheme.org>; Mon, 3 Jul 2017 12:31:09 -0400
Message-Id: <201707031631.v63GV6tJ020183@winooski.ccs.neu.edu>
Date: Mon, 3 Jul 2017 12:31:06 -0400
From: rxg@cs.ubc.ca
To: bugs@racket-lang.org
Subject: Redex does not render contexts in reduction relation defined using context-closure 

>Number:         15457
>Category:       all
>Synopsis:       Redex does not render contexts in reduction relation defined using context-closure
>Class:          sw-bug
>Responsible:    nobody
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Mon Jul 03 12:32:01 -0400 2017
>Last-Modified:  Mon Jul 03 13:44:01 -0400 2017
>Originator:     Ronald Garcia
>Organization:
plt
>Submitter-Id:   unknown
>Release:        6.9
>Environment:
macosx "Darwin CPSC-LM-RXG 15.6.0 Darwin Kernel Version 15.6.0: Tue Apr 11 16:00:51 PDT 2017; root:xnu-3248.60.11.5.3~1/RELEASE_X86_64 x86_64" (x86_64-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 1754653952
raco pkg (show):
Installation-wide:
 Package            Checksum             Source
 main-distribution  59e9a33d2c5f01ae...  catalog...tribution
 racket-lib         cd090dc3c3452a44...  catalog racket-lib
 [192 auto-installed packages not shown]
User-specific for installation "6.9":
 [none]



Collections:
("/Users/ronaldgarcia/Library/Racket/6.9/collects"
 (non-existent-path))
("/Applications/Racket v6.9/collects"
 ("acks" "compiler" "data" "db" "dynext" "ffi" "file" "info" "info-domain" "json" "launcher" "net" "openssl" "pkg" "planet" "racket" "raco" "reader" "realm" "s-exp" "setup" "syntax" "version" "xml"))

Recent Internal Errors: 
Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((test) (main)) #t))
>Description:
applying (render-reduction-relation) to a reduction relation defined using context-closure appears to only render the underlying reduction relation, not its contextual closure.
>How-To-Repeat:
#lang racket
(require redex)

(define-language XO
  (e ::= x o (e e))
  (E ::= hole (E e) (e E)))

(define r
  (reduction-relation XO
   (--> x o)
   (--> o x)))

(rule-pict-style 'horizontal)

(define -->r
  (context-closure r XO E))

(reduction-relation->pict r)
(reduction-relation->pict -->r)
>Fix:
>Audit-Trail:
From: Robby Findler <robby@eecs.northwestern.edu>
To: Ronald Garcia <rxg@cs.ubc.ca>, bugs <bugs@racket-lang.org>
Cc: 
Subject: Re: [racket-bug] all/15457: Redex does not render contexts in
 reduction relation defined using context-closure
Date: Mon, 3 Jul 2017 12:29:48 -0500

 Yes, that's correct. The way Redex is currently designed, it isn't
 very good at rendering things that don't correspond to source code.
 One could argue this is a design flaw (although it does have upsides
 in that you can control fiddly details of the typesetting by changing
 the source), I suppose. But it is baked pretty deep into Redex.
 
 I suggest you either write the contexts into the rules, or add some
 English prose somewhere saying that the reduction happen in E.
 
 Robby
 
 
 On Mon, Jul 3, 2017 at 11:32 AM,  <rxg@cs.ubc.ca> wrote:
 > A new problem report is waiting at
 >   http://bugs.racket-lang.org/query/?cmd=view&pr=15457
 >
 > Reported by Ronald Garcia for release: 6.9
 >
 > *** Description:
 > applying (render-reduction-relation) to a reduction relation defined using context-closure appears to only render the underlying reduction relation, not its contextual closure.
 >
 > *** How to repeat:
 > #lang racket
 > (require redex)
 >
 > (define-language XO
 >   (e ::= x o (e e))
 >   (E ::= hole (E e) (e E)))
 >
 > (define r
 >   (reduction-relation XO
 >    (--> x o)
 >    (--> o x)))
 >
 > (rule-pict-style 'horizontal)
 >
 > (define -->r
 >   (context-closure r XO E))
 >
 > (reduction-relation->pict r)
 > (reduction-relation->pict -->r)
 >
 > *** Environment:
 > macosx "Darwin CPSC-LM-RXG 15.6.0 Darwin Kernel Version 15.6.0: Tue Apr 11 16:00:51 PDT 2017; root:xnu-3248.60.11.5.3~1/RELEASE_X86_64 x86_64" (x86_64-macosx/3m) (get-display-depth) = 32
 > Human Language: english
 > (current-memory-use) 1754653952
 > raco pkg (show):
 > Installation-wide:
 >  Package            Checksum             Source
 >  main-distribution  59e9a33d2c5f01ae...  catalog...tribution
 >  racket-lib         cd090dc3c3452a44...  catalog racket-lib
 >  [192 auto-installed packages not shown]
 > User-specific for installation "6.9":
 >  [none]
 >
 >
 >
 > Collections:
 > ("/Users/ronaldgarcia/Library/Racket/6.9/collects"
 >  (non-existent-path))
 > ("/Applications/Racket v6.9/collects"
 >  ("acks" "compiler" "data" "db" "dynext" "ffi" "file" "info" "info-domain" "json" "launcher" "net" "openssl" "pkg" "planet" "racket" "raco" "reader" "realm" "s-exp" "setup" "syntax" "version" "xml"))
 >
 > Recent Internal Errors:
 > Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((test) (main)) #t))
 >
From: Ronald Garcia <rxg@cs.ubc.ca>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: bugs <bugs@racket-lang.org>
Subject: Re: [racket-bug] all/15457: Redex does not render contexts in reduction relation defined using context-closure
Date: Mon, 3 Jul 2017 10:39:26 -0700

 > On Jul 3, 2017, at 10:29 AM, Robby Findler <robby@eecs.northwestern.edu> wrote:
 > 
 > Yes, that's correct. The way Redex is currently designed, it isn't
 > very good at rendering things that don't correspond to source code.
 
 Umm…does (context-closure r XO E) not count as source code in this sense?  
 I was expecting it to just do something like render a single context rule.
 
 > One could argue this is a design flaw (although it does have upsides
 > in that you can control fiddly details of the typesetting by changing
 > the source), I suppose. But it is baked pretty deep into Redex.
 > 
 > I suggest you either write the contexts into the rules, or add some
 > English prose somewhere saying that the reduction happen in E.
 > 
 
 Ok.  In that case, I’m far less likely to write my next paper in Redex instead of independently doing it in LaTeX and then just treating Redex as 
 an implementation tool (as I’ve done in the past).
 (and thereby introducing bugs) if it does not correctly render common semantics notions that it otherwise supports quite nicely.
 Isn’t that one of the intended points behind Redex besides running?  This doesn’t seem to fit that philosophy.
 
 Thanks for the fast response!
 
 Ron
 
 
 > Robby
 > 
 > 
 > On Mon, Jul 3, 2017 at 11:32 AM,  <rxg@cs.ubc.ca> wrote:
 >> A new problem report is waiting at
 >>  http://bugs.racket-lang.org/query/?cmd=view&pr=15457
 >> 
 >> Reported by Ronald Garcia for release: 6.9
 >> 
 >> *** Description:
 >> applying (render-reduction-relation) to a reduction relation defined using context-closure appears to only render the underlying reduction relation, not its contextual closure.
 >> 
 >> *** How to repeat:
 >> #lang racket
 >> (require redex)
 >> 
 >> (define-language XO
 >>  (e ::= x o (e e))
 >>  (E ::= hole (E e) (e E)))
 >> 
 >> (define r
 >>  (reduction-relation XO
 >>   (--> x o)
 >>   (--> o x)))
 >> 
 >> (rule-pict-style 'horizontal)
 >> 
 >> (define -->r
 >>  (context-closure r XO E))
 >> 
 >> (reduction-relation->pict r)
 >> (reduction-relation->pict -->r)
 >> 
 >> *** Environment:
 >> macosx "Darwin CPSC-LM-RXG 15.6.0 Darwin Kernel Version 15.6.0: Tue Apr 11 16:00:51 PDT 2017; root:xnu-3248.60.11.5.3~1/RELEASE_X86_64 x86_64" (x86_64-macosx/3m) (get-display-depth) = 32
 >> Human Language: english
 >> (current-memory-use) 1754653952
 >> raco pkg (show):
 >> Installation-wide:
 >> Package            Checksum             Source
 >> main-distribution  59e9a33d2c5f01ae...  catalog...tribution
 >> racket-lib         cd090dc3c3452a44...  catalog racket-lib
 >> [192 auto-installed packages not shown]
 >> User-specific for installation "6.9":
 >> [none]
 >> 
 >> 
 >> 
 >> Collections:
 >> ("/Users/ronaldgarcia/Library/Racket/6.9/collects"
 >> (non-existent-path))
 >> ("/Applications/Racket v6.9/collects"
 >> ("acks" "compiler" "data" "db" "dynext" "ffi" "file" "info" "info-domain" "json" "launcher" "net" "openssl" "pkg" "planet" "racket" "raco" "reader" "realm" "s-exp" "setup" "syntax" "version" "xml"))
 >> 
 >> Recent Internal Errors:
 >> Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((test) (main)) #t))
 >> 
 
 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Ronald Garcia <rxg@cs.ubc.ca>
Cc: bugs <bugs@racket-lang.org>
Subject: Re: [racket-bug] all/15457: Redex does not render contexts in
 reduction relation defined using context-closure
Date: Mon, 3 Jul 2017 12:53:24 -0500

 Sorry this is so annoying. :(
 
 On Mon, Jul 3, 2017 at 12:39 PM, Ronald Garcia <rxg@cs.ubc.ca> wrote:
 >
 >> On Jul 3, 2017, at 10:29 AM, Robby Findler <robby@eecs.northwestern.edu> wrote:
 >>
 >> Yes, that's correct. The way Redex is currently designed, it isn't
 >> very good at rendering things that don't correspond to source code.
 >
 > Umm…does (context-closure r XO E) not count as source code in this sense?
 > I was expecting it to just do something like render a single context rule.
 
 Well, sure, that's what I mean by "English". You can ask redex to
 typset any of those things; I guess that only "E" makes sense to the
 readers of your paper, however.
 
 >> One could argue this is a design flaw (although it does have upsides
 >> in that you can control fiddly details of the typesetting by changing
 >> the source), I suppose. But it is baked pretty deep into Redex.
 >>
 >> I suggest you either write the contexts into the rules, or add some
 >> English prose somewhere saying that the reduction happen in E.
 >>
 >
 > Ok.  In that case, I’m far less likely to write my next paper in Redex instead of independently doing it in LaTeX and then just treating Redex as
 > an implementation tool (as I’ve done in the past).
 > (and thereby introducing bugs) if it does not correctly render common semantics notions that it otherwise supports quite nicely.
 > Isn’t that one of the intended points behind Redex besides running?  This doesn’t seem to fit that philosophy.
 
 I think it does, but perhaps you and I have different opinions on what
 the philosophy is exactly.
 
 I certainly agree that there are parts of the way Redex's typesetting
 works (and Redex in general, of course!) than can be improved.
 
 Maybe we should continue this conversation in person over a nice meal,
 instead of right before the POPL deadline? :)
 
 Robby
 
