From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Thu Oct 29 13:17:02 2015
Received: from mail-io0-f169.google.com (mail-io0-f169.google.com [209.85.223.169])
	by winooski.ccs.neu.edu (8.14.7/8.14.7) with ESMTP id t9THGp7e018164
	for <bugs@bugs.plt-scheme.org>; Thu, 29 Oct 2015 13:16:52 -0400
Message-Id: <201510291716.t9THGmRP018154@winooski.ccs.neu.edu>
Date: Thu, 29 Oct 2015 13:16:48 -0400
From: danielfeltey2015@u.northwestern.edu
To: bugs@racket-lang.org
Subject: BackTrace on bad free-id-table-ref use causes DrRacket Internal Error

>Number:         15174
>Category:       all
>Synopsis:       BackTrace on bad free-id-table-ref use causes DrRacket Internal Error
>Class:          sw-bug
>Responsible:    nobody
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Thu Oct 29 13:20:02 -0400 2015
>Last-Modified:  Thu Oct 29 17:52:01 -0400 2015
>Originator:     Dan Feltey
>Organization:
plt
>Submitter-Id:   unknown
>Release:        6.3.0.2--2015-10-29(3f20803/a)
>Environment:
macosx "Darwin dhcp-10-105-214-154.wireless.northwestern.private 14.0.0 Darwin Kernel Version 14.0.0: Fri Sep 19 00:26:44 PDT 2014; root:xnu-2782.1.97~2/RELEASE_X86_64 x86_64" (x86_64-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 387934896
raco pkg (show):
Installation-wide:
 Package            Checksum     Source
 main-distribution  b9d21435...  catalog main-distribution
 racket-lib         3150c27c...  catalog racket-lib
 [186 auto-installed packages not shown]
User-specific for installation "snapshot":
 [none]



Collections:
("/Users/dan/Library/Racket/snapshot/collects"
 (non-existent-path))
("/Users/dan/racket/snapshots/Racket v6.3.0.2-20151029-3f20803/collects"
 (".gitignore" "acks" "compiler" "data" "db" "dynext" "ffi" "file" "info" "info-domain" "json" "launcher" "net" "openssl" "pkg" "planet" "racket" "rackunit" "raco" "reader" "realm" "s-exp" "scheme" "setup" "srfi" "syntax" "unstable" "version" "xml"))

Recent Internal Errors: Saved 1 internal error:

open-input-file: cannot open directory as a file
  path: /Users/dan/racket/snapshots/Racket v6.3.0.2-20151029-3f20803/collects
  system error: errno=?
  context...:
   /Users/dan/racket/snapshots/Racket v6.3.0.2-20151029-3f20803/share/pkgs/gui-lib/mred/private/editor.rkt:174:19
   /Users/dan/racket/snapshots/Racket v6.3.0.2-20151029-3f20803/share/pkgs/drracket/drracket/private/debug.rkt:1019:2: insert-context
   /Users/dan/racket/snapshots/Racket v6.3.0.2-20151029-3f20803/share/pkgs/drracket/drracket/private/debug.rkt:978:2: show-frame
   /Users/dan/racket/snapshots/Racket v6.3.0.2-20151029-3f20803/share/pkgs/drracket/drracket/private/debug.rkt:863:18: loop
   /Users/dan/racket/snapshots/Racket v6.3.0.2-20151029-3f20803/share/pkgs/drracket/drracket/private/debug.rkt:858:14: show-next-dis
   /Users/dan/racket/snapshots/Racket v6.3.0.2-20151029-3f20803/share/pkgs/drracket/drracket/private/debug.rkt:850:2: add-one-set-to-frame
   /Users/dan/racket/snapshots/Racket v6.3.0.2-20151029-3f20803/share/pkgs/drracket/drracket/private/debug.rkt:839:2: add-ec/text
   /Users/dan/racket/snapshots/Racket v6.3.0.2-20151029-3f20803/share/pkgs/drracket/drracket/private/debug.rkt:816:2: show-backtrace-window/edition-pairs/two
   /Users/dan/racket/snapshots/Racket v6.3.0.2-20151029-3f20803/share/pkgs/drracket/drracket/private/debug.rkt:135:6: on-event method in ...et/private/debug.rkt:103:4
   /Users/dan/racket/snapshots/Racket v6.3.0.2-20151029-3f20803/share/pkgs/gui-lib/mred/private/wxme/editor-canvas.rkt:397:2: on-event method in editor-canvas%
   /Users/dan/racket/snapshots/Racket v6.3.0.2-20151029-3f20803/collects/racket/private/more-scheme.rkt:148:2: call-with-break-parameterization
   /Users/dan/racket/snapshots/Racket v6.3.0.2-20151029-3f20803/collects/racket/private/more-scheme.rkt:265:2: call-with-exception-handler
   /Users/dan/racket/snapshots/Racket v6.3.0.2-20151029-3f20803/share/pkgs/gui-lib/mred/private/wx/cocoa/window.rkt:800:4: dispatch-on-event method in window%
   /Users/dan/racket/snapshots/Racket v6.3.0.2-20151029-3f20803/share/pkgs/gui-lib/mred/private/wx/common/queue.rkt:454:6
   /Users/dan/racket/snapshots/Racket v6.3.0.2-20151029-3f20803/share/pkgs/gui-lib/mred/private/wx/common/queue.rkt:505:32
   /Users/dan/racket/snapshots/Racket v6.3.0.2-20151029-3f20803/share/pkgs/gui-lib/mred/private/wx/common/queue.rkt:653:3

Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((test) (main)) #t))
>Description:
Running the following program:

```
#lang racket

(require syntax/id-table)
(free-id-table-ref (make-free-id-table) #'#f #f)
```

Produces the error:
free-id-table-ref: contract violation
  expected: identifier?
  given: #<syntax:4:42 #f>
  in: the 2nd argument of
      (->*
       (free-id-table? identifier?)
       (any/c)
       any)
  contract from: 
      <collects>/syntax/id-table.rkt
  blaming: anonymous-module
   (assuming the contract is correct)
  at: <collects>/:247.16

Clicking on the backtrace button in DrRacket is consistently causing a DrRacket internal error dialogue showing:

open-input-file: cannot open directory as a file
  path: /Users/dan/racket/snapshots/Racket v6.3.0.2-20151029-3f20803/collects
  system error: errno=?
  context...:
   /Users/dan/racket/snapshots/Racket v6.3.0.2-20151029-3f20803/share/pkgs/gui-lib/mred/private/editor.rkt:174:19
   /Users/dan/racket/snapshots/Racket v6.3.0.2-20151029-3f20803/share/pkgs/drracket/drracket/private/debug.rkt:1019:2: insert-context
   /Users/dan/racket/snapshots/Racket v6.3.0.2-20151029-3f20803/share/pkgs/drracket/drracket/private/debug.rkt:978:2: show-frame
   /Users/dan/racket/snapshots/Racket v6.3.0.2-20151029-3f20803/share/pkgs/drracket/drracket/private/debug.rkt:863:18: loop
   /Users/dan/racket/snapshots/Racket v6.3.0.2-20151029-3f20803/share/pkgs/drracket/drracket/private/debug.rkt:858:14: show-next-dis
   /Users/dan/racket/snapshots/Racket v6.3.0.2-20151029-3f20803/share/pkgs/drracket/drracket/private/debug.rkt:850:2: add-one-set-to-frame
   /Users/dan/racket/snapshots/Racket v6.3.0.2-20151029-3f20803/share/pkgs/drracket/drracket/private/debug.rkt:839:2: add-ec/text
   /Users/dan/racket/snapshots/Racket v6.3.0.2-20151029-3f20803/share/pkgs/drracket/drracket/private/debug.rkt:816:2: show-backtrace-window/edition-pairs/two
   /Users/dan/racket/snapshots/Racket v6.3.0.2-20151029-3f20803/share/pkgs/drracket/drracket/private/debug.rkt:135:6: on-event method in ...et/private/debug.rkt:103:4
   /Users/dan/racket/snapshots/Racket v6.3.0.2-20151029-3f20803/share/pkgs/gui-lib/mred/private/wxme/editor-canvas.rkt:397:2: on-event method in editor-canvas%
   /Users/dan/racket/snapshots/Racket v6.3.0.2-20151029-3f20803/collects/racket/private/more-scheme.rkt:148:2: call-with-break-parameterization
   /Users/dan/racket/snapshots/Racket v6.3.0.2-20151029-3f20803/collects/racket/private/more-scheme.rkt:265:2: call-with-exception-handler
   /Users/dan/racket/snapshots/Racket v6.3.0.2-20151029-3f20803/share/pkgs/gui-lib/mred/private/wx/cocoa/window.rkt:800:4: dispatch-on-event method in window%
   /Users/dan/racket/snapshots/Racket v6.3.0.2-20151029-3f20803/share/pkgs/gui-lib/mred/private/wx/common/queue.rkt:454:6
   /Users/dan/racket/snapshots/Racket v6.3.0.2-20151029-3f20803/share/pkgs/gui-lib/mred/private/wx/common/queue.rkt:505:32
   /Users/dan/racket/snapshots/Racket v6.3.0.2-20151029-3f20803/share/pkgs/gui-lib/mred/private/wx/common/queue.rkt:653:3
>How-To-Repeat:
Run the program

```
#lang racket

(require syntax/id-table)
(free-id-table-ref (make-free-id-table) #'#f #f)
```

in DrRacket, then click on the backtrace button to see the internal error.
>Fix:
>Audit-Trail:
From: Robby Findler <robby@eecs.northwestern.edu>
To: Daniel Feltey <danielfeltey2015@u.northwestern.edu>,
        bugs <bugs@racket-lang.org>
Cc: nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/15174: BackTrace on bad free-id-table-ref use
 causes DrRacket Internal Error
Date: Thu, 29 Oct 2015 13:52:23 -0500

 It appears that something is going wrong in the construction of the
 exception record's continuation-mark set's context. This expression:
 
 #lang racket
 
 (require syntax/id-table)
 (define e
   (with-handlers ([exn? values])
     (free-id-table-ref (make-free-id-table) #'#f #f)))
 (filter
  (λ (x) (not (file-exists? x)))
  (map
   (λ (x) (srcloc-source (cdr x)))
   (continuation-mark-set->context
    (exn-continuation-marks e))))
 
 for me produces this:
 
 '(#<path:/Users/robby/git/plt/racket/collects/syntax/..>)
 
 but I think the list should be empty.
 
From: Sam Tobin-Hochstadt <samth@cs.indiana.edu>
To: Robby Findler <robby@eecs.northwestern.edu>,
        Daniel Feltey <danielfeltey2015@u.northwestern.edu>,
        bugs <bugs@racket-lang.org>
Cc: nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/15174: BackTrace on bad free-id-table-ref use
 causes DrRacket Internal Error
Date: Thu, 29 Oct 2015 19:18:09 +0000

 --001a11349cee7077cd0523432c36
 Content-Type: text/plain; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 It looks like it's something related to the code that wraps contracts
 around the id-table functions. If you switch to requiring
 `syntax/private/id-table`, the behavior Robby describes goes away. But
 wrapping those operations with contracts manually didn't seem to provoke
 the error.
 
 Sam
 
 On Thu, Oct 29, 2015 at 2:52 PM Robby Findler <robby@eecs.northwestern.edu>
 wrote:
 
 > It appears that something is going wrong in the construction of the
 > exception record's continuation-mark set's context. This expression:
 >
 > #lang racket
 >
 > (require syntax/id-table)
 > (define e
 >   (with-handlers ([exn? values])
 >     (free-id-table-ref (make-free-id-table) #'#f #f)))
 > (filter
 >  (=CE=BB (x) (not (file-exists? x)))
 >  (map
 >   (=CE=BB (x) (srcloc-source (cdr x)))
 >   (continuation-mark-set->context
 >    (exn-continuation-marks e))))
 >
 > for me produces this:
 >
 > '(#<path:/Users/robby/git/plt/racket/collects/syntax/..>)
 >
 > but I think the list should be empty.
 >
 
 --001a11349cee7077cd0523432c36
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 <div dir=3D"ltr">It looks like it&#39;s something related to the code that =
 wraps contracts around the id-table functions. If you switch to requiring `=
 syntax/private/id-table`, the behavior Robby describes goes away. But wrapp=
 ing those operations with contracts manually didn&#39;t seem to provoke the=
  error.<div><br></div><div>Sam<br><br><div class=3D"gmail_quote"><div dir=
 =3D"ltr">On Thu, Oct 29, 2015 at 2:52 PM Robby Findler &lt;<a href=3D"mailt=
 o:robby@eecs.northwestern.edu">robby@eecs.northwestern.edu</a>&gt; wrote:<b=
 r></div><blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border=
 -left:1px #ccc solid;padding-left:1ex">It appears that something is going w=
 rong in the construction of the<br>
 exception record&#39;s continuation-mark set&#39;s context. This expression=
 :<br>
 <br>
 #lang racket<br>
 <br>
 (require syntax/id-table)<br>
 (define e<br>
 =C2=A0 (with-handlers ([exn? values])<br>
 =C2=A0 =C2=A0 (free-id-table-ref (make-free-id-table) #&#39;#f #f)))<br>
 (filter<br>
 =C2=A0(=CE=BB (x) (not (file-exists? x)))<br>
 =C2=A0(map<br>
 =C2=A0 (=CE=BB (x) (srcloc-source (cdr x)))<br>
 =C2=A0 (continuation-mark-set-&gt;context<br>
 =C2=A0 =C2=A0(exn-continuation-marks e))))<br>
 <br>
 for me produces this:<br>
 <br>
 &#39;(#&lt;path:/Users/robby/git/plt/racket/collects/syntax/..&gt;)<br>
 <br>
 but I think the list should be empty.<br>
 </blockquote></div></div></div>
 
 --001a11349cee7077cd0523432c36--
From: Matthew Flatt <mflatt@cs.utah.edu>
To: Sam Tobin-Hochstadt <samth@cs.indiana.edu>
Cc: Robby Findler <robby@eecs.northwestern.edu>,
        Daniel Feltey <danielfeltey2015@u.northwestern.edu>,
        bugs <bugs@racket-lang.org>, nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/15174: BackTrace on bad free-id-table-ref use
 causes DrRacket Internal Error
Date: Thu, 29 Oct 2015 17:51:28 -0400

 I've pushed a repair - thanks!
 
 At Thu, 29 Oct 2015 19:18:09 +0000, Sam Tobin-Hochstadt wrote:
 > It looks like it's something related to the code that wraps contracts
 > around the id-table functions. If you switch to requiring
 > `syntax/private/id-table`, the behavior Robby describes goes away. But
 > wrapping those operations with contracts manually didn't seem to provoke
 > the error.
 > 
 > Sam
 > 
 > On Thu, Oct 29, 2015 at 2:52 PM Robby Findler <robby@eecs.northwestern.edu>
 > wrote:
 > 
 > > It appears that something is going wrong in the construction of the
 > > exception record's continuation-mark set's context. This expression:
 > >
 > > #lang racket
 > >
 > > (require syntax/id-table)
 > > (define e
 > >   (with-handlers ([exn? values])
 > >     (free-id-table-ref (make-free-id-table) #'#f #f)))
 > > (filter
 > >  (λ (x) (not (file-exists? x)))
 > >  (map
 > >   (λ (x) (srcloc-source (cdr x)))
 > >   (continuation-mark-set->context
 > >    (exn-continuation-marks e))))
 > >
 > > for me produces this:
 > >
 > > '(#<path:/Users/robby/git/plt/racket/collects/syntax/..>)
 > >
 > > but I think the list should be empty.
 > >
 
