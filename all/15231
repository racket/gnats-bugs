From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Thu Jan 28 06:47:37 2016
Received: from mail-ig0-f178.google.com (mail-ig0-f178.google.com [209.85.213.178])
	by winooski.ccs.neu.edu (8.14.7/8.14.7) with ESMTP id u0SBlZ39012804
	for <bugs@bugs.plt-scheme.org>; Thu, 28 Jan 2016 06:47:35 -0500
Message-Id: <201601281147.u0SBlWOm012785@winooski.ccs.neu.edu>
Date: Thu, 28 Jan 2016 06:47:32 -0500
From: klaus.ostermann@uni-tuebingen.de
To: bugs@racket-lang.org
Subject: Stepper does not prevent accidental name capture during beta reduction

>Number:         15231
>Category:       all
>Synopsis:       Stepper does not prevent accidental name capture during beta reduction
>Class:          sw-bug
>Responsible:    nobody
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Thu Jan 28 06:48:01 -0500 2016
>Originator:     Klaus Ostermann
>Organization:
plt
>Submitter-Id:   unknown
>Release:        6.3
>Environment:
macosx "Darwin endor.Informatik.Uni-Tuebingen.De 14.5.0 Darwin Kernel Version 14.5.0: Tue Sep  1 21:23:09 PDT 2015; root:xnu-2782.50.1~1/RELEASE_X86_64 x86_64" (x86_64-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 534921964
raco pkg (show):
Installation-wide:
 Package            Checksum     Source
 main-distribution  46973fb2...  catalog main-distribution
 racket-lib         1f53b49c...  catalog racket-lib
 [186 auto-installed packages not shown]
User-specific for installation "6.3":
 [none]



Collections:
("/Users/klaus/Library/Racket/6.3/collects"
 ("info-domain" "utue-info1-ws15"))
("/Applications/Racket v6.3/collects"
 (".gitignore" "acks" "compiler" "data" "db" "dynext" "ffi" "file" "info" "info-domain" "json" "launcher" "net" "openssl" "pkg" "planet" "racket" "raco" "reader" "realm" "s-exp" "setup" "syntax" "unstable" "version" "xml"))

Recent Internal Errors: 
Computer Language: (("Teaching Languages" "How to Design Programs" "Intermediate Student with lambda") (#(#t constructor repeating-decimal #f #t none) #f () #f))
>Description:
see "steps to reproduce".
>How-To-Repeat:
The following program illustrates the bug:

(define y 5)

(define (f g)
  (lambda (y)
    (g y)))

((f (lambda (x) (+ x y))) 8)

In the second reduction step, the expression

(((lambda (g) (lambda (y) (g y)))
  (lambda (x) (+ x y)))
 8)

is reduced to

((lambda (y) ((lambda (x) (+ x y)) y)) 8)

which would evaluate to 16 and not 13.
>Fix:
