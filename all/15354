From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Fri Sep 23 16:50:11 2016
Received: from mail-io0-f178.google.com (mail-io0-f178.google.com [209.85.223.178])
	by winooski.ccs.neu.edu (8.14.7/8.14.7) with ESMTP id u8NKo9sC009990
	for <bugs@bugs.plt-scheme.org>; Fri, 23 Sep 2016 16:50:09 -0400
Message-Id: <201609232050.u8NKo6Fr009983@winooski.ccs.neu.edu>
Date: Fri, 23 Sep 2016 16:50:06 -0400
From: akuhlens@indiana.edu
To: bugs@racket-lang.org
Subject: typed-racket produces incorrect contracts to enforce type saftey.

>Number:         15354
>Category:       all
>Synopsis:       typed-racket produces incorrect contracts to enforce type saftey.
>Class:          sw-bug
>Responsible:    nobody
>Severity:       non-critical
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Fri Sep 23 16:52:01 -0400 2016
>Last-Modified:  Fri Sep 23 17:04:02 -0400 2016
>Originator:     Andre Kuhlenschmidt
>Organization:
plt
>Submitter-Id:   unknown
>Release:        6.6
>Environment:
macosx "Darwin MacBook-Pro-5.local 15.5.0 Darwin Kernel Version 15.5.0: Tue Apr 19 18:36:36 PDT 2016; root:xnu-3248.50.21~8/RELEASE_X86_64 x86_64" (x86_64-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 266815964
raco pkg (show):
Installation-wide:
 Package            Checksum             Source
 main-distribution  e24e5af07557ac0f...  catalog...tribution
 racket-lib         21b7fee99c95a8d7...  catalog racket-lib
 [189 auto-installed packages not shown]
User-specific for installation "6.6":
 [none]



Collections:
("/Users/akuhlens/Library/Racket/6.6/collects"
 (non-existent-path))
("/Users/akuhlens/Applications/Racket v6.6/collects"
 ("acks" "compiler" "data" "db" "dynext" "ffi" "file" "info" "info-domain" "json" "launcher" "net" "openssl" "pkg" "planet" "racket" "raco" "reader" "realm" "s-exp" "setup" "syntax" "version" "xml"))

Recent Internal Errors: 
Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((test) (main)) #t))
>Description:
The typed code returns a value that fails the contract check generated by typed-racket even though the code passes type checking. 
>How-To-Repeat:
#lang typed/racket/base
;; run the test submodule to get the contract 
;; violation.

(struct (a) Ann ([first : a]))

(define-type S1-Expr (Ann (Ann '+))) 

(provide type-check)

(: type-check (-> S1-Expr))

(define (type-check)
  (Ann (Ann '+)))

(module* test racket/base
  (require (submod ".."))
  (type-check))
>Fix:
>Audit-Trail:
From: Sam Tobin-Hochstadt <samth@cs.indiana.edu>
To: "Kuhlenschmidt, Andre Michael" <akuhlens@indiana.edu>,
        bugs <bugs@racket-lang.org>
Cc: 
Subject: Re: [racket-bug] all/15354: typed-racket produces incorrect contracts
 to enforce type saftey.
Date: Fri, 23 Sep 2016 17:03:55 -0400

 Somehow this seems to generate a contract like this:
 
 #lang racket
 (struct Ann (first))
 (define ann/c (struct/c Ann (recursive-contract ann/c #:chaperone)))
 (define/contract (type-check) (-> ann/c)
   (Ann (Ann '+)))
 (type-check)
 
 Which you'll note doesn't mention `+`. So it unsurprisingly fails.
 
 Sam
