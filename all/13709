From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Thu Apr 25 03:32:50 2013
Received: from mail-ob0-f178.google.com (mail-ob0-f178.google.com [209.85.214.178])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id r3P7Wkkg018620
	for <bugs@bugs.plt-scheme.org>; Thu, 25 Apr 2013 03:32:46 -0400
Message-Id: <201304250732.r3P7WikM018611@champlain.ccs.neu.edu>
Date: Thu, 25 Apr 2013 03:32:44 -0400
From: lewis1711@gmail.com
To: bugs@racket-lang.org
Subject: "lines" procedure in plot gives confusing messages for contract violation

>Number:         13709
>Category:       all
>Synopsis:       "lines" procedure in plot gives confusing messages for contract violation
>Class:          change-request
>Responsible:    ntoronto
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Thu Apr 25 03:36:01 -0400 2013
>Closed-Date:    Fri Apr 04 23:45:52 -0400 2014
>Last-Modified:  Fri Apr 04 23:45:52 -0400 2014
>Originator:     Lewis Potter
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.3.2
>Environment:
unix "Linux tsmi 3.5.0-26-generic #42-Ubuntu SMP Fri Mar 8 23:18:20 UTC 2013 x86_64 x86_64 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 757321104
Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()
Planet2 (show):
Installation-wide:
 [none]
User-specific, all-version:
 [none]
User-specific, version-specific:
 [none]



Collections:
("/home/lewis/.racket/5.3.2/collects"
 (non-existent-path))
("/usr/lib/racket/collects"
 ("gui-debugger" "make" "db" "parser-tools" "mred" "plai" "rackunit" "planet2" "mzcom" "ffi" "lang" "stepper" "xrepl" "s-exp" "help" "slatex" "scheme" "config" "schemeunit" "racket" "embedded-gui" "reader" "typed-racket" "teachpack" "swindle" "macro-debugger" "mrlib" "dynext" "drscheme" "scriblib" "profile" "framework" "string-constants" "math" "json" "preprocessor" "graphics" "deinprogramm" "syntax" "typed-scheme" "eopl" "compiler" "at-exp" "version" "slideshow" "texpict" "trace" "mzscheme" "typed" "unstable" "file" "raco" "test-engine" "setup" "hierlist" "defaults" "syntax-color" "datalog" "r5rs" "srfi" "net" "planet" "frtime" "racklog" "data" "sgl" "lazy" "plot" "readline" "r6rs" "browser" "scribble" "wxme" "rnrs" "picturing-programs" "mysterx" "xml" "launcher" "web-server" "mzlib" "future-visualizer" "redex" "compatibility" "algol60" "drracket" "icons" "games" "openssl" "images" "2htdp" "errortrace" "scribblings" "html" "info-domain" "htdp"))

Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((main) (test))))
>Description:
Message

"lines: contract violation
  expected: sequence of length >= 2
  given: #<sequence>"

Is confusing when the argument given to lines has length greater than 2.

I think what the error message should point is that one of the *elements* in the sequence has a length < 2. Was an extremely confusing error message.
>How-To-Repeat:
> (require plot)
> (define xs '("" "lol" "lmao"))
> (lines xs)
. . lines: contract violation
  expected: sequence of length >= 2
  given: #<sequence>
> (length xs)
3
>Fix:
>Audit-Trail:
From: Robby Findler <robby@eecs.northwestern.edu>
To: Lewis Campbell <lewis1711@gmail.com>, bugs <bugs@racket-lang.org>
Cc: nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/13709: "lines" procedure in plot gives confusing
 messages for contract violation
Date: Thu, 25 Apr 2013 07:01:11 -0500

 --e89a8fb1f21aac5d1704db2e2cdf
 Content-Type: text/plain; charset=UTF-8
 
 In line.rkt, I see:
 
 (defproc (lines [vs  (sequence/c (sequence/c real?))] ...)
 
 but I think that maybe it should be something more like:
 
 (defproc (lines [vs  (sequenceof (sequence/c real? real?))]
 
 even though we don't have a sequenceof contract thing (I can fix that).
 
 That is, I think sequence/c is supposed to construct sequences of fixed
 lengths and the inner sequence is supposed to have a fixed length, but not
 the outer one; it needs a contract that accepts sequences of any length.
 
 Do I have that right?
 
 Robby
 
 
 
 
 
 On Thu, Apr 25, 2013 at 2:36 AM, <lewis1711@gmail.com> wrote:
 
 > A new problem report is waiting at
 >   http://bugs.racket-lang.org/query/?cmd=view&pr=13709
 >
 > Reported by Lewis Potter for release: 5.3.2
 >
 > *** Description:
 > Message
 >
 > "lines: contract violation
 >   expected: sequence of length >= 2
 >   given: #<sequence>"
 >
 > Is confusing when the argument given to lines has length greater than 2.
 >
 > I think what the error message should point is that one of the *elements*
 > in the sequence has a length < 2. Was an extremely confusing error message.
 >
 > *** How to repeat:
 > > (require plot)
 > > (define xs '("" "lol" "lmao"))
 > > (lines xs)
 > . . lines: contract violation
 >   expected: sequence of length >= 2
 >   given: #<sequence>
 > > (length xs)
 > 3
 >
 > *** Environment:
 > unix "Linux tsmi 3.5.0-26-generic #42-Ubuntu SMP Fri Mar 8 23:18:20 UTC
 > 2013 x86_64 x86_64 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth)
 > = 32
 > Human Language: english
 > (current-memory-use) 757321104
 > Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = ();
 > (links #:user? #f #:root? #t) = ()
 > Planet2 (show):
 > Installation-wide:
 >  [none]
 > User-specific, all-version:
 >  [none]
 > User-specific, version-specific:
 >  [none]
 >
 >
 >
 > Collections:
 > ("/home/lewis/.racket/5.3.2/collects"
 >  (non-existent-path))
 > ("/usr/lib/racket/collects"
 >  ("gui-debugger" "make" "db" "parser-tools" "mred" "plai" "rackunit"
 > "planet2" "mzcom" "ffi" "lang" "stepper" "xrepl" "s-exp" "help" "slatex"
 > "scheme" "config" "schemeunit" "racket" "embedded-gui" "reader"
 > "typed-racket" "teachpack" "swindle" "macro-debugger" "mrlib" "dynext"
 > "drscheme" "scriblib" "profile" "framework" "string-constants" "math"
 > "json" "preprocessor" "graphics" "deinprogramm" "syntax" "typed-scheme"
 > "eopl" "compiler" "at-exp" "version" "slideshow" "texpict" "trace"
 > "mzscheme" "typed" "unstable" "file" "raco" "test-engine" "setup"
 > "hierlist" "defaults" "syntax-color" "datalog" "r5rs" "srfi" "net" "planet"
 > "frtime" "racklog" "data" "sgl" "lazy" "plot" "readline" "r6rs" "browser"
 > "scribble" "wxme" "rnrs" "picturing-programs" "mysterx" "xml" "launcher"
 > "web-server" "mzlib" "future-visualizer" "redex" "compatibility" "algol60"
 > "drracket" "icons" "games" "openssl" "images" "2htdp" "errortrace"
 > "scribblings" "html" "info-domain" "htdp"))
 >
 > Computer Language: (("Determine language from source") (#(#t print
 > mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((main)
 > (test))))
 >
 >
 
 --e89a8fb1f21aac5d1704db2e2cdf
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 <div dir=3D"ltr">In line.rkt, I see:<div><br></div><div><div>(defproc (line=
 s [vs =C2=A0(sequence/c (sequence/c real?))] ...)</div></div><div><br></div=
 ><div style>but I think that maybe it should be something more like:</div><=
 div style>
 <br></div><div style><div>(defproc (lines [vs =C2=A0(sequenceof (sequence/c=
  real? real?))]</div><div><br></div><div style>even though we don&#39;t hav=
 e a sequenceof contract thing (I can fix that).=C2=A0</div><div style><br><=
 /div><div style>
 That is, I think sequence/c is supposed to construct sequences of fixed len=
 gths and the inner sequence is supposed to have a fixed length, but not the=
  outer one; it needs a contract that accepts sequences of any length.</div>
 <div style><br></div><div style>Do I have that right?</div><div style><br><=
 /div><div style>Robby</div><div style><br></div><div style><br></div><div><=
 br></div></div></div><div class=3D"gmail_extra"><br><br><div class=3D"gmail=
 _quote">
 On Thu, Apr 25, 2013 at 2:36 AM,  <span dir=3D"ltr">&lt;<a href=3D"mailto:l=
 ewis1711@gmail.com" target=3D"_blank">lewis1711@gmail.com</a>&gt;</span> wr=
 ote:<br><blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border=
 -left:1px #ccc solid;padding-left:1ex">
 A new problem report is waiting at<br>
 =C2=A0 <a href=3D"http://bugs.racket-lang.org/query/?cmd=3Dview&amp;pr=3D13=
 709" target=3D"_blank">http://bugs.racket-lang.org/query/?cmd=3Dview&amp;pr=
 =3D13709</a><br>
 <br>
 Reported by Lewis Potter for release: 5.3.2<br>
 <br>
 *** Description:<br>
 Message<br>
 <br>
 &quot;lines: contract violation<br>
 =C2=A0 expected: sequence of length &gt;=3D 2<br>
 =C2=A0 given: #&lt;sequence&gt;&quot;<br>
 <br>
 Is confusing when the argument given to lines has length greater than 2.<br=
 >
 <br>
 I think what the error message should point is that one of the *elements* i=
 n the sequence has a length &lt; 2. Was an extremely confusing error messag=
 e.<br>
 <br>
 *** How to repeat:<br>
 &gt; (require plot)<br>
 &gt; (define xs &#39;(&quot;&quot; &quot;lol&quot; &quot;lmao&quot;))<br>
 &gt; (lines xs)<br>
 . . lines: contract violation<br>
 =C2=A0 expected: sequence of length &gt;=3D 2<br>
 =C2=A0 given: #&lt;sequence&gt;<br>
 &gt; (length xs)<br>
 3<br>
 <br>
 *** Environment:<br>
 unix &quot;Linux tsmi 3.5.0-26-generic #42-Ubuntu SMP Fri Mar 8 23:18:20 UT=
 C 2013 x86_64 x86_64 x86_64 GNU/Linux&quot; (x86_64-linux/3m) (get-display-=
 depth) =3D 32<br>
 Human Language: english<br>
 (current-memory-use) 757321104<br>
 Links: (links) =3D (); (links #:user? #f) =3D (); (links #:root? #t) =3D ()=
 ; (links #:user? #f #:root? #t) =3D ()<br>
 Planet2 (show):<br>
 Installation-wide:<br>
 =C2=A0[none]<br>
 User-specific, all-version:<br>
 =C2=A0[none]<br>
 User-specific, version-specific:<br>
 =C2=A0[none]<br>
 <br>
 <br>
 <br>
 Collections:<br>
 (&quot;/home/lewis/.racket/5.3.2/collects&quot;<br>
 =C2=A0(non-existent-path))<br>
 (&quot;/usr/lib/racket/collects&quot;<br>
 =C2=A0(&quot;gui-debugger&quot; &quot;make&quot; &quot;db&quot; &quot;parse=
 r-tools&quot; &quot;mred&quot; &quot;plai&quot; &quot;rackunit&quot; &quot;=
 planet2&quot; &quot;mzcom&quot; &quot;ffi&quot; &quot;lang&quot; &quot;step=
 per&quot; &quot;xrepl&quot; &quot;s-exp&quot; &quot;help&quot; &quot;slatex=
 &quot; &quot;scheme&quot; &quot;config&quot; &quot;schemeunit&quot; &quot;r=
 acket&quot; &quot;embedded-gui&quot; &quot;reader&quot; &quot;typed-racket&=
 quot; &quot;teachpack&quot; &quot;swindle&quot; &quot;macro-debugger&quot; =
 &quot;mrlib&quot; &quot;dynext&quot; &quot;drscheme&quot; &quot;scriblib&qu=
 ot; &quot;profile&quot; &quot;framework&quot; &quot;string-constants&quot; =
 &quot;math&quot; &quot;json&quot; &quot;preprocessor&quot; &quot;graphics&q=
 uot; &quot;deinprogramm&quot; &quot;syntax&quot; &quot;typed-scheme&quot; &=
 quot;eopl&quot; &quot;compiler&quot; &quot;at-exp&quot; &quot;version&quot;=
  &quot;slideshow&quot; &quot;texpict&quot; &quot;trace&quot; &quot;mzscheme=
 &quot; &quot;typed&quot; &quot;unstable&quot; &quot;file&quot; &quot;raco&q=
 uot; &quot;test-engine&quot; &quot;setup&quot; &quot;hierlist&quot; &quot;d=
 efaults&quot; &quot;syntax-color&quot; &quot;datalog&quot; &quot;r5rs&quot;=
  &quot;srfi&quot; &quot;net&quot; &quot;planet&quot; &quot;frtime&quot; &qu=
 ot;racklog&quot; &quot;data&quot; &quot;sgl&quot; &quot;lazy&quot; &quot;pl=
 ot&quot; &quot;readline&quot; &quot;r6rs&quot; &quot;browser&quot; &quot;sc=
 ribble&quot; &quot;wxme&quot; &quot;rnrs&quot; &quot;picturing-programs&quo=
 t; &quot;mysterx&quot; &quot;xml&quot; &quot;launcher&quot; &quot;web-serve=
 r&quot; &quot;mzlib&quot; &quot;future-visualizer&quot; &quot;redex&quot; &=
 quot;compatibility&quot; &quot;algol60&quot; &quot;drracket&quot; &quot;ico=
 ns&quot; &quot;games&quot; &quot;openssl&quot; &quot;images&quot; &quot;2ht=
 dp&quot; &quot;errortrace&quot; &quot;scribblings&quot; &quot;html&quot; &q=
 uot;info-domain&quot; &quot;htdp&quot;))<br>
 
 <br>
 Computer Language: ((&quot;Determine language from source&quot;) (#(#t prin=
 t mixed-fraction-e #f #t debug) (default) #() &quot;#lang racket\n&quot; #t=
  #t ((main) (test))))<br>
 <br>
 </blockquote></div><br></div>
 
 --e89a8fb1f21aac5d1704db2e2cdf--
From: Neil Toronto <neil.toronto@gmail.com>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: Lewis Campbell <lewis1711@gmail.com>, bugs <bugs@racket-lang.org>,
        nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/13709: "lines" procedure in plot gives confusing
 messages for contract violation
Date: Thu, 25 Apr 2013 09:54:40 -0600

 Just so we're on the same page... I think the problem is that this:
 
    given: #<sequence>
 
 makes it impossible to tell that the problem is an *element* of `vs' 
 instead of `vs' itself. `lines' is raising this error. By the time it 
 gets `vs', `sequence/c' has already wrapped its elements in new, opaque 
 sequences. You're suggesting having the contract system do all the error 
 checking by making the contract for `lines' more specific. The contract 
 system would print the original, infringing data.
 
 Unfortunately, a (sequence/c real? real?) isn't a two-element sequence, 
 it's a *multi-valued* sequence of any length, where each element is two 
 real values. Also, I'd rather have the contract stay as it is. It's 
 useful for the elements to be possibly longer, as it's common enough to 
 plot just the first two data points in a data set.
 
 Would it be hard to make `sequence/c' create a chaperone contract? Would 
 that preserve the original data shape?
 
 Another option is to make (sequenceof real? real? real?) meaningful: the 
 first two arguments would be contracts for the first two elements; the 
 last argument would be the contract for the rest of the elements.
 
 Neil ⊥
 
 On 04/25/2013 06:01 AM, Robby Findler wrote:
 > In line.rkt, I see:
 >
 > (defproc (lines [vs  (sequence/c (sequence/c real?))] ...)
 >
 > but I think that maybe it should be something more like:
 >
 > (defproc (lines [vs  (sequenceof (sequence/c real? real?))]
 >
 > even though we don't have a sequenceof contract thing (I can fix that).
 >
 > That is, I think sequence/c is supposed to construct sequences of fixed
 > lengths and the inner sequence is supposed to have a fixed length, but
 > not the outer one; it needs a contract that accepts sequences of any length.
 >
 > Do I have that right?
 >
 > Robby
 >
 >
 >
 >
 >
 > On Thu, Apr 25, 2013 at 2:36 AM, <lewis1711@gmail.com
 > <mailto:lewis1711@gmail.com>> wrote:
 >
 >     A new problem report is waiting at
 >     http://bugs.racket-lang.org/query/?cmd=view&pr=13709
 >
 >     Reported by Lewis Potter for release: 5.3.2
 >
 >     *** Description:
 >     Message
 >
 >     "lines: contract violation
 >        expected: sequence of length >= 2
 >        given: #<sequence>"
 >
 >     Is confusing when the argument given to lines has length greater than 2.
 >
 >     I think what the error message should point is that one of the
 >     *elements* in the sequence has a length < 2. Was an extremely
 >     confusing error message.
 >
 >     *** How to repeat:
 >      > (require plot)
 >      > (define xs '("" "lol" "lmao"))
 >      > (lines xs)
 >     . . lines: contract violation
 >        expected: sequence of length >= 2
 >        given: #<sequence>
 >      > (length xs)
 >     3
 >
 >     *** Environment:
 >     unix "Linux tsmi 3.5.0-26-generic #42-Ubuntu SMP Fri Mar 8 23:18:20
 >     UTC 2013 x86_64 x86_64 x86_64 GNU/Linux" (x86_64-linux/3m)
 >     (get-display-depth) = 32
 >     Human Language: english
 >     (current-memory-use) 757321104
 >     Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) =
 >     (); (links #:user? #f #:root? #t) = ()
 >     Planet2 (show):
 >     Installation-wide:
 >       [none]
 >     User-specific, all-version:
 >       [none]
 >     User-specific, version-specific:
 >       [none]
 >
 >
 >
 >     Collections:
 >     ("/home/lewis/.racket/5.3.2/collects"
 >       (non-existent-path))
 >     ("/usr/lib/racket/collects"
 >       ("gui-debugger" "make" "db" "parser-tools" "mred" "plai"
 >     "rackunit" "planet2" "mzcom" "ffi" "lang" "stepper" "xrepl" "s-exp"
 >     "help" "slatex" "scheme" "config" "schemeunit" "racket"
 >     "embedded-gui" "reader" "typed-racket" "teachpack" "swindle"
 >     "macro-debugger" "mrlib" "dynext" "drscheme" "scriblib" "profile"
 >     "framework" "string-constants" "math" "json" "preprocessor"
 >     "graphics" "deinprogramm" "syntax" "typed-scheme" "eopl" "compiler"
 >     "at-exp" "version" "slideshow" "texpict" "trace" "mzscheme" "typed"
 >     "unstable" "file" "raco" "test-engine" "setup" "hierlist" "defaults"
 >     "syntax-color" "datalog" "r5rs" "srfi" "net" "planet" "frtime"
 >     "racklog" "data" "sgl" "lazy" "plot" "readline" "r6rs" "browser"
 >     "scribble" "wxme" "rnrs" "picturing-programs" "mysterx" "xml"
 >     "launcher" "web-server" "mzlib" "future-visualizer" "redex"
 >     "compatibility" "algol60" "drracket" "icons" "games" "openssl"
 >     "images" "2htdp" "errortrace" "scribblings" "html" "info-domain"
 >     "htdp"))
 >
 >     Computer Language: (("Determine language from source") (#(#t print
 >     mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t
 >     ((main) (test))))
 >
 >
 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Neil Toronto <neil.toronto@gmail.com>
Cc: Lewis Campbell <lewis1711@gmail.com>, bugs <bugs@racket-lang.org>,
        nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/13709: "lines" procedure in plot gives confusing
 messages for contract violation
Date: Thu, 25 Apr 2013 11:16:53 -0500

 --e89a8fb1f21a23082404db31bf05
 Content-Type: text/plain; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 On Thu, Apr 25, 2013 at 10:54 AM, Neil Toronto <neil.toronto@gmail.com>wrot=
 e:
 
 > Just so we're on the same page... I think the problem is that this:
 >
 >   given: #<sequence>
 >
 > makes it impossible to tell that the problem is an *element* of `vs'
 > instead of `vs' itself.
 
 
 Right.
 
 
 > `lines' is raising this error. By the time it gets `vs', `sequence/c' has
 > already wrapped its elements in new, opaque sequences. You're suggesting
 > having the contract system do all the error checking by making the contra=
 ct
 > for `lines' more specific. The contract system would print the original,
 > infringing data.
 >
 >
 I'm not sure that literal plan will work. The contract system isn't set up
 to save unprojected versions of values for printing.
 
 We could change the sequence data structure, tho, so that it knows that it
 can print out certain sequences, or perhaps a prefix of them.
 
 
 > Unfortunately, a (sequence/c real? real?) isn't a two-element sequence,
 > it's a *multi-valued* sequence of any length, where each element is two
 > real values. Also, I'd rather have the contract stay as it is. It's usefu=
 l
 > for the elements to be possibly longer, as it's common enough to plot jus=
 t
 > the first two data points in a data set.
 >
 >
 Oh, right. Sorry for that confusion.
 
 The naming convention as I understand it, then, would suggest that this
 contract combinator should be called sequenceof, not sequence/c (sequence/c
 would correspond to the constructor 'sequence', if there were such a thing)=
 .
 
 
 
 > Would it be hard to make `sequence/c' create a chaperone contract? Would
 > that preserve the original data shape?
 >
 >
 I don't think the chaperone support is there yet for that (there are no
 list chaperones for example).
 
 
 > Another option is to make (sequenceof real? real? real?) meaningful: the
 > first two arguments would be contracts for the first two elements; the la=
 st
 > argument would be the contract for the rest of the elements.
 >
 >
 What do you think about a keyword argument to sequence/c that mandated a
 minimum length instead?
 
 Robby
 
 
 > Neil =E2=8A=A5
 >
 >
 > On 04/25/2013 06:01 AM, Robby Findler wrote:
 >
 >> In line.rkt, I see:
 >>
 >> (defproc (lines [vs  (sequence/c (sequence/c real?))] ...)
 >>
 >> but I think that maybe it should be something more like:
 >>
 >> (defproc (lines [vs  (sequenceof (sequence/c real? real?))]
 >>
 >> even though we don't have a sequenceof contract thing (I can fix that).
 >>
 >> That is, I think sequence/c is supposed to construct sequences of fixed
 >> lengths and the inner sequence is supposed to have a fixed length, but
 >> not the outer one; it needs a contract that accepts sequences of any
 >> length.
 >>
 >> Do I have that right?
 >>
 >> Robby
 >>
 >>
 >>
 >>
 >>
 >> On Thu, Apr 25, 2013 at 2:36 AM, <lewis1711@gmail.com
 >> <mailto:lewis1711@gmail.com>> wrote:
 >>
 >>     A new problem report is waiting at
 >>     http://bugs.racket-lang.org/**query/?cmd=3Dview&pr=3D13709<http://bu=
 gs.racket-lang.org/query/?cmd=3Dview&pr=3D13709>
 >>
 >>     Reported by Lewis Potter for release: 5.3.2
 >>
 >>     *** Description:
 >>     Message
 >>
 >>     "lines: contract violation
 >>        expected: sequence of length >=3D 2
 >>        given: #<sequence>"
 >>
 >>     Is confusing when the argument given to lines has length greater tha=
 n
 >> 2.
 >>
 >>     I think what the error message should point is that one of the
 >>     *elements* in the sequence has a length < 2. Was an extremely
 >>     confusing error message.
 >>
 >>     *** How to repeat:
 >>      > (require plot)
 >>      > (define xs '("" "lol" "lmao"))
 >>      > (lines xs)
 >>     . . lines: contract violation
 >>        expected: sequence of length >=3D 2
 >>        given: #<sequence>
 >>      > (length xs)
 >>     3
 >>
 >>     *** Environment:
 >>     unix "Linux tsmi 3.5.0-26-generic #42-Ubuntu SMP Fri Mar 8 23:18:20
 >>     UTC 2013 x86_64 x86_64 x86_64 GNU/Linux" (x86_64-linux/3m)
 >>     (get-display-depth) =3D 32
 >>     Human Language: english
 >>     (current-memory-use) 757321104
 >>     Links: (links) =3D (); (links #:user? #f) =3D (); (links #:root? #t)=
  =3D
 >>     (); (links #:user? #f #:root? #t) =3D ()
 >>     Planet2 (show):
 >>     Installation-wide:
 >>       [none]
 >>     User-specific, all-version:
 >>       [none]
 >>     User-specific, version-specific:
 >>       [none]
 >>
 >>
 >>
 >>     Collections:
 >>     ("/home/lewis/.racket/5.3.2/**collects"
 >>       (non-existent-path))
 >>     ("/usr/lib/racket/collects"
 >>       ("gui-debugger" "make" "db" "parser-tools" "mred" "plai"
 >>     "rackunit" "planet2" "mzcom" "ffi" "lang" "stepper" "xrepl" "s-exp"
 >>     "help" "slatex" "scheme" "config" "schemeunit" "racket"
 >>     "embedded-gui" "reader" "typed-racket" "teachpack" "swindle"
 >>     "macro-debugger" "mrlib" "dynext" "drscheme" "scriblib" "profile"
 >>     "framework" "string-constants" "math" "json" "preprocessor"
 >>     "graphics" "deinprogramm" "syntax" "typed-scheme" "eopl" "compiler"
 >>     "at-exp" "version" "slideshow" "texpict" "trace" "mzscheme" "typed"
 >>     "unstable" "file" "raco" "test-engine" "setup" "hierlist" "defaults"
 >>     "syntax-color" "datalog" "r5rs" "srfi" "net" "planet" "frtime"
 >>     "racklog" "data" "sgl" "lazy" "plot" "readline" "r6rs" "browser"
 >>     "scribble" "wxme" "rnrs" "picturing-programs" "mysterx" "xml"
 >>     "launcher" "web-server" "mzlib" "future-visualizer" "redex"
 >>     "compatibility" "algol60" "drracket" "icons" "games" "openssl"
 >>     "images" "2htdp" "errortrace" "scribblings" "html" "info-domain"
 >>     "htdp"))
 >>
 >>     Computer Language: (("Determine language from source") (#(#t print
 >>     mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t
 >>     ((main) (test))))
 >>
 >>
 >>
 >
 
 --e89a8fb1f21a23082404db31bf05
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 <div dir=3D"ltr"><br><div class=3D"gmail_extra"><br><br><div class=3D"gmail=
 _quote">On Thu, Apr 25, 2013 at 10:54 AM, Neil Toronto <span dir=3D"ltr">&l=
 t;<a href=3D"mailto:neil.toronto@gmail.com" target=3D"_blank">neil.toronto@=
 gmail.com</a>&gt;</span> wrote:<br>
 <blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1p=
 x #ccc solid;padding-left:1ex">Just so we&#39;re on the same page... I thin=
 k the problem is that this:<br>
 <br>
 =C2=A0 given: #&lt;sequence&gt;<br>
 <br>
 makes it impossible to tell that the problem is an *element* of `vs&#39; in=
 stead of `vs&#39; itself.</blockquote><div><br></div><div style>Right.</div=
 ><div>=C2=A0</div><blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .=
 8ex;border-left:1px #ccc solid;padding-left:1ex">
  `lines&#39; is raising this error. By the time it gets `vs&#39;, `sequence=
 /c&#39; has already wrapped its elements in new, opaque sequences. You&#39;=
 re suggesting having the contract system do all the error checking by makin=
 g the contract for `lines&#39; more specific. The contract system would pri=
 nt the original, infringing data.<br>
 
 <br></blockquote><div><br></div><div style>I&#39;m not sure that literal pl=
 an will work. The contract system isn&#39;t set up to save unprojected vers=
 ions of values for printing.=C2=A0</div><div style><br></div><div style>We =
 could change the sequence data structure, tho, so that it knows that it can=
  print out certain sequences, or perhaps a prefix of them.</div>
 <div>=C2=A0</div><blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8=
 ex;border-left:1px #ccc solid;padding-left:1ex">
 Unfortunately, a (sequence/c real? real?) isn&#39;t a two-element sequence,=
  it&#39;s a *multi-valued* sequence of any length, where each element is tw=
 o real values. Also, I&#39;d rather have the contract stay as it is. It&#39=
 ;s useful for the elements to be possibly longer, as it&#39;s common enough=
  to plot just the first two data points in a data set.<br>
 
 <br></blockquote><div><br></div><div style>Oh, right. Sorry for that confus=
 ion.</div><div style><br></div><div style>The naming convention as I unders=
 tand it, then, would suggest that this contract combinator should be called=
  sequenceof, not sequence/c (sequence/c would correspond to the constructor=
  &#39;sequence&#39;, if there were such a thing).</div>
 <div style><br></div><div>=C2=A0</div><blockquote class=3D"gmail_quote" sty=
 le=3D"margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">
 Would it be hard to make `sequence/c&#39; create a chaperone contract? Woul=
 d that preserve the original data shape?<br>
 <br></blockquote><div><br></div><div style>I don&#39;t think the chaperone =
 support is there yet for that (there are no list chaperones for example).</=
 div><div>=C2=A0</div><blockquote class=3D"gmail_quote" style=3D"margin:0 0 =
 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">
 
 Another option is to make (sequenceof real? real? real?) meaningful: the fi=
 rst two arguments would be contracts for the first two elements; the last a=
 rgument would be the contract for the rest of the elements.<span class=3D"H=
 OEnZb"><font color=3D"#888888"><br>
 
 <br></font></span></blockquote><div><br></div><div style>What do you think =
 about a keyword argument to sequence/c that mandated a minimum length inste=
 ad?</div><div style><br></div><div style>Robby</div><div>=C2=A0</div><block=
 quote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1px #ccc=
  solid;padding-left:1ex">
 <span class=3D"HOEnZb"><font color=3D"#888888">
 Neil =E2=8A=A5</font></span><div class=3D"im"><br>
 <br>
 On 04/25/2013 06:01 AM, Robby Findler wrote:<br>
 </div><blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-l=
 eft:1px #ccc solid;padding-left:1ex"><div class=3D"im">
 In line.rkt, I see:<br>
 <br>
 (defproc (lines [vs =C2=A0(sequence/c (sequence/c real?))] ...)<br>
 <br>
 but I think that maybe it should be something more like:<br>
 <br>
 (defproc (lines [vs =C2=A0(sequenceof (sequence/c real? real?))]<br>
 <br>
 even though we don&#39;t have a sequenceof contract thing (I can fix that).=
 <br>
 <br>
 That is, I think sequence/c is supposed to construct sequences of fixed<br>
 lengths and the inner sequence is supposed to have a fixed length, but<br>
 not the outer one; it needs a contract that accepts sequences of any length=
 .<br>
 <br>
 Do I have that right?<br>
 <br>
 Robby<br>
 <br>
 <br>
 <br>
 <br>
 <br>
 On Thu, Apr 25, 2013 at 2:36 AM, &lt;<a href=3D"mailto:lewis1711@gmail.com"=
  target=3D"_blank">lewis1711@gmail.com</a><br></div><div><div class=3D"h5">
 &lt;mailto:<a href=3D"mailto:lewis1711@gmail.com" target=3D"_blank">lewis17=
 11@gmail.com</a>&gt;&gt; wrote:<br>
 <br>
 =C2=A0 =C2=A0 A new problem report is waiting at<br>
 =C2=A0 =C2=A0 <a href=3D"http://bugs.racket-lang.org/query/?cmd=3Dview&amp;=
 pr=3D13709" target=3D"_blank">http://bugs.racket-lang.org/<u></u>query/?cmd=
 =3Dview&amp;pr=3D13709</a><br>
 <br>
 =C2=A0 =C2=A0 Reported by Lewis Potter for release: 5.3.2<br>
 <br>
 =C2=A0 =C2=A0 *** Description:<br>
 =C2=A0 =C2=A0 Message<br>
 <br>
 =C2=A0 =C2=A0 &quot;lines: contract violation<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0expected: sequence of length &gt;=3D 2<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0given: #&lt;sequence&gt;&quot;<br>
 <br>
 =C2=A0 =C2=A0 Is confusing when the argument given to lines has length grea=
 ter than 2.<br>
 <br>
 =C2=A0 =C2=A0 I think what the error message should point is that one of th=
 e<br>
 =C2=A0 =C2=A0 *elements* in the sequence has a length &lt; 2. Was an extrem=
 ely<br>
 =C2=A0 =C2=A0 confusing error message.<br>
 <br>
 =C2=A0 =C2=A0 *** How to repeat:<br>
 =C2=A0 =C2=A0 =C2=A0&gt; (require plot)<br>
 =C2=A0 =C2=A0 =C2=A0&gt; (define xs &#39;(&quot;&quot; &quot;lol&quot; &quo=
 t;lmao&quot;))<br>
 =C2=A0 =C2=A0 =C2=A0&gt; (lines xs)<br>
 =C2=A0 =C2=A0 . . lines: contract violation<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0expected: sequence of length &gt;=3D 2<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0given: #&lt;sequence&gt;<br>
 =C2=A0 =C2=A0 =C2=A0&gt; (length xs)<br>
 =C2=A0 =C2=A0 3<br>
 <br>
 =C2=A0 =C2=A0 *** Environment:<br>
 =C2=A0 =C2=A0 unix &quot;Linux tsmi 3.5.0-26-generic #42-Ubuntu SMP Fri Mar=
  8 23:18:20<br>
 =C2=A0 =C2=A0 UTC 2013 x86_64 x86_64 x86_64 GNU/Linux&quot; (x86_64-linux/3=
 m)<br>
 =C2=A0 =C2=A0 (get-display-depth) =3D 32<br>
 =C2=A0 =C2=A0 Human Language: english<br>
 =C2=A0 =C2=A0 (current-memory-use) 757321104<br>
 =C2=A0 =C2=A0 Links: (links) =3D (); (links #:user? #f) =3D (); (links #:ro=
 ot? #t) =3D<br>
 =C2=A0 =C2=A0 (); (links #:user? #f #:root? #t) =3D ()<br>
 =C2=A0 =C2=A0 Planet2 (show):<br>
 =C2=A0 =C2=A0 Installation-wide:<br>
 =C2=A0 =C2=A0 =C2=A0 [none]<br>
 =C2=A0 =C2=A0 User-specific, all-version:<br>
 =C2=A0 =C2=A0 =C2=A0 [none]<br>
 =C2=A0 =C2=A0 User-specific, version-specific:<br>
 =C2=A0 =C2=A0 =C2=A0 [none]<br>
 <br>
 <br>
 <br>
 =C2=A0 =C2=A0 Collections:<br>
 =C2=A0 =C2=A0 (&quot;/home/lewis/.racket/5.3.2/<u></u>collects&quot;<br>
 =C2=A0 =C2=A0 =C2=A0 (non-existent-path))<br>
 =C2=A0 =C2=A0 (&quot;/usr/lib/racket/collects&quot;<br>
 =C2=A0 =C2=A0 =C2=A0 (&quot;gui-debugger&quot; &quot;make&quot; &quot;db&qu=
 ot; &quot;parser-tools&quot; &quot;mred&quot; &quot;plai&quot;<br>
 =C2=A0 =C2=A0 &quot;rackunit&quot; &quot;planet2&quot; &quot;mzcom&quot; &q=
 uot;ffi&quot; &quot;lang&quot; &quot;stepper&quot; &quot;xrepl&quot; &quot;=
 s-exp&quot;<br>
 =C2=A0 =C2=A0 &quot;help&quot; &quot;slatex&quot; &quot;scheme&quot; &quot;=
 config&quot; &quot;schemeunit&quot; &quot;racket&quot;<br>
 =C2=A0 =C2=A0 &quot;embedded-gui&quot; &quot;reader&quot; &quot;typed-racke=
 t&quot; &quot;teachpack&quot; &quot;swindle&quot;<br>
 =C2=A0 =C2=A0 &quot;macro-debugger&quot; &quot;mrlib&quot; &quot;dynext&quo=
 t; &quot;drscheme&quot; &quot;scriblib&quot; &quot;profile&quot;<br>
 =C2=A0 =C2=A0 &quot;framework&quot; &quot;string-constants&quot; &quot;math=
 &quot; &quot;json&quot; &quot;preprocessor&quot;<br>
 =C2=A0 =C2=A0 &quot;graphics&quot; &quot;deinprogramm&quot; &quot;syntax&qu=
 ot; &quot;typed-scheme&quot; &quot;eopl&quot; &quot;compiler&quot;<br>
 =C2=A0 =C2=A0 &quot;at-exp&quot; &quot;version&quot; &quot;slideshow&quot; =
 &quot;texpict&quot; &quot;trace&quot; &quot;mzscheme&quot; &quot;typed&quot=
 ;<br>
 =C2=A0 =C2=A0 &quot;unstable&quot; &quot;file&quot; &quot;raco&quot; &quot;=
 test-engine&quot; &quot;setup&quot; &quot;hierlist&quot; &quot;defaults&quo=
 t;<br>
 =C2=A0 =C2=A0 &quot;syntax-color&quot; &quot;datalog&quot; &quot;r5rs&quot;=
  &quot;srfi&quot; &quot;net&quot; &quot;planet&quot; &quot;frtime&quot;<br>
 =C2=A0 =C2=A0 &quot;racklog&quot; &quot;data&quot; &quot;sgl&quot; &quot;la=
 zy&quot; &quot;plot&quot; &quot;readline&quot; &quot;r6rs&quot; &quot;brows=
 er&quot;<br>
 =C2=A0 =C2=A0 &quot;scribble&quot; &quot;wxme&quot; &quot;rnrs&quot; &quot;=
 picturing-programs&quot; &quot;mysterx&quot; &quot;xml&quot;<br>
 =C2=A0 =C2=A0 &quot;launcher&quot; &quot;web-server&quot; &quot;mzlib&quot;=
  &quot;future-visualizer&quot; &quot;redex&quot;<br>
 =C2=A0 =C2=A0 &quot;compatibility&quot; &quot;algol60&quot; &quot;drracket&=
 quot; &quot;icons&quot; &quot;games&quot; &quot;openssl&quot;<br>
 =C2=A0 =C2=A0 &quot;images&quot; &quot;2htdp&quot; &quot;errortrace&quot; &=
 quot;scribblings&quot; &quot;html&quot; &quot;info-domain&quot;<br>
 =C2=A0 =C2=A0 &quot;htdp&quot;))<br>
 <br>
 =C2=A0 =C2=A0 Computer Language: ((&quot;Determine language from source&quo=
 t;) (#(#t print<br>
 =C2=A0 =C2=A0 mixed-fraction-e #f #t debug) (default) #() &quot;#lang racke=
 t\n&quot; #t #t<br>
 =C2=A0 =C2=A0 ((main) (test))))<br>
 <br>
 <br>
 </div></div></blockquote>
 <br>
 </blockquote></div><br></div></div>
 
 --e89a8fb1f21a23082404db31bf05--
From: Neil Toronto <neil.toronto@gmail.com>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: Lewis Campbell <lewis1711@gmail.com>, bugs <bugs@racket-lang.org>,
        nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/13709: "lines" procedure in plot gives confusing
 messages for contract violation
Date: Thu, 25 Apr 2013 10:37:56 -0600

 On 04/25/2013 10:16 AM, Robby Findler wrote:
 >
 > On Thu, Apr 25, 2013 at 10:54 AM, Neil Toronto <neil.toronto@gmail.com
 >     .... You're suggesting having the contract system do all the
 >     error checking by making the contract for `lines' more specific. The
 >     contract system would print the original, infringing data.
 >
 > I'm not sure that literal plan will work. The contract system isn't set
 > up to save unprojected versions of values for printing.
 >
 > ...
 >
 >     Another option is to make (sequenceof real? real? real?) meaningful:
 >     the first two arguments would be contracts for the first two
 >     elements; the last argument would be the contract for the rest of
 >     the elements.
 >
 > What do you think about a keyword argument to sequence/c that mandated a
 > minimum length instead?
 
 I think that would be fine in this case. But are you sure that using it 
 would fix the error message, given that the contract system doesn't save 
 unprojected values for printing?
 
 Neil ⊥
 
 >
 > Robby
 >
 >     Neil ⊥
 >
 >
 >     On 04/25/2013 06:01 AM, Robby Findler wrote:
 >
 >         In line.rkt, I see:
 >
 >         (defproc (lines [vs  (sequence/c (sequence/c real?))] ...)
 >
 >         but I think that maybe it should be something more like:
 >
 >         (defproc (lines [vs  (sequenceof (sequence/c real? real?))]
 >
 >         even though we don't have a sequenceof contract thing (I can fix
 >         that).
 >
 >         That is, I think sequence/c is supposed to construct sequences
 >         of fixed
 >         lengths and the inner sequence is supposed to have a fixed
 >         length, but
 >         not the outer one; it needs a contract that accepts sequences of
 >         any length.
 >
 >         Do I have that right?
 >
 >         Robby
 >
 >
 >
 >
 >
 >         On Thu, Apr 25, 2013 at 2:36 AM, <lewis1711@gmail.com
 >         <mailto:lewis1711@gmail.com>
 >         <mailto:lewis1711@gmail.com <mailto:lewis1711@gmail.com>>> wrote:
 >
 >              A new problem report is waiting at
 >         http://bugs.racket-lang.org/__query/?cmd=view&pr=13709
 >         <http://bugs.racket-lang.org/query/?cmd=view&pr=13709>
 >
 >              Reported by Lewis Potter for release: 5.3.2
 >
 >              *** Description:
 >              Message
 >
 >              "lines: contract violation
 >                 expected: sequence of length >= 2
 >                 given: #<sequence>"
 >
 >              Is confusing when the argument given to lines has length
 >         greater than 2.
 >
 >              I think what the error message should point is that one of the
 >              *elements* in the sequence has a length < 2. Was an extremely
 >              confusing error message.
 >
 >              *** How to repeat:
 >               > (require plot)
 >               > (define xs '("" "lol" "lmao"))
 >               > (lines xs)
 >              . . lines: contract violation
 >                 expected: sequence of length >= 2
 >                 given: #<sequence>
 >               > (length xs)
 >              3
 >
 >              *** Environment:
 >              unix "Linux tsmi 3.5.0-26-generic #42-Ubuntu SMP Fri Mar 8
 >         23:18:20
 >              UTC 2013 x86_64 x86_64 x86_64 GNU/Linux" (x86_64-linux/3m)
 >              (get-display-depth) = 32
 >              Human Language: english
 >              (current-memory-use) 757321104
 >              Links: (links) = (); (links #:user? #f) = (); (links
 >         #:root? #t) =
 >              (); (links #:user? #f #:root? #t) = ()
 >              Planet2 (show):
 >              Installation-wide:
 >                [none]
 >              User-specific, all-version:
 >                [none]
 >              User-specific, version-specific:
 >                [none]
 >
 >
 >
 >              Collections:
 >              ("/home/lewis/.racket/5.3.2/__collects"
 >                (non-existent-path))
 >              ("/usr/lib/racket/collects"
 >                ("gui-debugger" "make" "db" "parser-tools" "mred" "plai"
 >              "rackunit" "planet2" "mzcom" "ffi" "lang" "stepper" "xrepl"
 >         "s-exp"
 >              "help" "slatex" "scheme" "config" "schemeunit" "racket"
 >              "embedded-gui" "reader" "typed-racket" "teachpack" "swindle"
 >              "macro-debugger" "mrlib" "dynext" "drscheme" "scriblib"
 >         "profile"
 >              "framework" "string-constants" "math" "json" "preprocessor"
 >              "graphics" "deinprogramm" "syntax" "typed-scheme" "eopl"
 >         "compiler"
 >              "at-exp" "version" "slideshow" "texpict" "trace" "mzscheme"
 >         "typed"
 >              "unstable" "file" "raco" "test-engine" "setup" "hierlist"
 >         "defaults"
 >              "syntax-color" "datalog" "r5rs" "srfi" "net" "planet" "frtime"
 >              "racklog" "data" "sgl" "lazy" "plot" "readline" "r6rs"
 >         "browser"
 >              "scribble" "wxme" "rnrs" "picturing-programs" "mysterx" "xml"
 >              "launcher" "web-server" "mzlib" "future-visualizer" "redex"
 >              "compatibility" "algol60" "drracket" "icons" "games" "openssl"
 >              "images" "2htdp" "errortrace" "scribblings" "html"
 >         "info-domain"
 >              "htdp"))
 >
 >              Computer Language: (("Determine language from source")
 >         (#(#t print
 >              mixed-fraction-e #f #t debug) (default) #() "#lang
 >         racket\n" #t #t
 >              ((main) (test))))
 >
 >
 >
 >
 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Neil Toronto <neil.toronto@gmail.com>
Cc: Robby Findler <robby@eecs.northwestern.edu>,
        Lewis Campbell <lewis1711@gmail.com>, bugs <bugs@racket-lang.org>,
        nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/13709: "lines" procedure in plot gives confusing
 messages for contract violation
Date: Thu, 25 Apr 2013 17:28:22 -0500

 --001a11c361fca69ff004db36ef28
 Content-Type: text/plain; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 On Thursday, April 25, 2013, Neil Toronto wrote:
 
 > On 04/25/2013 10:16 AM, Robby Findler wrote:
 >
 >>
 >> On Thu, Apr 25, 2013 at 10:54 AM, Neil Toronto <neil.toronto@gmail.com
 >>     .... You're suggesting having the contract system do all the
 >>     error checking by making the contract for `lines' more specific. The
 >>     contract system would print the original, infringing data.
 >>
 >> I'm not sure that literal plan will work. The contract system isn't set
 >> up to save unprojected versions of values for printing.
 >>
 >> ...
 >>
 >>     Another option is to make (sequenceof real? real? real?) meaningful:
 >>     the first two arguments would be contracts for the first two
 >>     elements; the last argument would be the contract for the rest of
 >>     the elements.
 >>
 >> What do you think about a keyword argument to sequence/c that mandated a
 >> minimum length instead?
 >>
 >
 > I think that would be fine in this case. But are you sure that using it
 > would fix the error message, given that the contract system doesn't save
 > unprojected values for printing?
 >
 >
 Oh wait, I'm wrong. Here's what the new error message would be if lines
 were a function with this contract:
 
 (-> (sequence/c (sequence/c #:min-count 2 real?)) any)
 
 lines: contract violation
   expected: a sequence that contains at least 2 values
   given: ""
   in: an element of
       the 1st argument of
       (->
        (sequence/c
         (sequence/c #:min-count 2 real?))
        any)
   contract from: pos
   blaming: neg
 
 I'll not close the PR but let you adjust the contract in plot as I'm not
 quite sure where the #:min-count is supposed to go. (Is it insisting that
 there be at least two points so you can make a line, or that there be at
 least two dimensions?)
 
 Robby
 
 
 
 > Neil =E2=8A=A5
 >
 >
 >> Robby
 >>
 >>     Neil =E2=8A=A5
 >>
 >>
 >>     On 04/25/2013 06:01 AM, Robby Findler wrote:
 >>
 >>         In line.rkt, I see:
 >>
 >>         (defproc (lines [vs  (sequence/c (sequence/c real?))] ...)
 >>
 >>         but I think that maybe it should be something more like:
 >>
 >>         (defproc (lines [vs  (sequenceof (sequence/c real? real?))]
 >>
 >>         even though we don't have a sequenceof contract thing (I can fix
 >>         that).
 >>
 >>         That is, I think sequence/c is supposed to construct sequences
 >>         of fixed
 >>         lengths and the inner sequence is supposed to have a fixed
 >>         length, but
 >>         not the outer one; it needs a contract that accepts sequences of
 >>         any length.
 >>
 >>         Do I have that right?
 >>
 >>         Robby
 >>
 >>
 >>
 >>
 >>
 >>         On Thu, Apr 25, 2013 at 2:36 AM, <lewis1711@gmail.com
 >>         <mailto:lewis1711@gmail.com>
 >>         <mailto:lewis1711@gmail.com <mailto:lewis1711@gmail.com>>> wrote=
 :
 >>
 >>              A new problem report is waiting at
 >>         http://bugs.racket-lang.org/__**query/?cmd=3Dview&pr=3D13709<htt=
 p://bugs.racket-lang.org/__query/?cmd=3Dview&pr=3D13709>
 >>         <http://bugs.racket-lang.org/**query/?cmd=3Dview&pr=3D13709<http=
 ://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D13709>
 >> >
 >>
 >>              Reported by Lewis Potter for release: 5.3.2
 >>
 >>              *** Description:
 >>              Message
 >>
 >>              "lines: contract violation
 >>                 expected: sequence of length >=3D 2
 >>                 given: #<sequence>"
 >>
 >>              Is confusing when the argument given to lines has length
 >>         greater than 2.
 >>
 >>              I think what the error message should point is that one of
 >> the
 >>              *elements* in the sequence has a length < 2. Was an extreme=
 ly
 >>              confusing error message.
 >>
 >>              *** How to repeat:
 >>               > (require plot)
 >>               > (define xs '("" "lol" "lmao"))
 >>               > (lines xs)
 >>              . . lines: contract violation
 >>                 expected: sequence of length >=3D 2
 >>                 given: #<sequence>
 >>               > (length xs)
 >>              3
 >>
 >>              *** Environment:
 >>              unix "Linux tsmi 3.5.0-26-generic #42-Ubuntu SMP Fri Mar 8
 >>         23:18:20
 >>              UTC 2013 x86_64 x86_64 x86_64 GNU/Linux" (x86_64-linux/3m)
 >>              (get-display-depth) =3D 32
 >>              Human Language: english
 >>              (current-memory-use) 757321104
 >>              Links: (links) =3D (); (links #:user? #f) =3D (); (links
 >>         #:root? #t) =3D
 >>              (); (links #:user? #f #:root? #t) =3D ()
 >>              Planet2 (show):
 >>              Installation-wide:
 >>                [none]
 >>              User-specific, all-version:
 >>                [none]
 >>              User-specific, version-specific:
 >>                [none]
 >>
 >>
 >>
 >>              Collections:
 >>              ("/home/lewis/.racket/5.3.2/__**collects"
 >>                (non-existent-path))
 >>              ("/usr/lib/racket/collects"
 >>                ("gui-debugger" "make" "db" "parser-tools" "mred" "plai"
 >>              "rackunit" "planet2" "mzcom" "ffi" "lang" "stepper" "xrepl"
 >>         "s-exp"
 >>              "help" "slatex" "scheme" "config" "schemeunit" "racket"
 >>              "embedded-gui" "reader" "typed-racket" "teachpack" "swindle=
 "
 >>              "macro-debugger" "mrlib" "dynext" "drscheme" "scriblib"
 >>         "profile"
 >>              "framework" "string-constants" "math" "json" "preprocessor"
 >>              "graphics" "deinprogramm" "syntax" "typed-scheme" "eopl"
 >>         "compiler"
 >>              "at-exp" "version" "slideshow" "texpict" "trace" "mzscheme"
 >>         "typed"
 >>              "unstable" "file" "raco" "test-engine" "setup" "hierlist"
 >>         "defaults"
 >>              "syntax-color" "datalog" "r5rs" "srfi" "net" "planet"
 >> "frtime"
 >>              "racklog" "data" "sgl" "lazy" "plot" "readline" "r6rs"
 >>         "browser"
 >>              "scribble" "wxme" "rnrs" "picturing-programs" "mysterx" "xm=
 l"
 >>              "launcher" "web-server" "mzlib" "future-visualizer" "redex"
 >>              "compatibility" "algol60" "drracket" "icons" "games"
 >> "openssl"
 >>              "images" "2htdp" "errortrace" "scribblings" "html"
 >>         "info-domain"
 >>              "htdp"))
 >>
 >>              Computer Language: (("Determine language from source")
 >>         (#(#t print
 >>              mixed-fraction-e #f #t debug) (default) #() "#lang
 >>         racket\n" #t #t
 >>              ((main) (test))))
 >>
 >>
 >>
 >>
 >>
 >
 >
 >
 
 --001a11c361fca69ff004db36ef28
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 <br><br>On Thursday, April 25, 2013, Neil Toronto  wrote:<br><blockquote cl=
 ass=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1px #ccc solid;p=
 adding-left:1ex">On 04/25/2013 10:16 AM, Robby Findler wrote:<br>
 <blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1p=
 x #ccc solid;padding-left:1ex">
 <br>
 On Thu, Apr 25, 2013 at 10:54 AM, Neil Toronto &lt;<a>neil.toronto@gmail.co=
 m</a><br>
 =C2=A0 =C2=A0 .... You&#39;re suggesting having the contract system do all =
 the<br>
 =C2=A0 =C2=A0 error checking by making the contract for `lines&#39; more sp=
 ecific. The<br>
 =C2=A0 =C2=A0 contract system would print the original, infringing data.<br=
 >
 <br>
 I&#39;m not sure that literal plan will work. The contract system isn&#39;t=
  set<br>
 up to save unprojected versions of values for printing.<br>
 <br>
 ...<br>
 <br>
 =C2=A0 =C2=A0 Another option is to make (sequenceof real? real? real?) mean=
 ingful:<br>
 =C2=A0 =C2=A0 the first two arguments would be contracts for the first two<=
 br>
 =C2=A0 =C2=A0 elements; the last argument would be the contract for the res=
 t of<br>
 =C2=A0 =C2=A0 the elements.<br>
 <br>
 What do you think about a keyword argument to sequence/c that mandated a<br=
 >
 minimum length instead?<br>
 </blockquote>
 <br>
 I think that would be fine in this case. But are you sure that using it wou=
 ld fix the error message, given that the contract system doesn&#39;t save u=
 nprojected values for printing?<br>
 <br></blockquote><div><br></div><div>Oh wait, I&#39;m wrong. Here&#39;s wha=
 t the new error message would be if lines were a function with this contrac=
 t:</div><div><br></div><div>(-&gt; (sequence/c (sequence/c #:min-count 2 re=
 al?)) any)</div>
 <div><br></div><div><div>lines: contract violation</div><div>=C2=A0 expecte=
 d: a sequence that contains at least 2 values</div><div>=C2=A0 given: &quot=
 ;&quot;</div><div>=C2=A0 in: an element of</div><div>=C2=A0 =C2=A0 =C2=A0 t=
 he 1st argument of</div><div>
 =C2=A0 =C2=A0 =C2=A0 (-&gt;</div><div>=C2=A0 =C2=A0 =C2=A0 =C2=A0(sequence/=
 c</div><div>=C2=A0 =C2=A0 =C2=A0 =C2=A0 (sequence/c #:min-count 2 real?))</=
 div><div>=C2=A0 =C2=A0 =C2=A0 =C2=A0any)</div><div>=C2=A0 contract from: po=
 s</div><div>=C2=A0 blaming: neg</div></div><div><br></div><div>I&#39;ll not=
  close the PR but let you adjust the contract in plot as I&#39;m not quite =
 sure where the #:min-count is supposed to go. (Is it insisting that there b=
 e at least two points so you can make a line, or that there be at least two=
  dimensions?)</div>
 <div><br></div><div>Robby</div><div><br></div><div>=C2=A0</div><blockquote =
 class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1px #ccc solid=
 ;padding-left:1ex">
 Neil =E2=8A=A5<br>
 <br>
 <blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1p=
 x #ccc solid;padding-left:1ex">
 <br>
 Robby<br>
 <br>
 =C2=A0 =C2=A0 Neil =E2=8A=A5<br>
 <br>
 <br>
 =C2=A0 =C2=A0 On 04/25/2013 06:01 AM, Robby Findler wrote:<br>
 <br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 In line.rkt, I see:<br>
 <br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 (defproc (lines [vs =C2=A0(sequence/c (sequence=
 /c real?))] ...)<br>
 <br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 but I think that maybe it should be something m=
 ore like:<br>
 <br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 (defproc (lines [vs =C2=A0(sequenceof (sequence=
 /c real? real?))]<br>
 <br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 even though we don&#39;t have a sequenceof cont=
 ract thing (I can fix<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 that).<br>
 <br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 That is, I think sequence/c is supposed to cons=
 truct sequences<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 of fixed<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 lengths and the inner sequence is supposed to h=
 ave a fixed<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 length, but<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 not the outer one; it needs a contract that acc=
 epts sequences of<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 any length.<br>
 <br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 Do I have that right?<br>
 <br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 Robby<br>
 <br>
 <br>
 <br>
 <br>
 <br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 On Thu, Apr 25, 2013 at 2:36 AM, &lt;<a>lewis17=
 11@gmail.com</a><br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 &lt;mailto:<a>lewis1711@gmail.com</a>&gt;<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 &lt;mailto:<a>lewis1711@gmail.com</a> &lt;mailt=
 o:<a>lewis1711@gmail.com</a>&gt;&gt;&gt; wrote:<br>
 <br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0A new problem report is wai=
 ting at<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 <a href=3D"http://bugs.racket-lang.org/__query/=
 ?cmd=3Dview&amp;pr=3D13709" target=3D"_blank">http://bugs.racket-lang.org/_=
 _<u></u>query/?cmd=3Dview&amp;pr=3D13709</a><br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 &lt;<a href=3D"http://bugs.racket-lang.org/quer=
 y/?cmd=3Dview&amp;pr=3D13709" target=3D"_blank">http://bugs.racket-lang.org=
 /<u></u>query/?cmd=3Dview&amp;pr=3D13709</a>&gt;<br>
 <br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Reported by Lewis Potter fo=
 r release: 5.3.2<br>
 <br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0*** Description:<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Message<br>
 <br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0&quot;lines: contract viola=
 tion<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 expected: sequence =
 of length &gt;=3D 2<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 given: #&lt;sequenc=
 e&gt;&quot;<br>
 <br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Is confusing when the argum=
 ent given to lines has length<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 greater than 2.<br>
 <br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0I think what the error mess=
 age should point is that one of the<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0*elements* in the sequence =
 has a length &lt; 2. Was an extremely<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0confusing error message.<br=
 >
 <br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0*** How to repeat:<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 &gt; (require plot)<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 &gt; (define xs &#39;(&quo=
 t;&quot; &quot;lol&quot; &quot;lmao&quot;))<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 &gt; (lines xs)<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0. . lines: contract violati=
 on<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 expected: sequence =
 of length &gt;=3D 2<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 given: #&lt;sequenc=
 e&gt;<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 &gt; (length xs)<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A03<br>
 <br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0*** Environment:<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0unix &quot;Linux tsmi 3.5.0=
 -26-generic #42-Ubuntu SMP Fri Mar 8<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 23:18:20<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0UTC 2013 x86_64 x86_64 x86_=
 64 GNU/Linux&quot; (x86_64-linux/3m)<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(get-display-depth) =3D 32<=
 br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Human Language: english<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(current-memory-use) 757321=
 104<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Links: (links) =3D (); (lin=
 ks #:user? #f) =3D (); (links<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 #:root? #t) =3D<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(); (links #:user? #f #:roo=
 t? #t) =3D ()<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Planet2 (show):<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Installation-wide:<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0[none]<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0User-specific, all-version:=
 <br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0[none]<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0User-specific, version-spec=
 ific:<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0[none]<br>
 <br>
 <br>
 <br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Collections:<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(&quot;/home/lewis/.racket/=
 5.3.2/__<u></u>collects&quot;<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(non-existent-path))=
 <br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(&quot;/usr/lib/racket/coll=
 ects&quot;<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(&quot;gui-debugger&=
 quot; &quot;make&quot; &quot;db&quot; &quot;parser-tools&quot; &quot;mred&q=
 uot; &quot;plai&quot;<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0&quot;rackunit&quot; &quot;=
 planet2&quot; &quot;mzcom&quot; &quot;ffi&quot; &quot;lang&quot; &quot;step=
 per&quot; &quot;xrepl&quot;<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 &quot;s-exp&quot;<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0&quot;help&quot; &quot;slat=
 ex&quot; &quot;scheme&quot; &quot;config&quot; &quot;schemeunit&quot; &quot=
 ;racket&quot;<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0&quot;embedded-gui&quot; &q=
 uot;reader&quot; &quot;typed-racket&quot; &quot;teachpack&quot; &quot;swind=
 le&quot;<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0&quot;macro-debugger&quot; =
 &quot;mrlib&quot; &quot;dynext&quot; &quot;drscheme&quot; &quot;scriblib&qu=
 ot;<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 &quot;profile&quot;<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0&quot;framework&quot; &quot=
 ;string-constants&quot; &quot;math&quot; &quot;json&quot; &quot;preprocesso=
 r&quot;<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0&quot;graphics&quot; &quot;=
 deinprogramm&quot; &quot;syntax&quot; &quot;typed-scheme&quot; &quot;eopl&q=
 uot;<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 &quot;compiler&quot;<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0&quot;at-exp&quot; &quot;ve=
 rsion&quot; &quot;slideshow&quot; &quot;texpict&quot; &quot;trace&quot; &qu=
 ot;mzscheme&quot;<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 &quot;typed&quot;<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0&quot;unstable&quot; &quot;=
 file&quot; &quot;raco&quot; &quot;test-engine&quot; &quot;setup&quot; &quot=
 ;hierlist&quot;<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 &quot;defaults&quot;<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0&quot;syntax-color&quot; &q=
 uot;datalog&quot; &quot;r5rs&quot; &quot;srfi&quot; &quot;net&quot; &quot;p=
 lanet&quot; &quot;frtime&quot;<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0&quot;racklog&quot; &quot;d=
 ata&quot; &quot;sgl&quot; &quot;lazy&quot; &quot;plot&quot; &quot;readline&=
 quot; &quot;r6rs&quot;<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 &quot;browser&quot;<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0&quot;scribble&quot; &quot;=
 wxme&quot; &quot;rnrs&quot; &quot;picturing-programs&quot; &quot;mysterx&qu=
 ot; &quot;xml&quot;<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0&quot;launcher&quot; &quot;=
 web-server&quot; &quot;mzlib&quot; &quot;future-visualizer&quot; &quot;rede=
 x&quot;<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0&quot;compatibility&quot; &=
 quot;algol60&quot; &quot;drracket&quot; &quot;icons&quot; &quot;games&quot;=
  &quot;openssl&quot;<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0&quot;images&quot; &quot;2h=
 tdp&quot; &quot;errortrace&quot; &quot;scribblings&quot; &quot;html&quot;<b=
 r>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 &quot;info-domain&quot;<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0&quot;htdp&quot;))<br>
 <br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Computer Language: ((&quot;=
 Determine language from source&quot;)<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 (#(#t print<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0mixed-fraction-e #f #t debu=
 g) (default) #() &quot;#lang<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 racket\n&quot; #t #t<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0((main) (test))))<br>
 <br>
 <br>
 <br>
 <br>
 </blockquote>
 <br><br><br>
 </blockquote>
 
 --001a11c361fca69ff004db36ef28--
Responsible changed from "nobody" to "robby" by robby@racket-lang.org at Thu, 25 Apr 2013 18:32:17 -0400
Reason>>> A commit by robby@racket-lang.org was marked as relevant
  http://git.racket-lang.org/plt/commit/ec2d57bf80
  | sequence/c changes
  | 
  | - build the sub projections only once and build them before getting
  |   the blame objects (instead of after getting the actual values)
  | - added context information to the blame objects
  | - added an optional #:min-count argument to insist on a minimum length
  |   for the stream
  | 
  | related to PR 13709


Responsible changed from "robby" to "ntoronto" by robby at Wed, 21 Aug 2013 11:54:24 -0400
Reason>>> 
probably a change to the contracts in plot is all that's needed now

State changed from "open" to "closed" by ntoronto@racket-lang.org at Fri, 04 Apr 2014 23:45:52 -0400
Reason>>> A commit by ntoronto@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/1938928a44
  | Use sequence/c's #:min-count for better error messages in `lines' and others
  | 
  | Closes PR13709

