From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Tue May  3 19:45:39 2011
Received: from mail-fx0-f44.google.com (mail-fx0-f44.google.com [209.85.161.44])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id p43Njbfq000753
	for <bugs@bugs.plt-scheme.org>; Tue, 3 May 2011 19:45:37 -0400
Message-Id: <201105032345.p43NjXOc000748@champlain.ccs.neu.edu>
Date: Tue, 3 May 2011 19:45:33 -0400
From: eric.n.dobson@gmail.com
To: bugs@racket-lang.org
Subject: build-path documentation is incorrect

>Number:         11891
>Category:       all
>Synopsis:       build-path documentation is incorrect
>Class:          doc-bug
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Tue May 03 19:48:01 -0400 2011
>Closed-Date:    Wed May 04 13:47:14 -0400 2011
>Last-Modified:  Wed May 04 13:48:01 -0400 2011
>Originator:     Eric Dobson
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.1
>Environment:
MacIntel / Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_7; en-us) AppleWebKit/533.20.25 (KHTML, like Gecko) Version/5.0.4 Safari/533.20.27
>Description:
The documented contract on build-path says that it returns a path (for the current system), while the long description shows how it can be used to return a path for a different system. The long description matches the implementation. Also the documented contract on build-path/convention-type has the same mistake. 
>How-To-Repeat:

>Fix:
>Audit-Trail:
From: Eric Dobson <eric.n.dobson@gmail.com>
To: nobody@racket-lang.org, bugs@racket-lang.org,
        bug-notification@racket-lang.org, eric.n.dobson@gmail.com
Cc: 
Subject: Re: all/11891: build-path documentation is incorrect
Date: Wed, 4 May 2011 13:13:06 -0400

 It is actually a lot more than just build-path. Many functions are documented in similar ways, declaring to return a path, but actually returning a path for some system. Then there are functions like cleanse-path which support other path types but don't mention it anywhere in the documentation. 
 
 cleanse-path and expand-path are also missing a '?' on the return value contract.
 
 -Eric
From: Eric Dobson <eric.n.dobson@gmail.com>
To: Eric Dobson <eric.n.dobson@gmail.com>
Cc: nobody@racket-lang.org, bugs@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: all/11891: build-path documentation is incorrect
Date: Wed, 4 May 2011 13:17:09 -0400

 Sorry it was actually resolve-path that supports other path types and not cleanse-path. The example I have is 
 (resolve-path (string->some-system-path "hello" 'windows)) on a OS X box.
 
 -Eric
 
 On May 4, 2011, at 1:13 PM, Eric Dobson wrote:
 
 > It is actually a lot more than just build-path. Many functions are documented in similar ways, declaring to return a path, but actually returning a path for some system. Then there are functions like cleanse-path which support other path types but don't mention it anywhere in the documentation. 
 > 
 > cleanse-path and expand-path are also missing a '?' on the return value contract.
 > 
 > -Eric
 
 
From: Matthew Flatt <mflatt@cs.utah.edu>
To: Eric Dobson <eric.n.dobson@gmail.com>
Cc: Eric Dobson <eric.n.dobson@gmail.com>, nobody@racket-lang.org,
        bugs@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: all/11891: build-path documentation is incorrect
Date: Wed, 4 May 2011 11:24:31 -0600

 Thanks! I'll push a repair soon, and I'll make `cleanse-path' work for
 `path-for-any-system?' arguments.
 
 At Wed, 4 May 2011 13:17:09 -0400, Eric Dobson wrote:
 > Sorry it was actually resolve-path that supports other path types and not 
 > cleanse-path. The example I have is 
 > (resolve-path (string->some-system-path "hello" 'windows)) on a OS X box.
 > 
 > -Eric
 > 
 > On May 4, 2011, at 1:13 PM, Eric Dobson wrote:
 > 
 > > It is actually a lot more than just build-path. Many functions are documented 
 > in similar ways, declaring to return a path, but actually returning a path for 
 > some system. Then there are functions like cleanse-path which support other 
 > path types but don't mention it anywhere in the documentation. 
 > > 
 > > cleanse-path and expand-path are also missing a '?' on the return value 
 > contract.
 > > 
 > > -Eric
Responsible changed from "nobody" to "mflatt" by mflatt@racket-lang.org at Wed, 04 May 2011 13:47:14 -0400
Reason>>> A commit by mflatt@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/34b8dc249e
State changed from "open" to "closed" by mflatt@racket-lang.org at Wed, 04 May 2011 13:47:14 -0400
Reason>>> A commit by mflatt@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/34b8dc249e
From: Matthew Flatt <mflatt@cs.utah.edu>
To: Eric Dobson <eric.n.dobson@gmail.com>,
        Eric Dobson <eric.n.dobson@gmail.com>, nobody@racket-lang.org,
        bugs@racket-lang.org, bug-notification@racket-lang.org
Cc: 
Subject: Re: all/11891: build-path documentation is incorrect
Date: Wed, 4 May 2011 11:46:28 -0600

 Oh --- `resolve-path' should only work for `path?'s.
 
 At Wed, 4 May 2011 11:24:31 -0600, Matthew Flatt wrote:
 > Thanks! I'll push a repair soon, and I'll make `cleanse-path' work for
 > `path-for-any-system?' arguments.
 > 
 > At Wed, 4 May 2011 13:17:09 -0400, Eric Dobson wrote:
 > > Sorry it was actually resolve-path that supports other path types and not 
 > > cleanse-path. The example I have is 
 > > (resolve-path (string->some-system-path "hello" 'windows)) on a OS X box.
 > > 
 > > -Eric
 > > 
 > > On May 4, 2011, at 1:13 PM, Eric Dobson wrote:
 > > 
 > > > It is actually a lot more than just build-path. Many functions are 
 > documented 
 > > in similar ways, declaring to return a path, but actually returning a path 
 > for 
 > > some system. Then there are functions like cleanse-path which support other 
 > > path types but don't mention it anywhere in the documentation. 
 > > > 
 > > > cleanse-path and expand-path are also missing a '?' on the return value 
 > > contract.
 > > > 
 > > > -Eric
