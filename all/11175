From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Thu Sep  9 12:54:50 2010
Received: from mail-yx0-f172.google.com (mail-yx0-f172.google.com [209.85.213.172])
	by champlain.ccs.neu.edu (8.14.3/8.14.3) with ESMTP id o89GsmMR012700
	for <bugs@bugs.plt-scheme.org>; Thu, 9 Sep 2010 12:54:48 -0400
Message-Id: <201009091654.o89GsjrB012693@champlain.ccs.neu.edu>
Date: Thu, 9 Sep 2010 12:54:45 -0400
From: dyoo@cs.wpi.edu
To: bugs@racket-lang.org
Subject: zo-parse mis-decompiling lambda with rest arguments

>Number:         11175
>Category:       all
>Synopsis:       zo-parse mis-decompiling lambda with rest arguments
>Class:          sw-bug
>Responsible:    jay
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Thu Sep 09 12:56:01 -0400 2010
>Closed-Date:    Fri Sep 10 16:46:20 -0400 2010
>Last-Modified:  Fri Sep 10 16:46:20 -0400 2010
>Originator:     Danny Yoo
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.0.1--2010-08-03(2c77ae5/a)
>Environment:
unix "Linux fermi 2.6.26-2-686 #1 SMP Wed May 12 21:56:10 UTC 2010 i686 GNU/Linux" (i386-linux/3m) (get-display-depth) = 24
Human Language: english
(current-memory-use) 165105048

Collections:
(("/home/dyoo/.racket/5.0.1/collects" non-existent-path) ("/pro/plt/software/racket/5.0.1/std/collects" ".gitignore" "2htdp" "afm" "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "datalog" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu" "htdp" "html" "icons" "lang" "launcher" "lazy" "macro-debugger" "make" "meta" "mred" "mrlib" "mysterx" "mz" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "redex" "repo-time-stamp" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "sirmail" "slatex" "slideshow" "srfi" "srpersist" "stepper" "string-constants" "swindle" "syntax-color" "syntax" "teachpack" "test-box-recovery" "test-!
 engine" "tests" "tex2page" "texpict" "trace" "typed-scheme" "typed" "unstable" "version" "waterworld" "web-server" "wxme" "xml" "info-domain"))
Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t))
>Description:
Given the code in the "steps to reproduce", zo-parse constructs a lam structure with a negative arity.
>How-To-Repeat:
#lang scheme/base

(require compiler/zo-parse
         scheme/pretty)

(provide bytecode)

(define (bytecode top-level-form)
  (parameterize ([current-namespace (make-base-namespace)])
    (let-values ([(out) (open-output-bytes)])
      (write (compile top-level-form) out)
      (close-output-port out)
      (let ([output (zo-parse (open-input-bytes (get-output-bytes out)))])
        (begin
          (pretty-display output)
          output)))))

(bytecode '(lambda x 1))
>Fix:
>Audit-Trail:
From: Jay McCarthy <jay.mccarthy@gmail.com>
To: dyoo@cs.wpi.edu, bugs@racket-lang.org, Blake Johnson <bjohn3x@gmail.com>
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11175: zo-parse mis-decompiling lambda with rest arguments
Date: Thu, 9 Sep 2010 21:19:32 -0600

 This is actually just a bug in the documentation.
 
 lam structures are allowed to have negative arity when a
 non-case-lambda is not yet JIT-ed.
 
 Jay
 
 On Thu, Sep 9, 2010 at 10:56 AM,  <dyoo@cs.wpi.edu> wrote:
 > A new problem report is waiting at
 > =C2=A0http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D11175
 >
 > Reported by Danny Yoo for release: 5.0.1--2010-08-03(2c77ae5/a)
 >
 > *** Description:
 > Given the code in the "steps to reproduce", zo-parse constructs a lam str=
 ucture with a negative arity.
 >
 > *** How to repeat:
 > #lang scheme/base
 >
 > (require compiler/zo-parse
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 scheme/pretty)
 >
 > (provide bytecode)
 >
 > (define (bytecode top-level-form)
 > =C2=A0(parameterize ([current-namespace (make-base-namespace)])
 > =C2=A0 =C2=A0(let-values ([(out) (open-output-bytes)])
 > =C2=A0 =C2=A0 =C2=A0(write (compile top-level-form) out)
 > =C2=A0 =C2=A0 =C2=A0(close-output-port out)
 > =C2=A0 =C2=A0 =C2=A0(let ([output (zo-parse (open-input-bytes (get-output=
 -bytes out)))])
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0(begin
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(pretty-display output)
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0output)))))
 >
 > (bytecode '(lambda x 1))
 >
 > *** Environment:
 > unix "Linux fermi 2.6.26-2-686 #1 SMP Wed May 12 21:56:10 UTC 2010 i686 G=
 NU/Linux" (i386-linux/3m) (get-display-depth) =3D 24
 > Human Language: english
 > (current-memory-use) 165105048
 >
 > Collections:
 > (("/home/dyoo/.racket/5.0.1/collects" non-existent-path) ("/pro/plt/softw=
 are/racket/5.0.1/std/collects" ".gitignore" "2htdp" "afm" "algol60" "at-exp=
 " "browser" "combinator-parser" "compiler" "config" "datalog" "defaults" "d=
 einprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortra=
 ce" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "gu=
 ibuilder" "handin-client" "handin-server" "help" "hierlist" "honu" "htdp" "=
 html" "icons" "lang" "launcher" "lazy" "macro-debugger" "make" "meta" "mred=
 " "mrlib" "mysterx" "mz" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser=
 -tools" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "rack=
 et" "racklog" "rackunit" "raco" "reader" "readline" "redex" "repo-time-stam=
 p" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib"=
  "setup" "sgl" "sirmail" "slatex" "slideshow" "srfi" "srpersist" "stepper" =
 "string-constants" "swindle" "syntax-color" "syntax" "teachpack" "test-box-=
 recovery" "test-!
 > =C2=A0engine" "tests" "tex2page" "texpict" "trace" "typed-scheme" "typed"=
  "unstable" "version" "waterworld" "web-server" "wxme" "xml" "info-domain")=
 )
 > Computer Language: (("Determine language from source") (#(#t print mixed-=
 fraction-e #f #t debug) (default) #() "#lang racket\n" #t))
 >
 >
 
 
 
 --=20
 Jay McCarthy <jay@cs.byu.edu>
 Assistant Professor / Brigham Young University
 http://teammccarthy.org/jay
 
 "The glory of God is Intelligence" - D&C 93
From: Matthew Flatt <mflatt@cs.utah.edu>
To: Jay McCarthy <jay.mccarthy@gmail.com>
Cc: dyoo@cs.wpi.edu, bugs@racket-lang.org, Blake Johnson <bjohn3x@gmail.com>,
        nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11175: zo-parse mis-decompiling lambda with rest arguments
Date: Fri, 10 Sep 2010 06:29:32 -0600

 At Thu, 9 Sep 2010 21:19:32 -0600, Jay McCarthy wrote:
 > This is actually just a bug in the documentation.
 >=20
 > lam structures are allowed to have negative arity when a
 > non-case-lambda is not yet JIT-ed.
 
 That doesn't sound right. Something like that happens at the level of
 the in-memory structures for the run-time system, but I don't think
 that whether it has been JITted is relevant for marshaling and
 unmarshaling bytecode.
 
 
 I think the issue is that the bytecode uses the combination of "0
 arguments including rest argument" (which turns into -1 for the `lam'
 struct) and the "rest argument" flag to mean "there's a rest argument,
 but it isn't used".
 
 We could document this, but I think it would be better to construct a
 `lam' with 0 instead of 1 and add an 'only-rest-arg-not-used flag. The
 `zo-parse' function would have to detect the 0-args-including-rest
 encoding and the `zo-marshal' function would have to detect the
 'only-rest-arg-not-used flag to generate the encoding back.
 
 
 > On Thu, Sep 9, 2010 at 10:56 AM,  <dyoo@cs.wpi.edu> wrote:
 > > A new problem report is waiting at
 > > =C2=A0http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D11175
 > >
 > > Reported by Danny Yoo for release: 5.0.1--2010-08-03(2c77ae5/a)
 > >
 > > *** Description:
 > > Given the code in the "steps to reproduce", zo-parse constructs a lam=
 =20
 > structure with a negative arity.
 > >
 > > *** How to repeat:
 > > #lang scheme/base
 > >
 > > (require compiler/zo-parse
 > > =C2=A0 =C2=A0 =C2=A0 =C2=A0 scheme/pretty)
 > >
 > > (provide bytecode)
 > >
 > > (define (bytecode top-level-form)
 > > =C2=A0(parameterize ([current-namespace (make-base-namespace)])
 > > =C2=A0 =C2=A0(let-values ([(out) (open-output-bytes)])
 > > =C2=A0 =C2=A0 =C2=A0(write (compile top-level-form) out)
 > > =C2=A0 =C2=A0 =C2=A0(close-output-port out)
 > > =C2=A0 =C2=A0 =C2=A0(let ([output (zo-parse (open-input-bytes (get-outp=
 ut-bytes out)))])
 > > =C2=A0 =C2=A0 =C2=A0 =C2=A0(begin
 > > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(pretty-display output)
 > > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0output)))))
 > >
 > > (bytecode '(lambda x 1))
 > >
 > > *** Environment:
 > > unix "Linux fermi 2.6.26-2-686 #1 SMP Wed May 12 21:56:10 UTC 2010 i686=
 =20
 > GNU/Linux" (i386-linux/3m) (get-display-depth) =3D 24
 > > Human Language: english
 > > (current-memory-use) 165105048
 > >
 > > Collections:
 > > (("/home/dyoo/.racket/5.0.1/collects" non-existent-path)=20
 > ("/pro/plt/software/racket/5.0.1/std/collects" ".gitignore" "2htdp" "afm"=
 =20
 > "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "dat=
 alog"=20
 > "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "=
 eopl"=20
 > "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics"=20
 > "gui-debugger" "guibuilder" "handin-client" "handin-server" "help" "hierl=
 ist"=20
 > "honu" "htdp" "html" "icons" "lang" "launcher" "lazy" "macro-debugger" "m=
 ake"=20
 > "meta" "mred" "mrlib" "mysterx" "mz" "mzcom" "mzlib" "mzscheme" "net"=20
 > "openssl" "parser-tools" "plai" "planet" "plot" "preprocessor" "profile"=
 =20
 > "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "r=
 edex"=20
 > "repo-time-stamp" "rnrs" "s-exp" "scheme" "schemeunit" "scribble"=20
 > "scribblings" "scriblib" "setup" "sgl" "sirmail" "slatex" "slideshow" "sr=
 fi"=20
 > "srpersist" "stepper" "string-constants" "swindle" "syntax-color" "syntax=
 "=20
 > "teachpack" "test-box-recovery" "test-!
 > > =C2=A0engine" "tests" "tex2page" "texpict" "trace" "typed-scheme" "type=
 d"=20
 > "unstable" "version" "waterworld" "web-server" "wxme" "xml" "info-domain"=
 ))
 > > Computer Language: (("Determine language from source") (#(#t print=20
 > mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t))
 > >
 > >
 >=20
 >=20
 >=20
 > --=20
 > Jay McCarthy <jay@cs.byu.edu>
 > Assistant Professor / Brigham Young University
 > http://teammccarthy.org/jay
 >=20
 > "The glory of God is Intelligence" - D&C 93
From: Jay McCarthy <jay.mccarthy@gmail.com>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: dyoo@cs.wpi.edu, bugs@racket-lang.org, Blake Johnson <bjohn3x@gmail.com>,
        nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11175: zo-parse mis-decompiling lambda with rest arguments
Date: Fri, 10 Sep 2010 09:56:05 -0600

 Okay. We'll change the zo-structs to have the new field.
 
 Jay
 
 On Fri, Sep 10, 2010 at 6:29 AM, Matthew Flatt <mflatt@cs.utah.edu> wrote:
 > At Thu, 9 Sep 2010 21:19:32 -0600, Jay McCarthy wrote:
 >> This is actually just a bug in the documentation.
 >>
 >> lam structures are allowed to have negative arity when a
 >> non-case-lambda is not yet JIT-ed.
 >
 > That doesn't sound right. Something like that happens at the level of
 > the in-memory structures for the run-time system, but I don't think
 > that whether it has been JITted is relevant for marshaling and
 > unmarshaling bytecode.
 >
 >
 > I think the issue is that the bytecode uses the combination of "0
 > arguments including rest argument" (which turns into -1 for the `lam'
 > struct) and the "rest argument" flag to mean "there's a rest argument,
 > but it isn't used".
 >
 > We could document this, but I think it would be better to construct a
 > `lam' with 0 instead of 1 and add an 'only-rest-arg-not-used flag. The
 > `zo-parse' function would have to detect the 0-args-including-rest
 > encoding and the `zo-marshal' function would have to detect the
 > 'only-rest-arg-not-used flag to generate the encoding back.
 >
 >
 >> On Thu, Sep 9, 2010 at 10:56 AM, =C2=A0<dyoo@cs.wpi.edu> wrote:
 >> > A new problem report is waiting at
 >> > =C2=A0http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D11175
 >> >
 >> > Reported by Danny Yoo for release: 5.0.1--2010-08-03(2c77ae5/a)
 >> >
 >> > *** Description:
 >> > Given the code in the "steps to reproduce", zo-parse constructs a lam
 >> structure with a negative arity.
 >> >
 >> > *** How to repeat:
 >> > #lang scheme/base
 >> >
 >> > (require compiler/zo-parse
 >> > =C2=A0 =C2=A0 =C2=A0 =C2=A0 scheme/pretty)
 >> >
 >> > (provide bytecode)
 >> >
 >> > (define (bytecode top-level-form)
 >> > =C2=A0(parameterize ([current-namespace (make-base-namespace)])
 >> > =C2=A0 =C2=A0(let-values ([(out) (open-output-bytes)])
 >> > =C2=A0 =C2=A0 =C2=A0(write (compile top-level-form) out)
 >> > =C2=A0 =C2=A0 =C2=A0(close-output-port out)
 >> > =C2=A0 =C2=A0 =C2=A0(let ([output (zo-parse (open-input-bytes (get-out=
 put-bytes out)))])
 >> > =C2=A0 =C2=A0 =C2=A0 =C2=A0(begin
 >> > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(pretty-display output)
 >> > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0output)))))
 >> >
 >> > (bytecode '(lambda x 1))
 >> >
 >> > *** Environment:
 >> > unix "Linux fermi 2.6.26-2-686 #1 SMP Wed May 12 21:56:10 UTC 2010 i68=
 6
 >> GNU/Linux" (i386-linux/3m) (get-display-depth) =3D 24
 >> > Human Language: english
 >> > (current-memory-use) 165105048
 >> >
 >> > Collections:
 >> > (("/home/dyoo/.racket/5.0.1/collects" non-existent-path)
 >> ("/pro/plt/software/racket/5.0.1/std/collects" ".gitignore" "2htdp" "afm=
 "
 >> "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "da=
 talog"
 >> "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" =
 "eopl"
 >> "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics"
 >> "gui-debugger" "guibuilder" "handin-client" "handin-server" "help" "hier=
 list"
 >> "honu" "htdp" "html" "icons" "lang" "launcher" "lazy" "macro-debugger" "=
 make"
 >> "meta" "mred" "mrlib" "mysterx" "mz" "mzcom" "mzlib" "mzscheme" "net"
 >> "openssl" "parser-tools" "plai" "planet" "plot" "preprocessor" "profile"
 >> "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "=
 redex"
 >> "repo-time-stamp" "rnrs" "s-exp" "scheme" "schemeunit" "scribble"
 >> "scribblings" "scriblib" "setup" "sgl" "sirmail" "slatex" "slideshow" "s=
 rfi"
 >> "srpersist" "stepper" "string-constants" "swindle" "syntax-color" "synta=
 x"
 >> "teachpack" "test-box-recovery" "test-!
 >> > =C2=A0engine" "tests" "tex2page" "texpict" "trace" "typed-scheme" "typ=
 ed"
 >> "unstable" "version" "waterworld" "web-server" "wxme" "xml" "info-domain=
 "))
 >> > Computer Language: (("Determine language from source") (#(#t print
 >> mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t))
 >> >
 >> >
 >>
 >>
 >>
 >> --
 >> Jay McCarthy <jay@cs.byu.edu>
 >> Assistant Professor / Brigham Young University
 >> http://teammccarthy.org/jay
 >>
 >> "The glory of God is Intelligence" - D&C 93
 >
 
 
 
 --=20
 Jay McCarthy <jay@cs.byu.edu>
 Assistant Professor / Brigham Young University
 http://teammccarthy.org/jay
 
 "The glory of God is Intelligence" - D&C 93
From: Danny Yoo <dyoo@cs.wpi.edu>
To: Jay McCarthy <jay.mccarthy@gmail.com>
Cc: Matthew Flatt <mflatt@cs.utah.edu>, bugs@racket-lang.org,
        Blake Johnson <bjohn3x@gmail.com>, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11175: zo-parse mis-decompiling lambda with rest arguments
Date: Fri, 10 Sep 2010 12:03:55 -0400

 On Fri, Sep 10, 2010 at 11:56 AM, Jay McCarthy <jay.mccarthy@gmail.com> wrote:
 > Okay. We'll change the zo-structs to have the new field.
 
 
 In the meantime, how should I be interpreting the negative -1 in
 Racket 5.0.1?  Should I assume that it actually means zero arity
 function with unused rest argument?
From: Matthew Flatt <mflatt@cs.utah.edu>
To: Jay McCarthy <jay.mccarthy@gmail.com>
Cc: dyoo@cs.wpi.edu, bugs@racket-lang.org, Blake Johnson <bjohn3x@gmail.com>,
        nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11175: zo-parse mis-decompiling lambda with rest arguments
Date: Fri, 10 Sep 2010 11:02:14 -0600

 To be clear, I don't think you should add a field, just a new flag.
 There's already a `flags' field in `lam'.
 
 At Fri, 10 Sep 2010 09:56:05 -0600, Jay McCarthy wrote:
 > Okay. We'll change the zo-structs to have the new field.
 >=20
 > Jay
 >=20
 > On Fri, Sep 10, 2010 at 6:29 AM, Matthew Flatt <mflatt@cs.utah.edu> wrote=
 :
 > > At Thu, 9 Sep 2010 21:19:32 -0600, Jay McCarthy wrote:
 > >> This is actually just a bug in the documentation.
 > >>
 > >> lam structures are allowed to have negative arity when a
 > >> non-case-lambda is not yet JIT-ed.
 > >
 > > That doesn't sound right. Something like that happens at the level of
 > > the in-memory structures for the run-time system, but I don't think
 > > that whether it has been JITted is relevant for marshaling and
 > > unmarshaling bytecode.
 > >
 > >
 > > I think the issue is that the bytecode uses the combination of "0
 > > arguments including rest argument" (which turns into -1 for the `lam'
 > > struct) and the "rest argument" flag to mean "there's a rest argument,
 > > but it isn't used".
 > >
 > > We could document this, but I think it would be better to construct a
 > > `lam' with 0 instead of 1 and add an 'only-rest-arg-not-used flag. The
 > > `zo-parse' function would have to detect the 0-args-including-rest
 > > encoding and the `zo-marshal' function would have to detect the
 > > 'only-rest-arg-not-used flag to generate the encoding back.
 > >
 > >
 > >> On Thu, Sep 9, 2010 at 10:56 AM, =C2=A0<dyoo@cs.wpi.edu> wrote:
 > >> > A new problem report is waiting at
 > >> > =C2=A0http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D11175
 > >> >
 > >> > Reported by Danny Yoo for release: 5.0.1--2010-08-03(2c77ae5/a)
 > >> >
 > >> > *** Description:
 > >> > Given the code in the "steps to reproduce", zo-parse constructs a la=
 m
 > >> structure with a negative arity.
 > >> >
 > >> > *** How to repeat:
 > >> > #lang scheme/base
 > >> >
 > >> > (require compiler/zo-parse
 > >> > =C2=A0 =C2=A0 =C2=A0 =C2=A0 scheme/pretty)
 > >> >
 > >> > (provide bytecode)
 > >> >
 > >> > (define (bytecode top-level-form)
 > >> > =C2=A0(parameterize ([current-namespace (make-base-namespace)])
 > >> > =C2=A0 =C2=A0(let-values ([(out) (open-output-bytes)])
 > >> > =C2=A0 =C2=A0 =C2=A0(write (compile top-level-form) out)
 > >> > =C2=A0 =C2=A0 =C2=A0(close-output-port out)
 > >> > =C2=A0 =C2=A0 =C2=A0(let ([output (zo-parse (open-input-bytes (get-o=
 utput-bytes out)))])
 > >> > =C2=A0 =C2=A0 =C2=A0 =C2=A0(begin
 > >> > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(pretty-display output)
 > >> > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0output)))))
 > >> >
 > >> > (bytecode '(lambda x 1))
 > >> >
 > >> > *** Environment:
 > >> > unix "Linux fermi 2.6.26-2-686 #1 SMP Wed May 12 21:56:10 UTC 2010 i=
 686
 > >> GNU/Linux" (i386-linux/3m) (get-display-depth) =3D 24
 > >> > Human Language: english
 > >> > (current-memory-use) 165105048
 > >> >
 > >> > Collections:
 > >> > (("/home/dyoo/.racket/5.0.1/collects" non-existent-path)
 > >> ("/pro/plt/software/racket/5.0.1/std/collects" ".gitignore" "2htdp" "a=
 fm"
 > >> "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config"=
 =20
 > "datalog"
 > >> "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui=
 "=20
 > "eopl"
 > >> "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics"
 > >> "gui-debugger" "guibuilder" "handin-client" "handin-server" "help"=20
 > "hierlist"
 > >> "honu" "htdp" "html" "icons" "lang" "launcher" "lazy" "macro-debugger"=
 =20
 > "make"
 > >> "meta" "mred" "mrlib" "mysterx" "mz" "mzcom" "mzlib" "mzscheme" "net"
 > >> "openssl" "parser-tools" "plai" "planet" "plot" "preprocessor" "profil=
 e"
 > >> "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline"=
 =20
 > "redex"
 > >> "repo-time-stamp" "rnrs" "s-exp" "scheme" "schemeunit" "scribble"
 > >> "scribblings" "scriblib" "setup" "sgl" "sirmail" "slatex" "slideshow" =
 "srfi"
 > >> "srpersist" "stepper" "string-constants" "swindle" "syntax-color" "syn=
 tax"
 > >> "teachpack" "test-box-recovery" "test-!
 > >> > =C2=A0engine" "tests" "tex2page" "texpict" "trace" "typed-scheme" "t=
 yped"
 > >> "unstable" "version" "waterworld" "web-server" "wxme" "xml" "info-doma=
 in"))
 > >> > Computer Language: (("Determine language from source") (#(#t print
 > >> mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t))
 > >> >
 > >> >
 > >>
 > >>
 > >>
 > >> --
 > >> Jay McCarthy <jay@cs.byu.edu>
 > >> Assistant Professor / Brigham Young University
 > >> http://teammccarthy.org/jay
 > >>
 > >> "The glory of God is Intelligence" - D&C 93
 > >
 >=20
 >=20
 >=20
 > --=20
 > Jay McCarthy <jay@cs.byu.edu>
 > Assistant Professor / Brigham Young University
 > http://teammccarthy.org/jay
 >=20
 > "The glory of God is Intelligence" - D&C 93
From: Matthew Flatt <mflatt@cs.utah.edu>
To: Danny Yoo <dyoo@cs.wpi.edu>
Cc: Jay McCarthy <jay.mccarthy@gmail.com>, bugs@racket-lang.org,
        Blake Johnson <bjohn3x@gmail.com>, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11175: zo-parse mis-decompiling lambda with rest arguments
Date: Fri, 10 Sep 2010 11:03:11 -0600

 At Fri, 10 Sep 2010 12:03:55 -0400, Danny Yoo wrote:
 > On Fri, Sep 10, 2010 at 11:56 AM, Jay McCarthy <jay.mccarthy@gmail.com> wrote:
 > > Okay. We'll change the zo-structs to have the new field.
 > 
 > 
 > In the meantime, how should I be interpreting the negative -1 in
 > Racket 5.0.1?  Should I assume that it actually means zero arity
 > function with unused rest argument?
 
 Yes. And that assumption will be forward-compatible, since a -1 won't
 show up in the future.
 
From: Jay McCarthy <jay.mccarthy@gmail.com>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: dyoo@cs.wpi.edu, bugs@racket-lang.org, Blake Johnson <bjohn3x@gmail.com>,
        nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11175: zo-parse mis-decompiling lambda with rest arguments
Date: Fri, 10 Sep 2010 11:53:47 -0600

 Ya, I should've been more specific too. Thanks for the help Matthew.
 
 Jay
 
 On Fri, Sep 10, 2010 at 11:02 AM, Matthew Flatt <mflatt@cs.utah.edu> wrote:
 > To be clear, I don't think you should add a field, just a new flag.
 > There's already a `flags' field in `lam'.
 >
 > At Fri, 10 Sep 2010 09:56:05 -0600, Jay McCarthy wrote:
 >> Okay. We'll change the zo-structs to have the new field.
 >>
 >> Jay
 >>
 >> On Fri, Sep 10, 2010 at 6:29 AM, Matthew Flatt <mflatt@cs.utah.edu> wrot=
 e:
 >> > At Thu, 9 Sep 2010 21:19:32 -0600, Jay McCarthy wrote:
 >> >> This is actually just a bug in the documentation.
 >> >>
 >> >> lam structures are allowed to have negative arity when a
 >> >> non-case-lambda is not yet JIT-ed.
 >> >
 >> > That doesn't sound right. Something like that happens at the level of
 >> > the in-memory structures for the run-time system, but I don't think
 >> > that whether it has been JITted is relevant for marshaling and
 >> > unmarshaling bytecode.
 >> >
 >> >
 >> > I think the issue is that the bytecode uses the combination of "0
 >> > arguments including rest argument" (which turns into -1 for the `lam'
 >> > struct) and the "rest argument" flag to mean "there's a rest argument,
 >> > but it isn't used".
 >> >
 >> > We could document this, but I think it would be better to construct a
 >> > `lam' with 0 instead of 1 and add an 'only-rest-arg-not-used flag. The
 >> > `zo-parse' function would have to detect the 0-args-including-rest
 >> > encoding and the `zo-marshal' function would have to detect the
 >> > 'only-rest-arg-not-used flag to generate the encoding back.
 >> >
 >> >
 >> >> On Thu, Sep 9, 2010 at 10:56 AM, =C2=A0<dyoo@cs.wpi.edu> wrote:
 >> >> > A new problem report is waiting at
 >> >> > =C2=A0http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D11175
 >> >> >
 >> >> > Reported by Danny Yoo for release: 5.0.1--2010-08-03(2c77ae5/a)
 >> >> >
 >> >> > *** Description:
 >> >> > Given the code in the "steps to reproduce", zo-parse constructs a l=
 am
 >> >> structure with a negative arity.
 >> >> >
 >> >> > *** How to repeat:
 >> >> > #lang scheme/base
 >> >> >
 >> >> > (require compiler/zo-parse
 >> >> > =C2=A0 =C2=A0 =C2=A0 =C2=A0 scheme/pretty)
 >> >> >
 >> >> > (provide bytecode)
 >> >> >
 >> >> > (define (bytecode top-level-form)
 >> >> > =C2=A0(parameterize ([current-namespace (make-base-namespace)])
 >> >> > =C2=A0 =C2=A0(let-values ([(out) (open-output-bytes)])
 >> >> > =C2=A0 =C2=A0 =C2=A0(write (compile top-level-form) out)
 >> >> > =C2=A0 =C2=A0 =C2=A0(close-output-port out)
 >> >> > =C2=A0 =C2=A0 =C2=A0(let ([output (zo-parse (open-input-bytes (get-=
 output-bytes out)))])
 >> >> > =C2=A0 =C2=A0 =C2=A0 =C2=A0(begin
 >> >> > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(pretty-display output)
 >> >> > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0output)))))
 >> >> >
 >> >> > (bytecode '(lambda x 1))
 >> >> >
 >> >> > *** Environment:
 >> >> > unix "Linux fermi 2.6.26-2-686 #1 SMP Wed May 12 21:56:10 UTC 2010 =
 i686
 >> >> GNU/Linux" (i386-linux/3m) (get-display-depth) =3D 24
 >> >> > Human Language: english
 >> >> > (current-memory-use) 165105048
 >> >> >
 >> >> > Collections:
 >> >> > (("/home/dyoo/.racket/5.0.1/collects" non-existent-path)
 >> >> ("/pro/plt/software/racket/5.0.1/std/collects" ".gitignore" "2htdp" "=
 afm"
 >> >> "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config"
 >> "datalog"
 >> >> "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gu=
 i"
 >> "eopl"
 >> >> "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics"
 >> >> "gui-debugger" "guibuilder" "handin-client" "handin-server" "help"
 >> "hierlist"
 >> >> "honu" "htdp" "html" "icons" "lang" "launcher" "lazy" "macro-debugger=
 "
 >> "make"
 >> >> "meta" "mred" "mrlib" "mysterx" "mz" "mzcom" "mzlib" "mzscheme" "net"
 >> >> "openssl" "parser-tools" "plai" "planet" "plot" "preprocessor" "profi=
 le"
 >> >> "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline=
 "
 >> "redex"
 >> >> "repo-time-stamp" "rnrs" "s-exp" "scheme" "schemeunit" "scribble"
 >> >> "scribblings" "scriblib" "setup" "sgl" "sirmail" "slatex" "slideshow"=
  "srfi"
 >> >> "srpersist" "stepper" "string-constants" "swindle" "syntax-color" "sy=
 ntax"
 >> >> "teachpack" "test-box-recovery" "test-!
 >> >> > =C2=A0engine" "tests" "tex2page" "texpict" "trace" "typed-scheme" "=
 typed"
 >> >> "unstable" "version" "waterworld" "web-server" "wxme" "xml" "info-dom=
 ain"))
 >> >> > Computer Language: (("Determine language from source") (#(#t print
 >> >> mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t))
 >> >> >
 >> >> >
 >> >>
 >> >>
 >> >>
 >> >> --
 >> >> Jay McCarthy <jay@cs.byu.edu>
 >> >> Assistant Professor / Brigham Young University
 >> >> http://teammccarthy.org/jay
 >> >>
 >> >> "The glory of God is Intelligence" - D&C 93
 >> >
 >>
 >>
 >>
 >> --
 >> Jay McCarthy <jay@cs.byu.edu>
 >> Assistant Professor / Brigham Young University
 >> http://teammccarthy.org/jay
 >>
 >> "The glory of God is Intelligence" - D&C 93
 >
 
 
 
 --=20
 Jay McCarthy <jay@cs.byu.edu>
 Assistant Professor / Brigham Young University
 http://teammccarthy.org/jay
 
 "The glory of God is Intelligence" - D&C 93
Responsible changed from "nobody" to "jay" by jay@racket-lang.org at Fri, 10 Sep 2010 16:46:20 -0400
Reason>>> A commit by jay@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/3433af0a30
State changed from "open" to "closed" by jay@racket-lang.org at Fri, 10 Sep 2010 16:46:20 -0400
Reason>>> A commit by jay@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/3433af0a30
