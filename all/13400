From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Mon Dec 31 22:16:44 2012
Received: from mail-oa0-f42.google.com (mail-oa0-f42.google.com [209.85.219.42])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id r013Gepd008787
	for <bugs@bugs.plt-scheme.org>; Mon, 31 Dec 2012 22:16:41 -0500
Message-Id: <201301010316.r013Gcks008781@champlain.ccs.neu.edu>
Date: Mon, 31 Dec 2012 22:16:38 -0500
From: eric.n.dobson@gmail.com
To: bugs@racket-lang.org
Subject: Segfault in racket

>Number:         13400
>Category:       all
>Synopsis:       Segfault in racket
>Class:          sw-bug
>Responsible:    nobody
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Mon Dec 31 22:20:01 -0500 2012
>Last-Modified:  Fri Mar 27 01:08:02 -0400 2015
>Originator:     Eric Dobson
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.3
>Environment:
MacIntel / Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_0) AppleWebKit/537.2 (KHTML, like Gecko) Chrome/22.0.1215.0 Safari/537.2
>Description:
The following program segfaults racket for me.
>How-To-Repeat:
#lang racket


(define void-t (void))
#;
(define-syntax-rule (my-void arg)
  (begin
    arg
    void-t))
(define my-void void)

(require future-visualizer)

(define (run)
  (define N 1000000)
  (define v (box #f))
  (define (f)
    (future
      (thunk
        (for ((i (in-range N)))
          (my-void (box-cas! v (unbox v) i))))))
  (define f1 (f))
  (define f2 (f))
  (touch f1)
  (touch f2)
  (values))

(visualize-futures
  (run)
  )
>Fix:
>Audit-Trail:
From: Eric Dobson <eric.n.dobson@gmail.com>
To: nobody@racket-lang.org, bugs@racket-lang.org,
        bug-notification@racket-lang.org, eric.n.dobson@gmail.com
Cc: 
Subject: Re: all/13400: Segfault in racket
Date: Thu, 26 Mar 2015 22:07:39 -0700

 --001a11376a728fa29e05123e1c92
 Content-Type: text/plain; charset=UTF-8
 
 I'm still able to reproduce this, somehow scheme_tail_apply is getting
 called with null for rands.
 
 * thread #1: tid = 0x1e2853, 0x0000000100099534
 Racket`scheme_tail_apply(rator=<unavailable>, num_rands=<unavailable>,
 rands=0x0000000000000000) + 292 at fun.c:1680, queue =
 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=1, a
 ddress=0x8)
     frame #0: 0x0000000100099534
 Racket`scheme_tail_apply(rator=<unavailable>, num_rands=<unavailable>,
 rands=0x0000000000000000) + 292 at fun.c:1680
    1677       a = p->tail_buffer;
    1678     p->ku.apply.tail_rands = a;
    1679     for (i = num_rands; i--; ) {
 -> 1680       a[i] = rands[i];
    1681     }
    1682   } else
    1683     p->ku.apply.tail_rands = NULL;
 
 --001a11376a728fa29e05123e1c92
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 <div dir=3D"ltr">I&#39;m still able to reproduce this, somehow scheme_tail_=
 apply is getting called with null for rands.<div><br></div><div><div>* thre=
 ad #1: tid =3D 0x1e2853, 0x0000000100099534 Racket`scheme_tail_apply(rator=
 =3D&lt;unavailable&gt;, num_rands=3D&lt;unavailable&gt;, rands=3D0x00000000=
 00000000) + 292 at fun.c:1680, queue =3D &#39;com.apple.main-thread&#39;, s=
 top reason =3D EXC_BAD_ACCESS (code=3D1, a</div><div>ddress=3D0x8)</div><di=
 v>=C2=A0 =C2=A0 frame #0: 0x0000000100099534 Racket`scheme_tail_apply(rator=
 =3D&lt;unavailable&gt;, num_rands=3D&lt;unavailable&gt;, rands=3D0x00000000=
 00000000) + 292 at fun.c:1680</div><div>=C2=A0 =C2=A01677 =C2=A0 =C2=A0 =C2=
 =A0 a =3D p-&gt;tail_buffer;</div><div>=C2=A0 =C2=A01678 =C2=A0 =C2=A0 p-&g=
 t;ku.apply.tail_rands =3D a;</div><div>=C2=A0 =C2=A01679 =C2=A0 =C2=A0 for =
 (i =3D num_rands; i--; ) {</div><div>-&gt; 1680 =C2=A0 =C2=A0 =C2=A0 a[i] =
 =3D rands[i];</div><div>=C2=A0 =C2=A01681 =C2=A0 =C2=A0 }</div><div>=C2=A0 =
 =C2=A01682 =C2=A0 } else</div><div>=C2=A0 =C2=A01683 =C2=A0 =C2=A0 p-&gt;ku=
 .apply.tail_rands =3D NULL;</div></div></div>
 
 --001a11376a728fa29e05123e1c92--
