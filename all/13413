From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Fri Jan  4 23:25:41 2013
Received: from mail-oa0-f49.google.com (mail-oa0-f49.google.com [209.85.219.49])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id r054Pc6C017308
	for <bugs@bugs.plt-scheme.org>; Fri, 4 Jan 2013 23:25:38 -0500
Message-Id: <201301050425.r054PaIN017303@champlain.ccs.neu.edu>
Date: Fri, 4 Jan 2013 23:25:36 -0500
From: rhythm.mail@gmail.com
To: bugs@racket-lang.org
Subject: Type mismatch in the 1st example of Beginning Typed Racket

>Number:         13413
>Category:       all
>Synopsis:       Type mismatch in the 1st example of Beginning Typed Racket
>Class:          doc-bug
>Responsible:    stamourv
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Fri Jan 04 23:28:01 -0500 2013
>Closed-Date:    Mon Jan 14 14:49:51 -0500 2013
>Last-Modified:  Mon Jan 14 14:49:51 -0500 2013
>Originator:     Lian Cheng
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.3
>Environment:
linux-ubuntu
>Description:
http://docs.racket-lang.org/ts-guide/beginning.html?q=beginning%20typed%20racket

#lang typed/racket
(struct: pt ([x : Real] [y : Real]))
 
(: distance (pt pt -> Real))
(define (distance p1 p2)
  (sqrt (+ (sqr (- (pt-x p2) (pt-x p1)))
           (sqr (- (pt-y p2) (pt-y p1))))))

The return type of `sqrt' is `Complex', rather than `Real'.  We need to call `real-part' to make `distance' return `Real':

#lang typed/racket

(struct: pt ([x : Real]
             [y : Real]))

(: distance (pt pt -> Real))
(define (distance p1 p2)
  (real-part (sqrt (+ (sqr (- (pt-x p2) (pt-x p1)))
                      (sqr (- (pt-y p2) (pt-y p1)))))))
>How-To-Repeat:
Type the sample program into DrRacket and run.
>Fix:
>Audit-Trail:
From: Vincent St-Amour <stamourv@ccs.neu.edu>
To: rhythm.mail@gmail.com, bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/13413: Type mismatch in the 1st example of Beginning Typed Racket
Date: Mon, 14 Jan 2013 14:47:31 -0500

 Since this program works on 5.3.1, I'll close the bug. If you can
 reproduce it, let me know and I'll re-open it.
 
 Also note that, depending on its input type, `sqrt''s return type can be
 more precise than `Complex'. In this program, since the results of `sqr'
 are guaranteed to be non-negative, the argument to `sqrt' is of type
 `Nonnegative-Real'. `sqrt' is therefore guaranteed to return
 non-negative reals.
 
 For more information, you can look at `sqrt''s full type by typing at
 the REPL:
     (:print-type sqrt)
 
 Vincent
 
 
 At Fri, 4 Jan 2013 23:28:02 -0500,
 rhythm.mail@gmail.com wrote:
 > 
 > A new problem report is waiting at
 >   http://bugs.racket-lang.org/query/?cmd=view&pr=13413
 > 
 > Reported by Lian Cheng for release: 5.3
 > 
 > *** Description:
 > http://docs.racket-lang.org/ts-guide/beginning.html?q=beginning%20typed%20racket
 > 
 > #lang typed/racket
 > (struct: pt ([x : Real] [y : Real]))
 >  
 > (: distance (pt pt -> Real))
 > (define (distance p1 p2)
 >   (sqrt (+ (sqr (- (pt-x p2) (pt-x p1)))
 >            (sqr (- (pt-y p2) (pt-y p1))))))
 > 
 > The return type of `sqrt' is `Complex', rather than `Real'.  We need to call `real-part' to make `distance' return `Real':
 > 
 > #lang typed/racket
 > 
 > (struct: pt ([x : Real]
 >              [y : Real]))
 > 
 > (: distance (pt pt -> Real))
 > (define (distance p1 p2)
 >   (real-part (sqrt (+ (sqr (- (pt-x p2) (pt-x p1)))
 >                       (sqr (- (pt-y p2) (pt-y p1)))))))
 > 
 > *** How to repeat:
 > Type the sample program into DrRacket and run.
 > 
 > *** Environment:
 > linux-ubuntu
 > 

Responsible changed from "nobody" to "stamourv" by stamourv at Mon, 14 Jan 2013 14:49:51 -0500
Reason>>> TR numeric tower

State changed from "open" to "closed" by stamourv at Mon, 14 Jan 2013 14:49:51 -0500
Reason>>> Works in 5.3.1.

