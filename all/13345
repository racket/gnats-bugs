From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Wed Dec  5 00:44:50 2012
Received: from mail-ie0-f172.google.com (mail-ie0-f172.google.com [209.85.223.172])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id qB55ilWc017716
	for <bugs@bugs.plt-scheme.org>; Wed, 5 Dec 2012 00:44:47 -0500
Message-Id: <201212050544.qB55iiTE017710@champlain.ccs.neu.edu>
Date: Wed, 5 Dec 2012 00:44:44 -0500
From: racket@bobmail.info
To: bugs@racket-lang.org
Subject: DrRacket Create Executable Stand-Alone and Dist. Results Fail

>Number:         13345
>Category:       all
>Synopsis:       DrRacket Create Executable Stand-Alone and Dist. Results Fail
>Class:          sw-bug
>Responsible:    nobody
>Severity:       non-critical
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Wed Dec 05 00:48:01 -0500 2012
>Originator:     ewemoa
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.3.1
>Environment:
windows-7-64
>Description:
The results produced by DrRacket for a simple program using dynamic-require (see the short sequence of steps to reproduce for details) give the following sort of error output:

standard-module-name-resolver: collection not found
  collection: "racket/lang"
  in collection directories:
  context...:
   standard-module-name-resolver
   standard-module-name-resolver
   #%mzc:test: [running body]
   loop

I expected the code to run without error.

FWIW, the code worked when invoked via DrRacket's generated launcher as well as via the command line.  Using raco exe also resulted in similar (if not the same) error output above.
>How-To-Repeat:
1. Create the following two files:

test.rkt:

#lang racket

(require racket/runtime-path)

;(define-runtime-path path-to-dependant "dependant.rkt")
(define path-to-dependant "dependant.rkt")

(define (test)
  (let ([thing (dynamic-require path-to-dependant 'gift)])
    (displayln thing)))

(test)

dependant.rkt:

#lang racket

(provide gift)

(define gift "hi from the dependant")

2. Open test.rkt (the first file) in DrRacket

3. Choose Racket -> Create Executable...

4. Choose either Stand-alone or Distribution in the resulting dialog box

5. Click on the Create button and wait for results to be produced (an .exe file in the former case and a .zip file in the latter)

6. Try to execute the result (the .exe file in the former case and in the latter case, having uncompressed the zip file, the .exe file found within (may be a few directories down))
>Fix:
