From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Thu May 10 22:17:37 2012
Received: from mail-vb0-f44.google.com (mail-vb0-f44.google.com [209.85.212.44])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id q4B2HYUH010240
	for <bugs@bugs.plt-scheme.org>; Thu, 10 May 2012 22:17:34 -0400
Message-Id: <201205110217.q4B2HVBs010234@champlain.ccs.neu.edu>
Date: Thu, 10 May 2012 22:17:31 -0400
From: infodeveloperdon@gmail.com
To: bugs@racket-lang.org
Subject: Trying to produce list of files, not subdirectories in a specified directory.  Works from one module but not from a calling module.

>Number:         12764
>Category:       all
>Synopsis:       Trying to produce list of files, not subdirectories in a specified directory.  Works from one module but not from a calling module.
>Class:          support
>Responsible:    eli
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Thu May 10 22:20:01 -0400 2012
>Closed-Date:    Thu May 10 22:50:29 -0400 2012
>Last-Modified:  Thu May 10 22:50:29 -0400 2012
>Originator:     Don Green
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.2.1
>Environment:
unix "Linux don-laptop 2.6.32-41-generic #89-Ubuntu SMP Fri Apr 27 22:22:09 UTC 2012 i686 GNU/Linux" (i386-linux/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 155872040
Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()


Collections:
("/home/don/.racket/5.2.1/collects"
 (non-existent-path))
("/usr/local/racket/collects"
 ("datalog" "deinprogramm" "xml" "syntax-color" "file" "mzlib" "xrepl" "sgl" "compiler" "test-box-recovery" "rnrs" "help" "frtime" "plai" "rackunit" "swindle" "icons" "config" "string-constants" "launcher" "profile" "algol60" "unstable" "redex" "mred" "tex2page" "drscheme" "embedded-gui" "eopl" "slatex" "reader" "data" "games" "typed-scheme" "gui-debugger" "stepper" "info-domain" "make" "typed-racket" "readline" "graphics" "typed" "mysterx" "lazy" "setup" "net" "ffi" "plot" "mzcom" "syntax" "hierlist" "scribble" "trace" "images" "htdp" "schemeunit" "defaults" "mrlib" "macro-debugger" "drracket" "at-exp" "parser-tools" "html" "racklog" "framework" "db" "web-server" "slideshow" "lang" "test-engine" "scheme" "texpict" "r5rs" "s-exp" "version" "srfi" "raco" "combinator-parser" "browser" "scriblib" "errortrace" "racket" "picturing-programs" "r6rs" "mzscheme" "teachpack" "preprocessor" "planet" "2htdp" "dynext" "wxme" "scribblings" "openssl"))

Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default "/home/don/.plt-scheme/4.2.1/collects") #() "#lang scheme\n" #t #t))
>Description:
;I have included the content of 2 files below.
;The first file content defines module and function called "dir-list" and a call to dir-list. Running this file succeeds in 
returning a dir list, a list of the files in a specified directory.
;The second file contains same call to dir-list. Running this file fails. It returns the empty list ().  It should return a list of files.  Why not? How can I fix this? 

;---FIRST FILE---
#lang racket
(require scheme)
(require DG/all/list-to-string)
(require DG/all/display2)

(provide dir-list)

(define (display-true-elements x y) ;(my-display x y)
  (cond ((eq? x #t) y)
        (else null)
        ))

(define (display-false-elements x y) ;(my-display x y)
  (cond ((eq? x #f) y)
        (else null)
        ))

(define dir-list-files
  (lambda (path mode)
    (let* (
           (a (directory-list path))
           (d (map (lambda (x) (file-exists? x)) (directory-list path)))
           )
      ;(display 
       (flatten 
       (map (lambda (number1 number2)
              (display-true-elements number1 number2))
            d  ;list1
            a) ;list2
       ;)
      )
      )))

(define dir-list-subdirs
  (lambda (path mode)
    (let* (
           (a (directory-list path))
           (d (map (lambda (x) (file-exists? x)) (directory-list path)))
           )
      ;(display 
       (flatten 
       (map (lambda (number1 number2)
              (display-false-elements number1 number2))
            d  ;list1
            a) ;list2
       ;)
      )
    )))

(define dir-list-both
  (lambda (path mode)
    ;(display 
     (directory-list path)
     ;)
    ))

(define dir-list
  (lambda (path mode)
    (cond 
      ((eq? mode 'files) (dir-list-files path mode))
      ((eq? mode 'subdirs) (dir-list-subdirs path mode))
      ((eq? mode 'both) (dir-list-both path mode))
      )
    ))

;(display (dir-list "/home/don/.plt-scheme/4.2.1/collects/DG/test/copy/folder1" 'files)) ;=> Returns list of files.

;---SECOND FILE---
#lang racket
(require scheme)
(require DG/all/dir-list)

(display 
 (dir-list "/home/don/.plt-scheme/4.2.1/collects/DG/test/copy/folder1" 'files)
 ) ;=> Returns () as list of files.
>How-To-Repeat:
1) Execute first file. Returns list of files, not subdirectories.
2) Execute second file, which simply calls first file. Returns erroneous empty list. Should return list of files, not subdirectories.
>Fix:
>Audit-Trail:
Responsible changed from "nobody" to "eli" by eli at Thu, 10 May 2012 22:50:29 -0400
Reason>>> Replying

State changed from "open" to "closed" by eli at Thu, 10 May 2012 22:50:29 -0400
Reason>>> Replied, see http://lists.racket-lang.org/users/archive/2012-
May/052024.html

