From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Wed Jan 19 11:24:47 2011
Received: from mail-fx0-f44.google.com (mail-fx0-f44.google.com [209.85.161.44])
	by champlain.ccs.neu.edu (8.14.3/8.14.3) with ESMTP id p0JGOiK9007066
	for <bugs@bugs.plt-scheme.org>; Wed, 19 Jan 2011 11:24:45 -0500
Message-Id: <201101191624.p0JGOTXY007053@champlain.ccs.neu.edu>
Date: Wed, 19 Jan 2011 11:24:29 -0500
From: matthias@ccs.neu.edu
To: bugs@racket-lang.org
Subject: drracket highlights strange pieces when EOF is encountered during xml-read

>Number:         11649
>Category:       all
>Synopsis:       drracket highlights strange pieces when EOF is encountered during xml-read
>Class:          sw-bug
>Responsible:    jay
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Wed Jan 19 11:28:01 -0500 2011
>Closed-Date:    Thu Jan 20 14:13:22 -0500 2011
>Last-Modified:  Fri Jan 21 06:36:01 -0500 2011
>Originator:     matthias
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.0.99.6--2011-01-16(b7f9ee3/g)
>Environment:
macosx "Darwin antarctica.ccs.neu.edu 10.6.0 Darwin Kernel Version 10.6.0: Wed Nov 10 18:13:17 PST 2010; root:xnu-1504.9.26~3/RELEASE_I386 i386" (i386-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 268202228

Collections:
("/Users/matthias/0Unison/collects/"
 (".DS_Store" "compiled" "date" "finance" "info-domain" "info.ss" "pdf.ss~" "session" "short" "testing" "tll-collects" "utils" "web"))
("/Users/matthias/Library/Racket/5.0.99.6/collects"
 (non-existent-path))
("/Users/matthias/plt/collects"
 (".gitignore" "2htdp" "afm" "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "data" "datalog" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "meta" "mred" "mrlib" "mysterx" "mz" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "picturing-programs" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raclog" "raco" "racunit" "reader" "readline" "redex" "repo-time-stamp" "repos-time-stamp" "rnrs" "s-exp" "schelog" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "sirmail" "slatex" "slideshow" "srfi" "srpersist" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tes!
 ts" "tex2page" "texpict" "tool" "trace" "typed" "typed-scheme" "unstable" "version" "waterworld" "web-server" "wxme" "xml"))

Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t))
>Description:
run this program: 

#lang racket

(require xml)

(provide main)

;; -> Void 
;; effect: read XML test case from 
(define (main)
  (define n
    (with-handlers ((exn:fail?
                     (lambda (x) 
                       (printf "*** the input is ill-formatted ***\n")
                       (raise x))))
      (read-xml/element)))
  n)

(main)

click EOF

drracket highlights in pink everything from top left in REPL 
to the first two ** in the message 

it looks odd; i don't know whether the error is new or old

[This does NOT happen with plain read so I do think it is an error.]

(I'll send an image as a reply.) 
>How-To-Repeat:

>Fix:
>Audit-Trail:
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: matthias@ccs.neu.edu, bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11649: drracket highlights strange pieces when EOF is encountered during xml-read
Date: Wed, 19 Jan 2011 11:50:34 -0500

 --Apple-Mail-13--678945538
 Content-Transfer-Encoding: 7bit
 Content-Type: text/plain;
 	charset=us-ascii
 
 
 
 --Apple-Mail-13--678945538
 Content-Disposition: inline;
 	filename="Screen shot 2011-01-19 at 11.21.31 AM.png"
 Content-Type: image/png;
 	x-mac-hide-extension=yes;
 	x-unix-mode=0644;
 	name="Screen shot 2011-01-19 at 11.21.31 AM.png"
 Content-Transfer-Encoding: base64
 
 iVBORw0KGgoAAAANSUhEUgAABBQAAAEzCAIAAAAO7MfiAAAKeGlDQ1BJQ0MgUHJvZmlsZQAAeAHV
 lmdQFNkWx0/35ESaYQQkDDkjOUqOAwpIFEwMM4QhjOMQFMzK4gquKCIioCzgIkHBNQCyBsSAaRFU
 xLwgi4L6XAygAsproHCtem+/vS/vVN3bv/7f06dv97236g9Ab+WJxUmoDECyKFUS5O3GWRwRySE9
 AgQYwAQ2sHn8FLFrYOAC+McYvYdlY3HHeKrWP6b99wFZQUwKHwAJxIajBSn8ZIxPYjzGF0tSAdBj
 GHeuThVjjNuEMUuCTRDjgimOm+HqKY6e4TPTOSFB7lhOJwCZzuNJ4gBojzGdk86Pw+rQJjA2FQmE
 IgC6EcZO/HieAOOpuRslJ6+c4iKM9aK/qxP3HfN40d9q8nhx33jmW7AnsRd7CFPESbyM6Zv/ZZec
 lIb9r+mQw3q6KMl/am2meFDA8/CbZXHS9JpN6zGi0OBZXRTtHzDLsRKvoFkWp7p9x4Ehs3pmvLv/
 LMekeH6rk8DznVqz6fqStKDQWU5JD/ac5cz4kPBZFsR4fNNjhV7cWV2Yyv32rsSVft/mAO4gBBHE
 QDLwgAM+4AGQGrMGWz8A95XiDIkwLj6V44rtuBgjDlfENzHimJuamU0N/9/E1Fmbmez7+9NnCGGT
 /9YyEwFcrmJnwPNvLRzbs7U1AGzlvzUtbD+z8gBabvDTJOkz9fBTFwJQQRpYoAiqoAl6YAzmYA0O
 4AKe4AsBEAIRsBz4EI/9YwmshnWwGbIhF3bBXiiGMqiEajgKx6EJzsAFuAI3oBO64RH0wgC8gmEY
 hXEEQUgIA2Eiiogaoo0YIuaILeKEeCILkCAkAolC4hARkoasQ7YiuUg+UoyUIzXIr8hp5AJyDelC
 HiB9yBDyDhlDcSgdZaEqqA46D7VFXVE/NARdhsahq9BMNAvdiRahFegRtBG9gN5Au9Fe9BU6ggMc
 DcfGqeOMcbY4d1wALhIXi5PgNuBycIW4Clw9rgXXjruD68W9xn3GE/FMPAdvjHfA++BD8Xz8KvwG
 /A58Mb4a34i/hL+D78MP478SGARlgiHBnsAlLCbEEVYTsgmFhCrCKcJlQjdhgDBKJBLZRF2iDdGH
 GEFMIK4l7iAeIDYQW4ldxH7iCIlEUiQZkhxJASQeKZWUTdpPOkI6T7pNGiB9ItPIamRzshc5kiwi
 byEXkmvJ58i3yS/I4xQZijbFnhJAEVAyKHmUQ5QWyi3KAGWcKkvVpTpSQ6gJ1M3UImo99TL1MfU9
 jUbToNnRFtGEtE20Itox2lVaH+0zXY5uQHenL6Wn0XfSD9Nb6Q/o7xkMhg7DhRHJSGXsZNQwLjKe
 Mj5JMaVMpLhSAqmNUiVSjVK3pd5IU6S1pV2ll0tnShdKn5C+Jf1ahiKjI+Muw5PZIFMic1qmR2ZE
 lilrJhsgmyy7Q7ZW9prsoBxJTkfOU04glyVXKXdRrp+JY2oy3Zl85lbmIeZl5gCLyNJlcVkJrFzW
 UVYHa1heTt5SPkx+jXyJ/Fn5XjaOrcPmspPYeezj7HvssTkqc1znxMzZPqd+zu05HxXmKrgoxCjk
 KDQodCuMKXIUPRUTFXcrNik+UcIrGSgtUlqtdFDpstLruay5DnP5c3PmHp/7UBlVNlAOUl6rXKl8
 U3lERVXFW0Wssl/losprVbaqi2qCaoHqOdUhNaaak5pQrUDtvNpLjjzHlZPEKeJc4gyrK6v7qKep
 l6t3qI9r6GqEamzRaNB4oknVtNWM1SzQbNMc1lLTWqi1TqtO66E2RdtWO157n3a79kcdXZ1wnW06
 TTqDugq6XN1M3Trdx3oMPWe9VXoVenf1ifq2+on6B/Q7DVADK4N4gxKDW4aoobWh0PCAYZcRwcjO
 SGRUYdRjTDd2NU43rjPuM2GbLDDZYtJk8mae1rzIebvntc/7amplmmR6yPSRmZyZr9kWsxazd+YG
 5nzzEvO7FgwLL4uNFs0Wby0NLWMsD1ret2JaLbTaZtVm9cXaxlpiXW89ZKNlE2VTatNjy7INtN1h
 e9WOYOdmt9HujN1ne2v7VPvj9n85GDskOtQ6DM7XnR8z/9D8fkcNR55juWOvE8cpyulnp15ndWee
 c4XzMxdNF4FLlcsLV33XBNcjrm/cTN0kbqfcPrrbu693b/XAeXh75Hh0eMp5hnoWez710vCK86rz
 Gva28l7r3epD8PHz2e3Tw1Xh8rk13GFfG9/1vpf86H7BfsV+zxYYLJAsaFmILvRduGfhY39tf5F/
 UwAEcAP2BDwJ1A1cFfjbIuKiwEUli54HmQWtC2oPZgavCK4NHg1xC8kLeRSqF5oW2hYmHbY0rCbs
 Y7hHeH547+J5i9cvvhGhFCGMaI4kRYZFVkWOLPFcsnfJwFKrpdlL7y3TXbZm2bXlSsuTlp9dIb2C
 t+JEFCEqPKo2aoIXwKvgjURzo0ujh/nu/H38VwIXQYFgKMYxJj/mRaxjbH7sYJxj3J64oXjn+ML4
 10J3YbHwbYJPQlnCx8SAxMOJk0nhSQ3J5OSo5NMiOVGi6NJK1ZVrVnaJDcXZ4t5V9qv2rhqW+Emq
 UpCUZSnNqSzM1NxM00v7Ia0v3Sm9JP3T6rDVJ9bIrhGtuZlhkLE940WmV+Yva/Fr+Wvb1qmv27yu
 b73r+vINyIboDW0bNTdmbRzY5L2pejN1c+Lm37eYbsnf8mFr+NaWLJWsTVn9P3j/UJctlS3J7tnm
 sK3sR/yPwh87tlts37/9a44g53quaW5h7sQO/o7rP5n9VPTT5M7YnR151nkHdxF3iXbd2+28uzpf
 Nj8zv3/Pwj2NBZyCnIIPe1fsvVZoWVi2j7ovbV9v0YKi5v1a+3ftnyiOL+4ucStpKFUu3V768YDg
 wO2DLgfry1TKcsvGfhb+fL/cu7yxQqeisJJYmV75/FDYofZfbH+pqVKqyq36clh0uLc6qPpSjU1N
 Ta1ybV4dWpdWN3Rk6ZHOox5Hm+uN68sb2A25x+BY2rGXv0b9eu+43/G2E7Yn6k9qnyw9xTyV04g0
 ZjQON8U39TZHNHed9j3d1uLQcuo3k98On1E/U3JW/mzeOeq5rHOT5zPPj7SKW19fiLvQ37ai7dHF
 xRfvXlp0qeOy3+WrV7yuXGx3bT9/1fHqmWv2105ft73edMP6RuNNq5unfrf6/VSHdUfjLZtbzZ12
 nS1d87vO3Xa+feGOx50rd7l3b3T7d3fdC713v2dpT+99wf3BB0kP3j5Mfzj+aNNjwuOcJzJPCp8q
 P634Q/+Phl7r3rN9Hn03nwU/e9TP73/1Z8qfEwNZzxnPC1+ovagZNB88M+Q11PlyycuBV+JX46+z
 /yX7r9I3em9O/uXy183hxcMDbyVvJ9/teK/4/vAHyw9tI4EjT0eTR8c/5nxS/FT92fZz+1j42Ivx
 1ROkiaIv+l9avvp9fTyZPDkp5kl4014Ah/VobCzAu8MAjAgAJuaLqa0zXng6A5nx7xhP+fhpL/+f
 POOXp/OtASpbAcKx5ou10k0A2lhjAkCgC0CIC6AWFt8apk5FSqyF+TQgtCbMmhROTr7HvCFJH+BL
 z+TkeNPk5JcqzLM/BGgdnfHgU9lEGYB8dRRd2dW+oWT68e+7fwOT/On1zpGZ3gAAAAlwSFlzAAAL
 EwAACxMBAJqcGAAAIABJREFUeAHsnQtgTGf6/5+55SYJQWjjFqI2WqJuparuLG012qWl6K9si16o
 S0v5qf6XbpXdtmq76rJbWhRlW6Ft/FqXUq07FVSWhCBJERJym5nMnJn/9zkzk0ySc0IUbfV5O505
 5z3v9TNn4n3Oc3kNK/7zudtNbpeB3ORS3C63Cy/FjSNObjefuxWD4nKR2+BUkJDhRA23uwj/nzl9
 8vVpr9D1Tm+++ebs2bOvd6vSnhAQAkJACAgBISAEhIAQEAJMIDs7Oycnx6ymgIAAk8lksVjwjgyj
 mjyYsOBXBQDX+Fder1O3kdlgMOICiw+4gE8DEXIUxaAmtwFChctlNEB2UGUJF0QMNOEmliH4U5IQ
 EAJCQAgIASEgBISAEBACvwMCkA+8woPBAKmARQiWHXACxQJeOHEbWH7gFxFkCmglIEywPAEZwiNz
 /A44yRSFgBAQAkJACAgBISAEhMDvngBkArOLDFAgKPzOggMMliAouMmIM6gXWLXABxAiDBAefFdY
 lCAH5AoWMiQJASEgBISAEBACQkAICAEhcKsTYJnA6HLCJMngdrHxEgsHBsgPbiOMmVjfgE9VPICl
 E7wgoHIwuI1s2qS+UBzaBxEeVHDyJgSEgBAQAkJACAgBISAEbmEC0De43IoZrtLQKUB6gEUS9Alm
 o4udot1OSAUm1S4JagmUM7FiQtVGqO/sPW1kx2pUliQEhIAQEAJCQAgIASEgBITALU5ANVcyk1FR
 LZOgemA/B54zOzXghC2S1De4WyMP8ZfgRe1yGxUjuzvgwAlxwmwU1cMtfp/I9ISAEBACQkAICAEh
 IASEgNFg5FhMRgMLD6x6gMzAQgNLDOz9wCf8Ygdq9X9WTMALovjl4uBMRE5BKQSEgBAQAkJACAgB
 ISAEhMCtTYD1DG4DwriyBMAmTOwejXcDcuBArUoPEBtYCwEdhfqOgiYcI0YrKhC8IPCBA0lCQAgI
 ASEgBISAEBACQkAI3PIE3PBxgPczGyFB7QCJgSOzsijhhkmSGlyJhQQWFjy6CKeThQWYL7GPtRti
 B05ZHyFJCAgBISAEhIAQEAJCQAgIgVudgNvM4ZRYQuAXyxEcbwkv7AsH1waIEEjsJ40cvLOREoqp
 gZjcRhOcrBWWMSQJASEgBISAEBACQkAICAEhcCsTwMLfRYoZU+TNotX9ojk0KxQLHHPJBF0DayPI
 yS4PLGDAYdoB92hIGJ4YSx4jJ0RiupUhydyEgBAQAkJACAgBISAEhIAQUAlALDAjahIkAxfUCQaE
 ZkVi7QOSC+KEExs+GBXEWUIBF8QElhMUxeVQXE6nq8jhcDoUm92h1pI3ISAEhIAQEAJCQAgIASEg
 BG5ZAiajwWQkc5HLAqMkF7FVEgQGbBrHpkvwnobIwJ4ORoejCBoJhxMXDXa701pgs9qt2AoC+0Eg
 y1aQf8sSkokJASEgBISAEBACQkAICAEhoBJAcFbs2sCbxLkQUckN3wXoG4wugqsD5AIoIIxGk9Fu
 s8MuyWww5xfkWa3WS7l5tnyr1WZjSQJaCTLk5hYITyEgBISAEBACQkAICAEhIARubQKwRYKTtJmV
 DbyDg8lggqZBdYpWnGQwQ+GgbulgthfZL17MOZ2ebrPZccySBkQHmDGx9sGVl1d4a2OS2QkBISAE
 hIAQEAJCQAgIASFgNLIjtBkiBO/sAB4G3rcBbtHwbUB8JagdVLskQ9aFnMz0zLz8fLMlAK4R8LL2
 xGnlGhyRCa1IEgJCQAgIASEgBISAEBACQuBWJuCCRwO8HiBCqN4P8HOA3OBkL2m3UmS3w4YJOU5H
 0eXLly7m5MB4yWgwQ7ZAIcUJhwfIGCodjsUkSQgIASEgBISAEBACQkAICIFbmYC6cbTJzFs6YG9p
 jrIErQO2ceCt4izI5v0b3HYHjJVskA8gI7DNkhMih8lshPIBDtVwjkA9jucqSQgIASEgBISAEBAC
 QkAICIFbmYDbBKsl7PMAbQLCsMKVAZIDvB9gteRC1FbF6YAWoqjIVmQvMpstFpMZQZkU+ERAyODQ
 TEYTIrsa4VUtm8TdyjeJzE0ICAEhIASEgBAQAkJACIAAIirBfwEO004jbyANqySTarmE2Eomdop2
 O4qs1vz8y4pitwRCVnBhvzgYKyFCExwdCMFd1T3kUP9G0Pzb3/52I5qVNoWAEBACQkAICAEhIASE
 gBDwEBg5cmRlUMBAyWmG5gBWSfBggBShKLybgwkO1GYjVA6XEYc1rwC+DxYLbwThIBcEDFY6wL8a
 cga7VZNnY7nK9HpVZS9evHhV5aSQEBACQkAICAEhIASEgBAQAteDgENNei2ZDG4TdpiGA4PicCpO
 J5wcIDNACYF9owty88+dz8o6n2WzFyHHRLBZUkwwaIKkAcGBHSSQ+BB7UOt1IPlCQAgIASEgBISA
 EBACQkAI3BoETCaOtGomF3tIw2xJDdTqwlZweXl5589nXb6cayu0sqO0AksliAnQR5gQvJW3n+Zg
 rl7BAUGZbg0cMgshIASEgBAQAkJACAgBISAE9Aiobg5us8lktAQGYvu3vMu52dnZF3Iu5eRcgspC
 cbqNRgsbKBmx4zRvI6dqHNRd5DxNQojw6iH0upB8ISAEhIAQEAJCQAgIASEgBG4FAgY3YrS6zEV2
 Z5HVlp9n/SkrK/vC5cuF+QX5+UEBIdBLmIwmxGEiIzyrees4uENA/cA6B9Y+qCFaOWLrDXGYvhUA
 yxyEgBAQAkJACAgBISAEhMCtQgBbxBkNRnP6T+cuXbpUkG/PK7Q6ihRym4LMoSbsB8chW91OhR0j
 eDsHFhp42zhIDhyiFfFaoZTw2C/dACI1atSYOHHiDWhYmhQCQkAICAEhIASEgBAQAkKACYwYMcKs
 poCAAJPJZMHuDCYTMrAZQ/F+DFj/K1AXqBtEQxQwZ5w7n5+bh4hKvLu0C17TrHJQd4rDVdW9AfoJ
 Bb4PiK2EjSGQx24QCLuED0RfgifEjWD/8ssvz5o160a0LG0KASEgBISAEBACQkAICAEhAIeFnJyc
 q+cAAQFCgdmaZ1McLqMRG8OZYJPkxH8wRDLAVsnJAVwNkClUJ2nIDCa3yeiE8AGRwpNYxkDIJUlC
 QAgIASEgBISAEBACQkAI3NIEsJ+D3eA2Y2sHNyEKK8+VVQ2sWsCJxyAJYgTLCrBwcsNUidUVECSw
 5QNyUAYvSA/i83BL3yYyOSEgBISAEBACQkAICAEhoC79sfw3O+G8wG7QLCU43apntJcOSwXs5YBw
 S7jMkoXB5ShilwcIE0gsT+AElyQJASEgBISAEBACQkAICAEhcCsTgFwAZwizAtlA1R7AF4KNkdwK
 CwTQPsAzAtdcKOaC2IAi2CHOxV4OUD6oXDy6B4/O4lYGJXMTAkJACAgBISAEhIAQEAK/dwKqxsBt
 ZocGGCJBBjAo2M+BVRCIogS5AYIEWzRBeMD/2OsB0gMLFS5s+WDgUEtswgTBQoHl0k1JW/felG6k
 EyEgBISAEBACQkAICAEhcCsS6Nzm58wKbgswOzKrwZdgr+Rym1gYQOKgS+qRGmIJJk0sI6j5HGgJ
 sgTLESxkeJJHDfFzRnJVdTesePv/Au6f+ae2QVxc2b9x8YLk0IkjBsYE8HnWj+unJhaMGz0wVj3l
 LF9yXjgw7cNDT45+svwlX5Hr/+ksslNAoPlqGlaqLvgg6lRJSXezdmcfi7tUtq4StmR53WMoZvcW
 Da5u69L27P31rSVVKzyynbt98uoqL4xI8RCroKyzyEwBzrIDqKDCNV2yndszednRkT/je8m7kJ5R
 6PR1bq59W92Ict9+5unDSenZFFq/S1y0euf4ins/7clJ+4/lU0TNhvc2uc03Zc3MUhVzziXvSs7I
 t4S3bN4qJsxU6lrZEyU5affhnMKA4Botmt/dINh7WW9gtgspe7JD729ym38zmpnFBSrVVHEtHJRv
 VnNeeafXxy+kVc9Wnboyc8rYgQ38ppt36WxGrs2/TTJVbVwnImP/py++N7P2gBUL+jTGLasFuVSl
 Ck9y9+/+Id1JodXqt70zOsxX1Hnhh2krT7zw7KNRfuPxXExOnPkODVC79pVWP20ZO15c8k2h9WKf
 EdOfqB9CpN1yqTqlTuzrFv11dS6FRPb4+5OdikdSqoicCAEhIASEgBC4dQmw24KRzG7sAIeXAfZK
 RvZlYBMlMuIQigUjSwucICYYHWzABMsm9ptmRwdEX+J6eL8pKSB/xZzl9pH92sZyh1lLX1+wkOje
 Bx6OaYRFAB367uOF6+PGjdYYii37vzPXf//wc09qXLtBWUXJvXoN7b1w08Qm4VfuociSuLxKQsei
 EREuCnSf2x88c3njWYPPbn8mvdTqpChw7QdVEkgZ0dehtmncubzKNKoxf+GhkU188kSFnTkuV5mz
 purAP1NMhcWoqGavXtG9Fx6aeHXNVtxYBVedBafnrP9+6LV/L4Uf//WRUQdKepg+b9Ord5YCvus/
 L7X/x1Zvib4zsif0jigpTlSUPnvSI5OKW+j7Zu6E7mGamf61iE7t/lf0xAW+vMYJq5Y8XDvQd1rm
 s3Ddoj/HL0/x5TZe/dG/+9cP0R9Y4acLBg3+ekL2NwP9hqqZ6W2ykk35BsKfZZvVmVfu4v83PfyJ
 1UH2nQvXJwx/bmCx/IMmflzXt/0H/m3ieHT2N93mjJ+Z0POphJga2pDL1KjgVDk7+7W+k7b7SjR6
 KmX+8x7pN2XPspn7O0zW+vPTuNV9Cx8f9Pi9O7tVK3XZYf9p4defjh05LTYEf7t0W/Z1Vv7T3LBF
 h5rzX51T9e43b+Kfk/LjkBwhIASEgBAQAr8IASgYFJcT8oFTFRhUsUEVKNQ9HHhjCMgFRhPcIiAg
 sIzAfhBGF570QjHBiYUP3mbu5oy+eTtIBp8ePssLZWfGkTlqr5sOZ6qfWXt3pFDf+xqXe/DMV80W
 vPldUWxQC5ROyCl+gl36yjWdmcxYw1Y1l1pQ6nZholyi+cN/XDDh8IIXjqz94NDyvu6k5bct/rFU
 deyxgRQ//hQX41fSwbVnuhKt2le1wiEabVAjeBLkRHIxi4qTyaUO/gZZowG+t+XQRn9yfzO/le9J
 PAali0h7wPbLl2nyG6uz136ZsYZfY/9QSnKgS3tG/GNr3PC57m/2pPxlEK1/9W+7s/xbykneDMlh
 8hufcYE3RtL6VxYfy9XM9K9FSvocSA4dJ2d/s8e9Zm4cpczZfrJUAb8T24kNkBziRy5CF7kfvdmV
 UuZ9d0JnYPZdif/qN7zz4K+JOgb4vjPNTL8OtOd4pVqkVUBnXrbTW1880WbyfdHqb6hOCH5IioIo
 C57U4uH1R5d/lsKv9WkLZyAzbnjTCMV2ELf0U88/3CTiyjy9LWl/5Bz5CpKD9zuaPZpOLPkiDT8X
 pNyvVm8d8XSHUgK2rw1z7TaLO1L3dYd8Gf6fnYc/1rdVzUD9lv0Llzk2Nb+n98gBneky+b6gMgXk
 VAgIASEgBITArUyAt43D8j+ATBaD0WIyBpiNJoMLTtF4YRs4gxEHZMTecJAxlCLsCQH7JbK7TIor
 wGAKwgZ0fBUlr+equwLekQ3j4oi+O8U7WZw6isfJg94d3mbZ2r18npex4QSNvbcJ/kW3nfthyri2
 hi54vbRgf3qZBrOObejXpX1wr47q1bO4mnVsU78ubZFj6TJo9vdpyLFlbBs69e0FiR+14EYGzd19
 eMO6mWqDgxYkeVefFfWipM94aVAC0ajhYz8+UajZBTLLJLuz+BGp/YnnTg0hejExMv9cnZFTm368
 sYmhS5vZRz3LFb8t+arlPN6ILgZwUKxTSQ37dWmDYoYurWdsrOWxI8k6Ft2vS6vgXncburRYsN+7
 yvKoLfZvjO02Lm7DObPtXO0p4zwVUaYqKVVnvNRIHXzzj0/4CVz+w1XOzv3rS+M2pnjzrClTxr20
 5FhueSa2cztGTv3nxxs/Ar3ZP2ZsXve2geG3N0z91/5LCq4O/d9/JRdxM3rfwpLEj7rxt9C230fb
 8rz9+T6KzuFLb9UkOqJaZFRNfpWxHkresT6J2ix85F5UiOk8DDsO7jxz0VeZP08e34HH5OM61OUC
 HR6aTLT2UKZmpn+tvFO751DjbZMeZc1AzXsXT53weMNQ/wL+x3n52USNJ/e7G5lh9Ts+3pK27D68
 S3tgytH9mxKosX91rNO1MkuK6MzxCrU0m9WZl/3zpdOpZ//WXhlv6+z3Zxq6t7d0bztu3Q+4zYKq
 3RZbp24Mv247vQ83zqOrBsetef/VLUTzXn12xtY0PZ7l7xbMqnxmehq+o5Eve76jezrFF0/90n9f
 PNH48TvZuAs3z9DhfJOMXLF+7qK35+7H7zqk18OD6IPNp4rLlxwUIGIckmbLV/PbdzgKShqTIyEg
 BISAEBACvycCeHyI2KxGaBcsJnOgWd2NmtUNipEUbBdnNGJLOBYe2MkB7tMKb++ADavZYondIuAF
 wXZOeN2kFNbgz41ozn485VV2fZNIw7sN7dKTTiQcs5Ltp2QsVrrGRFLe4Qcef2ZmzQk7P1qdODpk
 1PhHZiexcOFJtoxNtUa8erL/jKPLVyzunzFq/LhtJ5DzysnBM46uWp84Om7SlAEz9mc57BeWbV8x
 albKjHmLF/ev9uLEYX22hCfOWzS/P40aM+sQVh4V9kKm6v0GTUCPI0b3bxcZqHZatgvfiHQ+gy/F
 98XqJiinIGjh9iqDXw+fPvpCn9v5Ye/JS5a8ooCcvIA8a+Ch3fVHnaBuNR2UVzt6TI3ckWdTVh3f
 NrVw2uv1PzwRYMuoX2tEzZP9LxxdfmJxf/Oo8U32srrFVTXA+O2KFq1fD+099GTvkOoPPF5vZs1L
 Oz9KSRztHjX+jtlH3P0GXUK5EaMvtovUEQtNkU1qbZ3z+jrPyuzUgXUzDxTEhJ0uT95R8NPC7UsG
 v/6P6aNn3Je/sfvbK+bPXZ320aLJmQta91udU3Bq2Xd7LymQ1nS/hWGzkp6euzhx0qCEDyYsPsaS
 WEkqzIMoMOCvz7JcN/ylBbvTSi6pRw5HFjXqeWeYJzuwKhbuaRmlzfOJGoV6r1P4bZDEitTrmpm+
 1tMOf09U58BX/4JU02LctD3h7Ue2YvFDM4VFddk0d6Z35V30U/IBiCkNArUHFvLU/65wf/Dv+R2J
 SlanmpklXenM8Qq1sLYu35f2vIrOJHxN0/u28kiu6HjZmsDEhSs2jR805+1nXtyaVjwU2+n1nRbs
 nb/w+VhTYMt7eJHf/sH+/WJrcYHyPDV/QVqZzR986/zaJ8KU3FMZaev+swLSSVQV1sidOriRGg1o
 W8178yS1mrZv4aKYI9NfXL5i7Um+gaOaP9CVVmw5XVbHyONRk2bLV/7t+6rLpxAQAkJACAiB3yEB
 GCJhz2gz1A9QQbD/M0EYUJBlMLMDBIQCXMAnpAQ4OSgcpJVNmOD1gBiu8IpgtQXyvF4RNwFgRLsH
 29A/jmf9OfKT7TT9sUYRdULjaebWMzlVUxGI6akWtU2H1i3ZQp13jhnQDn4Q9cfN3544av2u4YO8
 Yzu+bw2eYia+0DuKKPbZv523f3J82yd49rzxmd6RyPnT+OXJnw5e+u3To7l8wqrXHq5tcoY+MGzN
 3oRXnu9dm5yhA0at+bpQoUNbNHoZE9fb548b0rx1G6ye7mrZEa60h75Cp2W7GNvqUd+aVZObs1G0
 Qke8l+YvTBrZpAiuCKiS9EGd8A/q+NUpGtnxMr6bTW9kxLY5V10xB7P/dBW703D8cA2i/MQX0tTJ
 KuftdQvz8ZVaXnmtRcJ20+KFh55qYj+0rtEWcuwcc0LFdXz+9rtGra8+5pXseKp2V8vMmDDWaWgl
 U5c/TqPl0zccGzWyCW1YvYL6zw3bo8HEQ37+wq0jm4Skbp3JTTmdIZHNp7+7flCOKdi5DRnQbhzf
 qYHI8y0sX/7XJ+oEUlydWbNWrE0+PaZJbPF48s4fTYId150PTH72+aNblwybOCD5jfXvdOBH0Z5U
 WLIER0ZI245t6Iss0PF9TXRbw9Z0Yub0jU1eaFMzadO8F08QXbwY0UEjEyJFcS2y4N5KfPGLqNVv
 zyv67/rBEwdsn7RiXlvz8WxV8DDXaBRecMJ3HNeocbea6F1JTfp6wphXoVhY/XAL+3feEaofZQfG
 S+NyyT8z70JacV/WCueoVyuuUaRHGPAvoDmvpd0JCp+qQcUFG29bP/5+3IhNXkw4viL+w51vdo5m
 DQydnf7kdOr71p9VJ58Y3/3fvHZgphbkvVsSy/9OuzXfWD4TP6vIapR34tPo4TNVKp1rV8HYC7es
 /TT+idUYyCH+UT+V+EJf3Oet/rI6tfuA4370zlwqpPrFg/e7gENTiEbLqqxRwW+/dBNyJgSEgBAQ
 AkLg90WAl/0GMuMNu8PBCdpgcEJYwN5vUCY4EIvVE1IJXtMsJBixkOSSKMa6BhYb8KZqIW4etTub
 dyba+/VuSqA2ExqGkynwsY40a+euqme20uDHGxAlh2DF/Gn7vu1LxtSx0BeNqHDfob3Usqd31W6q
 O3HCqCVTO1Pfx7w5FNiqVWdaXeTkBW2buhFsR2R1wsync111fWRVH8TDWMui00vJ+lJxsl22EysR
 Zd+BvdS3f7kuSgaodRSwZ7uJYpzB7OigtK0HZQcnLOPihv/0zcAssuMrMJ481KD1lNB1R4Jj7zAe
 P1Kr+xR/ocKy75CJWjp8k708ccLlvBMxaASSA97P5GMFZreEQJsR1L5vK27dkzqarIpRHTyK6Wge
 UKd+x1mNaNTOE3++3QqX5fmjWwSd+EaHfJu29dijPabjsMWDLw4bP2gUd9R51l+eHlGPj7AQ1EGE
 b6FzbKRn5RdYqyURvgq/FNbkSWvi40HBXKBdk+n2HzuPWv3NtA4lfsYWNFC1uIL9RPJeumuQ74vg
 /KhWTyf9heJeG8bL0pYcuSy+foOGrbqXzyz5ZlGIh9F55z/Ht4MlT6tWAZmJA1bv/fOlhK4LUnAB
 guKWkYnFx9nfPBl87ofJk5+Zc4Lih89IGdA7Jpj277nCwNR2dN+Ofz25dXFfo6+2Kf9aGJV6R5fu
 Qmteb7eKSiDq5r0TcB/2aea7pZrc2ZmOeH0zspK+AsPVQ+7zKihK7v9ATcihWr8gRSvTqihmkyms
 0aPubx7Nu3B4Wv9hnZbtdvxP8DsHaMb/4gYqPLSbf1/VPVMx3X5vS9rpOQ6u3bsRLT+S8Wqcxly5
 CDw3yrWc8wAuVPTb97Qt70JACAgBISAEfp8EoGxAsCT8c+/G/NkBApZKhC2mFbg4wOsBG0jDVMnt
 5rWm0WhCSFeIEwjMBDMniBE44wLqxnI3DV9Yvbvj6a3Br22Fu+rdvIgJbNdzUNJrr2I9Ov3taJwX
 Xj6Nx5Apm56PIYVMzuT9u9JCm0YQP+HGs+eYeo0pVT3EG4LqLEwIjIqh45d9Wfb9322lqM5mzyoV
 62pvKkBj/kmnF/8i6rEZbENimjSmA+W7KF+4pA/b6SisyOMn5QZS2XVPw2r2iIAij/d3RLvz8RS6
 4XiVhzOiRi2nTcsPdapjNyvVu3VvhOnF1HP7Tbbq7IVRd7XD8tC9ac3hos+a9xnfpMv6A1UuQxQq
 SNl0NAbfqcmYvP+2tNCcCFLN29m7uoIU8af/eXTSa5/MI5gSjezbKOTsAQ3y1ejb4iZyzl6Ke3i6
 +xlT5rkz32/+aMBr77Z9v4d6VQ8RRltCvrz1yamkDQkZdZ/r00xdsJoCqxBFRHot8z3thlShA2nn
 FVJ9IQqPfk1xo2uphb2Dysk4nBHRw/HN0/h+zab0kV0eKQwxa2YWz0I9YOspC/8skEy1IxtT1Sqt
 H1tm/ZMqa5nMQTS45DjvcL/Hn0noOeHouwNjfYJLyJUG5mla772VX19pXyVVPMfiRvxrlZKFikvw
 V1l2XkHhtbpyAQ82SGOwEnySpSaitNStVLUDH5F969f/oI7T/ljbC0XN9L5p8tT8BVkOfV3uxxud
 8Fr7YbfNdb9wL5oLq9m0RUui1FPHj2Ym0eh7a6K7kJi7GtPXxb+vrIMHqEZHteuic9+foP531fEf
 jN9x4ZLXOpdvOc/z0yr5LZbcgX515VAICAEhIASEwO+UAOQCgzvAyDoGVWKAPAB5ArZLbid2kcaW
 0m5+4Ki4YLeELeJUJQNvDMF+EKrXg6qbgEKi4lXmdYUbXL+PujIYcl+cZyXWINaz1UWb+xrB8oga
 Nu9JtOS9LYfzyJma9EXT8RPmny4x7Ii9uw/MVGZuTc6zZq1b+ddJaw7/oVUPOjDzb1uTbYo9efeq
 wYjr8nD70CsNueJeuLa6+Dh54nSeQrHNupfvwreM9PaEIEFHDt/2bdLtG3bXWZMYG/wkLF0K3uoF
 X9uyKRcr6pLkaohji8vh4C/EYibrpaoL5jTcQnQ5PzD27jw6ETFza808a5V1KxtNWhMUEopvylUt
 3N57SFo8mTrNahjZHDqGKu9tqZVHxtSkBk3H3zb/tMU3+HAMHpGF3n1r2uzd6SV9+o5iWvWNh/XO
 B1tHTO0Bi5ErMjm58y+tH5+2+Zy9Vs16f4iqhn4tRm9bmojKfwsXfV17Pp3nv39x1rB/J6XnWXP3
 b106bDuNaPOHIOVs8YAbt/0T0YpHP9iWU5S7+T/vTCOa1LY+AnQWF7BmfNVnzIBlJ3JIyVmz6K8L
 qc/ETtGamf61mnZAs1unr9yUaS089eP6Fz5Iie/VPMxkCgoI5BecgvyOD23/JIFoVtfYyyf3bN6P
 147NP6ZHaw7MNzuPmKQKIr4sLM/VQ2+mX/vac/TV06vlu16qWZ15BWH1fdnmaQn1UtrP25BZZE/d
 v7LPGho7QA12BL+I9TSiZ8syd7WnF02emneLVqar/X2dac2YufvT+FvevRoKh/heLY58vaLr+A78
 gyeq94eObHu2NTknL33JW4/MIcKvSU0s8FQN0pBn1KshWi23wX1ZieR3L1WilhQVAkJACAgBIfCb
 JYCm+E+dAAAgAElEQVTISnCLNsN1wQkdAgyVkGFAwCV2k1bFCCgi2C0aVk2slfB8OGHXZEQmVA+q
 uwO7StzEFNLhvj60PbFPXD1Pp+baTWE/M6lq5+bqP/sRTR5NmvpT3OvD5rzO17sOfmtpj2jz6UNY
 quI0Mm7wtvEZnV4bymYqWNLN/qz3PZGbRp/u/tpQrCyRhoyeN+2eSMcJPI/n8r5U9lizF19h9TM4
 6smeNOz1odWjNr3aamj5LkoVxiNVooVv37bQlztkcM7/DkyNMZEN238TXp7k4sWZpfgUT70LW3Sk
 OWtrhfzt7JC363V6vDmud+2fO7Zl+LTxTXolHtg2/s5Or0X7Jnu8TSBkEiiPiIIvzJtdM2Fijfcf
 /m/S1IC41+vPeb0+1x18dmmPS9DnqIOPrh6V92pj2971ielRAybeU9cziJL3sKajBjdOWF5neLto
 ZGoysfjIo0CrXq+N/WJo98e7e1oYO3Xp3Zbj3u9FC1G5b4EaQjzySzFdn5t/MGvUmEegd0IaMnLu
 3zvXpaIUHnD0ExPvIXPNe9Nmj4yeOKH6ci6AcJ+8L1hRZnGBqNZPvNtzxbDhvYbxdZo/76vmeLau
 mVmUX1yLm317QvT4VxI+4FpdB89Y1CuajzSTKuxNmvJMycWWk3PfeVRjYL4SYfxcv/RUcYdoZaKc
 9hwrbMp3kT/9m9Wel0kZ0JfityW/GnevWrHxkPRX6/Tiw67D505XPUxsZ48uI1re2LOYV0uRGSKH
 J2lD1vqdhlF0+R9vWNHYd/dnvDh+wItqc137z1jU3fLMLHruae9fgKhWz++bSq3VH3Vcz0HxtKLh
 7fy3ICflexg3Tr7dJ0p4h1PyEdu9XMvYz+7E0Yp/+yX1caSU3BWl8uVECAgBISAEhMCtSgB+DPBx
 GDLsZUgCisMJgQGP6fAQGzoH6Bf4k4O0upyIycQmS5ASDHarw2Qyu7DZg9uFOE1wns7JOb9+/crr
 jujNN9+cPXt2qWa37i11qn/itOacL3AGVwmPUA3iyxS0WXPz7EpQWERxZE9bXta5QsUSGBFVLbBM
 4QpOK+4FK4s8qzM42LvJ9LV1UUHv5S6ZMy8EWgLtkWFOUsw5RRQRzM+pbdbAPLsxKMxaPNlyFclp
 DT5fYAyuYvdUUQsY86zG4GDeZPrQuglT6dmEhxuXr1g+54pMss5lwTgmJDwyMrjsI+FrQ2TLy8ku
 dFrQYpj2d8fN5tqpSvUG1dj1onzKuXA2VzFVLx3pVTOzVN2i3Ew0a64SpdNsqcJaJ1ccmFYl7bzr
 2BSVmxeclcOHr962fgX7SXNSci5lW6lyE9fkqXm3aGbmXMjKVRRLSERUuW85J+OHTaeC/thBNQpT
 0oZ2H9CcN2c0LxnX+Z17Fh8c1MwzaM+7Opevkza939x391XQsn9F/+PkxJearu6Q+0HFMQ/8a8ix
 EBACQkAICIFfDYHOHpsd73iys7NzcnLMagoICEBUVezFgHdkwKMByVMOggCiJcFBeuKUv9St18Ds
 MnE0JcXE20ZDnQAZgX2mVSECMoQLmzs44VTNvtIohj3jXJAlWO/A/7t5G7lSz4N/DWzMwRFR/sbv
 pccUFBweVPpqUFhkA+/CqHTRCs8q7gV6gTC/9XEFXZi7tdbrB4ZjbCKmJih79OJa+Rcrbqp8+fLF
 yuegenHF4Q9cWDhm03tr67w+/6okB9S9IpPI2rcVj7DMQQWIypT0P4UQGFXhd3fFZiNq3lbWswSK
 FK1M/34pIDwKipyfka44sKtv+zo2VX5eYY0eXN1zZqfPD7u9C3ETNtYoT6zi0Wry1LxbNDMjaur2
 aC5IGjDlH3BGn9ymasKiMcuoz87bwxE3dtiBNvveKCU58Aid8PneG/fMtNX/7xXs842MClrWmpF9
 w4q3+yzYSo3alLEr0yoseUJACAgBISAEbjUC2LXBxZbyvF7EihFWS9hDWhUa4PKAdSXLEW54RCgG
 vHEBZLogRJAJVk5qDpvQcDlJP4NA0cZ9P6P2DazKsoqh8YIPxt/APqTp3wCBwP5jls76/HwOltq/
 vtGGNXk86Y3Q2as/bP9BSlzPkfvWDmsVRqlHC+a//Zr/5uWegQfXunv5pGlFDqoX4lM9VG5G5loN
 mi2e1Iyq3lH6+UPlWpHSQkAICAEhIAR+owQ4VJLbjT0d2HmBA7B6vRdUkUB9ys3uDshWfachPigc
 XwnuEMhhWYMN6Dl53n+jEH75Yfs0Qr/8SGQEQkCbQFjsxEGx2pd++dzA5h0eXYqX30hi7hkY43da
 fGiuFvtEn58zEVOrDv6BjYsblgMhIASEgBAQAr8LAtAjIM4ShAEDnGixOxxLBBAo1MRH8GhgGxaW
 GfByqoIECiJwqyo5sM4BNbwSx00gVpQ+962312VwQMnfSbJd2jPu65WpqtNtxVN2OuxiR1ExIrkq
 BISAEBACQkAICAEh8PMJwIdBNVtiuyRObKvCogOcIuAszYkFCBzjDVoIIw6w2QOrI5A8VfnoJiQl
 f+36FckFv6NFsqMgdc65hAtXVO04knut6vh2Bu/tJkkICAEhIASEgBAQAkJACNwIArxHtMmAXR3g
 Pw17JNU4Sd3SAb7ROEFYFSgfuGNWMBQnTyCm4hzVqqn44g09UK2Ug25oF7+KxhWbwxdW34TQodUQ
 OPYKyWRGQMqqJu1wQ1eoK5eFgBAQAkJACAgBISAEhMBVEICdEqsSICnAUsmjfVB9otlYiTeGUwO5
 qjs/wAGCjZqw2wPvHmdwQuKApb7ByOKHVwdxFf3doCKnktb369LWwK9BMzYetiE+aca2oVPfXpL4
 UTc1v99H2/LUvrOObRo6nEuOXLF+7qK35+4/i5L9xv0zGSFYkJT02VNf+vg0m0WVbxOZ5asj03bu
 hynjPL2/tGB/OnKQUnavHLliB0bin2yXdoxc+8+Pkz4yLGs7+0zuqbT1/Za1xbFh2aAZSTxspKyM
 Df2WtQ9e1dGw7KUFqWc91T1WS/uT/tVtzbQNl+y2Sz9MWeOpiDLp5Eqf8ekg7EQ2auPYj8/+jmy6
 PHDkXQgIASEgBISAEBACQuAmEkBQVjV5fR04aivslDzODmy/hORVPKiXVPkB5kpsuMSiA4sVaqFf
 6i3vh+gx03NHvpWy6rNtUztOe33YhycKHfYLy7avGDYr6em5ixMnDUr4YMLiY4W2jE21RryS1Gra
 voWLYo5Mf3H5irUnLznsmQkHDl9W9StUlL9h+9YLNidptalZnfIOP/D4MzNrTtj50erE0SGjxj8y
 Owkxach6ds/CXZll7Ksctp8W5i8ZnPSP6XfM6BN8PHr79NyGb6U89Nm2uI7TkoZ9eLbQdnFTrS2v
 nqw942ifFYtrZ4zaMW4vyw1VqlqUb797qXXSgt4tn+sdePyBz5+ZGTRhZ6/ViXeEjNrxyOzTxn5x
 E1BuxB3921UV5cMvdSNKv0JACAgBISAEhIAQuMUJqFtGu8yKqQiBlCBDsLrB4+bgRAwmE28MgX3g
 XIQ8BFlSgzLhukN1rDaqThCssPiFIQXetumNebFtWlVX7MH1OcKK3ekkdeeJ5cv/+kSdQIqrM2vW
 irXJp7vSGqKnEl/oG4Xdjv+yOrX7gOM8dNgFkdcuSDWL4jytNo8f1qh+aMuSLdR555gB7RAyvv64
 +dsTR63fNSaud/OH33I/zC2VT/O7bh1ZJ4QcZze1mRcb06q6yx5cQx224jyeji5GJvbsjRHGdv/b
 +a8+KWQv6K2vrHshIX/v4q6bnqoTfmjv37nH7gPaQUyoNW7+mcRRh5PGPNAmfjfd1aBjjN/OEuW7
 lhwhIASEgBAQAkJACAgBIXDNBBBpCZsRYwM43rYByURmt9lkdCoubPMAN2o2SWINg9pBsVu1x3tX
 jdSkKijYn/oXTFhzH1nVfcpz5YbQOTbS8xg+sFZLIoft0IG91Ld/dU850+33tqSd5erAc4CTRpvW
 Q7s1qltCahB92r5ve089fu9YaCXSd8xo07amus+xy3n8p1Xd9/oP27rv7F4K6und8cxYd2Lv8Xln
 P0WTkBzwfsbGjhCWALXH//j1aC60Kk72lVZQQDQPACFJCAgBISAEhIAQEAJC4PoTMJnhtoCn9NhD
 GnY72OlB3XHABb8GxHCFYAB7JewJx1fUbSAMTmSynZLXPYLdJK7/oK7YornU+jj5m4WjltOm5Zs6
 1Qk3Kyndug/CNsdqGwUeZ28cq97HQTF3NaavL/uazzp4gGp0xBm7O1g8OgfPEpxIq80wzeqFl09D
 m5Gy6fkYdGZyJu/flRba9Go20kr+ceGoDNrUZ1OnGuFmV0q3jzHssJjwxpTvG6AjffY3CXc1jCRq
 vOnhBUX7uvfZMa1L1PtVrGqPT6g9Gp3JqbvSgtDjRa6G71OSEBACQkAICAEhIASEgBC4MQRMBrfR
 5DLiAw7Q6AJuD6rCAb4MJsRhgte0Z8sHCBMQK0wIzFTGvYEdHuA0XSb3xgxWbRWagSMHtm/evWOD
 +lr3/Q/ni+AiHIJtsq2X0hfMeXUL0eV8jYilWFzX+0NHOjFz+tbknLz0JW89MocIrVkCqxHt/WDT
 4Rzr2SVvD0N1JIdDo03N6g2b9yRa8t6Ww3nkTE36oun4CfNPF6CFlO8+GvrhtmJBQG211JtDUbsw
 kTU/fcFX6rBtubH1+5Bz5swjyXn2rHU7/jrp3OGQQMgD1aoFh/fusDSe9nb6v/WRddUeD6s9pn3R
 dMeE+RcLPIqjk+dP53GIrLPvvjVt9u70Uv3JiRAQAkJACAgBISAEhIAQ+HkE3ORkuyUOo8RygmfT
 BqgaVD9oSAxI2NuB39RDNmNiOYH/Vy94NQ8ocLMSTHoW/uOVhSXdtflu5cgh9EynxxOR17X/6LEt
 /zFt/LiO7z8BP+OSUkQNLeaoVs/vm0qtXxs6kyiu56B4WtHw9mpBdbomDG4TP2vYnFneTNRq2mnI
 kLfLttkrcUX56hFNHk2a+lPc68PmvM69dR381tIe0TiwXvx+2daA9/+HM4uTxQjfCu+omsYOGZL8
 TKfP1WHXHj026B/TdozrNWDZttiMTgeGzjzAlWbd81kby26uApEgMHbePSMTdk9/v2B9UtxTcUnD
 5iRxma513loaF02U+2Q1GpY0tHrEpldr5+9dn5ge/cTEe7iAJCEgBISAEBACQkAICAEhcF0IYNEP
 gyXDoKGjYarEkoI3QcNgcCiebeJc2ANC4W0fWF6AmOFyOVQNBXG2WiM3Nzvx8+W+utft880335w9
 e3ap5ray6b9WsmdeyLUEhkeGBcLuP6eIIoJLmTZ5quRk/LDpVNAfO8SyU4GSNrT7gOYLN01swm4O
 eZdynKbAiDDVG8HbQdk2KfuoXnWnNed8gTO4Srhmv972ND7smbm5Fkt4JEbrsuc4KCKQh22z5+Y5
 lKCQiDBvHCyNmk57znm7Mzgw3FNFLaHkcQ6rKiQJASEgBISAEBACQkAICAENAp3b+GdmZ2fn5OSY
 1RQQEGAymSwWC96RAXcGj0cDykNMwMofLtETp0ytX7+BmWOuwkQJGgX+9IgQHIbVhcUrmzFBSGD9
 gxHxl6COYCMlvCtoDq0Q9n5QVRH+47jpx4FRNeEboCbIAMHa/ZsLkgZM+Uf88BmT21RNWDRmGfXZ
 eTtLDkhh1cr7KZRtM0+/ujk4IkqnU0/7Ou+BUeG+YRsDI3zyTlBgeJDvWKcimQMjosqWMYUFFoeL
 0qsn+UJACAgBISAEhIAQEAJC4JoJGCE04FE1ZAb2hIZoANFC3eeB3aXZA4LNlljJAG9c9nhgpwfU
 4W0RfGIGRAe2Y/r1p7Amjye9ETp79YftP0iJ6zly39phrVgHcbXpZ1a/2m6knBAQAkJACAgBISAE
 hIAQ+HUSQERWcptV2YAHqBSxkRKrF8gNUyXIDniHZGHEI234R7iLFDciGeFYjcLEKggIEpA1WJb4
 NabSehmMsHnn+5ZOfmPptY71Z1a/1m6lnhAQAkJACAgBISAEhIAQ+BUQcEGbYDGzhAA5ABGXoFow
 myATQCQojnOKE4MqHUBYMHJBFhfUoExQU7C24jeiePgV4JYhCAEhIASEgBAQAkJACAiB3ywB+DdA
 v2A0mgKMJgtisyJCKwdpdRsV7OjAuz/ABwKGSpwDbYMROgk3NpaG+wNX9DpH/BKTd1wqyOXtGcom
 3fysC7m2soWv/tyRmZm2P/3ntFC6LyVtzffHMh2lM3/Bs+s1Ho12lLwLabtSy9PTy78SBce5Q2lp
 hzLPncr99eC70phLX7flpu9Kzcy8qtvRoXPfVja/9AjkTAgIASEgBISAEBAC10oAAoDLZTSb4VRt
 gg4BNkxQPrCfA4dWYs9p1ixg8zjeS45fSCw0QKBgz2lc93hXX2v311ovY13ythRn+dq6+fPXbjt4
 Vcs1ooJ9c/fxTg1+yXr2p29ar//+YJlsvxKVO3SkDDh47IyW9FO5djRLa4xfs5xf5vUaj1Y7edln
 dp3cXp6eXr7fsModFnzb71+J7yWfTEz69o3d2Vf5fZZrpZIZejz18q/UvDX/dMKOr/6dcaVyfD1D
 576tbP7V9CVlhIAQEAJCQAgIASFwFQQ4GKjX58GjUoB4AEECooOjiFe3OIWAAGHBrTpVQ3KA7RIO
 TSZVBcEaCvaxvoqerk+RzI3J+x1Vq2dRfkrW999lm7v/4Z5GHJtUN//jz/cX1aueTvk//Pf7hOPm
 QQ/d0zyowqGYCk8WlglaFN6qdY93jyZbAlCRPccrrH8VF4N6uEdch2a0e9IYv3bBktzrNR6NdkxR
 Te4f06QhnT1c0h0f6eWXLlX6zHY2o3aHpxa0KJ17o8/0eOrlVzgep0IRUR3e6Jg9+wqiY6bOfVvZ
 /ApHIxeFgBAQAkJACAgBIVA5AqxJMBpZeGAhwadn4LhKZFIVC+z9ULZJT1EIE4jjiussV5QrU7bO
 dTuPbFM3eseZb9ej5/Q6sxs3q+vd1UA3v2fb6C92fLsQRi7f10ns0+yOCiUHW+bnA786k+A8dSHD
 TE5bXrUeKx+qq9aAmuP4Owlnky7ZkhxB0+9//NVm2O+NU076hmEbTibgyBE5v3v8yCbefPVi+TdH
 6r5VzxxyUlDzRf1ax3gH40g9uOrRQ9UG17y0/GReEoVN79D/1RZB5Dg4ZdWBM9ViOpr/O+okNxV/
 R++lPeqG0bl1G9bHX2iZ8njrGOPRuZ99t9bWcl7/1rFBpD/+8iPx5GiOhy/lZW4c+uXxBMJ0zF1D
 m8/rx+3rJ9121CpOHS2BXn75fi5s3vL566nOi+aVQ486M2w1x/bp/XBtLubM+f75hIML8f04Imbd
 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
 AElFTkSuQmCC
 
 --Apple-Mail-13--678945538--
Responsible changed from "nobody" to "jay" by jay@racket-lang.org at Thu, 20 Jan 2011 14:13:22 -0500
Reason>>> A commit by jay@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/87865cb1bd
State changed from "open" to "closed" by jay@racket-lang.org at Thu, 20 Jan 2011 14:13:22 -0500
Reason>>> A commit by jay@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/87865cb1bd
From: Jay McCarthy <jay.mccarthy@gmail.com>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: Robby Findler <robby@eecs.northwestern.edu>, bugs@racket-lang.org,
        nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11649: drracket highlights strange pieces when
 EOF is encountered during xml-read
Date: Thu, 20 Jan 2011 12:48:18 -0700

 2011/1/20 Matthias Felleisen <matthias@ccs.neu.edu>:
 >
 > While we're on this topic:
 >
 > I can't run read-xml a second time in the REPL once I have clicked EOF. W=
 ill this strange behavior go away?
 
 I don't know why it does that
 
 Jay
 
 >
 > ;; ---
 >
 > I saved two reports on my laptop this morning, also related to this stuff=
 , but different.
 >
 > Oh and THANKS A BUNCH for the savable reports. I was on-line but Eli's ma=
 chine acted up and I couldn't submit.
 >
 >
 >
 > On Jan 20, 2011, at 2:16 PM, Jay McCarthy wrote:
 >
 >> I fixed the problem in XML, but there is also a problem in the racket
 >> vm that makes Robby's test break.
 >>
 >> Here is something that shows the problem:
 >>
 >> #lang racket
 >> (require tests/eli-tester)
 >>
 >> (define (ppos p)
 >> =C2=A0(define-values (line col pos) (port-next-location p))
 >> =C2=A0pos)
 >>
 >> ; open-input-string is broken
 >> (define (the-test first? second?)
 >> =C2=A0(define is (open-input-string "abcdef"))
 >>
 >> =C2=A0(test #:failure-prefix (format "~a ~a" first? second?)
 >> =C2=A0 =C2=A0 =C2=A0 =C2=A0(test
 >> =C2=A0 =C2=A0 =C2=A0 =C2=A0 (when first? (port-count-lines! is))
 >> =C2=A0 =C2=A0 =C2=A0 =C2=A0 (ppos is) =3D> 1 (read-char is)
 >> =C2=A0 =C2=A0 =C2=A0 =C2=A0 (ppos is) =3D> 2 (read-char is)
 >> =C2=A0 =C2=A0 =C2=A0 =C2=A0 (ppos is) =3D> 3 (read-char is)
 >> =C2=A0 =C2=A0 =C2=A0 =C2=A0 (when second? (port-count-lines! is))
 >> =C2=A0 =C2=A0 =C2=A0 =C2=A0 (ppos is) =3D> 4 (read-char is)
 >> =C2=A0 =C2=A0 =C2=A0 =C2=A0 (ppos is) =3D> 5 (read-char is)
 >> =C2=A0 =C2=A0 =C2=A0 =C2=A0 (ppos is) =3D> 6 (read-char is))))
 >> (test (the-test #f #f)
 >> =C2=A0 =C2=A0 =C2=A0(the-test #t #f)
 >> =C2=A0 =C2=A0 =C2=A0(the-test #f #t)
 >> =C2=A0 =C2=A0 =C2=A0(the-test #t #t))
 >>
 >> Basically what is going on is that port-count-lines! resets the
 >> position count to 1 if it has not already been set before AND
 >> open-input-string seems to be creating a port that counts lines
 >> without being asked, but does not set the C struct field
 >> appropriately. Line 3383 of port.c shows the code that is misbehaving
 >> on the port-count-lines! side, but I think the real problem is
 >> probably in whatever makes open-input-string (which I could track
 >> down) not setting ip->count_lines when it does its work.
 >>
 >> Jay
 >>
 >>
 >>
 >> 2011/1/20 Robby Findler <robby@eecs.northwestern.edu>:
 >>> This is a bug in the xml reader. It appears to not be correctly
 >>> building source locations. In this case, it is claiming that the
 >>> source location of the eof is way before the actual eof that appeared
 >>> in the port. I think it is assuming that it starts reading at the
 >>> location 0 in any port it gets instead of starting with the location
 >>> that the port reports.
 >>>
 >>> Here's some code that shows the same thing, but without drracket. This
 >>> program prints out 7 and 1, but it should print out 7 and 7.
 >>>
 >>> #lang racket
 >>>
 >>> (require xml)
 >>>
 >>> (define p (open-input-string "abcdef"))
 >>> (for ([x (in-range 0 6)]) (read-char p))
 >>> (define-values (line col pos) (port-next-location p))
 >>> pos
 >>>
 >>> (define exn
 >>> =C2=A0(with-handlers ((exn:fail? values))
 >>> =C2=A0 =C2=A0(read-xml/element p)))
 >>>
 >>> (srcloc-position (car ((exn:srclocs-accessor exn) exn)))
 >>>
 >>>
 >>>
 >>> On Wed, Jan 19, 2011 at 10:28 AM, =C2=A0<matthias@ccs.neu.edu> wrote:
 >>>> A new problem report is waiting at
 >>>> =C2=A0http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D11649
 >>>>
 >>>> Reported by matthias for release: 5.0.99.6--2011-01-16(b7f9ee3/g)
 >>>>
 >>>> *** Description:
 >>>> run this program:
 >>>>
 >>>> #lang racket
 >>>>
 >>>> (require xml)
 >>>>
 >>>> (provide main)
 >>>>
 >>>> ;; -> Void
 >>>> ;; effect: read XML test case from
 >>>> (define (main)
 >>>> =C2=A0(define n
 >>>> =C2=A0 =C2=A0(with-handlers ((exn:fail?
 >>>> =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =
 (lambda (x)
 >>>> =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =
 =C2=A0 (printf "*** the input is ill-formatted ***\n")
 >>>> =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =
 =C2=A0 (raise x))))
 >>>> =C2=A0 =C2=A0 =C2=A0(read-xml/element)))
 >>>> =C2=A0n)
 >>>>
 >>>> (main)
 >>>>
 >>>> click EOF
 >>>>
 >>>> drracket highlights in pink everything from top left in REPL
 >>>> to the first two ** in the message
 >>>>
 >>>> it looks odd; i don't know whether the error is new or old
 >>>>
 >>>> [This does NOT happen with plain read so I do think it is an error.]
 >>>>
 >>>> (I'll send an image as a reply.)
 >>>>
 >>>> *** How to repeat:
 >>>>
 >>>>
 >>>> *** Environment:
 >>>> macosx "Darwin antarctica.ccs.neu.edu 10.6.0 Darwin Kernel Version 10.=
 6.0: Wed Nov 10 18:13:17 PST 2010; root:xnu-1504.9.26~3/RELEASE_I386 i386" =
 (i386-macosx/3m) (get-display-depth) =3D 32
 >>>> Human Language: english
 >>>> (current-memory-use) 268202228
 >>>>
 >>>> Collections:
 >>>> ("/Users/matthias/0Unison/collects/"
 >>>> =C2=A0(".DS_Store" "compiled" "date" "finance" "info-domain" "info.ss"=
  "pdf.ss~" "session" "short" "testing" "tll-collects" "utils" "web"))
 >>>> ("/Users/matthias/Library/Racket/5.0.99.6/collects"
 >>>> =C2=A0(non-existent-path))
 >>>> ("/Users/matthias/plt/collects"
 >>>> =C2=A0(".gitignore" "2htdp" "afm" "algol60" "at-exp" "browser" "combin=
 ator-parser" "compiler" "config" "data" "datalog" "defaults" "deinprogramm"=
  "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "f=
 ile" "framework" "frtime" "games" "graphics" "gui-debugger" "guibuilder" "h=
 andin-client" "handin-server" "help" "hierlist" "honu" "htdp" "html" "icons=
 " "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "meta" "mr=
 ed" "mrlib" "mysterx" "mz" "mzcom" "mzlib" "mzscheme" "net" "openssl" "pars=
 er-tools" "picturing-programs" "plai" "planet" "plot" "preprocessor" "profi=
 le" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raclog" "raco" "racunit" "=
 reader" "readline" "redex" "repo-time-stamp" "repos-time-stamp" "rnrs" "s-e=
 xp" "schelog" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "se=
 tup" "sgl" "sirmail" "slatex" "slideshow" "srfi" "srpersist" "stepper" "str=
 ing-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-reco=
 very" "test-engine" "tes!
 >>>> =C2=A0ts" "tex2page" "texpict" "tool" "trace" "typed" "typed-scheme" "=
 unstable" "version" "waterworld" "web-server" "wxme" "xml"))
 >>>>
 >>>> Computer Language: (("Determine language from source") (#(#t print mix=
 ed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t))
 >>>>
 >>>>
 >>>
 >>
 >>
 >>
 >> --
 >> Jay McCarthy <jay@cs.byu.edu>
 >> Assistant Professor / Brigham Young University
 >> http://faculty.cs.byu.edu/~jay
 >>
 >> "The glory of God is Intelligence" - D&C 93
 >
 >
 
 
 
 --=20
 Jay McCarthy <jay@cs.byu.edu>
 Assistant Professor / Brigham Young University
 http://faculty.cs.byu.edu/~jay
 
 "The glory of God is Intelligence" - D&C 93
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Jay McCarthy <jay.mccarthy@gmail.com>
Cc: Robby Findler <robby@eecs.northwestern.edu>, bugs@racket-lang.org,
        nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11649: drracket highlights strange pieces when EOF is encountered during xml-read
Date: Thu, 20 Jan 2011 14:39:26 -0500

 While we're on this topic:=20
 
 I can't run read-xml a second time in the REPL once I have clicked EOF. =
 Will this strange behavior go away?=20
 
 ;; ---=20
 
 I saved two reports on my laptop this morning, also related to this =
 stuff, but different.=20
 
 Oh and THANKS A BUNCH for the savable reports. I was on-line but Eli's =
 machine acted up and I couldn't submit.=20
 
 
 
 On Jan 20, 2011, at 2:16 PM, Jay McCarthy wrote:
 
 > I fixed the problem in XML, but there is also a problem in the racket
 > vm that makes Robby's test break.
 >=20
 > Here is something that shows the problem:
 >=20
 > #lang racket
 > (require tests/eli-tester)
 >=20
 > (define (ppos p)
 >  (define-values (line col pos) (port-next-location p))
 >  pos)
 >=20
 > ; open-input-string is broken
 > (define (the-test first? second?)
 >  (define is (open-input-string "abcdef"))
 >=20
 >  (test #:failure-prefix (format "~a ~a" first? second?)
 >        (test
 >         (when first? (port-count-lines! is))
 >         (ppos is) =3D> 1 (read-char is)
 >         (ppos is) =3D> 2 (read-char is)
 >         (ppos is) =3D> 3 (read-char is)
 >         (when second? (port-count-lines! is))
 >         (ppos is) =3D> 4 (read-char is)
 >         (ppos is) =3D> 5 (read-char is)
 >         (ppos is) =3D> 6 (read-char is))))
 > (test (the-test #f #f)
 >      (the-test #t #f)
 >      (the-test #f #t)
 >      (the-test #t #t))
 >=20
 > Basically what is going on is that port-count-lines! resets the
 > position count to 1 if it has not already been set before AND
 > open-input-string seems to be creating a port that counts lines
 > without being asked, but does not set the C struct field
 > appropriately. Line 3383 of port.c shows the code that is misbehaving
 > on the port-count-lines! side, but I think the real problem is
 > probably in whatever makes open-input-string (which I could track
 > down) not setting ip->count_lines when it does its work.
 >=20
 > Jay
 >=20
 >=20
 >=20
 > 2011/1/20 Robby Findler <robby@eecs.northwestern.edu>:
 >> This is a bug in the xml reader. It appears to not be correctly
 >> building source locations. In this case, it is claiming that the
 >> source location of the eof is way before the actual eof that appeared
 >> in the port. I think it is assuming that it starts reading at the
 >> location 0 in any port it gets instead of starting with the location
 >> that the port reports.
 >>=20
 >> Here's some code that shows the same thing, but without drracket. =
 This
 >> program prints out 7 and 1, but it should print out 7 and 7.
 >>=20
 >> #lang racket
 >>=20
 >> (require xml)
 >>=20
 >> (define p (open-input-string "abcdef"))
 >> (for ([x (in-range 0 6)]) (read-char p))
 >> (define-values (line col pos) (port-next-location p))
 >> pos
 >>=20
 >> (define exn
 >>  (with-handlers ((exn:fail? values))
 >>    (read-xml/element p)))
 >>=20
 >> (srcloc-position (car ((exn:srclocs-accessor exn) exn)))
 >>=20
 >>=20
 >>=20
 >> On Wed, Jan 19, 2011 at 10:28 AM,  <matthias@ccs.neu.edu> wrote:
 >>> A new problem report is waiting at
 >>>  http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D11649
 >>>=20
 >>> Reported by matthias for release: 5.0.99.6--2011-01-16(b7f9ee3/g)
 >>>=20
 >>> *** Description:
 >>> run this program:
 >>>=20
 >>> #lang racket
 >>>=20
 >>> (require xml)
 >>>=20
 >>> (provide main)
 >>>=20
 >>> ;; -> Void
 >>> ;; effect: read XML test case from
 >>> (define (main)
 >>>  (define n
 >>>    (with-handlers ((exn:fail?
 >>>                     (lambda (x)
 >>>                       (printf "*** the input is ill-formatted =
 ***\n")
 >>>                       (raise x))))
 >>>      (read-xml/element)))
 >>>  n)
 >>>=20
 >>> (main)
 >>>=20
 >>> click EOF
 >>>=20
 >>> drracket highlights in pink everything from top left in REPL
 >>> to the first two ** in the message
 >>>=20
 >>> it looks odd; i don't know whether the error is new or old
 >>>=20
 >>> [This does NOT happen with plain read so I do think it is an error.]
 >>>=20
 >>> (I'll send an image as a reply.)
 >>>=20
 >>> *** How to repeat:
 >>>=20
 >>>=20
 >>> *** Environment:
 >>> macosx "Darwin antarctica.ccs.neu.edu 10.6.0 Darwin Kernel Version =
 10.6.0: Wed Nov 10 18:13:17 PST 2010; root:xnu-1504.9.26~3/RELEASE_I386 =
 i386" (i386-macosx/3m) (get-display-depth) =3D 32
 >>> Human Language: english
 >>> (current-memory-use) 268202228
 >>>=20
 >>> Collections:
 >>> ("/Users/matthias/0Unison/collects/"
 >>>  (".DS_Store" "compiled" "date" "finance" "info-domain" "info.ss" =
 "pdf.ss~" "session" "short" "testing" "tll-collects" "utils" "web"))
 >>> ("/Users/matthias/Library/Racket/5.0.99.6/collects"
 >>>  (non-existent-path))
 >>> ("/Users/matthias/plt/collects"
 >>>  (".gitignore" "2htdp" "afm" "algol60" "at-exp" "browser" =
 "combinator-parser" "compiler" "config" "data" "datalog" "defaults" =
 "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" =
 "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" =
 "gui-debugger" "guibuilder" "handin-client" "handin-server" "help" =
 "hierlist" "honu" "htdp" "html" "icons" "info-domain" "lang" "launcher" =
 "lazy" "macro-debugger" "make" "meta" "mred" "mrlib" "mysterx" "mz" =
 "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" =
 "picturing-programs" "plai" "planet" "plot" "preprocessor" "profile" =
 "r5rs" "r6rs" "racket" "racklog" "rackunit" "raclog" "raco" "racunit" =
 "reader" "readline" "redex" "repo-time-stamp" "repos-time-stamp" "rnrs" =
 "s-exp" "schelog" "scheme" "schemeunit" "scribble" "scribblings" =
 "scriblib" "setup" "sgl" "sirmail" "slatex" "slideshow" "srfi" =
 "srpersist" "stepper" "string-constants" "swindle" "syntax" =
 "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tes!
 >>>  ts" "tex2page" "texpict" "tool" "trace" "typed" "typed-scheme" =
 "unstable" "version" "waterworld" "web-server" "wxme" "xml"))
 >>>=20
 >>> Computer Language: (("Determine language from source") (#(#t print =
 mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t))
 >>>=20
 >>>=20
 >>=20
 >=20
 >=20
 >=20
 > --=20
 > Jay McCarthy <jay@cs.byu.edu>
 > Assistant Professor / Brigham Young University
 > http://faculty.cs.byu.edu/~jay
 >=20
 > "The glory of God is Intelligence" - D&C 93
 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Jay McCarthy <jay.mccarthy@gmail.com>
Cc: Matthias Felleisen <matthias@ccs.neu.edu>, bugs@racket-lang.org,
        nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11649: drracket highlights strange pieces when
 EOF is encountered during xml-read
Date: Thu, 20 Jan 2011 14:01:31 -0600

 I think that the xml reader does not consume the eof; it just keeps
 seeing it there.
 
 The REPL port is unlike file ports in that eof can appear and then you
 can read the eof and then other things can be "behind" the eof. Ie it
 isn't really an "end" of anything.
 
 (This is like other terminals too, if I understand correctly.)
 
 But I'm not sure if there are other strange things going on, since
 when I use read-char to get past the eof, read-xml still says strange
 things.
 
 Robby
 
 On Thu, Jan 20, 2011 at 1:48 PM, Jay McCarthy <jay.mccarthy@gmail.com> wrot=
 e:
 > 2011/1/20 Matthias Felleisen <matthias@ccs.neu.edu>:
 >>
 >> While we're on this topic:
 >>
 >> I can't run read-xml a second time in the REPL once I have clicked EOF. =
 Will this strange behavior go away?
 >
 > I don't know why it does that
 >
 > Jay
 >
 >>
 >> ;; ---
 >>
 >> I saved two reports on my laptop this morning, also related to this stuf=
 f, but different.
 >>
 >> Oh and THANKS A BUNCH for the savable reports. I was on-line but Eli's m=
 achine acted up and I couldn't submit.
 >>
 >>
 >>
 >> On Jan 20, 2011, at 2:16 PM, Jay McCarthy wrote:
 >>
 >>> I fixed the problem in XML, but there is also a problem in the racket
 >>> vm that makes Robby's test break.
 >>>
 >>> Here is something that shows the problem:
 >>>
 >>> #lang racket
 >>> (require tests/eli-tester)
 >>>
 >>> (define (ppos p)
 >>> =C2=A0(define-values (line col pos) (port-next-location p))
 >>> =C2=A0pos)
 >>>
 >>> ; open-input-string is broken
 >>> (define (the-test first? second?)
 >>> =C2=A0(define is (open-input-string "abcdef"))
 >>>
 >>> =C2=A0(test #:failure-prefix (format "~a ~a" first? second?)
 >>> =C2=A0 =C2=A0 =C2=A0 =C2=A0(test
 >>> =C2=A0 =C2=A0 =C2=A0 =C2=A0 (when first? (port-count-lines! is))
 >>> =C2=A0 =C2=A0 =C2=A0 =C2=A0 (ppos is) =3D> 1 (read-char is)
 >>> =C2=A0 =C2=A0 =C2=A0 =C2=A0 (ppos is) =3D> 2 (read-char is)
 >>> =C2=A0 =C2=A0 =C2=A0 =C2=A0 (ppos is) =3D> 3 (read-char is)
 >>> =C2=A0 =C2=A0 =C2=A0 =C2=A0 (when second? (port-count-lines! is))
 >>> =C2=A0 =C2=A0 =C2=A0 =C2=A0 (ppos is) =3D> 4 (read-char is)
 >>> =C2=A0 =C2=A0 =C2=A0 =C2=A0 (ppos is) =3D> 5 (read-char is)
 >>> =C2=A0 =C2=A0 =C2=A0 =C2=A0 (ppos is) =3D> 6 (read-char is))))
 >>> (test (the-test #f #f)
 >>> =C2=A0 =C2=A0 =C2=A0(the-test #t #f)
 >>> =C2=A0 =C2=A0 =C2=A0(the-test #f #t)
 >>> =C2=A0 =C2=A0 =C2=A0(the-test #t #t))
 >>>
 >>> Basically what is going on is that port-count-lines! resets the
 >>> position count to 1 if it has not already been set before AND
 >>> open-input-string seems to be creating a port that counts lines
 >>> without being asked, but does not set the C struct field
 >>> appropriately. Line 3383 of port.c shows the code that is misbehaving
 >>> on the port-count-lines! side, but I think the real problem is
 >>> probably in whatever makes open-input-string (which I could track
 >>> down) not setting ip->count_lines when it does its work.
 >>>
 >>> Jay
 >>>
 >>>
 >>>
 >>> 2011/1/20 Robby Findler <robby@eecs.northwestern.edu>:
 >>>> This is a bug in the xml reader. It appears to not be correctly
 >>>> building source locations. In this case, it is claiming that the
 >>>> source location of the eof is way before the actual eof that appeared
 >>>> in the port. I think it is assuming that it starts reading at the
 >>>> location 0 in any port it gets instead of starting with the location
 >>>> that the port reports.
 >>>>
 >>>> Here's some code that shows the same thing, but without drracket. This
 >>>> program prints out 7 and 1, but it should print out 7 and 7.
 >>>>
 >>>> #lang racket
 >>>>
 >>>> (require xml)
 >>>>
 >>>> (define p (open-input-string "abcdef"))
 >>>> (for ([x (in-range 0 6)]) (read-char p))
 >>>> (define-values (line col pos) (port-next-location p))
 >>>> pos
 >>>>
 >>>> (define exn
 >>>> =C2=A0(with-handlers ((exn:fail? values))
 >>>> =C2=A0 =C2=A0(read-xml/element p)))
 >>>>
 >>>> (srcloc-position (car ((exn:srclocs-accessor exn) exn)))
 >>>>
 >>>>
 >>>>
 >>>> On Wed, Jan 19, 2011 at 10:28 AM, =C2=A0<matthias@ccs.neu.edu> wrote:
 >>>>> A new problem report is waiting at
 >>>>> =C2=A0http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D11649
 >>>>>
 >>>>> Reported by matthias for release: 5.0.99.6--2011-01-16(b7f9ee3/g)
 >>>>>
 >>>>> *** Description:
 >>>>> run this program:
 >>>>>
 >>>>> #lang racket
 >>>>>
 >>>>> (require xml)
 >>>>>
 >>>>> (provide main)
 >>>>>
 >>>>> ;; -> Void
 >>>>> ;; effect: read XML test case from
 >>>>> (define (main)
 >>>>> =C2=A0(define n
 >>>>> =C2=A0 =C2=A0(with-handlers ((exn:fail?
 >>>>> =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=
  (lambda (x)
 >>>>> =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=
  =C2=A0 (printf "*** the input is ill-formatted ***\n")
 >>>>> =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0=
  =C2=A0 (raise x))))
 >>>>> =C2=A0 =C2=A0 =C2=A0(read-xml/element)))
 >>>>> =C2=A0n)
 >>>>>
 >>>>> (main)
 >>>>>
 >>>>> click EOF
 >>>>>
 >>>>> drracket highlights in pink everything from top left in REPL
 >>>>> to the first two ** in the message
 >>>>>
 >>>>> it looks odd; i don't know whether the error is new or old
 >>>>>
 >>>>> [This does NOT happen with plain read so I do think it is an error.]
 >>>>>
 >>>>> (I'll send an image as a reply.)
 >>>>>
 >>>>> *** How to repeat:
 >>>>>
 >>>>>
 >>>>> *** Environment:
 >>>>> macosx "Darwin antarctica.ccs.neu.edu 10.6.0 Darwin Kernel Version 10=
 .6.0: Wed Nov 10 18:13:17 PST 2010; root:xnu-1504.9.26~3/RELEASE_I386 i386"=
  (i386-macosx/3m) (get-display-depth) =3D 32
 >>>>> Human Language: english
 >>>>> (current-memory-use) 268202228
 >>>>>
 >>>>> Collections:
 >>>>> ("/Users/matthias/0Unison/collects/"
 >>>>> =C2=A0(".DS_Store" "compiled" "date" "finance" "info-domain" "info.ss=
 " "pdf.ss~" "session" "short" "testing" "tll-collects" "utils" "web"))
 >>>>> ("/Users/matthias/Library/Racket/5.0.99.6/collects"
 >>>>> =C2=A0(non-existent-path))
 >>>>> ("/Users/matthias/plt/collects"
 >>>>> =C2=A0(".gitignore" "2htdp" "afm" "algol60" "at-exp" "browser" "combi=
 nator-parser" "compiler" "config" "data" "datalog" "defaults" "deinprogramm=
 " "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "=
 file" "framework" "frtime" "games" "graphics" "gui-debugger" "guibuilder" "=
 handin-client" "handin-server" "help" "hierlist" "honu" "htdp" "html" "icon=
 s" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "meta" "m=
 red" "mrlib" "mysterx" "mz" "mzcom" "mzlib" "mzscheme" "net" "openssl" "par=
 ser-tools" "picturing-programs" "plai" "planet" "plot" "preprocessor" "prof=
 ile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raclog" "raco" "racunit" =
 "reader" "readline" "redex" "repo-time-stamp" "repos-time-stamp" "rnrs" "s-=
 exp" "schelog" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "s=
 etup" "sgl" "sirmail" "slatex" "slideshow" "srfi" "srpersist" "stepper" "st=
 ring-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-rec=
 overy" "test-engine" "tes!
 >>>>> =C2=A0ts" "tex2page" "texpict" "tool" "trace" "typed" "typed-scheme" =
 "unstable" "version" "waterworld" "web-server" "wxme" "xml"))
 >>>>>
 >>>>> Computer Language: (("Determine language from source") (#(#t print mi=
 xed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t))
 >>>>>
 >>>>>
 >>>>
 >>>
 >>>
 >>>
 >>> --
 >>> Jay McCarthy <jay@cs.byu.edu>
 >>> Assistant Professor / Brigham Young University
 >>> http://faculty.cs.byu.edu/~jay
 >>>
 >>> "The glory of God is Intelligence" - D&C 93
 >>
 >>
 >
 >
 >
 > --
 > Jay McCarthy <jay@cs.byu.edu>
 > Assistant Professor / Brigham Young University
 > http://faculty.cs.byu.edu/~jay
 >
 > "The glory of God is Intelligence" - D&C 93
 >
From: Jay McCarthy <jay.mccarthy@gmail.com>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: matthias@ccs.neu.edu, bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11649: drracket highlights strange pieces when
 EOF is encountered during xml-read
Date: Thu, 20 Jan 2011 12:16:23 -0700

 I fixed the problem in XML, but there is also a problem in the racket
 vm that makes Robby's test break.
 
 Here is something that shows the problem:
 
 #lang racket
 (require tests/eli-tester)
 
 (define (ppos p)
   (define-values (line col pos) (port-next-location p))
   pos)
 
 ; open-input-string is broken
 (define (the-test first? second?)
   (define is (open-input-string "abcdef"))
 
   (test #:failure-prefix (format "~a ~a" first? second?)
         (test
          (when first? (port-count-lines! is))
          (ppos is) =3D> 1 (read-char is)
          (ppos is) =3D> 2 (read-char is)
          (ppos is) =3D> 3 (read-char is)
          (when second? (port-count-lines! is))
          (ppos is) =3D> 4 (read-char is)
          (ppos is) =3D> 5 (read-char is)
          (ppos is) =3D> 6 (read-char is))))
 (test (the-test #f #f)
       (the-test #t #f)
       (the-test #f #t)
       (the-test #t #t))
 
 Basically what is going on is that port-count-lines! resets the
 position count to 1 if it has not already been set before AND
 open-input-string seems to be creating a port that counts lines
 without being asked, but does not set the C struct field
 appropriately. Line 3383 of port.c shows the code that is misbehaving
 on the port-count-lines! side, but I think the real problem is
 probably in whatever makes open-input-string (which I could track
 down) not setting ip->count_lines when it does its work.
 
 Jay
 
 
 
 2011/1/20 Robby Findler <robby@eecs.northwestern.edu>:
 > This is a bug in the xml reader. It appears to not be correctly
 > building source locations. In this case, it is claiming that the
 > source location of the eof is way before the actual eof that appeared
 > in the port. I think it is assuming that it starts reading at the
 > location 0 in any port it gets instead of starting with the location
 > that the port reports.
 >
 > Here's some code that shows the same thing, but without drracket. This
 > program prints out 7 and 1, but it should print out 7 and 7.
 >
 > #lang racket
 >
 > (require xml)
 >
 > (define p (open-input-string "abcdef"))
 > (for ([x (in-range 0 6)]) (read-char p))
 > (define-values (line col pos) (port-next-location p))
 > pos
 >
 > (define exn
 > =C2=A0(with-handlers ((exn:fail? values))
 > =C2=A0 =C2=A0(read-xml/element p)))
 >
 > (srcloc-position (car ((exn:srclocs-accessor exn) exn)))
 >
 >
 >
 > On Wed, Jan 19, 2011 at 10:28 AM, =C2=A0<matthias@ccs.neu.edu> wrote:
 >> A new problem report is waiting at
 >> =C2=A0http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D11649
 >>
 >> Reported by matthias for release: 5.0.99.6--2011-01-16(b7f9ee3/g)
 >>
 >> *** Description:
 >> run this program:
 >>
 >> #lang racket
 >>
 >> (require xml)
 >>
 >> (provide main)
 >>
 >> ;; -> Void
 >> ;; effect: read XML test case from
 >> (define (main)
 >> =C2=A0(define n
 >> =C2=A0 =C2=A0(with-handlers ((exn:fail?
 >> =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 (l=
 ambda (x)
 >> =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =
 =C2=A0 (printf "*** the input is ill-formatted ***\n")
 >> =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =
 =C2=A0 (raise x))))
 >> =C2=A0 =C2=A0 =C2=A0(read-xml/element)))
 >> =C2=A0n)
 >>
 >> (main)
 >>
 >> click EOF
 >>
 >> drracket highlights in pink everything from top left in REPL
 >> to the first two ** in the message
 >>
 >> it looks odd; i don't know whether the error is new or old
 >>
 >> [This does NOT happen with plain read so I do think it is an error.]
 >>
 >> (I'll send an image as a reply.)
 >>
 >> *** How to repeat:
 >>
 >>
 >> *** Environment:
 >> macosx "Darwin antarctica.ccs.neu.edu 10.6.0 Darwin Kernel Version 10.6.=
 0: Wed Nov 10 18:13:17 PST 2010; root:xnu-1504.9.26~3/RELEASE_I386 i386" (i=
 386-macosx/3m) (get-display-depth) =3D 32
 >> Human Language: english
 >> (current-memory-use) 268202228
 >>
 >> Collections:
 >> ("/Users/matthias/0Unison/collects/"
 >> =C2=A0(".DS_Store" "compiled" "date" "finance" "info-domain" "info.ss" "=
 pdf.ss~" "session" "short" "testing" "tll-collects" "utils" "web"))
 >> ("/Users/matthias/Library/Racket/5.0.99.6/collects"
 >> =C2=A0(non-existent-path))
 >> ("/Users/matthias/plt/collects"
 >> =C2=A0(".gitignore" "2htdp" "afm" "algol60" "at-exp" "browser" "combinat=
 or-parser" "compiler" "config" "data" "datalog" "defaults" "deinprogramm" "=
 drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "fil=
 e" "framework" "frtime" "games" "graphics" "gui-debugger" "guibuilder" "han=
 din-client" "handin-server" "help" "hierlist" "honu" "htdp" "html" "icons" =
 "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "meta" "mred=
 " "mrlib" "mysterx" "mz" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser=
 -tools" "picturing-programs" "plai" "planet" "plot" "preprocessor" "profile=
 " "r5rs" "r6rs" "racket" "racklog" "rackunit" "raclog" "raco" "racunit" "re=
 ader" "readline" "redex" "repo-time-stamp" "repos-time-stamp" "rnrs" "s-exp=
 " "schelog" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setu=
 p" "sgl" "sirmail" "slatex" "slideshow" "srfi" "srpersist" "stepper" "strin=
 g-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recove=
 ry" "test-engine" "tes!
 >> =C2=A0ts" "tex2page" "texpict" "tool" "trace" "typed" "typed-scheme" "un=
 stable" "version" "waterworld" "web-server" "wxme" "xml"))
 >>
 >> Computer Language: (("Determine language from source") (#(#t print mixed=
 -fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t))
 >>
 >>
 >
 
 
 
 --=20
 Jay McCarthy <jay@cs.byu.edu>
 Assistant Professor / Brigham Young University
 http://faculty.cs.byu.edu/~jay
 
 "The glory of God is Intelligence" - D&C 93
From: Robby Findler <robby@eecs.northwestern.edu>
To: matthias@ccs.neu.edu, bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11649: drracket highlights strange pieces when
 EOF is encountered during xml-read
Date: Thu, 20 Jan 2011 05:23:05 -0600

 This is a bug in the xml reader. It appears to not be correctly
 building source locations. In this case, it is claiming that the
 source location of the eof is way before the actual eof that appeared
 in the port. I think it is assuming that it starts reading at the
 location 0 in any port it gets instead of starting with the location
 that the port reports.
 
 Here's some code that shows the same thing, but without drracket. This
 program prints out 7 and 1, but it should print out 7 and 7.
 
 #lang racket
 
 (require xml)
 
 (define p (open-input-string "abcdef"))
 (for ([x (in-range 0 6)]) (read-char p))
 (define-values (line col pos) (port-next-location p))
 pos
 
 (define exn
   (with-handlers ((exn:fail? values))
     (read-xml/element p)))
 
 (srcloc-position (car ((exn:srclocs-accessor exn) exn)))
 
 
 
 On Wed, Jan 19, 2011 at 10:28 AM,  <matthias@ccs.neu.edu> wrote:
 > A new problem report is waiting at
 > =C2=A0http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D11649
 >
 > Reported by matthias for release: 5.0.99.6--2011-01-16(b7f9ee3/g)
 >
 > *** Description:
 > run this program:
 >
 > #lang racket
 >
 > (require xml)
 >
 > (provide main)
 >
 > ;; -> Void
 > ;; effect: read XML test case from
 > (define (main)
 > =C2=A0(define n
 > =C2=A0 =C2=A0(with-handlers ((exn:fail?
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 (la=
 mbda (x)
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
 =A0 (printf "*** the input is ill-formatted ***\n")
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
 =A0 (raise x))))
 > =C2=A0 =C2=A0 =C2=A0(read-xml/element)))
 > =C2=A0n)
 >
 > (main)
 >
 > click EOF
 >
 > drracket highlights in pink everything from top left in REPL
 > to the first two ** in the message
 >
 > it looks odd; i don't know whether the error is new or old
 >
 > [This does NOT happen with plain read so I do think it is an error.]
 >
 > (I'll send an image as a reply.)
 >
 > *** How to repeat:
 >
 >
 > *** Environment:
 > macosx "Darwin antarctica.ccs.neu.edu 10.6.0 Darwin Kernel Version 10.6.0=
 : Wed Nov 10 18:13:17 PST 2010; root:xnu-1504.9.26~3/RELEASE_I386 i386" (i3=
 86-macosx/3m) (get-display-depth) =3D 32
 > Human Language: english
 > (current-memory-use) 268202228
 >
 > Collections:
 > ("/Users/matthias/0Unison/collects/"
 > =C2=A0(".DS_Store" "compiled" "date" "finance" "info-domain" "info.ss" "p=
 df.ss~" "session" "short" "testing" "tll-collects" "utils" "web"))
 > ("/Users/matthias/Library/Racket/5.0.99.6/collects"
 > =C2=A0(non-existent-path))
 > ("/Users/matthias/plt/collects"
 > =C2=A0(".gitignore" "2htdp" "afm" "algol60" "at-exp" "browser" "combinato=
 r-parser" "compiler" "config" "data" "datalog" "defaults" "deinprogramm" "d=
 rracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file=
 " "framework" "frtime" "games" "graphics" "gui-debugger" "guibuilder" "hand=
 in-client" "handin-server" "help" "hierlist" "honu" "htdp" "html" "icons" "=
 info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "meta" "mred"=
  "mrlib" "mysterx" "mz" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-=
 tools" "picturing-programs" "plai" "planet" "plot" "preprocessor" "profile"=
  "r5rs" "r6rs" "racket" "racklog" "rackunit" "raclog" "raco" "racunit" "rea=
 der" "readline" "redex" "repo-time-stamp" "repos-time-stamp" "rnrs" "s-exp"=
  "schelog" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup=
 " "sgl" "sirmail" "slatex" "slideshow" "srfi" "srpersist" "stepper" "string=
 -constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recover=
 y" "test-engine" "tes!
 > =C2=A0ts" "tex2page" "texpict" "tool" "trace" "typed" "typed-scheme" "uns=
 table" "version" "waterworld" "web-server" "wxme" "xml"))
 >
 > Computer Language: (("Determine language from source") (#(#t print mixed-=
 fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t))
 >
 >
From: Robby Findler <robby@eecs.northwestern.edu>
To: Jay McCarthy <jay.mccarthy@gmail.com>
Cc: Matthias Felleisen <matthias@ccs.neu.edu>, bugs@racket-lang.org,
        nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11649: drracket highlights strange pieces when
 EOF is encountered during xml-read
Date: Thu, 20 Jan 2011 20:44:11 -0600

 No, the repl io port work fine I believe. It is the way the terminal
 works too. Whatever operation you do on the port (that would consume
 input) will consume the eof and return it and then there will be more
 stuff. But if all you do is peek the eof then you don't really get
 past it.
 
 The paragraph that sounds like a bug is me not being sure what the xml
 reader is doing.
 
 Robby
 
 On Thu, Jan 20, 2011 at 8:16 PM, Jay McCarthy <jay.mccarthy@gmail.com> wrot=
 e:
 > That seems really weird because an eof is not anything in the port, it
 > is the absence of stuff in the port, how can it be consumed? Either
 > way, I don't really care what xml does, but I don't understand this
 > "fix". [It sounds like you (Robby) say it doesn't work anyways...]
 >
 > Jay
 >
 > 2011/1/20 Robby Findler <robby@eecs.northwestern.edu>:
 >> I think that the xml reader does not consume the eof; it just keeps
 >> seeing it there.
 >>
 >> The REPL port is unlike file ports in that eof can appear and then you
 >> can read the eof and then other things can be "behind" the eof. Ie it
 >> isn't really an "end" of anything.
 >>
 >> (This is like other terminals too, if I understand correctly.)
 >>
 >> But I'm not sure if there are other strange things going on, since
 >> when I use read-char to get past the eof, read-xml still says strange
 >> things.
 >>
 >> Robby
 >>
 >> On Thu, Jan 20, 2011 at 1:48 PM, Jay McCarthy <jay.mccarthy@gmail.com> w=
 rote:
 >>> 2011/1/20 Matthias Felleisen <matthias@ccs.neu.edu>:
 >>>>
 >>>> While we're on this topic:
 >>>>
 >>>> I can't run read-xml a second time in the REPL once I have clicked EOF=
 . Will this strange behavior go away?
 >>>
 >>> I don't know why it does that
 >>>
 >>> Jay
 >>>
 >>>>
 >>>> ;; ---
 >>>>
 >>>> I saved two reports on my laptop this morning, also related to this st=
 uff, but different.
 >>>>
 >>>> Oh and THANKS A BUNCH for the savable reports. I was on-line but Eli's=
  machine acted up and I couldn't submit.
 >>>>
 >>>>
 >>>>
 >>>> On Jan 20, 2011, at 2:16 PM, Jay McCarthy wrote:
 >>>>
 >>>>> I fixed the problem in XML, but there is also a problem in the racket
 >>>>> vm that makes Robby's test break.
 >>>>>
 >>>>> Here is something that shows the problem:
 >>>>>
 >>>>> #lang racket
 >>>>> (require tests/eli-tester)
 >>>>>
 >>>>> (define (ppos p)
 >>>>> =C2=A0(define-values (line col pos) (port-next-location p))
 >>>>> =C2=A0pos)
 >>>>>
 >>>>> ; open-input-string is broken
 >>>>> (define (the-test first? second?)
 >>>>> =C2=A0(define is (open-input-string "abcdef"))
 >>>>>
 >>>>> =C2=A0(test #:failure-prefix (format "~a ~a" first? second?)
 >>>>> =C2=A0 =C2=A0 =C2=A0 =C2=A0(test
 >>>>> =C2=A0 =C2=A0 =C2=A0 =C2=A0 (when first? (port-count-lines! is))
 >>>>> =C2=A0 =C2=A0 =C2=A0 =C2=A0 (ppos is) =3D> 1 (read-char is)
 >>>>> =C2=A0 =C2=A0 =C2=A0 =C2=A0 (ppos is) =3D> 2 (read-char is)
 >>>>> =C2=A0 =C2=A0 =C2=A0 =C2=A0 (ppos is) =3D> 3 (read-char is)
 >>>>> =C2=A0 =C2=A0 =C2=A0 =C2=A0 (when second? (port-count-lines! is))
 >>>>> =C2=A0 =C2=A0 =C2=A0 =C2=A0 (ppos is) =3D> 4 (read-char is)
 >>>>> =C2=A0 =C2=A0 =C2=A0 =C2=A0 (ppos is) =3D> 5 (read-char is)
 >>>>> =C2=A0 =C2=A0 =C2=A0 =C2=A0 (ppos is) =3D> 6 (read-char is))))
 >>>>> (test (the-test #f #f)
 >>>>> =C2=A0 =C2=A0 =C2=A0(the-test #t #f)
 >>>>> =C2=A0 =C2=A0 =C2=A0(the-test #f #t)
 >>>>> =C2=A0 =C2=A0 =C2=A0(the-test #t #t))
 >>>>>
 >>>>> Basically what is going on is that port-count-lines! resets the
 >>>>> position count to 1 if it has not already been set before AND
 >>>>> open-input-string seems to be creating a port that counts lines
 >>>>> without being asked, but does not set the C struct field
 >>>>> appropriately. Line 3383 of port.c shows the code that is misbehaving
 >>>>> on the port-count-lines! side, but I think the real problem is
 >>>>> probably in whatever makes open-input-string (which I could track
 >>>>> down) not setting ip->count_lines when it does its work.
 >>>>>
 >>>>> Jay
 >>>>>
 >>>>>
 >>>>>
 >>>>> 2011/1/20 Robby Findler <robby@eecs.northwestern.edu>:
 >>>>>> This is a bug in the xml reader. It appears to not be correctly
 >>>>>> building source locations. In this case, it is claiming that the
 >>>>>> source location of the eof is way before the actual eof that appeare=
 d
 >>>>>> in the port. I think it is assuming that it starts reading at the
 >>>>>> location 0 in any port it gets instead of starting with the location
 >>>>>> that the port reports.
 >>>>>>
 >>>>>> Here's some code that shows the same thing, but without drracket. Th=
 is
 >>>>>> program prints out 7 and 1, but it should print out 7 and 7.
 >>>>>>
 >>>>>> #lang racket
 >>>>>>
 >>>>>> (require xml)
 >>>>>>
 >>>>>> (define p (open-input-string "abcdef"))
 >>>>>> (for ([x (in-range 0 6)]) (read-char p))
 >>>>>> (define-values (line col pos) (port-next-location p))
 >>>>>> pos
 >>>>>>
 >>>>>> (define exn
 >>>>>> =C2=A0(with-handlers ((exn:fail? values))
 >>>>>> =C2=A0 =C2=A0(read-xml/element p)))
 >>>>>>
 >>>>>> (srcloc-position (car ((exn:srclocs-accessor exn) exn)))
 >>>>>>
 >>>>>>
 >>>>>>
 >>>>>> On Wed, Jan 19, 2011 at 10:28 AM, =C2=A0<matthias@ccs.neu.edu> wrote=
 :
 >>>>>>> A new problem report is waiting at
 >>>>>>> =C2=A0http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D11649
 >>>>>>>
 >>>>>>> Reported by matthias for release: 5.0.99.6--2011-01-16(b7f9ee3/g)
 >>>>>>>
 >>>>>>> *** Description:
 >>>>>>> run this program:
 >>>>>>>
 >>>>>>> #lang racket
 >>>>>>>
 >>>>>>> (require xml)
 >>>>>>>
 >>>>>>> (provide main)
 >>>>>>>
 >>>>>>> ;; -> Void
 >>>>>>> ;; effect: read XML test case from
 >>>>>>> (define (main)
 >>>>>>> =C2=A0(define n
 >>>>>>> =C2=A0 =C2=A0(with-handlers ((exn:fail?
 >>>>>>> =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
 =A0 (lambda (x)
 >>>>>>> =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
 =A0 =C2=A0 (printf "*** the input is ill-formatted ***\n")
 >>>>>>> =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
 =A0 =C2=A0 (raise x))))
 >>>>>>> =C2=A0 =C2=A0 =C2=A0(read-xml/element)))
 >>>>>>> =C2=A0n)
 >>>>>>>
 >>>>>>> (main)
 >>>>>>>
 >>>>>>> click EOF
 >>>>>>>
 >>>>>>> drracket highlights in pink everything from top left in REPL
 >>>>>>> to the first two ** in the message
 >>>>>>>
 >>>>>>> it looks odd; i don't know whether the error is new or old
 >>>>>>>
 >>>>>>> [This does NOT happen with plain read so I do think it is an error.=
 ]
 >>>>>>>
 >>>>>>> (I'll send an image as a reply.)
 >>>>>>>
 >>>>>>> *** How to repeat:
 >>>>>>>
 >>>>>>>
 >>>>>>> *** Environment:
 >>>>>>> macosx "Darwin antarctica.ccs.neu.edu 10.6.0 Darwin Kernel Version =
 10.6.0: Wed Nov 10 18:13:17 PST 2010; root:xnu-1504.9.26~3/RELEASE_I386 i38=
 6" (i386-macosx/3m) (get-display-depth) =3D 32
 >>>>>>> Human Language: english
 >>>>>>> (current-memory-use) 268202228
 >>>>>>>
 >>>>>>> Collections:
 >>>>>>> ("/Users/matthias/0Unison/collects/"
 >>>>>>> =C2=A0(".DS_Store" "compiled" "date" "finance" "info-domain" "info.=
 ss" "pdf.ss~" "session" "short" "testing" "tll-collects" "utils" "web"))
 >>>>>>> ("/Users/matthias/Library/Racket/5.0.99.6/collects"
 >>>>>>> =C2=A0(non-existent-path))
 >>>>>>> ("/Users/matthias/plt/collects"
 >>>>>>> =C2=A0(".gitignore" "2htdp" "afm" "algol60" "at-exp" "browser" "com=
 binator-parser" "compiler" "config" "data" "datalog" "defaults" "deinprogra=
 mm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi"=
  "file" "framework" "frtime" "games" "graphics" "gui-debugger" "guibuilder"=
  "handin-client" "handin-server" "help" "hierlist" "honu" "htdp" "html" "ic=
 ons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "meta" =
 "mred" "mrlib" "mysterx" "mz" "mzcom" "mzlib" "mzscheme" "net" "openssl" "p=
 arser-tools" "picturing-programs" "plai" "planet" "plot" "preprocessor" "pr=
 ofile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raclog" "raco" "racunit=
 " "reader" "readline" "redex" "repo-time-stamp" "repos-time-stamp" "rnrs" "=
 s-exp" "schelog" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" =
 "setup" "sgl" "sirmail" "slatex" "slideshow" "srfi" "srpersist" "stepper" "=
 string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-r=
 ecovery" "test-engine" "tes!
 >>>>>>> =C2=A0ts" "tex2page" "texpict" "tool" "trace" "typed" "typed-scheme=
 " "unstable" "version" "waterworld" "web-server" "wxme" "xml"))
 >>>>>>>
 >>>>>>> Computer Language: (("Determine language from source") (#(#t print =
 mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t))
 >>>>>>>
 >>>>>>>
 >>>>>>
 >>>>>
 >>>>>
 >>>>>
 >>>>> --
 >>>>> Jay McCarthy <jay@cs.byu.edu>
 >>>>> Assistant Professor / Brigham Young University
 >>>>> http://faculty.cs.byu.edu/~jay
 >>>>>
 >>>>> "The glory of God is Intelligence" - D&C 93
 >>>>
 >>>>
 >>>
 >>>
 >>>
 >>> --
 >>> Jay McCarthy <jay@cs.byu.edu>
 >>> Assistant Professor / Brigham Young University
 >>> http://faculty.cs.byu.edu/~jay
 >>>
 >>> "The glory of God is Intelligence" - D&C 93
 >>>
 >>
 >
 >
 >
 > --
 > Jay McCarthy <jay@cs.byu.edu>
 > Assistant Professor / Brigham Young University
 > http://faculty.cs.byu.edu/~jay
 >
 > "The glory of God is Intelligence" - D&C 93
 >
From: Robby Findler <robby@eecs.northwestern.edu>
To: Jay McCarthy <jay.mccarthy@gmail.com>
Cc: Matthias Felleisen <matthias@ccs.neu.edu>, bugs@racket-lang.org,
        nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11649: drracket highlights strange pieces when
 EOF is encountered during xml-read
Date: Thu, 20 Jan 2011 20:46:34 -0600

 Let me say this more clearly: when you, in a Terminal windows, start
 up racket and then type control-d, racket exits, no? But the port is
 still there. You can restart racket and then start a second repl
 inside the normal repl and terminate the second one with a control-d
 and the original repl will be there (just do a literlal loop that read
 / print without an eval to try it out). This is how the drracket repl
 port also works.
 
 Robby
 
 On Thu, Jan 20, 2011 at 8:44 PM, Robby Findler
 <robby@eecs.northwestern.edu> wrote:
 > No, the repl io port work fine I believe. It is the way the terminal
 > works too. Whatever operation you do on the port (that would consume
 > input) will consume the eof and return it and then there will be more
 > stuff. But if all you do is peek the eof then you don't really get
 > past it.
 >
 > The paragraph that sounds like a bug is me not being sure what the xml
 > reader is doing.
 >
 > Robby
 >
 > On Thu, Jan 20, 2011 at 8:16 PM, Jay McCarthy <jay.mccarthy@gmail.com> wr=
 ote:
 >> That seems really weird because an eof is not anything in the port, it
 >> is the absence of stuff in the port, how can it be consumed? Either
 >> way, I don't really care what xml does, but I don't understand this
 >> "fix". [It sounds like you (Robby) say it doesn't work anyways...]
 >>
 >> Jay
 >>
 >> 2011/1/20 Robby Findler <robby@eecs.northwestern.edu>:
 >>> I think that the xml reader does not consume the eof; it just keeps
 >>> seeing it there.
 >>>
 >>> The REPL port is unlike file ports in that eof can appear and then you
 >>> can read the eof and then other things can be "behind" the eof. Ie it
 >>> isn't really an "end" of anything.
 >>>
 >>> (This is like other terminals too, if I understand correctly.)
 >>>
 >>> But I'm not sure if there are other strange things going on, since
 >>> when I use read-char to get past the eof, read-xml still says strange
 >>> things.
 >>>
 >>> Robby
 >>>
 >>> On Thu, Jan 20, 2011 at 1:48 PM, Jay McCarthy <jay.mccarthy@gmail.com> =
 wrote:
 >>>> 2011/1/20 Matthias Felleisen <matthias@ccs.neu.edu>:
 >>>>>
 >>>>> While we're on this topic:
 >>>>>
 >>>>> I can't run read-xml a second time in the REPL once I have clicked EO=
 F. Will this strange behavior go away?
 >>>>
 >>>> I don't know why it does that
 >>>>
 >>>> Jay
 >>>>
 >>>>>
 >>>>> ;; ---
 >>>>>
 >>>>> I saved two reports on my laptop this morning, also related to this s=
 tuff, but different.
 >>>>>
 >>>>> Oh and THANKS A BUNCH for the savable reports. I was on-line but Eli'=
 s machine acted up and I couldn't submit.
 >>>>>
 >>>>>
 >>>>>
 >>>>> On Jan 20, 2011, at 2:16 PM, Jay McCarthy wrote:
 >>>>>
 >>>>>> I fixed the problem in XML, but there is also a problem in the racke=
 t
 >>>>>> vm that makes Robby's test break.
 >>>>>>
 >>>>>> Here is something that shows the problem:
 >>>>>>
 >>>>>> #lang racket
 >>>>>> (require tests/eli-tester)
 >>>>>>
 >>>>>> (define (ppos p)
 >>>>>> =C2=A0(define-values (line col pos) (port-next-location p))
 >>>>>> =C2=A0pos)
 >>>>>>
 >>>>>> ; open-input-string is broken
 >>>>>> (define (the-test first? second?)
 >>>>>> =C2=A0(define is (open-input-string "abcdef"))
 >>>>>>
 >>>>>> =C2=A0(test #:failure-prefix (format "~a ~a" first? second?)
 >>>>>> =C2=A0 =C2=A0 =C2=A0 =C2=A0(test
 >>>>>> =C2=A0 =C2=A0 =C2=A0 =C2=A0 (when first? (port-count-lines! is))
 >>>>>> =C2=A0 =C2=A0 =C2=A0 =C2=A0 (ppos is) =3D> 1 (read-char is)
 >>>>>> =C2=A0 =C2=A0 =C2=A0 =C2=A0 (ppos is) =3D> 2 (read-char is)
 >>>>>> =C2=A0 =C2=A0 =C2=A0 =C2=A0 (ppos is) =3D> 3 (read-char is)
 >>>>>> =C2=A0 =C2=A0 =C2=A0 =C2=A0 (when second? (port-count-lines! is))
 >>>>>> =C2=A0 =C2=A0 =C2=A0 =C2=A0 (ppos is) =3D> 4 (read-char is)
 >>>>>> =C2=A0 =C2=A0 =C2=A0 =C2=A0 (ppos is) =3D> 5 (read-char is)
 >>>>>> =C2=A0 =C2=A0 =C2=A0 =C2=A0 (ppos is) =3D> 6 (read-char is))))
 >>>>>> (test (the-test #f #f)
 >>>>>> =C2=A0 =C2=A0 =C2=A0(the-test #t #f)
 >>>>>> =C2=A0 =C2=A0 =C2=A0(the-test #f #t)
 >>>>>> =C2=A0 =C2=A0 =C2=A0(the-test #t #t))
 >>>>>>
 >>>>>> Basically what is going on is that port-count-lines! resets the
 >>>>>> position count to 1 if it has not already been set before AND
 >>>>>> open-input-string seems to be creating a port that counts lines
 >>>>>> without being asked, but does not set the C struct field
 >>>>>> appropriately. Line 3383 of port.c shows the code that is misbehavin=
 g
 >>>>>> on the port-count-lines! side, but I think the real problem is
 >>>>>> probably in whatever makes open-input-string (which I could track
 >>>>>> down) not setting ip->count_lines when it does its work.
 >>>>>>
 >>>>>> Jay
 >>>>>>
 >>>>>>
 >>>>>>
 >>>>>> 2011/1/20 Robby Findler <robby@eecs.northwestern.edu>:
 >>>>>>> This is a bug in the xml reader. It appears to not be correctly
 >>>>>>> building source locations. In this case, it is claiming that the
 >>>>>>> source location of the eof is way before the actual eof that appear=
 ed
 >>>>>>> in the port. I think it is assuming that it starts reading at the
 >>>>>>> location 0 in any port it gets instead of starting with the locatio=
 n
 >>>>>>> that the port reports.
 >>>>>>>
 >>>>>>> Here's some code that shows the same thing, but without drracket. T=
 his
 >>>>>>> program prints out 7 and 1, but it should print out 7 and 7.
 >>>>>>>
 >>>>>>> #lang racket
 >>>>>>>
 >>>>>>> (require xml)
 >>>>>>>
 >>>>>>> (define p (open-input-string "abcdef"))
 >>>>>>> (for ([x (in-range 0 6)]) (read-char p))
 >>>>>>> (define-values (line col pos) (port-next-location p))
 >>>>>>> pos
 >>>>>>>
 >>>>>>> (define exn
 >>>>>>> =C2=A0(with-handlers ((exn:fail? values))
 >>>>>>> =C2=A0 =C2=A0(read-xml/element p)))
 >>>>>>>
 >>>>>>> (srcloc-position (car ((exn:srclocs-accessor exn) exn)))
 >>>>>>>
 >>>>>>>
 >>>>>>>
 >>>>>>> On Wed, Jan 19, 2011 at 10:28 AM, =C2=A0<matthias@ccs.neu.edu> wrot=
 e:
 >>>>>>>> A new problem report is waiting at
 >>>>>>>> =C2=A0http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D11649
 >>>>>>>>
 >>>>>>>> Reported by matthias for release: 5.0.99.6--2011-01-16(b7f9ee3/g)
 >>>>>>>>
 >>>>>>>> *** Description:
 >>>>>>>> run this program:
 >>>>>>>>
 >>>>>>>> #lang racket
 >>>>>>>>
 >>>>>>>> (require xml)
 >>>>>>>>
 >>>>>>>> (provide main)
 >>>>>>>>
 >>>>>>>> ;; -> Void
 >>>>>>>> ;; effect: read XML test case from
 >>>>>>>> (define (main)
 >>>>>>>> =C2=A0(define n
 >>>>>>>> =C2=A0 =C2=A0(with-handlers ((exn:fail?
 >>>>>>>> =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
 =A0 (lambda (x)
 >>>>>>>> =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
 =A0 =C2=A0 (printf "*** the input is ill-formatted ***\n")
 >>>>>>>> =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
 =A0 =C2=A0 (raise x))))
 >>>>>>>> =C2=A0 =C2=A0 =C2=A0(read-xml/element)))
 >>>>>>>> =C2=A0n)
 >>>>>>>>
 >>>>>>>> (main)
 >>>>>>>>
 >>>>>>>> click EOF
 >>>>>>>>
 >>>>>>>> drracket highlights in pink everything from top left in REPL
 >>>>>>>> to the first two ** in the message
 >>>>>>>>
 >>>>>>>> it looks odd; i don't know whether the error is new or old
 >>>>>>>>
 >>>>>>>> [This does NOT happen with plain read so I do think it is an error=
 .]
 >>>>>>>>
 >>>>>>>> (I'll send an image as a reply.)
 >>>>>>>>
 >>>>>>>> *** How to repeat:
 >>>>>>>>
 >>>>>>>>
 >>>>>>>> *** Environment:
 >>>>>>>> macosx "Darwin antarctica.ccs.neu.edu 10.6.0 Darwin Kernel Version=
  10.6.0: Wed Nov 10 18:13:17 PST 2010; root:xnu-1504.9.26~3/RELEASE_I386 i3=
 86" (i386-macosx/3m) (get-display-depth) =3D 32
 >>>>>>>> Human Language: english
 >>>>>>>> (current-memory-use) 268202228
 >>>>>>>>
 >>>>>>>> Collections:
 >>>>>>>> ("/Users/matthias/0Unison/collects/"
 >>>>>>>> =C2=A0(".DS_Store" "compiled" "date" "finance" "info-domain" "info=
 .ss" "pdf.ss~" "session" "short" "testing" "tll-collects" "utils" "web"))
 >>>>>>>> ("/Users/matthias/Library/Racket/5.0.99.6/collects"
 >>>>>>>> =C2=A0(non-existent-path))
 >>>>>>>> ("/Users/matthias/plt/collects"
 >>>>>>>> =C2=A0(".gitignore" "2htdp" "afm" "algol60" "at-exp" "browser" "co=
 mbinator-parser" "compiler" "config" "data" "datalog" "defaults" "deinprogr=
 amm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi=
 " "file" "framework" "frtime" "games" "graphics" "gui-debugger" "guibuilder=
 " "handin-client" "handin-server" "help" "hierlist" "honu" "htdp" "html" "i=
 cons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "meta"=
  "mred" "mrlib" "mysterx" "mz" "mzcom" "mzlib" "mzscheme" "net" "openssl" "=
 parser-tools" "picturing-programs" "plai" "planet" "plot" "preprocessor" "p=
 rofile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raclog" "raco" "racuni=
 t" "reader" "readline" "redex" "repo-time-stamp" "repos-time-stamp" "rnrs" =
 "s-exp" "schelog" "scheme" "schemeunit" "scribble" "scribblings" "scriblib"=
  "setup" "sgl" "sirmail" "slatex" "slideshow" "srfi" "srpersist" "stepper" =
 "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-=
 recovery" "test-engine" "tes!
 >>>>>>>> =C2=A0ts" "tex2page" "texpict" "tool" "trace" "typed" "typed-schem=
 e" "unstable" "version" "waterworld" "web-server" "wxme" "xml"))
 >>>>>>>>
 >>>>>>>> Computer Language: (("Determine language from source") (#(#t print=
  mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t))
 >>>>>>>>
 >>>>>>>>
 >>>>>>>
 >>>>>>
 >>>>>>
 >>>>>>
 >>>>>> --
 >>>>>> Jay McCarthy <jay@cs.byu.edu>
 >>>>>> Assistant Professor / Brigham Young University
 >>>>>> http://faculty.cs.byu.edu/~jay
 >>>>>>
 >>>>>> "The glory of God is Intelligence" - D&C 93
 >>>>>
 >>>>>
 >>>>
 >>>>
 >>>>
 >>>> --
 >>>> Jay McCarthy <jay@cs.byu.edu>
 >>>> Assistant Professor / Brigham Young University
 >>>> http://faculty.cs.byu.edu/~jay
 >>>>
 >>>> "The glory of God is Intelligence" - D&C 93
 >>>>
 >>>
 >>
 >>
 >>
 >> --
 >> Jay McCarthy <jay@cs.byu.edu>
 >> Assistant Professor / Brigham Young University
 >> http://faculty.cs.byu.edu/~jay
 >>
 >> "The glory of God is Intelligence" - D&C 93
 >>
 >
From: Jay McCarthy <jay.mccarthy@gmail.com>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: Matthias Felleisen <matthias@ccs.neu.edu>, bugs@racket-lang.org,
        nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11649: drracket highlights strange pieces when
 EOF is encountered during xml-read
Date: Thu, 20 Jan 2011 19:16:34 -0700

 That seems really weird because an eof is not anything in the port, it
 is the absence of stuff in the port, how can it be consumed? Either
 way, I don't really care what xml does, but I don't understand this
 "fix". [It sounds like you (Robby) say it doesn't work anyways...]
 
 Jay
 
 2011/1/20 Robby Findler <robby@eecs.northwestern.edu>:
 > I think that the xml reader does not consume the eof; it just keeps
 > seeing it there.
 >
 > The REPL port is unlike file ports in that eof can appear and then you
 > can read the eof and then other things can be "behind" the eof. Ie it
 > isn't really an "end" of anything.
 >
 > (This is like other terminals too, if I understand correctly.)
 >
 > But I'm not sure if there are other strange things going on, since
 > when I use read-char to get past the eof, read-xml still says strange
 > things.
 >
 > Robby
 >
 > On Thu, Jan 20, 2011 at 1:48 PM, Jay McCarthy <jay.mccarthy@gmail.com> wr=
 ote:
 >> 2011/1/20 Matthias Felleisen <matthias@ccs.neu.edu>:
 >>>
 >>> While we're on this topic:
 >>>
 >>> I can't run read-xml a second time in the REPL once I have clicked EOF.=
  Will this strange behavior go away?
 >>
 >> I don't know why it does that
 >>
 >> Jay
 >>
 >>>
 >>> ;; ---
 >>>
 >>> I saved two reports on my laptop this morning, also related to this stu=
 ff, but different.
 >>>
 >>> Oh and THANKS A BUNCH for the savable reports. I was on-line but Eli's =
 machine acted up and I couldn't submit.
 >>>
 >>>
 >>>
 >>> On Jan 20, 2011, at 2:16 PM, Jay McCarthy wrote:
 >>>
 >>>> I fixed the problem in XML, but there is also a problem in the racket
 >>>> vm that makes Robby's test break.
 >>>>
 >>>> Here is something that shows the problem:
 >>>>
 >>>> #lang racket
 >>>> (require tests/eli-tester)
 >>>>
 >>>> (define (ppos p)
 >>>> =C2=A0(define-values (line col pos) (port-next-location p))
 >>>> =C2=A0pos)
 >>>>
 >>>> ; open-input-string is broken
 >>>> (define (the-test first? second?)
 >>>> =C2=A0(define is (open-input-string "abcdef"))
 >>>>
 >>>> =C2=A0(test #:failure-prefix (format "~a ~a" first? second?)
 >>>> =C2=A0 =C2=A0 =C2=A0 =C2=A0(test
 >>>> =C2=A0 =C2=A0 =C2=A0 =C2=A0 (when first? (port-count-lines! is))
 >>>> =C2=A0 =C2=A0 =C2=A0 =C2=A0 (ppos is) =3D> 1 (read-char is)
 >>>> =C2=A0 =C2=A0 =C2=A0 =C2=A0 (ppos is) =3D> 2 (read-char is)
 >>>> =C2=A0 =C2=A0 =C2=A0 =C2=A0 (ppos is) =3D> 3 (read-char is)
 >>>> =C2=A0 =C2=A0 =C2=A0 =C2=A0 (when second? (port-count-lines! is))
 >>>> =C2=A0 =C2=A0 =C2=A0 =C2=A0 (ppos is) =3D> 4 (read-char is)
 >>>> =C2=A0 =C2=A0 =C2=A0 =C2=A0 (ppos is) =3D> 5 (read-char is)
 >>>> =C2=A0 =C2=A0 =C2=A0 =C2=A0 (ppos is) =3D> 6 (read-char is))))
 >>>> (test (the-test #f #f)
 >>>> =C2=A0 =C2=A0 =C2=A0(the-test #t #f)
 >>>> =C2=A0 =C2=A0 =C2=A0(the-test #f #t)
 >>>> =C2=A0 =C2=A0 =C2=A0(the-test #t #t))
 >>>>
 >>>> Basically what is going on is that port-count-lines! resets the
 >>>> position count to 1 if it has not already been set before AND
 >>>> open-input-string seems to be creating a port that counts lines
 >>>> without being asked, but does not set the C struct field
 >>>> appropriately. Line 3383 of port.c shows the code that is misbehaving
 >>>> on the port-count-lines! side, but I think the real problem is
 >>>> probably in whatever makes open-input-string (which I could track
 >>>> down) not setting ip->count_lines when it does its work.
 >>>>
 >>>> Jay
 >>>>
 >>>>
 >>>>
 >>>> 2011/1/20 Robby Findler <robby@eecs.northwestern.edu>:
 >>>>> This is a bug in the xml reader. It appears to not be correctly
 >>>>> building source locations. In this case, it is claiming that the
 >>>>> source location of the eof is way before the actual eof that appeared
 >>>>> in the port. I think it is assuming that it starts reading at the
 >>>>> location 0 in any port it gets instead of starting with the location
 >>>>> that the port reports.
 >>>>>
 >>>>> Here's some code that shows the same thing, but without drracket. Thi=
 s
 >>>>> program prints out 7 and 1, but it should print out 7 and 7.
 >>>>>
 >>>>> #lang racket
 >>>>>
 >>>>> (require xml)
 >>>>>
 >>>>> (define p (open-input-string "abcdef"))
 >>>>> (for ([x (in-range 0 6)]) (read-char p))
 >>>>> (define-values (line col pos) (port-next-location p))
 >>>>> pos
 >>>>>
 >>>>> (define exn
 >>>>> =C2=A0(with-handlers ((exn:fail? values))
 >>>>> =C2=A0 =C2=A0(read-xml/element p)))
 >>>>>
 >>>>> (srcloc-position (car ((exn:srclocs-accessor exn) exn)))
 >>>>>
 >>>>>
 >>>>>
 >>>>> On Wed, Jan 19, 2011 at 10:28 AM, =C2=A0<matthias@ccs.neu.edu> wrote:
 >>>>>> A new problem report is waiting at
 >>>>>> =C2=A0http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D11649
 >>>>>>
 >>>>>> Reported by matthias for release: 5.0.99.6--2011-01-16(b7f9ee3/g)
 >>>>>>
 >>>>>> *** Description:
 >>>>>> run this program:
 >>>>>>
 >>>>>> #lang racket
 >>>>>>
 >>>>>> (require xml)
 >>>>>>
 >>>>>> (provide main)
 >>>>>>
 >>>>>> ;; -> Void
 >>>>>> ;; effect: read XML test case from
 >>>>>> (define (main)
 >>>>>> =C2=A0(define n
 >>>>>> =C2=A0 =C2=A0(with-handlers ((exn:fail?
 >>>>>> =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
 =A0 (lambda (x)
 >>>>>> =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
 =A0 =C2=A0 (printf "*** the input is ill-formatted ***\n")
 >>>>>> =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
 =A0 =C2=A0 (raise x))))
 >>>>>> =C2=A0 =C2=A0 =C2=A0(read-xml/element)))
 >>>>>> =C2=A0n)
 >>>>>>
 >>>>>> (main)
 >>>>>>
 >>>>>> click EOF
 >>>>>>
 >>>>>> drracket highlights in pink everything from top left in REPL
 >>>>>> to the first two ** in the message
 >>>>>>
 >>>>>> it looks odd; i don't know whether the error is new or old
 >>>>>>
 >>>>>> [This does NOT happen with plain read so I do think it is an error.]
 >>>>>>
 >>>>>> (I'll send an image as a reply.)
 >>>>>>
 >>>>>> *** How to repeat:
 >>>>>>
 >>>>>>
 >>>>>> *** Environment:
 >>>>>> macosx "Darwin antarctica.ccs.neu.edu 10.6.0 Darwin Kernel Version 1=
 0.6.0: Wed Nov 10 18:13:17 PST 2010; root:xnu-1504.9.26~3/RELEASE_I386 i386=
 " (i386-macosx/3m) (get-display-depth) =3D 32
 >>>>>> Human Language: english
 >>>>>> (current-memory-use) 268202228
 >>>>>>
 >>>>>> Collections:
 >>>>>> ("/Users/matthias/0Unison/collects/"
 >>>>>> =C2=A0(".DS_Store" "compiled" "date" "finance" "info-domain" "info.s=
 s" "pdf.ss~" "session" "short" "testing" "tll-collects" "utils" "web"))
 >>>>>> ("/Users/matthias/Library/Racket/5.0.99.6/collects"
 >>>>>> =C2=A0(non-existent-path))
 >>>>>> ("/Users/matthias/plt/collects"
 >>>>>> =C2=A0(".gitignore" "2htdp" "afm" "algol60" "at-exp" "browser" "comb=
 inator-parser" "compiler" "config" "data" "datalog" "defaults" "deinprogram=
 m" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" =
 "file" "framework" "frtime" "games" "graphics" "gui-debugger" "guibuilder" =
 "handin-client" "handin-server" "help" "hierlist" "honu" "htdp" "html" "ico=
 ns" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "meta" "=
 mred" "mrlib" "mysterx" "mz" "mzcom" "mzlib" "mzscheme" "net" "openssl" "pa=
 rser-tools" "picturing-programs" "plai" "planet" "plot" "preprocessor" "pro=
 file" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raclog" "raco" "racunit"=
  "reader" "readline" "redex" "repo-time-stamp" "repos-time-stamp" "rnrs" "s=
 -exp" "schelog" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "=
 setup" "sgl" "sirmail" "slatex" "slideshow" "srfi" "srpersist" "stepper" "s=
 tring-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-re=
 covery" "test-engine" "tes!
 >>>>>> =C2=A0ts" "tex2page" "texpict" "tool" "trace" "typed" "typed-scheme"=
  "unstable" "version" "waterworld" "web-server" "wxme" "xml"))
 >>>>>>
 >>>>>> Computer Language: (("Determine language from source") (#(#t print m=
 ixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t))
 >>>>>>
 >>>>>>
 >>>>>
 >>>>
 >>>>
 >>>>
 >>>> --
 >>>> Jay McCarthy <jay@cs.byu.edu>
 >>>> Assistant Professor / Brigham Young University
 >>>> http://faculty.cs.byu.edu/~jay
 >>>>
 >>>> "The glory of God is Intelligence" - D&C 93
 >>>
 >>>
 >>
 >>
 >>
 >> --
 >> Jay McCarthy <jay@cs.byu.edu>
 >> Assistant Professor / Brigham Young University
 >> http://faculty.cs.byu.edu/~jay
 >>
 >> "The glory of God is Intelligence" - D&C 93
 >>
 >
 
 
 
 --=20
 Jay McCarthy <jay@cs.byu.edu>
 Assistant Professor / Brigham Young University
 http://faculty.cs.byu.edu/~jay
 
 "The glory of God is Intelligence" - D&C 93
