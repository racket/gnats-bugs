From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Sat Jun 26 16:24:12 2010
Received: from mail-gy0-f172.google.com (mail-gy0-f172.google.com [209.85.160.172])
	by champlain.ccs.neu.edu (8.14.3/8.14.3) with ESMTP id o5QKO9b6027747
	for <bugs@bugs.plt-scheme.org>; Sat, 26 Jun 2010 16:24:09 -0400
Message-Id: <201006262024.o5QKO7Ik027740@champlain.ccs.neu.edu>
Date: Sat, 26 Jun 2010 16:24:07 -0400
From: sbloch@adelphi.edu
To: bugs@plt-scheme.org
Subject: 2htdp/image rotate works differently on bitmaps than on other things

>Number:         10998
>Category:       all
>Synopsis:       2htdp/image rotate works differently on bitmaps than on other things
>Class:          sw-bug
>Responsible:    robby
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Sat Jun 26 16:28:01 -0400 2010
>Closed-Date:    Tue Jul 06 16:26:41 -0400 2010
>Last-Modified:  Wed Jul 07 16:12:01 -0400 2010
>Originator:     Stephen Bloch
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.0.0.1--2010-06-20(4504678/a)
>Environment:
macosx "Darwin Canterbury 8.11.0 Darwin Kernel Version 8.11.0: Wed Oct 10 18:26:00 PDT 2007; root:xnu-792.24.17~1/RELEASE_PPC Power Macintosh powerpc" (ppc-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 221334136

Collections:
(("/Users/teeb/Library/Racket/5.0.0.1/collects" "installed-teachpacks") ("/Applications/Racket v5.0.0.1/collects" "2htdp" "afm" "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "help" "hierlist" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "redex" "repo-time-stamp" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tex2page" "texpict" "trace" "typed" "typed-scheme" "unstable" "version" "web!
 -server" "wxme" "xml"))
Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t))
>Description:
As far as I can tell, "rotate" seems to rotate the specified number of degrees counterclockwise if you give it a geometric figure, or the result of a previous "rotate", but it rotates the specified number of degrees CLOCKWISE if you give it a bitmap.
>How-To-Repeat:
(define tri (triangle 30 "solid" "red"))
tri ; looks good: pointing up
(rotate 90 tri) ; looks good: pointing left
(rotate 90 (rotate 90 tri)) ; looks good: pointing down

(define pic <insert-asymmetrical-bitmap-here>)
pic ; looks good: facing up
(rotate 90 pic) ; has rotated CLOCKWISE
(rotate 90 (rotate 90 pic)) ; back to original pic
>Fix:
>Audit-Trail:
From: Stephen Bloch <sbloch@adelphi.edu>
To: nobody@racket-lang.org, bugs@racket-lang.org,
        bug-notification@racket-lang.org, Stephen Bloch <sbloch@adelphi.edu>
Cc: 
Subject: Re: all/10998: 2htdp/image rotate works differently on bitmaps than on
 other things
Date: Sat, 26 Jun 2010 16:33:19 -0400

 --Apple-Mail-2-776972423
 Content-Transfer-Encoding: 7bit
 Content-Type: text/plain;
 	charset=US-ASCII;
 	delsp=yes;
 	format=flowed
 
 BTW, I've confirmed that the same thing happens when I require only  
 2htdp/image rather than picturing-programs.  And in BSL.
 
 --Apple-Mail-2-776972423
 Content-Transfer-Encoding: 7bit
 Content-Type: application/octet-stream;
 	x-mac-type=57584D45;
 	x-unix-mode=0644;
 	x-mac-creator=44725363;
 	name=rotate-bug.rkt
 Content-Disposition: attachment;
 	filename=rotate-bug.rkt
 
 #reader(lib"read.ss""wxme")WXME0108 ## 
 #|
    This file uses the GRacket editor format.
    Open this file in DrRacket version 5.0.0.1 or later to read it.
 
    Most likely, it was created by saving a program in DrRacket,
    and it probably contains a program with non-text elements
    (such as images or comment boxes).
 
             http://racket-lang.org/
 |#
  28 7 #"wxtext\0"
 3 1 6 #"wxtab\0"
 1 1 8 #"wxmedia\0"
 4 1 8 #"wximage\0"
 2 0 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
 1 0 16 #"drscheme:number\0"
 3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
 1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
 1 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
 0 0 19 #"drscheme:sexp-snip\0"
 0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
 1 0 40 #"(lib \"image-core.ss\" \"2htdp\" \"private\")\0"
 1 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
 0 0 29 #"drscheme:bindings-snipclass%\0"
 1 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
 1 0 22 #"drscheme:lambda-snip%\0"
 1 0 56
 #"(lib \"hrule-snip.ss\" \"macro-debugger\" \"syntax-browser\")\0"
 1 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
 1 0 26 #"drscheme:pict-value-snip%\0"
 0 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
 2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
 1 0 18 #"drscheme:xml-snip\0"
 1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
 1 0 21 #"drscheme:scheme-snip\0"
 2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
 1 0 10 #"text-box%\0"
 1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
 1 0 15 #"test-case-box%\0"
 2 0 1 6 #"wxloc\0"
           0 0 65 0 1 #"\0"
 0 75 1 #"\0"
 0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
 #"Standard\0"
 0 75 12 #"Courier New\0"
 0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
 #"\0"
 0 -1 1 #"\0"
 1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
 #"framework:default-color\0"
 0 -1 1 #"\0"
 1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
 #"\0"
 0 -1 1 #"\0"
 1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
 #"text:ports out\0"
 0 -1 1 #"\0"
 1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
 #"\0"
 0 -1 1 #"\0"
 1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
 -1 2 15 #"text:ports err\0"
 0 -1 1 #"\0"
 1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
 -1 2 1 #"\0"
 0 -1 1 #"\0"
 1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
 #"text:ports value\0"
 0 -1 1 #"\0"
 1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
 #"\0"
 0 -1 1 #"\0"
 1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
 -1 2 27 #"Matching Parenthesis Style\0"
 0 -1 1 #"\0"
 1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
 -1 2 1 #"\0"
 0 -1 1 #"\0"
 1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
 #"framework:syntax-color:scheme:symbol\0"
 0 -1 1 #"\0"
 1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
 #"framework:syntax-color:scheme:keyword\0"
 0 -1 1 #"\0"
 1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
 #"\0"
 0 -1 1 #"\0"
 1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
 38 #"framework:syntax-color:scheme:comment\0"
 0 -1 1 #"\0"
 1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
 #"\0"
 0 -1 1 #"\0"
 1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
 #"framework:syntax-color:scheme:string\0"
 0 -1 1 #"\0"
 1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
 #"framework:syntax-color:scheme:constant\0"
 0 -1 1 #"\0"
 1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
 #"\0"
 0 -1 1 #"\0"
 1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
 #"framework:syntax-color:scheme:parenthesis\0"
 0 -1 1 #"\0"
 1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
 #"\0"
 0 -1 1 #"\0"
 1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
 #"framework:syntax-color:scheme:error\0"
 0 -1 1 #"\0"
 1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
 #"\0"
 0 -1 1 #"\0"
 1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
 #"framework:syntax-color:scheme:other\0"
 0 -1 1 #"\0"
 1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
 #"\0"
 0 -1 1 #"\0"
 1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
 38 #"drracket:check-syntax:lexically-bound\0"
 0 -1 1 #"\0"
 1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
 #"\0"
 0 -1 1 #"\0"
 1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
 #"drracket:check-syntax:set!d\0"
 0 -1 1 #"\0"
 1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
 #"\0"
 0 -1 1 #"\0"
 1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
 #"drracket:check-syntax:imported\0"
 0 -1 1 #"\0"
 1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 4 1
 #"\0"
 0 70 1 #"\0"
 1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
 -1 -1 4 4 #"XML\0"
 0 70 1 #"\0"
 1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
 -1 -1 8 1 #"\0"
 0 -1 1 #"\0"
 1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 8 24
 #"drscheme:text:ports err\0"
 0 -1 1 #"\0"
 1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 4 1
 #"\0"
 0 71 1 #"\0"
 1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
 -1 -1 4 1 #"\0"
 0 -1 1 #"\0"
 1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
 -1 4 1 #"\0"
 0 71 1 #"\0"
 1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
 -1 4 1 #"\0"
 0 71 1 #"\0"
 1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
 -1 0 1 #"\0"
 0 75 12 #"Courier New\0"
 0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
 255 255 1 -1 0 1 #"\0"
 0 -1 1 #"\0"
 0.0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
 -1 -1 2 1 #"\0"
 0 -1 1 #"\0"
 0.0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
 -1 -1 22 1 #"\0"
 0 -1 1 #"\0"
 1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
 -1 -1 15 1 #"\0"
 0 -1 1 #"\0"
 1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
 -1 -1 4 1 #"\0"
 0 -1 1 #"\0"
 1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
 -1 -1 14 1 #"\0"
 0 -1 1 #"\0"
 1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
 -1 -1 20 1 #"\0"
 0 -1 1 #"\0"
 1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
 -1 -1 19 1 #"\0"
 0 -1 1 #"\0"
 1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
 -1 -1 22 1 #"\0"
 0 -1 1 #"\0"
 1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
 0 0 -1 -1 14 1 #"\0"
 0 -1 1 #"\0"
 1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
 0 0 -1 -1 4 1 #"\0"
 0 -1 1 #"\0"
 1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
 0 0 -1 -1 20 1 #"\0"
 0 -1 1 #"\0"
 1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
 0 0 -1 -1 22 1 #"\0"
 0 -1 1 #"\0"
 1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
 255 255 -1 -1 14 1 #"\0"
 0 -1 1 #"\0"
 1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
 255 255 -1 -1 4 1 #"\0"
 0 -1 1 #"\0"
 1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
 255 255 -1 -1 15 1 #"\0"
 0 -1 1 #"\0"
 1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
 255 255 -1 -1 20 1 #"\0"
 0 -1 1 #"\0"
 1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
 255 255 -1 -1 19 1 #"\0"
 0 -1 1 #"\0"
 1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
 255 255 -1 -1 2 1 #"\0"
 0 -1 1 #"\0"
 1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
 -1 -1 2 1 #"\0"
 0 -1 1 #"\0"
 1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 105 225 0
 0 0 -1 -1 17 1 #"\0"
 0 -1 1 #"\0"
 1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
 255 255 -1 -1 2 1 #"\0"
 0 71 1 #"\0"
 1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
 -1 -1 2 1 #"\0"
 0 71 1 #"\0"
 1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
 -1           0 80 0 4 3 85
 (
  #";; The first three lines of this file were inserted by DrRacket. The"
  #"y record metadata"
 ) 0 0 4 29 1 #"\n"
 0 0 4 3 85
 (
  #";; about the language level of this file in a form that our tools ca"
  #"n easily process."
 ) 0 0 4 29 1 #"\n"
 0 0 4 3 177
 (
  #"#reader(lib \"htdp-beginner-reader.ss\" \"lang\")((modname rotate-bu"
  #"g) (read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t cons"
  #"tructor repeating-decimal #f #t none #f ())))"
 ) 0 0 4 29 1 #"\n"
 0 0 22 3 1 #"("
 0 0 14 3 7 #"require"
 0 0 4 3 1 #" "
 0 0 14 3 11 #"2htdp/image"
 0 0 22 3 1 #")"
 0 0 4 29 1 #"\n"
 0 0 22 3 1 #"("
 0 0 15 3 6 #"define"
 0 0 4 3 1 #" "
 0 0 14 3 8 #"calendar"
 0 0 4 3 1 #" "
 0 3          13 4 1 #"\0"
 2 -1.0 -1.0 0.0 0.0 0           1 365
 (
  #"\211PNG\r\n\32\n\0\0\0\rIHDR\0\0\0!\0\0\0\37\b"
  #"\6\0\0\0i\224\244\262\0\0\0014IDATx\234\355V\321\222\204 \f"
  #"Kw\366\257\313#\374\366\345^\16\266"
  #"\213\324-*\347\313f\306\31\254T\322"
  #"\4\252B\222\270\31O\0\20\221%/\217\326\367xe\374\\{\1H)\205H"
  #"<\333H\36;\323\326\242\255L\22$"
  #"\241\252\227\214\17\221\270\25\177\247\203W"
  #"\3\0U54w\243\204\335Lg\306"
  #"3\370\332\361\265\243\207\220\244\210\204\316"
  #"\366\25\355}\264N\330\16\21ykF\263\227\252\272\304BvT\29\347v/"
  #"\"\215dJ\251\305l<\214\272\223\243"
  #"\273\334\316\35\345\215b\252JUu\327"
  #"\331\265\243W\300\306\373j\253\32\275\347\21U\\;<\2\325\337RJ[0\245"
  #"\364v?C\0000\237r\273\363K)\256\2\226\214\215\35%\320H\220lI\243"
  #"\212\372\205?\305\366\b\364\317r\316/"
  #"%j\325\245\224\303\235o\26\355\264\261+%\332\270<x\5T\213{\2\200\375"
  #"\275\v\274(\202\234\363&\177\217\0\360\17J|\"\0,V\"B\0X\250D"
  #"\224\0\260H\211\332\350\"\4\\\22\221"
  #"D\17\263\4\0\307\2163\230%\0\f\224\260\335\363\ff\224\334(q"
  #"\a~\1:J\263\246q\246\331\367\0\0\0\0IEND\256B`\202"
 ) 0 0 22 3 1 #")"
 0 0 4 29 1 #"\n"
 0 0 22 3 1 #"("
 0 0 15 3 6 #"define"
 0 0 4 3 1 #" "
 0 0 14 3 3 #"tri"
 0 0 4 3 1 #" "
 0 0 22 3 1 #"("
 0 0 14 3 8 #"triangle"
 0 0 4 3 1 #" "
 0 0 20 3 2 #"30"
 0 0 4 3 1 #" "
 0 0 19 3 7 #"\"solid\""
 0 0 4 3 1 #" "
 0 0 19 3 14 #"\"forest green\""
 0 0 22 3 2 #"))"
 0 0 4 29 1 #"\n"
 0 0 14 3 3 #"tri"
 0 0 4 29 1 #"\n"
 0 0 22 3 1 #"("
 0 0 14 3 6 #"rotate"
 0 0 4 3 1 #" "
 0 0 20 3 2 #"90"
 0 0 4 3 1 #" "
 0 0 14 3 3 #"tri"
 0 0 22 3 1 #")"
 0 0 4 29 1 #"\n"
 0 0 22 3 1 #"("
 0 0 14 3 6 #"rotate"
 0 0 4 3 1 #" "
 0 0 20 3 2 #"90"
 0 0 4 3 1 #" "
 0 0 22 3 1 #"("
 0 0 14 3 6 #"rotate"
 0 0 4 3 1 #" "
 0 0 20 3 2 #"90"
 0 0 4 3 1 #" "
 0 0 14 3 3 #"tri"
 0 0 22 3 2 #"))"
 0 0 4 29 1 #"\n"
 0 0 14 3 8 #"calendar"
 0 0 4 29 1 #"\n"
 0 0 22 3 1 #"("
 0 0 14 3 6 #"rotate"
 0 0 4 3 1 #" "
 0 0 20 3 2 #"90"
 0 0 4 3 1 #" "
 0 0 14 3 8 #"calendar"
 0 0 22 3 1 #")"
 0 0 4 29 1 #"\n"
 0 0 22 3 1 #"("
 0 0 14 3 6 #"rotate"
 0 0 4 3 1 #" "
 0 0 20 3 2 #"90"
 0 0 4 3 1 #" "
 0 0 22 3 1 #"("
 0 0 14 3 6 #"rotate"
 0 0 4 3 1 #" "
 0 0 20 3 2 #"90"
 0 0 4 3 1 #" "
 0 0 14 3 8 #"calendar"
 0 0 22 3 2 #"))"
 0           0
 
 --Apple-Mail-2-776972423--
From: Stephen Bloch <sbloch@adelphi.edu>
To: nobody@racket-lang.org, bugs@racket-lang.org,
        bug-notification@racket-lang.org, Stephen Bloch <sbloch@adelphi.edu>
Cc: 
Subject: Re: all/10998: 2htdp/image rotate works differently on bitmaps than on
 other things
Date: Tue, 06 Jul 2010 07:39:57 -0400

 --Apple-Mail-1--538512605
 Content-Transfer-Encoding: 7bit
 Content-Type: text/plain;
 	charset=US-ASCII;
 	delsp=yes;
 	format=flowed
 
 Is anybody looking at this one?  It really is a serious problem, if  
 one wants to use rotate.
 
 (check-expect (rotate -90 (rotate 90 calendar)) calendar)  fails
 (check-expect (rotate -90 (rotate 90 calendar)) (rotate 180  
 calendar)) passes
 
 And an even weirder thing happens if you repeat the first of those  
 test cases several times: after the first time, it says the "expected  
 value" is a blank image.  It hasn't actually mutated calendar,  
 because the "actual value" keeps coming out as a calendar (albeit  
 incorrectly rotated).
 
 BTW, it's not a 90-degree special case: the same thing happens with  
 30's in place of the 90's.
 
 
 Stephen Bloch
 sbloch@adelphi.edu
 
 
 
 
 --Apple-Mail-1--538512605
 Content-Transfer-Encoding: quoted-printable
 Content-Type: text/html;
 	charset=US-ASCII
 
 <html><body style=3D"word-wrap: break-word; -webkit-nbsp-mode: space; =
 -webkit-line-break: after-white-space; ">
 <div style=3D"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; =
 margin-left: 0px; ">Is anybody looking at this one? &nbsp;It really is a =
 serious problem, if one wants to use rotate.</div><div =
 style=3D"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; =
 margin-left: 0px; "><br></div><div style=3D"margin-top: 0px; =
 margin-right: 0px; margin-bottom: 0px; margin-left: 0px; ">(check-expect =
 (rotate -90 (rotate 90 calendar)) calendar) &nbsp;fails</div><div =
 style=3D"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; =
 margin-left: 0px; ">(check-expect (rotate -90 (rotate 90 calendar)) =
 (rotate 180 calendar)) passes</div><div style=3D"margin-top: 0px; =
 margin-right: 0px; margin-bottom: 0px; margin-left: 0px; =
 "><br></div><div style=3D"margin-top: 0px; margin-right: 0px; =
 margin-bottom: 0px; margin-left: 0px; ">And an even weirder thing =
 happens if you repeat the first of those test cases several times: after =
 the first time, it says the "expected value" is a blank image. &nbsp;It =
 hasn't actually mutated calendar, because the "actual value" keeps =
 coming out as a calendar (albeit incorrectly rotated).</div><div =
 style=3D"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; =
 margin-left: 0px; "><br></div><div style=3D"margin-top: 0px; =
 margin-right: 0px; margin-bottom: 0px; margin-left: 0px; ">BTW, it's not =
 a 90-degree special case: the same thing happens with 30's in place of =
 the 90's.</div> <br><br><div> <span class=3D"Apple-style-span" =
 style=3D"border-collapse: separate; color: rgb(0, 0, 0); font-family: =
 Helvetica; font-size: 12px; font-style: normal; font-variant: normal; =
 font-weight: normal; letter-spacing: normal; line-height: normal; =
 orphans: 2; text-align: auto; text-indent: 0px; text-transform: none; =
 white-space: normal; widows: 2; word-spacing: 0px; =
 -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: =
 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: =
 auto; -webkit-text-stroke-width: 0; "><div>Stephen Bloch</div><div><a =
 href=3D"mailto:sbloch@adelphi.edu">sbloch@adelphi.edu</a></div><div><br =
 class=3D"webkit-block-placeholder"></div></span><br =
 class=3D"Apple-interchange-newline"> </div><br></body></html>=
 
 --Apple-Mail-1--538512605--
From: Robby Findler <robby@eecs.northwestern.edu>
To: Stephen Bloch <sbloch@adelphi.edu>
Cc: bugs@racket-lang.org
Subject: Re: all/10998: 2htdp/image rotate works differently on bitmaps than 
	on other things
Date: Tue, 6 Jul 2010 09:58:41 -0500

 I'm sorry, I haven't had time. There is probably a negative sign
 somewhere or something that needs to get put in or removed. I won't
 have time for a few weeks probably, but if you want to submit a patch,
 I'll gladly take it.
 
 Thanks,
 Robby
 
 On Tue, Jul 6, 2010 at 6:39 AM, Stephen Bloch <sbloch@adelphi.edu> wrote:
 > Is anybody looking at this one? =C2=A0It really is a serious problem, if =
 one
 > wants to use rotate.
 > (check-expect (rotate -90 (rotate 90 calendar)) calendar) =C2=A0fails
 > (check-expect (rotate -90 (rotate 90 calendar)) (rotate 180 calendar))
 > passes
 > And an even weirder thing happens if you repeat the first of those test
 > cases several times: after the first time, it says the "expected value" i=
 s a
 > blank image. =C2=A0It hasn't actually mutated calendar, because the "actu=
 al
 > value" keeps coming out as a calendar (albeit incorrectly rotated).
 > BTW, it's not a 90-degree special case: the same thing happens with 30's =
 in
 > place of the 90's.
 >
 > Stephen Bloch
 > sbloch@adelphi.edu
 >
 >
 >
From: Stephen Bloch <sbloch@adelphi.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: "bugs@racket-lang.org" <bugs@racket-lang.org>
Subject: Re: all/10998: 2htdp/image rotate works differently on bitmaps than
 on other things
Date: Tue, 06 Jul 2010 15:51:27 -0400

 > I'm sorry, I haven't had time. There is probably a negative sign
 > somewhere or something that needs to get put in or removed.
 
 Yes, that's what I figured.
 
 > I won't have time for a few weeks probably, but if you want to submit a pa=
 tch, I'll gladly take it.
 
 I'll take a look for something obvious, but I'm really busy for the next thr=
 ee weeks too. OTOH, this affects the usability of many examples in my book, s=
 o I probably care about it more than anyone else does. :-)
 
 Steve=
Responsible changed from "nobody" to "robby" by robby@racket-lang.org at Tue, 06 Jul 2010 16:26:41 -0400
Reason>>> A commit by robby@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/a5d969607b
State changed from "open" to "closed" by robby@racket-lang.org at Tue, 06 Jul 2010 16:26:41 -0400
Reason>>> A commit by robby@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/a5d969607b
From: Robby Findler <robby@eecs.northwestern.edu>
To: bugs@racket-lang.org
Cc: Stephen Bloch <sbloch@adelphi.edu>
Subject: Re: [racket-bug] all/10998 2htdp/image rotate works differently on 
	bitmaps than on other things
Date: Tue, 6 Jul 2010 15:27:18 -0500

 I found some time (most of which was spent on formulating a test case;
 the fix was trivial).
 
 Robby
 
 On Tue, Jul 6, 2010 at 3:26 PM,  <robby@racket-lang.org> wrote:
 >
 > Responsible changed from "nobody" to "robby" by robby@racket-lang.org at =
 Tue, 06 Jul 2010 16:26:41 -0400
 > Reason>>> A commit by robby@racket-lang.org has resolved this report
 > =C2=A0http://git.racket-lang.org/plt/commit/a5d969607b
 > State changed from "open" to "closed" by robby@racket-lang.org at Tue, 06=
  Jul 2010 16:26:41 -0400
 > Reason>>> A commit by robby@racket-lang.org has resolved this report
 > =C2=A0http://git.racket-lang.org/plt/commit/a5d969607b
 >
 > View:
 > =C2=A0http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D10998
 >
 >

----------
A commit by robby@racket-lang.org was marked as relevant
  http://git.racket-lang.org/plt/commit/070a39d902
From: Robby Findler <robby@eecs.northwestern.edu>
To: Stephen Bloch <sbloch@adelphi.edu>
Cc: bugs@plt-scheme.org
Subject: Re: [racket-bug] all/10998 2htdp/image rotate works differently on 
	bitmaps than on other things
Date: Wed, 7 Jul 2010 15:10:43 -0500

 Thanks, fixed.
 
 Robby
 
 On Wed, Jul 7, 2010 at 1:06 PM, Stephen Bloch <sbloch@adelphi.edu> wrote:
 > BTW, another minor image bug: although most of the 2htdp/image primitives=
  accept either a color or a color-name, text doesn't. =C2=A0It's an especia=
 lly annoying problem because it freezes DrRacket: I can't run, can't stop, =
 can't close the window, can't quit DrR.
 >
 > I think it can be fixed at line 729 of image-core.rkt:
 > (or (and (color? text-color) text-color)
 > =C2=A0 =C2=A0(send the-color-database ...
 > However, I haven't successfully tested that patch. =C2=A0(I made the chan=
 ge, saved and quit, ran "raco setup", re-started DrR, and tried again: same=
  error and freeze.)
 >
 > Steve
 >
