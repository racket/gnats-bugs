From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Wed May 22 19:29:53 2013
Received: from mail-ob0-f170.google.com (mail-ob0-f170.google.com [209.85.214.170])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id r4MNTowQ015937
	for <bugs@bugs.plt-scheme.org>; Wed, 22 May 2013 19:29:50 -0400
Message-Id: <201305222329.r4MNThE0015930@champlain.ccs.neu.edu>
Date: Wed, 22 May 2013 19:29:43 -0400
From: codygman.consulting@gmail.com
To: bugs@racket-lang.org
Subject: Dr Racket crashes trying to debug program

>Number:         13770
>Category:       all
>Synopsis:       Dr Racket crashes trying to debug program
>Class:          sw-bug
>Responsible:    nobody
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Wed May 22 19:32:01 -0400 2013
>Last-Modified:  Wed May 22 23:36:01 -0400 2013
>Originator:     Cody Goodman
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.3.3
>Environment:
windows "Windows NT 6.2 (Build 9200)" (win32\x86_64\3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 220065156
Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()
Planet2 (show):
Installation-wide:
 [none]
User-specific, all-version:
 [none]
User-specific, version-specific:
 [none]



Collections:
("C:\\Users\\cody\\AppData\\Roaming\\Racket\\5.3.3\\collects"
 (non-existent-path))
("C:\\Program Files\\Racket\\collects"
 ("2htdp" "algol60" "at-exp" "browser" "compatibility" "compiler" "config" "data" "datalog" "db" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "future-visualizer" "games" "graphics" "gui-debugger" "help" "hierlist" "htdp" "html" "icons" "images" "info-domain" "json" "lang" "launcher" "lazy" "macro-debugger" "make" "math" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "picturing-programs" "plai" "planet" "planet2" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "redex" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-engine" "texpict" "trace" "typed" "typed-racket" "typed-scheme" "unstable" "version" "web-server" "wxme" "xml" "xrepl"))

Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((main) (test))))
>Description:
While trying to debug a program, Dr. Racket "stopped working" and crashed soon after.
>How-To-Repeat:
paste the code below in new racket file, save it, then click "Debug":

#lang racket
(require json)
(require net/url)
(require db)

; Reads results from omdb api according to read-func
(define (get-omdb query read-func)
  (let
      ([uri (string->url (string-append "http://omdbapi.com/?t=" query))])
    (call/input-url uri get-pure-port read-func)))

(define (show-movie-info title)
  (let
      ([search-result (get-omdb title read-json)])
    (displayln (format "Movie: ~a" (hash-ref search-result 'Title)))
    (displayln (format "Runtime: ~a" (hash-ref search-result 'Runtime)))
    (displayln (format "Cast: ~a\n" (hash-ref search-result 'Actors)))))

 
(define movies '("inception" "The dark knight rises" "fight club" "The Great Gatsby"
                        "iron man 3" "avatar" "21" "Lion King"))

;(for ([movie movies]) (thread (lambda () (show-movie-info movie))))

(let ([results (for ([movie movies]) (thread (lambda() (get-omdb movie read-json))))])
  (for-each show-movie-info results))
>Fix:
>Audit-Trail:
From: Robby Findler <robby@eecs.northwestern.edu>
To: codygman.consulting@gmail.com, bugs <bugs@racket-lang.org>
Cc: nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/13770: Dr Racket crashes trying to debug program
Date: Wed, 22 May 2013 22:09:28 -0500

 --089e013c68a0af446304dd5a0259
 Content-Type: text/plain; charset=UTF-8
 
 FWIW, I get this (on a mac):
 
 Welcome to DrRacket, version 5.3.4.10--2013-05-20(d1fb3e2c/d) [3m].
 Language: racket [custom]; memory limit: 128 MB.
 . . for-each: contract violation
   expected: list?
   given: #<void>
   argument position: 2nd
   other arguments...:
    #<procedure:show-movie-info>
 >
 
 
 On Wed, May 22, 2013 at 6:32 PM, <codygman.consulting@gmail.com> wrote:
 
 > A new problem report is waiting at
 >   http://bugs.racket-lang.org/query/?cmd=view&pr=13770
 >
 > Reported by Cody Goodman for release: 5.3.3
 >
 > *** Description:
 > While trying to debug a program, Dr. Racket "stopped working" and crashed
 > soon after.
 >
 > *** How to repeat:
 > paste the code below in new racket file, save it, then click "Debug":
 >
 > #lang racket
 > (require json)
 > (require net/url)
 > (require db)
 >
 > ; Reads results from omdb api according to read-func
 > (define (get-omdb query read-func)
 >   (let
 >       ([uri (string->url (string-append "http://omdbapi.com/?t=" query))])
 >     (call/input-url uri get-pure-port read-func)))
 >
 > (define (show-movie-info title)
 >   (let
 >       ([search-result (get-omdb title read-json)])
 >     (displayln (format "Movie: ~a" (hash-ref search-result 'Title)))
 >     (displayln (format "Runtime: ~a" (hash-ref search-result 'Runtime)))
 >     (displayln (format "Cast: ~a\n" (hash-ref search-result 'Actors)))))
 >
 >
 > (define movies '("inception" "The dark knight rises" "fight club" "The
 > Great Gatsby"
 >                         "iron man 3" "avatar" "21" "Lion King"))
 >
 > ;(for ([movie movies]) (thread (lambda () (show-movie-info movie))))
 >
 > (let ([results (for ([movie movies]) (thread (lambda() (get-omdb movie
 > read-json))))])
 >   (for-each show-movie-info results))
 >
 > *** Environment:
 > windows "Windows NT 6.2 (Build 9200)" (win32\x86_64\3m)
 > (get-display-depth) = 32
 > Human Language: english
 > (current-memory-use) 220065156
 > Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = ();
 > (links #:user? #f #:root? #t) = ()
 > Planet2 (show):
 > Installation-wide:
 >  [none]
 > User-specific, all-version:
 >  [none]
 > User-specific, version-specific:
 >  [none]
 >
 >
 >
 > Collections:
 > ("C:\\Users\\cody\\AppData\\Roaming\\Racket\\5.3.3\\collects"
 >  (non-existent-path))
 > ("C:\\Program Files\\Racket\\collects"
 >  ("2htdp" "algol60" "at-exp" "browser" "compatibility" "compiler" "config"
 > "data" "datalog" "db" "defaults" "deinprogramm" "drracket" "drscheme"
 > "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework"
 > "frtime" "future-visualizer" "games" "graphics" "gui-debugger" "help"
 > "hierlist" "htdp" "html" "icons" "images" "info-domain" "json" "lang"
 > "launcher" "lazy" "macro-debugger" "make" "math" "mred" "mrlib" "mysterx"
 > "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools"
 > "picturing-programs" "plai" "planet" "planet2" "plot" "preprocessor"
 > "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader"
 > "readline" "redex" "rnrs" "s-exp" "scheme" "schemeunit" "scribble"
 > "scribblings" "scriblib" "setup" "sgl" "slatex" "slideshow" "srfi"
 > "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack"
 > "test-engine" "texpict" "trace" "typed" "typed-racket" "typed-scheme"
 > "unstable" "version" "web-server" "wxme" "xml" "xrepl"))
 >
 > Computer Language: (("Determine language from source") (#(#t print
 > mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((main)
 > (test))))
 >
 >
 
 --089e013c68a0af446304dd5a0259
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 <div dir=3D"ltr">FWIW, I get this (on a mac):<div><br></div><div><div>Welco=
 me to DrRacket, version 5.3.4.10--2013-05-20(d1fb3e2c/d) [3m].</div><div>La=
 nguage: racket [custom]; memory limit: 128 MB.</div><div>. . for-each: cont=
 ract violation</div>
 <div>=C2=A0 expected: list?</div><div>=C2=A0 given: #&lt;void&gt;</div><div=
 >=C2=A0 argument position: 2nd</div><div>=C2=A0 other arguments...:</div><d=
 iv>=C2=A0 =C2=A0#&lt;procedure:show-movie-info&gt;</div><div>&gt;=C2=A0</di=
 v></div></div><div class=3D"gmail_extra">
 <br><br><div class=3D"gmail_quote">On Wed, May 22, 2013 at 6:32 PM,  <span =
 dir=3D"ltr">&lt;<a href=3D"mailto:codygman.consulting@gmail.com" target=3D"=
 _blank">codygman.consulting@gmail.com</a>&gt;</span> wrote:<br><blockquote =
 class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1px #ccc solid=
 ;padding-left:1ex">
 A new problem report is waiting at<br>
 =C2=A0 <a href=3D"http://bugs.racket-lang.org/query/?cmd=3Dview&amp;pr=3D13=
 770" target=3D"_blank">http://bugs.racket-lang.org/query/?cmd=3Dview&amp;pr=
 =3D13770</a><br>
 <br>
 Reported by Cody Goodman for release: 5.3.3<br>
 <br>
 *** Description:<br>
 While trying to debug a program, Dr. Racket &quot;stopped working&quot; and=
  crashed soon after.<br>
 <br>
 *** How to repeat:<br>
 paste the code below in new racket file, save it, then click &quot;Debug&qu=
 ot;:<br>
 <br>
 #lang racket<br>
 (require json)<br>
 (require net/url)<br>
 (require db)<br>
 <br>
 ; Reads results from omdb api according to read-func<br>
 (define (get-omdb query read-func)<br>
 =C2=A0 (let<br>
 =C2=A0 =C2=A0 =C2=A0 ([uri (string-&gt;url (string-append &quot;<a href=3D"=
 http://omdbapi.com/?t=3D" target=3D"_blank">http://omdbapi.com/?t=3D</a>&qu=
 ot; query))])<br>
 =C2=A0 =C2=A0 (call/input-url uri get-pure-port read-func)))<br>
 <br>
 (define (show-movie-info title)<br>
 =C2=A0 (let<br>
 =C2=A0 =C2=A0 =C2=A0 ([search-result (get-omdb title read-json)])<br>
 =C2=A0 =C2=A0 (displayln (format &quot;Movie: ~a&quot; (hash-ref search-res=
 ult &#39;Title)))<br>
 =C2=A0 =C2=A0 (displayln (format &quot;Runtime: ~a&quot; (hash-ref search-r=
 esult &#39;Runtime)))<br>
 =C2=A0 =C2=A0 (displayln (format &quot;Cast: ~a\n&quot; (hash-ref search-re=
 sult &#39;Actors)))))<br>
 <br>
 <br>
 (define movies &#39;(&quot;inception&quot; &quot;The dark knight rises&quot=
 ; &quot;fight club&quot; &quot;The Great Gatsby&quot;<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
 =A0 =C2=A0 &quot;iron man 3&quot; &quot;avatar&quot; &quot;21&quot; &quot;L=
 ion King&quot;))<br>
 <br>
 ;(for ([movie movies]) (thread (lambda () (show-movie-info movie))))<br>
 <br>
 (let ([results (for ([movie movies]) (thread (lambda() (get-omdb movie read=
 -json))))])<br>
 =C2=A0 (for-each show-movie-info results))<br>
 <br>
 *** Environment:<br>
 windows &quot;Windows NT 6.2 (Build 9200)&quot; (win32\x86_64\3m) (get-disp=
 lay-depth) =3D 32<br>
 Human Language: english<br>
 (current-memory-use) 220065156<br>
 Links: (links) =3D (); (links #:user? #f) =3D (); (links #:root? #t) =3D ()=
 ; (links #:user? #f #:root? #t) =3D ()<br>
 Planet2 (show):<br>
 Installation-wide:<br>
 =C2=A0[none]<br>
 User-specific, all-version:<br>
 =C2=A0[none]<br>
 User-specific, version-specific:<br>
 =C2=A0[none]<br>
 <br>
 <br>
 <br>
 Collections:<br>
 (&quot;C:\\Users\\cody\\AppData\\Roaming\\Racket\\5.3.3\\collects&quot;<br>
 =C2=A0(non-existent-path))<br>
 (&quot;C:\\Program Files\\Racket\\collects&quot;<br>
 =C2=A0(&quot;2htdp&quot; &quot;algol60&quot; &quot;at-exp&quot; &quot;brows=
 er&quot; &quot;compatibility&quot; &quot;compiler&quot; &quot;config&quot; =
 &quot;data&quot; &quot;datalog&quot; &quot;db&quot; &quot;defaults&quot; &q=
 uot;deinprogramm&quot; &quot;drracket&quot; &quot;drscheme&quot; &quot;dyne=
 xt&quot; &quot;embedded-gui&quot; &quot;eopl&quot; &quot;errortrace&quot; &=
 quot;ffi&quot; &quot;file&quot; &quot;framework&quot; &quot;frtime&quot; &q=
 uot;future-visualizer&quot; &quot;games&quot; &quot;graphics&quot; &quot;gu=
 i-debugger&quot; &quot;help&quot; &quot;hierlist&quot; &quot;htdp&quot; &qu=
 ot;html&quot; &quot;icons&quot; &quot;images&quot; &quot;info-domain&quot; =
 &quot;json&quot; &quot;lang&quot; &quot;launcher&quot; &quot;lazy&quot; &qu=
 ot;macro-debugger&quot; &quot;make&quot; &quot;math&quot; &quot;mred&quot; =
 &quot;mrlib&quot; &quot;mysterx&quot; &quot;mzcom&quot; &quot;mzlib&quot; &=
 quot;mzscheme&quot; &quot;net&quot; &quot;openssl&quot; &quot;parser-tools&=
 quot; &quot;picturing-programs&quot; &quot;plai&quot; &quot;planet&quot; &q=
 uot;planet2&quot; &quot;plot&quot; &quot;preprocessor&quot; &quot;profile&q=
 uot; &quot;r5rs&quot; &quot;r6rs&quot; &quot;racket&quot; &quot;racklog&quo=
 t; &quot;rackunit&quot; &quot;raco&quot; &quot;reader&quot; &quot;readline&=
 quot; &quot;redex&quot; &quot;rnrs&quot; &quot;s-exp&quot; &quot;scheme&quo=
 t; &quot;schemeunit&quot; &quot;scribble&quot; &quot;scribblings&quot; &quo=
 t;scriblib&quot; &quot;setup&quot; &quot;sgl&quot; &quot;slatex&quot; &quot=
 ;slideshow&quot; &quot;srfi&quot; &quot;stepper&quot; &quot;string-constant=
 s&quot; &quot;swindle&quot; &quot;syntax&quot; &quot;syntax-color&quot; &qu=
 ot;teachpack&quot; &quot;test-engine&quot; &quot;texpict&quot; &quot;trace&=
 quot; &quot;typed&quot; &quot;typed-racket&quot; &quot;typed-scheme&quot; &=
 quot;unstable&quot; &quot;version&quot; &quot;web-server&quot; &quot;wxme&q=
 uot; &quot;xml&quot; &quot;xrepl&quot;))<br>
 
 <br>
 Computer Language: ((&quot;Determine language from source&quot;) (#(#t prin=
 t mixed-fraction-e #f #t debug) (default) #() &quot;#lang racket\n&quot; #t=
  #t ((main) (test))))<br>
 <br>
 </blockquote></div><br></div>
 
 --089e013c68a0af446304dd5a0259--
From: Matthew Flatt <mflatt@cs.utah.edu>
To: codygman.consulting@gmail.com, bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/13770: Dr Racket crashes trying to debug program
Date: Wed, 22 May 2013 21:32:25 -0600

 Can you try the latest release, version 5.3.4?
 
 Version 5.3.3 had problems specifically on 64-bit Windows, and the
 problem could be triggered by "Run" or "Debug".
 
 At Wed, 22 May 2013 19:32:01 -0400, codygman.consulting@gmail.com wrote:
 > A new problem report is waiting at
 >   http://bugs.racket-lang.org/query/?cmd=view&pr=13770
 > 
 > Reported by Cody Goodman for release: 5.3.3
 > 
 > *** Description:
 > While trying to debug a program, Dr. Racket "stopped working" and crashed soon 
 > after.
 > 
 > *** How to repeat:
 > paste the code below in new racket file, save it, then click "Debug":
 > 
 > #lang racket
 > (require json)
 > (require net/url)
 > (require db)
 > 
 > ; Reads results from omdb api according to read-func
 > (define (get-omdb query read-func)
 >   (let
 >       ([uri (string->url (string-append "http://omdbapi.com/?t=" query))])
 >     (call/input-url uri get-pure-port read-func)))
 > 
 > (define (show-movie-info title)
 >   (let
 >       ([search-result (get-omdb title read-json)])
 >     (displayln (format "Movie: ~a" (hash-ref search-result 'Title)))
 >     (displayln (format "Runtime: ~a" (hash-ref search-result 'Runtime)))
 >     (displayln (format "Cast: ~a\n" (hash-ref search-result 'Actors)))))
 > 
 >  
 > (define movies '("inception" "The dark knight rises" "fight club" "The Great 
 > Gatsby"
 >                         "iron man 3" "avatar" "21" "Lion King"))
 > 
 > ;(for ([movie movies]) (thread (lambda () (show-movie-info movie))))
 > 
 > (let ([results (for ([movie movies]) (thread (lambda() (get-omdb movie 
 > read-json))))])
 >   (for-each show-movie-info results))
 > 
 > *** Environment:
 > windows "Windows NT 6.2 (Build 9200)" (win32\x86_64\3m) (get-display-depth) = 
 > 32
 > Human Language: english
 > (current-memory-use) 220065156
 > Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); (links 
 > #:user? #f #:root? #t) = ()
 > Planet2 (show):
 > Installation-wide:
 >  [none]
 > User-specific, all-version:
 >  [none]
 > User-specific, version-specific:
 >  [none]
 > 
 > 
 > 
 > Collections:
 > ("C:\\Users\\cody\\AppData\\Roaming\\Racket\\5.3.3\\collects"
 >  (non-existent-path))
 > ("C:\\Program Files\\Racket\\collects"
 >  ("2htdp" "algol60" "at-exp" "browser" "compatibility" "compiler" "config" 
 > "data" "datalog" "db" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" 
 > "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" 
 > "future-visualizer" "games" "graphics" "gui-debugger" "help" "hierlist" "htdp" 
 > "html" "icons" "images" "info-domain" "json" "lang" "launcher" "lazy" 
 > "macro-debugger" "make" "math" "mred" "mrlib" "mysterx" "mzcom" "mzlib" 
 > "mzscheme" "net" "openssl" "parser-tools" "picturing-programs" "plai" "planet" 
 > "planet2" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" 
 > "rackunit" "raco" "reader" "readline" "redex" "rnrs" "s-exp" "scheme" 
 > "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "slatex" 
 > "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" 
 > "syntax-color" "teachpack" "test-engine" "texpict" "trace" "typed" 
 > "typed-racket" "typed-scheme" "unstable" "version" "web-server" "wxme" "xml" 
 > "xrepl"))
 > 
 > Computer Language: (("Determine language from source") (#(#t print 
 > mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((main) 
 > (test))))
