From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Wed Dec  5 03:08:40 2012
Received: from mail-ie0-f176.google.com (mail-ie0-f176.google.com [209.85.223.176])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id qB588ar1024138
	for <bugs@bugs.plt-scheme.org>; Wed, 5 Dec 2012 03:08:36 -0500
Message-Id: <201212050808.qB588XUC024132@champlain.ccs.neu.edu>
Date: Wed, 5 Dec 2012 03:08:33 -0500
From: dvanhorn@ccs.neu.edu
To: bugs@racket-lang.org
Subject: Redex: Problems rendering extended and unioned reduction relations

>Number:         13346
>Category:       all
>Synopsis:       Redex: Problems rendering extended and unioned reduction relations
>Class:          sw-bug
>Responsible:    robby
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Wed Dec 05 03:12:01 -0500 2012
>Closed-Date:    Wed May 01 18:37:56 -0400 2013
>Last-Modified:  Wed May 01 18:40:01 -0400 2013
>Originator:     David Van Horn
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.3.1.9--2012-12-03(5163d424/d)
>Environment:
macosx "Darwin doom.local 12.2.0 Darwin Kernel Version 12.2.0: Sat Aug 25 00:48:52 PDT 2012; root:xnu-2050.18.24~1/RELEASE_X86_64 x86_64" (x86_64-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 438072864
Links: (links) = ("tests" "raco-git" "eqil" "var" "class"); (links #:user? #f) = (); (links #:root? #t) = (#<path:/Users/dvanhorn/Documents/git/ralist> #<path:/Users/dvanhorn/Documents/git/fector> #<path:/Users/dvanhorn/Documents/git/pcf>); (links #:user? #f #:root? #t) = ()


Collections:
("/Users/dvanhorn/Library/Racket/5.3.1.9/collects"
 ("info-domain"))
("/Users/dvanhorn/Documents/git/racket/collects"
 (".gitignore" "2htdp" "algol60" "at-exp" "browser" "compatibility" "compiler" "config" "data" "datalog" "db" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "future-visualizer" "games" "graphics" "gui-debugger" "handin-client" "handin-server" "help" "hierlist" "honu" "htdp" "html" "icons" "images" "info-domain" "json" "lang" "launcher" "lazy" "macro-debugger" "make" "math" "meta" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "picturing-programs" "plai" "planet" "planet2" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "redex" "repo-time-stamp" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "sirmail" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-engine" "tests" "texpict" "trace" "typed" "typed-racket" "type!
 d-scheme" "unstable" "version" "web-server" "wxme" "xml" "xrepl"))

Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((main) (test))))
>Description:
Rendering an extended reduction relation causes an
internal error caused by `(max)'.

Rendering the union of an extended reduction relation
and some other relation renders only the other relation.
>How-To-Repeat:
#lang racket
(require redex)
(define-language L (A number))
(define-extended-language M L (A .... string))

(define r 
  (reduction-relation L #:domain A
                      (--> number number)))

(define s
  (reduction-relation M #:domain A
                      (--> string number)))

;; only renders s
(render-reduction-relation
 (union-reduction-relations
  s
  (extend-reduction-relation r M)))

;; crash on (max)
(render-reduction-relation
 (extend-reduction-relation r M))
>Fix:
>Audit-Trail:
Responsible changed from "nobody" to "robby" by robby@racket-lang.org at Wed, 01 May 2013 18:37:56 -0400
Reason>>> A commit by robby@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/7611e295f4
State changed from "open" to "closed" by robby@racket-lang.org at Wed, 01 May 2013 18:37:56 -0400
Reason>>> A commit by robby@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/7611e295f4
  | fix typesetting for empty reduction relations
  | 
  | closes PR 13346


----------
A commit by robby@racket-lang.org was marked as relevant
  http://git.racket-lang.org/plt/commit/79e10348b3
  | add an error check
  | 
  | related to PR 13346

From: Robby Findler <robby@eecs.northwestern.edu>
To: "dvanhorn@ccs.neu.edu" <dvanhorn@ccs.neu.edu>,
        "bugs@racket-lang.org" <bugs@racket-lang.org>
Cc: "nobody@racket-lang.org" <nobody@racket-lang.org>,
        "bug-notification@racket-lang.org" <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/13346: Redex: Problems rendering extended and
 unioned reduction relations
Date: Wed, 1 May 2013 17:36:12 -0500

 --089e01229c30c6d8b804dbafbea1
 Content-Type: text/plain; charset=UTF-8
 
 Typesetting of extended reduction relations typesets only the extension,
 not the original rules (typeset the original for that).
 
 I'll push a fix for the other aspects of this pr, tho.
 
 Thanks for the report!
 
 Robby
 
 On Wednesday, December 5, 2012, wrote:
 
 > A new problem report is waiting at
 >   http://bugs.racket-lang.org/query/?cmd=view&pr=13346
 >
 > Reported by David Van Horn for release: 5.3.1.9--2012-12-03(5163d424/d)
 >
 > *** Description:
 > Rendering an extended reduction relation causes an
 > internal error caused by `(max)'.
 >
 > Rendering the union of an extended reduction relation
 > and some other relation renders only the other relation.
 >
 > *** How to repeat:
 > #lang racket
 > (require redex)
 > (define-language L (A number))
 > (define-extended-language M L (A .... string))
 >
 > (define r
 >   (reduction-relation L #:domain A
 >                       (--> number number)))
 >
 > (define s
 >   (reduction-relation M #:domain A
 >                       (--> string number)))
 >
 > ;; only renders s
 > (render-reduction-relation
 >  (union-reduction-relations
 >   s
 >   (extend-reduction-relation r M)))
 >
 > ;; crash on (max)
 > (render-reduction-relation
 >  (extend-reduction-relation r M))
 >
 > *** Environment:
 > macosx "Darwin doom.local 12.2.0 Darwin Kernel Version 12.2.0: Sat Aug 25
 > 00:48:52 PDT 2012; root:xnu-2050.18.24~1/RELEASE_X86_64 x86_64"
 > (x86_64-macosx/3m) (get-display-depth) = 32
 > Human Language: english
 > (current-memory-use) 438072864
 > Links: (links) = ("tests" "raco-git" "eqil" "var" "class"); (links #:user?
 > #f) = (); (links #:root? #t) =
 > (#<path:/Users/dvanhorn/Documents/git/ralist>
 > #<path:/Users/dvanhorn/Documents/git/fector>
 > #<path:/Users/dvanhorn/Documents/git/pcf>); (links #:user? #f #:root? #t) =
 > ()
 >
 >
 > Collections:
 > ("/Users/dvanhorn/Library/Racket/5.3.1.9/collects"
 >  ("info-domain"))
 > ("/Users/dvanhorn/Documents/git/racket/collects"
 >  (".gitignore" "2htdp" "algol60" "at-exp" "browser" "compatibility"
 > "compiler" "config" "data" "datalog" "db" "defaults" "deinprogramm"
 > "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi"
 > "file" "framework" "frtime" "future-visualizer" "games" "graphics"
 > "gui-debugger" "handin-client" "handin-server" "help" "hierlist" "honu"
 > "htdp" "html" "icons" "images" "info-domain" "json" "lang" "launcher"
 > "lazy" "macro-debugger" "make" "math" "meta" "mred" "mrlib" "mysterx"
 > "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools"
 > "picturing-programs" "plai" "planet" "planet2" "plot" "preprocessor"
 > "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader"
 > "readline" "redex" "repo-time-stamp" "rnrs" "s-exp" "scheme" "schemeunit"
 > "scribble" "scribblings" "scriblib" "setup" "sgl" "sirmail" "slatex"
 > "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax"
 > "syntax-color" "teachpack" "test-engine" "tests" "texpict" "trace" "typed"
 > "typed-racket" "type!
 >  d-scheme" "unstable" "version" "web-server" "wxme" "xml" "xrepl"))
 >
 > Computer Language: (("Determine language from source") (#(#t print
 > mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((main)
 > (test))))
 >
 >
 
 --089e01229c30c6d8b804dbafbea1
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 Typesetting of extended reduction relations typesets only the extension, no=
 t the original rules (typeset the original for that).<div><br></div><div>I&=
 #39;ll push a fix for the other aspects of this pr, tho.</div><div><br></di=
 v>
 <div>Thanks for the report!</div><div><br></div><div>Robby<br><br>On Wednes=
 day, December 5, 2012,   wrote:<br><blockquote class=3D"gmail_quote" style=
 =3D"margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">A new pr=
 oblem report is waiting at<br>
 
 =C2=A0 <a href=3D"http://bugs.racket-lang.org/query/?cmd=3Dview&amp;pr=3D13=
 346" target=3D"_blank">http://bugs.racket-lang.org/query/?cmd=3Dview&amp;pr=
 =3D13346</a><br>
 <br>
 Reported by David Van Horn for release: 5.3.1.9--2012-12-03(5163d424/d)<br>
 <br>
 *** Description:<br>
 Rendering an extended reduction relation causes an<br>
 internal error caused by `(max)&#39;.<br>
 <br>
 Rendering the union of an extended reduction relation<br>
 and some other relation renders only the other relation.<br>
 <br>
 *** How to repeat:<br>
 #lang racket<br>
 (require redex)<br>
 (define-language L (A number))<br>
 (define-extended-language M L (A .... string))<br>
 <br>
 (define r<br>
 =C2=A0 (reduction-relation L #:domain A<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
 =A0 (--&gt; number number)))<br>
 <br>
 (define s<br>
 =C2=A0 (reduction-relation M #:domain A<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
 =A0 (--&gt; string number)))<br>
 <br>
 ;; only renders s<br>
 (render-reduction-relation<br>
 =C2=A0(union-reduction-relations<br>
 =C2=A0 s<br>
 =C2=A0 (extend-reduction-relation r M)))<br>
 <br>
 ;; crash on (max)<br>
 (render-reduction-relation<br>
 =C2=A0(extend-reduction-relation r M))<br>
 <br>
 *** Environment:<br>
 macosx &quot;Darwin doom.local 12.2.0 Darwin Kernel Version 12.2.0: Sat Aug=
  25 00:48:52 PDT 2012; root:xnu-2050.18.24~1/RELEASE_X86_64 x86_64&quot; (x=
 86_64-macosx/3m) (get-display-depth) =3D 32<br>
 Human Language: english<br>
 (current-memory-use) 438072864<br>
 Links: (links) =3D (&quot;tests&quot; &quot;raco-git&quot; &quot;eqil&quot;=
  &quot;var&quot; &quot;class&quot;); (links #:user? #f) =3D (); (links #:ro=
 ot? #t) =3D (#&lt;path:/Users/dvanhorn/Documents/git/ralist&gt; #&lt;path:/=
 Users/dvanhorn/Documents/git/fector&gt; #&lt;path:/Users/dvanhorn/Documents=
 /git/pcf&gt;); (links #:user? #f #:root? #t) =3D ()<br>
 
 <br>
 <br>
 Collections:<br>
 (&quot;/Users/dvanhorn/Library/Racket/<a href=3D"http://5.3.1.9/collects" t=
 arget=3D"_blank">5.3.1.9/collects</a>&quot;<br>
 =C2=A0(&quot;info-domain&quot;))<br>
 (&quot;/Users/dvanhorn/Documents/git/racket/collects&quot;<br>
 =C2=A0(&quot;.gitignore&quot; &quot;2htdp&quot; &quot;algol60&quot; &quot;a=
 t-exp&quot; &quot;browser&quot; &quot;compatibility&quot; &quot;compiler&qu=
 ot; &quot;config&quot; &quot;data&quot; &quot;datalog&quot; &quot;db&quot; =
 &quot;defaults&quot; &quot;deinprogramm&quot; &quot;drracket&quot; &quot;dr=
 scheme&quot; &quot;dynext&quot; &quot;embedded-gui&quot; &quot;eopl&quot; &=
 quot;errortrace&quot; &quot;ffi&quot; &quot;file&quot; &quot;framework&quot=
 ; &quot;frtime&quot; &quot;future-visualizer&quot; &quot;games&quot; &quot;=
 graphics&quot; &quot;gui-debugger&quot; &quot;handin-client&quot; &quot;han=
 din-server&quot; &quot;help&quot; &quot;hierlist&quot; &quot;honu&quot; &qu=
 ot;htdp&quot; &quot;html&quot; &quot;icons&quot; &quot;images&quot; &quot;i=
 nfo-domain&quot; &quot;json&quot; &quot;lang&quot; &quot;launcher&quot; &qu=
 ot;lazy&quot; &quot;macro-debugger&quot; &quot;make&quot; &quot;math&quot; =
 &quot;meta&quot; &quot;mred&quot; &quot;mrlib&quot; &quot;mysterx&quot; &qu=
 ot;mzcom&quot; &quot;mzlib&quot; &quot;mzscheme&quot; &quot;net&quot; &quot=
 ;openssl&quot; &quot;parser-tools&quot; &quot;picturing-programs&quot; &quo=
 t;plai&quot; &quot;planet&quot; &quot;planet2&quot; &quot;plot&quot; &quot;=
 preprocessor&quot; &quot;profile&quot; &quot;r5rs&quot; &quot;r6rs&quot; &q=
 uot;racket&quot; &quot;racklog&quot; &quot;rackunit&quot; &quot;raco&quot; =
 &quot;reader&quot; &quot;readline&quot; &quot;redex&quot; &quot;repo-time-s=
 tamp&quot; &quot;rnrs&quot; &quot;s-exp&quot; &quot;scheme&quot; &quot;sche=
 meunit&quot; &quot;scribble&quot; &quot;scribblings&quot; &quot;scriblib&qu=
 ot; &quot;setup&quot; &quot;sgl&quot; &quot;sirmail&quot; &quot;slatex&quot=
 ; &quot;slideshow&quot; &quot;srfi&quot; &quot;stepper&quot; &quot;string-c=
 onstants&quot; &quot;swindle&quot; &quot;syntax&quot; &quot;syntax-color&qu=
 ot; &quot;teachpack&quot; &quot;test-engine&quot; &quot;tests&quot; &quot;t=
 expict&quot; &quot;trace&quot; &quot;typed&quot; &quot;typed-racket&quot; &=
 quot;type!<br>
 
 =C2=A0d-scheme&quot; &quot;unstable&quot; &quot;version&quot; &quot;web-ser=
 ver&quot; &quot;wxme&quot; &quot;xml&quot; &quot;xrepl&quot;))<br>
 <br>
 Computer Language: ((&quot;Determine language from source&quot;) (#(#t prin=
 t mixed-fraction-e #f #t debug) (default) #() &quot;#lang racket\n&quot; #t=
  #t ((main) (test))))<br>
 <br>
 </blockquote></div>
 
 --089e01229c30c6d8b804dbafbea1--
