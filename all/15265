From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Sun Mar  6 16:39:49 2016
Received: from mail-io0-f173.google.com (mail-io0-f173.google.com [209.85.223.173])
	by winooski.ccs.neu.edu (8.14.7/8.14.7) with ESMTP id u26Ldlba003060
	for <bugs@bugs.plt-scheme.org>; Sun, 6 Mar 2016 16:39:47 -0500
Message-Id: <201603062139.u26LdjYv003044@winooski.ccs.neu.edu>
Date: Sun, 6 Mar 2016 16:39:45 -0500
From: eric.n.dobson@gmail.com
To: bugs@racket-lang.org
Subject: set-union has bad error messages

>Number:         15265
>Category:       all
>Synopsis:       set-union has bad error messages
>Class:          sw-bug
>Responsible:    nobody
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Sun Mar 06 16:40:01 -0500 2016
>Originator:     Eric Dobson
>Organization:
plt
>Submitter-Id:   unknown
>Release:        HEAD
>Environment:
MacIntel / Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2593.0 Safari/537.36
>Description:
1st error message:
I expect set union to report error messages in terms of set-union not in-list.
2nd error message:
The sets use the same equivalence predicate (equal?) so that should not be the reason that the call is an error.
>How-To-Repeat:
Welcome to Racket v6.4.0.7.
-> (set-union (list 1 2) (set 3 4))
; in-list: contract violation
;   expected: list?
;   given: (set 3 4)
; [,bt for context]
-> (set-union (set 1 2) (list 1 2))
; set-union: set arguments have incompatible equivalence predicates
;   first set: (set 1 2)
;   incompatible set: '(1 2)
; [,bt for context]
->
>Fix:
