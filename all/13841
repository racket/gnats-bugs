From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Sun Jun  9 14:44:37 2013
Received: from mail-ob0-f177.google.com (mail-ob0-f177.google.com [209.85.214.177])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id r59IiXA4006934
	for <bugs@bugs.plt-scheme.org>; Sun, 9 Jun 2013 14:44:33 -0400
Message-Id: <201306091844.r59IiWs7006929@champlain.ccs.neu.edu>
Date: Sun, 9 Jun 2013 14:44:32 -0400
From: eric.n.dobson@gmail.com
To: bugs@racket-lang.org
Subject: syntax-parse does not provide a good error message when there are not enough terms

>Number:         13841
>Category:       all
>Synopsis:       syntax-parse does not provide a good error message when there are not enough terms
>Class:          sw-bug
>Responsible:    nobody
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Sun Jun 09 14:48:01 -0400 2013
>Originator:     Eric Dobson
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.3.2.3
>Environment:
MacIntel / Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_2) AppleWebKit/537.28 (KHTML, like Gecko) Chrome/26.0.1397.2 Safari/537.28
>Description:
The following program raises a bad-syntax error, but the two uses that are commented out give much better error messages. It seems like syntax-parse could say that it expected more terms after what it had parsed.
>How-To-Repeat:
#lang racket


(require (for-syntax syntax/parse))

(define-syntax foo
  (syntax-parser
    ((_ x:id y:id) #''done)))

(foo x)
;(foo 2)
;(foo x y z)
>Fix:
