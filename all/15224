From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Sun Jan 17 16:58:47 2016
Received: from mail-io0-f171.google.com (mail-io0-f171.google.com [209.85.223.171])
	by winooski.ccs.neu.edu (8.14.7/8.14.7) with ESMTP id u0HLwiK0023689
	for <bugs@bugs.plt-scheme.org>; Sun, 17 Jan 2016 16:58:44 -0500
Message-Id: <201601172158.u0HLwfFA023682@winooski.ccs.neu.edu>
Date: Sun, 17 Jan 2016 16:58:41 -0500
From: matthias@ccs.neu.edu
To: bugs@racket-lang.org
Subject: module browser fails

>Number:         15224
>Category:       all
>Synopsis:       module browser fails
>Class:          sw-bug
>Responsible:    nobody
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Sun Jan 17 17:00:01 -0500 2016
>Last-Modified:  Mon Jan 18 08:12:04 -0500 2016
>Originator:     matthias
>Organization:
plt
>Submitter-Id:   unknown
>Release:        6.4.0.1--2016-01-14(-/f)
>Environment:
macosx "Darwin Texas-2.local 15.2.0 Darwin Kernel Version 15.2.0: Fri Nov 13 19:56:56 PST 2015; root:xnu-3248.20.55~2/RELEASE_X86_64 x86_64" (x86_64-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 732131164
raco pkg (show):
Installation-wide:
 Package                 Checksum           Source
 benchmark               78f36c4e...        catalog...#master
 htdp                    66de3dc3...        clone...path=htdp
 main-distribution       1a0cd523...        catalog...ibution
 main-distribution-test  046a9380...        catalog...on-test
 r-lexer                 a9431308...        catalog...r-lexer
 racket-lib                                 static-link...lib
 unstable                6d2564bf...        catalog...nstable
 [241 auto-installed packages not shown]
User-specific for installation "development":
 [none]



Collections:
("/Users/matthias/0Unison/collects/"
 (".DS_Store" "._.DS_Store" "compiled" "date" "finance" "info-domain" "info.ss" "pdf.ss~" "session" "short" "testing" "tll-collects" "utils" "web"))
("/Users/matthias/Library/Racket/development/collects"
 (non-existent-path))
("/Users/matthias/plt/racket/collects"
 (".gitignore" "acks" "compiler" "data" "db" "dynext" "ffi" "file" "info" "info-domain" "json" "launcher" "net" "openssl" "pkg" "planet" "racket" "raco" "reader" "realm" "s-exp" "setup" "syntax" "version" "xml"))

Recent Internal Errors: 
Computer Language: (("Teaching Languages" "How to Design Programs" "Beginning Student") (#(#t constructor repeating-decimal #f #t none) #f () #f))
>Description:
Running the module browers on a program repeatedly signals this error message: 

Error expanding the program:

read: #lang not enabled in the current context
  (call-with-exception-handler . #(struct:srcloc #<path:/Users/matthias/plt/racket/collects/racket/private/more-scheme.rkt> 265 2 9148 256))
  (#f . #(struct:srcloc #<path:/Users/matthias/plt/racket/share/pkgs/drracket/drracket/private/language.rkt> 132 26 3730 375))
  (sequence->list . #(struct:srcloc #<path:/Users/matthias/plt/racket/collects/racket/sequence.rkt> 41 0 851 50))
  (.../more-scheme.rkt:261:28 . #f)
  (#f . #(struct:srcloc #<path:/Users/matthias/plt/racket/share/pkgs/drracket/drracket/private/eval.rkt> 65 15 3009 537))
  (#f . #(struct:srcloc #<path:/Users/matthias/plt/racket/share/pkgs/gui-lib/mred/private/wx/common/queue.rkt> 454 6 20001 1056))
  (#f . #(struct:srcloc #<path:/Users/matthias/plt/racket/share/pkgs/gui-lib/mred/private/wx/common/queue.rkt> 505 32 21988 120))
  (call-with-break-parameterization . #(struct:srcloc #<path:/Users/matthias/plt/racket/collects/racket/private/more-scheme.rkt> 148 2 4881 517))
  (#f . #(struct:srcloc #<path:/Users/matthias/plt/racket/share/pkgs/gui-lib/mred/private/wx/common/queue.rkt> 396 16 17731 731))

(I'll provide Robby with access to private github repo if needed.)
>How-To-Repeat:

>Fix:
>Audit-Trail:
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: bugs <bugs@racket-lang.org>, nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/15224: module browser fails
Date: Sun, 17 Jan 2016 16:09:16 -0600

 I think it works for some programs. It works for this one, for example:
 
 #lang racket
 
 So it would be helpful to me if you would supply a program.
 
 Robby
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: bugs <bugs@racket-lang.org>, nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/15224: module browser fails
Date: Sun, 17 Jan 2016 21:47:25 -0600

 On Sun, Jan 17, 2016 at 8:50 PM, Matthias Felleisen
 <matthias@ccs.neu.edu> wrote:
 >
 > Weird!!!
 >
 > When I run this in my dr, I get the error:
 >
 > #lang racket
 >
 > ; (struct card (face bulls) #:transparent)
 > ; (define (>-face c d) (> (card-face c) (card-face d)))
 > ; (define (--face c d) (- (card-face c) (card-face d)))
 
 Are the comments important?
 
 I'm not able to reproduce that. I tried "View | Show Module Browser"
 and various different settings in the language dialog.
 
 The stack trace suggests that the read in question is just the normal
 one, as it is about to run your program.
 
 I see some suspiciously different line numbers, however. What is at
 line 132 and the next 20 or so lines in drracket/private/language.rkt
 ?
 
 (My drracket source has the relevant function starting on line 134 and
 that function is what turns on read-accept-reader.)
 
 Robby
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: bugs <bugs@racket-lang.org>, nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/15224: module browser fails
Date: Mon, 18 Jan 2016 07:11:27 -0600

 --94eb2c07cfc89d654105299b7d12
 Content-Type: text/plain; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 Well that line is turning on the thing that the error message says is
 turned off. And I can't reproduce the error. Very mysterious.
 
 Robby
 
 On Sunday, January 17, 2016, Matthias Felleisen <matthias@ccs.neu.edu>
 wrote:
 
 >
 > I tried =E2=80=98refresh=E2=80=9D whittling down the 8 module program to =
 4 and 2 and then
 > 1. Argh.
 >
 >
 > >   (define simple-module-based-language%
 > >     (class* object% (simple-module-based-language<%>)
 > >       (init-field module
 > >                   language-position
 > >                   (language-numbers (map (=CE=BB (x) 0) language-positi=
 on))
 > >                   (one-line-summary #f)
 > >                   (language-url #f)
 > >                   (documentation-reference #f)
 >
 > ;; 132 is right here according to Emacs:
 >
 > >                   (reader (=CE=BB (src port)
 > >                             (let ([v (parameterize ([read-accept-reader
 > #t])
 > >                                         (with-stack-checkpoint
 > >                                          (read-syntax src port)))])
 > >                               (if (eof-object? v)
 > >                                   v
 > >                                   (namespace-syntax-introduce v)))))
 > >                   (language-id (if (pair? language-position)
 > >                                    (car (last-pair language-position))
 > >                                    (error
 > 'simple-module-based-language<%>
 > >                                           "expected non-empty list of
 > strings, got ~e"
 > >                                           language-position))))
 > >       (define/public (get-module) module)
 > >       (define/public (get-language-position) language-position)
 > >       (define/public (get-language-numbers) language-numbers)
 > >       (define/public (get-one-line-summary) one-line-summary)
 > >       (define/public (get-language-url) language-url)
 > >       (define/public (get-reader) reader)
 > >       (super-new)))
 > >
 > >
 > >
 > >   ;; simple-module-based-language->module-based-language :
 > module-based-language<%>
 > >   ;; transforms a simple-module-based-language into a
 > module-based-language<%>
 > >   (define simple-module-based-language->module-based-language-mixin
 > >     (mixin (simple-module-based-language<%>) (module-based-language<%>)
 > >       (define/public (get-transformer-module) 'mzscheme)
 > >       (define/public (use-namespace-require/copy?) #f)
 > >       (define/public (use-namespace-require/copy-from-setting? setting)
 > >         (use-namespace-require/copy?))
 > >       (define/public (use-mred-launcher) #t)
 > >
 > >       (inherit get-module)
 > >       (define/public (marshall-settings settings)
 > >         (simple-settings->vector settings))
 > >       (define/public (unmarshall-settings printable)
 > >         (and (vector? printable)
 > >              (=3D (vector-length printable)
 > >                 (procedure-arity make-simple-settings))
 > >              (boolean? (vector-ref printable 0))
 > >              (memq (vector-ref printable 1) '(constructor quasiquote
 > write trad-write print))
 > >              (memq (vector-ref printable 2)
 >
 >
 >
 >
 > > On Jan 17, 2016, at 10:47 PM, Robby Findler <robby@eecs.northwestern.ed=
 u
 > <javascript:;>> wrote:
 > >
 > > On Sun, Jan 17, 2016 at 8:50 PM, Matthias Felleisen
 > > <matthias@ccs.neu.edu <javascript:;>> wrote:
 > >>
 > >> Weird!!!
 > >>
 > >> When I run this in my dr, I get the error:
 > >>
 > >> #lang racket
 > >>
 > >> ; (struct card (face bulls) #:transparent)
 > >> ; (define (>-face c d) (> (card-face c) (card-face d)))
 > >> ; (define (--face c d) (- (card-face c) (card-face d)))
 > >
 > > Are the comments important?
 > >
 > > I'm not able to reproduce that. I tried "View | Show Module Browser"
 > > and various different settings in the language dialog.
 > >
 > > The stack trace suggests that the read in question is just the normal
 > > one, as it is about to run your program.
 > >
 > > I see some suspiciously different line numbers, however. What is at
 > > line 132 and the next 20 or so lines in drracket/private/language.rkt
 > > ?
 > >
 > > (My drracket source has the relevant function starting on line 134 and
 > > that function is what turns on read-accept-reader.)
 > >
 > > Robby
 >
 >
 
 --94eb2c07cfc89d654105299b7d12
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 Well that line is turning on the thing that the error message says is turne=
 d off. And I can&#39;t reproduce the error. Very mysterious.=C2=A0<div><br>=
 </div><div>Robby<br><br>On Sunday, January 17, 2016, Matthias Felleisen &lt=
 ;<a href=3D"mailto:matthias@ccs.neu.edu">matthias@ccs.neu.edu</a>&gt; wrote=
 :<br><blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-le=
 ft:1px #ccc solid;padding-left:1ex"><br>
 I tried =E2=80=98refresh=E2=80=9D whittling down the 8 module program to 4 =
 and 2 and then 1. Argh.<br>
 <br>
 <br>
 &gt;=C2=A0 =C2=A0(define simple-module-based-language%<br>
 &gt;=C2=A0 =C2=A0 =C2=A0(class* object% (simple-module-based-language&lt;%&=
 gt;)<br>
 &gt;=C2=A0 =C2=A0 =C2=A0 =C2=A0(init-field module<br>
 &gt;=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0la=
 nguage-position<br>
 &gt;=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(l=
 anguage-numbers (map (=CE=BB (x) 0) language-position))<br>
 &gt;=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(o=
 ne-line-summary #f)<br>
 &gt;=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(l=
 anguage-url #f)<br>
 &gt;=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(d=
 ocumentation-reference #f)<br>
 <br>
 ;; 132 is right here according to Emacs:<br>
 <br>
 &gt;=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(r=
 eader (=CE=BB (src port)<br>
 &gt;=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(let ([v (parameterize ([read-accept-read=
 er #t])<br>
 &gt;=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
 =A0(with-stack-checkpoint<br>
 &gt;=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
 =A0 (read-syntax src port)))])<br>
 &gt;=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(if (eof-object? v)<br>
 &gt;=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0v<br>
 &gt;=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(namespace-syntax-in=
 troduce v)))))<br>
 &gt;=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(l=
 anguage-id (if (pair? language-position)<br>
 &gt;=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 (car (last-pair lan=
 guage-position))<br>
 &gt;=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 (error &#39;simple-=
 module-based-language&lt;%&gt;<br>
 &gt;=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
 =A0 =C2=A0&quot;expected non-empty list of strings, got ~e&quot;<br>
 &gt;=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
 =A0 =C2=A0language-position))))<br>
 &gt;=C2=A0 =C2=A0 =C2=A0 =C2=A0(define/public (get-module) module)<br>
 &gt;=C2=A0 =C2=A0 =C2=A0 =C2=A0(define/public (get-language-position) langu=
 age-position)<br>
 &gt;=C2=A0 =C2=A0 =C2=A0 =C2=A0(define/public (get-language-numbers) langua=
 ge-numbers)<br>
 &gt;=C2=A0 =C2=A0 =C2=A0 =C2=A0(define/public (get-one-line-summary) one-li=
 ne-summary)<br>
 &gt;=C2=A0 =C2=A0 =C2=A0 =C2=A0(define/public (get-language-url) language-u=
 rl)<br>
 &gt;=C2=A0 =C2=A0 =C2=A0 =C2=A0(define/public (get-reader) reader)<br>
 &gt;=C2=A0 =C2=A0 =C2=A0 =C2=A0(super-new)))<br>
 &gt;<br>
 &gt;<br>
 &gt;<br>
 &gt;=C2=A0 =C2=A0;; simple-module-based-language-&gt;module-based-language =
 : module-based-language&lt;%&gt;<br>
 &gt;=C2=A0 =C2=A0;; transforms a simple-module-based-language into a module=
 -based-language&lt;%&gt;<br>
 &gt;=C2=A0 =C2=A0(define simple-module-based-language-&gt;module-based-lang=
 uage-mixin<br>
 &gt;=C2=A0 =C2=A0 =C2=A0(mixin (simple-module-based-language&lt;%&gt;) (mod=
 ule-based-language&lt;%&gt;)<br>
 &gt;=C2=A0 =C2=A0 =C2=A0 =C2=A0(define/public (get-transformer-module) &#39=
 ;mzscheme)<br>
 &gt;=C2=A0 =C2=A0 =C2=A0 =C2=A0(define/public (use-namespace-require/copy?)=
  #f)<br>
 &gt;=C2=A0 =C2=A0 =C2=A0 =C2=A0(define/public (use-namespace-require/copy-f=
 rom-setting? setting)<br>
 &gt;=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(use-namespace-require/copy?))<br>
 &gt;=C2=A0 =C2=A0 =C2=A0 =C2=A0(define/public (use-mred-launcher) #t)<br>
 &gt;<br>
 &gt;=C2=A0 =C2=A0 =C2=A0 =C2=A0(inherit get-module)<br>
 &gt;=C2=A0 =C2=A0 =C2=A0 =C2=A0(define/public (marshall-settings settings)<=
 br>
 &gt;=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(simple-settings-&gt;vector settings)=
 )<br>
 &gt;=C2=A0 =C2=A0 =C2=A0 =C2=A0(define/public (unmarshall-settings printabl=
 e)<br>
 &gt;=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(and (vector? printable)<br>
 &gt;=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 (=3D (vector-length pr=
 intable)<br>
 &gt;=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(procedur=
 e-arity make-simple-settings))<br>
 &gt;=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 (boolean? (vector-ref =
 printable 0))<br>
 &gt;=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 (memq (vector-ref prin=
 table 1) &#39;(constructor quasiquote write trad-write print))<br>
 &gt;=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 (memq (vector-ref prin=
 table 2)<br>
 <br>
 <br>
 <br>
 <br>
 &gt; On Jan 17, 2016, at 10:47 PM, Robby Findler &lt;<a href=3D"javascript:=
 ;" onclick=3D"_e(event, &#39;cvml&#39;, &#39;robby@eecs.northwestern.edu&#3=
 9;)">robby@eecs.northwestern.edu</a>&gt; wrote:<br>
 &gt;<br>
 &gt; On Sun, Jan 17, 2016 at 8:50 PM, Matthias Felleisen<br>
 &gt; &lt;<a href=3D"javascript:;" onclick=3D"_e(event, &#39;cvml&#39;, &#39=
 ;matthias@ccs.neu.edu&#39;)">matthias@ccs.neu.edu</a>&gt; wrote:<br>
 &gt;&gt;<br>
 &gt;&gt; Weird!!!<br>
 &gt;&gt;<br>
 &gt;&gt; When I run this in my dr, I get the error:<br>
 &gt;&gt;<br>
 &gt;&gt; #lang racket<br>
 &gt;&gt;<br>
 &gt;&gt; ; (struct card (face bulls) #:transparent)<br>
 &gt;&gt; ; (define (&gt;-face c d) (&gt; (card-face c) (card-face d)))<br>
 &gt;&gt; ; (define (--face c d) (- (card-face c) (card-face d)))<br>
 &gt;<br>
 &gt; Are the comments important?<br>
 &gt;<br>
 &gt; I&#39;m not able to reproduce that. I tried &quot;View | Show Module B=
 rowser&quot;<br>
 &gt; and various different settings in the language dialog.<br>
 &gt;<br>
 &gt; The stack trace suggests that the read in question is just the normal<=
 br>
 &gt; one, as it is about to run your program.<br>
 &gt;<br>
 &gt; I see some suspiciously different line numbers, however. What is at<br=
 >
 &gt; line 132 and the next 20 or so lines in drracket/private/language.rkt<=
 br>
 &gt; ?<br>
 &gt;<br>
 &gt; (My drracket source has the relevant function starting on line 134 and=
 <br>
 &gt; that function is what turns on read-accept-reader.)<br>
 &gt;<br>
 &gt; Robby<br>
 <br>
 </blockquote></div>
 
 --94eb2c07cfc89d654105299b7d12--
