From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Fri Feb 12 19:08:55 2010
Received: from mail-yx0-f200.google.com (mail-yx0-f200.google.com [209.85.210.200])
	by champlain.ccs.neu.edu (8.14.3/8.14.3) with ESMTP id o1D08rWn029695
	for <bugs@bugs.plt-scheme.org>; Fri, 12 Feb 2010 19:08:54 -0500
Message-Id: <201002130008.o1D08pGG029688@champlain.ccs.neu.edu>
Date: Fri, 12 Feb 2010 19:08:51 -0500
From: harsha.v.r@gmail.com
To: bugs@plt-scheme.org
Subject: at pattern in match

>Number:         10760
>Category:       all
>Synopsis:       at pattern in match
>Class:          change-request
>Responsible:    samth
>Severity:       non-critical
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Fri Feb 12 19:12:01 -0500 2010
>Closed-Date:    Fri Feb 12 19:14:06 -0500 2010
>Last-Modified:  Fri Feb 12 19:16:01 -0500 2010
>Originator:     harsha reddy
>Organization:
plt
>Submitter-Id:   unknown
>Release:        4.2
>Environment:
unix "Linux tpad 2.6.31-19-generic #56-Ubuntu SMP Thu Jan 28 01:26:53 UTC 2010 i686 GNU/Linux" (i386-linux/3m) (get-display-depth) = 24
Human Language: english
(current-memory-use) 163612012

Collections:
(("/home/harsha/.plt-scheme/4.2/collects" non-existent-path) ("/home/harsha/software/plt/collects" "version" "mred" "slideshow" "sgl" "graphics" "mrlib" "string-constants" "algol60" "config" "syntax" "mysterx" "browser" "games" "scribblings" "mzscheme" "make" "plot" "openssl" "xml" "lazy" "framework" "redex" "file" "typed-scheme" "info-domain" "scheme" "stepper" "parser-tools" "profile" "scribble" "embedded-gui" "web-server" "ffi" "htdp" "drscheme" "icons" "readline" "test-box-recovery" "dynext" "typed" "at-exp" "tex2page" "net" "2htdp" "help" "frtime" "afm" "combinator-parser" "macro-debugger" "srfi" "profj" "texpict" "mzlib" "defaults" "r6rs" "slatex" "deinprogramm" "teachpack" "html" "swindle" "scriblib" "stxclass" "rnrs" "s-exp" "trace" "planet" "compiler" "launcher" "syntax-color" "lang" "htdch" "test-engine" "preprocessor" "wxme" "r5rs" "mzcom" "eopl" "setup" "errortrace" "hierlist" "gui-debugger"))
Computer Language: (("Module") (#(#t write mixed-fraction-e #f #t debug) (default) #() "#lang scheme\n" #t))
>Description:
Couldn't find the at pattern in the documentation, It would be nice to standardize it. Here's a (possibly inefficient) implementation,

(define-match-expander at (syntax-rules ()
[(app id pat)
 (app (Î»(x) (cons x x)) (cons id pat))]))
test:
(match (vector 2 3)
 [(at v (vector p q))
 (list v (+ p q))])
(#(2 3) 5)
>How-To-Repeat:
>Fix:
>Audit-Trail:
Responsible changed from "nobody" to "samth" by samth at Fri, 12 Feb 2010 19:14:06 -0500
Reason>>> match

State changed from "open" to "closed" by samth at Fri, 12 Feb 2010 19:14:06 -0500
Reason>>> use and

From: Sam Tobin-Hochstadt <samth@ccs.neu.edu>
To: harsha.v.r@gmail.com, bugs@plt-scheme.org
Cc: nobody@plt-scheme.org, bug-notification@plt-scheme.org
Subject: Re: [plt-bug] all/10760: at pattern in match
Date: Fri, 12 Feb 2010 19:13:44 -0500

 You should use the `and' pattern.
 
 (match (vector 2 3)
  [(and v (vector p q))
  (list v (+ p q))])
 (#(2 3) 5)
 
 On Fri, Feb 12, 2010 at 7:12 PM,  <harsha.v.r@gmail.com> wrote:
 > A new problem report is waiting at
 > =A0http://bugs.plt-scheme.org/query/?cmd=3Dview&pr=3D10760
 >
 > Reported by harsha reddy for release: 4.2
 >
 > *** Description:
 > Couldn't find the at pattern in the documentation, It would be nice to st=
 andardize it. Here's a (possibly inefficient) implementation,
 >
 > (define-match-expander at (syntax-rules ()
 > [(app id pat)
 > =A0(app (=EB(x) (cons x x)) (cons id pat))]))
 > test:
 > (match (vector 2 3)
 > =A0[(at v (vector p q))
 > =A0(list v (+ p q))])
 > (#(2 3) 5)
 >
 > *** How to repeat:
 >
 >
 > *** Environment:
 > unix "Linux tpad 2.6.31-19-generic #56-Ubuntu SMP Thu Jan 28 01:26:53 UTC=
  2010 i686 GNU/Linux" (i386-linux/3m) (get-display-depth) =3D 24
 > Human Language: english
 > (current-memory-use) 163612012
 >
 > Collections:
 > (("/home/harsha/.plt-scheme/4.2/collects" non-existent-path) ("/home/hars=
 ha/software/plt/collects" "version" "mred" "slideshow" "sgl" "graphics" "mr=
 lib" "string-constants" "algol60" "config" "syntax" "mysterx" "browser" "ga=
 mes" "scribblings" "mzscheme" "make" "plot" "openssl" "xml" "lazy" "framewo=
 rk" "redex" "file" "typed-scheme" "info-domain" "scheme" "stepper" "parser-=
 tools" "profile" "scribble" "embedded-gui" "web-server" "ffi" "htdp" "drsch=
 eme" "icons" "readline" "test-box-recovery" "dynext" "typed" "at-exp" "tex2=
 page" "net" "2htdp" "help" "frtime" "afm" "combinator-parser" "macro-debugg=
 er" "srfi" "profj" "texpict" "mzlib" "defaults" "r6rs" "slatex" "deinprogra=
 mm" "teachpack" "html" "swindle" "scriblib" "stxclass" "rnrs" "s-exp" "trac=
 e" "planet" "compiler" "launcher" "syntax-color" "lang" "htdch" "test-engin=
 e" "preprocessor" "wxme" "r5rs" "mzcom" "eopl" "setup" "errortrace" "hierli=
 st" "gui-debugger"))
 > Computer Language: (("Module") (#(#t write mixed-fraction-e #f #t debug) =
 (default) #() "#lang scheme\n" #t))
 >
 >
 
 
 
 --=20
 sam th
 samth@ccs.neu.edu
