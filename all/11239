From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Tue Sep 21 19:28:54 2010
Received: from mail-gy0-f172.google.com (mail-gy0-f172.google.com [209.85.160.172])
	by champlain.ccs.neu.edu (8.14.3/8.14.3) with ESMTP id o8LNSqGl003010
	for <bugs@bugs.plt-scheme.org>; Tue, 21 Sep 2010 19:28:52 -0400
Message-Id: <201009212328.o8LNSop8003004@champlain.ccs.neu.edu>
Date: Tue, 21 Sep 2010 19:28:50 -0400
From: dbrown@ccs.neu.edu
To: bugs@racket-lang.org
Subject: set-union should accept zero arguments

>Number:         11239
>Category:       all
>Synopsis:       set-union should accept zero arguments
>Class:          change-request
>Responsible:    tewk
>Severity:       non-critical
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Tue Sep 21 19:32:02 -0400 2010
>Closed-Date:    Wed Sep 22 12:03:27 -0400 2010
>Last-Modified:  Mon Feb 18 23:55:24 -0500 2013
>Originator:     Dan Brown
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.0.1
>Environment:
MacIntel / Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_4; en-US) AppleWebKit/534.3 (KHTML, like Gecko) Chrome/6.0.472.55 Safari/534.3
>Description:
> (set-union)
procedure set-union: no clause matching 0 arguments

This response surprised me -- I think a more useful behavior is this:

> (set-union)
(set)

The union of no sets should be the empty set, just as the append of no lists is the empty list:

> (append)
'()
>How-To-Repeat:
>Fix:
>Audit-Trail:
From: Jay McCarthy <jay.mccarthy@gmail.com>
To: dbrown@ccs.neu.edu, bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11239: set-union should accept zero arguments
Date: Tue, 21 Sep 2010 17:57:26 -0600

 Should it be a seteq, seteqv, or set?
 
 Jay
 
 On Tue, Sep 21, 2010 at 5:32 PM,  <dbrown@ccs.neu.edu> wrote:
 > A new problem report is waiting at
 > =C2=A0http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D11239
 >
 > Reported by Dan Brown for release: 5.0.1
 >
 > *** Description:
 >> (set-union)
 > procedure set-union: no clause matching 0 arguments
 >
 > This response surprised me -- I think a more useful behavior is this:
 >
 >> (set-union)
 > (set)
 >
 > The union of no sets should be the empty set, just as the append of no li=
 sts is the empty list:
 >
 >> (append)
 > '()
 >
 > *** How to repeat:
 >
 >
 > *** Environment:
 > MacIntel / Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_4; en-US) Apple=
 WebKit/534.3 (KHTML, like Gecko) Chrome/6.0.472.55 Safari/534.3
 >
 >
 
 
 
 --=20
 Jay McCarthy <jay@cs.byu.edu>
 Assistant Professor / Brigham Young University
 http://teammccarthy.org/jay
 
 "The glory of God is Intelligence" - D&C 93
From: Daniel Brown <dbrown@ccs.neu.edu>
To: Jay McCarthy <jay.mccarthy@gmail.com>
Cc: bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11239: set-union should accept zero arguments
Date: Wed, 22 Sep 2010 09:14:39 -0400

 Ah, so that's the complication.
 
 But I still find it unsatisfying. What if we added an optional keyword
 argument to `set-union' with a default value of `equal?'? Then, in
 cases where I'm `apply'ing it to a possibly empty list of sets, it
 knows which kind of set to construct (`set'), and if I want either of
 the other two I can specify it with the keyword.
 
 For uniformity, the same could be done with set / seteqv / seteq,
 for/set / for/seteq / for/seteqv, and for*/set / for*/seteq /
 for*/seteqv.
 
  Dan
 
 On Tue, Sep 21, 2010 at 19:57, Jay McCarthy <jay.mccarthy@gmail.com> wrote:
 > Should it be a seteq, seteqv, or set?
 >
 > Jay
 >
 > On Tue, Sep 21, 2010 at 5:32 PM, =C2=A0<dbrown@ccs.neu.edu> wrote:
 >> A new problem report is waiting at
 >> =C2=A0http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D11239
 >>
 >> Reported by Dan Brown for release: 5.0.1
 >>
 >> *** Description:
 >>> (set-union)
 >> procedure set-union: no clause matching 0 arguments
 >>
 >> This response surprised me -- I think a more useful behavior is this:
 >>
 >>> (set-union)
 >> (set)
 >>
 >> The union of no sets should be the empty set, just as the append of no l=
 ists is the empty list:
 >>
 >>> (append)
 >> '()
 >>
 >> *** How to repeat:
 >>
 >>
 >> *** Environment:
 >> MacIntel / Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_4; en-US) Appl=
 eWebKit/534.3 (KHTML, like Gecko) Chrome/6.0.472.55 Safari/534.3
 >>
 >>
 >
 >
 >
 > --
 > Jay McCarthy <jay@cs.byu.edu>
 > Assistant Professor / Brigham Young University
 > http://teammccarthy.org/jay
 >
 > "The glory of God is Intelligence" - D&C 93
 >
From: Robby Findler <robby@eecs.northwestern.edu>
To: Daniel Brown <dbrown@ccs.neu.edu>
Cc: Jay McCarthy <jay.mccarthy@gmail.com>, bugs@racket-lang.org,
        nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11239: set-union should accept zero arguments
Date: Wed, 22 Sep 2010 08:31:29 -0500

 FWIW, you can probably achieve that behavior by just supplying an
 empty set of a particular kind in your call to apply (apply even
 accepts any number of regular arguments before the list at the end).
 
 Robby
 
 On Wed, Sep 22, 2010 at 8:14 AM, Daniel Brown <dbrown@ccs.neu.edu> wrote:
 > Ah, so that's the complication.
 >
 > But I still find it unsatisfying. What if we added an optional keyword
 > argument to `set-union' with a default value of `equal?'? Then, in
 > cases where I'm `apply'ing it to a possibly empty list of sets, it
 > knows which kind of set to construct (`set'), and if I want either of
 > the other two I can specify it with the keyword.
 >
 > For uniformity, the same could be done with set / seteqv / seteq,
 > for/set / for/seteq / for/seteqv, and for*/set / for*/seteq /
 > for*/seteqv.
 >
 > =C2=A0Dan
 >
 > On Tue, Sep 21, 2010 at 19:57, Jay McCarthy <jay.mccarthy@gmail.com> wrot=
 e:
 >> Should it be a seteq, seteqv, or set?
 >>
 >> Jay
 >>
 >> On Tue, Sep 21, 2010 at 5:32 PM, =C2=A0<dbrown@ccs.neu.edu> wrote:
 >>> A new problem report is waiting at
 >>> =C2=A0http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D11239
 >>>
 >>> Reported by Dan Brown for release: 5.0.1
 >>>
 >>> *** Description:
 >>>> (set-union)
 >>> procedure set-union: no clause matching 0 arguments
 >>>
 >>> This response surprised me -- I think a more useful behavior is this:
 >>>
 >>>> (set-union)
 >>> (set)
 >>>
 >>> The union of no sets should be the empty set, just as the append of no =
 lists is the empty list:
 >>>
 >>>> (append)
 >>> '()
 >>>
 >>> *** How to repeat:
 >>>
 >>>
 >>> *** Environment:
 >>> MacIntel / Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_4; en-US) App=
 leWebKit/534.3 (KHTML, like Gecko) Chrome/6.0.472.55 Safari/534.3
 >>>
 >>>
 >>
 >>
 >>
 >> --
 >> Jay McCarthy <jay@cs.byu.edu>
 >> Assistant Professor / Brigham Young University
 >> http://teammccarthy.org/jay
 >>
 >> "The glory of God is Intelligence" - D&C 93
 >>
 >
From: Daniel Brown <dbrown@ccs.neu.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: Jay McCarthy <jay.mccarthy@gmail.com>, bugs@racket-lang.org,
        nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11239: set-union should accept zero arguments
Date: Wed, 22 Sep 2010 09:38:29 -0400

 Yeah, that's the workaround I've been using.
 
  Dan
 
 On Wed, Sep 22, 2010 at 09:31, Robby Findler
 <robby@eecs.northwestern.edu> wrote:
 > FWIW, you can probably achieve that behavior by just supplying an
 > empty set of a particular kind in your call to apply (apply even
 > accepts any number of regular arguments before the list at the end).
 >
 > Robby
 >
 > On Wed, Sep 22, 2010 at 8:14 AM, Daniel Brown <dbrown@ccs.neu.edu> wrote:
 >> Ah, so that's the complication.
 >>
 >> But I still find it unsatisfying. What if we added an optional keyword
 >> argument to `set-union' with a default value of `equal?'? Then, in
 >> cases where I'm `apply'ing it to a possibly empty list of sets, it
 >> knows which kind of set to construct (`set'), and if I want either of
 >> the other two I can specify it with the keyword.
 >>
 >> For uniformity, the same could be done with set / seteqv / seteq,
 >> for/set / for/seteq / for/seteqv, and for*/set / for*/seteq /
 >> for*/seteqv.
 >>
 >> =C2=A0Dan
 >>
 >> On Tue, Sep 21, 2010 at 19:57, Jay McCarthy <jay.mccarthy@gmail.com> wro=
 te:
 >>> Should it be a seteq, seteqv, or set?
 >>>
 >>> Jay
 >>>
 >>> On Tue, Sep 21, 2010 at 5:32 PM, =C2=A0<dbrown@ccs.neu.edu> wrote:
 >>>> A new problem report is waiting at
 >>>> =C2=A0http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D11239
 >>>>
 >>>> Reported by Dan Brown for release: 5.0.1
 >>>>
 >>>> *** Description:
 >>>>> (set-union)
 >>>> procedure set-union: no clause matching 0 arguments
 >>>>
 >>>> This response surprised me -- I think a more useful behavior is this:
 >>>>
 >>>>> (set-union)
 >>>> (set)
 >>>>
 >>>> The union of no sets should be the empty set, just as the append of no=
  lists is the empty list:
 >>>>
 >>>>> (append)
 >>>> '()
 >>>>
 >>>> *** How to repeat:
 >>>>
 >>>>
 >>>> *** Environment:
 >>>> MacIntel / Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_4; en-US) Ap=
 pleWebKit/534.3 (KHTML, like Gecko) Chrome/6.0.472.55 Safari/534.3
 >>>>
 >>>>
 >>>
 >>>
 >>>
 >>> --
 >>> Jay McCarthy <jay@cs.byu.edu>
 >>> Assistant Professor / Brigham Young University
 >>> http://teammccarthy.org/jay
 >>>
 >>> "The glory of God is Intelligence" - D&C 93
 >>>
 >>
 >

State changed from "open" to "closed" by jay at Wed, 22 Sep 2010 12:03:27 -0400
Reason>>> See discussion

From: Daniel Brown <dbrown@ccs.neu.edu>
To: bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org,
        jay@racket-lang.org
Subject: Re: [racket-bug] all/11239 set-union should accept zero arguments
Date: Wed, 22 Sep 2010 13:59:08 -0400

 On Wed, Sep 22, 2010 at 12:03,  <jay@racket-lang.org> wrote:
 >
 > State changed from "open" to "closed" by jay at Wed, 22 Sep 2010 12:03:27 -0400
 > Reason>>> See discussion
 
 What about the keyword idea? I think that would be nicer and more
 explicit than the workaround noted by Robby.
 
  Dan
From: Matthew Flatt <mflatt@cs.utah.edu>
To: Daniel Brown <dbrown@ccs.neu.edu>
Cc: bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org, jay@racket-lang.org
Subject: Re: [racket-bug] all/11239 set-union should accept zero arguments
Date: Wed, 22 Sep 2010 12:09:44 -0600

 At Wed, 22 Sep 2010 13:59:08 -0400, Daniel Brown wrote:
 > On Wed, Sep 22, 2010 at 12:03,  <jay@racket-lang.org> wrote:
 > >
 > > State changed from "open" to "closed" by jay at Wed, 22 Sep 2010 12:03:27 
 > -0400
 > > Reason>>> See discussion
 > 
 > What about the keyword idea? I think that would be nicer and more
 > explicit than the workaround noted by Robby.
 
 I like Robby's solution better. If there were a keyword, I'd have to
 remember what the keyword is and what kind of value is uses. With
 Robby's solution, there's nothing new to learn but a small idea.
 
 The docs should suggest the idea, though --- it didn't occur to me.
 
From: Daniel Brown <dbrown@ccs.neu.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org, jay@racket-lang.org
Subject: Re: [racket-bug] all/11239 set-union should accept zero arguments
Date: Wed, 22 Sep 2010 14:33:29 -0400

 On Wed, Sep 22, 2010 at 14:09, Matthew Flatt <mflatt@cs.utah.edu> wrote:
 > At Wed, 22 Sep 2010 13:59:08 -0400, Daniel Brown wrote:
 >> On Wed, Sep 22, 2010 at 12:03, =C2=A0<jay@racket-lang.org> wrote:
 >> >
 >> > State changed from "open" to "closed" by jay at Wed, 22 Sep 2010 12:03=
 :27
 >> -0400
 >> > Reason>>> See discussion
 >>
 >> What about the keyword idea? I think that would be nicer and more
 >> explicit than the workaround noted by Robby.
 >
 > I like Robby's solution better. If there were a keyword, I'd have to
 > remember what the keyword is and what kind of value is uses. With
 > Robby's solution, there's nothing new to learn but a small idea.
 
 > The docs should suggest the idea, though --- it didn't occur to me.
 
 Documenting the workaround would be helpful.
 
  Dan

Responsible changed from "nobody" to "tewk" by eli at Mon, 18 Feb 2013 23:55:24 -0500
Reason>>> tewk closed

