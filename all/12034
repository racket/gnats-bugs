From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Sun Jul 10 01:50:48 2011
Received: from mail-vw0-f44.google.com (mail-vw0-f44.google.com [209.85.212.44])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id p6A5ojOp023998
	for <bugs@bugs.plt-scheme.org>; Sun, 10 Jul 2011 01:50:45 -0400
Message-Id: <201107100550.p6A5ofNQ023993@champlain.ccs.neu.edu>
Date: Sun, 10 Jul 2011 01:50:41 -0400
From: clements@racket-lang.org
To: bugs@racket-lang.org
Subject: planet links with subdirectories not working with raco setup?

>Number:         12034
>Category:       all
>Synopsis:       planet links with subdirectories not working with raco setup?
>Class:          sw-bug
>Responsible:    eli
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Sun Jul 10 01:52:01 -0400 2011
>Closed-Date:    Sun Jul 10 06:54:05 -0400 2011
>Last-Modified:  Sun Jul 10 06:54:05 -0400 2011
>Originator:     John Clements
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.1.2.2--2011-07-09(35c9bd9/g)
>Environment:
macosx "Darwin oiseau.local 10.7.0 Darwin Kernel Version 10.7.0: Sat Jan 29 15:17:16 PST 2011; root:xnu-1504.9.37~1/RELEASE_I386 i386" (x86_64-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 304072136

Collections:
("/Users/clements/clements/collects"
 (".gitignore" "badger" "file-size-checker" "info-domain" "jbc-gnucash" "mboxrd-read" "midi" "mnemisis" "projector" "shelly" "template-tester" "txomp" "web-utilities"))
("/Users/clements/matthias/collects"
 (non-existent-path))
("/Users/clements/Library/Racket/5.1.2.2/collects"
 (non-existent-path))
("/Users/clements/plt/collects"
 (".gitignore" "2htdp" "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "data" "datalog" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "meta" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "picturing-programs" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "redex" "repo-time-stamp" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "sirmail" "slatex" "slideshow" "srfi" "srpersist" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tests" "tex2page" "texpict" "trace" "typed" "typed-scheme" "un!
 stable" "version" "waterworld" "web-server" "wxme" "xml"))

Computer Language: (("Teaching Languages" "How to Design Programs" "Beginning Student") (#(#t constructor repeating-decimal #f #t none) #f ()))
>Description:
I can't use raco setup with planet links to directories that have 
subdirectories. This may apply to any planet packages with 
subdirectories and not just to links; I haven't tried.

In the example below, string<? is applied to sorting paths; in 
other examples, the other argument is more alarming, to wit:

string<?: expects type <string> as 1st argument, given: #<path:/Users/clements/RSound/lib>; other arguments were: "/Users/clements/RSound (RSound)"

... where the things being sorted look like menu entries or 
something.
>How-To-Repeat:
oiseau:~/plt clements$ raco planet show
No packages installed.
oiseau:~/plt clements$ mkdir /tmp/bogus
oiseau:~/plt clements$ mkdir /tmp/bogus/lib
oiseau:~/plt clements$ raco planet link clements bogus.plt 1 1 /tmp/bogus
oiseau:~/plt clements$ raco setup -P clements bogus.plt 1 1
string<?: expects type <string> as 1st argument, given: #<path:/tmp/bogus/lib>; other arguments were: #<path:/tmp/bogus>

 === context ===
/Users/clements/plt/collects/racket/private/sort.rkt:213:0: sort
/Users/clements/plt/collects/setup/setup-go.rkt: [running body]
/Users/clements/plt/collects/setup/main.rkt: [running body]
/Users/clements/plt/collects/raco/main.rkt: [running body]
>Fix:
>Audit-Trail:
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>, Eli Barzilay <eli@barzilay.org>
Cc: bugs <bugs@racket-lang.org>
Subject: Re: [racket-bug] all/12034: planet links with subdirectories not
 working with raco setup?
Date: Sun, 10 Jul 2011 04:32:42 -0500

 On Sun, Jul 10, 2011 at 12:52 AM,  <clements@racket-lang.org> wrote:
 > A new problem report is waiting at
 >  http://bugs.racket-lang.org/query/?cmd=view&pr=12034
 
 Looking into this a little bit, it looks like setup is trying to sort
 the cc's by their name field. The name field comes from the third
 argument to make-cc. There is a call to make-cc on line 190 of
 setup-unit.rkt that seems to be passing a path when 'name' is #f.
 
 The path is coming from this function:
 
   path->relative-string/setup
 
 which, according to the docs, can return anything at all. So that's not good.
 
 I'm still investigating, since I suspect that something I did when I
 refactored planet let to the change in the behavior, but I haven't
 pinned that down yet.
 
 In the meantime, I wanted to ask about path->relative-string/setup's
 behavior. It's name suggests it should return a string all the time.
 Is that wrong?
 
 Robby
 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>, Eli Barzilay <eli@barzilay.org>
Cc: bugs <bugs@racket-lang.org>
Subject: Re: [racket-bug] all/12034: planet links with subdirectories not
 working with raco setup?
Date: Sun, 10 Jul 2011 04:38:46 -0500

 No, I take it back. This is a bug in Eli's new code.
 
 Currently, I believe the docs are just wrong (they should say that it
 returns a string) and the test suite is missing a case.
 
 Also note: this is the same as PR 12032
 
 Also also note: these bugs may be in the release.
 
 Robby
 
 On Sun, Jul 10, 2011 at 4:32 AM, Robby Findler
 <robby@eecs.northwestern.edu> wrote:
 > On Sun, Jul 10, 2011 at 12:52 AM,  <clements@racket-lang.org> wrote:
 >> A new problem report is waiting at
 >>  http://bugs.racket-lang.org/query/?cmd=view&pr=12034
 >
 > Looking into this a little bit, it looks like setup is trying to sort
 > the cc's by their name field. The name field comes from the third
 > argument to make-cc. There is a call to make-cc on line 190 of
 > setup-unit.rkt that seems to be passing a path when 'name' is #f.
 >
 > The path is coming from this function:
 >
 >  path->relative-string/setup
 >
 > which, according to the docs, can return anything at all. So that's not good.
 >
 > I'm still investigating, since I suspect that something I did when I
 > refactored planet let to the change in the behavior, but I haven't
 > pinned that down yet.
 >
 > In the meantime, I wanted to ask about path->relative-string/setup's
 > behavior. It's name suggests it should return a string all the time.
 > Is that wrong?
 >
 > Robby
 >
 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>, Eli Barzilay <eli@barzilay.org>
Cc: bugs <bugs@racket-lang.org>
Subject: Re: [racket-bug] all/12034: planet links with subdirectories not
 working with raco setup?
Date: Sun, 10 Jul 2011 04:55:21 -0500

 Actually, maybe the docs are just incomplete, not wrong. They do not
 explain how the default argument is used. IMO, the code should
 probably insist on strings. There seem to be a few ways to fix the
 bug, based on the intent of these functions. I guess that the best fix
 would be to insist that path->relative-string/setup always return a
 string and to pass a string instead of a path to the default argument.
 
 But more worryingly, this appears to be the push that added this
 function and I don't see any test cases:
 
 http://git.racket-lang.org/plt/commit/6b44974b4205caac4aa8c26696a16bd9008d31f3
 
 Also, the code allows the default argument to not be a function, but
 the docs do not mention this possibility either.
 
 Robby
 
 On Sun, Jul 10, 2011 at 4:38 AM, Robby Findler
 <robby@eecs.northwestern.edu> wrote:
 > No, I take it back. This is a bug in Eli's new code.
 >
 > Currently, I believe the docs are just wrong (they should say that it
 > returns a string) and the test suite is missing a case.
 >
 > Also note: this is the same as PR 12032
 >
 > Also also note: these bugs may be in the release.
 >
 > Robby
 >
 > On Sun, Jul 10, 2011 at 4:32 AM, Robby Findler
 > <robby@eecs.northwestern.edu> wrote:
 >> On Sun, Jul 10, 2011 at 12:52 AM,  <clements@racket-lang.org> wrote:
 >>> A new problem report is waiting at
 >>>  http://bugs.racket-lang.org/query/?cmd=view&pr=12034
 >>
 >> Looking into this a little bit, it looks like setup is trying to sort
 >> the cc's by their name field. The name field comes from the third
 >> argument to make-cc. There is a call to make-cc on line 190 of
 >> setup-unit.rkt that seems to be passing a path when 'name' is #f.
 >>
 >> The path is coming from this function:
 >>
 >>  path->relative-string/setup
 >>
 >> which, according to the docs, can return anything at all. So that's not good.
 >>
 >> I'm still investigating, since I suspect that something I did when I
 >> refactored planet let to the change in the behavior, but I haven't
 >> pinned that down yet.
 >>
 >> In the meantime, I wanted to ask about path->relative-string/setup's
 >> behavior. It's name suggests it should return a string all the time.
 >> Is that wrong?
 >>
 >> Robby
 >>
 >
 
From: Eli Barzilay <eli@barzilay.org>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: Matthew Flatt <mflatt@cs.utah.edu>, bugs <bugs@racket-lang.org>
Subject: Re: [racket-bug] all/12034: planet links with subdirectories not
 working with raco setup?
Date: Sun, 10 Jul 2011 05:53:57 -0400

 Can you tell me which input leads to a bogus result?  (I get the
 expected error with an input of #f.)
 
 
 Three minutes ago, Robby Findler wrote:
 > No, I take it back. This is a bug in Eli's new code.
 > 
 > Currently, I believe the docs are just wrong (they should say that
 > it returns a string) and the test suite is missing a case.
 
 (The following is mostly for myself.)
 
 (That's a subtle place -- I first tried to follow the previous version
 of a related piece of code, but that failed because of some other
 function that returned a path value that ended in the dep files that
 were made during the build.)
 
 In any case, it does return a string, but I kept the result as `any'
 since you can specify any default value in
 `make-path->relative-string'.  But given that the `*/setup' and
 `*/library' specify a default, the contract should have changed
 accordingly.
 
 
 
 > Also note: this is the same as PR 12032
 > 
 > Also also note: these bugs may be in the release.
 
 Yes, it would be there.
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!
From: Robby Findler <robby@eecs.northwestern.edu>
To: Eli Barzilay <eli@barzilay.org>
Cc: Matthew Flatt <mflatt@cs.utah.edu>, bugs <bugs@racket-lang.org>
Subject: Re: [racket-bug] all/12034: planet links with subdirectories not
 working with raco setup?
Date: Sun, 10 Jul 2011 04:56:18 -0500

 On Sun, Jul 10, 2011 at 4:53 AM, Eli Barzilay <eli@barzilay.org> wrote:
 > Can you tell me which input leads to a bogus result?  (I get the
 > expected error with an input of #f.)
 
 Follow the steps in the PR.
 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Eli Barzilay <eli@barzilay.org>
Cc: Matthew Flatt <mflatt@cs.utah.edu>, bugs <bugs@racket-lang.org>
Subject: Re: [racket-bug] all/12034: planet links with subdirectories not
 working with raco setup?
Date: Sun, 10 Jul 2011 04:58:53 -0500

 On Sun, Jul 10, 2011 at 4:53 AM, Eli Barzilay <eli@barzilay.org> wrote:
 > In any case, it does return a string, but I kept the result as `any'
 > since you can specify any default value in
 > `make-path->relative-string'.  But given that the `*/setup' and
 > `*/library' specify a default, the contract should have changed
 > accordingly.
 >
 
 I don't think so.
 
 Add a printf that shows the value of path-name in setup-unit.rkt line
 183 (after setting up the planet link as described in this PR). When I
 do that, I see lots of strings and then a bunch of paths at the end.
 
 Robby
 
From: Eli Barzilay <eli@barzilay.org>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: Matthew Flatt <mflatt@cs.utah.edu>, bugs <bugs@racket-lang.org>
Subject: Re: [racket-bug] all/12034: planet links with subdirectories not
 working with raco setup?
Date: Sun, 10 Jul 2011 05:57:40 -0400

 A few seconds ago, Robby Findler wrote:
 > On Sun, Jul 10, 2011 at 4:53 AM, Eli Barzilay <eli@barzilay.org> wrote:
 > > Can you tell me which input leads to a bogus result?  (I get the
 > > expected error with an input of #f.)
 > 
 > Follow the steps in the PR.
 
 Can you just tell me what the value is?  I can't run anything heavy
 like setup since there's a build now, and I'm leaving soon.
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!
 
From: Eli Barzilay <eli@barzilay.org>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: Matthew Flatt <mflatt@cs.utah.edu>, bugs <bugs@racket-lang.org>
Subject: Re: [racket-bug] all/12034: planet links with subdirectories not
 working with raco setup?
Date: Sun, 10 Jul 2011 05:58:20 -0400

 The default is in the make- function, not in the two */library and
 */setup instantiations.
 
 
 
 Two minutes ago, Robby Findler wrote:
 > Actually, maybe the docs are just incomplete, not wrong. They do not
 > explain how the default argument is used. IMO, the code should
 > probably insist on strings. There seem to be a few ways to fix the
 > bug, based on the intent of these functions. I guess that the best fix
 > would be to insist that path->relative-string/setup always return a
 > string and to pass a string instead of a path to the default argument.
 > 
 > But more worryingly, this appears to be the push that added this
 > function and I don't see any test cases:
 > 
 > http://git.racket-lang.org/plt/commit/6b44974b4205caac4aa8c26696a16bd9008d31f3
 > 
 > Also, the code allows the default argument to not be a function, but
 > the docs do not mention this possibility either.
 > 
 > Robby
 > 
 > On Sun, Jul 10, 2011 at 4:38 AM, Robby Findler
 > <robby@eecs.northwestern.edu> wrote:
 > > No, I take it back. This is a bug in Eli's new code.
 > >
 > > Currently, I believe the docs are just wrong (they should say that it
 > > returns a string) and the test suite is missing a case.
 > >
 > > Also note: this is the same as PR 12032
 > >
 > > Also also note: these bugs may be in the release.
 > >
 > > Robby
 > >
 > > On Sun, Jul 10, 2011 at 4:32 AM, Robby Findler
 > > <robby@eecs.northwestern.edu> wrote:
 > >> On Sun, Jul 10, 2011 at 12:52 AM,  <clements@racket-lang.org> wrote:
 > >>> A new problem report is waiting at
 > >>>  http://bugs.racket-lang.org/query/?cmd=view&pr=12034
 > >>
 > >> Looking into this a little bit, it looks like setup is trying to sort
 > >> the cc's by their name field. The name field comes from the third
 > >> argument to make-cc. There is a call to make-cc on line 190 of
 > >> setup-unit.rkt that seems to be passing a path when 'name' is #f.
 > >>
 > >> The path is coming from this function:
 > >>
 > >>  path->relative-string/setup
 > >>
 > >> which, according to the docs, can return anything at all. So that's not good.
 > >>
 > >> I'm still investigating, since I suspect that something I did when I
 > >> refactored planet let to the change in the behavior, but I haven't
 > >> pinned that down yet.
 > >>
 > >> In the meantime, I wanted to ask about path->relative-string/setup's
 > >> behavior. It's name suggests it should return a string all the time.
 > >> Is that wrong?
 > >>
 > >> Robby
 > >>
 > >
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!
 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Eli Barzilay <eli@barzilay.org>
Cc: Matthew Flatt <mflatt@cs.utah.edu>, bugs <bugs@racket-lang.org>
Subject: Re: [racket-bug] all/12034: planet links with subdirectories not
 working with raco setup?
Date: Sun, 10 Jul 2011 05:00:44 -0500

 On Sun, Jul 10, 2011 at 4:57 AM, Eli Barzilay <eli@barzilay.org> wrote:
 > A few seconds ago, Robby Findler wrote:
 >> On Sun, Jul 10, 2011 at 4:53 AM, Eli Barzilay <eli@barzilay.org> wrote:
 >> > Can you tell me which input leads to a bogus result?  (I get the
 >> > expected error with an input of #f.)
 >>
 >> Follow the steps in the PR.
 >
 > Can you just tell me what the value is?  I can't run anything heavy
 > like setup since there's a build now, and I'm leaving soon.
 
 Fixing it when you get back seems fine with me. Best to follow the
 instructions in the PR, IMO.
 
 Or if you want me to give it a try, I can do that today. Let me know.
 
 Robby
 
From: Eli Barzilay <eli@barzilay.org>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: Matthew Flatt <mflatt@cs.utah.edu>, bugs <bugs@racket-lang.org>
Subject: Re: [racket-bug] all/12034: planet links with subdirectories not
 working with raco setup?
Date: Sun, 10 Jul 2011 06:09:43 -0400

 9 minutes ago, Robby Findler wrote:
 > 
 > I don't think so.
 > 
 > Add a printf that shows the value of path-name in setup-unit.rkt
 > line 183 (after setting up the planet link as described in this
 > PR). When I do that, I see lots of strings and then a bunch of paths
 > at the end.
 
 Ah, the problem is that it returns a path.  That should be easy to
 fix.  (I missed that first part of the PR since I couldn't even open
 my saved mail file...)
 
 
 7 minutes ago, Robby Findler wrote:
 > 
 > Fixing it when you get back seems fine with me. Best to follow the
 > instructions in the PR, IMO.
 > 
 > Or if you want me to give it a try, I can do that today. Let me
 > know.
 
 I'll fix it now, hopefully I'll get to push it out too.
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!
From: Robby Findler <robby@eecs.northwestern.edu>
To: Eli Barzilay <eli@barzilay.org>
Cc: Matthew Flatt <mflatt@cs.utah.edu>, bugs <bugs@racket-lang.org>
Subject: Re: [racket-bug] all/12034: planet links with subdirectories not
 working with raco setup?
Date: Sun, 10 Jul 2011 05:11:59 -0500

 On Sun, Jul 10, 2011 at 5:09 AM, Eli Barzilay <eli@barzilay.org> wrote:
 > 7 minutes ago, Robby Findler wrote:
 >>
 >> Fixing it when you get back seems fine with me. Best to follow the
 >> instructions in the PR, IMO.
 >>
 >> Or if you want me to give it a try, I can do that today. Let me
 >> know.
 >
 > I'll fix it now, hopefully I'll get to push it out too.
 
 Please add tests and clarify the docs, too. (I don't mind waiting a
 day or so for that.)
 
 Robby
From: Eli Barzilay <eli@barzilay.org>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: Matthew Flatt <mflatt@cs.utah.edu>, bugs <bugs@racket-lang.org>
Subject: Re: [racket-bug] all/12034: planet links with subdirectories not
 working with raco setup?
Date: Sun, 10 Jul 2011 06:16:59 -0400

 A few seconds ago, Robby Findler wrote:
 > 
 > Please add tests and clarify the docs, too. (I don't mind waiting a
 > day or so for that.)
 
 The docs are still a problem (I forgot that there is a default
 argument in the */library and */setup functions).  The output should
 be specified as either a string or whatever `default' is or whatever
 it returns.  Any idea how I write that?
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!
From: Robby Findler <robby@eecs.northwestern.edu>
To: Eli Barzilay <eli@barzilay.org>
Cc: Matthew Flatt <mflatt@cs.utah.edu>, bugs <bugs@racket-lang.org>
Subject: Re: [racket-bug] all/12034: planet links with subdirectories not
 working with raco setup?
Date: Sun, 10 Jul 2011 05:21:00 -0500

 On Sun, Jul 10, 2011 at 5:16 AM, Eli Barzilay <eli@barzilay.org> wrote:
 > A few seconds ago, Robby Findler wrote:
 >>
 >> Please add tests and clarify the docs, too. (I don't mind waiting a
 >> day or so for that.)
 >
 > The docs are still a problem (I forgot that there is a default
 > argument in the */library and */setup functions).  The output should
 > be specified as either a string or whatever `default' is or whatever
 > it returns.  Any idea how I write that?
 
 I'd say that you should change the contract on default to be the
 redundant thing:
 
   (or/c (-> any/c any/c) any/c)
 
 and then explain what is going on in the text that follows (I use
 any/c in the range to indicate that there must be a single result;
 using any there would allow multiple results).
 
 Alternatively, you can insist that the default either be a string or
 return one. I think that this is probably the better course, since
 that's what the name of the function suggests you should do. In that
 case, you'd use this contract:
 
   (or/c (-> any/c string?) string?)
 
 ----
 
 In both cases, there may be more that we know about the input to the
 function in the case that default is a function. I didn't read the
 code closely enough to figure that out.
 
 hth,
 Robby
 
From: Eli Barzilay <eli@barzilay.org>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: Matthew Flatt <mflatt@cs.utah.edu>, bugs <bugs@racket-lang.org>
Subject: Re: [racket-bug] all/12034: planet links with subdirectories not
 working with raco setup?
Date: Sun, 10 Jul 2011 06:24:32 -0400

 About a minute ago, Robby Findler wrote:
 > On Sun, Jul 10, 2011 at 5:16 AM, Eli Barzilay <eli@barzilay.org> wrote:
 > > A few seconds ago, Robby Findler wrote:
 > >>
 > >> Please add tests and clarify the docs, too. (I don't mind waiting a
 > >> day or so for that.)
 > >
 > > The docs are still a problem (I forgot that there is a default
 > > argument in the */library and */setup functions).  The output should
 > > be specified as either a string or whatever `default' is or whatever
 > > it returns.  Any idea how I write that?
 > 
 > I'd say that you should change the contract on default to be the
 > redundant thing:
 > 
 >   (or/c (-> any/c any/c) any/c)
               ^^^^^
               path-string?
 
 > and then explain what is going on in the text that follows (I use
 
 OK.
 
 
 > any/c in the range to indicate that there must be a single result;
 > using any there would allow multiple results).
 
 Well, strictly speaking the default can return multiple values, but
 that looks like a fine restriction.
 
 
 > Alternatively, you can insist that the default either be a string or
 > return one.
 
 I wanted to do that, but can't since there are several uses with #f as
 the default in the contract code.
 
 
 > In both cases, there may be more that we know about the input to the
 > function in the case that default is a function. I didn't read the
 > code closely enough to figure that out.
 
 (Yes, that `path-string?' above.)
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!
 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Eli Barzilay <eli@barzilay.org>
Cc: Matthew Flatt <mflatt@cs.utah.edu>, bugs <bugs@racket-lang.org>
Subject: Re: [racket-bug] all/12034: planet links with subdirectories not
 working with raco setup?
Date: Sun, 10 Jul 2011 05:32:14 -0500

 How about:
 
   (or/c (-> path-string? (or/c string? #f)) (or/c string? #f))
 
 ?
 
 (In general, this seems like one of those places where it is okay to
 change the way the function is used, since you're in cleanup mode, so
 if you judge that #f is an okay result then you also want to go change
 the calls so they deal with it properly.)
 
 Robby
 
 On Sun, Jul 10, 2011 at 5:24 AM, Eli Barzilay <eli@barzilay.org> wrote:
 > About a minute ago, Robby Findler wrote:
 >> On Sun, Jul 10, 2011 at 5:16 AM, Eli Barzilay <eli@barzilay.org> wrote:
 >> > A few seconds ago, Robby Findler wrote:
 >> >>
 >> >> Please add tests and clarify the docs, too. (I don't mind waiting a
 >> >> day or so for that.)
 >> >
 >> > The docs are still a problem (I forgot that there is a default
 >> > argument in the */library and */setup functions).  The output should
 >> > be specified as either a string or whatever `default' is or whatever
 >> > it returns.  Any idea how I write that?
 >>
 >> I'd say that you should change the contract on default to be the
 >> redundant thing:
 >>
 >>   (or/c (-> any/c any/c) any/c)
 >              ^^^^^
 >              path-string?
 >
 >> and then explain what is going on in the text that follows (I use
 >
 > OK.
 >
 >
 >> any/c in the range to indicate that there must be a single result;
 >> using any there would allow multiple results).
 >
 > Well, strictly speaking the default can return multiple values, but
 > that looks like a fine restriction.
 >
 >
 >> Alternatively, you can insist that the default either be a string or
 >> return one.
 >
 > I wanted to do that, but can't since there are several uses with #f as
 > the default in the contract code.
 >
 >
 >> In both cases, there may be more that we know about the input to the
 >> function in the case that default is a function. I didn't read the
 >> code closely enough to figure that out.
 >
 > (Yes, that `path-string?' above.)
 >
 > --
 >          ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
 >                    http://barzilay.org/                   Maze is Life!
 >
 
From: Eli Barzilay <eli@barzilay.org>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: Matthew Flatt <mflatt@cs.utah.edu>, bugs <bugs@racket-lang.org>
Subject: Re: [racket-bug] all/12034: planet links with subdirectories not
 working with raco setup?
Date: Sun, 10 Jul 2011 06:36:50 -0400

 Three minutes ago, Robby Findler wrote:
 > How about:
 > 
 >   (or/c (-> path-string? (or/c string? #f)) (or/c string? #f))
 > 
 > ?
 > 
 > (In general, this seems like one of those places where it is okay to
 > change the way the function is used, since you're in cleanup mode,
 > so if you judge that #f is an okay result then you also want to go
 > change the calls so they deal with it properly.)
 
 I prefer to stay with the previous one since the code allows it.  But
 I clarified with this:
 
   Note that this function can be a non-string only if @racket[default]
   is given, and it does not return a string.
 
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!
Responsible changed from "nobody" to "eli" by eli@racket-lang.org at Sun, 10 Jul 2011 06:54:05 -0400
Reason>>> A commit by eli@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/ebe9453e73
State changed from "open" to "closed" by eli@racket-lang.org at Sun, 10 Jul 2011 06:54:05 -0400
Reason>>> A commit by eli@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/ebe9453e73
