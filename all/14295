From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Wed Jan 15 22:56:14 2014
Received: from mail-ob0-f176.google.com (mail-ob0-f176.google.com [209.85.214.176])
	by winooski.ccs.neu.edu (8.14.7/8.14.7) with ESMTP id s0G3uDME010870
	for <bugs@bugs.plt-scheme.org>; Wed, 15 Jan 2014 22:56:13 -0500
Message-Id: <201401160356.s0G3uBOb010863@winooski.ccs.neu.edu>
Date: Wed, 15 Jan 2014 22:56:11 -0500
From: eric.n.dobson@gmail.com
To: bugs@racket-lang.org
Subject: opt/c cannot optimize ->* as well as ->

>Number:         14295
>Category:       all
>Synopsis:       opt/c cannot optimize ->* as well as ->
>Class:          sw-bug
>Responsible:    nobody
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Wed Jan 15 23:00:01 -0500 2014
>Originator:     Eric Dobson
>Organization:
plt
>Submitter-Id:   unknown
>Release:        HEAD
>Environment:
MacIntel / Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/33.0.1750.27 Safari/537.36
>Description:
I expect opt/c to optimize ->* as well as ->, but it doesn't happen.
>How-To-Repeat:
#lang racket


(module m racket
  (provide
    (contract-out
      [rename foo f1 (opt/c (-> (any/c . -> . boolean?) boolean? boolean?))]
      [rename foo f2 (opt/c (-> ((any/c) () . ->* . boolean?) boolean? boolean?))]
      [rename foo f3 (-> (any/c . -> . boolean?) boolean? boolean?)]
      [rename foo f4 (-> ((any/c) () . ->* . boolean?) boolean? boolean?)]
      ))
  (define (foo f x) (f x))
  )


(require 'm)

(define (rand-bool)
  (< (random) 0.5))

(define N 100000)
(for ((j 5))
  (collect-garbage)
  (collect-garbage)
  (collect-garbage)
  (display "f1: ")
  (time
    (for ((i (in-range N)))
      (f1 not (rand-bool))))
  (collect-garbage)
  (collect-garbage)
  (collect-garbage)
  (display "f2: ")
  (time
    (for ((i (in-range N)))
      (f2 not (rand-bool))))
  (collect-garbage)
  (collect-garbage)
  (collect-garbage)
  (display "f3: ")
  (time
    (for ((i (in-range N)))
      (f3 not (rand-bool))))
  (collect-garbage)
  (collect-garbage)
  (collect-garbage)
  (display "f4: ")
  (time
    (for ((i (in-range N)))
      (f4 not (rand-bool)))))

>Fix:
