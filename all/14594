From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Tue Jun 24 12:53:58 2014
Received: from mail-oa0-f47.google.com (mail-oa0-f47.google.com [209.85.219.47])
	by winooski.ccs.neu.edu (8.14.7/8.14.7) with ESMTP id s5OGrvqV017765
	for <bugs@bugs.plt-scheme.org>; Tue, 24 Jun 2014 12:53:57 -0400
Message-Id: <201406241653.s5OGrsaQ017758@winooski.ccs.neu.edu>
Date: Tue, 24 Jun 2014 12:53:54 -0400
From: eric.n.dobson@gmail.com
To: bugs@racket-lang.org
Subject: Docs for match #:when clause refer to unspecified failure procedure

>Number:         14594
>Category:       all
>Synopsis:       Docs for match #:when clause refer to unspecified failure procedure
>Class:          sw-bug
>Responsible:    nobody
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Tue Jun 24 12:56:01 -0400 2014
>Last-Modified:  Tue Jun 24 21:00:01 -0400 2014
>Originator:     Eric Dobson
>Organization:
plt
>Submitter-Id:   unknown
>Release:        HEAD
>Environment:
MacIntel / Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/33.0.1750.27 Safari/537.36
>Description:
An optional #:when cond-expr specifies that the pattern should only match if cond-expr produces a true value. cond-expr is in the scope of all of the variables bound in pat. cond-expr must not mutate the object being matched before calling the failure procedure, otherwise the behavior of matching is unpredictable. See also failure-cont, which is a lower-level mechanism achieving the same ends.
>How-To-Repeat:

>Fix:
>Audit-Trail:
From: Robby Findler <robby@eecs.northwestern.edu>
To: Eric Dobson <eric.n.dobson@gmail.com>, bugs <bugs@racket-lang.org>
Cc: nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/14594: Docs for match #:when clause refer to
 unspecified failure procedure
Date: Tue, 24 Jun 2014 19:21:32 -0500

 Which library? for loops?
 
 Robby
 
 On Tue, Jun 24, 2014 at 11:56 AM,  <eric.n.dobson@gmail.com> wrote:
 > A new problem report is waiting at
 >   http://bugs.racket-lang.org/query/?cmd=view&pr=14594
 >
 > Reported by Eric Dobson for release: HEAD
 >
 > *** Description:
 > An optional #:when cond-expr specifies that the pattern should only match if cond-expr produces a true value. cond-expr is in the scope of all of the variables bound in pat. cond-expr must not mutate the object being matched before calling the failure procedure, otherwise the behavior of matching is unpredictable. See also failure-cont, which is a lower-level mechanism achieving the same ends.
 >
 > *** How to repeat:
 >
 >
 > *** Environment:
 > MacIntel / Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/33.0.1750.27 Safari/537.36
 >
 
From: Eric Dobson <eric.n.dobson@gmail.com>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: bugs <bugs@racket-lang.org>, nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/14594: Docs for match #:when clause refer to
 unspecified failure procedure
Date: Tue, 24 Jun 2014 17:23:34 -0700

 I see how the title is hard to parse. It is the docs for the "match
 #:when clause".
 http://docs.racket-lang.org/reference/match.html?q=match#%28form._%28%28lib._racket%2Fmatch..rkt%29._match%29%29
 
 On Tue, Jun 24, 2014 at 5:21 PM, Robby Findler
 <robby@eecs.northwestern.edu> wrote:
 > Which library? for loops?
 >
 > Robby
 >
 > On Tue, Jun 24, 2014 at 11:56 AM,  <eric.n.dobson@gmail.com> wrote:
 >> A new problem report is waiting at
 >>   http://bugs.racket-lang.org/query/?cmd=view&pr=14594
 >>
 >> Reported by Eric Dobson for release: HEAD
 >>
 >> *** Description:
 >> An optional #:when cond-expr specifies that the pattern should only match if cond-expr produces a true value. cond-expr is in the scope of all of the variables bound in pat. cond-expr must not mutate the object being matched before calling the failure procedure, otherwise the behavior of matching is unpredictable. See also failure-cont, which is a lower-level mechanism achieving the same ends.
 >>
 >> *** How to repeat:
 >>
 >>
 >> *** Environment:
 >> MacIntel / Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/33.0.1750.27 Safari/537.36
 >>
 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Eric Dobson <eric.n.dobson@gmail.com>
Cc: bugs <bugs@racket-lang.org>, nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/14594: Docs for match #:when clause refer to
 unspecified failure procedure
Date: Tue, 24 Jun 2014 19:56:35 -0500

 Ah! :)
 
 Thanks,
 Robby
 
 On Tue, Jun 24, 2014 at 7:23 PM, Eric Dobson <eric.n.dobson@gmail.com> wrote:
 > I see how the title is hard to parse. It is the docs for the "match
 > #:when clause".
 > http://docs.racket-lang.org/reference/match.html?q=match#%28form._%28%28lib._racket%2Fmatch..rkt%29._match%29%29
 >
 > On Tue, Jun 24, 2014 at 5:21 PM, Robby Findler
 > <robby@eecs.northwestern.edu> wrote:
 >> Which library? for loops?
 >>
 >> Robby
 >>
 >> On Tue, Jun 24, 2014 at 11:56 AM,  <eric.n.dobson@gmail.com> wrote:
 >>> A new problem report is waiting at
 >>>   http://bugs.racket-lang.org/query/?cmd=view&pr=14594
 >>>
 >>> Reported by Eric Dobson for release: HEAD
 >>>
 >>> *** Description:
 >>> An optional #:when cond-expr specifies that the pattern should only match if cond-expr produces a true value. cond-expr is in the scope of all of the variables bound in pat. cond-expr must not mutate the object being matched before calling the failure procedure, otherwise the behavior of matching is unpredictable. See also failure-cont, which is a lower-level mechanism achieving the same ends.
 >>>
 >>> *** How to repeat:
 >>>
 >>>
 >>> *** Environment:
 >>> MacIntel / Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/33.0.1750.27 Safari/537.36
 >>>
 
