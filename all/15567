From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Fri Dec  7 18:28:04 2018
Received: from mail-ot1-f45.google.com (mail-ot1-f45.google.com [209.85.210.45])
	by winooski.ccs.neu.edu (8.14.7/8.14.7) with ESMTP id wB7NS2fQ025937
	for <bugs@bugs.plt-scheme.org>; Fri, 7 Dec 2018 18:28:02 -0500
Message-Id: <201812072327.wB7NRxag025925@winooski.ccs.neu.edu>
Date: Fri, 7 Dec 2018 18:27:59 -0500
From: rxg@cs.ubc.ca
To: bugs@racket-lang.org
Subject: compose loses procedure arity information

>Number:         15567
>Category:       all
>Synopsis:       compose loses procedure arity information
>Class:          sw-bug
>Responsible:    nobody
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Fri Dec 07 18:32:01 -0500 2018
>Originator:     Ronald Garcia
>Organization:
plt
>Submitter-Id:   unknown
>Release:        7.1
>Environment:
macosx "Darwin CPSC-LM-RXG 15.6.0 Darwin Kernel Version 15.6.0: Thu Jun 21 20:07:40 PDT 2018; root:xnu-3248.73.11~1/RELEASE_X86_64 x86_64" (x86_64-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 620898792
raco pkg (show):
Installation-wide:
 Package            Checksum             Source
 main-distribution  107e1b59943f693b...  catalog...tribution
 racket-lib         21fbc2a1a2972f1f...  catalog racket-lib
 [198 auto-installed packages not shown]
User-specific for installation "7.1":
 Package      Checksum               Source
 csv-reading  217c1ee293ee246cba...  catalog csv-reading
 data-frame   c2e031549cc7ae7a51...  catalog...a-frame.git
 nlopt        362f338891785a5bc4...  catalog...minek/nlopt
 [2 auto-installed packages not shown]



Collections:
("/Users/ronaldgarcia/Library/Racket/7.1/collects"
 (non-existent-path))
("/Applications/Racket v7.1/collects"
 ("acks" "compiler" "data" "db" "dynext" "ffi" "file" "info" "info-domain" "json" "launcher" "net" "openssl" "pkg" "planet" "racket" "raco" "reader" "realm" "s-exp" "setup" "syntax" "version" "xml"))

Recent Internal Errors: 
Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((test) (main)) #t))
>Description:
using compose to compose two functions does not preserve the arity of the leading function (the docs seem to suggest that it should)
>How-To-Repeat:
(define (f x y)
  x)
(define (g y)
  y)

(procedure-arity f)
(procedure-arity (compose g f))
>Fix:
