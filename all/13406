From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Thu Jan  3 04:07:59 2013
Received: from mail-oa0-f45.google.com (mail-oa0-f45.google.com [209.85.219.45])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id r0396eYL023131
	for <bugs@bugs.plt-scheme.org>; Thu, 3 Jan 2013 04:06:40 -0500
Message-Id: <201301030906.r0396bMi023123@champlain.ccs.neu.edu>
Date: Thu, 3 Jan 2013 04:06:37 -0500
From: jmj@fellowhuman.com
To: bugs@racket-lang.org
Subject: #:method spec in web-server/dispatch is undocumentedly fussy

>Number:         13406
>Category:       all
>Synopsis:       #:method spec in web-server/dispatch is undocumentedly fussy
>Class:          doc-bug
>Responsible:    jay
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Thu Jan 03 04:08:01 -0500 2013
>Closed-Date:    Fri Jan 04 07:45:13 -0500 2013
>Last-Modified:  Fri Jan 04 07:48:01 -0500 2013
>Originator:     Jordan Johnson
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.3.1
>Environment:
macosx "Darwin whiz.local 10.8.0 Darwin Kernel Version 10.8.0: Tue Jun  7 16:33:36 PDT 2011; root:xnu-1504.15.3~1/RELEASE_I386 i386 i386" (i386-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 254151448
Links: (links) = ("hw" "jmj"); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()


Collections:
("/Users/jteach/Library/Racket/5.3.1/collects"
 ("gbk-prog1-2012-2013-handin-client" "info-domain"))
("/Applications/Racket v5.3.1/collects"
 ("2htdp" "algol60" "at-exp" "browser" "compatibility" "compiler" "config" "data" "datalog" "db" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "future-visualizer" "games" "graphics" "gui-debugger" "handin-server" "help" "hierlist" "htdp" "html" "icons" "images" "info-domain" "json" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "overridden-collects" "parser-tools" "picturing-programs" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "redex" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-engine" "texpict" "trace" "typed" "typed-racket" "typed-scheme" "unstable" "version" "web-server" "wxme" "xml" "xrepl"))

Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((main) (test))))
>Description:
The new feature of specifying HTTP method in dispatch-rules (thanks for implementing it, Jay!) appears to accept only lowercase strings, and it silently fails to match byte strings and non-lowercase strings.

This type-and-format requirement definitely should be documented -- I had to look at collects/tests/web-server/dispatch-test.rkt to figure this one out -- but it would be Really Nice if it handled the conventional uppercase and if there were a contract on the #:method argument to signal an error when byte-strings are used, too.
>How-To-Repeat:
;; This program will do it:
#lang racket
(require web-server/servlet web-server/servlet-env)

(define-values (test-dispatch test-url)
  (dispatch-rules
   [("") (text-response "GET works fine.")]
   [("") #:method #"POST" (text-response "This won't match.")]
   [("") #:method #"post" (text-response "This won't match.")]
   [("") #:method "POST" (text-response "This won't match.")]
   [("") #:method "post" (text-response "Only this will match.")]
   [else (text-response "(some other irrelevant URL)")]))

(define ((text-response s) req) ; string -> (request -> response)
  (response/full 200 #"OK" (current-seconds) #"text/plain" '()
                 (list (string->bytes/utf-8 s) #"\n\n")))

(serve/servlet test-dispatch
               #:launch-browser? #f
               #:servlet-regexp #rx"")

#| Then...
bash$ curl -X POST http://localhost:8000/
Only this will match.
|#
>Fix:
>Audit-Trail:
Responsible changed from "nobody" to "jay" by jay@racket-lang.org at Fri, 04 Jan 2013 07:45:13 -0500
Reason>>> A commit by jay@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/c07ff948ee
State changed from "open" to "closed" by jay@racket-lang.org at Fri, 04 Jan 2013 07:45:13 -0500
Reason>>> A commit by jay@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/c07ff948ee
From: Jay McCarthy <jay.mccarthy@gmail.com>
To: Jordan Johnson <jmj@fellowhuman.com>, bugs <bugs@racket-lang.org>
Cc: nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/13406: #:method spec in web-server/dispatch is
 undocumentedly fussy
Date: Fri, 4 Jan 2013 05:44:26 -0700

 --20cf307f333ef7072a04d275d6d6
 Content-Type: text/plain; charset=UTF-8
 
 I just pushed this addition to the docs:
 
 The method syntax is used in a
 match<file:///home/jay/Dev/scm/plt/doc/reference/match.html?q=dispatch#%28form._%28%28lib._racket%2Fmatch..rkt%29._match%29%29>expression
 to match the
 request-method<file:///home/jay/Dev/scm/plt/doc/web-server/http.html?q=dispatch#%28def._%28%28lib._web-server%2Fhttp%2Frequest-structs..rkt%29._request-method%29%29>part
 of the incoming request object. However, since HTTP allows methods to
 use any case, the byte string from
 request-method<file:///home/jay/Dev/scm/plt/doc/web-server/http.html?q=dispatch#%28def._%28%28lib._web-server%2Fhttp%2Frequest-structs..rkt%29._request-method%29%29>is
 normalized to a lower-case string. Thus, valid patterns are things
 like:
 "get", "post", "head",
 (or<file:///home/jay/Dev/scm/plt/doc/reference/if.html?q=dispatch#%28form._%28%28lib._racket%2Fprivate%2Fletstx-scheme..rkt%29._or%29%29>
 "get" "post"), etc.
 
 Jay
 
 
 On Thu, Jan 3, 2013 at 2:08 AM, <jmj@fellowhuman.com> wrote:
 
 > A new problem report is waiting at
 >   http://bugs.racket-lang.org/query/?cmd=view&pr=13406
 >
 > Reported by Jordan Johnson for release: 5.3.1
 >
 > *** Description:
 > The new feature of specifying HTTP method in dispatch-rules (thanks for
 > implementing it, Jay!) appears to accept only lowercase strings, and it
 > silently fails to match byte strings and non-lowercase strings.
 >
 > This type-and-format requirement definitely should be documented -- I had
 > to look at collects/tests/web-server/dispatch-test.rkt to figure this one
 > out -- but it would be Really Nice if it handled the conventional uppercase
 > and if there were a contract on the #:method argument to signal an error
 > when byte-strings are used, too.
 >
 > *** How to repeat:
 > ;; This program will do it:
 > #lang racket
 > (require web-server/servlet web-server/servlet-env)
 >
 > (define-values (test-dispatch test-url)
 >   (dispatch-rules
 >    [("") (text-response "GET works fine.")]
 >    [("") #:method #"POST" (text-response "This won't match.")]
 >    [("") #:method #"post" (text-response "This won't match.")]
 >    [("") #:method "POST" (text-response "This won't match.")]
 >    [("") #:method "post" (text-response "Only this will match.")]
 >    [else (text-response "(some other irrelevant URL)")]))
 >
 > (define ((text-response s) req) ; string -> (request -> response)
 >   (response/full 200 #"OK" (current-seconds) #"text/plain" '()
 >                  (list (string->bytes/utf-8 s) #"\n\n")))
 >
 > (serve/servlet test-dispatch
 >                #:launch-browser? #f
 >                #:servlet-regexp #rx"")
 >
 > #| Then...
 > bash$ curl -X POST http://localhost:8000/
 > Only this will match.
 > |#
 >
 > *** Environment:
 > macosx "Darwin whiz.local 10.8.0 Darwin Kernel Version 10.8.0: Tue Jun  7
 > 16:33:36 PDT 2011; root:xnu-1504.15.3~1/RELEASE_I386 i386 i386"
 > (i386-macosx/3m) (get-display-depth) = 32
 > Human Language: english
 > (current-memory-use) 254151448
 > Links: (links) = ("hw" "jmj"); (links #:user? #f) = (); (links #:root? #t)
 > = (); (links #:user? #f #:root? #t) = ()
 >
 >
 > Collections:
 > ("/Users/jteach/Library/Racket/5.3.1/collects"
 >  ("gbk-prog1-2012-2013-handin-client" "info-domain"))
 > ("/Applications/Racket v5.3.1/collects"
 >  ("2htdp" "algol60" "at-exp" "browser" "compatibility" "compiler" "config"
 > "data" "datalog" "db" "defaults" "deinprogramm" "drracket" "drscheme"
 > "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework"
 > "frtime" "future-visualizer" "games" "graphics" "gui-debugger"
 > "handin-server" "help" "hierlist" "htdp" "html" "icons" "images"
 > "info-domain" "json" "lang" "launcher" "lazy" "macro-debugger" "make"
 > "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl"
 > "overridden-collects" "parser-tools" "picturing-programs" "plai" "planet"
 > "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit"
 > "raco" "reader" "readline" "redex" "rnrs" "s-exp" "scheme" "schemeunit"
 > "scribble" "scribblings" "scriblib" "setup" "sgl" "slatex" "slideshow"
 > "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color"
 > "teachpack" "test-engine" "texpict" "trace" "typed" "typed-racket"
 > "typed-scheme" "unstable" "version" "web-server" "wxme" "xml" "xrepl"))
 >
 > Computer Language: (("Determine language from source") (#(#t print
 > mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((main)
 > (test))))
 >
 >
 
 
 -- 
 Jay McCarthy <jay@cs.byu.edu>
 Assistant Professor / Brigham Young University
 http://faculty.cs.byu.edu/~jay
 
 "The glory of God is Intelligence" - D&C 93
 
 --20cf307f333ef7072a04d275d6d6
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 <div dir=3D"ltr">I just pushed this addition to the docs:<div><br></div><di=
 v>The <span class=3D"">method</span> syntax is used in a <span class=3D""><=
 a href=3D"file:///home/jay/Dev/scm/plt/doc/reference/match.html?q=3Ddispatc=
 h#%28form._%28%28lib._racket%2Fmatch..rkt%29._match%29%29" class=3D"">match=
 </a></span> expression to
 match the <span class=3D""><a href=3D"file:///home/jay/Dev/scm/plt/doc/web-=
 server/http.html?q=3Ddispatch#%28def._%28%28lib._web-server%2Fhttp%2Freques=
 t-structs..rkt%29._request-method%29%29" class=3D"">request-method</a></spa=
 n> part of the incoming request
 object. However, since HTTP allows methods to use any case, the byte
 string from <span class=3D""><a href=3D"file:///home/jay/Dev/scm/plt/doc/we=
 b-server/http.html?q=3Ddispatch#%28def._%28%28lib._web-server%2Fhttp%2Frequ=
 est-structs..rkt%29._request-method%29%29" class=3D"">request-method</a></s=
 pan> is normalized to a lower-case
 string. Thus, valid patterns are things like: <span class=3D"">&quot;get&qu=
 ot;</span>,
 <span class=3D"">&quot;post&quot;</span>, <span class=3D"">&quot;head&quot;=
 </span>, <span class=3D"">(</span><span class=3D""><a href=3D"file:///home/=
 jay/Dev/scm/plt/doc/reference/if.html?q=3Ddispatch#%28form._%28%28lib._rack=
 et%2Fprivate%2Fletstx-scheme..rkt%29._or%29%29" class=3D"">or</a></span><sp=
 an class=3D""> </span><span class=3D"">&quot;get&quot;</span><span class=3D=
 ""> </span><span class=3D"">&quot;post&quot;</span><span class=3D"">)</span=
 >, etc.<br>
 </div><div><br></div><div style>Jay</div></div><div class=3D"gmail_extra"><=
 br><br><div class=3D"gmail_quote">On Thu, Jan 3, 2013 at 2:08 AM,  <span di=
 r=3D"ltr">&lt;<a href=3D"mailto:jmj@fellowhuman.com" target=3D"_blank">jmj@=
 fellowhuman.com</a>&gt;</span> wrote:<br>
 <blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1p=
 x #ccc solid;padding-left:1ex">A new problem report is waiting at<br>
 =C2=A0 <a href=3D"http://bugs.racket-lang.org/query/?cmd=3Dview&amp;pr=3D13=
 406" target=3D"_blank">http://bugs.racket-lang.org/query/?cmd=3Dview&amp;pr=
 =3D13406</a><br>
 <br>
 Reported by Jordan Johnson for release: 5.3.1<br>
 <br>
 *** Description:<br>
 The new feature of specifying HTTP method in dispatch-rules (thanks for imp=
 lementing it, Jay!) appears to accept only lowercase strings, and it silent=
 ly fails to match byte strings and non-lowercase strings.<br>
 <br>
 This type-and-format requirement definitely should be documented -- I had t=
 o look at collects/tests/web-server/dispatch-test.rkt to figure this one ou=
 t -- but it would be Really Nice if it handled the conventional uppercase a=
 nd if there were a contract on the #:method argument to signal an error whe=
 n byte-strings are used, too.<br>
 
 <br>
 *** How to repeat:<br>
 ;; This program will do it:<br>
 #lang racket<br>
 (require web-server/servlet web-server/servlet-env)<br>
 <br>
 (define-values (test-dispatch test-url)<br>
 =C2=A0 (dispatch-rules<br>
 =C2=A0 =C2=A0[(&quot;&quot;) (text-response &quot;GET works fine.&quot;)]<b=
 r>
 =C2=A0 =C2=A0[(&quot;&quot;) #:method #&quot;POST&quot; (text-response &quo=
 t;This won&#39;t match.&quot;)]<br>
 =C2=A0 =C2=A0[(&quot;&quot;) #:method #&quot;post&quot; (text-response &quo=
 t;This won&#39;t match.&quot;)]<br>
 =C2=A0 =C2=A0[(&quot;&quot;) #:method &quot;POST&quot; (text-response &quot=
 ;This won&#39;t match.&quot;)]<br>
 =C2=A0 =C2=A0[(&quot;&quot;) #:method &quot;post&quot; (text-response &quot=
 ;Only this will match.&quot;)]<br>
 =C2=A0 =C2=A0[else (text-response &quot;(some other irrelevant URL)&quot;)]=
 ))<br>
 <br>
 (define ((text-response s) req) ; string -&gt; (request -&gt; response)<br>
 =C2=A0 (response/full 200 #&quot;OK&quot; (current-seconds) #&quot;text/pla=
 in&quot; &#39;()<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(list (string=
 -&gt;bytes/utf-8 s) #&quot;\n\n&quot;)))<br>
 <br>
 (serve/servlet test-dispatch<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0#:launch-browser? #f=
 <br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0#:servlet-regexp #rx=
 &quot;&quot;)<br>
 <br>
 #| Then...<br>
 bash$ curl -X POST <a href=3D"http://localhost:8000/" target=3D"_blank">htt=
 p://localhost:8000/</a><br>
 Only this will match.<br>
 |#<br>
 <br>
 *** Environment:<br>
 macosx &quot;Darwin whiz.local 10.8.0 Darwin Kernel Version 10.8.0: Tue Jun=
  =C2=A07 16:33:36 PDT 2011; root:xnu-1504.15.3~1/RELEASE_I386 i386 i386&quo=
 t; (i386-macosx/3m) (get-display-depth) =3D 32<br>
 Human Language: english<br>
 (current-memory-use) 254151448<br>
 Links: (links) =3D (&quot;hw&quot; &quot;jmj&quot;); (links #:user? #f) =3D=
  (); (links #:root? #t) =3D (); (links #:user? #f #:root? #t) =3D ()<br>
 <br>
 <br>
 Collections:<br>
 (&quot;/Users/jteach/Library/Racket/5.3.1/collects&quot;<br>
 =C2=A0(&quot;gbk-prog1-2012-2013-handin-client&quot; &quot;info-domain&quot=
 ;))<br>
 (&quot;/Applications/Racket v5.3.1/collects&quot;<br>
 =C2=A0(&quot;2htdp&quot; &quot;algol60&quot; &quot;at-exp&quot; &quot;brows=
 er&quot; &quot;compatibility&quot; &quot;compiler&quot; &quot;config&quot; =
 &quot;data&quot; &quot;datalog&quot; &quot;db&quot; &quot;defaults&quot; &q=
 uot;deinprogramm&quot; &quot;drracket&quot; &quot;drscheme&quot; &quot;dyne=
 xt&quot; &quot;embedded-gui&quot; &quot;eopl&quot; &quot;errortrace&quot; &=
 quot;ffi&quot; &quot;file&quot; &quot;framework&quot; &quot;frtime&quot; &q=
 uot;future-visualizer&quot; &quot;games&quot; &quot;graphics&quot; &quot;gu=
 i-debugger&quot; &quot;handin-server&quot; &quot;help&quot; &quot;hierlist&=
 quot; &quot;htdp&quot; &quot;html&quot; &quot;icons&quot; &quot;images&quot=
 ; &quot;info-domain&quot; &quot;json&quot; &quot;lang&quot; &quot;launcher&=
 quot; &quot;lazy&quot; &quot;macro-debugger&quot; &quot;make&quot; &quot;mr=
 ed&quot; &quot;mrlib&quot; &quot;mysterx&quot; &quot;mzcom&quot; &quot;mzli=
 b&quot; &quot;mzscheme&quot; &quot;net&quot; &quot;openssl&quot; &quot;over=
 ridden-collects&quot; &quot;parser-tools&quot; &quot;picturing-programs&quo=
 t; &quot;plai&quot; &quot;planet&quot; &quot;plot&quot; &quot;preprocessor&=
 quot; &quot;profile&quot; &quot;r5rs&quot; &quot;r6rs&quot; &quot;racket&qu=
 ot; &quot;racklog&quot; &quot;rackunit&quot; &quot;raco&quot; &quot;reader&=
 quot; &quot;readline&quot; &quot;redex&quot; &quot;rnrs&quot; &quot;s-exp&q=
 uot; &quot;scheme&quot; &quot;schemeunit&quot; &quot;scribble&quot; &quot;s=
 cribblings&quot; &quot;scriblib&quot; &quot;setup&quot; &quot;sgl&quot; &qu=
 ot;slatex&quot; &quot;slideshow&quot; &quot;srfi&quot; &quot;stepper&quot; =
 &quot;string-constants&quot; &quot;swindle&quot; &quot;syntax&quot; &quot;s=
 yntax-color&quot; &quot;teachpack&quot; &quot;test-engine&quot; &quot;texpi=
 ct&quot; &quot;trace&quot; &quot;typed&quot; &quot;typed-racket&quot; &quot=
 ;typed-scheme&quot; &quot;unstable&quot; &quot;version&quot; &quot;web-serv=
 er&quot; &quot;wxme&quot; &quot;xml&quot; &quot;xrepl&quot;))<br>
 
 <br>
 Computer Language: ((&quot;Determine language from source&quot;) (#(#t prin=
 t mixed-fraction-e #f #t debug) (default) #() &quot;#lang racket\n&quot; #t=
  #t ((main) (test))))<br>
 <br>
 </blockquote></div><br><br clear=3D"all"><div><br></div>-- <br>Jay McCarthy=
  &lt;<a href=3D"mailto:jay@cs.byu.edu" target=3D"_blank">jay@cs.byu.edu</a>=
 &gt;<br>Assistant Professor / Brigham Young University<br><a href=3D"http:/=
 /faculty.cs.byu.edu/~jay" target=3D"_blank">http://faculty.cs.byu.edu/~jay<=
 /a><br>
 <br>&quot;The glory of God is Intelligence&quot; - D&amp;C 93
 </div>
 
 --20cf307f333ef7072a04d275d6d6--
