From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Sat Aug  9 18:15:51 2014
Received: from mail-ig0-f182.google.com (mail-ig0-f182.google.com [209.85.213.182])
	by winooski.ccs.neu.edu (8.14.7/8.14.7) with ESMTP id s79MFlED027285
	for <bugs@bugs.plt-scheme.org>; Sat, 9 Aug 2014 18:15:47 -0400
Message-Id: <201408092215.s79MFiCa027278@winooski.ccs.neu.edu>
Date: Sat, 9 Aug 2014 18:15:44 -0400
From: m4burns@uwaterloo.ca
To: bugs@racket-lang.org
Subject: sandbox escape via racket/place

>Number:         14677
>Category:       all
>Synopsis:       sandbox escape via racket/place
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Sat Aug 09 18:16:01 -0400 2014
>Closed-Date:    Mon Aug 11 06:27:03 -0400 2014
>Last-Modified:  Mon Aug 11 06:27:03 -0400 2014
>Originator:     Marc Burns
>Organization:
plt
>Submitter-Id:   unknown
>Release:        6.1
>Environment:
rudybot
>Description:
The dynamic-place form provided by racket/place can be used to escape a sandbox. PoC in the following transcript from #racket:

< m4burns > rudybot: (require racket/place)
...
< m4burns > rudybot: (dynamic-place 'racket 'find-files)
< rudybot > m4burns: ; Value: #<place>
< rudybot > m4burns: ; stderr: "application: not a procedure;\n expected a procedure that can be applied to arguments\n  given: #<place-channel>\n  arguments...:\n   #<path:.git>\n [... trace stuff]
< m4burns > rudybot: (find-files identity)
< rudybot > m4burns: error: directory-list: `read' access denied for /mnt/rudybot/

The dynamic-place invocation created a new place, loaded the racket module, and attempted to evaluate find-files with the place channel as the predicate. Evaluation failed since the place channel is not a function, but we can see that find-files did attempt to apply it to #<path:.git>, which is presumably in rudybot's working directory. I should not have been able read the contents of that directory in the first place, as shown in the last line of the transcript.

If one could find a form in the standard collects that would accept a place channel as its only argument and proceed to read/eval from that channel, or from stdin, this could lead to arbitrary execution outside the sandbox.
>How-To-Repeat:

>Fix:
>Audit-Trail:
Responsible changed from "nobody" to "mflatt" by mflatt@racket-lang.org at Mon, 11 Aug 2014 06:27:03 -0400
Reason>>> A commit by mflatt@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/2220452b72
State changed from "open" to "closed" by mflatt@racket-lang.org at Mon, 11 Aug 2014 06:27:03 -0400
Reason>>> A commit by mflatt@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/2220452b72
  | racket/place: protect place-creation bindings
  | 
  | Closes PR 14677

