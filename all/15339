From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Wed Aug 17 18:21:05 2016
Received: from mail-it0-f51.google.com (mail-it0-f51.google.com [209.85.214.51])
	by winooski.ccs.neu.edu (8.14.7/8.14.7) with ESMTP id u7HML26B008475
	for <bugs@bugs.plt-scheme.org>; Wed, 17 Aug 2016 18:21:02 -0400
Message-Id: <201608172220.u7HMKxa5008468@winooski.ccs.neu.edu>
Date: Wed, 17 Aug 2016 18:20:59 -0400
From: schuster@ccs.neu.edu
To: bugs@racket-lang.org
Subject: test-equal? gives wrong error message when require is in wrong place

>Number:         15339
>Category:       all
>Synopsis:       test-equal? gives wrong error message when require is in wrong place
>Class:          sw-bug
>Responsible:    nobody
>Severity:       non-critical
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Wed Aug 17 18:24:01 -0400 2016
>Originator:     Jonathan Schuster
>Organization:
plt
>Submitter-Id:   unknown
>Release:        6.6
>Environment:
unix "Linux blackrock 4.6.4-1-ARCH #1 SMP PREEMPT Mon Jul 11 19:12:32 CEST 2016 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 385909436
raco pkg (show):
Installation-wide:
 Package            Checksum             Source
 main-distribution  e24e5af07557ac0f...  catalog...tribution
 racket-lib         21b7fee99c95a8d7...  catalog racket-lib
 [185 auto-installed packages not shown]
User-specific for installation "6.6":
 Package   Checksum                Source
 nanopass  fe435d94718fa6e4b31...  catalog...ework-racket
 [1 auto-installed package not shown]



Collections:
("/home/schu/.racket/6.6/collects"
 (non-existent-path))
("/usr/share/racket/collects"
 ("acks" "compiler" "data" "db" "dynext" "ffi" "file" "info" "info-domain" "json" "launcher" "net" "openssl" "pkg" "planet" "racket" "raco" "reader" "realm" "s-exp" "setup" "syntax" "version" "xml"))

Recent Internal Errors: 
Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((test) (main)) #t))
>Description:
If you call test-equal? at some point before rackunit is required, you get a message of the form "test-equal?: Correct form is ..." even when using test-equal? correctly. This minimal example gives the error:

#lang racket

(test-equal? "foo" 1 2)
(require rackunit)

I would expect to get some kind of out-of-scope error here, or for it to just work, but not the error message I actually receive (which doesn't even point to something wrong in the program).
>How-To-Repeat:

>Fix:
