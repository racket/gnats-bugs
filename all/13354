From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Sun Dec  9 00:29:46 2012
Received: from mail-ie0-f172.google.com (mail-ie0-f172.google.com [209.85.223.172])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id qB95TgPE030851
	for <bugs@bugs.plt-scheme.org>; Sun, 9 Dec 2012 00:29:43 -0500
Message-Id: <201212090529.qB95TePv030846@champlain.ccs.neu.edu>
Date: Sun, 9 Dec 2012 00:29:40 -0500
From: neil.toronto@gmail.com
To: bugs@racket-lang.org
Subject: The type of covariance cannot be converted to a contract

>Number:         13354
>Category:       all
>Synopsis:       The type of covariance cannot be converted to a contract
>Class:          sw-bug
>Responsible:    stamourv
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Sun Dec 09 00:32:01 -0500 2012
>Closed-Date:    Mon Dec 17 15:00:05 -0500 2012
>Last-Modified:  Mon Dec 17 15:00:05 -0500 2012
>Originator:     Neil Toronto
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.3.1.9--2012-12-07(fff52121/d)
>Environment:
unix "Linux schroder 2.6.38-15-generic #66-Ubuntu SMP Tue Aug 14 17:24:44 UTC 2012 x86_64 x86_64 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 1182249736
Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()


Collections:
("/home/neil/.racket/5.3.1.9/collects"
 (non-existent-path))
("/home/neil/plt/collects"
 ("wxme" "texpict" "compiler" "typed" "games" "algol60" "browser" "file" "readline" "dynext" "scribblings" "mzcom" "compatibility" "trace" "profile" "data" "sirmail" "json" "parser-tools" "math" "tex2page" "scriblib" "swindle" "schemeunit" "r6rs" "xrepl" "mzlib" "handin-client" "repo-time-stamp" "mysterx" "mrlib" "scheme" "combinator-parser" "html" "test-engine" "planet2" "version" ".gitignore" "make" "ffi" "mzscheme" "picturing-programs" "hierlist" "teachpack" "at-exp" "lazy" "scribble" "openssl" "defaults" "racket" "handin-server" "2htdp" "drscheme" "help" "eopl" "racklog" "drracket" "icons" "db" "errortrace" "preprocessor" "rackunit" "rnrs" "string-constants" "meta" "slatex" "graphics" "redex" "reader" "plai" "honu" "config" "stepper" "frtime" "unstable" "r5rs" "planet" "tests" "s-exp" "embedded-gui" "info-domain" "syntax" "launcher" "typed-scheme" "syntax-color" "srfi" "test-box-recovery" "xml" "images" "future-visualizer" "plot" "datalog" "sgl" "htdp" "setup" "lang" "ra!
 co" "gui-debugger" "framework" "web-server" "deinprogramm" "slideshow" "macro-debugger" "typed-racket" "net" "mred"))

Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((main) (test))))
>Description:
>How-To-Repeat:
#lang racket
(require math/statistics)
covariance


More self-contained:

#lang racket

(module typed-defs typed/racket
  (provide covariance)
  (: covariance (case-> ((Sequenceof Real) (Sequenceof Real) [#:bias (U #t #f Real)] -> Real)
                        ((Sequenceof Real) (Sequenceof Real) (Option (Sequenceof Real))
                                           [#:bias (U #t #f Real)] -> Real)))
  (define (covariance xs ys [ws #f] #:bias [bias #f])
    (error 'undefined)))

(require 'typed-defs)
covariance
>Fix:
>Audit-Trail:
From: Robby Findler <robby@eecs.northwestern.edu>
To: Neil Toronto <neil.toronto@gmail.com>, bugs <bugs@racket-lang.org>
Cc: nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/13354: The type of covariance cannot be
 converted to a contract
Date: Sun, 9 Dec 2012 07:29:10 -0600

 One can turn this into an ->* I believe.
 
 Robby
 
 On Sat, Dec 8, 2012 at 11:32 PM,  <neil.toronto@gmail.com> wrote:
 > A new problem report is waiting at
 >   http://bugs.racket-lang.org/query/?cmd=view&pr=13354
 >
 > Reported by Neil Toronto for release: 5.3.1.9--2012-12-07(fff52121/d)
 >
 > *** Description:
 >
 >
 > *** How to repeat:
 > #lang racket
 > (require math/statistics)
 > covariance
 >
 >
 > More self-contained:
 >
 > #lang racket
 >
 > (module typed-defs typed/racket
 >   (provide covariance)
 >   (: covariance (case-> ((Sequenceof Real) (Sequenceof Real) [#:bias (U #t #f Real)] -> Real)
 >                         ((Sequenceof Real) (Sequenceof Real) (Option (Sequenceof Real))
 >                                            [#:bias (U #t #f Real)] -> Real)))
 >   (define (covariance xs ys [ws #f] #:bias [bias #f])
 >     (error 'undefined)))
 >
 > (require 'typed-defs)
 > covariance
 >
 > *** Environment:
 > unix "Linux schroder 2.6.38-15-generic #66-Ubuntu SMP Tue Aug 14 17:24:44 UTC 2012 x86_64 x86_64 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
 > Human Language: english
 > (current-memory-use) 1182249736
 > Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()
 >
 >
 > Collections:
 > ("/home/neil/.racket/5.3.1.9/collects"
 >  (non-existent-path))
 > ("/home/neil/plt/collects"
 >  ("wxme" "texpict" "compiler" "typed" "games" "algol60" "browser" "file" "readline" "dynext" "scribblings" "mzcom" "compatibility" "trace" "profile" "data" "sirmail" "json" "parser-tools" "math" "tex2page" "scriblib" "swindle" "schemeunit" "r6rs" "xrepl" "mzlib" "handin-client" "repo-time-stamp" "mysterx" "mrlib" "scheme" "combinator-parser" "html" "test-engine" "planet2" "version" ".gitignore" "make" "ffi" "mzscheme" "picturing-programs" "hierlist" "teachpack" "at-exp" "lazy" "scribble" "openssl" "defaults" "racket" "handin-server" "2htdp" "drscheme" "help" "eopl" "racklog" "drracket" "icons" "db" "errortrace" "preprocessor" "rackunit" "rnrs" "string-constants" "meta" "slatex" "graphics" "redex" "reader" "plai" "honu" "config" "stepper" "frtime" "unstable" "r5rs" "planet" "tests" "s-exp" "embedded-gui" "info-domain" "syntax" "launcher" "typed-scheme" "syntax-color" "srfi" "test-box-recovery" "xml" "images" "future-visualizer" "plot" "datalog" "sgl" "htdp" "setup" "lang" "ra!
 >  co" "gui-debugger" "framework" "web-server" "deinprogramm" "slideshow" "macro-debugger" "typed-racket" "net" "mred"))
 >
 > Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((main) (test))))
 >
 
From: Neil Toronto <neil.toronto@gmail.com>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: bugs <bugs@racket-lang.org>, nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/13354: The type of covariance cannot be converted
 to a contract
Date: Sun, 09 Dec 2012 09:26:29 -0700

 TR already does that for functions with similar types like `variance', 
 which has this type:
 
 (: variance (case-> ((Sequenceof Real) [#:bias (U #t #f Real)]
                                         -> Nonnegative-Real)
                      ((Sequenceof Real) (Option (Sequenceof Real))
                                         [#:bias (U #t #f Real)]
                                         -> Nonnegative-Real)))
 
 The only difference is that `covariance' starts with two required arguments.
 
 Neil âŠ¥
 
 On 12/09/2012 06:29 AM, Robby Findler wrote:
 > One can turn this into an ->* I believe.
 >
 > Robby
 >
 > On Sat, Dec 8, 2012 at 11:32 PM,  <neil.toronto@gmail.com> wrote:
 >> A new problem report is waiting at
 >>    http://bugs.racket-lang.org/query/?cmd=view&pr=13354
 >>
 >> Reported by Neil Toronto for release: 5.3.1.9--2012-12-07(fff52121/d)
 >>
 >> *** Description:
 >>
 >>
 >> *** How to repeat:
 >> #lang racket
 >> (require math/statistics)
 >> covariance
 >>
 >>
 >> More self-contained:
 >>
 >> #lang racket
 >>
 >> (module typed-defs typed/racket
 >>    (provide covariance)
 >>    (: covariance (case-> ((Sequenceof Real) (Sequenceof Real) [#:bias (U #t #f Real)] -> Real)
 >>                          ((Sequenceof Real) (Sequenceof Real) (Option (Sequenceof Real))
 >>                                             [#:bias (U #t #f Real)] -> Real)))
 >>    (define (covariance xs ys [ws #f] #:bias [bias #f])
 >>      (error 'undefined)))
 >>
 >> (require 'typed-defs)
 >> covariance
 >>
 >> *** Environment:
 >> unix "Linux schroder 2.6.38-15-generic #66-Ubuntu SMP Tue Aug 14 17:24:44 UTC 2012 x86_64 x86_64 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
 >> Human Language: english
 >> (current-memory-use) 1182249736
 >> Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()
 >>
 >>
 >> Collections:
 >> ("/home/neil/.racket/5.3.1.9/collects"
 >>   (non-existent-path))
 >> ("/home/neil/plt/collects"
 >>   ("wxme" "texpict" "compiler" "typed" "games" "algol60" "browser" "file" "readline" "dynext" "scribblings" "mzcom" "compatibility" "trace" "profile" "data" "sirmail" "json" "parser-tools" "math" "tex2page" "scriblib" "swindle" "schemeunit" "r6rs" "xrepl" "mzlib" "handin-client" "repo-time-stamp" "mysterx" "mrlib" "scheme" "combinator-parser" "html" "test-engine" "planet2" "version" ".gitignore" "make" "ffi" "mzscheme" "picturing-programs" "hierlist" "teachpack" "at-exp" "lazy" "scribble" "openssl" "defaults" "racket" "handin-server" "2htdp" "drscheme" "help" "eopl" "racklog" "drracket" "icons" "db" "errortrace" "preprocessor" "rackunit" "rnrs" "string-constants" "meta" "slatex" "graphics" "redex" "reader" "plai" "honu" "config" "stepper" "frtime" "unstable" "r5rs" "planet" "tests" "s-exp" "embedded-gui" "info-domain" "syntax" "launcher" "typed-scheme" "syntax-color" "srfi" "test-box-recovery" "xml" "images" "future-visualizer" "plot" "datalog" "sgl" "htdp" "setup" "lang" "ra!
 >>   co" "gui-debugger" "framework" "web-server" "deinprogramm" "slideshow" "macro-debugger" "typed-racket" "net" "mred"))
 >>
 >> Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((main) (test))))
 >>
 

Responsible changed from "nobody" to "stamourv" by ntoronto at Sat, 15 Dec 2012 15:18:15 -0500
Reason>>> Vincent's code

From: Neil Toronto <neil.toronto@gmail.com>
To: neil.toronto@gmail.com, bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/13354: The type of covariance cannot be converted
 to a contract
Date: Sat, 15 Dec 2012 13:27:14 -0700

 This is a multi-part message in MIME format.
 --------------090803000209090605050301
 Content-Type: text/plain; charset=UTF-8; format=flowed
 Content-Transfer-Encoding: 8bit
 
 On 12/08/2012 10:32 PM, neil.toronto@gmail.com wrote:
 > #lang racket
 > (require math/statistics)
 > covariance
 >
 >
 > More self-contained:
 >
 > #lang racket
 >
 > (module typed-defs typed/racket
 >    (provide covariance)
 >    (: covariance (case-> ((Sequenceof Real) (Sequenceof Real) [#:bias (U #t #f Real)] -> Real)
 >                          ((Sequenceof Real) (Sequenceof Real) (Option (Sequenceof Real))
 >                                             [#:bias (U #t #f Real)] -> Real)))
 >    (define (covariance xs ys [ws #f] #:bias [bias #f])
 >      (error 'undefined)))
 >
 > (require 'typed-defs)
 > covariance
 
 Vincent, is it feasible to bump this up near the top of your to-do list? 
 I hate to be a pain and make such requests, but I'm working on 
 `typed/plot' and this error is making it difficult. :/
 
 To partly make up for being a pain, I've attached a small test suite. 
 Some of the tests pass. Those that don't pass involve functions with 
 0-2, 1-3, 2-3 and 2-4 optional positional arguments, which also have an 
 optional keyword argument.
 
 Thanks!
 
 Neil âŠ¥
 
 
 --------------090803000209090605050301
 Content-Type: text/plain; charset=UTF-8;
  name="arrow-star-contracts.rkt"
 Content-Transfer-Encoding: base64
 Content-Disposition: attachment;
  filename="arrow-star-contracts.rkt"
 
 I2xhbmcgcmFja2V0L2Jhc2UKCihyZXF1aXJlIHR5cGVkL3JhY2t1bml0KQoKKG1vZHVsZSBk
 ZWZzIHR5cGVkL3JhY2tldC9iYXNlCiAgKHByb3ZpZGUgKGFsbC1kZWZpbmVkLW91dCkpCiAg
 CiAgKDogZm9vMGsgKGNhc2UtPiAoWyM6a3cgUmVhbF0gLT4gUmVhbCkpKQogIChkZWZpbmUg
 KGZvbzBrICM6a3cgW2t3IDBdKQogICAga3cpCiAgCiAgKDogZm9vMDFrIChjYXNlLT4gKFsj
 Omt3IFJlYWxdIC0+IFJlYWwpCiAgICAgICAgICAgICAgICAgICAgKFJlYWwgWyM6a3cgUmVh
 bF0gLT4gUmVhbCkpKQogIChkZWZpbmUgKGZvbzAxayBbeCAwXSAjOmt3IFtrdyAwXSkKICAg
 ICgrIHgga3cpKQogIAogICg6IGZvbzAxMmsgKGNhc2UtPiAoWyM6a3cgUmVhbF0gLT4gUmVh
 bCkKICAgICAgICAgICAgICAgICAgICAgKFJlYWwgWyM6a3cgUmVhbF0gLT4gUmVhbCkKICAg
 ICAgICAgICAgICAgICAgICAgKFJlYWwgUmVhbCBbIzprdyBSZWFsXSAtPiBSZWFsKSkpCiAg
 KGRlZmluZSAoZm9vMDEyayBbeCAwXSBbeSAwXSAjOmt3IFtrdyAwXSkKICAgICgrIHggeSBr
 dykpCiAgCiAgKDogZm9vMTJrIChjYXNlLT4gKFJlYWwgWyM6a3cgUmVhbF0gLT4gUmVhbCkK
 ICAgICAgICAgICAgICAgICAgICAoUmVhbCBSZWFsIFsjOmt3IFJlYWxdIC0+IFJlYWwpKSkK
 ICAoZGVmaW5lIChmb28xMmsgeCBbeSAwXSAjOmt3IFtrdyAwXSkKICAgICgrIHggeSBrdykp
 CiAgCiAgKDogZm9vMTIzayAoY2FzZS0+IChSZWFsIFsjOmt3IFJlYWxdIC0+IFJlYWwpCiAg
 ICAgICAgICAgICAgICAgICAgIChSZWFsIFJlYWwgWyM6a3cgUmVhbF0gLT4gUmVhbCkKICAg
 ICAgICAgICAgICAgICAgICAgKFJlYWwgUmVhbCBSZWFsIFsjOmt3IFJlYWxdIC0+IFJlYWwp
 KSkKICAoZGVmaW5lIChmb28xMjNrIHggW3kgMF0gW3ogMF0gIzprdyBba3cgMF0pCiAgICAo
 KyB4IHkgeiBrdykpCiAgCiAgKDogZm9vMjNrIChjYXNlLT4gKFJlYWwgUmVhbCBbIzprdyBS
 ZWFsXSAtPiBSZWFsKQogICAgICAgICAgICAgICAgICAgIChSZWFsIFJlYWwgUmVhbCBbIzpr
 dyBSZWFsXSAtPiBSZWFsKSkpCiAgKGRlZmluZSAoZm9vMjNrIHggeSBbeiAwXSAjOmt3IFtr
 dyAwXSkKICAgICgrIHggeSB6IGt3KSkKICAKICAoOiBmb28yMzRrIChjYXNlLT4gKFJlYWwg
 UmVhbCBbIzprdyBSZWFsXSAtPiBSZWFsKQogICAgICAgICAgICAgICAgICAgICAoUmVhbCBS
 ZWFsIFJlYWwgWyM6a3cgUmVhbF0gLT4gUmVhbCkKICAgICAgICAgICAgICAgICAgICAgKFJl
 YWwgUmVhbCBSZWFsIFJlYWwgWyM6a3cgUmVhbF0gLT4gUmVhbCkpKQogIChkZWZpbmUgKGZv
 bzIzNGsgeCB5IFt6IDBdIFt3IDBdICM6a3cgW2t3IDBdKQogICAgKCsgeCB5IHogdyBrdykp
 CiAgKQoKKHJlcXVpcmUgJ2RlZnMpCgo7OzsgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
 LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQo7OzsgVGVzdHMg
 dGhhdCBjdXJyZW50bHkgcGFzcwoKOzsgVGhlc2UgZG9uJ3QgcmFpc2UgImNhbm5vdCBiZSBj
 b252ZXJ0ZWQgdG8gYSBjb250cmFjdCIgZXhjZXB0aW9uczoKKHZvaWQgZm9vMGspCih2b2lk
 IGZvbzAxaykKKHZvaWQgZm9vMTJrKQoKKGNoZWNrLWVxdWFsPyAoZm9vMGspIDApCihjaGVj
 ay1leG4gZXhuOmZhaWw6Y29udHJhY3Q/ICjOuyAoKSAoZm9vMGsgMSkpKQooY2hlY2stZXF1
 YWw/IChmb28wayAjOmt3IDEwKSAxMCkKKGNoZWNrLWV4biBleG46ZmFpbDpjb250cmFjdD8g
 KM67ICgpIChmb28wayAxICM6a3cgMTApKSkKCihjaGVjay1lcXVhbD8gKGZvbzAxaykgMCkK
 KGNoZWNrLWVxdWFsPyAoZm9vMDFrIDEpIDEpCihjaGVjay1leG4gZXhuOmZhaWw6Y29udHJh
 Y3Q/ICjOuyAoKSAoZm9vMDFrIDEgMSkpKQooY2hlY2stZXF1YWw/IChmb28wMWsgIzprdyAx
 MCkgMTApCihjaGVjay1lcXVhbD8gKGZvbzAxayAxICM6a3cgMTApIDExKQooY2hlY2stZXhu
 IGV4bjpmYWlsOmNvbnRyYWN0PyAozrsgKCkgKGZvbzAxayAxIDEgIzprdyAxMCkpKQoKKGNo
 ZWNrLWV4biBleG46ZmFpbDpjb250cmFjdD8gKM67ICgpIChmb28xMmspKSkKKGNoZWNrLWVx
 dWFsPyAoZm9vMTJrIDEpIDEpCihjaGVjay1lcXVhbD8gKGZvbzEyayAxIDEpIDIpCihjaGVj
 ay1leG4gZXhuOmZhaWw6Y29udHJhY3Q/ICjOuyAoKSAoZm9vMTJrIDEgMSAxKSkpCihjaGVj
 ay1leG4gZXhuOmZhaWw6Y29udHJhY3Q/ICjOuyAoKSAoZm9vMTJrICM6a3cgMTApKSkKKGNo
 ZWNrLWVxdWFsPyAoZm9vMTJrIDEgIzprdyAxMCkgMTEpCihjaGVjay1lcXVhbD8gKGZvbzEy
 ayAxIDEgIzprdyAxMCkgMTIpCihjaGVjay1leG4gZXhuOmZhaWw6Y29udHJhY3Q/ICjOuyAo
 KSAoZm9vMTJrIDEgMSAxICM6a3cgMTApKSkKCjs7OyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0t
 LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCjs7OyBU
 ZXN0cyB0aGF0IGN1cnJlbnRseSBmYWlsCgo7OyBUaGVzZSBjdXJyZW50bHkgcmFpc2UgImNh
 bm5vdCBiZSBjb252ZXJ0ZWQgdG8gYSBjb250cmFjdCIgZXhjZXB0aW9uczoKKHZvaWQgZm9v
 MDEyaykKKHZvaWQgZm9vMTIzaykKKHZvaWQgZm9vMjNrKQoodm9pZCBmb28yMzRrKQoKKGNo
 ZWNrLWVxdWFsPyAoZm9vMDEyaykgMCkKKGNoZWNrLWVxdWFsPyAoZm9vMDEyayAxKSAxKQoo
 Y2hlY2stZXF1YWw/IChmb28wMTJrIDEgMSkgMikKKGNoZWNrLWV4biBleG46ZmFpbDpjb250
 cmFjdD8gKM67ICgpIChmb28wMTJrIDEgMSAxKSkpCihjaGVjay1lcXVhbD8gKGZvbzAxMmsg
 IzprdyAxMCkgMTApCihjaGVjay1lcXVhbD8gKGZvbzAxMmsgMSAjOmt3IDEwKSAxMSkKKGNo
 ZWNrLWVxdWFsPyAoZm9vMDEyayAxIDEgIzprdyAxMCkgMTIpCihjaGVjay1leG4gZXhuOmZh
 aWw6Y29udHJhY3Q/ICjOuyAoKSAoZm9vMDEyayAxIDEgMSAjOmt3IDEwKSkpCgooY2hlY2st
 ZXhuIGV4bjpmYWlsOmNvbnRyYWN0PyAozrsgKCkgKGZvbzEyM2spKSkKKGNoZWNrLWVxdWFs
 PyAoZm9vMTIzayAxKSAxKQooY2hlY2stZXF1YWw/IChmb28xMjNrIDEgMSkgMikKKGNoZWNr
 LWVxdWFsPyAoZm9vMTIzayAxIDEgMSkgMykKKGNoZWNrLWV4biBleG46ZmFpbDpjb250cmFj
 dD8gKM67ICgpIChmb28xMjNrIDEgMSAxIDEpKSkKKGNoZWNrLWV4biBleG46ZmFpbDpjb250
 cmFjdD8gKM67ICgpIChmb28xMjNrICM6a3cgMTApKSkKKGNoZWNrLWVxdWFsPyAoZm9vMTIz
 ayAxICM6a3cgMTApIDExKQooY2hlY2stZXF1YWw/IChmb28xMjNrIDEgMSAjOmt3IDEwKSAx
 MikKKGNoZWNrLWVxdWFsPyAoZm9vMTIzayAxIDEgMSAjOmt3IDEwKSAxMykKKGNoZWNrLWV4
 biBleG46ZmFpbDpjb250cmFjdD8gKM67ICgpIChmb28xMjNrIDEgMSAxIDEgIzprdyAxMCkp
 KQoKKGNoZWNrLWV4biBleG46ZmFpbDpjb250cmFjdD8gKM67ICgpIChmb28yM2spKSkKKGNo
 ZWNrLWV4biBleG46ZmFpbDpjb250cmFjdD8gKM67ICgpIChmb28yM2sgMSkpKQooY2hlY2st
 ZXF1YWw/IChmb28yM2sgMSAxKSAyKQooY2hlY2stZXF1YWw/IChmb28yM2sgMSAxIDEpIDMp
 CihjaGVjay1leG4gZXhuOmZhaWw6Y29udHJhY3Q/ICjOuyAoKSAoZm9vMjNrIDEgMSAxIDEp
 KSkKKGNoZWNrLWV4biBleG46ZmFpbDpjb250cmFjdD8gKM67ICgpIChmb28yM2sgIzprdyAx
 MCkpKQooY2hlY2stZXhuIGV4bjpmYWlsOmNvbnRyYWN0PyAozrsgKCkgKGZvbzIzayAxICM6
 a3cgMTApKSkKKGNoZWNrLWVxdWFsPyAoZm9vMjNrIDEgMSAjOmt3IDEwKSAxMikKKGNoZWNr
 LWVxdWFsPyAoZm9vMjNrIDEgMSAxICM6a3cgMTApIDEzKQooY2hlY2stZXhuIGV4bjpmYWls
 OmNvbnRyYWN0PyAozrsgKCkgKGZvbzIzayAxIDEgMSAxICM6a3cgMTApKSkKCihjaGVjay1l
 eG4gZXhuOmZhaWw6Y29udHJhY3Q/ICjOuyAoKSAoZm9vMjM0aykpKQooY2hlY2stZXhuIGV4
 bjpmYWlsOmNvbnRyYWN0PyAozrsgKCkgKGZvbzIzNGsgMSkpKQooY2hlY2stZXF1YWw/IChm
 b28yMzRrIDEgMSkgMikKKGNoZWNrLWVxdWFsPyAoZm9vMjM0ayAxIDEgMSkgMykKKGNoZWNr
 LWVxdWFsPyAoZm9vMjM0ayAxIDEgMSAxKSA0KQooY2hlY2stZXhuIGV4bjpmYWlsOmNvbnRy
 YWN0PyAozrsgKCkgKGZvbzIzNGsgMSAxIDEgMSAxKSkpCihjaGVjay1leG4gZXhuOmZhaWw6
 Y29udHJhY3Q/ICjOuyAoKSAoZm9vMjM0ayAjOmt3IDEwKSkpCihjaGVjay1leG4gZXhuOmZh
 aWw6Y29udHJhY3Q/ICjOuyAoKSAoZm9vMjM0ayAxICM6a3cgMTApKSkKKGNoZWNrLWVxdWFs
 PyAoZm9vMjM0ayAxIDEgIzprdyAxMCkgMTIpCihjaGVjay1lcXVhbD8gKGZvbzIzNGsgMSAx
 IDEgIzprdyAxMCkgMTMpCihjaGVjay1lcXVhbD8gKGZvbzIzNGsgMSAxIDEgMSAjOmt3IDEw
 KSAxNCkKKGNoZWNrLWV4biBleG46ZmFpbDpjb250cmFjdD8gKM67ICgpIChmb28yMzRrIDEg
 MSAxIDEgMSAjOmt3IDEwKSkpCg==
 --------------090803000209090605050301--
From: Vincent St-Amour <stamourv@ccs.neu.edu>
To: Neil Toronto <neil.toronto@gmail.com>
Cc: bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/13354: The type of covariance cannot be converted to a contract
Date: Sat, 15 Dec 2012 16:59:48 -0500

 At Sat, 15 Dec 2012 13:27:14 -0700,
 Neil Toronto wrote:
 > Vincent, is it feasible to bump this up near the top of your to-do list? 
 
 I'll try to get to it in the coming week.
 
 > To partly make up for being a pain, I've attached a small test suite. 
 
 Thanks!
 
 Vincent
Responsible changed from "stamourv" to "ntoronto" by ntoronto@racket-lang.org at Sun, 16 Dec 2012 00:19:18 -0500
Reason>>> A commit by ntoronto@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/5a2aa226fb
State changed from "open" to "closed" by ntoronto@racket-lang.org at Sun, 16 Dec 2012 00:19:18 -0500
Reason>>> A commit by ntoronto@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/5a2aa226fb

Responsible changed from "ntoronto" to "stamourv" by ntoronto at Sun, 16 Dec 2012 00:20:21 -0500
Reason>>> Accidentally closed

State changed from "closed" to "open" by ntoronto at Sun, 16 Dec 2012 00:20:21 -0500
Reason>>> Accidentally closed

State changed from "open" to "closed" by stamourv@racket-lang.org at Mon, 17 Dec 2012 15:00:05 -0500
Reason>>> A commit by stamourv@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/8c66be33e7
