From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Sun Feb  3 21:44:54 2013
Received: from mail-oa0-f50.google.com (mail-oa0-f50.google.com [209.85.219.50])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id r142ipDI003842
	for <bugs@bugs.plt-scheme.org>; Sun, 3 Feb 2013 21:44:51 -0500
Message-Id: <201302040244.r142in9Y003836@champlain.ccs.neu.edu>
Date: Sun, 3 Feb 2013 21:44:49 -0500
From: yed.liu@gmail.com
To: bugs@racket-lang.org
Subject: mistakes in guide.pdf

>Number:         13486
>Category:       all
>Synopsis:       mistakes in guide.pdf
>Class:          doc-bug
>Responsible:    dyoo
>Severity:       non-critical
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Sun Feb 03 21:48:02 -0500 2013
>Closed-Date:    Fri Feb 08 16:07:08 -0500 2013
>Last-Modified:  Fri Feb 08 16:08:01 -0500 2013
>Originator:     sean
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.3.2
>Environment:
Win32 / Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.17 (KHTML, like Gecko) Chrome/24.0.1312.52 Safari/537.17
>Description:

- 7.3.7 Checking State Changes


#lang racket
(define x '())
(define (get-x) x)
(define (f) (set! x (cons 'f x)))
(provide
 (contract-out
  [f (->i () [_ (begin (set! x (cons 'ctc x)) any/c)])]
  [get-x (-> (listof symbol?))]))

>> (require "above.rkt")
>> (get-x)
'(ctc)
>> (f)
>> (get-x)
'(f ctc)
>> (f)
>> (get-x)
'(f f ctc)

and

(->i () [res (begin (set! x (cons 'ctc x)) any/c)])


>> (require "above2.rkt")
>> (get-x)
'(ctc)
>> (f)
>> (get-x)
'(f ctc)
>> (f)
>> (get-x)
'(f f ctc)

NOTE: I guess it should be --

  [f (->i () [_ () (begin (set! x (cons 'ctc x)) any/c)])]

>> (require "above_r.rkt")
>> (get-x)
'()
>> (f)
>> (get-x)
'(f ctc)
>> (f)
>> (get-x)
'(f ctc f ctc)

and
(->i () [res () (begin (set! x (cons 'ctc x)) any/c)])

>> (require "above2_r.rkt")
>> (get-x)
'()
>> (f)
>> (get-x)
'(ctc f)
>> (f)
>> (get-x)
'(ctc f ctc f)


- 7.6 Abstract Contracts using #:exists and #:∃

(provide
 (contract-out
  #:∃ queue
  [empty queue]
  [enq (-> integer? queue queue)]
  [next (-> queue integer?)]
  [deq (-> queue (listof integer?))]
  [empty? (-> queue boolean?)]))

I think this line --
  [deq (-> queue (listof integer?))]
should be:
  [deq (-> queue queue)]

- 7.7.1 A Customer-Manager Component

#lang racket
 
(require "1.rkt") ; the module just above
 
; implementation
; [listof (list basic-customer? secret-info)]
(define all '())
 
(define (find c)
  (define (has-c-as-key p)
    (id-equal? (basic-customer-id (car p)) c))
  (define x (filter has-c-as-key all))
  (if (pair? x) (car x) x))
 
(define (active? c)
  (pair? (find c)))
 
(define not-active? (compose not active? basic-customer-id))

...

I think the line --
(define not-active? (compose not active? basic-customer-id))
should be:
(define not-active? (compose not active?))


Sorry my bad english!
>How-To-Repeat:
see description
>Fix:
>Audit-Trail:
From: =?GB2312?B?7Me2q8H1?= <yed.liu@gmail.com>
To: bugs@racket-lang.org, bug-notification@racket-lang.org
Cc: 
Subject: Re: [racket-bug] all/13486: mistakes in guide.pdf
Date: Mon, 4 Feb 2013 15:27:42 +0800

 --001636c9266457714004d4e10737
 Content-Type: text/plain; charset=ISO-8859-1
 
 The Racket Guide
 
 - 7.7.1 A Customer-Manager Component
 
 No mistakes in the section. I'm sorry.
 
 
 But, I found a new mistake in
 7.7.3 A Dictionary
 #lang<http://docs.racket-lang.org/guide/Module_Syntax.html#%28part._hash-lang%29>
  racket <http://docs.racket-lang.org/reference/index.html> ; a shorthand
 for use below(define-syntax =>  (syntax-rules ()    [(=> antecedent consequent
 ) (if antecedent consequent #t)])) ; implementation(define-struct dictionary
  (l value? eq?)); the keys should probably be another parameter (exercise) (
 define (initialize p eq) (make-dictionary '() p eq))(define (put d k v)  (
 make-dictionary (cons (cons k v) (dictionary-l d))                   (
 dictionary-value? d)                   (dictionary-eq? d)))(define (rem d k)
   (make-dictionary   (let loop ([l (dictionary-l d)])     (cond       [(
 null? l) l]       [(eq? (caar l) k) (loop (cdr l))]       [else (cons (car l
 ) (loop (cdr l)))]))   (dictionary-value? d)   (dictionary-eq? d)))(define (
 count d) (length (dictionary-l d)))(define (value-for d k) (cdr (assq k (
 dictionary-l d))))(define (has? d k) (pair? (assq k (dictionary-l d))))(
 define (not-has? d) (lambda (k) (not (has? d k)))); end of implementation ;
 interface(provide (contract-out  ; predicates  [dictionary? (-> any/c
 boolean?)]  ; basic queries  ; how many items are in the dictionary?  [count
        (-> dictionary? natural-number/c)]  ; does the dictionary define key
 k?  [has?        (->d ([d dictionary?] [k symbol?])                    ()
                     [result boolean?]                    #:post-cond
                     ((zero? (count d)) . => . (not result)))]  ; what is the
 value of key k in this dictionary?  [value-for   (->d ([d dictionary?]
                      [k (and/c symbol? (lambda (k) (has? d k)))])
                     ()                    [result (dictionary-value? d)])]
 ; initialization  ; post condition: for all k in symbol, (has? d k) is
 false.  [initialize  (->d ([p contract?] [eq (p p . -> . boolean?)])
                     ()                    [result (and/c dictionary? (
 compose zero? count))])]  ; commands  ; Mitchell and McKim say that put
 shouldn't consume Void (null ptr)  ; for v. We allow the client to specify
 a contract for all values  ; via initialize. We could do the same via a
 key? parameter  ; (exercise). add key k with value v to this dictionary  [
 put         (->d ([d dictionary?]                     [k (and symbol? (
 not-has? d))]                     [v (dictionary-value? d)])
                     ()                    [result dictionary?]
                     #:post-cond                    (and (has? result k)
                          (= (count d) (- (count result) 1))
                          ([dictionary-eq? d] (value-for result k)
 v)))]  ; remove
 key k from this dictionary  [rem         (->d ([d dictionary?]
                      [k (and/c symbol? (lambda (k) (has? d k)))])
                     ()                    [result (and/c dictionary?
 not-has?)]                    #:post-cond                    (= (count d) (+
  (count result) 1)))])); end of interface
 
 The line with red background should be:
                      [k (and/c symbol? (not-has? d))]
 
 Right?
 
 >> ; test it
 >> (define d0 (initialize (flat-contract integer?) =))
 >> (put d0 14 3)
 
 
 
 
 2013/2/4 <bugs@racket-lang.org>
 
 > Thank you very much for your problem report.
 > It has the internal identification `all/13486'.
 > You can check on the status of your problem report at
 >   http://bugs.racket-lang.org/query/?cmd=view&pr=13486
 >
 > If you wish to provide further information regarding this problem
 > you can do so as a reply to this message.  (But please make sure
 > that your mailer replies to both "bugs" and "bug-notification".)
 >
 >
 
 --001636c9266457714004d4e10737
 Content-Type: text/html; charset=ISO-8859-1
 Content-Transfer-Encoding: quoted-printable
 
 <div dir=3D"ltr"><div style><span style=3D"color:rgb(0,0,255);font-family:s=
 erif;font-size:13px;font-weight:bold;background-color:rgb(240,240,224)">The=
  Racket Guide</span><br></div><div style><br></div><span style=3D"color:rgb=
 (0,0,0);font-family:monospace;font-size:medium">- 7.7.1 A Customer-Manager =
 Component</span><br>
 <div><span style=3D"color:rgb(0,0,0);font-family:monospace;font-size:medium=
 "><br></span></div><div style>No mistakes in the section. I&#39;m sorry.</d=
 iv><div style><br></div><div style><br></div><div style>But, I found a new =
 mistake in&nbsp;</div>
 <h5 style=3D"margin-top:1.75em;margin-bottom:0.5em;color:rgb(0,0,0);font-fa=
 mily:serif">7.7.3<tt>&nbsp;</tt><a name=3D"(part._.A_.Dictionary)"></a>A Di=
 ctionary</h5><div><table cellspacing=3D"0" class=3D"" style=3D"font-family:=
 monospace;white-space:nowrap;color:rgb(0,0,0)">
 <tbody><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;padd=
 ing-right:0px;vertical-align:baseline;white-space:inherit"><a href=3D"http:=
 //docs.racket-lang.org/guide/Module_Syntax.html#%28part._hash-lang%29" clas=
 s=3D"" style=3D"text-decoration:initial;color:blue"><span class=3D"" style=
 =3D"font-family:monospace;white-space:inherit;color:black">#lang</span></a>=
 <span class=3D"" style=3D"font-family:monospace">&nbsp;</span><a href=3D"ht=
 tp://docs.racket-lang.org/reference/index.html" class=3D"" style=3D"text-de=
 coration:initial;color:blue"><span class=3D"" style=3D"font-family:monospac=
 e;white-space:inherit;color:rgb(38,38,128)">racket</span></a></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace">&nbsp;</span></td></tr><tr style=3D"white-sp=
 ace:inherit">
 <td style=3D"padding-left:0px;padding-right:0px;vertical-align:baseline;whi=
 te-space:inherit"><span class=3D"" style=3D"font-family:monospace;white-spa=
 ce:inherit;color:rgb(194,116,31)">;</span><span class=3D"" style=3D"font-fa=
 mily:monospace;white-space:inherit;color:rgb(194,116,31)">&nbsp;</span><spa=
 n class=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(1=
 94,116,31)">a shorthand for use below</span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace;white-space:inherit;color:rgb(132,60,36)">(</=
 span><span class=3D"" style=3D"font-family:monospace;white-space:inherit;co=
 lor:rgb(38,38,128)">define-syntax</span><span class=3D"" style=3D"font-fami=
 ly:monospace">&nbsp;</span><span class=3D"" style=3D"font-family:monospace;=
 white-space:inherit;color:rgb(38,38,128)">&rArr;</span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace">&nbsp;&nbsp;</span><span class=3D"" style=3D=
 "font-family:monospace;white-space:inherit;color:rgb(132,60,36)">(</span><s=
 pan class=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb=
 (38,38,128)">syntax-rules</span><span class=3D"" style=3D"font-family:monos=
 pace">&nbsp;</span><span class=3D"" style=3D"font-family:monospace;white-sp=
 ace:inherit;color:rgb(132,60,36)">(</span><span class=3D"" style=3D"font-fa=
 mily:monospace;white-space:inherit;color:rgb(132,60,36)">)</span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=
 =3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(132,60,3=
 6)">[</span><span class=3D"" style=3D"font-family:monospace;white-space:inh=
 erit;color:rgb(132,60,36)">(</span><span class=3D"" style=3D"font-family:mo=
 nospace;white-space:inherit;color:rgb(38,38,128)">&rArr;</span><span class=
 =3D"" style=3D"font-family:monospace">&nbsp;</span><span class=3D"" style=
 =3D"font-family:monospace;white-space:inherit;color:rgb(38,38,128)">anteced=
 ent</span><span class=3D"" style=3D"font-family:monospace">&nbsp;</span><sp=
 an class=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(=
 38,38,128)">consequent</span><span class=3D"" style=3D"font-family:monospac=
 e;white-space:inherit;color:rgb(132,60,36)">)</span><span class=3D"" style=
 =3D"font-family:monospace">&nbsp;</span><span class=3D"" style=3D"font-fami=
 ly:monospace;white-space:inherit;color:rgb(132,60,36)">(</span><span class=
 =3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(38,38,12=
 8)">if</span><span class=3D"" style=3D"font-family:monospace">&nbsp;</span>=
 <span class=3D"" style=3D"font-family:monospace;white-space:inherit;color:r=
 gb(38,38,128)">antecedent</span><span class=3D"" style=3D"font-family:monos=
 pace">&nbsp;</span><span class=3D"" style=3D"font-family:monospace;white-sp=
 ace:inherit;color:rgb(38,38,128)">consequent</span><span class=3D"" style=
 =3D"font-family:monospace">&nbsp;</span><span class=3D"" style=3D"font-fami=
 ly:monospace;white-space:inherit;color:rgb(34,139,34)">#t</span><span class=
 =3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(132,60,3=
 6)">)</span><span class=3D"" style=3D"font-family:monospace;white-space:inh=
 erit;color:rgb(132,60,36)">]</span><span class=3D"" style=3D"font-family:mo=
 nospace;white-space:inherit;color:rgb(132,60,36)">)</span><span class=3D"" =
 style=3D"font-family:monospace;white-space:inherit;color:rgb(132,60,36)">)<=
 /span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace">&nbsp;</span></td></tr><tr style=3D"white-sp=
 ace:inherit">
 <td style=3D"padding-left:0px;padding-right:0px;vertical-align:baseline;whi=
 te-space:inherit"><span class=3D"" style=3D"font-family:monospace;white-spa=
 ce:inherit;color:rgb(194,116,31)">;</span><span class=3D"" style=3D"font-fa=
 mily:monospace;white-space:inherit;color:rgb(194,116,31)">&nbsp;</span><spa=
 n class=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(1=
 94,116,31)">implementation</span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace;white-space:inherit;color:rgb(132,60,36)">(</=
 span><span class=3D"" style=3D"font-family:monospace;white-space:inherit;co=
 lor:rgb(38,38,128)">define-struct</span><span class=3D"" style=3D"font-fami=
 ly:monospace">&nbsp;</span><span class=3D"" style=3D"font-family:monospace;=
 white-space:inherit;color:rgb(38,38,128)">dictionary</span><span class=3D""=
  style=3D"font-family:monospace">&nbsp;</span><span class=3D"" style=3D"fon=
 t-family:monospace;white-space:inherit;color:rgb(132,60,36)">(</span><span =
 class=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(38,=
 38,128)">l</span><span class=3D"" style=3D"font-family:monospace">&nbsp;</s=
 pan><span class=3D"" style=3D"font-family:monospace;white-space:inherit;col=
 or:rgb(38,38,128)">value?</span><span class=3D"" style=3D"font-family:monos=
 pace">&nbsp;</span><span class=3D"" style=3D"font-family:monospace;white-sp=
 ace:inherit;color:rgb(38,38,128)">eq?</span><span class=3D"" style=3D"font-=
 family:monospace;white-space:inherit;color:rgb(132,60,36)">)</span><span cl=
 ass=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(132,6=
 0,36)">)</span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace;white-space:inherit;color:rgb(194,116,31)">;<=
 /span><span class=3D"" style=3D"font-family:monospace;white-space:inherit;c=
 olor:rgb(194,116,31)">&nbsp;</span><span class=3D"" style=3D"font-family:mo=
 nospace;white-space:inherit;color:rgb(194,116,31)">the keys should probably=
  be another parameter (exercise)</span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace">&nbsp;</span></td></tr><tr style=3D"white-sp=
 ace:inherit">
 <td style=3D"padding-left:0px;padding-right:0px;vertical-align:baseline;whi=
 te-space:inherit"><span class=3D"" style=3D"font-family:monospace;white-spa=
 ce:inherit;color:rgb(132,60,36)">(</span><span class=3D"" style=3D"font-fam=
 ily:monospace;white-space:inherit;color:rgb(38,38,128)">define</span><span =
 class=3D"" style=3D"font-family:monospace">&nbsp;</span><span class=3D"" st=
 yle=3D"font-family:monospace;white-space:inherit;color:rgb(132,60,36)">(</s=
 pan><span class=3D"" style=3D"font-family:monospace;white-space:inherit;col=
 or:rgb(38,38,128)">initialize</span><span class=3D"" style=3D"font-family:m=
 onospace">&nbsp;</span><span class=3D"" style=3D"font-family:monospace;whit=
 e-space:inherit;color:rgb(38,38,128)">p</span><span class=3D"" style=3D"fon=
 t-family:monospace">&nbsp;</span><span class=3D"" style=3D"font-family:mono=
 space;white-space:inherit;color:rgb(38,38,128)">eq</span><span class=3D"" s=
 tyle=3D"font-family:monospace;white-space:inherit;color:rgb(132,60,36)">)</=
 span><span class=3D"" style=3D"font-family:monospace">&nbsp;</span><span cl=
 ass=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(132,6=
 0,36)">(</span><span class=3D"" style=3D"font-family:monospace;white-space:=
 inherit;color:rgb(38,38,128)">make-dictionary</span><span class=3D"" style=
 =3D"font-family:monospace">&nbsp;</span><span class=3D"" style=3D"font-fami=
 ly:monospace;white-space:inherit;color:rgb(34,139,34)">&#39;</span><span cl=
 ass=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(34,13=
 9,34)">(</span><span class=3D"" style=3D"font-family:monospace;white-space:=
 inherit;color:rgb(34,139,34)">)</span><span class=3D"" style=3D"font-family=
 :monospace">&nbsp;</span><span class=3D"" style=3D"font-family:monospace;wh=
 ite-space:inherit;color:rgb(38,38,128)">p</span><span class=3D"" style=3D"f=
 ont-family:monospace">&nbsp;</span><span class=3D"" style=3D"font-family:mo=
 nospace;white-space:inherit;color:rgb(38,38,128)">eq</span><span class=3D""=
  style=3D"font-family:monospace;white-space:inherit;color:rgb(132,60,36)">)=
 </span><span class=3D"" style=3D"font-family:monospace;white-space:inherit;=
 color:rgb(132,60,36)">)</span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace;white-space:inherit;color:rgb(132,60,36)">(</=
 span><span class=3D"" style=3D"font-family:monospace;white-space:inherit;co=
 lor:rgb(38,38,128)">define</span><span class=3D"" style=3D"font-family:mono=
 space">&nbsp;</span><span class=3D"" style=3D"font-family:monospace;white-s=
 pace:inherit;color:rgb(132,60,36)">(</span><span class=3D"" style=3D"font-f=
 amily:monospace;white-space:inherit;color:rgb(38,38,128)">put</span><span c=
 lass=3D"" style=3D"font-family:monospace">&nbsp;</span><span class=3D"" sty=
 le=3D"font-family:monospace;white-space:inherit;color:rgb(38,38,128)">d</sp=
 an><span class=3D"" style=3D"font-family:monospace">&nbsp;</span><span clas=
 s=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(38,38,1=
 28)">k</span><span class=3D"" style=3D"font-family:monospace">&nbsp;</span>=
 <span class=3D"" style=3D"font-family:monospace;white-space:inherit;color:r=
 gb(38,38,128)">v</span><span class=3D"" style=3D"font-family:monospace;whit=
 e-space:inherit;color:rgb(132,60,36)">)</span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace">&nbsp;&nbsp;</span><span class=3D"" style=3D=
 "font-family:monospace;white-space:inherit;color:rgb(132,60,36)">(</span><s=
 pan class=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb=
 (38,38,128)">make-dictionary</span><span class=3D"" style=3D"font-family:mo=
 nospace">&nbsp;</span><span class=3D"" style=3D"font-family:monospace;white=
 -space:inherit;color:rgb(132,60,36)">(</span><span class=3D"" style=3D"font=
 -family:monospace;white-space:inherit;color:rgb(38,38,128)">cons</span><spa=
 n class=3D"" style=3D"font-family:monospace">&nbsp;</span><span class=3D"" =
 style=3D"font-family:monospace;white-space:inherit;color:rgb(132,60,36)">(<=
 /span><span class=3D"" style=3D"font-family:monospace;white-space:inherit;c=
 olor:rgb(38,38,128)">cons</span><span class=3D"" style=3D"font-family:monos=
 pace">&nbsp;</span><span class=3D"" style=3D"font-family:monospace;white-sp=
 ace:inherit;color:rgb(38,38,128)">k</span><span class=3D"" style=3D"font-fa=
 mily:monospace">&nbsp;</span><span class=3D"" style=3D"font-family:monospac=
 e;white-space:inherit;color:rgb(38,38,128)">v</span><span class=3D"" style=
 =3D"font-family:monospace;white-space:inherit;color:rgb(132,60,36)">)</span=
 ><span class=3D"" style=3D"font-family:monospace">&nbsp;</span><span class=
 =3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(132,60,3=
 6)">(</span><span class=3D"" style=3D"font-family:monospace;white-space:inh=
 erit;color:rgb(38,38,128)">dictionary-l</span><span class=3D"" style=3D"fon=
 t-family:monospace">&nbsp;</span><span class=3D"" style=3D"font-family:mono=
 space;white-space:inherit;color:rgb(38,38,128)">d</span><span class=3D"" st=
 yle=3D"font-family:monospace;white-space:inherit;color:rgb(132,60,36)">)</s=
 pan><span class=3D"" style=3D"font-family:monospace;white-space:inherit;col=
 or:rgb(132,60,36)">)</span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
 bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</spa=
 n><span class=3D"" style=3D"font-family:monospace;white-space:inherit;color=
 :rgb(132,60,36)">(</span><span class=3D"" style=3D"font-family:monospace;wh=
 ite-space:inherit;color:rgb(38,38,128)">dictionary-value?</span><span class=
 =3D"" style=3D"font-family:monospace">&nbsp;</span><span class=3D"" style=
 =3D"font-family:monospace;white-space:inherit;color:rgb(38,38,128)">d</span=
 ><span class=3D"" style=3D"font-family:monospace;white-space:inherit;color:=
 rgb(132,60,36)">)</span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
 bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</spa=
 n><span class=3D"" style=3D"font-family:monospace;white-space:inherit;color=
 :rgb(132,60,36)">(</span><span class=3D"" style=3D"font-family:monospace;wh=
 ite-space:inherit;color:rgb(38,38,128)">dictionary-eq?</span><span class=3D=
 "" style=3D"font-family:monospace">&nbsp;</span><span class=3D"" style=3D"f=
 ont-family:monospace;white-space:inherit;color:rgb(38,38,128)">d</span><spa=
 n class=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(1=
 32,60,36)">)</span><span class=3D"" style=3D"font-family:monospace;white-sp=
 ace:inherit;color:rgb(132,60,36)">)</span><span class=3D"" style=3D"font-fa=
 mily:monospace;white-space:inherit;color:rgb(132,60,36)">)</span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace;white-space:inherit;color:rgb(132,60,36)">(</=
 span><span class=3D"" style=3D"font-family:monospace;white-space:inherit;co=
 lor:rgb(38,38,128)">define</span><span class=3D"" style=3D"font-family:mono=
 space">&nbsp;</span><span class=3D"" style=3D"font-family:monospace;white-s=
 pace:inherit;color:rgb(132,60,36)">(</span><span class=3D"" style=3D"font-f=
 amily:monospace;white-space:inherit;color:rgb(38,38,128)">rem</span><span c=
 lass=3D"" style=3D"font-family:monospace">&nbsp;</span><span class=3D"" sty=
 le=3D"font-family:monospace;white-space:inherit;color:rgb(38,38,128)">d</sp=
 an><span class=3D"" style=3D"font-family:monospace">&nbsp;</span><span clas=
 s=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(38,38,1=
 28)">k</span><span class=3D"" style=3D"font-family:monospace;white-space:in=
 herit;color:rgb(132,60,36)">)</span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace">&nbsp;&nbsp;</span><span class=3D"" style=3D=
 "font-family:monospace;white-space:inherit;color:rgb(132,60,36)">(</span><s=
 pan class=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb=
 (38,38,128)">make-dictionary</span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace">&nbsp;&nbsp;&nbsp;</span><span class=3D"" st=
 yle=3D"font-family:monospace;white-space:inherit;color:rgb(132,60,36)">(</s=
 pan><span class=3D"" style=3D"font-family:monospace;white-space:inherit;col=
 or:rgb(38,38,128)">let</span><span class=3D"" style=3D"font-family:monospac=
 e">&nbsp;</span><span class=3D"" style=3D"font-family:monospace;white-space=
 :inherit;color:rgb(38,38,128)">loop</span><span class=3D"" style=3D"font-fa=
 mily:monospace">&nbsp;</span><span class=3D"" style=3D"font-family:monospac=
 e;white-space:inherit;color:rgb(132,60,36)">(</span><span class=3D"" style=
 =3D"font-family:monospace;white-space:inherit;color:rgb(132,60,36)">[</span=
 ><span class=3D"" style=3D"font-family:monospace;white-space:inherit;color:=
 rgb(38,38,128)">l</span><span class=3D"" style=3D"font-family:monospace">&n=
 bsp;</span><span class=3D"" style=3D"font-family:monospace;white-space:inhe=
 rit;color:rgb(132,60,36)">(</span><span class=3D"" style=3D"font-family:mon=
 ospace;white-space:inherit;color:rgb(38,38,128)">dictionary-l</span><span c=
 lass=3D"" style=3D"font-family:monospace">&nbsp;</span><span class=3D"" sty=
 le=3D"font-family:monospace;white-space:inherit;color:rgb(38,38,128)">d</sp=
 an><span class=3D"" style=3D"font-family:monospace;white-space:inherit;colo=
 r:rgb(132,60,36)">)</span><span class=3D"" style=3D"font-family:monospace;w=
 hite-space:inherit;color:rgb(132,60,36)">]</span><span class=3D"" style=3D"=
 font-family:monospace;white-space:inherit;color:rgb(132,60,36)">)</span></t=
 d>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span c=
 lass=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(132,=
 60,36)">(</span><span class=3D"" style=3D"font-family:monospace;white-space=
 :inherit;color:rgb(38,38,128)">cond</span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</=
 span><span class=3D"" style=3D"font-family:monospace;white-space:inherit;co=
 lor:rgb(132,60,36)">[</span><span class=3D"" style=3D"font-family:monospace=
 ;white-space:inherit;color:rgb(132,60,36)">(</span><span class=3D"" style=
 =3D"font-family:monospace;white-space:inherit;color:rgb(38,38,128)">null?</=
 span><span class=3D"" style=3D"font-family:monospace">&nbsp;</span><span cl=
 ass=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(38,38=
 ,128)">l</span><span class=3D"" style=3D"font-family:monospace;white-space:=
 inherit;color:rgb(132,60,36)">)</span><span class=3D"" style=3D"font-family=
 :monospace">&nbsp;</span><span class=3D"" style=3D"font-family:monospace;wh=
 ite-space:inherit;color:rgb(38,38,128)">l</span><span class=3D"" style=3D"f=
 ont-family:monospace;white-space:inherit;color:rgb(132,60,36)">]</span></td=
 >
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</=
 span><span class=3D"" style=3D"font-family:monospace;white-space:inherit;co=
 lor:rgb(132,60,36)">[</span><span class=3D"" style=3D"font-family:monospace=
 ;white-space:inherit;color:rgb(132,60,36)">(</span><span class=3D"" style=
 =3D"font-family:monospace;white-space:inherit;color:rgb(38,38,128)">eq?</sp=
 an><span class=3D"" style=3D"font-family:monospace">&nbsp;</span><span clas=
 s=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(132,60,=
 36)">(</span><span class=3D"" style=3D"font-family:monospace;white-space:in=
 herit;color:rgb(38,38,128)">caar</span><span class=3D"" style=3D"font-famil=
 y:monospace">&nbsp;</span><span class=3D"" style=3D"font-family:monospace;w=
 hite-space:inherit;color:rgb(38,38,128)">l</span><span class=3D"" style=3D"=
 font-family:monospace;white-space:inherit;color:rgb(132,60,36)">)</span><sp=
 an class=3D"" style=3D"font-family:monospace">&nbsp;</span><span class=3D""=
  style=3D"font-family:monospace;white-space:inherit;color:rgb(38,38,128)">k=
 </span><span class=3D"" style=3D"font-family:monospace;white-space:inherit;=
 color:rgb(132,60,36)">)</span><span class=3D"" style=3D"font-family:monospa=
 ce">&nbsp;</span><span class=3D"" style=3D"font-family:monospace;white-spac=
 e:inherit;color:rgb(132,60,36)">(</span><span class=3D"" style=3D"font-fami=
 ly:monospace;white-space:inherit;color:rgb(38,38,128)">loop</span><span cla=
 ss=3D"" style=3D"font-family:monospace">&nbsp;</span><span class=3D"" style=
 =3D"font-family:monospace;white-space:inherit;color:rgb(132,60,36)">(</span=
 ><span class=3D"" style=3D"font-family:monospace;white-space:inherit;color:=
 rgb(38,38,128)">cdr</span><span class=3D"" style=3D"font-family:monospace">=
 &nbsp;</span><span class=3D"" style=3D"font-family:monospace;white-space:in=
 herit;color:rgb(38,38,128)">l</span><span class=3D"" style=3D"font-family:m=
 onospace;white-space:inherit;color:rgb(132,60,36)">)</span><span class=3D""=
  style=3D"font-family:monospace;white-space:inherit;color:rgb(132,60,36)">)=
 </span><span class=3D"" style=3D"font-family:monospace;white-space:inherit;=
 color:rgb(132,60,36)">]</span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</=
 span><span class=3D"" style=3D"font-family:monospace;white-space:inherit;co=
 lor:rgb(132,60,36)">[</span><span class=3D"" style=3D"font-family:monospace=
 ;white-space:inherit;color:rgb(38,38,128)">else</span><span class=3D"" styl=
 e=3D"font-family:monospace">&nbsp;</span><span class=3D"" style=3D"font-fam=
 ily:monospace;white-space:inherit;color:rgb(132,60,36)">(</span><span class=
 =3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(38,38,12=
 8)">cons</span><span class=3D"" style=3D"font-family:monospace">&nbsp;</spa=
 n><span class=3D"" style=3D"font-family:monospace;white-space:inherit;color=
 :rgb(132,60,36)">(</span><span class=3D"" style=3D"font-family:monospace;wh=
 ite-space:inherit;color:rgb(38,38,128)">car</span><span class=3D"" style=3D=
 "font-family:monospace">&nbsp;</span><span class=3D"" style=3D"font-family:=
 monospace;white-space:inherit;color:rgb(38,38,128)">l</span><span class=3D"=
 " style=3D"font-family:monospace;white-space:inherit;color:rgb(132,60,36)">=
 )</span><span class=3D"" style=3D"font-family:monospace">&nbsp;</span><span=
  class=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(13=
 2,60,36)">(</span><span class=3D"" style=3D"font-family:monospace;white-spa=
 ce:inherit;color:rgb(38,38,128)">loop</span><span class=3D"" style=3D"font-=
 family:monospace">&nbsp;</span><span class=3D"" style=3D"font-family:monosp=
 ace;white-space:inherit;color:rgb(132,60,36)">(</span><span class=3D"" styl=
 e=3D"font-family:monospace;white-space:inherit;color:rgb(38,38,128)">cdr</s=
 pan><span class=3D"" style=3D"font-family:monospace">&nbsp;</span><span cla=
 ss=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(38,38,=
 128)">l</span><span class=3D"" style=3D"font-family:monospace;white-space:i=
 nherit;color:rgb(132,60,36)">)</span><span class=3D"" style=3D"font-family:=
 monospace;white-space:inherit;color:rgb(132,60,36)">)</span><span class=3D"=
 " style=3D"font-family:monospace;white-space:inherit;color:rgb(132,60,36)">=
 )</span><span class=3D"" style=3D"font-family:monospace;white-space:inherit=
 ;color:rgb(132,60,36)">]</span><span class=3D"" style=3D"font-family:monosp=
 ace;white-space:inherit;color:rgb(132,60,36)">)</span><span class=3D"" styl=
 e=3D"font-family:monospace;white-space:inherit;color:rgb(132,60,36)">)</spa=
 n></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace">&nbsp;&nbsp;&nbsp;</span><span class=3D"" st=
 yle=3D"font-family:monospace;white-space:inherit;color:rgb(132,60,36)">(</s=
 pan><span class=3D"" style=3D"font-family:monospace;white-space:inherit;col=
 or:rgb(38,38,128)">dictionary-value?</span><span class=3D"" style=3D"font-f=
 amily:monospace">&nbsp;</span><span class=3D"" style=3D"font-family:monospa=
 ce;white-space:inherit;color:rgb(38,38,128)">d</span><span class=3D"" style=
 =3D"font-family:monospace;white-space:inherit;color:rgb(132,60,36)">)</span=
 ></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace">&nbsp;&nbsp;&nbsp;</span><span class=3D"" st=
 yle=3D"font-family:monospace;white-space:inherit;color:rgb(132,60,36)">(</s=
 pan><span class=3D"" style=3D"font-family:monospace;white-space:inherit;col=
 or:rgb(38,38,128)">dictionary-eq?</span><span class=3D"" style=3D"font-fami=
 ly:monospace">&nbsp;</span><span class=3D"" style=3D"font-family:monospace;=
 white-space:inherit;color:rgb(38,38,128)">d</span><span class=3D"" style=3D=
 "font-family:monospace;white-space:inherit;color:rgb(132,60,36)">)</span><s=
 pan class=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb=
 (132,60,36)">)</span><span class=3D"" style=3D"font-family:monospace;white-=
 space:inherit;color:rgb(132,60,36)">)</span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace;white-space:inherit;color:rgb(132,60,36)">(</=
 span><span class=3D"" style=3D"font-family:monospace;white-space:inherit;co=
 lor:rgb(38,38,128)">define</span><span class=3D"" style=3D"font-family:mono=
 space">&nbsp;</span><span class=3D"" style=3D"font-family:monospace;white-s=
 pace:inherit;color:rgb(132,60,36)">(</span><span class=3D"" style=3D"font-f=
 amily:monospace;white-space:inherit;color:rgb(38,38,128)">count</span><span=
  class=3D"" style=3D"font-family:monospace">&nbsp;</span><span class=3D"" s=
 tyle=3D"font-family:monospace;white-space:inherit;color:rgb(38,38,128)">d</=
 span><span class=3D"" style=3D"font-family:monospace;white-space:inherit;co=
 lor:rgb(132,60,36)">)</span><span class=3D"" style=3D"font-family:monospace=
 ">&nbsp;</span><span class=3D"" style=3D"font-family:monospace;white-space:=
 inherit;color:rgb(132,60,36)">(</span><span class=3D"" style=3D"font-family=
 :monospace;white-space:inherit;color:rgb(38,38,128)">length</span><span cla=
 ss=3D"" style=3D"font-family:monospace">&nbsp;</span><span class=3D"" style=
 =3D"font-family:monospace;white-space:inherit;color:rgb(132,60,36)">(</span=
 ><span class=3D"" style=3D"font-family:monospace;white-space:inherit;color:=
 rgb(38,38,128)">dictionary-l</span><span class=3D"" style=3D"font-family:mo=
 nospace">&nbsp;</span><span class=3D"" style=3D"font-family:monospace;white=
 -space:inherit;color:rgb(38,38,128)">d</span><span class=3D"" style=3D"font=
 -family:monospace;white-space:inherit;color:rgb(132,60,36)">)</span><span c=
 lass=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(132,=
 60,36)">)</span><span class=3D"" style=3D"font-family:monospace;white-space=
 :inherit;color:rgb(132,60,36)">)</span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace;white-space:inherit;color:rgb(132,60,36)">(</=
 span><span class=3D"" style=3D"font-family:monospace;white-space:inherit;co=
 lor:rgb(38,38,128)">define</span><span class=3D"" style=3D"font-family:mono=
 space">&nbsp;</span><span class=3D"" style=3D"font-family:monospace;white-s=
 pace:inherit;color:rgb(132,60,36)">(</span><span class=3D"" style=3D"font-f=
 amily:monospace;white-space:inherit;color:rgb(38,38,128)">value-for</span><=
 span class=3D"" style=3D"font-family:monospace">&nbsp;</span><span class=3D=
 "" style=3D"font-family:monospace;white-space:inherit;color:rgb(38,38,128)"=
 >d</span><span class=3D"" style=3D"font-family:monospace">&nbsp;</span><spa=
 n class=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(3=
 8,38,128)">k</span><span class=3D"" style=3D"font-family:monospace;white-sp=
 ace:inherit;color:rgb(132,60,36)">)</span><span class=3D"" style=3D"font-fa=
 mily:monospace">&nbsp;</span><span class=3D"" style=3D"font-family:monospac=
 e;white-space:inherit;color:rgb(132,60,36)">(</span><span class=3D"" style=
 =3D"font-family:monospace;white-space:inherit;color:rgb(38,38,128)">cdr</sp=
 an><span class=3D"" style=3D"font-family:monospace">&nbsp;</span><span clas=
 s=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(132,60,=
 36)">(</span><span class=3D"" style=3D"font-family:monospace;white-space:in=
 herit;color:rgb(38,38,128)">assq</span><span class=3D"" style=3D"font-famil=
 y:monospace">&nbsp;</span><span class=3D"" style=3D"font-family:monospace;w=
 hite-space:inherit;color:rgb(38,38,128)">k</span><span class=3D"" style=3D"=
 font-family:monospace">&nbsp;</span><span class=3D"" style=3D"font-family:m=
 onospace;white-space:inherit;color:rgb(132,60,36)">(</span><span class=3D""=
  style=3D"font-family:monospace;white-space:inherit;color:rgb(38,38,128)">d=
 ictionary-l</span><span class=3D"" style=3D"font-family:monospace">&nbsp;</=
 span><span class=3D"" style=3D"font-family:monospace;white-space:inherit;co=
 lor:rgb(38,38,128)">d</span><span class=3D"" style=3D"font-family:monospace=
 ;white-space:inherit;color:rgb(132,60,36)">)</span><span class=3D"" style=
 =3D"font-family:monospace;white-space:inherit;color:rgb(132,60,36)">)</span=
 ><span class=3D"" style=3D"font-family:monospace;white-space:inherit;color:=
 rgb(132,60,36)">)</span><span class=3D"" style=3D"font-family:monospace;whi=
 te-space:inherit;color:rgb(132,60,36)">)</span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace;white-space:inherit;color:rgb(132,60,36)">(</=
 span><span class=3D"" style=3D"font-family:monospace;white-space:inherit;co=
 lor:rgb(38,38,128)">define</span><span class=3D"" style=3D"font-family:mono=
 space">&nbsp;</span><span class=3D"" style=3D"font-family:monospace;white-s=
 pace:inherit;color:rgb(132,60,36)">(</span><span class=3D"" style=3D"font-f=
 amily:monospace;white-space:inherit;color:rgb(38,38,128)">has?</span><span =
 class=3D"" style=3D"font-family:monospace">&nbsp;</span><span class=3D"" st=
 yle=3D"font-family:monospace;white-space:inherit;color:rgb(38,38,128)">d</s=
 pan><span class=3D"" style=3D"font-family:monospace">&nbsp;</span><span cla=
 ss=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(38,38,=
 128)">k</span><span class=3D"" style=3D"font-family:monospace;white-space:i=
 nherit;color:rgb(132,60,36)">)</span><span class=3D"" style=3D"font-family:=
 monospace">&nbsp;</span><span class=3D"" style=3D"font-family:monospace;whi=
 te-space:inherit;color:rgb(132,60,36)">(</span><span class=3D"" style=3D"fo=
 nt-family:monospace;white-space:inherit;color:rgb(38,38,128)">pair?</span><=
 span class=3D"" style=3D"font-family:monospace">&nbsp;</span><span class=3D=
 "" style=3D"font-family:monospace;white-space:inherit;color:rgb(132,60,36)"=
 >(</span><span class=3D"" style=3D"font-family:monospace;white-space:inheri=
 t;color:rgb(38,38,128)">assq</span><span class=3D"" style=3D"font-family:mo=
 nospace">&nbsp;</span><span class=3D"" style=3D"font-family:monospace;white=
 -space:inherit;color:rgb(38,38,128)">k</span><span class=3D"" style=3D"font=
 -family:monospace">&nbsp;</span><span class=3D"" style=3D"font-family:monos=
 pace;white-space:inherit;color:rgb(132,60,36)">(</span><span class=3D"" sty=
 le=3D"font-family:monospace;white-space:inherit;color:rgb(38,38,128)">dicti=
 onary-l</span><span class=3D"" style=3D"font-family:monospace">&nbsp;</span=
 ><span class=3D"" style=3D"font-family:monospace;white-space:inherit;color:=
 rgb(38,38,128)">d</span><span class=3D"" style=3D"font-family:monospace;whi=
 te-space:inherit;color:rgb(132,60,36)">)</span><span class=3D"" style=3D"fo=
 nt-family:monospace;white-space:inherit;color:rgb(132,60,36)">)</span><span=
  class=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(13=
 2,60,36)">)</span><span class=3D"" style=3D"font-family:monospace;white-spa=
 ce:inherit;color:rgb(132,60,36)">)</span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace;white-space:inherit;color:rgb(132,60,36)">(</=
 span><span class=3D"" style=3D"font-family:monospace;white-space:inherit;co=
 lor:rgb(38,38,128)">define</span><span class=3D"" style=3D"font-family:mono=
 space">&nbsp;</span><span class=3D"" style=3D"font-family:monospace;white-s=
 pace:inherit;color:rgb(132,60,36)">(</span><span class=3D"" style=3D"font-f=
 amily:monospace;white-space:inherit;color:rgb(38,38,128)">not-has?</span><s=
 pan class=3D"" style=3D"font-family:monospace">&nbsp;</span><span class=3D"=
 " style=3D"font-family:monospace;white-space:inherit;color:rgb(38,38,128)">=
 d</span><span class=3D"" style=3D"font-family:monospace;white-space:inherit=
 ;color:rgb(132,60,36)">)</span><span class=3D"" style=3D"font-family:monosp=
 ace">&nbsp;</span><span class=3D"" style=3D"font-family:monospace;white-spa=
 ce:inherit;color:rgb(132,60,36)">(</span><span class=3D"" style=3D"font-fam=
 ily:monospace;white-space:inherit;color:rgb(38,38,128)">lambda</span><span =
 class=3D"" style=3D"font-family:monospace">&nbsp;</span><span class=3D"" st=
 yle=3D"font-family:monospace;white-space:inherit;color:rgb(132,60,36)">(</s=
 pan><span class=3D"" style=3D"font-family:monospace;white-space:inherit;col=
 or:rgb(38,38,128)">k</span><span class=3D"" style=3D"font-family:monospace;=
 white-space:inherit;color:rgb(132,60,36)">)</span><span class=3D"" style=3D=
 "font-family:monospace">&nbsp;</span><span class=3D"" style=3D"font-family:=
 monospace;white-space:inherit;color:rgb(132,60,36)">(</span><span class=3D"=
 " style=3D"font-family:monospace;white-space:inherit;color:rgb(38,38,128)">=
 not</span><span class=3D"" style=3D"font-family:monospace">&nbsp;</span><sp=
 an class=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(=
 132,60,36)">(</span><span class=3D"" style=3D"font-family:monospace;white-s=
 pace:inherit;color:rgb(38,38,128)">has?</span><span class=3D"" style=3D"fon=
 t-family:monospace">&nbsp;</span><span class=3D"" style=3D"font-family:mono=
 space;white-space:inherit;color:rgb(38,38,128)">d</span><span class=3D"" st=
 yle=3D"font-family:monospace">&nbsp;</span><span class=3D"" style=3D"font-f=
 amily:monospace;white-space:inherit;color:rgb(38,38,128)">k</span><span cla=
 ss=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(132,60=
 ,36)">)</span><span class=3D"" style=3D"font-family:monospace;white-space:i=
 nherit;color:rgb(132,60,36)">)</span><span class=3D"" style=3D"font-family:=
 monospace;white-space:inherit;color:rgb(132,60,36)">)</span><span class=3D"=
 " style=3D"font-family:monospace;white-space:inherit;color:rgb(132,60,36)">=
 )</span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace;white-space:inherit;color:rgb(194,116,31)">;<=
 /span><span class=3D"" style=3D"font-family:monospace;white-space:inherit;c=
 olor:rgb(194,116,31)">&nbsp;</span><span class=3D"" style=3D"font-family:mo=
 nospace;white-space:inherit;color:rgb(194,116,31)">end of implementation</s=
 pan></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace">&nbsp;</span></td></tr><tr style=3D"white-sp=
 ace:inherit">
 <td style=3D"padding-left:0px;padding-right:0px;vertical-align:baseline;whi=
 te-space:inherit"><span class=3D"" style=3D"font-family:monospace;white-spa=
 ce:inherit;color:rgb(194,116,31)">;</span><span class=3D"" style=3D"font-fa=
 mily:monospace;white-space:inherit;color:rgb(194,116,31)">&nbsp;</span><spa=
 n class=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(1=
 94,116,31)">interface</span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace;white-space:inherit;color:rgb(132,60,36)">(</=
 span><span class=3D"" style=3D"font-family:monospace;white-space:inherit;co=
 lor:rgb(38,38,128)">provide</span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace">&nbsp;</span><span class=3D"" style=3D"font-=
 family:monospace;white-space:inherit;color:rgb(132,60,36)">(</span><span cl=
 ass=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(38,38=
 ,128)">contract-out</span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace">&nbsp;&nbsp;</span><span class=3D"" style=3D=
 "font-family:monospace;white-space:inherit;color:rgb(194,116,31)">;</span><=
 span class=3D"" style=3D"font-family:monospace;white-space:inherit;color:rg=
 b(194,116,31)">&nbsp;</span><span class=3D"" style=3D"font-family:monospace=
 ;white-space:inherit;color:rgb(194,116,31)">predicates</span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace">&nbsp;&nbsp;</span><span class=3D"" style=3D=
 "font-family:monospace;white-space:inherit;color:rgb(132,60,36)">[</span><s=
 pan class=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb=
 (38,38,128)">dictionary?</span><span class=3D"" style=3D"font-family:monosp=
 ace">&nbsp;</span><span class=3D"" style=3D"font-family:monospace;white-spa=
 ce:inherit;color:rgb(132,60,36)">(</span><span class=3D"" style=3D"font-fam=
 ily:monospace;white-space:inherit;color:rgb(38,38,128)"><span class=3D"">-&=
 gt;</span></span><span class=3D"" style=3D"font-family:monospace">&nbsp;</s=
 pan><span class=3D"" style=3D"font-family:monospace;white-space:inherit;col=
 or:rgb(38,38,128)">any/c</span><span class=3D"" style=3D"font-family:monosp=
 ace">&nbsp;</span><span class=3D"" style=3D"font-family:monospace;white-spa=
 ce:inherit;color:rgb(38,38,128)">boolean?</span><span class=3D"" style=3D"f=
 ont-family:monospace;white-space:inherit;color:rgb(132,60,36)">)</span><spa=
 n class=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(1=
 32,60,36)">]</span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace">&nbsp;&nbsp;</span><span class=3D"" style=3D=
 "font-family:monospace;white-space:inherit;color:rgb(194,116,31)">;</span><=
 span class=3D"" style=3D"font-family:monospace;white-space:inherit;color:rg=
 b(194,116,31)">&nbsp;</span><span class=3D"" style=3D"font-family:monospace=
 ;white-space:inherit;color:rgb(194,116,31)">basic queries</span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace">&nbsp;&nbsp;</span><span class=3D"" style=3D=
 "font-family:monospace;white-space:inherit;color:rgb(194,116,31)">;</span><=
 span class=3D"" style=3D"font-family:monospace;white-space:inherit;color:rg=
 b(194,116,31)">&nbsp;</span><span class=3D"" style=3D"font-family:monospace=
 ;white-space:inherit;color:rgb(194,116,31)">how many items are in the dicti=
 onary?</span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace">&nbsp;&nbsp;</span><span class=3D"" style=3D=
 "font-family:monospace;white-space:inherit;color:rgb(132,60,36)">[</span><s=
 pan class=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb=
 (38,38,128)">count</span><span class=3D"" style=3D"font-family:monospace">&=
 nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=3D"" style=3D"f=
 ont-family:monospace;white-space:inherit;color:rgb(132,60,36)">(</span><spa=
 n class=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(3=
 8,38,128)"><span class=3D"">-&gt;</span></span><span class=3D"" style=3D"fo=
 nt-family:monospace">&nbsp;</span><span class=3D"" style=3D"font-family:mon=
 ospace;white-space:inherit;color:rgb(38,38,128)">dictionary?</span><span cl=
 ass=3D"" style=3D"font-family:monospace">&nbsp;</span><span class=3D"" styl=
 e=3D"font-family:monospace;white-space:inherit;color:rgb(38,38,128)">natura=
 l-number/c</span><span class=3D"" style=3D"font-family:monospace;white-spac=
 e:inherit;color:rgb(132,60,36)">)</span><span class=3D"" style=3D"font-fami=
 ly:monospace;white-space:inherit;color:rgb(132,60,36)">]</span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace">&nbsp;&nbsp;</span><span class=3D"" style=3D=
 "font-family:monospace;white-space:inherit;color:rgb(194,116,31)">;</span><=
 span class=3D"" style=3D"font-family:monospace;white-space:inherit;color:rg=
 b(194,116,31)">&nbsp;</span><span class=3D"" style=3D"font-family:monospace=
 ;white-space:inherit;color:rgb(194,116,31)">does the dictionary define key =
 k?</span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace">&nbsp;&nbsp;</span><span class=3D"" style=3D=
 "font-family:monospace;white-space:inherit;color:rgb(132,60,36)">[</span><s=
 pan class=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb=
 (38,38,128)">has?</span><span class=3D"" style=3D"font-family:monospace">&n=
 bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=3D"" style=
 =3D"font-family:monospace;white-space:inherit;color:rgb(132,60,36)">(</span=
 ><span class=3D"" style=3D"font-family:monospace;white-space:inherit;color:=
 rgb(38,38,128)"><span class=3D"">-&gt;</span>d</span><span class=3D"" style=
 =3D"font-family:monospace">&nbsp;</span><span class=3D"" style=3D"font-fami=
 ly:monospace;white-space:inherit;color:rgb(132,60,36)">(</span><span class=
 =3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(132,60,3=
 6)">[</span><span class=3D"" style=3D"font-family:monospace;white-space:inh=
 erit;color:rgb(38,38,128)">d</span><span class=3D"" style=3D"font-family:mo=
 nospace">&nbsp;</span><span class=3D"" style=3D"font-family:monospace;white=
 -space:inherit;color:rgb(38,38,128)">dictionary?</span><span class=3D"" sty=
 le=3D"font-family:monospace;white-space:inherit;color:rgb(132,60,36)">]</sp=
 an><span class=3D"" style=3D"font-family:monospace">&nbsp;</span><span clas=
 s=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(132,60,=
 36)">[</span><span class=3D"" style=3D"font-family:monospace;white-space:in=
 herit;color:rgb(38,38,128)">k</span><span class=3D"" style=3D"font-family:m=
 onospace">&nbsp;</span><span class=3D"" style=3D"font-family:monospace;whit=
 e-space:inherit;color:rgb(38,38,128)">symbol?</span><span class=3D"" style=
 =3D"font-family:monospace;white-space:inherit;color:rgb(132,60,36)">]</span=
 ><span class=3D"" style=3D"font-family:monospace;white-space:inherit;color:=
 rgb(132,60,36)">)</span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
 bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
 ;</span><span class=3D"" style=3D"font-family:monospace;white-space:inherit=
 ;color:rgb(132,60,36)">(</span><span class=3D"" style=3D"font-family:monosp=
 ace;white-space:inherit;color:rgb(132,60,36)">)</span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
 bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
 ;</span><span class=3D"" style=3D"font-family:monospace;white-space:inherit=
 ;color:rgb(132,60,36)">[</span><span class=3D"" style=3D"font-family:monosp=
 ace;white-space:inherit;color:rgb(38,38,128)">result</span><span class=3D""=
  style=3D"font-family:monospace">&nbsp;</span><span class=3D"" style=3D"fon=
 t-family:monospace;white-space:inherit;color:rgb(38,38,128)">boolean?</span=
 ><span class=3D"" style=3D"font-family:monospace;white-space:inherit;color:=
 rgb(132,60,36)">]</span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
 bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
 ;</span><span class=3D"" style=3D"font-family:monospace;white-space:inherit=
 ;color:rgb(132,60,36)">#:post-cond</span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
 bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
 ;</span><span class=3D"" style=3D"font-family:monospace;white-space:inherit=
 ;color:rgb(132,60,36)">(</span><span class=3D"" style=3D"font-family:monosp=
 ace;white-space:inherit;color:rgb(132,60,36)">(</span><span class=3D"" styl=
 e=3D"font-family:monospace;white-space:inherit;color:rgb(38,38,128)">zero?<=
 /span><span class=3D"" style=3D"font-family:monospace">&nbsp;</span><span c=
 lass=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(132,=
 60,36)">(</span><span class=3D"" style=3D"font-family:monospace;white-space=
 :inherit;color:rgb(38,38,128)">count</span><span class=3D"" style=3D"font-f=
 amily:monospace">&nbsp;</span><span class=3D"" style=3D"font-family:monospa=
 ce;white-space:inherit;color:rgb(38,38,128)">d</span><span class=3D"" style=
 =3D"font-family:monospace;white-space:inherit;color:rgb(132,60,36)">)</span=
 ><span class=3D"" style=3D"font-family:monospace;white-space:inherit;color:=
 rgb(132,60,36)">)</span><span class=3D"" style=3D"font-family:monospace">&n=
 bsp;</span><span class=3D"" style=3D"font-family:monospace;white-space:inhe=
 rit;color:rgb(132,60,36)">.&nbsp;</span><span class=3D"" style=3D"font-fami=
 ly:monospace;white-space:inherit;color:rgb(38,38,128)">&rArr;</span><span c=
 lass=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(132,=
 60,36)">&nbsp;.</span><span class=3D"" style=3D"font-family:monospace">&nbs=
 p;</span><span class=3D"" style=3D"font-family:monospace;white-space:inheri=
 t;color:rgb(132,60,36)">(</span><span class=3D"" style=3D"font-family:monos=
 pace;white-space:inherit;color:rgb(38,38,128)">not</span><span class=3D"" s=
 tyle=3D"font-family:monospace">&nbsp;</span><span class=3D"" style=3D"font-=
 family:monospace;white-space:inherit;color:rgb(38,38,128)">result</span><sp=
 an class=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(=
 132,60,36)">)</span><span class=3D"" style=3D"font-family:monospace;white-s=
 pace:inherit;color:rgb(132,60,36)">)</span><span class=3D"" style=3D"font-f=
 amily:monospace;white-space:inherit;color:rgb(132,60,36)">)</span><span cla=
 ss=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(132,60=
 ,36)">]</span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace">&nbsp;&nbsp;</span><span class=3D"" style=3D=
 "font-family:monospace;white-space:inherit;color:rgb(194,116,31)">;</span><=
 span class=3D"" style=3D"font-family:monospace;white-space:inherit;color:rg=
 b(194,116,31)">&nbsp;</span><span class=3D"" style=3D"font-family:monospace=
 ;white-space:inherit;color:rgb(194,116,31)">what is the value of key k in t=
 his dictionary?</span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace">&nbsp;&nbsp;</span><span class=3D"" style=3D=
 "font-family:monospace;white-space:inherit;color:rgb(132,60,36)">[</span><s=
 pan class=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb=
 (38,38,128)">value-for</span><span class=3D"" style=3D"font-family:monospac=
 e">&nbsp;&nbsp;&nbsp;</span><span class=3D"" style=3D"font-family:monospace=
 ;white-space:inherit;color:rgb(132,60,36)">(</span><span class=3D"" style=
 =3D"font-family:monospace;white-space:inherit;color:rgb(38,38,128)"><span c=
 lass=3D"">-&gt;</span>d</span><span class=3D"" style=3D"font-family:monospa=
 ce">&nbsp;</span><span class=3D"" style=3D"font-family:monospace;white-spac=
 e:inherit;color:rgb(132,60,36)">(</span><span class=3D"" style=3D"font-fami=
 ly:monospace;white-space:inherit;color:rgb(132,60,36)">[</span><span class=
 =3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(38,38,12=
 8)">d</span><span class=3D"" style=3D"font-family:monospace">&nbsp;</span><=
 span class=3D"" style=3D"font-family:monospace;white-space:inherit;color:rg=
 b(38,38,128)">dictionary?</span><span class=3D"" style=3D"font-family:monos=
 pace;white-space:inherit;color:rgb(132,60,36)">]</span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
 bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
 ;&nbsp;</span><span class=3D"" style=3D"font-family:monospace;white-space:i=
 nherit;color:rgb(132,60,36)">[</span><span class=3D"" style=3D"font-family:=
 monospace;white-space:inherit;color:rgb(38,38,128)">k</span><span class=3D"=
 " style=3D"font-family:monospace">&nbsp;</span><span class=3D"" style=3D"fo=
 nt-family:monospace;white-space:inherit;color:rgb(132,60,36)">(</span><span=
  class=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(38=
 ,38,128)">and/c</span><span class=3D"" style=3D"font-family:monospace">&nbs=
 p;</span><span class=3D"" style=3D"font-family:monospace;white-space:inheri=
 t;color:rgb(38,38,128)">symbol?</span><span class=3D"" style=3D"font-family=
 :monospace">&nbsp;</span><span class=3D"" style=3D"font-family:monospace;wh=
 ite-space:inherit;color:rgb(132,60,36)">(</span><span class=3D"" style=3D"f=
 ont-family:monospace;white-space:inherit;color:rgb(38,38,128)">lambda</span=
 ><span class=3D"" style=3D"font-family:monospace">&nbsp;</span><span class=
 =3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(132,60,3=
 6)">(</span><span class=3D"" style=3D"font-family:monospace;white-space:inh=
 erit;color:rgb(38,38,128)">k</span><span class=3D"" style=3D"font-family:mo=
 nospace;white-space:inherit;color:rgb(132,60,36)">)</span><span class=3D"" =
 style=3D"font-family:monospace">&nbsp;</span><span class=3D"" style=3D"font=
 -family:monospace;white-space:inherit;color:rgb(132,60,36)">(</span><span c=
 lass=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(38,3=
 8,128)">has?</span><span class=3D"" style=3D"font-family:monospace">&nbsp;<=
 /span><span class=3D"" style=3D"font-family:monospace;white-space:inherit;c=
 olor:rgb(38,38,128)">d</span><span class=3D"" style=3D"font-family:monospac=
 e">&nbsp;</span><span class=3D"" style=3D"font-family:monospace;white-space=
 :inherit;color:rgb(38,38,128)">k</span><span class=3D"" style=3D"font-famil=
 y:monospace;white-space:inherit;color:rgb(132,60,36)">)</span><span class=
 =3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(132,60,3=
 6)">)</span><span class=3D"" style=3D"font-family:monospace;white-space:inh=
 erit;color:rgb(132,60,36)">)</span><span class=3D"" style=3D"font-family:mo=
 nospace;white-space:inherit;color:rgb(132,60,36)">]</span><span class=3D"" =
 style=3D"font-family:monospace;white-space:inherit;color:rgb(132,60,36)">)<=
 /span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
 bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
 ;</span><span class=3D"" style=3D"font-family:monospace;white-space:inherit=
 ;color:rgb(132,60,36)">(</span><span class=3D"" style=3D"font-family:monosp=
 ace;white-space:inherit;color:rgb(132,60,36)">)</span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
 bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
 ;</span><span class=3D"" style=3D"font-family:monospace;white-space:inherit=
 ;color:rgb(132,60,36)">[</span><span class=3D"" style=3D"font-family:monosp=
 ace;white-space:inherit;color:rgb(38,38,128)">result</span><span class=3D""=
  style=3D"font-family:monospace">&nbsp;</span><span class=3D"" style=3D"fon=
 t-family:monospace;white-space:inherit;color:rgb(132,60,36)">(</span><span =
 class=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(38,=
 38,128)">dictionary-value?</span><span class=3D"" style=3D"font-family:mono=
 space">&nbsp;</span><span class=3D"" style=3D"font-family:monospace;white-s=
 pace:inherit;color:rgb(38,38,128)">d</span><span class=3D"" style=3D"font-f=
 amily:monospace;white-space:inherit;color:rgb(132,60,36)">)</span><span cla=
 ss=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(132,60=
 ,36)">]</span><span class=3D"" style=3D"font-family:monospace;white-space:i=
 nherit;color:rgb(132,60,36)">)</span><span class=3D"" style=3D"font-family:=
 monospace;white-space:inherit;color:rgb(132,60,36)">]</span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace">&nbsp;&nbsp;</span><span class=3D"" style=3D=
 "font-family:monospace;white-space:inherit;color:rgb(194,116,31)">;</span><=
 span class=3D"" style=3D"font-family:monospace;white-space:inherit;color:rg=
 b(194,116,31)">&nbsp;</span><span class=3D"" style=3D"font-family:monospace=
 ;white-space:inherit;color:rgb(194,116,31)">initialization</span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace">&nbsp;&nbsp;</span><span class=3D"" style=3D=
 "font-family:monospace;white-space:inherit;color:rgb(194,116,31)">;</span><=
 span class=3D"" style=3D"font-family:monospace;white-space:inherit;color:rg=
 b(194,116,31)">&nbsp;</span><span class=3D"" style=3D"font-family:monospace=
 ;white-space:inherit;color:rgb(194,116,31)">post condition: for all k in sy=
 mbol, (has? d k) is false.</span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace">&nbsp;&nbsp;</span><span class=3D"" style=3D=
 "font-family:monospace;white-space:inherit;color:rgb(132,60,36)">[</span><s=
 pan class=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb=
 (38,38,128)">initialize</span><span class=3D"" style=3D"font-family:monospa=
 ce">&nbsp;&nbsp;</span><span class=3D"" style=3D"font-family:monospace;whit=
 e-space:inherit;color:rgb(132,60,36)">(</span><span class=3D"" style=3D"fon=
 t-family:monospace;white-space:inherit;color:rgb(38,38,128)"><span class=3D=
 "">-&gt;</span>d</span><span class=3D"" style=3D"font-family:monospace">&nb=
 sp;</span><span class=3D"" style=3D"font-family:monospace;white-space:inher=
 it;color:rgb(132,60,36)">(</span><span class=3D"" style=3D"font-family:mono=
 space;white-space:inherit;color:rgb(132,60,36)">[</span><span class=3D"" st=
 yle=3D"font-family:monospace;white-space:inherit;color:rgb(38,38,128)">p</s=
 pan><span class=3D"" style=3D"font-family:monospace">&nbsp;</span><span cla=
 ss=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(38,38,=
 128)">contract?</span><span class=3D"" style=3D"font-family:monospace;white=
 -space:inherit;color:rgb(132,60,36)">]</span><span class=3D"" style=3D"font=
 -family:monospace">&nbsp;</span><span class=3D"" style=3D"font-family:monos=
 pace;white-space:inherit;color:rgb(132,60,36)">[</span><span class=3D"" sty=
 le=3D"font-family:monospace;white-space:inherit;color:rgb(38,38,128)">eq</s=
 pan><span class=3D"" style=3D"font-family:monospace">&nbsp;</span><span cla=
 ss=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(132,60=
 ,36)">(</span><span class=3D"" style=3D"font-family:monospace;white-space:i=
 nherit;color:rgb(38,38,128)">p</span><span class=3D"" style=3D"font-family:=
 monospace">&nbsp;</span><span class=3D"" style=3D"font-family:monospace;whi=
 te-space:inherit;color:rgb(38,38,128)">p</span><span class=3D"" style=3D"fo=
 nt-family:monospace">&nbsp;</span><span class=3D"" style=3D"font-family:mon=
 ospace;white-space:inherit;color:rgb(132,60,36)">.&nbsp;</span><span class=
 =3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(38,38,12=
 8)"><span class=3D"">-&gt;</span></span><span class=3D"" style=3D"font-fami=
 ly:monospace;white-space:inherit;color:rgb(132,60,36)">&nbsp;.</span><span =
 class=3D"" style=3D"font-family:monospace">&nbsp;</span><span class=3D"" st=
 yle=3D"font-family:monospace;white-space:inherit;color:rgb(38,38,128)">bool=
 ean?</span><span class=3D"" style=3D"font-family:monospace;white-space:inhe=
 rit;color:rgb(132,60,36)">)</span><span class=3D"" style=3D"font-family:mon=
 ospace;white-space:inherit;color:rgb(132,60,36)">]</span><span class=3D"" s=
 tyle=3D"font-family:monospace;white-space:inherit;color:rgb(132,60,36)">)</=
 span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
 bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
 ;</span><span class=3D"" style=3D"font-family:monospace;white-space:inherit=
 ;color:rgb(132,60,36)">(</span><span class=3D"" style=3D"font-family:monosp=
 ace;white-space:inherit;color:rgb(132,60,36)">)</span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
 bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
 ;</span><span class=3D"" style=3D"font-family:monospace;white-space:inherit=
 ;color:rgb(132,60,36)">[</span><span class=3D"" style=3D"font-family:monosp=
 ace;white-space:inherit;color:rgb(38,38,128)">result</span><span class=3D""=
  style=3D"font-family:monospace">&nbsp;</span><span class=3D"" style=3D"fon=
 t-family:monospace;white-space:inherit;color:rgb(132,60,36)">(</span><span =
 class=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(38,=
 38,128)">and/c</span><span class=3D"" style=3D"font-family:monospace">&nbsp=
 ;</span><span class=3D"" style=3D"font-family:monospace;white-space:inherit=
 ;color:rgb(38,38,128)">dictionary?</span><span class=3D"" style=3D"font-fam=
 ily:monospace">&nbsp;</span><span class=3D"" style=3D"font-family:monospace=
 ;white-space:inherit;color:rgb(132,60,36)">(</span><span class=3D"" style=
 =3D"font-family:monospace;white-space:inherit;color:rgb(38,38,128)">compose=
 </span><span class=3D"" style=3D"font-family:monospace">&nbsp;</span><span =
 class=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(38,=
 38,128)">zero?</span><span class=3D"" style=3D"font-family:monospace">&nbsp=
 ;</span><span class=3D"" style=3D"font-family:monospace;white-space:inherit=
 ;color:rgb(38,38,128)">count</span><span class=3D"" style=3D"font-family:mo=
 nospace;white-space:inherit;color:rgb(132,60,36)">)</span><span class=3D"" =
 style=3D"font-family:monospace;white-space:inherit;color:rgb(132,60,36)">)<=
 /span><span class=3D"" style=3D"font-family:monospace;white-space:inherit;c=
 olor:rgb(132,60,36)">]</span><span class=3D"" style=3D"font-family:monospac=
 e;white-space:inherit;color:rgb(132,60,36)">)</span><span class=3D"" style=
 =3D"font-family:monospace;white-space:inherit;color:rgb(132,60,36)">]</span=
 ></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace">&nbsp;&nbsp;</span><span class=3D"" style=3D=
 "font-family:monospace;white-space:inherit;color:rgb(194,116,31)">;</span><=
 span class=3D"" style=3D"font-family:monospace;white-space:inherit;color:rg=
 b(194,116,31)">&nbsp;</span><span class=3D"" style=3D"font-family:monospace=
 ;white-space:inherit;color:rgb(194,116,31)">commands</span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace">&nbsp;&nbsp;</span><span class=3D"" style=3D=
 "font-family:monospace;white-space:inherit;color:rgb(194,116,31)">;</span><=
 span class=3D"" style=3D"font-family:monospace;white-space:inherit;color:rg=
 b(194,116,31)">&nbsp;</span><span class=3D"" style=3D"font-family:monospace=
 ;white-space:inherit;color:rgb(194,116,31)">Mitchell and McKim say that put=
  shouldn</span><span class=3D"" style=3D"font-family:monospace;white-space:=
 inherit;color:rgb(194,116,31)">&#39;</span><span class=3D"" style=3D"font-f=
 amily:monospace;white-space:inherit;color:rgb(194,116,31)">t consume Void (=
 null ptr)</span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace">&nbsp;&nbsp;</span><span class=3D"" style=3D=
 "font-family:monospace;white-space:inherit;color:rgb(194,116,31)">;</span><=
 span class=3D"" style=3D"font-family:monospace;white-space:inherit;color:rg=
 b(194,116,31)">&nbsp;</span><span class=3D"" style=3D"font-family:monospace=
 ;white-space:inherit;color:rgb(194,116,31)">for v. We allow the client to s=
 pecify a contract for all values</span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace">&nbsp;&nbsp;</span><span class=3D"" style=3D=
 "font-family:monospace;white-space:inherit;color:rgb(194,116,31)">;</span><=
 span class=3D"" style=3D"font-family:monospace;white-space:inherit;color:rg=
 b(194,116,31)">&nbsp;</span><span class=3D"" style=3D"font-family:monospace=
 ;white-space:inherit;color:rgb(194,116,31)">via initialize. We could do the=
  same via a key? parameter</span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace">&nbsp;&nbsp;</span><span class=3D"" style=3D=
 "font-family:monospace;white-space:inherit;color:rgb(194,116,31)">;</span><=
 span class=3D"" style=3D"font-family:monospace;white-space:inherit;color:rg=
 b(194,116,31)">&nbsp;</span><span class=3D"" style=3D"font-family:monospace=
 ;white-space:inherit;color:rgb(194,116,31)">(exercise). add key k with valu=
 e v to this dictionary</span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace">&nbsp;&nbsp;</span><span class=3D"" style=3D=
 "font-family:monospace;white-space:inherit;color:rgb(132,60,36)">[</span><s=
 pan class=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb=
 (38,38,128)">put</span><span class=3D"" style=3D"font-family:monospace">&nb=
 sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=3D"" =
 style=3D"font-family:monospace;white-space:inherit;color:rgb(132,60,36)">(<=
 /span><span class=3D"" style=3D"font-family:monospace;white-space:inherit;c=
 olor:rgb(38,38,128)"><span class=3D"">-&gt;</span>d</span><span class=3D"" =
 style=3D"font-family:monospace">&nbsp;</span><span class=3D"" style=3D"font=
 -family:monospace;white-space:inherit;color:rgb(132,60,36)">(</span><span c=
 lass=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(132,=
 60,36)">[</span><span class=3D"" style=3D"font-family:monospace;white-space=
 :inherit;color:rgb(38,38,128)">d</span><span class=3D"" style=3D"font-famil=
 y:monospace">&nbsp;</span><span class=3D"" style=3D"font-family:monospace;w=
 hite-space:inherit;color:rgb(38,38,128)">dictionary?</span><span class=3D""=
  style=3D"font-family:monospace;white-space:inherit;color:rgb(132,60,36)">]=
 </span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
 bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
 ;&nbsp;</span><span style=3D"background-color:rgb(255,0,0)"><span class=3D"=
 " style=3D"font-family:monospace;white-space:inherit;color:rgb(132,60,36)">=
 [</span><span class=3D"" style=3D"font-family:monospace;white-space:inherit=
 ;color:rgb(38,38,128)">k</span><span class=3D"" style=3D"font-family:monosp=
 ace">&nbsp;</span><span class=3D"" style=3D"font-family:monospace;white-spa=
 ce:inherit;color:rgb(132,60,36)">(</span><span class=3D"" style=3D"font-fam=
 ily:monospace;white-space:inherit;color:rgb(38,38,128)">and</span><span cla=
 ss=3D"" style=3D"font-family:monospace">&nbsp;</span><span class=3D"" style=
 =3D"font-family:monospace;white-space:inherit;color:rgb(38,38,128)">symbol?=
 </span><span class=3D"" style=3D"font-family:monospace">&nbsp;</span><span =
 class=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(132=
 ,60,36)">(</span><span class=3D"" style=3D"font-family:monospace;white-spac=
 e:inherit;color:rgb(38,38,128)">not-has?</span><span class=3D"" style=3D"fo=
 nt-family:monospace">&nbsp;</span><span class=3D"" style=3D"font-family:mon=
 ospace;white-space:inherit;color:rgb(38,38,128)">d</span><span class=3D"" s=
 tyle=3D"font-family:monospace;white-space:inherit;color:rgb(132,60,36)">)</=
 span><span class=3D"" style=3D"font-family:monospace;white-space:inherit;co=
 lor:rgb(132,60,36)">)</span><span class=3D"" style=3D"font-family:monospace=
 ;white-space:inherit;color:rgb(132,60,36)">]</span></span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
 bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
 ;&nbsp;</span><span class=3D"" style=3D"font-family:monospace;white-space:i=
 nherit;color:rgb(132,60,36)">[</span><span class=3D"" style=3D"font-family:=
 monospace;white-space:inherit;color:rgb(38,38,128)">v</span><span class=3D"=
 " style=3D"font-family:monospace">&nbsp;</span><span class=3D"" style=3D"fo=
 nt-family:monospace;white-space:inherit;color:rgb(132,60,36)">(</span><span=
  class=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(38=
 ,38,128)">dictionary-value?</span><span class=3D"" style=3D"font-family:mon=
 ospace">&nbsp;</span><span class=3D"" style=3D"font-family:monospace;white-=
 space:inherit;color:rgb(38,38,128)">d</span><span class=3D"" style=3D"font-=
 family:monospace;white-space:inherit;color:rgb(132,60,36)">)</span><span cl=
 ass=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(132,6=
 0,36)">]</span><span class=3D"" style=3D"font-family:monospace;white-space:=
 inherit;color:rgb(132,60,36)">)</span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
 bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
 ;</span><span class=3D"" style=3D"font-family:monospace;white-space:inherit=
 ;color:rgb(132,60,36)">(</span><span class=3D"" style=3D"font-family:monosp=
 ace;white-space:inherit;color:rgb(132,60,36)">)</span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
 bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
 ;</span><span class=3D"" style=3D"font-family:monospace;white-space:inherit=
 ;color:rgb(132,60,36)">[</span><span class=3D"" style=3D"font-family:monosp=
 ace;white-space:inherit;color:rgb(38,38,128)">result</span><span class=3D""=
  style=3D"font-family:monospace">&nbsp;</span><span class=3D"" style=3D"fon=
 t-family:monospace;white-space:inherit;color:rgb(38,38,128)">dictionary?</s=
 pan><span class=3D"" style=3D"font-family:monospace;white-space:inherit;col=
 or:rgb(132,60,36)">]</span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
 bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
 ;</span><span class=3D"" style=3D"font-family:monospace;white-space:inherit=
 ;color:rgb(132,60,36)">#:post-cond</span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
 bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
 ;</span><span class=3D"" style=3D"font-family:monospace;white-space:inherit=
 ;color:rgb(132,60,36)">(</span><span class=3D"" style=3D"font-family:monosp=
 ace;white-space:inherit;color:rgb(38,38,128)">and</span><span class=3D"" st=
 yle=3D"font-family:monospace">&nbsp;</span><span class=3D"" style=3D"font-f=
 amily:monospace;white-space:inherit;color:rgb(132,60,36)">(</span><span cla=
 ss=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(38,38,=
 128)">has?</span><span class=3D"" style=3D"font-family:monospace">&nbsp;</s=
 pan><span class=3D"" style=3D"font-family:monospace;white-space:inherit;col=
 or:rgb(38,38,128)">result</span><span class=3D"" style=3D"font-family:monos=
 pace">&nbsp;</span><span class=3D"" style=3D"font-family:monospace;white-sp=
 ace:inherit;color:rgb(38,38,128)">k</span><span class=3D"" style=3D"font-fa=
 mily:monospace;white-space:inherit;color:rgb(132,60,36)">)</span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
 bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
 ;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=3D"" style=3D"font-family=
 :monospace;white-space:inherit;color:rgb(132,60,36)">(</span><span class=3D=
 "" style=3D"font-family:monospace;white-space:inherit;color:rgb(38,38,128)"=
 >=3D</span><span class=3D"" style=3D"font-family:monospace">&nbsp;</span><s=
 pan class=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb=
 (132,60,36)">(</span><span class=3D"" style=3D"font-family:monospace;white-=
 space:inherit;color:rgb(38,38,128)">count</span><span class=3D"" style=3D"f=
 ont-family:monospace">&nbsp;</span><span class=3D"" style=3D"font-family:mo=
 nospace;white-space:inherit;color:rgb(38,38,128)">d</span><span class=3D"" =
 style=3D"font-family:monospace;white-space:inherit;color:rgb(132,60,36)">)<=
 /span><span class=3D"" style=3D"font-family:monospace">&nbsp;</span><span c=
 lass=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(132,=
 60,36)">(</span><span class=3D"" style=3D"font-family:monospace;white-space=
 :inherit;color:rgb(38,38,128)"><span class=3D"">-</span></span><span class=
 =3D"" style=3D"font-family:monospace">&nbsp;</span><span class=3D"" style=
 =3D"font-family:monospace;white-space:inherit;color:rgb(132,60,36)">(</span=
 ><span class=3D"" style=3D"font-family:monospace;white-space:inherit;color:=
 rgb(38,38,128)">count</span><span class=3D"" style=3D"font-family:monospace=
 ">&nbsp;</span><span class=3D"" style=3D"font-family:monospace;white-space:=
 inherit;color:rgb(38,38,128)">result</span><span class=3D"" style=3D"font-f=
 amily:monospace;white-space:inherit;color:rgb(132,60,36)">)</span><span cla=
 ss=3D"" style=3D"font-family:monospace">&nbsp;</span><span class=3D"" style=
 =3D"font-family:monospace;white-space:inherit;color:rgb(34,139,34)">1</span=
 ><span class=3D"" style=3D"font-family:monospace;white-space:inherit;color:=
 rgb(132,60,36)">)</span><span class=3D"" style=3D"font-family:monospace;whi=
 te-space:inherit;color:rgb(132,60,36)">)</span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
 bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
 ;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=3D"" style=3D"font-family=
 :monospace;white-space:inherit;color:rgb(132,60,36)">(</span><span class=3D=
 "" style=3D"font-family:monospace;white-space:inherit;color:rgb(132,60,36)"=
 >[</span><span class=3D"" style=3D"font-family:monospace;white-space:inheri=
 t;color:rgb(38,38,128)">dictionary-eq?</span><span class=3D"" style=3D"font=
 -family:monospace">&nbsp;</span><span class=3D"" style=3D"font-family:monos=
 pace;white-space:inherit;color:rgb(38,38,128)">d</span><span class=3D"" sty=
 le=3D"font-family:monospace;white-space:inherit;color:rgb(132,60,36)">]</sp=
 an><span class=3D"" style=3D"font-family:monospace">&nbsp;</span><span clas=
 s=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(132,60,=
 36)">(</span><span class=3D"" style=3D"font-family:monospace;white-space:in=
 herit;color:rgb(38,38,128)">value-for</span><span class=3D"" style=3D"font-=
 family:monospace">&nbsp;</span><span class=3D"" style=3D"font-family:monosp=
 ace;white-space:inherit;color:rgb(38,38,128)">result</span><span class=3D""=
  style=3D"font-family:monospace">&nbsp;</span><span class=3D"" style=3D"fon=
 t-family:monospace;white-space:inherit;color:rgb(38,38,128)">k</span><span =
 class=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(132=
 ,60,36)">)</span><span class=3D"" style=3D"font-family:monospace">&nbsp;</s=
 pan><span class=3D"" style=3D"font-family:monospace;white-space:inherit;col=
 or:rgb(38,38,128)">v</span><span class=3D"" style=3D"font-family:monospace;=
 white-space:inherit;color:rgb(132,60,36)">)</span><span class=3D"" style=3D=
 "font-family:monospace;white-space:inherit;color:rgb(132,60,36)">)</span><s=
 pan class=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb=
 (132,60,36)">)</span><span class=3D"" style=3D"font-family:monospace;white-=
 space:inherit;color:rgb(132,60,36)">]</span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace">&nbsp;&nbsp;</span><span class=3D"" style=3D=
 "font-family:monospace;white-space:inherit;color:rgb(194,116,31)">;</span><=
 span class=3D"" style=3D"font-family:monospace;white-space:inherit;color:rg=
 b(194,116,31)">&nbsp;</span><span class=3D"" style=3D"font-family:monospace=
 ;white-space:inherit;color:rgb(194,116,31)">remove key k from this dictiona=
 ry</span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace">&nbsp;&nbsp;</span><span class=3D"" style=3D=
 "font-family:monospace;white-space:inherit;color:rgb(132,60,36)">[</span><s=
 pan class=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb=
 (38,38,128)">rem</span><span class=3D"" style=3D"font-family:monospace">&nb=
 sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=3D"" =
 style=3D"font-family:monospace;white-space:inherit;color:rgb(132,60,36)">(<=
 /span><span class=3D"" style=3D"font-family:monospace;white-space:inherit;c=
 olor:rgb(38,38,128)"><span class=3D"">-&gt;</span>d</span><span class=3D"" =
 style=3D"font-family:monospace">&nbsp;</span><span class=3D"" style=3D"font=
 -family:monospace;white-space:inherit;color:rgb(132,60,36)">(</span><span c=
 lass=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(132,=
 60,36)">[</span><span class=3D"" style=3D"font-family:monospace;white-space=
 :inherit;color:rgb(38,38,128)">d</span><span class=3D"" style=3D"font-famil=
 y:monospace">&nbsp;</span><span class=3D"" style=3D"font-family:monospace;w=
 hite-space:inherit;color:rgb(38,38,128)">dictionary?</span><span class=3D""=
  style=3D"font-family:monospace;white-space:inherit;color:rgb(132,60,36)">]=
 </span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
 bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
 ;&nbsp;</span><span class=3D"" style=3D"font-family:monospace;white-space:i=
 nherit;color:rgb(132,60,36)">[</span><span class=3D"" style=3D"font-family:=
 monospace;white-space:inherit;color:rgb(38,38,128)">k</span><span class=3D"=
 " style=3D"font-family:monospace">&nbsp;</span><span class=3D"" style=3D"fo=
 nt-family:monospace;white-space:inherit;color:rgb(132,60,36)">(</span><span=
  class=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(38=
 ,38,128)">and/c</span><span class=3D"" style=3D"font-family:monospace">&nbs=
 p;</span><span class=3D"" style=3D"font-family:monospace;white-space:inheri=
 t;color:rgb(38,38,128)">symbol?</span><span class=3D"" style=3D"font-family=
 :monospace">&nbsp;</span><span class=3D"" style=3D"font-family:monospace;wh=
 ite-space:inherit;color:rgb(132,60,36)">(</span><span class=3D"" style=3D"f=
 ont-family:monospace;white-space:inherit;color:rgb(38,38,128)">lambda</span=
 ><span class=3D"" style=3D"font-family:monospace">&nbsp;</span><span class=
 =3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(132,60,3=
 6)">(</span><span class=3D"" style=3D"font-family:monospace;white-space:inh=
 erit;color:rgb(38,38,128)">k</span><span class=3D"" style=3D"font-family:mo=
 nospace;white-space:inherit;color:rgb(132,60,36)">)</span><span class=3D"" =
 style=3D"font-family:monospace">&nbsp;</span><span class=3D"" style=3D"font=
 -family:monospace;white-space:inherit;color:rgb(132,60,36)">(</span><span c=
 lass=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(38,3=
 8,128)">has?</span><span class=3D"" style=3D"font-family:monospace">&nbsp;<=
 /span><span class=3D"" style=3D"font-family:monospace;white-space:inherit;c=
 olor:rgb(38,38,128)">d</span><span class=3D"" style=3D"font-family:monospac=
 e">&nbsp;</span><span class=3D"" style=3D"font-family:monospace;white-space=
 :inherit;color:rgb(38,38,128)">k</span><span class=3D"" style=3D"font-famil=
 y:monospace;white-space:inherit;color:rgb(132,60,36)">)</span><span class=
 =3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(132,60,3=
 6)">)</span><span class=3D"" style=3D"font-family:monospace;white-space:inh=
 erit;color:rgb(132,60,36)">)</span><span class=3D"" style=3D"font-family:mo=
 nospace;white-space:inherit;color:rgb(132,60,36)">]</span><span class=3D"" =
 style=3D"font-family:monospace;white-space:inherit;color:rgb(132,60,36)">)<=
 /span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
 bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
 ;</span><span class=3D"" style=3D"font-family:monospace;white-space:inherit=
 ;color:rgb(132,60,36)">(</span><span class=3D"" style=3D"font-family:monosp=
 ace;white-space:inherit;color:rgb(132,60,36)">)</span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
 bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
 ;</span><span class=3D"" style=3D"font-family:monospace;white-space:inherit=
 ;color:rgb(132,60,36)">[</span><span class=3D"" style=3D"font-family:monosp=
 ace;white-space:inherit;color:rgb(38,38,128)">result</span><span class=3D""=
  style=3D"font-family:monospace">&nbsp;</span><span class=3D"" style=3D"fon=
 t-family:monospace;white-space:inherit;color:rgb(132,60,36)">(</span><span =
 class=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(38,=
 38,128)">and/c</span><span class=3D"" style=3D"font-family:monospace">&nbsp=
 ;</span><span class=3D"" style=3D"font-family:monospace;white-space:inherit=
 ;color:rgb(38,38,128)">dictionary?</span><span class=3D"" style=3D"font-fam=
 ily:monospace">&nbsp;</span><span class=3D"" style=3D"font-family:monospace=
 ;white-space:inherit;color:rgb(38,38,128)">not-has?</span><span class=3D"" =
 style=3D"font-family:monospace;white-space:inherit;color:rgb(132,60,36)">)<=
 /span><span class=3D"" style=3D"font-family:monospace;white-space:inherit;c=
 olor:rgb(132,60,36)">]</span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
 bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
 ;</span><span class=3D"" style=3D"font-family:monospace;white-space:inherit=
 ;color:rgb(132,60,36)">#:post-cond</span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
 bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
 ;</span><span class=3D"" style=3D"font-family:monospace;white-space:inherit=
 ;color:rgb(132,60,36)">(</span><span class=3D"" style=3D"font-family:monosp=
 ace;white-space:inherit;color:rgb(38,38,128)">=3D</span><span class=3D"" st=
 yle=3D"font-family:monospace">&nbsp;</span><span class=3D"" style=3D"font-f=
 amily:monospace;white-space:inherit;color:rgb(132,60,36)">(</span><span cla=
 ss=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(38,38,=
 128)">count</span><span class=3D"" style=3D"font-family:monospace">&nbsp;</=
 span><span class=3D"" style=3D"font-family:monospace;white-space:inherit;co=
 lor:rgb(38,38,128)">d</span><span class=3D"" style=3D"font-family:monospace=
 ;white-space:inherit;color:rgb(132,60,36)">)</span><span class=3D"" style=
 =3D"font-family:monospace">&nbsp;</span><span class=3D"" style=3D"font-fami=
 ly:monospace;white-space:inherit;color:rgb(132,60,36)">(</span><span class=
 =3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(38,38,12=
 8)">+</span><span class=3D"" style=3D"font-family:monospace">&nbsp;</span><=
 span class=3D"" style=3D"font-family:monospace;white-space:inherit;color:rg=
 b(132,60,36)">(</span><span class=3D"" style=3D"font-family:monospace;white=
 -space:inherit;color:rgb(38,38,128)">count</span><span class=3D"" style=3D"=
 font-family:monospace">&nbsp;</span><span class=3D"" style=3D"font-family:m=
 onospace;white-space:inherit;color:rgb(38,38,128)">result</span><span class=
 =3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(132,60,3=
 6)">)</span><span class=3D"" style=3D"font-family:monospace">&nbsp;</span><=
 span class=3D"" style=3D"font-family:monospace;white-space:inherit;color:rg=
 b(34,139,34)">1</span><span class=3D"" style=3D"font-family:monospace;white=
 -space:inherit;color:rgb(132,60,36)">)</span><span class=3D"" style=3D"font=
 -family:monospace;white-space:inherit;color:rgb(132,60,36)">)</span><span c=
 lass=3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(132,=
 60,36)">)</span><span class=3D"" style=3D"font-family:monospace;white-space=
 :inherit;color:rgb(132,60,36)">]</span><span class=3D"" style=3D"font-famil=
 y:monospace;white-space:inherit;color:rgb(132,60,36)">)</span><span class=
 =3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(132,60,3=
 6)">)</span></td>
 </tr><tr style=3D"white-space:inherit"><td style=3D"padding-left:0px;paddin=
 g-right:0px;vertical-align:baseline;white-space:inherit"><span class=3D"" s=
 tyle=3D"font-family:monospace;white-space:inherit;color:rgb(194,116,31)">;<=
 /span><span class=3D"" style=3D"font-family:monospace;white-space:inherit;c=
 olor:rgb(194,116,31)">&nbsp;</span><span class=3D"" style=3D"font-family:mo=
 nospace;white-space:inherit;color:rgb(194,116,31)">end of interface<br>
 <br>The line with red background should be:<br><span class=3D"" style=3D"co=
 lor:rgb(0,0,0)">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nb=
 sp; &nbsp; &nbsp;</span><span style=3D"color:rgb(0,0,0);font-family:arial,s=
 ans-serif;background-color:rgb(255,0,0)"><span class=3D"" style=3D"font-fam=
 ily:monospace;white-space:inherit;color:rgb(132,60,36)">[</span><span class=
 =3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(38,38,12=
 8)">k</span><span class=3D"" style=3D"font-family:monospace">&nbsp;</span><=
 span class=3D"" style=3D"font-family:monospace;white-space:inherit;color:rg=
 b(132,60,36)">(</span><span class=3D"" style=3D"font-family:monospace;white=
 -space:inherit;color:rgb(38,38,128)">and/c</span><span class=3D"" style=3D"=
 font-family:monospace">&nbsp;</span><span class=3D"" style=3D"font-family:m=
 onospace;white-space:inherit;color:rgb(38,38,128)">symbol?</span><span clas=
 s=3D"" style=3D"font-family:monospace">&nbsp;</span><span class=3D"" style=
 =3D"font-family:monospace;white-space:inherit;color:rgb(132,60,36)">(</span=
 ><span class=3D"" style=3D"font-family:monospace;white-space:inherit;color:=
 rgb(38,38,128)">not-has?</span><span class=3D"" style=3D"font-family:monosp=
 ace">&nbsp;</span><span class=3D"" style=3D"font-family:monospace;white-spa=
 ce:inherit;color:rgb(38,38,128)">d</span><span class=3D"" style=3D"font-fam=
 ily:monospace;white-space:inherit;color:rgb(132,60,36)">)</span><span class=
 =3D"" style=3D"font-family:monospace;white-space:inherit;color:rgb(132,60,3=
 6)">)</span><span class=3D"" style=3D"font-family:monospace;white-space:inh=
 erit;color:rgb(132,60,36)">]<br>
 </span></span><br>Right?<br><br>&gt;&gt; ; test it<br>&gt;&gt;&nbsp;</span>=
 <span class=3D"" style=3D"font-family:monospace;color:rgb(132,60,36);font-s=
 ize:medium">(</span><span class=3D"" style=3D"font-family:monospace;color:r=
 gb(38,38,128);font-size:medium">define</span><span class=3D"" style=3D"font=
 -family:monospace;font-size:medium">&nbsp;</span><span class=3D"" style=3D"=
 font-family:monospace;color:rgb(38,38,128);font-size:medium">d0</span><span=
  class=3D"" style=3D"font-family:monospace;font-size:medium">&nbsp;</span><=
 span class=3D"" style=3D"font-family:monospace;color:rgb(132,60,36);font-si=
 ze:medium">(</span><span class=3D"" style=3D"font-family:monospace;color:rg=
 b(38,38,128);font-size:medium">initialize</span><span class=3D"" style=3D"f=
 ont-family:monospace;font-size:medium">&nbsp;</span><span class=3D"" style=
 =3D"font-family:monospace;color:rgb(132,60,36);font-size:medium">(</span><s=
 pan class=3D"" style=3D"font-family:monospace;color:rgb(38,38,128);font-siz=
 e:medium">flat-contract</span><span class=3D"" style=3D"font-family:monospa=
 ce;font-size:medium">&nbsp;</span><span class=3D"" style=3D"font-family:mon=
 ospace;color:rgb(38,38,128);font-size:medium">integer?</span><span class=3D=
 "" style=3D"font-family:monospace;color:rgb(132,60,36);font-size:medium">)<=
 /span><span class=3D"" style=3D"font-family:monospace;font-size:medium">&nb=
 sp;</span><span class=3D"" style=3D"font-family:monospace;color:rgb(38,38,1=
 28);font-size:medium">=3D</span><span class=3D"" style=3D"font-family:monos=
 pace;color:rgb(132,60,36);font-size:medium">)</span><span class=3D"" style=
 =3D"font-family:monospace;color:rgb(132,60,36);font-size:medium">)<br>
 &gt;&gt; (put d0 14 3)<br><br><br></span></td></tr></tbody></table></div><d=
 iv class=3D"gmail_extra"><br><br><div class=3D"gmail_quote">2013/2/4  <span=
  dir=3D"ltr">&lt;<a href=3D"mailto:bugs@racket-lang.org" target=3D"_blank">=
 bugs@racket-lang.org</a>&gt;</span><br>
 <blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1p=
 x #ccc solid;padding-left:1ex">Thank you very much for your problem report.=
 <br>
 It has the internal identification `all/13486&#39;.<br>
 You can check on the status of your problem report at<br>
 &nbsp; <a href=3D"http://bugs.racket-lang.org/query/?cmd=3Dview&amp;pr=3D13=
 486" target=3D"_blank">http://bugs.racket-lang.org/query/?cmd=3Dview&amp;pr=
 =3D13486</a><br>
 <br>
 If you wish to provide further information regarding this problem<br>
 you can do so as a reply to this message. &nbsp;(But please make sure<br>
 that your mailer replies to both &quot;bugs&quot; and &quot;bug-notificatio=
 n&quot;.)<br>
 <br>
 </blockquote></div><br></div></div>
 
 --001636c9266457714004d4e10737--
Responsible changed from "nobody" to "dyoo" by dyoo@racket-lang.org at Fri, 08 Feb 2013 16:07:08 -0500
Reason>>> A commit by dyoo@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/c19b8a4f7c
State changed from "open" to "closed" by dyoo@racket-lang.org at Fri, 08 Feb 2013 16:07:08 -0500
Reason>>> A commit by dyoo@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/c19b8a4f7c
  | Correct the contract in Example 3 to use and/c.
  | 
  | Closes PR 13486.

From: Danny Yoo <dyoo@hashcollision.org>
To: =?UTF-8?B?54Oo5Lic5YiY?= <yed.liu@gmail.com>
Cc: bugs@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/13486: mistakes in guide.pdf
Date: Fri, 8 Feb 2013 14:05:04 -0700

 --e89a8ff242a116765404d53ceb01
 Content-Type: text/plain; charset=UTF-8
 
 Agreed; it should be and/c.  I'll add a correction to the guide and a test
 case that exercises that particular contract.
 
 --e89a8ff242a116765404d53ceb01
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 Agreed; it should be and/c. =C2=A0I&#39;ll add a correction to the guide an=
 d a test case that exercises that particular contract.<br>
 
 --e89a8ff242a116765404d53ceb01--
