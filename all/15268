From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Wed Mar  9 14:04:25 2016
Received: from mail-ig0-f173.google.com (mail-ig0-f173.google.com [209.85.213.173])
	by winooski.ccs.neu.edu (8.14.7/8.14.7) with ESMTP id u29J4MBn018194
	for <bugs@bugs.plt-scheme.org>; Wed, 9 Mar 2016 14:04:22 -0500
Message-Id: <201603091904.u29J4JeS018187@winooski.ccs.neu.edu>
Date: Wed, 9 Mar 2016 14:04:19 -0500
From: byrondavies@starshine.us
To: bugs@racket-lang.org
Subject: slideshow glitches

>Number:         15268
>Category:       all
>Synopsis:       slideshow glitches
>Class:          sw-bug
>Responsible:    nobody
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Wed Mar 09 14:08:01 -0500 2016
>Last-Modified:  Tue Mar 15 20:24:01 -0400 2016
>Originator:     Byron Davies
>Organization:
plt
>Submitter-Id:   unknown
>Release:        6.4
>Environment:
macosx "Darwin Byron-MacBook-Air.local 14.5.0 Darwin Kernel Version 14.5.0: Tue Sep  1 21:23:09 PDT 2015; root:xnu-2782.50.1~1/RELEASE_X86_64 x86_64" (x86_64-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 1348435224
raco pkg (show):
Installation-wide:
 Package            Checksum     Source
 main-distribution  2820602f...  catalog main-distribution
 racket-lib         f678d8f6...  catalog racket-lib
 [188 auto-installed packages not shown]
User-specific for installation "6.4":
 Package  Checksum                Source
 rsound   4dc9c8f9...             catalog...ound/master/
 [2 auto-installed packages not shown]



Collections:
("/Users/byron/Library/Racket/6.4/collects"
 (non-existent-path))
("/Applications/Racket v6.4/collects"
 ("acks" "compiler" "data" "db" "dynext" "ffi" "file" "info" "info-domain" "json" "launcher" "net" "openssl" "pkg" "planet" "racket" "raco" "reader" "realm" "s-exp" "setup" "syntax" "unstable" "version" "xml"))

Recent Internal Errors: 
Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((test) (main)) #t))
>Description:
slideshow has been an amazing tool for developing automated flows to help five-year-olds to learn to read.  I can’t say enough good things about it.

I have a couple of problems, however.  The first one has to do with the clickback function.  This, in combination with rsound, has been a godsend for making it possible to attach sounds to any graphical object on the display, so for example the user can click a sound symbol or a word and hear the associated sound.  This works for single picts and for picts translated in x-y coordinates (e.g, a pict that's part of a larger pict structure). It fails, however, for scaled picts as you can see in "Steps to Reproduce".

A second issue is a modest but repeating inconvenience. After a slideshow file is compiled, you can run a (slide <cmd> ...) from the REPL exactly once, but after that you get the error message "slide window has been closed”.  As far as I can tell, this means I have to recompile the file to reset the slide window. I have "slide shows" of over a thousand slides that load and process magabytes of data during compilation, adding 15 seconds to each iteration of my debug loop.  Would it be possible to have the slide function create a new slide window when necessary?
>How-To-Repeat:
Compile and run this.

#lang slideshow
(enable-click-advance! #f)
(slide (clickback (rectangle 500 500) (lambda () #t)))
(slide (hc-append (ellipse 100 100) (clickback (rectangle 500 500) (lambda () #t))))
(slide (scale (clickback (rectangle 500 500) (lambda () #t)) .5))
(slide (scale (hc-append (ellipse 100 100) (clickback (rectangle 500 500) (lambda () #t))) .5))


When you click on the clickback region, it shows up in gray.  In the third and fourth slides, with scaling, the clickback region is the wrong size and offset down and right.  I looked at the source code in core.rkt in the slideshow-lib folder, but I don’t see what the problem is. Translation and scaling seem to be handled by the dc command inside the clickback function, but the scaling part doesn't seem to work, at least when scale is not (1, 1).
>Fix:
>Audit-Trail:
From: Matthew Flatt <mflatt@cs.utah.edu>
To: byrondavies@starshine.us, bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/15268: slideshow glitches
Date: Wed, 9 Mar 2016 12:57:14 -0700

 I'll definitely fix the scaling issue for clickbacks.
 
 I think we can do better than "slide window has been closed", too, but
 I'll have to investigate more to be sure.
 
 At Wed, 9 Mar 2016 14:08:02 -0500, byrondavies@starshine.us wrote:
 > A new problem report is waiting at
 >   http://bugs.racket-lang.org/query/?cmd=view&pr=15268
 > 
 > Reported by Byron Davies for release: 6.4
 > 
 > *** Description:
 > slideshow has been an amazing tool for developing automated flows to help 
 > five-year-olds to learn to read.  I canât say enough good things about it.
 > 
 > I have a couple of problems, however.  The first one has to do with the 
 > clickback function.  This, in combination with rsound, has been a godsend for 
 > making it possible to attach sounds to any graphical object on the display, so 
 > for example the user can click a sound symbol or a word and hear the 
 > associated sound.  This works for single picts and for picts translated in x-y 
 > coordinates (e.g, a pict that's part of a larger pict structure). It fails, 
 > however, for scaled picts as you can see in "Steps to Reproduce".
 > 
 > A second issue is a modest but repeating inconvenience. After a slideshow file 
 > is compiled, you can run a (slide <cmd> ...) from the REPL exactly once, but 
 > after that you get the error message "slide window has been closedâ.  As far 
 > as I can tell, this means I have to recompile the file to reset the slide 
 > window. I have "slide shows" of over a thousand slides that load and process 
 > magabytes of data during compilation, adding 15 seconds to each iteration of 
 > my debug loop.  Would it be possible to have the slide function create a new 
 > slide window when necessary?
 > 
 > *** How to repeat:
 > Compile and run this.
 > 
 > #lang slideshow
 > (enable-click-advance! #f)
 > (slide (clickback (rectangle 500 500) (lambda () #t)))
 > (slide (hc-append (ellipse 100 100) (clickback (rectangle 500 500) (lambda () 
 > #t))))
 > (slide (scale (clickback (rectangle 500 500) (lambda () #t)) .5))
 > (slide (scale (hc-append (ellipse 100 100) (clickback (rectangle 500 500) 
 > (lambda () #t))) .5))
 > 
 > 
 > When you click on the clickback region, it shows up in gray.  In the third and 
 > fourth slides, with scaling, the clickback region is the wrong size and offset 
 > down and right.  I looked at the source code in core.rkt in the slideshow-lib 
 > folder, but I donât see what the problem is. Translation and scaling seem to 
 > be handled by the dc command inside the clickback function, but the scaling 
 > part doesn't seem to work, at least when scale is not (1, 1).
 > 
 > *** Environment:
 > macosx "Darwin Byron-MacBook-Air.local 14.5.0 Darwin Kernel Version 14.5.0: 
 > Tue Sep  1 21:23:09 PDT 2015; root:xnu-2782.50.1~1/RELEASE_X86_64 x86_64" 
 > (x86_64-macosx/3m) (get-display-depth) = 32
 > Human Language: english
 > (current-memory-use) 1348435224
 > raco pkg (show):
 > Installation-wide:
 >  Package            Checksum     Source
 >  main-distribution  2820602f...  catalog main-distribution
 >  racket-lib         f678d8f6...  catalog racket-lib
 >  [188 auto-installed packages not shown]
 > User-specific for installation "6.4":
 >  Package  Checksum                Source
 >  rsound   4dc9c8f9...             catalog...ound/master/
 >  [2 auto-installed packages not shown]
 > 
 > 
 > 
 > Collections:
 > ("/Users/byron/Library/Racket/6.4/collects"
 >  (non-existent-path))
 > ("/Applications/Racket v6.4/collects"
 >  ("acks" "compiler" "data" "db" "dynext" "ffi" "file" "info" "info-domain" 
 > "json" "launcher" "net" "openssl" "pkg" "planet" "racket" "raco" "reader" 
 > "realm" "s-exp" "setup" "syntax" "unstable" "version" "xml"))
 > 
 > Recent Internal Errors: 
 > Computer Language: (("Determine language from source") (#(#t print 
 > mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((test) 
 > (main)) #t))
 
From: Matthew Flatt <mflatt@cs.utah.edu>
To: byrondavies@starshine.us, bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/15268: slideshow glitches
Date: Tue, 15 Mar 2016 18:25:54 -0600

 I've fixed `clickback` for scaling (and rotation).
 
 To enable `slide` to start a new show after the window is closed, I've
 added a `set-allow-new-slides-after-close!` function. Unfortunately, I
 couldn't figure out a way to allow new slides more automatically --- at
 least, not without breaking the way existing programs work. I'm hoping
 that adding `(set-allow-new-slides-after-close! #t)` to the start of
 your program will work well enough.
 
 These changes will be in the next snapshot build.
 
 At Wed, 9 Mar 2016 14:08:02 -0500, byrondavies@starshine.us wrote:
 > A new problem report is waiting at
 >   http://bugs.racket-lang.org/query/?cmd=view&pr=15268
 > 
 > Reported by Byron Davies for release: 6.4
 > 
 > *** Description:
 > slideshow has been an amazing tool for developing automated flows to help 
 > five-year-olds to learn to read.  I canât say enough good things about it.
 > 
 > I have a couple of problems, however.  The first one has to do with the 
 > clickback function.  This, in combination with rsound, has been a godsend for 
 > making it possible to attach sounds to any graphical object on the display, so 
 > for example the user can click a sound symbol or a word and hear the 
 > associated sound.  This works for single picts and for picts translated in x-y 
 > coordinates (e.g, a pict that's part of a larger pict structure). It fails, 
 > however, for scaled picts as you can see in "Steps to Reproduce".
 > 
 > A second issue is a modest but repeating inconvenience. After a slideshow file 
 > is compiled, you can run a (slide <cmd> ...) from the REPL exactly once, but 
 > after that you get the error message "slide window has been closedâ.  As far 
 > as I can tell, this means I have to recompile the file to reset the slide 
 > window. I have "slide shows" of over a thousand slides that load and process 
 > magabytes of data during compilation, adding 15 seconds to each iteration of 
 > my debug loop.  Would it be possible to have the slide function create a new 
 > slide window when necessary?
 > 
 > *** How to repeat:
 > Compile and run this.
 > 
 > #lang slideshow
 > (enable-click-advance! #f)
 > (slide (clickback (rectangle 500 500) (lambda () #t)))
 > (slide (hc-append (ellipse 100 100) (clickback (rectangle 500 500) (lambda () 
 > #t))))
 > (slide (scale (clickback (rectangle 500 500) (lambda () #t)) .5))
 > (slide (scale (hc-append (ellipse 100 100) (clickback (rectangle 500 500) 
 > (lambda () #t))) .5))
 > 
 > 
 > When you click on the clickback region, it shows up in gray.  In the third and 
 > fourth slides, with scaling, the clickback region is the wrong size and offset 
 > down and right.  I looked at the source code in core.rkt in the slideshow-lib 
 > folder, but I donât see what the problem is. Translation and scaling seem to 
 > be handled by the dc command inside the clickback function, but the scaling 
 > part doesn't seem to work, at least when scale is not (1, 1).
 > 
 > *** Environment:
 > macosx "Darwin Byron-MacBook-Air.local 14.5.0 Darwin Kernel Version 14.5.0: 
 > Tue Sep  1 21:23:09 PDT 2015; root:xnu-2782.50.1~1/RELEASE_X86_64 x86_64" 
 > (x86_64-macosx/3m) (get-display-depth) = 32
 > Human Language: english
 > (current-memory-use) 1348435224
 > raco pkg (show):
 > Installation-wide:
 >  Package            Checksum     Source
 >  main-distribution  2820602f...  catalog main-distribution
 >  racket-lib         f678d8f6...  catalog racket-lib
 >  [188 auto-installed packages not shown]
 > User-specific for installation "6.4":
 >  Package  Checksum                Source
 >  rsound   4dc9c8f9...             catalog...ound/master/
 >  [2 auto-installed packages not shown]
 > 
 > 
 > 
 > Collections:
 > ("/Users/byron/Library/Racket/6.4/collects"
 >  (non-existent-path))
 > ("/Applications/Racket v6.4/collects"
 >  ("acks" "compiler" "data" "db" "dynext" "ffi" "file" "info" "info-domain" 
 > "json" "launcher" "net" "openssl" "pkg" "planet" "racket" "raco" "reader" 
 > "realm" "s-exp" "setup" "syntax" "unstable" "version" "xml"))
 > 
 > Recent Internal Errors: 
 > Computer Language: (("Determine language from source") (#(#t print 
 > mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((test) 
 > (main)) #t))
 
