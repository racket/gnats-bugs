From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Thu Aug  8 01:27:14 2013
Received: from mail-ob0-f173.google.com (mail-ob0-f173.google.com [209.85.214.173])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id r785RBaq019051
	for <bugs@bugs.plt-scheme.org>; Thu, 8 Aug 2013 01:27:11 -0400
Message-Id: <201308080527.r785R9IE019045@champlain.ccs.neu.edu>
Date: Thu, 8 Aug 2013 01:27:09 -0400
From: eric.n.dobson@gmail.com
To: bugs@racket-lang.org
Subject: Standard exn structures are not place-message-allowed?

>Number:         13958
>Category:       all
>Synopsis:       Standard exn structures are not place-message-allowed?
>Class:          change-request
>Responsible:    nobody
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Thu Aug 08 01:28:01 -0400 2013
>Closed-Date:    Mon Oct 21 10:15:16 -0400 2013
>Last-Modified:  Mon Oct 21 10:15:16 -0400 2013
>Originator:     Eric Dobson
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.3.4.11
>Environment:
MacIntel / Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_2) AppleWebKit/537.28 (KHTML, like Gecko) Chrome/26.0.1397.2 Safari/537.28
>Description:
I want to be able to design my program so that at some point I can decide that parts of it run in different places.

Example: I have two module A and B. B provides a function foo. I want to make a version B/places that also provides a function foo (so as to be a dropin replacement) which sends the values over to another place, does the computation and sends it back. Even if the inputs and outputs are standard values, exceptions cannot make it across the boundary. This means that I cannot provide the same functionality even for simple functions that sometimes raise exceptions.
>How-To-Repeat:
>Fix:
>Audit-Trail:
From: Robby Findler <robby@eecs.northwestern.edu>
To: Eric Dobson <eric.n.dobson@gmail.com>, bugs <bugs@racket-lang.org>
Cc: nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/13958: Standard exn structures are not place-message-allowed?
Date: Thu, 8 Aug 2013 05:44:04 -0500

 --f46d042f9bdc3b388d04e36d56ba
 Content-Type: text/plain; charset=UTF-8
 
 I think that exn structs are generative (which is a probably a small
 problem) but exception records have continuation mark sets in them, which
 is a bit of a bigger problem if I understand correctly. In the short term
 while you wait for some work in the runtime system, you can do some manual
 marshalling the results by calling the error-display-handler (in the
 exn-raising place) and then wrapping the result in a struct that indicates
 if the string is a rendered exception or a real result.
 
 hth,
 Robby
 
 
 On Thu, Aug 8, 2013 at 12:28 AM, <eric.n.dobson@gmail.com> wrote:
 
 > A new problem report is waiting at
 >   http://bugs.racket-lang.org/query/?cmd=view&pr=13958
 >
 > Reported by Eric Dobson for release: 5.3.4.11
 >
 > *** Description:
 > I want to be able to design my program so that at some point I can decide
 > that parts of it run in different places.
 >
 > Example: I have two module A and B. B provides a function foo. I want to
 > make a version B/places that also provides a function foo (so as to be a
 > dropin replacement) which sends the values over to another place, does the
 > computation and sends it back. Even if the inputs and outputs are standard
 > values, exceptions cannot make it across the boundary. This means that I
 > cannot provide the same functionality even for simple functions that
 > sometimes raise exceptions.
 >
 > *** How to repeat:
 >
 >
 > *** Environment:
 > MacIntel / Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_2)
 > AppleWebKit/537.28 (KHTML, like Gecko) Chrome/26.0.1397.2 Safari/537.28
 >
 >
 
 --f46d042f9bdc3b388d04e36d56ba
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 <div dir=3D"ltr">I think that exn structs are generative (which is a probab=
 ly a small problem) but exception records have continuation mark sets in th=
 em, which is a bit of a bigger problem if I understand correctly. In the sh=
 ort term while you wait for some work in the runtime system, you can do som=
 e manual marshalling the results by calling the error-display-handler (in t=
 he exn-raising place) and then wrapping the result in a struct that indicat=
 es if the string is a rendered exception or a real result.<div>
 <br></div><div>hth,</div><div>Robby</div></div><div class=3D"gmail_extra"><=
 br><br><div class=3D"gmail_quote">On Thu, Aug 8, 2013 at 12:28 AM,  <span d=
 ir=3D"ltr">&lt;<a href=3D"mailto:eric.n.dobson@gmail.com" target=3D"_blank"=
 >eric.n.dobson@gmail.com</a>&gt;</span> wrote:<br>
 <blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1p=
 x #ccc solid;padding-left:1ex">A new problem report is waiting at<br>
 =C2=A0 <a href=3D"http://bugs.racket-lang.org/query/?cmd=3Dview&amp;pr=3D13=
 958" target=3D"_blank">http://bugs.racket-lang.org/query/?cmd=3Dview&amp;pr=
 =3D13958</a><br>
 <br>
 Reported by Eric Dobson for release: 5.3.4.11<br>
 <br>
 *** Description:<br>
 I want to be able to design my program so that at some point I can decide t=
 hat parts of it run in different places.<br>
 <br>
 Example: I have two module A and B. B provides a function foo. I want to ma=
 ke a version B/places that also provides a function foo (so as to be a drop=
 in replacement) which sends the values over to another place, does the comp=
 utation and sends it back. Even if the inputs and outputs are standard valu=
 es, exceptions cannot make it across the boundary. This means that I cannot=
  provide the same functionality even for simple functions that sometimes ra=
 ise exceptions.<br>
 
 <br>
 *** How to repeat:<br>
 <br>
 <br>
 *** Environment:<br>
 MacIntel / Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_2) AppleWebKit/537.2=
 8 (KHTML, like Gecko) Chrome/26.0.1397.2 Safari/537.28<br>
 <br>
 </blockquote></div><br></div>
 
 --f46d042f9bdc3b388d04e36d56ba--

State changed from "open" to "closed" by samth at Mon, 21 Oct 2013 10:15:16 -0400
Reason>>> Moving continuation mark sets between runtimes is hard.

