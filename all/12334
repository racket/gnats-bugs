From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Mon Oct 31 12:26:22 2011
Received: from mail-qy0-f179.google.com (mail-qy0-f179.google.com [209.85.216.179])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id p9VGQJxe009902
	for <bugs@bugs.plt-scheme.org>; Mon, 31 Oct 2011 12:26:20 -0400
Message-Id: <201110311626.p9VGQE7r009795@champlain.ccs.neu.edu>
Date: Mon, 31 Oct 2011 12:26:14 -0400
From: neil.toronto@gmail.com
To: bugs@racket-lang.org
Subject: Can't have two 'contract-out' in the same provide

>Number:         12334
>Category:       all
>Synopsis:       Can't have two 'contract-out' in the same provide
>Class:          sw-bug
>Responsible:    samth
>Severity:       non-critical
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Mon Oct 31 12:28:01 -0400 2011
>Closed-Date:    Sun Nov 20 14:32:09 -0500 2011
>Last-Modified:  Mon Feb 18 23:28:19 -0500 2013
>Originator:     Neil Toronto
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.2.0.1--2011-10-29(8000e8e/g)
>Environment:
unix "Linux schroder 2.6.38-12-generic #51-Ubuntu SMP Wed Sep 28 14:27:32 UTC 2011 x86_64 x86_64 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 402180320
Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()


Collections:
("/home/neil/.racket/5.2.0.1/collects"
 (non-existent-path))
("/home/neil/plt/collects"
 ("wxme" "texpict" "compiler" "typed" "games" "algol60" "browser" "file" "readline" "dynext" "scribblings" "mzcom" "trace" "profile" "data" "sirmail" "parser-tools" "tex2page" "scriblib" "swindle" "schemeunit" "r6rs" "xrepl" "mzlib" "handin-client" "repo-time-stamp" "mysterx" "mrlib" "scheme" "combinator-parser" "html" "test-engine" "version" ".gitignore" "make" "ffi" "mzscheme" "picturing-programs" "hierlist" "teachpack" "at-exp" "lazy" "scribble" "openssl" "defaults" "racket" "handin-server" "2htdp" "drscheme" "help" "eopl" "racklog" "drracket" "icons" "db" "errortrace" "preprocessor" "rackunit" "rnrs" "string-constants" "meta" "slatex" "graphics" "redex" "reader" "plai" "honu" "config" "stepper" "frtime" "unstable" "r5rs" "planet" "tests" "s-exp" "embedded-gui" "info-domain" "guibuilder" "syntax" "launcher" "typed-scheme" "syntax-color" "srfi" "test-box-recovery" "xml" "plot" "datalog" "sgl" "htdp" "setup" "lang" "raco" "gui-debugger" "framework" "web-server" "deinprogram!
 m" "slideshow" "macro-debugger" "typed-racket" "net" "mred"))

Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #f #t))
>Description:
See steps to reproduce.
>How-To-Repeat:
#lang racket

(define (a x) x)
(define (b x) x)

(provide (contract-out [a (any/c . -> . any/c)])
         (contract-out [b (any/c . -> . any/c)]))

I get:

module: duplicate definition for identifier in: pos-module-source
>Fix:
>Audit-Trail:
From: Robby Findler <robby@eecs.northwestern.edu>
To: "neil.toronto@gmail.com" <neil.toronto@gmail.com>,
        "bugs@racket-lang.org" <bugs@racket-lang.org>
Cc: "nobody@racket-lang.org" <nobody@racket-lang.org>,
        "bug-notification@racket-lang.org" <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/12334: Can't have two 'contract-out' in the same provide
Date: Mon, 31 Oct 2011 17:08:39 -0500

 --001517447fae2a7f8304b09f7b27
 Content-Type: text/plain; charset=UTF-8
 
 On Monday, October 31, 2011, wrote:
 
 > A new problem report is waiting at
 >  http://bugs.racket-lang.org/query/?cmd=view&pr=12334
 >
 > *** How to repeat:
 > #lang racket
 >
 > (define (a x) x)
 > (define (b x) x)
 >
 > (provide (contract-out [a (any/c . -> . any/c)])
 >         (contract-out [b (any/c . -> . any/c)]))
 >
 > I get:
 >
 > module: duplicate definition for identifier in: pos-module-source
 >
 >
 When I run this program, I get no errors. I tried with and without
 errortrace, with and without .zo files and couldn't get it to fail.
 
 Can you say more about precisely how you get it to fail?
 
 Thanks,
 Robby
 
 --001517447fae2a7f8304b09f7b27
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 <br><br>On Monday, October 31, 2011,   wrote:<br><blockquote class=3D"gmail=
 _quote" style=3D"margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:=
 1ex">A new problem report is waiting at<br>
  =C2=A0<a href=3D"http://bugs.racket-lang.org/query/?cmd=3Dview&amp;pr=3D12=
 334" target=3D"_blank">http://bugs.racket-lang.org/query/?cmd=3Dview&amp;pr=
 =3D12334</a><br><br>
 *** How to repeat:<br>
 #lang racket<br>
 <br>
 (define (a x) x)<br>
 (define (b x) x)<br>
 <br>
 (provide (contract-out [a (any/c . -&gt; . any/c)])<br>
  =C2=A0 =C2=A0 =C2=A0 =C2=A0 (contract-out [b (any/c . -&gt; . any/c)]))<br=
 >
 <br>
 I get:<br>
 <br>
 module: duplicate definition for identifier in: pos-module-source<br><br></=
 blockquote><div><br></div><div>When I run this program, I get no errors. I =
 tried with and without errortrace, with and without .zo files and couldn&#3=
 9;t get it to fail.</div>
 <div><br></div><div>Can you say more about precisely how you get it to fail=
 ?</div><div><br></div><div>Thanks,<br>Robby</div><div>=C2=A0</div>
 
 --001517447fae2a7f8304b09f7b27--
From: Neil Toronto <neil.toronto@gmail.com>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: "bugs@racket-lang.org" <bugs@racket-lang.org>,
        "nobody@racket-lang.org" <nobody@racket-lang.org>,
        "bug-notification@racket-lang.org" <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/12334: Can't have two 'contract-out' in the
 same provide
Date: Tue, 01 Nov 2011 12:05:20 -0600

 On 10/31/2011 04:08 PM, Robby Findler wrote:
 >
 >
 > On Monday, October 31, 2011, wrote:
 >
 >     A new problem report is waiting at
 >     http://bugs.racket-lang.org/query/?cmd=view&pr=12334
 >     <http://bugs.racket-lang.org/query/?cmd=view&pr=12334>
 >
 >     *** How to repeat:
 >     #lang racket
 >
 >     (define (a x) x)
 >     (define (b x) x)
 >
 >     (provide (contract-out [a (any/c . -> . any/c)])
 >              (contract-out [b (any/c . -> . any/c)]))
 >
 >     I get:
 >
 >     module: duplicate definition for identifier in: pos-module-source
 >
 >
 > When I run this program, I get no errors. I tried with and without
 > errortrace, with and without .zo files and couldn't get it to fail.
 >
 > Can you say more about precisely how you get it to fail?
 
 Using a slightly older version of master, apparently. After pull/rebase 
 to my topic branch, I can't get an error, either. I suspect it has 
 something to do with the contract-out struct fix lifting contract-out 
 provides to the end of the module.
 
 I'd close this. Sorry about the noise.
 
 Neil T
From: Robby Findler <robby@eecs.northwestern.edu>
To: Neil Toronto <neil.toronto@gmail.com>
Cc: Robby Findler <robby@eecs.northwestern.edu>,
        "bugs@racket-lang.org" <bugs@racket-lang.org>,
        "nobody@racket-lang.org" <nobody@racket-lang.org>,
        "bug-notification@racket-lang.org" <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/12334: Can't have two 'contract-out' in the same provide
Date: Tue, 1 Nov 2011 13:10:26 -0500

 --0015174489fc152d2d04b0b0454f
 Content-Type: text/plain; charset=UTF-8
 
 Thanks.
 
 On Tuesday, November 1, 2011, Neil Toronto <neil.toronto@gmail.com> wrote:
 > On 10/31/2011 04:08 PM, Robby Findler wrote:
 >>
 >>
 >> On Monday, October 31, 2011, wrote:
 >>
 >>    A new problem report is waiting at
 >>    http://bugs.racket-lang.org/query/?cmd=view&pr=12334
 >>    <http://bugs.racket-lang.org/query/?cmd=view&pr=12334>
 >>
 >>    *** How to repeat:
 >>    #lang racket
 >>
 >>    (define (a x) x)
 >>    (define (b x) x)
 >>
 >>    (provide (contract-out [a (any/c . -> . any/c)])
 >>             (contract-out [b (any/c . -> . any/c)]))
 >>
 >>    I get:
 >>
 >>    module: duplicate definition for identifier in: pos-module-source
 >>
 >>
 >> When I run this program, I get no errors. I tried with and without
 >> errortrace, with and without .zo files and couldn't get it to fail.
 >>
 >> Can you say more about precisely how you get it to fail?
 >
 > Using a slightly older version of master, apparently. After pull/rebase
 to my topic branch, I can't get an error, either. I suspect it has
 something to do with the contract-out struct fix lifting contract-out
 provides to the end of the module.
 >
 > I'd close this. Sorry about the noise.
 >
 > Neil T
 >
 
 --0015174489fc152d2d04b0b0454f
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 Thanks. <br><br>On Tuesday, November 1, 2011, Neil Toronto &lt;<a href=3D"m=
 ailto:neil.toronto@gmail.com">neil.toronto@gmail.com</a>&gt; wrote:<br>&gt;=
  On 10/31/2011 04:08 PM, Robby Findler wrote:<br>&gt;&gt;<br>&gt;&gt;<br>&g=
 t;&gt; On Monday, October 31, 2011, wrote:<br>
 &gt;&gt;<br>&gt;&gt; =C2=A0 =C2=A0A new problem report is waiting at<br>&gt=
 ;&gt; =C2=A0 =C2=A0<a href=3D"http://bugs.racket-lang.org/query/?cmd=3Dview=
 &amp;pr=3D12334">http://bugs.racket-lang.org/query/?cmd=3Dview&amp;pr=3D123=
 34</a><br>&gt;&gt; =C2=A0 =C2=A0&lt;<a href=3D"http://bugs.racket-lang.org/=
 query/?cmd=3Dview&amp;pr=3D12334">http://bugs.racket-lang.org/query/?cmd=3D=
 view&amp;pr=3D12334</a>&gt;<br>
 &gt;&gt;<br>&gt;&gt; =C2=A0 =C2=A0*** How to repeat:<br>&gt;&gt; =C2=A0 =C2=
 =A0#lang racket<br>&gt;&gt;<br>&gt;&gt; =C2=A0 =C2=A0(define (a x) x)<br>&g=
 t;&gt; =C2=A0 =C2=A0(define (b x) x)<br>&gt;&gt;<br>&gt;&gt; =C2=A0 =C2=A0(=
 provide (contract-out [a (any/c . -&gt; . any/c)])<br>
 &gt;&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 (contract-out [b (any/c =
 . -&gt; . any/c)]))<br>&gt;&gt;<br>&gt;&gt; =C2=A0 =C2=A0I get:<br>&gt;&gt;=
 <br>&gt;&gt; =C2=A0 =C2=A0module: duplicate definition for identifier in: p=
 os-module-source<br>&gt;&gt;<br>&gt;&gt;<br>&gt;&gt; When I run this progra=
 m, I get no errors. I tried with and without<br>
 &gt;&gt; errortrace, with and without .zo files and couldn&#39;t get it to =
 fail.<br>&gt;&gt;<br>&gt;&gt; Can you say more about precisely how you get =
 it to fail?<br>&gt;<br>&gt; Using a slightly older version of master, appar=
 ently. After pull/rebase to my topic branch, I can&#39;t get an error, eith=
 er. I suspect it has something to do with the contract-out struct fix lifti=
 ng contract-out provides to the end of the module.<br>
 &gt;<br>&gt; I&#39;d close this. Sorry about the noise.<br>&gt;<br>&gt; Nei=
 l T<br>&gt;
 
 --0015174489fc152d2d04b0b0454f--

State changed from "open" to "closed" by samth at Sun, 20 Nov 2011 14:32:09 -0500
Reason>>> fixed/not-a-bug


Responsible changed from "nobody" to "samth" by eli at Mon, 18 Feb 2013 23:28:19 -0500
Reason>>> samth closed

