From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Sat Jun 14 18:23:01 2014
Received: from mail-oa0-f49.google.com (mail-oa0-f49.google.com [209.85.219.49])
	by winooski.ccs.neu.edu (8.14.7/8.14.7) with ESMTP id s5EMMxwt006676
	for <bugs@bugs.plt-scheme.org>; Sat, 14 Jun 2014 18:23:00 -0400
Message-Id: <201406142222.s5EMMvmj006666@winooski.ccs.neu.edu>
Date: Sat, 14 Jun 2014 18:22:57 -0400
From: eric.n.dobson@gmail.com
To: bugs@racket-lang.org
Subject: TR has inconsistent view of nested poly dots.

>Number:         14576
>Category:       all
>Synopsis:       TR has inconsistent view of nested poly dots.
>Class:          sw-bug
>Responsible:    endobson
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Sat Jun 14 18:24:01 -0400 2014
>Closed-Date:    Tue Jun 17 02:10:08 -0400 2014
>Last-Modified:  Tue Jun 17 02:10:08 -0400 2014
>Originator:     Eric Dobson
>Organization:
plt
>Submitter-Id:   unknown
>Release:        HEAD
>Environment:
MacIntel / Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/33.0.1750.27 Safari/537.36
>Description:
I expect inference to try to infer the actual type instead of a different one.

The issue arises in a type like (All (b ...) ((List (b ... b -> b) ... b) -> Void)). If you instantiate this type with two types you get something like: (-> (List (-> String Symbol String) (-> String Symbol Symbol)) Void). But inference tries to infer something like (-> (List (-> String String String) (-> Symbol Symbol Symbol)) Void).

The issue is does the inner most reference refer to inner or outer binding.
>How-To-Repeat:
#lang racket/load 

(require typed/racket)


(module tr typed/racket

  (: foo (All (b ...) ((List (b ... b -> b) ... b) -> Void)))
  (define (foo x)
    (void))

  ;(foo (list (位: ([x : String] [y : Symbol]) x) (位 ([x : String] [y : Symbol]) y)))
  (foo (list (位: ([x : String] [y : String]) x) (位 ([x : String] [y : String]) y)))

  (provide (all-defined-out)))

(require 'tr)
(:print-type foo)
(newline)
(:print-type (inst foo String Symbol))
(newline)
>Fix:
>Audit-Trail:
Responsible changed from "nobody" to "endobson" by endobson@racket-lang.org at Tue, 17 Jun 2014 02:10:08 -0400
Reason>>> A commit by endobson@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/fecaf5127d
State changed from "open" to "closed" by endobson@racket-lang.org at Tue, 17 Jun 2014 02:10:08 -0400
Reason>>> A commit by endobson@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/fecaf5127d
  | Correctly instantiate poly dots during inference.
  | 
  | This removes the need for the cache of type variables for instantiating
  | dotted variables, because we instantiate the uses at once.
  | 
  | Closes PR 14576.
  | Closes PR 14577.
  | Closes PR 14579.
  | Closes PR 14580.

