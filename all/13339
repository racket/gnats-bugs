From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Mon Dec  3 18:01:41 2012
Received: from mail-ia0-f172.google.com (mail-ia0-f172.google.com [209.85.210.172])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id qB3N1dXR015066
	for <bugs@bugs.plt-scheme.org>; Mon, 3 Dec 2012 18:01:39 -0500
Message-Id: <201212032301.qB3N1YFE015060@champlain.ccs.neu.edu>
Date: Mon, 3 Dec 2012 18:01:34 -0500
From: neil.toronto@gmail.com
To: bugs@racket-lang.org
Subject: TR's optimizer causes 0.0 to be negated wrongly

>Number:         13339
>Category:       all
>Synopsis:       TR's optimizer causes 0.0 to be negated wrongly
>Class:          sw-bug
>Responsible:    stamourv
>Severity:       non-critical
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Mon Dec 03 18:04:01 -0500 2012
>Closed-Date:    Mon Dec 03 20:27:49 -0500 2012
>Last-Modified:  Tue Dec 04 13:49:12 -0500 2012
>Originator:     Neil Toronto
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.3.1.9--2012-12-02(8f17913d/d)
>Environment:
unix "Linux schroder 2.6.38-15-generic #66-Ubuntu SMP Tue Aug 14 17:24:44 UTC 2012 x86_64 x86_64 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 358889352
Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()


Collections:
("/home/neil/.racket/5.3.1.9/collects"
 (non-existent-path))
("/home/neil/plt/collects"
 ("wxme" "texpict" "compiler" "typed" "games" "algol60" "browser" "file" "readline" "dynext" "scribblings" "mzcom" "compatibility" "trace" "profile" "data" "sirmail" "json" "parser-tools" "math" "tex2page" "scriblib" "swindle" "schemeunit" "r6rs" "xrepl" "mzlib" "handin-client" "repo-time-stamp" "mysterx" "mrlib" "scheme" "combinator-parser" "html" "test-engine" "planet2" "version" ".gitignore" "make" "ffi" "mzscheme" "picturing-programs" "hierlist" "teachpack" "at-exp" "lazy" "scribble" "openssl" "defaults" "racket" "handin-server" "2htdp" "drscheme" "help" "eopl" "racklog" "drracket" "icons" "db" "errortrace" "preprocessor" "rackunit" "rnrs" "string-constants" "meta" "slatex" "graphics" "redex" "reader" "plai" "honu" "config" "stepper" "frtime" "unstable" "r5rs" "planet" "tests" "s-exp" "embedded-gui" "info-domain" "syntax" "launcher" "typed-scheme" "syntax-color" "srfi" "test-box-recovery" "xml" "images" "future-visualizer" "plot" "datalog" "sgl" "htdp" "setup" "lang" "ra!
 co" "gui-debugger" "framework" "web-server" "deinprogramm" "slideshow" "macro-debugger" "typed-racket" "net" "mred"))

Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((main) (test))))
>Description:
The last test case in the reproduction steps fails when the optimizer is enabled. The optimizer transforms (- x) when x : Flonum into (unsafe-fl- 0.0 x). It should transform (- x) into (unsafe-fl* -1.0 x).
>How-To-Repeat:
#lang typed/racket

(require racket/flonum
         typed/rackunit)

(: neg (Real -> Real))
(define (neg x) (- x))

(: flneg (Flonum -> Flonum))
(define (flneg x) (fl* -1.0 x))

(check-eqv? (neg +inf.0) -inf.0)
(check-eqv? (neg -inf.0) +inf.0)
(check-eqv? (neg +nan.0) +nan.0)
(check-eqv? (neg -0.0) +0.0)
(check-eqv? (neg +0.0) -0.0)

(check-eqv? (flneg +inf.0) (neg +inf.0))
(check-eqv? (flneg -inf.0) (neg -inf.0))
(check-eqv? (flneg +nan.0) (neg +nan.0))
(check-eqv? (flneg -0.0)   (neg -0.0))
(check-eqv? (flneg +0.0)   (neg +0.0))

(check-eqv? (- +inf.0) (neg +inf.0))
(check-eqv? (- -inf.0) (neg -inf.0))
(check-eqv? (- +nan.0) (neg +nan.0))
(check-eqv? (- -0.0)   (neg -0.0))
(check-eqv? (- +0.0)   (neg +0.0))
>Fix:
>Audit-Trail:
Responsible changed from "nobody" to "stamourv" by stamourv@racket-lang.org at Mon, 03 Dec 2012 20:27:49 -0500
Reason>>> A commit by stamourv@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/9f9092b762
State changed from "open" to "closed" by stamourv@racket-lang.org at Mon, 03 Dec 2012 20:27:49 -0500
Reason>>> A commit by stamourv@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/9f9092b762
From: Robby Findler <robby@eecs.northwestern.edu>
To: Neil Toronto <neil.toronto@gmail.com>, bugs <bugs@racket-lang.org>
Cc: nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/13339: TR's optimizer causes 0.0 to be negated wrongly
Date: Mon, 3 Dec 2012 19:47:09 -0600

 I'm surprised random testing didn't show up this one. Is something wrong there?
 
 Robby
 
 On Mon, Dec 3, 2012 at 5:04 PM,  <neil.toronto@gmail.com> wrote:
 > A new problem report is waiting at
 >   http://bugs.racket-lang.org/query/?cmd=view&pr=13339
 >
 > Reported by Neil Toronto for release: 5.3.1.9--2012-12-02(8f17913d/d)
 >
 > *** Description:
 > The last test case in the reproduction steps fails when the optimizer is enabled. The optimizer transforms (- x) when x : Flonum into (unsafe-fl- 0.0 x). It should transform (- x) into (unsafe-fl* -1.0 x).
 >
 > *** How to repeat:
 > #lang typed/racket
 >
 > (require racket/flonum
 >          typed/rackunit)
 >
 > (: neg (Real -> Real))
 > (define (neg x) (- x))
 >
 > (: flneg (Flonum -> Flonum))
 > (define (flneg x) (fl* -1.0 x))
 >
 > (check-eqv? (neg +inf.0) -inf.0)
 > (check-eqv? (neg -inf.0) +inf.0)
 > (check-eqv? (neg +nan.0) +nan.0)
 > (check-eqv? (neg -0.0) +0.0)
 > (check-eqv? (neg +0.0) -0.0)
 >
 > (check-eqv? (flneg +inf.0) (neg +inf.0))
 > (check-eqv? (flneg -inf.0) (neg -inf.0))
 > (check-eqv? (flneg +nan.0) (neg +nan.0))
 > (check-eqv? (flneg -0.0)   (neg -0.0))
 > (check-eqv? (flneg +0.0)   (neg +0.0))
 >
 > (check-eqv? (- +inf.0) (neg +inf.0))
 > (check-eqv? (- -inf.0) (neg -inf.0))
 > (check-eqv? (- +nan.0) (neg +nan.0))
 > (check-eqv? (- -0.0)   (neg -0.0))
 > (check-eqv? (- +0.0)   (neg +0.0))
 >
 > *** Environment:
 > unix "Linux schroder 2.6.38-15-generic #66-Ubuntu SMP Tue Aug 14 17:24:44 UTC 2012 x86_64 x86_64 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
 > Human Language: english
 > (current-memory-use) 358889352
 > Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()
 >
 >
 > Collections:
 > ("/home/neil/.racket/5.3.1.9/collects"
 >  (non-existent-path))
 > ("/home/neil/plt/collects"
 >  ("wxme" "texpict" "compiler" "typed" "games" "algol60" "browser" "file" "readline" "dynext" "scribblings" "mzcom" "compatibility" "trace" "profile" "data" "sirmail" "json" "parser-tools" "math" "tex2page" "scriblib" "swindle" "schemeunit" "r6rs" "xrepl" "mzlib" "handin-client" "repo-time-stamp" "mysterx" "mrlib" "scheme" "combinator-parser" "html" "test-engine" "planet2" "version" ".gitignore" "make" "ffi" "mzscheme" "picturing-programs" "hierlist" "teachpack" "at-exp" "lazy" "scribble" "openssl" "defaults" "racket" "handin-server" "2htdp" "drscheme" "help" "eopl" "racklog" "drracket" "icons" "db" "errortrace" "preprocessor" "rackunit" "rnrs" "string-constants" "meta" "slatex" "graphics" "redex" "reader" "plai" "honu" "config" "stepper" "frtime" "unstable" "r5rs" "planet" "tests" "s-exp" "embedded-gui" "info-domain" "syntax" "launcher" "typed-scheme" "syntax-color" "srfi" "test-box-recovery" "xml" "images" "future-visualizer" "plot" "datalog" "sgl" "htdp" "setup" "lang" "ra!
 >  co" "gui-debugger" "framework" "web-server" "deinprogramm" "slideshow" "macro-debugger" "typed-racket" "net" "mred"))
 >
 > Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((main) (test))))
 >
 
From: Neil Toronto <neil.toronto@gmail.com>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: bugs <bugs@racket-lang.org>, nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/13339: TR's optimizer causes 0.0 to be negated
 wrongly
Date: Mon, 03 Dec 2012 19:13:17 -0700

 It looks like random testing only tests type preservation. The `-' 
 function doesn't have the case (Flonum-Positive-Zero -> 
 Flonum-Negative-Zero), so it couldn't get caught.
 
 The obvious solution, of course, is to test the optimizer using the same 
 grammar used to generates terms to test preservation. Something like 
 that would have caught this error months ago.
 
 Neil âŠ¥
 
 On 12/03/2012 06:47 PM, Robby Findler wrote:
 > I'm surprised random testing didn't show up this one. Is something wrong there?
 >
 > Robby
 >
 > On Mon, Dec 3, 2012 at 5:04 PM,  <neil.toronto@gmail.com> wrote:
 >> A new problem report is waiting at
 >>    http://bugs.racket-lang.org/query/?cmd=view&pr=13339
 >>
 >> Reported by Neil Toronto for release: 5.3.1.9--2012-12-02(8f17913d/d)
 >>
 >> *** Description:
 >> The last test case in the reproduction steps fails when the optimizer is enabled. The optimizer transforms (- x) when x : Flonum into (unsafe-fl- 0.0 x). It should transform (- x) into (unsafe-fl* -1.0 x).
 >>
 >> *** How to repeat:
 >> #lang typed/racket
 >>
 >> (require racket/flonum
 >>           typed/rackunit)
 >>
 >> (: neg (Real -> Real))
 >> (define (neg x) (- x))
 >>
 >> (: flneg (Flonum -> Flonum))
 >> (define (flneg x) (fl* -1.0 x))
 >>
 >> (check-eqv? (neg +inf.0) -inf.0)
 >> (check-eqv? (neg -inf.0) +inf.0)
 >> (check-eqv? (neg +nan.0) +nan.0)
 >> (check-eqv? (neg -0.0) +0.0)
 >> (check-eqv? (neg +0.0) -0.0)
 >>
 >> (check-eqv? (flneg +inf.0) (neg +inf.0))
 >> (check-eqv? (flneg -inf.0) (neg -inf.0))
 >> (check-eqv? (flneg +nan.0) (neg +nan.0))
 >> (check-eqv? (flneg -0.0)   (neg -0.0))
 >> (check-eqv? (flneg +0.0)   (neg +0.0))
 >>
 >> (check-eqv? (- +inf.0) (neg +inf.0))
 >> (check-eqv? (- -inf.0) (neg -inf.0))
 >> (check-eqv? (- +nan.0) (neg +nan.0))
 >> (check-eqv? (- -0.0)   (neg -0.0))
 >> (check-eqv? (- +0.0)   (neg +0.0))
 >>
 >> *** Environment:
 >> unix "Linux schroder 2.6.38-15-generic #66-Ubuntu SMP Tue Aug 14 17:24:44 UTC 2012 x86_64 x86_64 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
 >> Human Language: english
 >> (current-memory-use) 358889352
 >> Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()
 >>
 >>
 >> Collections:
 >> ("/home/neil/.racket/5.3.1.9/collects"
 >>   (non-existent-path))
 >> ("/home/neil/plt/collects"
 >>   ("wxme" "texpict" "compiler" "typed" "games" "algol60" "browser" "file" "readline" "dynext" "scribblings" "mzcom" "compatibility" "trace" "profile" "data" "sirmail" "json" "parser-tools" "math" "tex2page" "scriblib" "swindle" "schemeunit" "r6rs" "xrepl" "mzlib" "handin-client" "repo-time-stamp" "mysterx" "mrlib" "scheme" "combinator-parser" "html" "test-engine" "planet2" "version" ".gitignore" "make" "ffi" "mzscheme" "picturing-programs" "hierlist" "teachpack" "at-exp" "lazy" "scribble" "openssl" "defaults" "racket" "handin-server" "2htdp" "drscheme" "help" "eopl" "racklog" "drracket" "icons" "db" "errortrace" "preprocessor" "rackunit" "rnrs" "string-constants" "meta" "slatex" "graphics" "redex" "reader" "plai" "honu" "config" "stepper" "frtime" "unstable" "r5rs" "planet" "tests" "s-exp" "embedded-gui" "info-domain" "syntax" "launcher" "typed-scheme" "syntax-color" "srfi" "test-box-recovery" "xml" "images" "future-visualizer" "plot" "datalog" "sgl" "htdp" "setup" "lang" "ra!
 >>   co" "gui-debugger" "framework" "web-server" "deinprogramm" "slideshow" "macro-debugger" "typed-racket" "net" "mred"))
 >>
 >> Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((main) (test))))
 >>
 
From: Vincent St-Amour <stamourv@ccs.neu.edu>
To: Neil Toronto <neil.toronto@gmail.com>
Cc: Robby Findler <robby@eecs.northwestern.edu>, bugs <bugs@racket-lang.org>,
        nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/13339: TR's optimizer causes 0.0 to be negated wrongly
Date: Mon, 03 Dec 2012 21:59:41 -0500

 At Mon, 03 Dec 2012 19:13:17 -0700,
 Neil Toronto wrote:
 > The obvious solution, of course, is to test the optimizer using the same 
 > grammar used to generates terms to test preservation. Something like 
 > that would have caught this error months ago.
 
 I thought I had already implemented that, but I guess not. Pushed now.
 
 It found counterexamples, which I'll fix tomorrow.
 
 Vincent
From: Robby Findler <robby@eecs.northwestern.edu>
To: Vincent St-Amour <stamourv@ccs.neu.edu>
Cc: Neil Toronto <neil.toronto@gmail.com>, bugs <bugs@racket-lang.org>,
        nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/13339: TR's optimizer causes 0.0 to be negated wrongly
Date: Mon, 3 Dec 2012 21:09:01 -0600

 Whoo hoo!
 
 On Dec 3, 2012, at 8:59 PM, Vincent St-Amour <stamourv@ccs.neu.edu> wrote:
 
 > At Mon, 03 Dec 2012 19:13:17 -0700,
 > Neil Toronto wrote:
 >> The obvious solution, of course, is to test the optimizer using the same 
 >> grammar used to generates terms to test preservation. Something like 
 >> that would have caught this error months ago.
 > 
 > I thought I had already implemented that, but I guess not. Pushed now.
 > 
 > It found counterexamples, which I'll fix tomorrow.
 > 
 > Vincent
From: Neil Toronto <neil.toronto@gmail.com>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: Vincent St-Amour <stamourv@ccs.neu.edu>, bugs <bugs@racket-lang.org>,
        nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/13339: TR's optimizer causes 0.0 to be negated
 wrongly
Date: Mon, 03 Dec 2012 20:39:32 -0700

 Beat me to it, Robby. That's awesome, Vincent. :D
 
 On 12/03/2012 08:09 PM, Robby Findler wrote:
 > Whoo hoo!
 >
 > On Dec 3, 2012, at 8:59 PM, Vincent St-Amour <stamourv@ccs.neu.edu> wrote:
 >
 >> At Mon, 03 Dec 2012 19:13:17 -0700,
 >> Neil Toronto wrote:
 >>> The obvious solution, of course, is to test the optimizer using the same
 >>> grammar used to generates terms to test preservation. Something like
 >>> that would have caught this error months ago.
 >>
 >> I thought I had already implemented that, but I guess not. Pushed now.
 >>
 >> It found counterexamples, which I'll fix tomorrow.
 >>
 >> Vincent
 

----------
A commit by soegaard@racket-lang.org was marked as relevant
  http://git.racket-lang.org/plt/commit/2940cabf32
