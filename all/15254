From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Sat Feb 27 09:21:42 2016
Received: from mail-ig0-f174.google.com (mail-ig0-f174.google.com [209.85.213.174])
	by winooski.ccs.neu.edu (8.14.7/8.14.7) with ESMTP id u1RELem0027992
	for <bugs@bugs.plt-scheme.org>; Sat, 27 Feb 2016 09:21:40 -0500
Message-Id: <201602251232.u1PCWvhR012038@winooski.ccs.neu.edu>
Date: Thu, 25 Feb 2016 07:32:57 -0500
From: tfb@tfeb.org
To: bugs@racket-lang.org
Subject: Bug in macroexpansion of class

>Number:         15254
>Category:       all
>Synopsis:       Bug in macroexpansion of class
>Class:          sw-bug
>Responsible:    nobody
>Severity:       non-critical
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Sat Feb 27 09:24:01 -0500 2016
>Originator:     Tim Bradshaw
>Organization:
plt
>Submitter-Id:   unknown
>Release:        6.4
>Environment:
macosx "Darwin kingston.local 13.4.0 Darwin Kernel Version 13.4.0: Wed Mar 18 16:20:14 PDT 2015; root:xnu-2422.115.14~1/RELEASE_X86_64 x86_64" (x86_64-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 366558128
raco pkg (show):
Installation-wide:
 Package            Checksum     Source
 main-distribution  2820602f...  catalog main-distribution
 racket-lib         f678d8f6...  catalog racket-lib
 [188 auto-installed packages not shown]
User-specific for installation "6.4":
 Package  Checksum     Source
 frog                  link /Users/tfb/src/frog
 sxml     c873de9d...  catalog sxml github://github.com/jbclements/sxml/master
 [6 auto-installed packages not shown]



Collections:
("/Users/tfb/Library/Racket/6.4/collects"
 (non-existent-path))
("/Local/Ephemeral/tfb/packages/i386/Racket v6.4/collects"
 ("acks" "compiler" "data" "db" "dynext" "ffi" "file" "info" "info-domain" "json" "launcher" "net" "openssl" "pkg" "planet" "racket" "raco" "reader" "realm" "s-exp" "setup" "syntax" "unstable" "version" "xml"))

Recent Internal Errors: 
Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((test) (main)) #t))
>Description:
Some class expressions containing named let (and perhaps other constructs which expand to letrec-values forms?) break.  See Steps to reproduce.  This might be my confusion, but it smells like a bug.
>How-To-Repeat:
(define foo%
  (class object%
    (init items)
    (super-new)

    (let loop ([things (map car items)]
               [i 0])
      (unless (null? things) (loop (rest things) (+ i 1))))))

This gives an error.  But the following, equivalent, expression does not:

    (define foo%
      (class object%
        (init items)
        (super-new)

        (let ([them (map car items)])
          (let loop ([things them]
                     [i 0])
            (unless (null? things) (loop (rest things) (+ i 1)))))))
>Fix:
