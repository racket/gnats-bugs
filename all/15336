From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Tue Aug  2 19:47:29 2016
Received: from mail-io0-f181.google.com (mail-io0-f181.google.com [209.85.223.181])
	by winooski.ccs.neu.edu (8.14.7/8.14.7) with ESMTP id u72NlRbD005054
	for <bugs@bugs.plt-scheme.org>; Tue, 2 Aug 2016 19:47:27 -0400
Message-Id: <201608022347.u72NlPW6005042@winooski.ccs.neu.edu>
Date: Tue, 2 Aug 2016 19:47:25 -0400
From: lucier@math.purdue.edu
To: bugs@racket-lang.org
Subject: Rational addition/subtraction is slower than need be

>Number:         15336
>Category:       all
>Synopsis:       Rational addition/subtraction is slower than need be
>Class:          change-request
>Responsible:    nobody
>Severity:       non-critical
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Tue Aug 02 19:48:01 -0400 2016
>Originator:     Brad Lucier
>Organization:
plt
>Submitter-Id:   unknown
>Release:        6.6
>Environment:
Linux x86_64 / Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:47.0) Gecko/20100101 Firefox/47.0
>Description:
With this code in mzscheme:

(define (p n)
  (do ((i 0 (+ i 1))
       (result 1/2 (+ 1/2 (/ result))))
      ((= i n) result)))


(define (q n)
  (do ((i 0 (+ i 1))
       (result 1 (+ 1 (/ result))))
      ((= i n) result)))

Racket 6.6 gives

> (define a (time (p 100000)))
cpu time: 340448 real time: 340251 gc time: 60
> (define b (time (q 100000)))
cpu time: 132 real time: 134 gc time: 0

while Gambit 4.8.5 on the same machine gives

> (define a (time (p 100000)))
(time (p 100000))
    4984 ms real time
    4984 ms cpu time (4976 user, 8 system)
    710 collections accounting for 186 ms real time (196 user, 0 system)
    143039856 bytes allocated
    4602 minor faults
    no major faults
> (define b (time (q 100000)))       
(time (q 100000))
    394 ms real time
    396 ms cpu time (396 user, 0 system)
    198 collections accounting for 35 ms real time (28 user, 0 system)
    136047272 bytes allocated
    791 minor faults
    no major faults

I suspect that Racket's underlying bignum implementation is faster, but that rational + and - aren't employing the algorithms in the first section of Chapter 4.5 of Knuth's Seminumerical Algorithms on rational arithmetic.
>How-To-Repeat:

>Fix:
