From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Thu May 15 03:36:59 2014
Received: from mail-ob0-f171.google.com (mail-ob0-f171.google.com [209.85.214.171])
	by winooski.ccs.neu.edu (8.14.7/8.14.7) with ESMTP id s4F7auVA019121
	for <bugs@bugs.plt-scheme.org>; Thu, 15 May 2014 03:36:57 -0400
Message-Id: <201405150736.s4F7aruh019114@winooski.ccs.neu.edu>
Date: Thu, 15 May 2014 03:36:53 -0400
From: x.winniewong.x@gmail.com
To: bugs@racket-lang.org
Subject: Simple function taking up more memory than possible

>Number:         14516
>Category:       all
>Synopsis:       Simple function taking up more memory than possible
>Class:          doc-bug
>Responsible:    nobody
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Thu May 15 03:40:01 -0400 2014
>Closed-Date:    Thu May 15 07:43:41 -0400 2014
>Last-Modified:  Thu May 15 13:32:01 -0400 2014
>Originator:     Winnie
>Organization:
plt
>Submitter-Id:   unknown
>Release:        6.0.1
>Environment:
macosx "Darwin Winnies-MacBook.local 11.4.2 Darwin Kernel Version 11.4.2: Thu Aug 23 16:26:45 PDT 2012; root:xnu-1699.32.7~1/RELEASE_I386 i386" (x86_64-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 1427336048
raco pkg (show):
Installation-wide:
 Package              Checksum                                    Source
 main-distribution    b5541888d9afdeea2addc1986e17b0ca3b8533d7    (catalog main-distribution)
 racket-lib           4e0ce39bb85789f0012f962eaf7027f0977b2b83    (catalog racket-lib)
 [177 auto-installed packages not shown]
User-specific for installation "6.0.1":
 [none]



Collections:
("/Users/djfwong/Library/Racket/6.0.1/collects"
 ("cpsc110-handin" "info-domain"))
("/Applications/Racket v6.0.1/collects"
 (".gitignore" "acks" "compiler" "data" "db" "dynext" "ffi" "file" "info" "info-domain" "json" "launcher" "net" "openssl" "pkg" "planet" "racket" "raco" "reader" "realm" "s-exp" "setup" "syntax" "unstable" "version" "xml"))

Recent Internal Errors: 
Computer Language: (("Teaching Languages" "How to Design Programs" "Beginning Student") (#(#t constructor repeating-decimal #f #t none) #f ()))
>Description:
;; String -> Boolean
;; Produce true if number is less than 5

(check-expect (stringlength "sad") true)
(check-expect (stringlength " ") true)
(check-expect (stringlength "excited") false)

(define (stringlength s)
  (< (stringlength s) 5))

Code should take up less than 128MB but DrRacket is showing that it is using 1203.86MB and it keeps increasing memory usage. No other programs are running. 
>How-To-Repeat:
>Fix:
>Audit-Trail:
State changed from "open" to "closed" by robby at Thu, 15 May 2014 07:43:41 -0400
Reason>>> not a bug

From: Robby Findler <robby@eecs.northwestern.edu>
To: x.winniewong.x@gmail.com, bugs <bugs@racket-lang.org>
Cc: nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/14516: Simple function taking up more memory
 than possible
Date: Thu, 15 May 2014 06:45:30 -0500

 Hi: this program is correctly taking up all memory available to it. It
 is a recursive function that allocates a little bit of memory on each
 call (and does may many iterations).
 
 Probably you meant this:
 
 (define (stringlength s)
   (< (string-length s) 5))
 
 hth,
 Robby
 
 
 On Thu, May 15, 2014 at 2:40 AM,  <x.winniewong.x@gmail.com> wrote:
 > A new problem report is waiting at
 >   http://bugs.racket-lang.org/query/?cmd=view&pr=14516
 >
 > Reported by Winnie for release: 6.0.1
 >
 > *** Description:
 > ;; String -> Boolean
 > ;; Produce true if number is less than 5
 >
 > (check-expect (stringlength "sad") true)
 > (check-expect (stringlength " ") true)
 > (check-expect (stringlength "excited") false)
 >
 > (define (stringlength s)
 >   (< (stringlength s) 5))
 >
 > Code should take up less than 128MB but DrRacket is showing that it is using 1203.86MB and it keeps increasing memory usage. No other programs are running.
 >
 > *** How to repeat:
 >
 >
 > *** Environment:
 > macosx "Darwin Winnies-MacBook.local 11.4.2 Darwin Kernel Version 11.4.2: Thu Aug 23 16:26:45 PDT 2012; root:xnu-1699.32.7~1/RELEASE_I386 i386" (x86_64-macosx/3m) (get-display-depth) = 32
 > Human Language: english
 > (current-memory-use) 1427336048
 > raco pkg (show):
 > Installation-wide:
 >  Package              Checksum                                    Source
 >  main-distribution    b5541888d9afdeea2addc1986e17b0ca3b8533d7    (catalog main-distribution)
 >  racket-lib           4e0ce39bb85789f0012f962eaf7027f0977b2b83    (catalog racket-lib)
 >  [177 auto-installed packages not shown]
 > User-specific for installation "6.0.1":
 >  [none]
 >
 >
 >
 > Collections:
 > ("/Users/djfwong/Library/Racket/6.0.1/collects"
 >  ("cpsc110-handin" "info-domain"))
 > ("/Applications/Racket v6.0.1/collects"
 >  (".gitignore" "acks" "compiler" "data" "db" "dynext" "ffi" "file" "info" "info-domain" "json" "launcher" "net" "openssl" "pkg" "planet" "racket" "raco" "reader" "realm" "s-exp" "setup" "syntax" "unstable" "version" "xml"))
 >
 > Recent Internal Errors:
 > Computer Language: (("Teaching Languages" "How to Design Programs" "Beginning Student") (#(#t constructor repeating-decimal #f #t none) #f ()))
 >
From: Danny Yoo <dyoo@hashcollision.org>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: x.winniewong.x@gmail.com, bugs <bugs@racket-lang.org>,
        nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/14516: Simple function taking up more memory
 than possible
Date: Thu, 15 May 2014 10:31:32 -0700

 On Thu, May 15, 2014 at 4:45 AM, Robby Findler
 <robby@eecs.northwestern.edu> wrote:
 > Hi: this program is correctly taking up all memory available to it. It
 > is a recursive function that allocates a little bit of memory on each
 > call (and does may many iterations).
 >
 > Probably you meant this:
 >
 > (define (stringlength s)
 >   (< (string-length s) 5))
 
 
 Hi Winnie,
 
 
 Just to add: looking at the contract you've written up:
 
 
     ;; String -> Boolean
     ;; Produce true if number is less than 5
 
 this is not informative enough.  Here's one reason why: what "number"
 is being talked about here?  You're dealing with String and Booleans
 in the contract.  There are no numbers around explicitly in this
 situation.  Something is missing.
 
 Another reason: why is "stringlength" a good name for what this
 function is designed to do?  Usually, these kind of functions have a
 "?" at the end of their name, and their name usually relates to their
 purpose.  I would argue that calling the function "stringlength" does
 not provide any information related to the purpose of the function.
 
 
 This may matter because, in my opinion, the coding problem you ran
 into is a consequence of slight mistakes in earlier steps in the
 Design Recipe.
