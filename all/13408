From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Thu Jan  3 13:27:38 2013
Received: from mail-oa0-f47.google.com (mail-oa0-f47.google.com [209.85.219.47])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id r03IRZP2008933
	for <bugs@bugs.plt-scheme.org>; Thu, 3 Jan 2013 13:27:35 -0500
Message-Id: <201301031827.r03IRWsI008926@champlain.ccs.neu.edu>
Date: Thu, 3 Jan 2013 13:27:32 -0500
From: olopierpa@gmail.com
To: bugs@racket-lang.org
Subject: Renaming variables.

>Number:         13408
>Category:       all
>Synopsis:       Renaming variables.
>Class:          sw-bug
>Responsible:    robby
>Severity:       non-critical
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Thu Jan 03 13:28:01 -0500 2013
>Closed-Date:    Wed Aug 21 12:03:28 -0400 2013
>Last-Modified:  Wed Aug 21 12:03:28 -0400 2013
>Originator:     Pierpaolo BERNARDI
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.3.1.12--2013-01-01(0a0fe1a/a)
>Environment:
windows "Windows NT 6.2 (Build 9200)" (win32\x86_64\3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 473849368
Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()


Collections:
("C:\\Users\\pierpa\\AppData\\Roaming\\Racket\\5.3.1.12\\collects"
 (non-existent-path))
("C:\\Program Files\\Racket-Full-5.3.1.12\\collects"
 ("2htdp" "algol60" "at-exp" "browser" "compatibility" "compiler" "config" "data" "datalog" "db" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "future-visualizer" "games" "graphics" "gui-debugger" "handin-client" "handin-server" "help" "hierlist" "honu" "htdp" "html" "icons" "images" "info-domain" "json" "lang" "launcher" "lazy" "macro-debugger" "make" "math" "meta" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "picturing-programs" "plai" "planet" "planet2" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "realm" "redex" "repo-time-stamp" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-engine" "tests" "texpict" "trace" "typed" "typed-racket" "typed-scheme" "unst!
 able" "version" "web-server" "wxme" "xml" "xrepl"))

Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((main) (test))))
>Description:
In DrRacket, right-click and ‘rename <var>’, does not work correctly in this case:

(define-syntax dec!
  (syntax-rules ()
    ((_ var q)
     (set! var (- var q)))
    ((_ var)
     (dec! var 1))))

If I change the name of the macro, the occurrence in the last line is not changed (even if the arrow is drawn correctly from the definition to the use, and ‘Jump to next bound occurrence’ correctly jumps from the definition to the occurrence in the last line.
>How-To-Repeat:
>Fix:
>Audit-Trail:
From: Robby Findler <robby@eecs.northwestern.edu>
To: Pierpaolo Bernardi <olopierpa@gmail.com>, bugs <bugs@racket-lang.org>
Cc: nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/13408: Renaming variables.
Date: Fri, 4 Jan 2013 08:47:55 -0600

 --e89a8ff1ce42a0fcc604d2779015
 Content-Type: text/plain; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 DrRacket doesn't follow the purple arrows when renaming variables. I'm not
 sure it should, actually, as those are not necessarily bound uses of the
 variable in question.
 
 I could have a separate renaming operation that would rename those or I
 could change DrRacket's behavior, I suppose.
 
 Other opinions anyone?
 
 Robby
 
 
 On Thu, Jan 3, 2013 at 12:28 PM, <olopierpa@gmail.com> wrote:
 
 > A new problem report is waiting at
 >   http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D13408
 >
 > Reported by Pierpaolo BERNARDI for release: 5.3.1.12--2013-01-01(0a0fe1a/=
 a)
 >
 > *** Description:
 > In DrRacket, right-click and =E2=80=98rename <var>=E2=80=99, does not wor=
 k correctly in
 > this case:
 >
 > (define-syntax dec!
 >   (syntax-rules ()
 >     ((_ var q)
 >      (set! var (- var q)))
 >     ((_ var)
 >      (dec! var 1))))
 >
 > If I change the name of the macro, the occurrence in the last line is not
 > changed (even if the arrow is drawn correctly from the definition to the
 > use, and =E2=80=98Jump to next bound occurrence=E2=80=99 correctly jumps =
 from the
 > definition to the occurrence in the last line.
 >
 > *** How to repeat:
 >
 >
 
 --e89a8ff1ce42a0fcc604d2779015
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 <div dir=3D"ltr">DrRacket doesn&#39;t follow the purple arrows when renamin=
 g variables. I&#39;m not sure it should, actually, as those are not necessa=
 rily bound uses of the variable in question.<div><br></div><div>I could hav=
 e a separate renaming operation that would rename those or I could change D=
 rRacket&#39;s behavior, I suppose.</div>
 <div><br></div><div>Other opinions anyone?</div><div><br></div><div>Robby</=
 div><div><div><div class=3D"gmail_extra"><br><br><div class=3D"gmail_quote"=
 >On Thu, Jan 3, 2013 at 12:28 PM,  <span dir=3D"ltr">&lt;<a href=3D"mailto:=
 olopierpa@gmail.com" target=3D"_blank">olopierpa@gmail.com</a>&gt;</span> w=
 rote:<br>
 <blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1p=
 x #ccc solid;padding-left:1ex">A new problem report is waiting at<br>
 =C2=A0 <a href=3D"http://bugs.racket-lang.org/query/?cmd=3Dview&amp;pr=3D13=
 408" target=3D"_blank">http://bugs.racket-lang.org/query/?cmd=3Dview&amp;pr=
 =3D13408</a><br>
 <br>
 Reported by Pierpaolo BERNARDI for release: 5.3.1.12--2013-01-01(0a0fe1a/a)=
 <br>
 <br>
 *** Description:<br>
 In DrRacket, right-click and =E2=80=98rename &lt;var&gt;=E2=80=99, does not=
  work correctly in this case:<br>
 <br>
 (define-syntax dec!<br>
 =C2=A0 (syntax-rules ()<br>
 =C2=A0 =C2=A0 ((_ var q)<br>
 =C2=A0 =C2=A0 =C2=A0(set! var (- var q)))<br>
 =C2=A0 =C2=A0 ((_ var)<br>
 =C2=A0 =C2=A0 =C2=A0(dec! var 1))))<br>
 <br>
 If I change the name of the macro, the occurrence in the last line is not c=
 hanged (even if the arrow is drawn correctly from the definition to the use=
 , and =E2=80=98Jump to next bound occurrence=E2=80=99 correctly jumps from =
 the definition to the occurrence in the last line.<br>
 
 <br>
 *** How to repeat:<br>
 <br></blockquote></div></div></div></div></div>
 
 --e89a8ff1ce42a0fcc604d2779015--
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: Pierpaolo Bernardi <olopierpa@gmail.com>, bugs <bugs@racket-lang.org>,
        nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/13408: Renaming variables.
Date: Fri, 4 Jan 2013 11:40:07 -0500

 --Apple-Mail=_0F50E11F-A984-498B-87B7-5B7D1CC7AF43
 Content-Transfer-Encoding: quoted-printable
 Content-Type: text/plain;
 	charset=windows-1252
 
 
 Dr could jump to a query-mode substitution for each 'purple arrow' =
 identifier. Then the programmer can decide on an 1-1 basis whether the =
 identifier should get renamed, too. I have wanted this on several =
 occasions.=20
 
 
 
 
 On Jan 4, 2013, at 9:47 AM, Robby Findler wrote:
 
 > DrRacket doesn't follow the purple arrows when renaming variables. I'm =
 not sure it should, actually, as those are not necessarily bound uses of =
 the variable in question.
 >=20
 > I could have a separate renaming operation that would rename those or =
 I could change DrRacket's behavior, I suppose.
 >=20
 > Other opinions anyone?
 >=20
 > Robby
 >=20
 >=20
 > On Thu, Jan 3, 2013 at 12:28 PM, <olopierpa@gmail.com> wrote:
 > A new problem report is waiting at
 >   http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D13408
 >=20
 > Reported by Pierpaolo BERNARDI for release: =
 5.3.1.12--2013-01-01(0a0fe1a/a)
 >=20
 > *** Description:
 > In DrRacket, right-click and =91rename <var>=92, does not work =
 correctly in this case:
 >=20
 > (define-syntax dec!
 >   (syntax-rules ()
 >     ((_ var q)
 >      (set! var (- var q)))
 >     ((_ var)
 >      (dec! var 1))))
 >=20
 > If I change the name of the macro, the occurrence in the last line is =
 not changed (even if the arrow is drawn correctly from the definition to =
 the use, and =91Jump to next bound occurrence=92 correctly jumps from =
 the definition to the occurrence in the last line.
 >=20
 > *** How to repeat:
 >=20
 
 
 --Apple-Mail=_0F50E11F-A984-498B-87B7-5B7D1CC7AF43
 Content-Transfer-Encoding: quoted-printable
 Content-Type: text/html;
 	charset=windows-1252
 
 <html><head></head><body style=3D"word-wrap: break-word; =
 -webkit-nbsp-mode: space; -webkit-line-break: after-white-space; =
 "><div><br></div><div>Dr could jump to a query-mode substitution for =
 each 'purple arrow' identifier. Then the programmer can decide on an 1-1 =
 basis whether the identifier should get renamed, too. I have wanted this =
 on several =
 occasions.&nbsp;</div><div><br></div><div><br></div><div><br></div><br><di=
 v><div>On Jan 4, 2013, at 9:47 AM, Robby Findler wrote:</div><br =
 class=3D"Apple-interchange-newline"><blockquote type=3D"cite"><div =
 dir=3D"ltr">DrRacket doesn't follow the purple arrows when renaming =
 variables. I'm not sure it should, actually, as those are not =
 necessarily bound uses of the variable in question.<div><br></div><div>I =
 could have a separate renaming operation that would rename those or I =
 could change DrRacket's behavior, I suppose.</div>
 <div><br></div><div>Other opinions =
 anyone?</div><div><br></div><div>Robby</div><div><div><div =
 class=3D"gmail_extra"><br><br><div class=3D"gmail_quote">On Thu, Jan 3, =
 2013 at 12:28 PM,  <span dir=3D"ltr">&lt;<a =
 href=3D"mailto:olopierpa@gmail.com" =
 target=3D"_blank">olopierpa@gmail.com</a>&gt;</span> wrote:<br>
 <blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 =
 .8ex;border-left:1px #ccc solid;padding-left:1ex">A new problem report =
 is waiting at<br>
 &nbsp; <a =
 href=3D"http://bugs.racket-lang.org/query/?cmd=3Dview&amp;pr=3D13408" =
 target=3D"_blank">http://bugs.racket-lang.org/query/?cmd=3Dview&amp;pr=3D1=
 3408</a><br>
 <br>
 Reported by Pierpaolo BERNARDI for release: =
 5.3.1.12--2013-01-01(0a0fe1a/a)<br>
 <br>
 *** Description:<br>
 In DrRacket, right-click and =91rename &lt;var&gt;=92, does not work =
 correctly in this case:<br>
 <br>
 (define-syntax dec!<br>
 &nbsp; (syntax-rules ()<br>
 &nbsp; &nbsp; ((_ var q)<br>
 &nbsp; &nbsp; &nbsp;(set! var (- var q)))<br>
 &nbsp; &nbsp; ((_ var)<br>
 &nbsp; &nbsp; &nbsp;(dec! var 1))))<br>
 <br>
 If I change the name of the macro, the occurrence in the last line is =
 not changed (even if the arrow is drawn correctly from the definition to =
 the use, and =91Jump to next bound occurrence=92 correctly jumps from =
 the definition to the occurrence in the last line.<br>
 
 <br>
 *** How to repeat:<br>
 <br></blockquote></div></div></div></div></div>
 </blockquote></div><br></body></html>=
 
 --Apple-Mail=_0F50E11F-A984-498B-87B7-5B7D1CC7AF43--
From: Pierpaolo Bernardi <olopierpa@gmail.com>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: bugs <bugs@racket-lang.org>, nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/13408: Renaming variables.
Date: Fri, 4 Jan 2013 18:14:21 +0100

 On Fri, Jan 4, 2013 at 3:47 PM, Robby Findler
 <robby@eecs.northwestern.edu> wrote:
 > DrRacket doesn't follow the purple arrows when renaming variables. I'm not
 > sure it should, actually, as those are not necessarily bound uses of the
 > variable in question.
 
 At the moment I'm not understanding what the problem is, I'll read the
 docs, and think a little.
 
 BUT!  the 'Jump to next bound occurrence' command thinks that that
 *is* a bound occurrence of that var.
 
 Seems inconsistent...
 
 Cheers
From: Ryan Culpepper <ryan@cs.utah.edu>
To: Pierpaolo Bernardi <olopierpa@gmail.com>
Cc: bugs <bugs@racket-lang.org>, nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>,
        Robby Findler <robby@eecs.northwestern.edu>
Subject: Re: [racket-bug] all/13408: Renaming variables.
Date: Fri, 04 Jan 2013 14:05:32 -0500

 On 01/04/2013 12:14 PM, Pierpaolo Bernardi wrote:
 > On Fri, Jan 4, 2013 at 3:47 PM, Robby Findler
 > <robby@eecs.northwestern.edu> wrote:
 >> DrRacket doesn't follow the purple arrows when renaming variables. I'm not
 >> sure it should, actually, as those are not necessarily bound uses of the
 >> variable in question.
 >
 > At the moment I'm not understanding what the problem is, I'll read the
 > docs, and think a little.
 >
 > BUT!  the 'Jump to next bound occurrence' command thinks that that
 > *is* a bound occurrence of that var.
 >
 > Seems inconsistent...
 
 It isn't possible in general to predict whether an identifier inside a 
 syntax template (inside a #' form, syntax-rules right-hand side, etc) is 
 used as a reference.
 
 For example:
 
    (define x ....)
    (define-syntax-rule (crazy m) (m x x))
 
 Are the x's in the macro body references to the preceding definition? It 
 depends on how the macro is used. If the macro is used like this
 
    (crazy lambda) => (lambda x x)
 
 the first x is used as a binder, and the second x is a reference, but it 
 refers to the lambda-bound x, not the definition. But if the macro is 
 used like this
 
    (crazy list) => (list x x)
 
 both x's are references that refer to the definition.
 
 The problem isn't just higher-order macros. There are lots of other 
 factors that make it difficult to predict a macro's binding structure.
 
 A purple arrow connects a binder with an identifier within a syntax 
 template that might become a reference to that binder or might not, 
 depending on what happens in expansion. Some operations make sense on 
 these "apparent bindings", but others (like renaming) don't.
 
 Ryan
 
From: Pierpaolo Bernardi <olopierpa@gmail.com>
To: Ryan Culpepper <ryan@cs.utah.edu>
Cc: bugs <bugs@racket-lang.org>, nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>,
        Robby Findler <robby@eecs.northwestern.edu>
Subject: Re: [racket-bug] all/13408: Renaming variables.
Date: Sat, 5 Jan 2013 16:06:01 +0100

 On Fri, Jan 4, 2013 at 8:05 PM, Ryan Culpepper <ryan@cs.utah.edu> wrote:
 
 > It isn't possible in general to predict whether an identifier inside a
 > syntax template (inside a #' form, syntax-rules right-hand side, etc) is
 > used as a reference.
 
 Now I understand.
 
 Thanks!
From: Eli Barzilay <eli@barzilay.org>
To: Ryan Culpepper <ryan@cs.utah.edu>
Cc: Pierpaolo Bernardi <olopierpa@gmail.com>, bugs <bugs@racket-lang.org>,
        nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>,
        Robby Findler <robby@eecs.northwestern.edu>
Subject: Re: [racket-bug] all/13408: Renaming variables.
Date: Sun, 6 Jan 2013 11:11:40 -0500

 Two days ago, Ryan Culpepper wrote:
 > On 01/04/2013 12:14 PM, Pierpaolo Bernardi wrote:
 > > On Fri, Jan 4, 2013 at 3:47 PM, Robby Findler
 > > <robby@eecs.northwestern.edu> wrote:
 > >> DrRacket doesn't follow the purple arrows when renaming
 > >> variables. I'm not sure it should, actually, as those are not
 > >> necessarily bound uses of the variable in question.
 > 
 > It isn't possible in general to predict whether an identifier inside
 > a syntax template (inside a #' form, syntax-rules right-hand side,
 > etc) is used as a reference.
 
 This is true, but the bigger picture makes this a questionable
 feature.  The thing is that like it or not, people are used to the
 usual search-replace hacks for renaming -- and since drracket insists
 on doing the right thing, it ends up looking like it lacks a feature
 compared to the hackish tools.
 
 So +1 for asking whether to change others, and even a +2 for some kind
 of cheap heuristic for having a default for that.  For example, if I
 want to rename `foo', and there are no `foo's in the file that are
 provably different, then the default could be to change all of them.
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!

Responsible changed from "nobody" to "robby" by robby at Wed, 21 Aug 2013 12:03:28 -0400
Reason>>> 
rbf

State changed from "open" to "closed" by robby at Wed, 21 Aug 2013 12:03:28 -0400
Reason>>> 
When I changed check syntax to use the arrow information to reconstruct the 
renaming information, it also changed to rename based on the purple arrows

