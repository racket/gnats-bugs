From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Fri Jan 21 07:12:51 2011
Received: from mail-fx0-f44.google.com (mail-fx0-f44.google.com [209.85.161.44])
	by champlain.ccs.neu.edu (8.14.3/8.14.3) with ESMTP id p0LCCmhw007589
	for <bugs@bugs.plt-scheme.org>; Fri, 21 Jan 2011 07:12:49 -0500
Message-Id: <201101211212.p0LCCiRT007582@champlain.ccs.neu.edu>
Date: Fri, 21 Jan 2011 07:12:44 -0500
From: matthias@ccs.neu.edu
To: bugs@racket-lang.org
Subject: read-xml should not wait for EOF 

>Number:         11661
>Category:       all
>Synopsis:       read-xml should not wait for EOF
>Class:          change-request
>Responsible:    jay
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Fri Jan 21 07:16:03 -0500 2011
>Closed-Date:    Thu Jan 27 15:38:41 -0500 2011
>Last-Modified:  Thu Jan 27 15:38:41 -0500 2011
>Originator:     matthias
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.0.99.6--2011-01-20(8c513f2/g)
>Environment:
macosx "Darwin africa.local 10.6.0 Darwin Kernel Version 10.6.0: Wed Nov 10 18:13:17 PST 2010; root:xnu-1504.9.26~3/RELEASE_I386 i386" (i386-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 150012644

Collections:
("/Users/matthias/0Unison/collects/"
 ("._.DS_Store" ".DS_Store" "compiled" "date" "finance" "info-domain" "info.ss" "pdf.ss~" "session" "short" "testing" "tll-collects" "utils" "web"))
("/Users/matthias/Library/Racket/5.0.99.6/collects"
 (non-existent-path))
("/Users/matthias/plt/collects"
 (".gitignore" "2htdp" "afm" "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "data" "datalog" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "meta" "mred" "mrlib" "mysterx" "mz" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "picturing-programs" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raclog" "raco" "racunit" "reader" "readline" "redex" "repo-time-stamp" "repos-time-stamp" "rnrs" "s-exp" "schelog" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "sirmail" "slatex" "slideshow" "srfi" "srpersist" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tes!
 ts" "tex2page" "texpict" "tool" "trace" "typed" "typed-scheme" "unstable" "version" "waterworld" "web-server" "wxme" "xml"))

Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t))
>Description:
Unless you remove the #; from the following program, 
it hangs even though one can argue a 'complete' XML 
document has been sent (no prolog, one element). 

It would be 'nice' if it accepted it. 

#lang racket
(require xml)
(define-values (in out) (make-pipe))
(thread (lambda () (write-xexpr '(seq) out) #;(close-output-port out)))
(thread (lambda () (displayln (read-xml in))))
>How-To-Repeat:

>Fix:
>Audit-Trail:
From: Robby Findler <robby@eecs.northwestern.edu>
To: matthias@ccs.neu.edu, bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11661: read-xml should not wait for EOF
Date: Fri, 21 Jan 2011 06:20:06 -0600

 The XML reader seems to be doing some checking that it has a complete
 document, which is why it is waiting to see if you put more data into
 the port or not (in the program without the call to close-output-port.
 
 Robby
 
 On Fri, Jan 21, 2011 at 6:16 AM,  <matthias@ccs.neu.edu> wrote:
 > A new problem report is waiting at
 > =C2=A0http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D11661
 >
 > Reported by matthias for release: 5.0.99.6--2011-01-20(8c513f2/g)
 >
 > *** Description:
 > Unless you remove the #; from the following program,
 > it hangs even though one can argue a 'complete' XML
 > document has been sent (no prolog, one element).
 >
 > It would be 'nice' if it accepted it.
 >
 > #lang racket
 > (require xml)
 > (define-values (in out) (make-pipe))
 > (thread (lambda () (write-xexpr '(seq) out) #;(close-output-port out)))
 > (thread (lambda () (displayln (read-xml in))))
 >
 > *** How to repeat:
 >
 >
 > *** Environment:
 > macosx "Darwin africa.local 10.6.0 Darwin Kernel Version 10.6.0: Wed Nov =
 10 18:13:17 PST 2010; root:xnu-1504.9.26~3/RELEASE_I386 i386" (i386-macosx/=
 3m) (get-display-depth) =3D 32
 > Human Language: english
 > (current-memory-use) 150012644
 >
 > Collections:
 > ("/Users/matthias/0Unison/collects/"
 > =C2=A0("._.DS_Store" ".DS_Store" "compiled" "date" "finance" "info-domain=
 " "info.ss" "pdf.ss~" "session" "short" "testing" "tll-collects" "utils" "w=
 eb"))
 > ("/Users/matthias/Library/Racket/5.0.99.6/collects"
 > =C2=A0(non-existent-path))
 > ("/Users/matthias/plt/collects"
 > =C2=A0(".gitignore" "2htdp" "afm" "algol60" "at-exp" "browser" "combinato=
 r-parser" "compiler" "config" "data" "datalog" "defaults" "deinprogramm" "d=
 rracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file=
 " "framework" "frtime" "games" "graphics" "gui-debugger" "guibuilder" "hand=
 in-client" "handin-server" "help" "hierlist" "honu" "htdp" "html" "icons" "=
 info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "meta" "mred"=
  "mrlib" "mysterx" "mz" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-=
 tools" "picturing-programs" "plai" "planet" "plot" "preprocessor" "profile"=
  "r5rs" "r6rs" "racket" "racklog" "rackunit" "raclog" "raco" "racunit" "rea=
 der" "readline" "redex" "repo-time-stamp" "repos-time-stamp" "rnrs" "s-exp"=
  "schelog" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup=
 " "sgl" "sirmail" "slatex" "slideshow" "srfi" "srpersist" "stepper" "string=
 -constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recover=
 y" "test-engine" "tes!
 > =C2=A0ts" "tex2page" "texpict" "tool" "trace" "typed" "typed-scheme" "uns=
 table" "version" "waterworld" "web-server" "wxme" "xml"))
 >
 > Computer Language: (("Determine language from source") (#(#t print mixed-=
 fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t))
 >
 >
From: Jay McCarthy <jay.mccarthy@gmail.com>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: matthias@ccs.neu.edu, bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11661: read-xml should not wait for EOF
Date: Fri, 21 Jan 2011 06:44:05 -0700

 An XML document is described as...
 
 document	   ::=3D   	 ( prolog element Misc* )
 
 from
 
 http://www.w3.org/TR/2006/REC-xml11-20060816/#sec-documents
 
 Matthias' port could contain the document that has an empty prolog, a
 single element, and no trailing "Misc"s, but there's no way to know
 what what XML document it contains until the port is closed.
 
 You can't tell when an "XML document" is complete because the "Misc"
 (comments, processing instructions, etc) don't have to be "inside"
 anything other than the EOF. This is one of the reasons why
 "read-xml/element" exists because you can always tell when a single
 element is done.
 
 I don't know of a change I could make to "read-xml" that would give
 something back to Matthias without ignoring "Misc"s that are really
 sometimes there.
 
 Jay
 
 2011/1/21 Robby Findler <robby@eecs.northwestern.edu>:
 > The XML reader seems to be doing some checking that it has a complete
 > document, which is why it is waiting to see if you put more data into
 > the port or not (in the program without the call to close-output-port.
 >
 > Robby
 >
 > On Fri, Jan 21, 2011 at 6:16 AM, =C2=A0<matthias@ccs.neu.edu> wrote:
 >> A new problem report is waiting at
 >> =C2=A0http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D11661
 >>
 >> Reported by matthias for release: 5.0.99.6--2011-01-20(8c513f2/g)
 >>
 >> *** Description:
 >> Unless you remove the #; from the following program,
 >> it hangs even though one can argue a 'complete' XML
 >> document has been sent (no prolog, one element).
 >>
 >> It would be 'nice' if it accepted it.
 >>
 >> #lang racket
 >> (require xml)
 >> (define-values (in out) (make-pipe))
 >> (thread (lambda () (write-xexpr '(seq) out) #;(close-output-port out)))
 >> (thread (lambda () (displayln (read-xml in))))
 >>
 >> *** How to repeat:
 >>
 >>
 >> *** Environment:
 >> macosx "Darwin africa.local 10.6.0 Darwin Kernel Version 10.6.0: Wed Nov=
  10 18:13:17 PST 2010; root:xnu-1504.9.26~3/RELEASE_I386 i386" (i386-macosx=
 /3m) (get-display-depth) =3D 32
 >> Human Language: english
 >> (current-memory-use) 150012644
 >>
 >> Collections:
 >> ("/Users/matthias/0Unison/collects/"
 >> =C2=A0("._.DS_Store" ".DS_Store" "compiled" "date" "finance" "info-domai=
 n" "info.ss" "pdf.ss~" "session" "short" "testing" "tll-collects" "utils" "=
 web"))
 >> ("/Users/matthias/Library/Racket/5.0.99.6/collects"
 >> =C2=A0(non-existent-path))
 >> ("/Users/matthias/plt/collects"
 >> =C2=A0(".gitignore" "2htdp" "afm" "algol60" "at-exp" "browser" "combinat=
 or-parser" "compiler" "config" "data" "datalog" "defaults" "deinprogramm" "=
 drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "fil=
 e" "framework" "frtime" "games" "graphics" "gui-debugger" "guibuilder" "han=
 din-client" "handin-server" "help" "hierlist" "honu" "htdp" "html" "icons" =
 "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "meta" "mred=
 " "mrlib" "mysterx" "mz" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser=
 -tools" "picturing-programs" "plai" "planet" "plot" "preprocessor" "profile=
 " "r5rs" "r6rs" "racket" "racklog" "rackunit" "raclog" "raco" "racunit" "re=
 ader" "readline" "redex" "repo-time-stamp" "repos-time-stamp" "rnrs" "s-exp=
 " "schelog" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setu=
 p" "sgl" "sirmail" "slatex" "slideshow" "srfi" "srpersist" "stepper" "strin=
 g-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recove=
 ry" "test-engine" "tes!
 >> =C2=A0ts" "tex2page" "texpict" "tool" "trace" "typed" "typed-scheme" "un=
 stable" "version" "waterworld" "web-server" "wxme" "xml"))
 >>
 >> Computer Language: (("Determine language from source") (#(#t print mixed=
 -fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t))
 >>
 >>
 >
 
 
 
 --=20
 Jay McCarthy <jay@cs.byu.edu>
 Assistant Professor / Brigham Young University
 http://faculty.cs.byu.edu/~jay
 
 "The glory of God is Intelligence" - D&C 93
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Jay McCarthy <jay.mccarthy@gmail.com>
Cc: Robby Findler <robby@eecs.northwestern.edu>, bugs@racket-lang.org,
        nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11661: read-xml should not wait for EOF
Date: Fri, 21 Jan 2011 14:15:08 -0500

 Perhaps we could get away with a read-prolog and a =
 read-prolog-or-element?=20
 
 
 On Jan 21, 2011, at 8:44 AM, Jay McCarthy wrote:
 
 > An XML document is described as...
 >=20
 > document	   ::=3D   	 ( prolog element Misc* )
 >=20
 > from
 >=20
 > http://www.w3.org/TR/2006/REC-xml11-20060816/#sec-documents
 >=20
 > Matthias' port could contain the document that has an empty prolog, a
 > single element, and no trailing "Misc"s, but there's no way to know
 > what what XML document it contains until the port is closed.
 >=20
 > You can't tell when an "XML document" is complete because the "Misc"
 > (comments, processing instructions, etc) don't have to be "inside"
 > anything other than the EOF. This is one of the reasons why
 > "read-xml/element" exists because you can always tell when a single
 > element is done.
 >=20
 > I don't know of a change I could make to "read-xml" that would give
 > something back to Matthias without ignoring "Misc"s that are really
 > sometimes there.
 >=20
 > Jay
 >=20
 > 2011/1/21 Robby Findler <robby@eecs.northwestern.edu>:
 >> The XML reader seems to be doing some checking that it has a complete
 >> document, which is why it is waiting to see if you put more data into
 >> the port or not (in the program without the call to =
 close-output-port.
 >>=20
 >> Robby
 >>=20
 >> On Fri, Jan 21, 2011 at 6:16 AM,  <matthias@ccs.neu.edu> wrote:
 >>> A new problem report is waiting at
 >>>  http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D11661
 >>>=20
 >>> Reported by matthias for release: 5.0.99.6--2011-01-20(8c513f2/g)
 >>>=20
 >>> *** Description:
 >>> Unless you remove the #; from the following program,
 >>> it hangs even though one can argue a 'complete' XML
 >>> document has been sent (no prolog, one element).
 >>>=20
 >>> It would be 'nice' if it accepted it.
 >>>=20
 >>> #lang racket
 >>> (require xml)
 >>> (define-values (in out) (make-pipe))
 >>> (thread (lambda () (write-xexpr '(seq) out) #;(close-output-port =
 out)))
 >>> (thread (lambda () (displayln (read-xml in))))
 >>>=20
 >>> *** How to repeat:
 >>>=20
 >>>=20
 >>> *** Environment:
 >>> macosx "Darwin africa.local 10.6.0 Darwin Kernel Version 10.6.0: Wed =
 Nov 10 18:13:17 PST 2010; root:xnu-1504.9.26~3/RELEASE_I386 i386" =
 (i386-macosx/3m) (get-display-depth) =3D 32
 >>> Human Language: english
 >>> (current-memory-use) 150012644
 >>>=20
 >>> Collections:
 >>> ("/Users/matthias/0Unison/collects/"
 >>>  ("._.DS_Store" ".DS_Store" "compiled" "date" "finance" =
 "info-domain" "info.ss" "pdf.ss~" "session" "short" "testing" =
 "tll-collects" "utils" "web"))
 >>> ("/Users/matthias/Library/Racket/5.0.99.6/collects"
 >>>  (non-existent-path))
 >>> ("/Users/matthias/plt/collects"
 >>>  (".gitignore" "2htdp" "afm" "algol60" "at-exp" "browser" =
 "combinator-parser" "compiler" "config" "data" "datalog" "defaults" =
 "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" =
 "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" =
 "gui-debugger" "guibuilder" "handin-client" "handin-server" "help" =
 "hierlist" "honu" "htdp" "html" "icons" "info-domain" "lang" "launcher" =
 "lazy" "macro-debugger" "make" "meta" "mred" "mrlib" "mysterx" "mz" =
 "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" =
 "picturing-programs" "plai" "planet" "plot" "preprocessor" "profile" =
 "r5rs" "r6rs" "racket" "racklog" "rackunit" "raclog" "raco" "racunit" =
 "reader" "readline" "redex" "repo-time-stamp" "repos-time-stamp" "rnrs" =
 "s-exp" "schelog" "scheme" "schemeunit" "scribble" "scribblings" =
 "scriblib" "setup" "sgl" "sirmail" "slatex" "slideshow" "srfi" =
 "srpersist" "stepper" "string-constants" "swindle" "syntax" =
 "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tes!
 >>>  ts" "tex2page" "texpict" "tool" "trace" "typed" "typed-scheme" =
 "unstable" "version" "waterworld" "web-server" "wxme" "xml"))
 >>>=20
 >>> Computer Language: (("Determine language from source") (#(#t print =
 mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t))
 >>>=20
 >>>=20
 >>=20
 >=20
 >=20
 >=20
 > --=20
 > Jay McCarthy <jay@cs.byu.edu>
 > Assistant Professor / Brigham Young University
 > http://faculty.cs.byu.edu/~jay
 >=20
 > "The glory of God is Intelligence" - D&C 93
 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: Jay McCarthy <jay.mccarthy@gmail.com>, bugs@racket-lang.org,
        nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11661: read-xml should not wait for EOF
Date: Fri, 21 Jan 2011 15:44:55 -0600

 I think that generally having the port be stuck when you touch it just
 after the data is a bad invariant to have to live up to. Better to
 make the user close the port or have some other data ready in the port
 than trying to do this subtle thing.
 
 Robby
 
 On Fri, Jan 21, 2011 at 1:15 PM, Matthias Felleisen
 <matthias@ccs.neu.edu> wrote:
 >
 > Perhaps we could get away with a read-prolog and a read-prolog-or-element=
 ?
 >
 >
 > On Jan 21, 2011, at 8:44 AM, Jay McCarthy wrote:
 >
 >> An XML document is described as...
 >>
 >> document =C2=A0 =C2=A0 =C2=A0 =C2=A0 ::=3D =C2=A0 =C2=A0 =C2=A0 =C2=A0 =
 =C2=A0 ( prolog element Misc* )
 >>
 >> from
 >>
 >> http://www.w3.org/TR/2006/REC-xml11-20060816/#sec-documents
 >>
 >> Matthias' port could contain the document that has an empty prolog, a
 >> single element, and no trailing "Misc"s, but there's no way to know
 >> what what XML document it contains until the port is closed.
 >>
 >> You can't tell when an "XML document" is complete because the "Misc"
 >> (comments, processing instructions, etc) don't have to be "inside"
 >> anything other than the EOF. This is one of the reasons why
 >> "read-xml/element" exists because you can always tell when a single
 >> element is done.
 >>
 >> I don't know of a change I could make to "read-xml" that would give
 >> something back to Matthias without ignoring "Misc"s that are really
 >> sometimes there.
 >>
 >> Jay
 >>
 >> 2011/1/21 Robby Findler <robby@eecs.northwestern.edu>:
 >>> The XML reader seems to be doing some checking that it has a complete
 >>> document, which is why it is waiting to see if you put more data into
 >>> the port or not (in the program without the call to close-output-port.
 >>>
 >>> Robby
 >>>
 >>> On Fri, Jan 21, 2011 at 6:16 AM, =C2=A0<matthias@ccs.neu.edu> wrote:
 >>>> A new problem report is waiting at
 >>>> =C2=A0http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D11661
 >>>>
 >>>> Reported by matthias for release: 5.0.99.6--2011-01-20(8c513f2/g)
 >>>>
 >>>> *** Description:
 >>>> Unless you remove the #; from the following program,
 >>>> it hangs even though one can argue a 'complete' XML
 >>>> document has been sent (no prolog, one element).
 >>>>
 >>>> It would be 'nice' if it accepted it.
 >>>>
 >>>> #lang racket
 >>>> (require xml)
 >>>> (define-values (in out) (make-pipe))
 >>>> (thread (lambda () (write-xexpr '(seq) out) #;(close-output-port out))=
 )
 >>>> (thread (lambda () (displayln (read-xml in))))
 >>>>
 >>>> *** How to repeat:
 >>>>
 >>>>
 >>>> *** Environment:
 >>>> macosx "Darwin africa.local 10.6.0 Darwin Kernel Version 10.6.0: Wed N=
 ov 10 18:13:17 PST 2010; root:xnu-1504.9.26~3/RELEASE_I386 i386" (i386-maco=
 sx/3m) (get-display-depth) =3D 32
 >>>> Human Language: english
 >>>> (current-memory-use) 150012644
 >>>>
 >>>> Collections:
 >>>> ("/Users/matthias/0Unison/collects/"
 >>>> =C2=A0("._.DS_Store" ".DS_Store" "compiled" "date" "finance" "info-dom=
 ain" "info.ss" "pdf.ss~" "session" "short" "testing" "tll-collects" "utils"=
  "web"))
 >>>> ("/Users/matthias/Library/Racket/5.0.99.6/collects"
 >>>> =C2=A0(non-existent-path))
 >>>> ("/Users/matthias/plt/collects"
 >>>> =C2=A0(".gitignore" "2htdp" "afm" "algol60" "at-exp" "browser" "combin=
 ator-parser" "compiler" "config" "data" "datalog" "defaults" "deinprogramm"=
  "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "f=
 ile" "framework" "frtime" "games" "graphics" "gui-debugger" "guibuilder" "h=
 andin-client" "handin-server" "help" "hierlist" "honu" "htdp" "html" "icons=
 " "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "meta" "mr=
 ed" "mrlib" "mysterx" "mz" "mzcom" "mzlib" "mzscheme" "net" "openssl" "pars=
 er-tools" "picturing-programs" "plai" "planet" "plot" "preprocessor" "profi=
 le" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raclog" "raco" "racunit" "=
 reader" "readline" "redex" "repo-time-stamp" "repos-time-stamp" "rnrs" "s-e=
 xp" "schelog" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "se=
 tup" "sgl" "sirmail" "slatex" "slideshow" "srfi" "srpersist" "stepper" "str=
 ing-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-reco=
 very" "test-engine" "tes!
 >>>> =C2=A0ts" "tex2page" "texpict" "tool" "trace" "typed" "typed-scheme" "=
 unstable" "version" "waterworld" "web-server" "wxme" "xml"))
 >>>>
 >>>> Computer Language: (("Determine language from source") (#(#t print mix=
 ed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t))
 >>>>
 >>>>
 >>>
 >>
 >>
 >>
 >> --
 >> Jay McCarthy <jay@cs.byu.edu>
 >> Assistant Professor / Brigham Young University
 >> http://faculty.cs.byu.edu/~jay
 >>
 >> "The glory of God is Intelligence" - D&C 93
 >
 >
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: Jay McCarthy <jay.mccarthy@gmail.com>, bugs@racket-lang.org,
        nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11661: read-xml should not wait for EOF
Date: Fri, 21 Jan 2011 17:14:57 -0500

 I see no connection between my proposal and your reply.=20
 Could you elaborate?=20
 
 
 On Jan 21, 2011, at 4:44 PM, Robby Findler wrote:
 
 > I think that generally having the port be stuck when you touch it just
 > after the data is a bad invariant to have to live up to. Better to
 > make the user close the port or have some other data ready in the port
 > than trying to do this subtle thing.
 >=20
 > Robby
 >=20
 > On Fri, Jan 21, 2011 at 1:15 PM, Matthias Felleisen
 > <matthias@ccs.neu.edu> wrote:
 >>=20
 >> Perhaps we could get away with a read-prolog and a =
 read-prolog-or-element?
 >>=20
 >>=20
 >> On Jan 21, 2011, at 8:44 AM, Jay McCarthy wrote:
 >>=20
 >>> An XML document is described as...
 >>>=20
 >>> document         ::=3D           ( prolog element Misc* )
 >>>=20
 >>> from
 >>>=20
 >>> http://www.w3.org/TR/2006/REC-xml11-20060816/#sec-documents
 >>>=20
 >>> Matthias' port could contain the document that has an empty prolog, =
 a
 >>> single element, and no trailing "Misc"s, but there's no way to know
 >>> what what XML document it contains until the port is closed.
 >>>=20
 >>> You can't tell when an "XML document" is complete because the "Misc"
 >>> (comments, processing instructions, etc) don't have to be "inside"
 >>> anything other than the EOF. This is one of the reasons why
 >>> "read-xml/element" exists because you can always tell when a single
 >>> element is done.
 >>>=20
 >>> I don't know of a change I could make to "read-xml" that would give
 >>> something back to Matthias without ignoring "Misc"s that are really
 >>> sometimes there.
 >>>=20
 >>> Jay
 >>>=20
 >>> 2011/1/21 Robby Findler <robby@eecs.northwestern.edu>:
 >>>> The XML reader seems to be doing some checking that it has a =
 complete
 >>>> document, which is why it is waiting to see if you put more data =
 into
 >>>> the port or not (in the program without the call to =
 close-output-port.
 >>>>=20
 >>>> Robby
 >>>>=20
 >>>> On Fri, Jan 21, 2011 at 6:16 AM,  <matthias@ccs.neu.edu> wrote:
 >>>>> A new problem report is waiting at
 >>>>>  http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D11661
 >>>>>=20
 >>>>> Reported by matthias for release: 5.0.99.6--2011-01-20(8c513f2/g)
 >>>>>=20
 >>>>> *** Description:
 >>>>> Unless you remove the #; from the following program,
 >>>>> it hangs even though one can argue a 'complete' XML
 >>>>> document has been sent (no prolog, one element).
 >>>>>=20
 >>>>> It would be 'nice' if it accepted it.
 >>>>>=20
 >>>>> #lang racket
 >>>>> (require xml)
 >>>>> (define-values (in out) (make-pipe))
 >>>>> (thread (lambda () (write-xexpr '(seq) out) #;(close-output-port =
 out)))
 >>>>> (thread (lambda () (displayln (read-xml in))))
 >>>>>=20
 >>>>> *** How to repeat:
 >>>>>=20
 >>>>>=20
 >>>>> *** Environment:
 >>>>> macosx "Darwin africa.local 10.6.0 Darwin Kernel Version 10.6.0: =
 Wed Nov 10 18:13:17 PST 2010; root:xnu-1504.9.26~3/RELEASE_I386 i386" =
 (i386-macosx/3m) (get-display-depth) =3D 32
 >>>>> Human Language: english
 >>>>> (current-memory-use) 150012644
 >>>>>=20
 >>>>> Collections:
 >>>>> ("/Users/matthias/0Unison/collects/"
 >>>>>  ("._.DS_Store" ".DS_Store" "compiled" "date" "finance" =
 "info-domain" "info.ss" "pdf.ss~" "session" "short" "testing" =
 "tll-collects" "utils" "web"))
 >>>>> ("/Users/matthias/Library/Racket/5.0.99.6/collects"
 >>>>>  (non-existent-path))
 >>>>> ("/Users/matthias/plt/collects"
 >>>>>  (".gitignore" "2htdp" "afm" "algol60" "at-exp" "browser" =
 "combinator-parser" "compiler" "config" "data" "datalog" "defaults" =
 "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" =
 "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" =
 "gui-debugger" "guibuilder" "handin-client" "handin-server" "help" =
 "hierlist" "honu" "htdp" "html" "icons" "info-domain" "lang" "launcher" =
 "lazy" "macro-debugger" "make" "meta" "mred" "mrlib" "mysterx" "mz" =
 "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" =
 "picturing-programs" "plai" "planet" "plot" "preprocessor" "profile" =
 "r5rs" "r6rs" "racket" "racklog" "rackunit" "raclog" "raco" "racunit" =
 "reader" "readline" "redex" "repo-time-stamp" "repos-time-stamp" "rnrs" =
 "s-exp" "schelog" "scheme" "schemeunit" "scribble" "scribblings" =
 "scriblib" "setup" "sgl" "sirmail" "slatex" "slideshow" "srfi" =
 "srpersist" "stepper" "string-constants" "swindle" "syntax" =
 "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tes!
 >>>>>  ts" "tex2page" "texpict" "tool" "trace" "typed" "typed-scheme" =
 "unstable" "version" "waterworld" "web-server" "wxme" "xml"))
 >>>>>=20
 >>>>> Computer Language: (("Determine language from source") (#(#t print =
 mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t))
 >>>>>=20
 >>>>>=20
 >>>>=20
 >>>=20
 >>>=20
 >>>=20
 >>> --
 >>> Jay McCarthy <jay@cs.byu.edu>
 >>> Assistant Professor / Brigham Young University
 >>> http://faculty.cs.byu.edu/~jay
 >>>=20
 >>> "The glory of God is Intelligence" - D&C 93
 >>=20
 >>=20
 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: Jay McCarthy <jay.mccarthy@gmail.com>, bugs@racket-lang.org,
        nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11661: read-xml should not wait for EOF
Date: Fri, 21 Jan 2011 17:39:21 -0600

 It isn't, per se, unless your proposal also comes with a promise that
 this new function would not peek beyond the data it needs to consume
 so that your original program (without the close) would work. If it
 does come with that, then I'd argue that guaranteeing this behavior is
 probably not worth the energy.
 
 But maybe I'm missing some larger context that makes this behavior (ie
 robustness in the presence of a port that can freeze you) more
 important.
 
 Robby
 
 On Fri, Jan 21, 2011 at 4:14 PM, Matthias Felleisen
 <matthias@ccs.neu.edu> wrote:
 >
 > I see no connection between my proposal and your reply.
 > Could you elaborate?
 >
 >
 > On Jan 21, 2011, at 4:44 PM, Robby Findler wrote:
 >
 >> I think that generally having the port be stuck when you touch it just
 >> after the data is a bad invariant to have to live up to. Better to
 >> make the user close the port or have some other data ready in the port
 >> than trying to do this subtle thing.
 >>
 >> Robby
 >>
 >> On Fri, Jan 21, 2011 at 1:15 PM, Matthias Felleisen
 >> <matthias@ccs.neu.edu> wrote:
 >>>
 >>> Perhaps we could get away with a read-prolog and a read-prolog-or-eleme=
 nt?
 >>>
 >>>
 >>> On Jan 21, 2011, at 8:44 AM, Jay McCarthy wrote:
 >>>
 >>>> An XML document is described as...
 >>>>
 >>>> document =C2=A0 =C2=A0 =C2=A0 =C2=A0 ::=3D =C2=A0 =C2=A0 =C2=A0 =C2=A0=
  =C2=A0 ( prolog element Misc* )
 >>>>
 >>>> from
 >>>>
 >>>> http://www.w3.org/TR/2006/REC-xml11-20060816/#sec-documents
 >>>>
 >>>> Matthias' port could contain the document that has an empty prolog, a
 >>>> single element, and no trailing "Misc"s, but there's no way to know
 >>>> what what XML document it contains until the port is closed.
 >>>>
 >>>> You can't tell when an "XML document" is complete because the "Misc"
 >>>> (comments, processing instructions, etc) don't have to be "inside"
 >>>> anything other than the EOF. This is one of the reasons why
 >>>> "read-xml/element" exists because you can always tell when a single
 >>>> element is done.
 >>>>
 >>>> I don't know of a change I could make to "read-xml" that would give
 >>>> something back to Matthias without ignoring "Misc"s that are really
 >>>> sometimes there.
 >>>>
 >>>> Jay
 >>>>
 >>>> 2011/1/21 Robby Findler <robby@eecs.northwestern.edu>:
 >>>>> The XML reader seems to be doing some checking that it has a complete
 >>>>> document, which is why it is waiting to see if you put more data into
 >>>>> the port or not (in the program without the call to close-output-port=
 .
 >>>>>
 >>>>> Robby
 >>>>>
 >>>>> On Fri, Jan 21, 2011 at 6:16 AM, =C2=A0<matthias@ccs.neu.edu> wrote:
 >>>>>> A new problem report is waiting at
 >>>>>> =C2=A0http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D11661
 >>>>>>
 >>>>>> Reported by matthias for release: 5.0.99.6--2011-01-20(8c513f2/g)
 >>>>>>
 >>>>>> *** Description:
 >>>>>> Unless you remove the #; from the following program,
 >>>>>> it hangs even though one can argue a 'complete' XML
 >>>>>> document has been sent (no prolog, one element).
 >>>>>>
 >>>>>> It would be 'nice' if it accepted it.
 >>>>>>
 >>>>>> #lang racket
 >>>>>> (require xml)
 >>>>>> (define-values (in out) (make-pipe))
 >>>>>> (thread (lambda () (write-xexpr '(seq) out) #;(close-output-port out=
 )))
 >>>>>> (thread (lambda () (displayln (read-xml in))))
 >>>>>>
 >>>>>> *** How to repeat:
 >>>>>>
 >>>>>>
 >>>>>> *** Environment:
 >>>>>> macosx "Darwin africa.local 10.6.0 Darwin Kernel Version 10.6.0: Wed=
  Nov 10 18:13:17 PST 2010; root:xnu-1504.9.26~3/RELEASE_I386 i386" (i386-ma=
 cosx/3m) (get-display-depth) =3D 32
 >>>>>> Human Language: english
 >>>>>> (current-memory-use) 150012644
 >>>>>>
 >>>>>> Collections:
 >>>>>> ("/Users/matthias/0Unison/collects/"
 >>>>>> =C2=A0("._.DS_Store" ".DS_Store" "compiled" "date" "finance" "info-d=
 omain" "info.ss" "pdf.ss~" "session" "short" "testing" "tll-collects" "util=
 s" "web"))
 >>>>>> ("/Users/matthias/Library/Racket/5.0.99.6/collects"
 >>>>>> =C2=A0(non-existent-path))
 >>>>>> ("/Users/matthias/plt/collects"
 >>>>>> =C2=A0(".gitignore" "2htdp" "afm" "algol60" "at-exp" "browser" "comb=
 inator-parser" "compiler" "config" "data" "datalog" "defaults" "deinprogram=
 m" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" =
 "file" "framework" "frtime" "games" "graphics" "gui-debugger" "guibuilder" =
 "handin-client" "handin-server" "help" "hierlist" "honu" "htdp" "html" "ico=
 ns" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "meta" "=
 mred" "mrlib" "mysterx" "mz" "mzcom" "mzlib" "mzscheme" "net" "openssl" "pa=
 rser-tools" "picturing-programs" "plai" "planet" "plot" "preprocessor" "pro=
 file" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raclog" "raco" "racunit"=
  "reader" "readline" "redex" "repo-time-stamp" "repos-time-stamp" "rnrs" "s=
 -exp" "schelog" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "=
 setup" "sgl" "sirmail" "slatex" "slideshow" "srfi" "srpersist" "stepper" "s=
 tring-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-re=
 covery" "test-engine" "tes!
 >>>>>> =C2=A0ts" "tex2page" "texpict" "tool" "trace" "typed" "typed-scheme"=
  "unstable" "version" "waterworld" "web-server" "wxme" "xml"))
 >>>>>>
 >>>>>> Computer Language: (("Determine language from source") (#(#t print m=
 ixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t))
 >>>>>>
 >>>>>>
 >>>>>
 >>>>
 >>>>
 >>>>
 >>>> --
 >>>> Jay McCarthy <jay@cs.byu.edu>
 >>>> Assistant Professor / Brigham Young University
 >>>> http://faculty.cs.byu.edu/~jay
 >>>>
 >>>> "The glory of God is Intelligence" - D&C 93
 >>>
 >>>
 >
 >
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: Jay McCarthy <jay.mccarthy@gmail.com>, bugs@racket-lang.org,
        nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11661: read-xml should not wait for EOF
Date: Sat, 22 Jan 2011 10:58:37 -0500

 No the original program can't possibly work.=20
 
 Here is the situation. In '312' we tell students to use whatever =
 language.=20
 Many 'heavy iron' languages have by now caught on and provide reasonable=20=
 
 XML frameworks. Your IDE has a tool chain that does a lot of "wizard"=20
 programming for you, including XML marshalling and a prolog and who=20
 knows what. (These kids don't even know what it really sends.)=20
 
 So I thought of making my reader flexible enough to accommodate=20
 either an XML element or an XML document. But when I switched to=20
 read-xml from read-xml/element, my server hung on some of the SVN
 checked solutions I tried -- those that sent only an element. (It
 hung also on mind, because I didn't send a document either but=20
 I tested that too late).=20
 
 If I had a function read-xml-document-or-element, I'd be able=20
 to accommodate this.=20
 
 (With all their wizard frameworks and what not, they still=20
 don't PARSE the XML that comes in but readline it, meaning=20
 when I don't send a NEWLINE, they hang. Just amusing not related.)=20
 
 
 
 
 On Jan 21, 2011, at 6:39 PM, Robby Findler wrote:
 
 > It isn't, per se, unless your proposal also comes with a promise that
 > this new function would not peek beyond the data it needs to consume
 > so that your original program (without the close) would work. If it
 > does come with that, then I'd argue that guaranteeing this behavior is
 > probably not worth the energy.
 >=20
 > But maybe I'm missing some larger context that makes this behavior (ie
 > robustness in the presence of a port that can freeze you) more
 > important.
 >=20
 > Robby
 >=20
 > On Fri, Jan 21, 2011 at 4:14 PM, Matthias Felleisen
 > <matthias@ccs.neu.edu> wrote:
 >>=20
 >> I see no connection between my proposal and your reply.
 >> Could you elaborate?
 >>=20
 >>=20
 >> On Jan 21, 2011, at 4:44 PM, Robby Findler wrote:
 >>=20
 >>> I think that generally having the port be stuck when you touch it =
 just
 >>> after the data is a bad invariant to have to live up to. Better to
 >>> make the user close the port or have some other data ready in the =
 port
 >>> than trying to do this subtle thing.
 >>>=20
 >>> Robby
 >>>=20
 >>> On Fri, Jan 21, 2011 at 1:15 PM, Matthias Felleisen
 >>> <matthias@ccs.neu.edu> wrote:
 >>>>=20
 >>>> Perhaps we could get away with a read-prolog and a =
 read-prolog-or-element?
 >>>>=20
 >>>>=20
 >>>> On Jan 21, 2011, at 8:44 AM, Jay McCarthy wrote:
 >>>>=20
 >>>>> An XML document is described as...
 >>>>>=20
 >>>>> document         ::=3D           ( prolog element Misc* )
 >>>>>=20
 >>>>> from
 >>>>>=20
 >>>>> http://www.w3.org/TR/2006/REC-xml11-20060816/#sec-documents
 >>>>>=20
 >>>>> Matthias' port could contain the document that has an empty =
 prolog, a
 >>>>> single element, and no trailing "Misc"s, but there's no way to =
 know
 >>>>> what what XML document it contains until the port is closed.
 >>>>>=20
 >>>>> You can't tell when an "XML document" is complete because the =
 "Misc"
 >>>>> (comments, processing instructions, etc) don't have to be "inside"
 >>>>> anything other than the EOF. This is one of the reasons why
 >>>>> "read-xml/element" exists because you can always tell when a =
 single
 >>>>> element is done.
 >>>>>=20
 >>>>> I don't know of a change I could make to "read-xml" that would =
 give
 >>>>> something back to Matthias without ignoring "Misc"s that are =
 really
 >>>>> sometimes there.
 >>>>>=20
 >>>>> Jay
 >>>>>=20
 >>>>> 2011/1/21 Robby Findler <robby@eecs.northwestern.edu>:
 >>>>>> The XML reader seems to be doing some checking that it has a =
 complete
 >>>>>> document, which is why it is waiting to see if you put more data =
 into
 >>>>>> the port or not (in the program without the call to =
 close-output-port.
 >>>>>>=20
 >>>>>> Robby
 >>>>>>=20
 >>>>>> On Fri, Jan 21, 2011 at 6:16 AM,  <matthias@ccs.neu.edu> wrote:
 >>>>>>> A new problem report is waiting at
 >>>>>>>  http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D11661
 >>>>>>>=20
 >>>>>>> Reported by matthias for release: =
 5.0.99.6--2011-01-20(8c513f2/g)
 >>>>>>>=20
 >>>>>>> *** Description:
 >>>>>>> Unless you remove the #; from the following program,
 >>>>>>> it hangs even though one can argue a 'complete' XML
 >>>>>>> document has been sent (no prolog, one element).
 >>>>>>>=20
 >>>>>>> It would be 'nice' if it accepted it.
 >>>>>>>=20
 >>>>>>> #lang racket
 >>>>>>> (require xml)
 >>>>>>> (define-values (in out) (make-pipe))
 >>>>>>> (thread (lambda () (write-xexpr '(seq) out) #;(close-output-port =
 out)))
 >>>>>>> (thread (lambda () (displayln (read-xml in))))
 >>>>>>>=20
 >>>>>>> *** How to repeat:
 >>>>>>>=20
 >>>>>>>=20
 >>>>>>> *** Environment:
 >>>>>>> macosx "Darwin africa.local 10.6.0 Darwin Kernel Version 10.6.0: =
 Wed Nov 10 18:13:17 PST 2010; root:xnu-1504.9.26~3/RELEASE_I386 i386" =
 (i386-macosx/3m) (get-display-depth) =3D 32
 >>>>>>> Human Language: english
 >>>>>>> (current-memory-use) 150012644
 >>>>>>>=20
 >>>>>>> Collections:
 >>>>>>> ("/Users/matthias/0Unison/collects/"
 >>>>>>>  ("._.DS_Store" ".DS_Store" "compiled" "date" "finance" =
 "info-domain" "info.ss" "pdf.ss~" "session" "short" "testing" =
 "tll-collects" "utils" "web"))
 >>>>>>> ("/Users/matthias/Library/Racket/5.0.99.6/collects"
 >>>>>>>  (non-existent-path))
 >>>>>>> ("/Users/matthias/plt/collects"
 >>>>>>>  (".gitignore" "2htdp" "afm" "algol60" "at-exp" "browser" =
 "combinator-parser" "compiler" "config" "data" "datalog" "defaults" =
 "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" =
 "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" =
 "gui-debugger" "guibuilder" "handin-client" "handin-server" "help" =
 "hierlist" "honu" "htdp" "html" "icons" "info-domain" "lang" "launcher" =
 "lazy" "macro-debugger" "make" "meta" "mred" "mrlib" "mysterx" "mz" =
 "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" =
 "picturing-programs" "plai" "planet" "plot" "preprocessor" "profile" =
 "r5rs" "r6rs" "racket" "racklog" "rackunit" "raclog" "raco" "racunit" =
 "reader" "readline" "redex" "repo-time-stamp" "repos-time-stamp" "rnrs" =
 "s-exp" "schelog" "scheme" "schemeunit" "scribble" "scribblings" =
 "scriblib" "setup" "sgl" "sirmail" "slatex" "slideshow" "srfi" =
 "srpersist" "stepper" "string-constants" "swindle" "syntax" =
 "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tes!
 >>>>>>>  ts" "tex2page" "texpict" "tool" "trace" "typed" "typed-scheme" =
 "unstable" "version" "waterworld" "web-server" "wxme" "xml"))
 >>>>>>>=20
 >>>>>>> Computer Language: (("Determine language from source") (#(#t =
 print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t =
 #t))
 >>>>>>>=20
 >>>>>>>=20
 >>>>>>=20
 >>>>>=20
 >>>>>=20
 >>>>>=20
 >>>>> --
 >>>>> Jay McCarthy <jay@cs.byu.edu>
 >>>>> Assistant Professor / Brigham Young University
 >>>>> http://faculty.cs.byu.edu/~jay
 >>>>>=20
 >>>>> "The glory of God is Intelligence" - D&C 93
 >>>>=20
 >>>>=20
 >>=20
 >>=20
 
Responsible changed from "nobody" to "jay" by jay@racket-lang.org at Thu, 27 Jan 2011 15:38:41 -0500
Reason>>> A commit by jay@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/0714c7222c
State changed from "open" to "closed" by jay@racket-lang.org at Thu, 27 Jan 2011 15:38:41 -0500
Reason>>> A commit by jay@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/0714c7222c
