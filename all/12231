From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Sun Sep 25 21:12:21 2011
Received: from mail-pz0-f48.google.com (mail-pz0-f48.google.com [209.85.210.48])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id p8Q1CItr013530
	for <bugs@bugs.plt-scheme.org>; Sun, 25 Sep 2011 21:12:18 -0400
Message-Id: <201109260112.p8Q1CFqa013525@champlain.ccs.neu.edu>
Date: Sun, 25 Sep 2011 21:12:15 -0400
From: neil.toronto@gmail.com
To: bugs@racket-lang.org
Subject: Keyword procedure names lose identifier context... or something like that

>Number:         12231
>Category:       all
>Synopsis:       Keyword procedure names lose identifier context... or something like that
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       non-critical
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Sun Sep 25 21:16:01 -0400 2011
>Closed-Date:    Tue Sep 27 21:28:06 -0400 2011
>Last-Modified:  Tue Sep 27 21:28:06 -0400 2011
>Originator:     Neil Toronto
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.1.3.10--2011-09-24(09b0a46/g)
>Environment:
unix "Linux schroder 2.6.38-11-generic #48-Ubuntu SMP Fri Jul 29 19:02:55 UTC 2011 x86_64 x86_64 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 412756952
Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()


Collections:
("/home/neil/.racket/5.1.3.10/collects"
 (non-existent-path))
("/home/neil/Documents/Projects/plt/racket/collects"
 ("wxme" "texpict" "compiler" "typed" "games" "algol60" "browser" "file" "readline" "dynext" "scribblings" "mzcom" "trace" "profile" "data" "sirmail" "parser-tools" "tex2page" "scriblib" "swindle" "schemeunit" "r6rs" "xrepl" "mzlib" "handin-client" "repo-time-stamp" "mysterx" "mrlib" "scheme" "combinator-parser" "html" "test-engine" "version" ".gitignore" "make" "ffi" "mzscheme" "picturing-programs" "hierlist" "teachpack" "at-exp" "lazy" "scribble" "openssl" "defaults" "racket" "handin-server" "2htdp" "drscheme" "help" "eopl" "racklog" "drracket" "icons" "db" "errortrace" "preprocessor" "rackunit" "rnrs" "string-constants" "meta" "slatex" "graphics" "redex" "reader" "plai" "honu" "config" "stepper" "frtime" "unstable" "r5rs" "planet" "tests" "s-exp" "embedded-gui" "info-domain" "guibuilder" "syntax" "launcher" "typed-scheme" "syntax-color" "srfi" "test-box-recovery" "xml" "plot" "datalog" "sgl" "htdp" "setup" "lang" "raco" "gui-debugger" "framework" "web-server" "deinprogram!
 m" "slideshow" "macro-debugger" "typed-racket" "net" "mred"))

Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #("-n" "--keep-titlebar") "#lang racket\n" #t #t))
>Description:
In some cases, defining a procedure as a keyword procedure causes the identifier to lose its lexical context. Or something. No idea, really. This is magic to me. Hopefully the steps to reproduce are reasonably minimal.
>How-To-Repeat:
#lang racket

(define-syntax (define/identity stx)
  (syntax-case stx ()
    [(_ (name . args) . body)
     (with-syntax ([identity  (datum->syntax stx 'identity)])
       #'(define (name . args)
           (define (identity x #:dummy [dummy #f]) x)
           (let () . body)))]))

(define/identity (add x y)
  (+ (identity x) (identity y)))


Run this; get:

    compile: identifier used out of context in: identity6


Remove the #:dummy keyword argument, and it compiles just fine.
>Fix:
>Audit-Trail:
From: Carl Eastlund <cce@plt-scheme.org>
To: neil.toronto@gmail.com, bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12231: Keyword procedure names lose identifier
 context... or something like that
Date: Sun, 25 Sep 2011 21:33:39 -0400

 The macro is a red herring.  I get the same results from this:
 
 #lang racket
 (define (add x y)
   (define (identity x #:dummy [dummy #f]) x)
   (+ (identity x) (identity y)))
 
 Carl Eastlund
 
 On Sun, Sep 25, 2011 at 9:16 PM,  <neil.toronto@gmail.com> wrote:
 > #lang racket
 >
 > (define-syntax (define/identity stx)
 >  (syntax-case stx ()
 >    [(_ (name . args) . body)
 >     (with-syntax ([identity  (datum->syntax stx 'identity)])
 >       #'(define (name . args)
 >           (define (identity x #:dummy [dummy #f]) x)
 >           (let () . body)))]))
 >
 > (define/identity (add x y)
 >  (+ (identity x) (identity y)))
 >
 >
 > Run this; get:
 >
 >    compile: identifier used out of context in: identity6
 >
 >
 > Remove the #:dummy keyword argument, and it compiles just fine.
 
Responsible changed from "nobody" to "mflatt" by mflatt@racket-lang.org at Tue, 27 Sep 2011 21:28:06 -0400
Reason>>> A commit by mflatt@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/2ae6d0c55f
State changed from "open" to "closed" by mflatt@racket-lang.org at Tue, 27 Sep 2011 21:28:06 -0400
Reason>>> A commit by mflatt@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/2ae6d0c55f
