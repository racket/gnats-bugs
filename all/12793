From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Fri May 25 06:32:38 2012
Received: from mail-vc0-f172.google.com (mail-vc0-f172.google.com [209.85.220.172])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id q4PAWZpt011831
	for <bugs@bugs.plt-scheme.org>; Fri, 25 May 2012 06:32:35 -0400
Message-Id: <201205251032.q4PAWVWb011825@champlain.ccs.neu.edu>
Date: Fri, 25 May 2012 06:32:31 -0400
From: manewstead@gmail.com
To: bugs@racket-lang.org
Subject: Racklog fails clause when called twice with different data, in a nested call setup

>Number:         12793
>Category:       all
>Synopsis:       Racklog fails clause when called twice with different data, in a nested call setup
>Class:          sw-bug
>Responsible:    jay
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Fri May 25 06:36:01 -0400 2012
>Closed-Date:    Mon May 28 12:36:58 -0400 2012
>Last-Modified:  Mon May 28 13:53:19 -0400 2012
>Originator:     Mark Newstead
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.2.1
>Environment:
macosx "Darwin mark-newsteads-macbook-pro.local 11.4.0 Darwin Kernel Version 11.4.0: Mon Apr  9 19:32:15 PDT 2012; root:xnu-1699.26.8~1/RELEASE_X86_64 x86_64" (x86_64-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 291018072
Links: (links) = ("txtadv"); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()


Collections:
("/Users/newstem/Library/Racket/5.2.1/collects"
 (non-existent-path))
("/Applications/Racket v5.2.1/collects"
 (".DS_Store" "2htdp" "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "data" "datalog" "db" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "help" "hierlist" "htdp" "html" "icons" "images" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "picturing-programs" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "redex" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tex2page" "texpict" "trace" "typed" "typed-racket" "typed-scheme" "unstable" "version" "web-server" "wxme" "xml" "xrepl"))

Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t))
>Description:
When %nounexpression is called on '(lazy cat) it succeeds as it should.
When called again on same data again it succeeds again, as it should.
When called again on '(lazy dog) it fails, but it should succeed.
The debugger says that the call to %adjective using 'lazy as data is failing, when nested inside the call to %nounexpression
>How-To-Repeat:
#lang racket
(require racklog)

(define %noun
   (%rel (tree xs xs1)
     [((cons 'animal 'dog) (cons 'dog  xs1) xs1)]  
     [((cons 'animal 'cat) (cons 'cat  xs1) xs1)]         
     ))
(define %adjective
   (%rel (a xs1)
     [ ((cons 'lazy  xs1) xs1)]  
     ))
(define %nounexpression
  (%let (s1 n1 nex1)
   (%rel (tree ne x1)
        [((list 'nex n1) ne x1)(%noun n1 ne x1)]
        [(nex1 ne x1)(%adjective ne s1)
         (%nounexpression nex1 s1 x1)]
        )))
(%which (tree a b) (%nounexpression tree '(lazy cat) b)) ;; succeeds as it should
(%which (tree a b) (%nounexpression tree '(lazy cat) b)) ;; succeeds as it should
(%which (tree a b) (%nounexpression tree '(lazy dog) b)) ;; fails when it should succeed---BUG
>Fix:
>Audit-Trail:
State changed from "open" to "closed" by jay at Mon, 28 May 2012 12:36:58 -0400
Reason>>> Actually, it is not an error. You put the %let around the
%nounexpression relation, rather than using the local
logical variables that get defined with a relation.
Therefore, the s1, n1, and nex1 logic variables were shared
between all invocations of %nounexpression, so when you
tried to call it again, the logic variable was already bound
to (cons 'animal 'cat). If you move those variables to the
%rel list (it will work fine.)

I checked the docs and noticed that the reference does not
mention the mention of the those variables (although the
guide does), so I added the appropriate text.

From: Mark Newstead <manewstead@gmail.com>
To: nobody@racket-lang.org, manewstead@gmail.com, bugs@racket-lang.org,
        bug-notification@racket-lang.org
Cc: 
Subject: Re: all/12793: Racklog fails clause when called twice with different data, in a nested call setup
Date: Mon, 28 May 2012 18:47:02 +0100

 %3Fcmd%3Dview%2520audit-trail%26database%3Ddefault%26pr%3D12793 
 
 thanks for the correction. I assumed incorrectly that the %let was required for local vars and %rel was only for variable bindings. 
 It is a shame that there are so few racklog examples out there  in the docs and on the web, to help us figure these things out.
 
 
 
 
 
 
 
 
 
 
Responsible changed from "nobody" to "jay" by jay@racket-lang.org at Mon, 28 May 2012 13:53:19 -0400
Reason>>> A commit by jay@racket-lang.org was marked as relevant
  http://git.racket-lang.org/plt/commit/c75360957c
