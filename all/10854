From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Sat Apr 10 11:42:59 2010
Received: from mail-gw0-f44.google.com (mail-gw0-f44.google.com [74.125.83.44])
	by champlain.ccs.neu.edu (8.14.3/8.14.3) with ESMTP id o3AFgvx6032444
	for <bugs@bugs.plt-scheme.org>; Sat, 10 Apr 2010 11:42:57 -0400
Message-Id: <201004101542.o3AFgs5H032436@champlain.ccs.neu.edu>
Date: Sat, 10 Apr 2010 11:42:54 -0400
From: wand@ccs.neu.edu
To: bugs@plt-scheme.org
Subject: Can't name a method on-tick

>Number:         10854
>Category:       all
>Synopsis:       Can't name a method on-tick
>Class:          sw-bug
>Responsible:    matthias
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Sat Apr 10 11:44:01 -0400 2010
>Closed-Date:    Tue Apr 13 10:16:14 -0400 2010
>Last-Modified:  Tue Apr 13 10:16:14 -0400 2010
>Originator:     Mitchell Wand
>Organization:
plt
>Submitter-Id:   unknown
>Release:        4.2.5
>Environment:
windows "Windows NT 6.0 (Build 6002) Service Pack 2" (win32\i386\3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 151003856

Collections:
(("C:\\Users\\Mitch\\AppData\\Roaming\\PLT Scheme\\4.2.5\\collects" non-existent-path) ("C:\\Program Files\\PLT\\4.2.5\\collects" "2htdp" "afm" "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "defaults" "deinprogramm" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "help" "hierlist" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "reader" "readline" "redex" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tex2page" "texpict" "trace" "typed" "typed-scheme" "unstable" "version" "web-server" "wxme" "xml"))
Computer Language: (("Determine language from source") (#(#t write mixed-fraction-e #f #t debug) (default) #() "#lang scheme\n" #f))
>Description:
Using 2htdp/universe, when I put a big-bang in a class where there is an on-tick method, I get

on-tick: not a legal clause in a world description
>How-To-Repeat:
#lang scheme

(require 2htdp/universe)

 
   (define small-world%
    (class object%   
     
      (define (on-tick-fn w) 
        (send this on-tick) 
        (+ w 1)) 
      
      (define/public (run)         
        (big-bang 0 (on-tick on-tick-fn)))

      (define/public (on-tick) this)
      

      (super-new)

      ))
      

;; renaming the on-tick method to on-tick-method eliminates the error.
>Fix:
>Audit-Trail:
Responsible changed from "nobody" to "matthias" by matthias at Sat, 10 Apr 2010 12:00:59 -0400
Reason>>> .

State changed from "open" to "closed" by matthias at Sat, 10 Apr 2010 12:00:59 -0400
Reason>>> I don't know what to do and consider this a very minor problem. 

From: Matthew Flatt <mflatt@cs.utah.edu>
To: wand@ccs.neu.edu
Cc: Matthias Felleisen <matthias@ccs.neu.edu>, bugs@plt-scheme.org
Subject: Re: [plt-bug] all/10854: Can't name a method on-tick
Date: Sat, 10 Apr 2010 10:03:17 -0600

 FWIW, one way to avoid shadowing `on-tick' in the example is to use a
 different internal name for the method while leaving the external name
 the same:
 
    (define small-world%
     (class object%   
       .... 
       (public [on-tick*  ; local binding is `on-tick*',
                on-tick]) ; external method name is `on-tick'
       (define (on-tick*) this)
       ....))
 
 
 At Sat, 10 Apr 2010 12:00:14 -0400, Matthias Felleisen wrote:
 > 
 > Here is an even simpler program that issues such an error message: 
 > 
 > #lang scheme
 > (require 2htdp/universe)
 > (local ((define (run) (big-bang 0 (on-tick on-tick)))
 >         (define (on-tick t) 0))
 >   10) ;; it won't work globally because you can't module-define an imported 
 > name 
 > 
 > 
 > The binding for the on-tick function takes over the binding for the on-tick 
 > keyword (hey this is Scheme) and therefore big-bang doesn't recognize the 
 > local on-tick binding as the one that is exported from the universe library. 
 > Of course, at the same time the error message just uses the print-name of the 
 > symbol and therefore the error message looks odd. 
 > 
 > You get a similar error message when you misspell on-tick: 
 > 
 > #lang scheme
 > (require 2htdp/universe)
 > (define (run) (big-bang 0 (on-tic add1)))
 > 
 > ;; --- 
 > 
 > Yaron Minsky pointed out a neat feature in ML yesterday: import names from a 
 > module for a very specific lexical scope. Perhaps that would help here. 
 > 
 > -- Matthias
 > 
 > 
 > 
 > 
 > 
 > 
 > 
 > On Apr 10, 2010, at 11:44 AM, wand@ccs.neu.edu wrote:
 > 
 > > A new problem report is waiting at
 > >  http://bugs.plt-scheme.org/query/?cmd=view&pr=10854
 > > 
 > > Reported by Mitchell Wand for release: 4.2.5
 > > 
 > > *** Description:
 > > Using 2htdp/universe, when I put a big-bang in a class where there is an 
 > on-tick method, I get
 > > 
 > > on-tick: not a legal clause in a world description
 > > 
 > > *** How to repeat:
 > > #lang scheme
 > > 
 > > (require 2htdp/universe)
 > > 
 > > 
 > >   (define small-world%
 > >    (class object%   
 > > 
 > >      (define (on-tick-fn w) 
 > >        (send this on-tick) 
 > >        (+ w 1)) 
 > > 
 > >      (define/public (run)         
 > >        (big-bang 0 (on-tick on-tick-fn)))
 > > 
 > >      (define/public (on-tick) this)
 > > 
 > > 
 > >      (super-new)
 > > 
 > >      ))
 > > 
 > > 
 > > ;; renaming the on-tick method to on-tick-method eliminates the error.
 > > 
 > > *** Environment:
 > > windows "Windows NT 6.0 (Build 6002) Service Pack 2" (win32\i386\3m) 
 > (get-display-depth) = 32
 > > Human Language: english
 > > (current-memory-use) 151003856
 > > 
 > > Collections:
 > > (("C:\\Users\\Mitch\\AppData\\Roaming\\PLT Scheme\\4.2.5\\collects" 
 > non-existent-path) ("C:\\Program Files\\PLT\\4.2.5\\collects" "2htdp" "afm" 
 > "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" 
 > "defaults" "deinprogramm" "drscheme" "dynext" "embedded-gui" "eopl" 
 > "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" 
 > "gui-debugger" "help" "hierlist" "htdp" "html" "icons" "info-domain" "lang" 
 > "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" 
 > "mzlib" "mzscheme" "net" "openssl" "parser-tools" "plai" "planet" "plot" 
 > "preprocessor" "profile" "r5rs" "r6rs" "reader" "readline" "redex" "rnrs" 
 > "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" 
 > "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" 
 > "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" 
 > "tex2page" "texpict" "trace" "typed" "typed-scheme" "unstable" "version" 
 > "web-server" "wxme" "xml"))
 > > Computer Language: (("Determine language from source") (#(#t write 
 > mixed-fraction-e #f #t debug) (default) #() "#lang scheme\n" #f))
 > > 
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: wand@ccs.neu.edu, bugs@plt-scheme.org
Cc: nobody@plt-scheme.org, bug-notification@plt-scheme.org
Subject: Re: [plt-bug] all/10854: Can't name a method on-tick
Date: Sat, 10 Apr 2010 12:00:14 -0400

 Here is an even simpler program that issues such an error message:=20
 
 #lang scheme
 (require 2htdp/universe)
 (local ((define (run) (big-bang 0 (on-tick on-tick)))
         (define (on-tick t) 0))
   10) ;; it won't work globally because you can't module-define an =
 imported name=20
 
 
 The binding for the on-tick function takes over the binding for the =
 on-tick keyword (hey this is Scheme) and therefore big-bang doesn't =
 recognize the local on-tick binding as the one that is exported from the =
 universe library. Of course, at the same time the error message just =
 uses the print-name of the symbol and therefore the error message looks =
 odd.=20
 
 You get a similar error message when you misspell on-tick:=20
 
 #lang scheme
 (require 2htdp/universe)
 (define (run) (big-bang 0 (on-tic add1)))
 
 ;; ---=20
 
 Yaron Minsky pointed out a neat feature in ML yesterday: import names =
 from a module for a very specific lexical scope. Perhaps that would help =
 here.=20
 
 -- Matthias
 
 
 
 
 
 
 
 On Apr 10, 2010, at 11:44 AM, wand@ccs.neu.edu wrote:
 
 > A new problem report is waiting at
 >  http://bugs.plt-scheme.org/query/?cmd=3Dview&pr=3D10854
 >=20
 > Reported by Mitchell Wand for release: 4.2.5
 >=20
 > *** Description:
 > Using 2htdp/universe, when I put a big-bang in a class where there is =
 an on-tick method, I get
 >=20
 > on-tick: not a legal clause in a world description
 >=20
 > *** How to repeat:
 > #lang scheme
 >=20
 > (require 2htdp/universe)
 >=20
 >=20
 >   (define small-world%
 >    (class object%  =20
 >=20
 >      (define (on-tick-fn w)=20
 >        (send this on-tick)=20
 >        (+ w 1))=20
 >=20
 >      (define/public (run)        =20
 >        (big-bang 0 (on-tick on-tick-fn)))
 >=20
 >      (define/public (on-tick) this)
 >=20
 >=20
 >      (super-new)
 >=20
 >      ))
 >=20
 >=20
 > ;; renaming the on-tick method to on-tick-method eliminates the error.
 >=20
 > *** Environment:
 > windows "Windows NT 6.0 (Build 6002) Service Pack 2" (win32\i386\3m) =
 (get-display-depth) =3D 32
 > Human Language: english
 > (current-memory-use) 151003856
 >=20
 > Collections:
 > (("C:\\Users\\Mitch\\AppData\\Roaming\\PLT Scheme\\4.2.5\\collects" =
 non-existent-path) ("C:\\Program Files\\PLT\\4.2.5\\collects" "2htdp" =
 "afm" "algol60" "at-exp" "browser" "combinator-parser" "compiler" =
 "config" "defaults" "deinprogramm" "drscheme" "dynext" "embedded-gui" =
 "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" =
 "gui-debugger" "help" "hierlist" "htdp" "html" "icons" "info-domain" =
 "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" =
 "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" =
 "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "reader" =
 "readline" "redex" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" =
 "scribblings" "scriblib" "setup" "sgl" "slatex" "slideshow" "srfi" =
 "stepper" "string-constants" "swindle" "syntax" "syntax-color" =
 "teachpack" "test-box-recovery" "test-engine" "tex2page" "texpict" =
 "trace" "typed" "typed-scheme" "unstable" "version" "web-server" "wxme" =
 "xml"))
 > Computer Language: (("Determine language from source") (#(#t write =
 mixed-fraction-e #f #t debug) (default) #() "#lang scheme\n" #f))
 >=20
 
From: Matthew Flatt <mflatt@cs.utah.edu>
To: wand@ccs.neu.edu
Cc: Matthias Felleisen <matthias@ccs.neu.edu>, bugs@plt-scheme.org
Subject: Re: [plt-bug] all/10854: Can't name a method on-tick
Date: Sat, 10 Apr 2010 10:08:25 -0600

 At Sat, 10 Apr 2010 12:00:14 -0400, Matthias Felleisen wrote:
 > Yaron Minsky pointed out a neat feature in ML yesterday: import names from a 
 > module for a very specific lexical scope. Perhaps that would help here. 
 
 Oh, that may be a better idea. You need `local-require', which Carl has
 implemented:
 
   #lang scheme
 
   (require (planet cce/scheme/require-provide)) ; for `local-require'
  
    (define small-world%
     (class object%   
      
       (define (on-tick-fn w) 
         (send this on-tick) 
         (+ w 1)) 
       
       (define/public (run) 
         (local-require 2htdp/universe)
         (big-bang 0 (on-tick on-tick-fn)))
 
       (public [on-tick* on-tick])
       (define (on-tick*) this)
       
 
       (super-new)
 
       ))
 
From: Robby Findler <robby@eecs.northwestern.edu>
To: bugs@plt-scheme.org
Cc: matthias@plt-scheme.org, nobody@plt-scheme.org,
        bug-notification@plt-scheme.org, wand@ccs.neu.edu
Subject: Re: [plt-bug] all/10854 Can't name a method on-tick
Date: Sat, 10 Apr 2010 13:31:12 -0500

 You might at least improve the error message in the case that the
 symbolic name is "on-tick" but the binding is wrong.
 
 Robbby
 
 On Sat, Apr 10, 2010 at 11:01 AM,  <matthias@plt-scheme.org> wrote:
 >
 > Responsible changed from "nobody" to "matthias" by matthias at Sat, 10 Ap=
 r 2010 12:00:59 -0400
 > Reason>>> .
 >
 > State changed from "open" to "closed" by matthias at Sat, 10 Apr 2010 12:=
 00:59 -0400
 > Reason>>> I don't know what to do and consider this a very minor problem.
 >
 >
 > View:
 > =C2=A0http://bugs.plt-scheme.org/query/?cmd=3Dview&pr=3D10854
 >
 >

State changed from "closed" to "analyzed" by matthias at Sat, 10 Apr 2010 14:51:59 -0400
Reason>>> Improve the error message when the binding is wrong but the printname is one 
of the keywords. 

From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: bugs@plt-scheme.org, matthias@plt-scheme.org, nobody@plt-scheme.org,
        bug-notification@plt-scheme.org, wand@ccs.neu.edu
Subject: Re: [plt-bug] all/10854 Can't name a method on-tick
Date: Sat, 10 Apr 2010 14:50:42 -0400

 Good idea.=20
 
 
 On Apr 10, 2010, at 2:31 PM, Robby Findler wrote:
 
 > You might at least improve the error message in the case that the
 > symbolic name is "on-tick" but the binding is wrong.
 >=20
 > Robbby
 >=20
 > On Sat, Apr 10, 2010 at 11:01 AM,  <matthias@plt-scheme.org> wrote:
 >>=20
 >> Responsible changed from "nobody" to "matthias" by matthias at Sat, =
 10 Apr 2010 12:00:59 -0400
 >> Reason>>> .
 >>=20
 >> State changed from "open" to "closed" by matthias at Sat, 10 Apr 2010 =
 12:00:59 -0400
 >> Reason>>> I don't know what to do and consider this a very minor =
 problem.
 >>=20
 >>=20
 >> View:
 >>  http://bugs.plt-scheme.org/query/?cmd=3Dview&pr=3D10854
 >>=20
 >>=20
 
From: Matthew Flatt <mflatt@cs.utah.edu>
To: Mitchell Wand <wand@ccs.neu.edu>
Cc: Matthias Felleisen <matthias@ccs.neu.edu>, bugs <bugs@plt-scheme.org>,
        nobody <nobody@plt-scheme.org>,
        bug-notification <bug-notification@plt-scheme.org>,
        David Herman <dherman@ccs.neu.edu>
Subject: Re: [plt-bug] all/10854: Can't name a method on-tick
Date: Sat, 10 Apr 2010 13:30:00 -0600

 It isn't different; try `(let ([else #f]) ...)'.
 
 At Sat, 10 Apr 2010 15:28:13 -0400, Mitchell Wand wrote:
 > Why should "on-tick" be different from "else", as in
 > 
 > (define (foo)
 >   (let ((else 11))
 >     (cond
 >       (else (+ else 8)))))
 > 
 > --Mitch
 > 
 > On Sat, Apr 10, 2010 at 12:00 PM, Matthias Felleisen
 > <matthias@ccs.neu.edu>wrote:
 > 
 > >
 > > Here is an even simpler program that issues such an error message:
 > >
 > > #lang scheme
 > > (require 2htdp/universe)
 > > (local ((define (run) (big-bang 0 (on-tick on-tick)))
 > >        (define (on-tick t) 0))
 > >  10) ;; it won't work globally because you can't module-define an imported
 > > name
 > >
 > >
 > > The binding for the on-tick function takes over the binding for the on-tick
 > > keyword (hey this is Scheme) and therefore big-bang doesn't recognize the
 > > local on-tick binding as the one that is exported from the universe library.
 > > Of course, at the same time the error message just uses the print-name of
 > > the symbol and therefore the error message looks odd.
 > >
 > > You get a similar error message when you misspell on-tick:
 > >
 > > #lang scheme
 > > (require 2htdp/universe)
 > > (define (run) (big-bang 0 (on-tic add1)))
 > >
 > > ;; ---
 > >
 > > Yaron Minsky pointed out a neat feature in ML yesterday: import names from
 > > a module for a very specific lexical scope. Perhaps that would help here.
 > >
 > > -- Matthias
 > >
 > >
 > >
 > >
 > >
 > >
 > >
 > > On Apr 10, 2010, at 11:44 AM, wand@ccs.neu.edu wrote:
 > >
 > > > A new problem report is waiting at
 > > >  http://bugs.plt-scheme.org/query/?cmd=view&pr=10854
 > > >
 > > > Reported by Mitchell Wand for release: 4.2.5
 > > >
 > > > *** Description:
 > > > Using 2htdp/universe, when I put a big-bang in a class where there is an
 > > on-tick method, I get
 > > >
 > > > on-tick: not a legal clause in a world description
 > > >
 > > > *** How to repeat:
 > > > #lang scheme
 > > >
 > > > (require 2htdp/universe)
 > > >
 > > >
 > > >   (define small-world%
 > > >    (class object%
 > > >
 > > >      (define (on-tick-fn w)
 > > >        (send this on-tick)
 > > >        (+ w 1))
 > > >
 > > >      (define/public (run)
 > > >        (big-bang 0 (on-tick on-tick-fn)))
 > > >
 > > >      (define/public (on-tick) this)
 > > >
 > > >
 > > >      (super-new)
 > > >
 > > >      ))
 > > >
 > > >
 > > > ;; renaming the on-tick method to on-tick-method eliminates the error.
 > > >
 > > > *** Environment:
 > > > windows "Windows NT 6.0 (Build 6002) Service Pack 2" (win32\i386\3m)
 > > (get-display-depth) = 32
 > > > Human Language: english
 > > > (current-memory-use) 151003856
 > > >
 > > > Collections:
 > > > (("C:\\Users\\Mitch\\AppData\\Roaming\\PLT Scheme\\4.2.5\\collects"
 > > non-existent-path) ("C:\\Program Files\\PLT\\4.2.5\\collects" "2htdp" "afm"
 > > "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config"
 > > "defaults" "deinprogramm" "drscheme" "dynext" "embedded-gui" "eopl"
 > > "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics"
 > > "gui-debugger" "help" "hierlist" "htdp" "html" "icons" "info-domain" "lang"
 > > "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom"
 > > "mzlib" "mzscheme" "net" "openssl" "parser-tools" "plai" "planet" "plot"
 > > "preprocessor" "profile" "r5rs" "r6rs" "reader" "readline" "redex" "rnrs"
 > > "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup"
 > > "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle"
 > > "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine"
 > > "tex2page" "texpict" "trace" "typed" "typed-scheme" "unstable" "version"
 > > "web-server" "wxme" "xml"))
 > > > Computer Language: (("Determine language from source") (#(#t write
 > > mixed-fraction-e #f #t debug) (default) #() "#lang scheme\n" #f))
 > > >
 > >
 > >
 > >
From: Robby Findler <robby@eecs.northwestern.edu>
To: Mitchell Wand <wand@ccs.neu.edu>
Cc: Matthias Felleisen <matthias@ccs.neu.edu>, bugs <bugs@plt-scheme.org>,
        nobody <nobody@plt-scheme.org>,
        bug-notification <bug-notification@plt-scheme.org>,
        David Herman <dherman@ccs.neu.edu>
Subject: Re: [plt-bug] all/10854: Can't name a method on-tick
Date: Sat, 10 Apr 2010 14:30:21 -0500

 It is the same, but this example doesn't help to understand that. In
 that program else is bound to 11, which is a true value. Try this one:
 
 #lang scheme
 
 (printf "~s\n"
         (let ((else #f))
           (cond
             [#f 'not-going-to-take-this-case]
             [else 'took-the-else-case])))
 
 
 
 
 
 On Sat, Apr 10, 2010 at 2:28 PM, Mitchell Wand <wand@ccs.neu.edu> wrote:
 > Why should "on-tick" be different from "else", as in
 >
 > (define (foo)
 > =C2=A0 (let ((else 11))
 > =C2=A0=C2=A0=C2=A0 (cond
 > =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 (else (+ else 8)))))
 >
 > --Mitch
 >
 > On Sat, Apr 10, 2010 at 12:00 PM, Matthias Felleisen <matthias@ccs.neu.ed=
 u>
 > wrote:
 >>
 >> Here is an even simpler program that issues such an error message:
 >>
 >> #lang scheme
 >> (require 2htdp/universe)
 >> (local ((define (run) (big-bang 0 (on-tick on-tick)))
 >> =C2=A0 =C2=A0 =C2=A0 =C2=A0(define (on-tick t) 0))
 >> =C2=A010) ;; it won't work globally because you can't module-define an i=
 mported
 >> name
 >>
 >>
 >> The binding for the on-tick function takes over the binding for the
 >> on-tick keyword (hey this is Scheme) and therefore big-bang doesn't
 >> recognize the local on-tick binding as the one that is exported from the
 >> universe library. Of course, at the same time the error message just use=
 s
 >> the print-name of the symbol and therefore the error message looks odd.
 >>
 >> You get a similar error message when you misspell on-tick:
 >>
 >> #lang scheme
 >> (require 2htdp/universe)
 >> (define (run) (big-bang 0 (on-tic add1)))
 >>
 >> ;; ---
 >>
 >> Yaron Minsky pointed out a neat feature in ML yesterday: import names fr=
 om
 >> a module for a very specific lexical scope. Perhaps that would help here=
 .
 >>
 >> -- Matthias
 >>
 >>
 >>
 >>
 >>
 >>
 >>
 >> On Apr 10, 2010, at 11:44 AM, wand@ccs.neu.edu wrote:
 >>
 >> > A new problem report is waiting at
 >> > =C2=A0http://bugs.plt-scheme.org/query/?cmd=3Dview&pr=3D10854
 >> >
 >> > Reported by Mitchell Wand for release: 4.2.5
 >> >
 >> > *** Description:
 >> > Using 2htdp/universe, when I put a big-bang in a class where there is =
 an
 >> > on-tick method, I get
 >> >
 >> > on-tick: not a legal clause in a world description
 >> >
 >> > *** How to repeat:
 >> > #lang scheme
 >> >
 >> > (require 2htdp/universe)
 >> >
 >> >
 >> > =C2=A0 (define small-world%
 >> > =C2=A0 =C2=A0(class object%
 >> >
 >> > =C2=A0 =C2=A0 =C2=A0(define (on-tick-fn w)
 >> > =C2=A0 =C2=A0 =C2=A0 =C2=A0(send this on-tick)
 >> > =C2=A0 =C2=A0 =C2=A0 =C2=A0(+ w 1))
 >> >
 >> > =C2=A0 =C2=A0 =C2=A0(define/public (run)
 >> > =C2=A0 =C2=A0 =C2=A0 =C2=A0(big-bang 0 (on-tick on-tick-fn)))
 >> >
 >> > =C2=A0 =C2=A0 =C2=A0(define/public (on-tick) this)
 >> >
 >> >
 >> > =C2=A0 =C2=A0 =C2=A0(super-new)
 >> >
 >> > =C2=A0 =C2=A0 =C2=A0))
 >> >
 >> >
 >> > ;; renaming the on-tick method to on-tick-method eliminates the error.
 >> >
 >> > *** Environment:
 >> > windows "Windows NT 6.0 (Build 6002) Service Pack 2" (win32\i386\3m)
 >> > (get-display-depth) =3D 32
 >> > Human Language: english
 >> > (current-memory-use) 151003856
 >> >
 >> > Collections:
 >> > (("C:\\Users\\Mitch\\AppData\\Roaming\\PLT Scheme\\4.2.5\\collects"
 >> > non-existent-path) ("C:\\Program Files\\PLT\\4.2.5\\collects" "2htdp" =
 "afm"
 >> > "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config"
 >> > "defaults" "deinprogramm" "drscheme" "dynext" "embedded-gui" "eopl"
 >> > "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics"
 >> > "gui-debugger" "help" "hierlist" "htdp" "html" "icons" "info-domain" "=
 lang"
 >> > "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mz=
 com"
 >> > "mzlib" "mzscheme" "net" "openssl" "parser-tools" "plai" "planet" "plo=
 t"
 >> > "preprocessor" "profile" "r5rs" "r6rs" "reader" "readline" "redex" "rn=
 rs"
 >> > "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "set=
 up"
 >> > "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindl=
 e"
 >> > "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine"
 >> > "tex2page" "texpict" "trace" "typed" "typed-scheme" "unstable" "versio=
 n"
 >> > "web-server" "wxme" "xml"))
 >> > Computer Language: (("Determine language from source") (#(#t write
 >> > mixed-fraction-e #f #t debug) (default) #() "#lang scheme\n" #f))
 >> >
 >>
 >>
 >
 >
From: Mitchell Wand <wand@ccs.neu.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: bugs <bugs@plt-scheme.org>, nobody <nobody@plt-scheme.org>,
        bug-notification <bug-notification@plt-scheme.org>,
        David Herman <dherman@ccs.neu.edu>
Subject: Re: [plt-bug] all/10854: Can't name a method on-tick
Date: Sat, 10 Apr 2010 15:28:13 -0400

 --001485f91b24badd9d0483e6e946
 Content-Type: text/plain; charset=ISO-8859-1
 
 Why should "on-tick" be different from "else", as in
 
 (define (foo)
   (let ((else 11))
     (cond
       (else (+ else 8)))))
 
 --Mitch
 
 On Sat, Apr 10, 2010 at 12:00 PM, Matthias Felleisen
 <matthias@ccs.neu.edu>wrote:
 
 >
 > Here is an even simpler program that issues such an error message:
 >
 > #lang scheme
 > (require 2htdp/universe)
 > (local ((define (run) (big-bang 0 (on-tick on-tick)))
 >        (define (on-tick t) 0))
 >  10) ;; it won't work globally because you can't module-define an imported
 > name
 >
 >
 > The binding for the on-tick function takes over the binding for the on-tick
 > keyword (hey this is Scheme) and therefore big-bang doesn't recognize the
 > local on-tick binding as the one that is exported from the universe library.
 > Of course, at the same time the error message just uses the print-name of
 > the symbol and therefore the error message looks odd.
 >
 > You get a similar error message when you misspell on-tick:
 >
 > #lang scheme
 > (require 2htdp/universe)
 > (define (run) (big-bang 0 (on-tic add1)))
 >
 > ;; ---
 >
 > Yaron Minsky pointed out a neat feature in ML yesterday: import names from
 > a module for a very specific lexical scope. Perhaps that would help here.
 >
 > -- Matthias
 >
 >
 >
 >
 >
 >
 >
 > On Apr 10, 2010, at 11:44 AM, wand@ccs.neu.edu wrote:
 >
 > > A new problem report is waiting at
 > >  http://bugs.plt-scheme.org/query/?cmd=view&pr=10854
 > >
 > > Reported by Mitchell Wand for release: 4.2.5
 > >
 > > *** Description:
 > > Using 2htdp/universe, when I put a big-bang in a class where there is an
 > on-tick method, I get
 > >
 > > on-tick: not a legal clause in a world description
 > >
 > > *** How to repeat:
 > > #lang scheme
 > >
 > > (require 2htdp/universe)
 > >
 > >
 > >   (define small-world%
 > >    (class object%
 > >
 > >      (define (on-tick-fn w)
 > >        (send this on-tick)
 > >        (+ w 1))
 > >
 > >      (define/public (run)
 > >        (big-bang 0 (on-tick on-tick-fn)))
 > >
 > >      (define/public (on-tick) this)
 > >
 > >
 > >      (super-new)
 > >
 > >      ))
 > >
 > >
 > > ;; renaming the on-tick method to on-tick-method eliminates the error.
 > >
 > > *** Environment:
 > > windows "Windows NT 6.0 (Build 6002) Service Pack 2" (win32\i386\3m)
 > (get-display-depth) = 32
 > > Human Language: english
 > > (current-memory-use) 151003856
 > >
 > > Collections:
 > > (("C:\\Users\\Mitch\\AppData\\Roaming\\PLT Scheme\\4.2.5\\collects"
 > non-existent-path) ("C:\\Program Files\\PLT\\4.2.5\\collects" "2htdp" "afm"
 > "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config"
 > "defaults" "deinprogramm" "drscheme" "dynext" "embedded-gui" "eopl"
 > "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics"
 > "gui-debugger" "help" "hierlist" "htdp" "html" "icons" "info-domain" "lang"
 > "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom"
 > "mzlib" "mzscheme" "net" "openssl" "parser-tools" "plai" "planet" "plot"
 > "preprocessor" "profile" "r5rs" "r6rs" "reader" "readline" "redex" "rnrs"
 > "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup"
 > "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle"
 > "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine"
 > "tex2page" "texpict" "trace" "typed" "typed-scheme" "unstable" "version"
 > "web-server" "wxme" "xml"))
 > > Computer Language: (("Determine language from source") (#(#t write
 > mixed-fraction-e #f #t debug) (default) #() "#lang scheme\n" #f))
 > >
 >
 >
 >
 
 --001485f91b24badd9d0483e6e946
 Content-Type: text/html; charset=ISO-8859-1
 Content-Transfer-Encoding: quoted-printable
 
 Why should &quot;on-tick&quot; be different from &quot;else&quot;, as in <b=
 r><br>(define (foo)<br>=A0 (let ((else 11))<br>=A0=A0=A0 (cond<br>=A0=A0=A0=
 =A0=A0 (else (+ else 8)))))<br><br>--Mitch<br><br><div class=3D"gmail_quote=
 ">On Sat, Apr 10, 2010 at 12:00 PM, Matthias Felleisen <span dir=3D"ltr">&l=
 t;<a href=3D"mailto:matthias@ccs.neu.edu">matthias@ccs.neu.edu</a>&gt;</spa=
 n> wrote:<br>
 <blockquote class=3D"gmail_quote" style=3D"margin: 0pt 0pt 0pt 0.8ex; borde=
 r-left: 1px solid rgb(204, 204, 204); padding-left: 1ex;"><br>
 Here is an even simpler program that issues such an error message:<br>
 <br>
 #lang scheme<br>
 (require 2htdp/universe)<br>
 (local ((define (run) (big-bang 0 (on-tick on-tick)))<br>
  =A0 =A0 =A0 =A0(define (on-tick t) 0))<br>
  =A010) ;; it won&#39;t work globally because you can&#39;t module-define a=
 n imported name<br>
 <br>
 <br>
 The binding for the on-tick function takes over the binding for the on-tick=
  keyword (hey this is Scheme) and therefore big-bang doesn&#39;t recognize =
 the local on-tick binding as the one that is exported from the universe lib=
 rary. Of course, at the same time the error message just uses the print-nam=
 e of the symbol and therefore the error message looks odd.<br>
 
 <br>
 You get a similar error message when you misspell on-tick:<br>
 <br>
 #lang scheme<br>
 (require 2htdp/universe)<br>
 (define (run) (big-bang 0 (on-tic add1)))<br>
 <br>
 ;; ---<br>
 <br>
 Yaron Minsky pointed out a neat feature in ML yesterday: import names from =
 a module for a very specific lexical scope. Perhaps that would help here.<b=
 r>
 <br>
 -- Matthias<br>
 <br>
 <br>
 <br>
 <br>
 <br>
 <br>
 <br>
 On Apr 10, 2010, at 11:44 AM, <a href=3D"mailto:wand@ccs.neu.edu">wand@ccs.=
 neu.edu</a> wrote:<br>
 <br>
 &gt; A new problem report is waiting at<br>
 <div class=3D"im">&gt; =A0<a href=3D"http://bugs.plt-scheme.org/query/?cmd=
 =3Dview&amp;pr=3D10854" target=3D"_blank">http://bugs.plt-scheme.org/query/=
 ?cmd=3Dview&amp;pr=3D10854</a><br>
 &gt;<br>
 </div>&gt; Reported by Mitchell Wand for release: 4.2.5<br>
 &gt;<br>
 &gt; *** Description:<br>
 &gt; Using 2htdp/universe, when I put a big-bang in a class where there is =
 an on-tick method, I get<br>
 &gt;<br>
 &gt; on-tick: not a legal clause in a world description<br>
 &gt;<br>
 &gt; *** How to repeat:<br>
 &gt; #lang scheme<br>
 &gt;<br>
 &gt; (require 2htdp/universe)<br>
 &gt;<br>
 &gt;<br>
 &gt; =A0 (define small-world%<br>
 &gt; =A0 =A0(class object%<br>
 &gt;<br>
 &gt; =A0 =A0 =A0(define (on-tick-fn w)<br>
 &gt; =A0 =A0 =A0 =A0(send this on-tick)<br>
 &gt; =A0 =A0 =A0 =A0(+ w 1))<br>
 &gt;<br>
 &gt; =A0 =A0 =A0(define/public (run)<br>
 &gt; =A0 =A0 =A0 =A0(big-bang 0 (on-tick on-tick-fn)))<br>
 &gt;<br>
 &gt; =A0 =A0 =A0(define/public (on-tick) this)<br>
 &gt;<br>
 &gt;<br>
 &gt; =A0 =A0 =A0(super-new)<br>
 &gt;<br>
 &gt; =A0 =A0 =A0))<br>
 &gt;<br>
 &gt;<br>
 &gt; ;; renaming the on-tick method to on-tick-method eliminates the error.=
 <br>
 &gt;<br>
 &gt; *** Environment:<br>
 &gt; windows &quot;Windows NT 6.0 (Build 6002) Service Pack 2&quot; (win32\=
 i386\3m) (get-display-depth) =3D 32<br>
 &gt; Human Language: english<br>
 &gt; (current-memory-use) 151003856<br>
 &gt;<br>
 &gt; Collections:<br>
 &gt; ((&quot;C:\\Users\\Mitch\\AppData\\Roaming\\PLT Scheme\\4.2.5\\collect=
 s&quot; non-existent-path) (&quot;C:\\Program Files\\PLT\\4.2.5\\collects&q=
 uot; &quot;2htdp&quot; &quot;afm&quot; &quot;algol60&quot; &quot;at-exp&quo=
 t; &quot;browser&quot; &quot;combinator-parser&quot; &quot;compiler&quot; &=
 quot;config&quot; &quot;defaults&quot; &quot;deinprogramm&quot; &quot;drsch=
 eme&quot; &quot;dynext&quot; &quot;embedded-gui&quot; &quot;eopl&quot; &quo=
 t;errortrace&quot; &quot;ffi&quot; &quot;file&quot; &quot;framework&quot; &=
 quot;frtime&quot; &quot;games&quot; &quot;graphics&quot; &quot;gui-debugger=
 &quot; &quot;help&quot; &quot;hierlist&quot; &quot;htdp&quot; &quot;html&qu=
 ot; &quot;icons&quot; &quot;info-domain&quot; &quot;lang&quot; &quot;launch=
 er&quot; &quot;lazy&quot; &quot;macro-debugger&quot; &quot;make&quot; &quot=
 ;mred&quot; &quot;mrlib&quot; &quot;mysterx&quot; &quot;mzcom&quot; &quot;m=
 zlib&quot; &quot;mzscheme&quot; &quot;net&quot; &quot;openssl&quot; &quot;p=
 arser-tools&quot; &quot;plai&quot; &quot;planet&quot; &quot;plot&quot; &quo=
 t;preprocessor&quot; &quot;profile&quot; &quot;r5rs&quot; &quot;r6rs&quot; =
 &quot;reader&quot; &quot;readline&quot; &quot;redex&quot; &quot;rnrs&quot; =
 &quot;s-exp&quot; &quot;scheme&quot; &quot;schemeunit&quot; &quot;scribble&=
 quot; &quot;scribblings&quot; &quot;scriblib&quot; &quot;setup&quot; &quot;=
 sgl&quot; &quot;slatex&quot; &quot;slideshow&quot; &quot;srfi&quot; &quot;s=
 tepper&quot; &quot;string-constants&quot; &quot;swindle&quot; &quot;syntax&=
 quot; &quot;syntax-color&quot; &quot;teachpack&quot; &quot;test-box-recover=
 y&quot; &quot;test-engine&quot; &quot;tex2page&quot; &quot;texpict&quot; &q=
 uot;trace&quot; &quot;typed&quot; &quot;typed-scheme&quot; &quot;unstable&q=
 uot; &quot;version&quot; &quot;web-server&quot; &quot;wxme&quot; &quot;xml&=
 quot;))<br>
 
 &gt; Computer Language: ((&quot;Determine language from source&quot;) (#(#t=
  write mixed-fraction-e #f #t debug) (default) #() &quot;#lang scheme\n&quo=
 t; #f))<br>
 &gt;<br>
 <br>
 <br>
 </blockquote></div><br>
 
 --001485f91b24badd9d0483e6e946--

State changed from "analyzed" to "closed" by matthias at Tue, 13 Apr 2010 10:16:14 -0400
Reason>>> I have revised the error message so that it explains the reason why a clause 
is illegal even if the keyword looks right: 

 on-tick: not a legal clause in a world description, on-tick has been redefined 
in: (on-tick on-tick)

