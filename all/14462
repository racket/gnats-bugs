From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Tue Apr 22 13:34:05 2014
Received: from mail-ob0-f175.google.com (mail-ob0-f175.google.com [209.85.214.175])
	by winooski.ccs.neu.edu (8.14.7/8.14.7) with ESMTP id s3MHY0ra024406
	for <bugs@bugs.plt-scheme.org>; Tue, 22 Apr 2014 13:34:00 -0400
Message-Id: <201404221733.s3MHXuZv024383@winooski.ccs.neu.edu>
Date: Tue, 22 Apr 2014 13:33:56 -0400
From: neil.toronto@gmail.com
To: bugs@racket-lang.org
Subject: TR: Conversion to specific inexact types is unsound

>Number:         14462
>Category:       all
>Synopsis:       TR: Conversion to specific inexact types is unsound
>Class:          sw-bug
>Responsible:    stamourv
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Tue Apr 22 13:36:01 -0400 2014
>Closed-Date:    Tue Apr 22 17:16:52 -0400 2014
>Last-Modified:  Tue Apr 22 18:44:02 -0400 2014
>Originator:     Neil Toronto
>Organization:
plt
>Submitter-Id:   unknown
>Release:        6.0.1.5--2014-04-22(14bbd662/d/extflonum)
>Environment:
unix "Linux woodstock 3.11.0-19-generic #33-Ubuntu SMP Tue Mar 11 18:48:34 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 418635304
raco pkg (show):
/home/neil/plt/racket/share/devel-pkgs:
 Package              Checksum    Source
 main-distribution    #f          (static-link ../../../pkgs/main-distribution)
 plt-services         #f          (static-link ../../../pkgs/plt-services)
 racket-lib           #f          (static-link ../../../pkgs/racket-pkgs/racket-lib)
 [211 auto-installed packages not shown]
Installation-wide:
 Package               Checksum                                    Source
 nonplussed            f6c069990eb6b0b3356f872fcce82a3fb2fe805a    (url git://github.com/ntoronto/nonplussed)
 optimization-coach    be5f7908939c31a68d5c7dc9202315ffa8863180    (catalog optimization-coach)
 rsound                4f5d4d154eb7585b96b24298b79e3381bab8f1a5    (catalog rsound)
 [1 auto-installed package not shown]
User-specific for installation "development":
 [none]



Collections:
("/home/neil/.racket/development/collects"
 (non-existent-path))
("/home/neil/plt/racket/collects"
 (".gitignore" "acks" "compiler" "data" "db" "dynext" "ffi" "file" "info" "info-domain" "json" "launcher" "net" "openssl" "pkg" "planet" "racket" "raco" "reader" "realm" "s-exp" "setup" "syntax" "unstable" "version" "xml"))

Recent Internal Errors: 
Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t none) (default) #() "#lang racket\n" #t #f ((test) (main)) #t))
>Description:
The program in reproduction steps computes 10 inexact zeros, each of which is given a Positive or Negative type instead of, respectively, Nonnegative or Nonpositive. The types of the conversion functions don't account for underflow.

Randomized testing didn't catch these because the probability of producing random rational values whose conversions underflow is astronomically low. The same is true for overflow.

It would be good to add specific tests for these inclusions, where "<" means "strict subset of" (ignoring infinities and NaN):

  domain(Single-Flonum) < domain(Flonum)
                        < domain(ExtFlonum)
                        < domain(Exact-Rational)

It might seem strange that I'm submitting a bug report, especially for the extflonum functions, which I just added to the base type environment. But

 1) It's good to have an audit trail.

 2) How precise the types of these conversion functions should be seems like a design decision best left up to the TR maintainers.
>How-To-Repeat:
#lang typed/racket

(require racket/flonum
         racket/extflonum)

(real->double-flonum #e1e-500)
(real->double-flonum #e-1e-500)
(real->single-flonum #e1e-500)
(real->single-flonum #e-1e-500)
(real->single-flonum 1e-300)
(real->single-flonum -1e-300)
(extfl->inexact 1t-500)
(extfl->inexact -1t-500)
(real->extfl #e1e-8192)
(real->extfl #e-1e-8192)
>Fix:
>Audit-Trail:
From: Robby Findler <robby@eecs.northwestern.edu>
To: Neil Toronto <neil.toronto@gmail.com>, bugs <bugs@racket-lang.org>
Cc: nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/14462: TR: Conversion to specific inexact types
 is unsound
Date: Tue, 22 Apr 2014 12:38:27 -0500

 Did you try upping the probability of those specific 10 or so numbers
 in the random generator? You might uncover other bugs.
 
 Robby
 
 On Tue, Apr 22, 2014 at 12:36 PM,  <neil.toronto@gmail.com> wrote:
 > A new problem report is waiting at
 >   http://bugs.racket-lang.org/query/?cmd=view&pr=14462
 >
 > Reported by Neil Toronto for release: 6.0.1.5--2014-04-22(14bbd662/d/extflonum)
 >
 > *** Description:
 > The program in reproduction steps computes 10 inexact zeros, each of which is given a Positive or Negative type instead of, respectively, Nonnegative or Nonpositive. The types of the conversion functions don't account for underflow.
 >
 > Randomized testing didn't catch these because the probability of producing random rational values whose conversions underflow is astronomically low. The same is true for overflow.
 >
 > It would be good to add specific tests for these inclusions, where "<" means "strict subset of" (ignoring infinities and NaN):
 >
 >   domain(Single-Flonum) < domain(Flonum)
 >                         < domain(ExtFlonum)
 >                         < domain(Exact-Rational)
 >
 > It might seem strange that I'm submitting a bug report, especially for the extflonum functions, which I just added to the base type environment. But
 >
 >  1) It's good to have an audit trail.
 >
 >  2) How precise the types of these conversion functions should be seems like a design decision best left up to the TR maintainers.
 >
 > *** How to repeat:
 > #lang typed/racket
 >
 > (require racket/flonum
 >          racket/extflonum)
 >
 > (real->double-flonum #e1e-500)
 > (real->double-flonum #e-1e-500)
 > (real->single-flonum #e1e-500)
 > (real->single-flonum #e-1e-500)
 > (real->single-flonum 1e-300)
 > (real->single-flonum -1e-300)
 > (extfl->inexact 1t-500)
 > (extfl->inexact -1t-500)
 > (real->extfl #e1e-8192)
 > (real->extfl #e-1e-8192)
 >
 > *** Environment:
 > unix "Linux woodstock 3.11.0-19-generic #33-Ubuntu SMP Tue Mar 11 18:48:34 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
 > Human Language: english
 > (current-memory-use) 418635304
 > raco pkg (show):
 > /home/neil/plt/racket/share/devel-pkgs:
 >  Package              Checksum    Source
 >  main-distribution    #f          (static-link ../../../pkgs/main-distribution)
 >  plt-services         #f          (static-link ../../../pkgs/plt-services)
 >  racket-lib           #f          (static-link ../../../pkgs/racket-pkgs/racket-lib)
 >  [211 auto-installed packages not shown]
 > Installation-wide:
 >  Package               Checksum                                    Source
 >  nonplussed            f6c069990eb6b0b3356f872fcce82a3fb2fe805a    (url git://github.com/ntoronto/nonplussed)
 >  optimization-coach    be5f7908939c31a68d5c7dc9202315ffa8863180    (catalog optimization-coach)
 >  rsound                4f5d4d154eb7585b96b24298b79e3381bab8f1a5    (catalog rsound)
 >  [1 auto-installed package not shown]
 > User-specific for installation "development":
 >  [none]
 >
 >
 >
 > Collections:
 > ("/home/neil/.racket/development/collects"
 >  (non-existent-path))
 > ("/home/neil/plt/racket/collects"
 >  (".gitignore" "acks" "compiler" "data" "db" "dynext" "ffi" "file" "info" "info-domain" "json" "launcher" "net" "openssl" "pkg" "planet" "racket" "raco" "reader" "realm" "s-exp" "setup" "syntax" "unstable" "version" "xml"))
 >
 > Recent Internal Errors:
 > Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t none) (default) #() "#lang racket\n" #t #f ((test) (main)) #t))
 >
From: Neil Toronto <neil.toronto@gmail.com>
To: Robby Findler <robby@eecs.northwestern.edu>, bugs <bugs@racket-lang.org>
Cc: nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/14462: TR: Conversion to specific inexact types
 is unsound
Date: Tue, 22 Apr 2014 12:01:57 -0600

 No, I haven't done that yet. I agree that it might uncover other errors, 
 especially in the types of functions that may implicitly covert their 
 arguments to flonums.
 
 Designing the probability distributions is a little tricky, and I'm a 
 bit impatient to get back to what I was doing before I got side-tracked 
 into extflonum types. (Geometric primitives like line-plane 
 intersections, implemented accurately enough that pict3d users don't 
 have to worry about setting per-application floating-point tolerances.)
 
 I'm confused about why this never came up:
 
      (real->single-flonum really-small-flonum-x)
 
 which would have revealed the problem right away. It should be pretty 
 likely: the random tester generates a lot of really small flonums.
 
 Neil âŠ¥
 
 On 04/22/2014 11:38 AM, Robby Findler wrote:
 > Did you try upping the probability of those specific 10 or so numbers
 > in the random generator? You might uncover other bugs.
 >
 > Robby
 >
 > On Tue, Apr 22, 2014 at 12:36 PM,  <neil.toronto@gmail.com> wrote:
 >> A new problem report is waiting at
 >>    http://bugs.racket-lang.org/query/?cmd=view&pr=14462
 >>
 >> Reported by Neil Toronto for release: 6.0.1.5--2014-04-22(14bbd662/d/extflonum)
 >>
 >> *** Description:
 >> The program in reproduction steps computes 10 inexact zeros, each of which is given a Positive or Negative type instead of, respectively, Nonnegative or Nonpositive. The types of the conversion functions don't account for underflow.
 >>
 >> Randomized testing didn't catch these because the probability of producing random rational values whose conversions underflow is astronomically low. The same is true for overflow.
 >>
 >> It would be good to add specific tests for these inclusions, where "<" means "strict subset of" (ignoring infinities and NaN):
 >>
 >>    domain(Single-Flonum) < domain(Flonum)
 >>                          < domain(ExtFlonum)
 >>                          < domain(Exact-Rational)
 >>
 >> It might seem strange that I'm submitting a bug report, especially for the extflonum functions, which I just added to the base type environment. But
 >>
 >>   1) It's good to have an audit trail.
 >>
 >>   2) How precise the types of these conversion functions should be seems like a design decision best left up to the TR maintainers.
 >>
 >> *** How to repeat:
 >> #lang typed/racket
 >>
 >> (require racket/flonum
 >>           racket/extflonum)
 >>
 >> (real->double-flonum #e1e-500)
 >> (real->double-flonum #e-1e-500)
 >> (real->single-flonum #e1e-500)
 >> (real->single-flonum #e-1e-500)
 >> (real->single-flonum 1e-300)
 >> (real->single-flonum -1e-300)
 >> (extfl->inexact 1t-500)
 >> (extfl->inexact -1t-500)
 >> (real->extfl #e1e-8192)
 >> (real->extfl #e-1e-8192)
 >>
 >> *** Environment:
 >> unix "Linux woodstock 3.11.0-19-generic #33-Ubuntu SMP Tue Mar 11 18:48:34 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
 >> Human Language: english
 >> (current-memory-use) 418635304
 >> raco pkg (show):
 >> /home/neil/plt/racket/share/devel-pkgs:
 >>   Package              Checksum    Source
 >>   main-distribution    #f          (static-link ../../../pkgs/main-distribution)
 >>   plt-services         #f          (static-link ../../../pkgs/plt-services)
 >>   racket-lib           #f          (static-link ../../../pkgs/racket-pkgs/racket-lib)
 >>   [211 auto-installed packages not shown]
 >> Installation-wide:
 >>   Package               Checksum                                    Source
 >>   nonplussed            f6c069990eb6b0b3356f872fcce82a3fb2fe805a    (url git://github.com/ntoronto/nonplussed)
 >>   optimization-coach    be5f7908939c31a68d5c7dc9202315ffa8863180    (catalog optimization-coach)
 >>   rsound                4f5d4d154eb7585b96b24298b79e3381bab8f1a5    (catalog rsound)
 >>   [1 auto-installed package not shown]
 >> User-specific for installation "development":
 >>   [none]
 >>
 >>
 >>
 >> Collections:
 >> ("/home/neil/.racket/development/collects"
 >>   (non-existent-path))
 >> ("/home/neil/plt/racket/collects"
 >>   (".gitignore" "acks" "compiler" "data" "db" "dynext" "ffi" "file" "info" "info-domain" "json" "launcher" "net" "openssl" "pkg" "planet" "racket" "raco" "reader" "realm" "s-exp" "setup" "syntax" "unstable" "version" "xml"))
 >>
 >> Recent Internal Errors:
 >> Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t none) (default) #() "#lang racket\n" #t #f ((test) (main)) #t))
 >>
 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Neil Toronto <neil.toronto@gmail.com>
Cc: bugs <bugs@racket-lang.org>, nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/14462: TR: Conversion to specific inexact types
 is unsound
Date: Tue, 22 Apr 2014 13:15:41 -0500

 Oh, I was thinking you'd just do something stupid: stick something
 fairly early on in the function that generates a number that, with
 1/100 chance, picks one of those numbers and otherwise does what it
 was going to do.
 
 At least that way you'll start getting failures and you can come back
 to it later if you ever care.
 
 Robby
 
 
 On Tue, Apr 22, 2014 at 1:01 PM, Neil Toronto <neil.toronto@gmail.com> wrote:
 > No, I haven't done that yet. I agree that it might uncover other errors,
 > especially in the types of functions that may implicitly covert their
 > arguments to flonums.
 >
 > Designing the probability distributions is a little tricky, and I'm a bit
 > impatient to get back to what I was doing before I got side-tracked into
 > extflonum types. (Geometric primitives like line-plane intersections,
 > implemented accurately enough that pict3d users don't have to worry about
 > setting per-application floating-point tolerances.)
 >
 > I'm confused about why this never came up:
 >
 >     (real->single-flonum really-small-flonum-x)
 >
 > which would have revealed the problem right away. It should be pretty
 > likely: the random tester generates a lot of really small flonums.
 >
 > Neil âŠ¥
 >
 >
 > On 04/22/2014 11:38 AM, Robby Findler wrote:
 >>
 >> Did you try upping the probability of those specific 10 or so numbers
 >> in the random generator? You might uncover other bugs.
 >>
 >> Robby
 >>
 >> On Tue, Apr 22, 2014 at 12:36 PM,  <neil.toronto@gmail.com> wrote:
 >>>
 >>> A new problem report is waiting at
 >>>    http://bugs.racket-lang.org/query/?cmd=view&pr=14462
 >>>
 >>> Reported by Neil Toronto for release:
 >>> 6.0.1.5--2014-04-22(14bbd662/d/extflonum)
 >>>
 >>> *** Description:
 >>> The program in reproduction steps computes 10 inexact zeros, each of
 >>> which is given a Positive or Negative type instead of, respectively,
 >>> Nonnegative or Nonpositive. The types of the conversion functions don't
 >>> account for underflow.
 >>>
 >>> Randomized testing didn't catch these because the probability of
 >>> producing random rational values whose conversions underflow is
 >>> astronomically low. The same is true for overflow.
 >>>
 >>> It would be good to add specific tests for these inclusions, where "<"
 >>> means "strict subset of" (ignoring infinities and NaN):
 >>>
 >>>    domain(Single-Flonum) < domain(Flonum)
 >>>                          < domain(ExtFlonum)
 >>>                          < domain(Exact-Rational)
 >>>
 >>> It might seem strange that I'm submitting a bug report, especially for
 >>> the extflonum functions, which I just added to the base type environment.
 >>> But
 >>>
 >>>   1) It's good to have an audit trail.
 >>>
 >>>   2) How precise the types of these conversion functions should be seems
 >>> like a design decision best left up to the TR maintainers.
 >>>
 >>> *** How to repeat:
 >>> #lang typed/racket
 >>>
 >>> (require racket/flonum
 >>>           racket/extflonum)
 >>>
 >>> (real->double-flonum #e1e-500)
 >>> (real->double-flonum #e-1e-500)
 >>> (real->single-flonum #e1e-500)
 >>> (real->single-flonum #e-1e-500)
 >>> (real->single-flonum 1e-300)
 >>> (real->single-flonum -1e-300)
 >>> (extfl->inexact 1t-500)
 >>> (extfl->inexact -1t-500)
 >>> (real->extfl #e1e-8192)
 >>> (real->extfl #e-1e-8192)
 >>>
 >>> *** Environment:
 >>> unix "Linux woodstock 3.11.0-19-generic #33-Ubuntu SMP Tue Mar 11
 >>> 18:48:34 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux" (x86_64-linux/3m)
 >>> (get-display-depth) = 32
 >>> Human Language: english
 >>> (current-memory-use) 418635304
 >>> raco pkg (show):
 >>> /home/neil/plt/racket/share/devel-pkgs:
 >>>   Package              Checksum    Source
 >>>   main-distribution    #f          (static-link
 >>> ../../../pkgs/main-distribution)
 >>>   plt-services         #f          (static-link
 >>> ../../../pkgs/plt-services)
 >>>   racket-lib           #f          (static-link
 >>> ../../../pkgs/racket-pkgs/racket-lib)
 >>>   [211 auto-installed packages not shown]
 >>> Installation-wide:
 >>>   Package               Checksum
 >>> Source
 >>>   nonplussed            f6c069990eb6b0b3356f872fcce82a3fb2fe805a    (url
 >>> git://github.com/ntoronto/nonplussed)
 >>>   optimization-coach    be5f7908939c31a68d5c7dc9202315ffa8863180
 >>> (catalog optimization-coach)
 >>>   rsound                4f5d4d154eb7585b96b24298b79e3381bab8f1a5
 >>> (catalog rsound)
 >>>   [1 auto-installed package not shown]
 >>> User-specific for installation "development":
 >>>   [none]
 >>>
 >>>
 >>>
 >>> Collections:
 >>> ("/home/neil/.racket/development/collects"
 >>>   (non-existent-path))
 >>> ("/home/neil/plt/racket/collects"
 >>>   (".gitignore" "acks" "compiler" "data" "db" "dynext" "ffi" "file"
 >>> "info" "info-domain" "json" "launcher" "net" "openssl" "pkg" "planet"
 >>> "racket" "raco" "reader" "realm" "s-exp" "setup" "syntax" "unstable"
 >>> "version" "xml"))
 >>>
 >>> Recent Internal Errors:
 >>> Computer Language: (("Determine language from source") (#(#t print
 >>> mixed-fraction-e #f #t none) (default) #() "#lang racket\n" #t #f ((test)
 >>> (main)) #t))
 >>>
 >
 
From: Vincent St-Amour <stamourv@ccs.neu.edu>
To: neil.toronto@gmail.com, bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/14462: TR: Conversion to specific inexact types is unsound
Date: Tue, 22 Apr 2014 16:56:17 -0400

 At Tue, 22 Apr 2014 13:36:02 -0400,
 neil.toronto@gmail.com wrote:
 >  2) How precise the types of these conversion functions should be
 >  seems like a design decision best left up to the TR maintainers.
 
 IMO, the right thing to do is to make the types more conservative.
 
 I'll push a fix. Thanks for the report!
 
 Vincent
Responsible changed from "nobody" to "stamourv" by stamourv@racket-lang.org at Tue, 22 Apr 2014 17:16:52 -0400
Reason>>> A commit by stamourv@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/a39b89bb7d
State changed from "open" to "closed" by stamourv@racket-lang.org at Tue, 22 Apr 2014 17:16:52 -0400
Reason>>> A commit by stamourv@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/a39b89bb7d
  | Consider underflow in float conversion functions.
  | 
  | Closes PR14462.

From: Vincent St-Amour <stamourv@ccs.neu.edu>
To: Neil Toronto <neil.toronto@gmail.com>
Cc: Robby Findler <robby@eecs.northwestern.edu>, bugs <bugs@racket-lang.org>,
        nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/14462: TR: Conversion to specific inexact types is unsound
Date: Tue, 22 Apr 2014 17:28:23 -0400

 I've added basic single-flonum support to the random tester.
 
 Vincent
 
 
 At Tue, 22 Apr 2014 12:01:57 -0600,
 Neil Toronto wrote:
 > 
 > No, I haven't done that yet. I agree that it might uncover other errors,
 > especially in the types of functions that may implicitly covert their
 > arguments to flonums.
 > 
 > Designing the probability distributions is a little tricky, and I'm a
 > bit impatient to get back to what I was doing before I got side-tracked
 > into extflonum types. (Geometric primitives like line-plane
 > intersections, implemented accurately enough that pict3d users don't
 > have to worry about setting per-application floating-point tolerances.)
 > 
 > I'm confused about why this never came up:
 > 
 >     (real->single-flonum really-small-flonum-x)
 > 
 > which would have revealed the problem right away. It should be pretty
 > likely: the random tester generates a lot of really small flonums.
 > 
 > Neil $B"](B
 > 
 > On 04/22/2014 11:38 AM, Robby Findler wrote:
 > > Did you try upping the probability of those specific 10 or so numbers
 > > in the random generator? You might uncover other bugs.
 > >
 > > Robby
 > >
 > > On Tue, Apr 22, 2014 at 12:36 PM,  <neil.toronto@gmail.com> wrote:
 > >> A new problem report is waiting at
 > >>    http://bugs.racket-lang.org/query/?cmd=view&pr=14462
 > >>
 > >> Reported by Neil Toronto for release: 6.0.1.5--2014-04-22(14bbd662/d/extflonum)
 > >>
 > >> *** Description:
 > >> The program in reproduction steps computes 10 inexact zeros, each of which is given a Positive or Negative type instead of, respectively, Nonnegative or Nonpositive. The types of the conversion functions don't account for underflow.
 > >>
 > >> Randomized testing didn't catch these because the probability of producing random rational values whose conversions underflow is astronomically low. The same is true for overflow.
 > >>
 > >> It would be good to add specific tests for these inclusions, where "<" means "strict subset of" (ignoring infinities and NaN):
 > >>
 > >>    domain(Single-Flonum) < domain(Flonum)
 > >>                          < domain(ExtFlonum)
 > >>                          < domain(Exact-Rational)
 > >>
 > >> It might seem strange that I'm submitting a bug report, especially for the extflonum functions, which I just added to the base type environment. But
 > >>
 > >>   1) It's good to have an audit trail.
 > >>
 > >>   2) How precise the types of these conversion functions should be seems like a design decision best left up to the TR maintainers.
 > >>
 > >> *** How to repeat:
 > >> #lang typed/racket
 > >>
 > >> (require racket/flonum
 > >>           racket/extflonum)
 > >>
 > >> (real->double-flonum #e1e-500)
 > >> (real->double-flonum #e-1e-500)
 > >> (real->single-flonum #e1e-500)
 > >> (real->single-flonum #e-1e-500)
 > >> (real->single-flonum 1e-300)
 > >> (real->single-flonum -1e-300)
 > >> (extfl->inexact 1t-500)
 > >> (extfl->inexact -1t-500)
 > >> (real->extfl #e1e-8192)
 > >> (real->extfl #e-1e-8192)
 > >>
 > >> *** Environment:
 > >> unix "Linux woodstock 3.11.0-19-generic #33-Ubuntu SMP Tue Mar 11 18:48:34 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
 > >> Human Language: english
 > >> (current-memory-use) 418635304
 > >> raco pkg (show):
 > >> /home/neil/plt/racket/share/devel-pkgs:
 > >>   Package              Checksum    Source
 > >>   main-distribution    #f          (static-link ../../../pkgs/main-distribution)
 > >>   plt-services         #f          (static-link ../../../pkgs/plt-services)
 > >>   racket-lib           #f          (static-link ../../../pkgs/racket-pkgs/racket-lib)
 > >>   [211 auto-installed packages not shown]
 > >> Installation-wide:
 > >>   Package               Checksum                                    Source
 > >>   nonplussed            f6c069990eb6b0b3356f872fcce82a3fb2fe805a    (url git://github.com/ntoronto/nonplussed)
 > >>   optimization-coach    be5f7908939c31a68d5c7dc9202315ffa8863180    (catalog optimization-coach)
 > >>   rsound                4f5d4d154eb7585b96b24298b79e3381bab8f1a5    (catalog rsound)
 > >>   [1 auto-installed package not shown]
 > >> User-specific for installation "development":
 > >>   [none]
 > >>
 > >>
 > >>
 > >> Collections:
 > >> ("/home/neil/.racket/development/collects"
 > >>   (non-existent-path))
 > >> ("/home/neil/plt/racket/collects"
 > >>   (".gitignore" "acks" "compiler" "data" "db" "dynext" "ffi" "file" "info" "info-domain" "json" "launcher" "net" "openssl" "pkg" "planet" "racket" "raco" "reader" "realm" "s-exp" "setup" "syntax" "unstable" "version" "xml"))
 > >>
 > >> Recent Internal Errors:
 > >> Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t none) (default) #() "#lang racket\n" #t #f ((test) (main)) #t))
 > >>
 > 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Vincent St-Amour <stamourv@ccs.neu.edu>
Cc: Neil Toronto <neil.toronto@gmail.com>, bugs <bugs@racket-lang.org>,
        nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/14462: TR: Conversion to specific inexact types
 is unsound
Date: Tue, 22 Apr 2014 16:33:33 -0500

 Did that uncover these bugs before you fixed them?
 
 Robby
 
 On Tue, Apr 22, 2014 at 4:28 PM, Vincent St-Amour <stamourv@ccs.neu.edu> wrote:
 > I've added basic single-flonum support to the random tester.
 >
 > Vincent
 >
 >
 > At Tue, 22 Apr 2014 12:01:57 -0600,
 > Neil Toronto wrote:
 >>
 >> No, I haven't done that yet. I agree that it might uncover other errors,
 >> especially in the types of functions that may implicitly covert their
 >> arguments to flonums.
 >>
 >> Designing the probability distributions is a little tricky, and I'm a
 >> bit impatient to get back to what I was doing before I got side-tracked
 >> into extflonum types. (Geometric primitives like line-plane
 >> intersections, implemented accurately enough that pict3d users don't
 >> have to worry about setting per-application floating-point tolerances.)
 >>
 >> I'm confused about why this never came up:
 >>
 >>     (real->single-flonum really-small-flonum-x)
 >>
 >> which would have revealed the problem right away. It should be pretty
 >> likely: the random tester generates a lot of really small flonums.
 >>
 >> Neil âŠ¥
 >>
 >> On 04/22/2014 11:38 AM, Robby Findler wrote:
 >> > Did you try upping the probability of those specific 10 or so numbers
 >> > in the random generator? You might uncover other bugs.
 >> >
 >> > Robby
 >> >
 >> > On Tue, Apr 22, 2014 at 12:36 PM,  <neil.toronto@gmail.com> wrote:
 >> >> A new problem report is waiting at
 >> >>    http://bugs.racket-lang.org/query/?cmd=view&pr=14462
 >> >>
 >> >> Reported by Neil Toronto for release: 6.0.1.5--2014-04-22(14bbd662/d/extflonum)
 >> >>
 >> >> *** Description:
 >> >> The program in reproduction steps computes 10 inexact zeros, each of which is given a Positive or Negative type instead of, respectively, Nonnegative or Nonpositive. The types of the conversion functions don't account for underflow.
 >> >>
 >> >> Randomized testing didn't catch these because the probability of producing random rational values whose conversions underflow is astronomically low. The same is true for overflow.
 >> >>
 >> >> It would be good to add specific tests for these inclusions, where "<" means "strict subset of" (ignoring infinities and NaN):
 >> >>
 >> >>    domain(Single-Flonum) < domain(Flonum)
 >> >>                          < domain(ExtFlonum)
 >> >>                          < domain(Exact-Rational)
 >> >>
 >> >> It might seem strange that I'm submitting a bug report, especially for the extflonum functions, which I just added to the base type environment. But
 >> >>
 >> >>   1) It's good to have an audit trail.
 >> >>
 >> >>   2) How precise the types of these conversion functions should be seems like a design decision best left up to the TR maintainers.
 >> >>
 >> >> *** How to repeat:
 >> >> #lang typed/racket
 >> >>
 >> >> (require racket/flonum
 >> >>           racket/extflonum)
 >> >>
 >> >> (real->double-flonum #e1e-500)
 >> >> (real->double-flonum #e-1e-500)
 >> >> (real->single-flonum #e1e-500)
 >> >> (real->single-flonum #e-1e-500)
 >> >> (real->single-flonum 1e-300)
 >> >> (real->single-flonum -1e-300)
 >> >> (extfl->inexact 1t-500)
 >> >> (extfl->inexact -1t-500)
 >> >> (real->extfl #e1e-8192)
 >> >> (real->extfl #e-1e-8192)
 >> >>
 >> >> *** Environment:
 >> >> unix "Linux woodstock 3.11.0-19-generic #33-Ubuntu SMP Tue Mar 11 18:48:34 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
 >> >> Human Language: english
 >> >> (current-memory-use) 418635304
 >> >> raco pkg (show):
 >> >> /home/neil/plt/racket/share/devel-pkgs:
 >> >>   Package              Checksum    Source
 >> >>   main-distribution    #f          (static-link ../../../pkgs/main-distribution)
 >> >>   plt-services         #f          (static-link ../../../pkgs/plt-services)
 >> >>   racket-lib           #f          (static-link ../../../pkgs/racket-pkgs/racket-lib)
 >> >>   [211 auto-installed packages not shown]
 >> >> Installation-wide:
 >> >>   Package               Checksum                                    Source
 >> >>   nonplussed            f6c069990eb6b0b3356f872fcce82a3fb2fe805a    (url git://github.com/ntoronto/nonplussed)
 >> >>   optimization-coach    be5f7908939c31a68d5c7dc9202315ffa8863180    (catalog optimization-coach)
 >> >>   rsound                4f5d4d154eb7585b96b24298b79e3381bab8f1a5    (catalog rsound)
 >> >>   [1 auto-installed package not shown]
 >> >> User-specific for installation "development":
 >> >>   [none]
 >> >>
 >> >>
 >> >>
 >> >> Collections:
 >> >> ("/home/neil/.racket/development/collects"
 >> >>   (non-existent-path))
 >> >> ("/home/neil/plt/racket/collects"
 >> >>   (".gitignore" "acks" "compiler" "data" "db" "dynext" "ffi" "file" "info" "info-domain" "json" "launcher" "net" "openssl" "pkg" "planet" "racket" "raco" "reader" "realm" "s-exp" "setup" "syntax" "unstable" "version" "xml"))
 >> >>
 >> >> Recent Internal Errors:
 >> >> Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t none) (default) #() "#lang racket\n" #t #f ((test) (main)) #t))
 >> >>
 >>
 
From: Vincent St-Amour <stamourv@ccs.neu.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: Vincent St-Amour <stamourv@ccs.neu.edu>,
        Neil Toronto <neil.toronto@gmail.com>, bugs <bugs@racket-lang.org>,
        nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/14462: TR: Conversion to specific inexact types is unsound
Date: Tue, 22 Apr 2014 18:06:47 -0400

 Yes, after about 100 attempts.
 
 Vincent
 
 
 At Tue, 22 Apr 2014 16:33:33 -0500,
 Robby Findler wrote:
 > 
 > Did that uncover these bugs before you fixed them?
 > 
 > Robby
 > 
 > On Tue, Apr 22, 2014 at 4:28 PM, Vincent St-Amour <stamourv@ccs.neu.edu> wrote:
 > > I've added basic single-flonum support to the random tester.
 > >
 > > Vincent
 > >
 > >
 > > At Tue, 22 Apr 2014 12:01:57 -0600,
 > > Neil Toronto wrote:
 > >>
 > >> No, I haven't done that yet. I agree that it might uncover other errors,
 > >> especially in the types of functions that may implicitly covert their
 > >> arguments to flonums.
 > >>
 > >> Designing the probability distributions is a little tricky, and I'm a
 > >> bit impatient to get back to what I was doing before I got side-tracked
 > >> into extflonum types. (Geometric primitives like line-plane
 > >> intersections, implemented accurately enough that pict3d users don't
 > >> have to worry about setting per-application floating-point tolerances.)
 > >>
 > >> I'm confused about why this never came up:
 > >>
 > >>     (real->single-flonum really-small-flonum-x)
 > >>
 > >> which would have revealed the problem right away. It should be pretty
 > >> likely: the random tester generates a lot of really small flonums.
 > >>
 > >> Neil $B"](B
 > >>
 > >> On 04/22/2014 11:38 AM, Robby Findler wrote:
 > >> > Did you try upping the probability of those specific 10 or so numbers
 > >> > in the random generator? You might uncover other bugs.
 > >> >
 > >> > Robby
 > >> >
 > >> > On Tue, Apr 22, 2014 at 12:36 PM,  <neil.toronto@gmail.com> wrote:
 > >> >> A new problem report is waiting at
 > >> >>    http://bugs.racket-lang.org/query/?cmd=view&pr=14462
 > >> >>
 > >> >> Reported by Neil Toronto for release: 6.0.1.5--2014-04-22(14bbd662/d/extflonum)
 > >> >>
 > >> >> *** Description:
 > >> >> The program in reproduction steps computes 10 inexact zeros, each of which is given a Positive or Negative type instead of, respectively, Nonnegative or Nonpositive. The types of the conversion functions don't account for underflow.
 > >> >>
 > >> >> Randomized testing didn't catch these because the probability of producing random rational values whose conversions underflow is astronomically low. The same is true for overflow.
 > >> >>
 > >> >> It would be good to add specific tests for these inclusions, where "<" means "strict subset of" (ignoring infinities and NaN):
 > >> >>
 > >> >>    domain(Single-Flonum) < domain(Flonum)
 > >> >>                          < domain(ExtFlonum)
 > >> >>                          < domain(Exact-Rational)
 > >> >>
 > >> >> It might seem strange that I'm submitting a bug report, especially for the extflonum functions, which I just added to the base type environment. But
 > >> >>
 > >> >>   1) It's good to have an audit trail.
 > >> >>
 > >> >>   2) How precise the types of these conversion functions should be seems like a design decision best left up to the TR maintainers.
 > >> >>
 > >> >> *** How to repeat:
 > >> >> #lang typed/racket
 > >> >>
 > >> >> (require racket/flonum
 > >> >>           racket/extflonum)
 > >> >>
 > >> >> (real->double-flonum #e1e-500)
 > >> >> (real->double-flonum #e-1e-500)
 > >> >> (real->single-flonum #e1e-500)
 > >> >> (real->single-flonum #e-1e-500)
 > >> >> (real->single-flonum 1e-300)
 > >> >> (real->single-flonum -1e-300)
 > >> >> (extfl->inexact 1t-500)
 > >> >> (extfl->inexact -1t-500)
 > >> >> (real->extfl #e1e-8192)
 > >> >> (real->extfl #e-1e-8192)
 > >> >>
 > >> >> *** Environment:
 > >> >> unix "Linux woodstock 3.11.0-19-generic #33-Ubuntu SMP Tue Mar 11 18:48:34 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
 > >> >> Human Language: english
 > >> >> (current-memory-use) 418635304
 > >> >> raco pkg (show):
 > >> >> /home/neil/plt/racket/share/devel-pkgs:
 > >> >>   Package              Checksum    Source
 > >> >>   main-distribution    #f          (static-link ../../../pkgs/main-distribution)
 > >> >>   plt-services         #f          (static-link ../../../pkgs/plt-services)
 > >> >>   racket-lib           #f          (static-link ../../../pkgs/racket-pkgs/racket-lib)
 > >> >>   [211 auto-installed packages not shown]
 > >> >> Installation-wide:
 > >> >>   Package               Checksum                                    Source
 > >> >>   nonplussed            f6c069990eb6b0b3356f872fcce82a3fb2fe805a    (url git://github.com/ntoronto/nonplussed)
 > >> >>   optimization-coach    be5f7908939c31a68d5c7dc9202315ffa8863180    (catalog optimization-coach)
 > >> >>   rsound                4f5d4d154eb7585b96b24298b79e3381bab8f1a5    (catalog rsound)
 > >> >>   [1 auto-installed package not shown]
 > >> >> User-specific for installation "development":
 > >> >>   [none]
 > >> >>
 > >> >>
 > >> >>
 > >> >> Collections:
 > >> >> ("/home/neil/.racket/development/collects"
 > >> >>   (non-existent-path))
 > >> >> ("/home/neil/plt/racket/collects"
 > >> >>   (".gitignore" "acks" "compiler" "data" "db" "dynext" "ffi" "file" "info" "info-domain" "json" "launcher" "net" "openssl" "pkg" "planet" "racket" "raco" "reader" "realm" "s-exp" "setup" "syntax" "unstable" "version" "xml"))
 > >> >>
 > >> >> Recent Internal Errors:
 > >> >> Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t none) (default) #() "#lang racket\n" #t #f ((test) (main)) #t))
 > >> >>
 > >>
From: Robby Findler <robby@eecs.northwestern.edu>
To: Vincent St-Amour <stamourv@ccs.neu.edu>
Cc: Neil Toronto <neil.toronto@gmail.com>, bugs <bugs@racket-lang.org>,
        nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/14462: TR: Conversion to specific inexact types
 is unsound
Date: Tue, 22 Apr 2014 17:41:02 -0500

 --e89a8ff252b68a26c304f7a94fcd
 Content-Type: text/plain; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 :)
 
 On Tuesday, April 22, 2014, Vincent St-Amour <stamourv@ccs.neu.edu> wrote:
 
 > Yes, after about 100 attempts.
 >
 > Vincent
 >
 >
 > At Tue, 22 Apr 2014 16:33:33 -0500,
 > Robby Findler wrote:
 > >
 > > Did that uncover these bugs before you fixed them?
 > >
 > > Robby
 > >
 > > On Tue, Apr 22, 2014 at 4:28 PM, Vincent St-Amour <stamourv@ccs.neu.edu=
 >
 > wrote:
 > > > I've added basic single-flonum support to the random tester.
 > > >
 > > > Vincent
 > > >
 > > >
 > > > At Tue, 22 Apr 2014 12:01:57 -0600,
 > > > Neil Toronto wrote:
 > > >>
 > > >> No, I haven't done that yet. I agree that it might uncover other
 > errors,
 > > >> especially in the types of functions that may implicitly covert thei=
 r
 > > >> arguments to flonums.
 > > >>
 > > >> Designing the probability distributions is a little tricky, and I'm =
 a
 > > >> bit impatient to get back to what I was doing before I got
 > side-tracked
 > > >> into extflonum types. (Geometric primitives like line-plane
 > > >> intersections, implemented accurately enough that pict3d users don't
 > > >> have to worry about setting per-application floating-point
 > tolerances.)
 > > >>
 > > >> I'm confused about why this never came up:
 > > >>
 > > >>     (real->single-flonum really-small-flonum-x)
 > > >>
 > > >> which would have revealed the problem right away. It should be prett=
 y
 > > >> likely: the random tester generates a lot of really small flonums.
 > > >>
 > > >> Neil =E2=8A=A5
 > > >>
 > > >> On 04/22/2014 11:38 AM, Robby Findler wrote:
 > > >> > Did you try upping the probability of those specific 10 or so
 > numbers
 > > >> > in the random generator? You might uncover other bugs.
 > > >> >
 > > >> > Robby
 > > >> >
 > > >> > On Tue, Apr 22, 2014 at 12:36 PM,  <neil.toronto@gmail.com> wrote:
 > > >> >> A new problem report is waiting at
 > > >> >>    http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D14462
 > > >> >>
 > > >> >> Reported by Neil Toronto for release:
 > 6.0.1.5--2014-04-22(14bbd662/d/extflonum)
 > > >> >>
 > > >> >> *** Description:
 > > >> >> The program in reproduction steps computes 10 inexact zeros, each
 > of which is given a Positive or Negative type instead of, respectively,
 > Nonnegative or Nonpositive. The types of the conversion functions don't
 > account for underflow.
 > > >> >>
 > > >> >> Randomized testing didn't catch these because the probability of
 > producing random rational values whose conversions underflow is
 > astronomically low. The same is true for overflow.
 > > >> >>
 > > >> >> It would be good to add specific tests for these inclusions, wher=
 e
 > "<" means "strict subset of" (ignoring infinities and NaN):
 > > >> >>
 > > >> >>    domain(Single-Flonum) < domain(Flonum)
 > > >> >>                          < domain(ExtFlonum)
 > > >> >>                          < domain(Exact-Rational)
 > > >> >>
 > > >> >> It might seem strange that I'm submitting a bug report, especiall=
 y
 > for the extflonum functions, which I just added to the base type
 > environment. But
 > > >> >>
 > > >> >>   1) It's good to have an audit trail.
 > > >> >>
 > > >> >>   2) How precise the types of these conversion functions should b=
 e
 > seems like a design decision best left up to the TR maintainers.
 > > >> >>
 > > >> >> *** How to repeat:
 > > >> >> #lang typed/racket
 > > >> >>
 > > >> >> (require racket/flonum
 > > >> >>           racket/extflonum)
 > > >> >>
 > > >> >> (real->double-flonum #e1e-500)
 > > >> >> (real->double-flonum #e-1e-500)
 > > >> >> (real->single-flonum #e1e-500)
 > > >> >> (real->single-flonum #e-1e-500)
 > > >> >> (real->single-flonum 1e-300)
 > > >> >> (real->single-flonum -1e-300)
 > > >> >> (extfl->inexact 1t-500)
 > > >> >> (extfl->inexact -1t-500)
 > > >
 
 --e89a8ff252b68a26c304f7a94fcd
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 :)<span></span><br><br>On Tuesday, April 22, 2014, Vincent St-Amour &lt;<a =
 href=3D"mailto:stamourv@ccs.neu.edu">stamourv@ccs.neu.edu</a>&gt; wrote:<br=
 ><blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1=
 px #ccc solid;padding-left:1ex">
 Yes, after about 100 attempts.<br>
 <br>
 Vincent<br>
 <br>
 <br>
 At Tue, 22 Apr 2014 16:33:33 -0500,<br>
 Robby Findler wrote:<br>
 &gt;<br>
 &gt; Did that uncover these bugs before you fixed them?<br>
 &gt;<br>
 &gt; Robby<br>
 &gt;<br>
 &gt; On Tue, Apr 22, 2014 at 4:28 PM, Vincent St-Amour &lt;<a>stamourv@ccs.=
 neu.edu</a>&gt; wrote:<br>
 &gt; &gt; I&#39;ve added basic single-flonum support to the random tester.<=
 br>
 &gt; &gt;<br>
 &gt; &gt; Vincent<br>
 &gt; &gt;<br>
 &gt; &gt;<br>
 &gt; &gt; At Tue, 22 Apr 2014 12:01:57 -0600,<br>
 &gt; &gt; Neil Toronto wrote:<br>
 &gt; &gt;&gt;<br>
 &gt; &gt;&gt; No, I haven&#39;t done that yet. I agree that it might uncove=
 r other errors,<br>
 &gt; &gt;&gt; especially in the types of functions that may implicitly cove=
 rt their<br>
 &gt; &gt;&gt; arguments to flonums.<br>
 &gt; &gt;&gt;<br>
 &gt; &gt;&gt; Designing the probability distributions is a little tricky, a=
 nd I&#39;m a<br>
 &gt; &gt;&gt; bit impatient to get back to what I was doing before I got si=
 de-tracked<br>
 &gt; &gt;&gt; into extflonum types. (Geometric primitives like line-plane<b=
 r>
 &gt; &gt;&gt; intersections, implemented accurately enough that pict3d user=
 s don&#39;t<br>
 &gt; &gt;&gt; have to worry about setting per-application floating-point to=
 lerances.)<br>
 &gt; &gt;&gt;<br>
 &gt; &gt;&gt; I&#39;m confused about why this never came up:<br>
 &gt; &gt;&gt;<br>
 &gt; &gt;&gt; =C2=A0 =C2=A0 (real-&gt;single-flonum really-small-flonum-x)<=
 br>
 &gt; &gt;&gt;<br>
 &gt; &gt;&gt; which would have revealed the problem right away. It should b=
 e pretty<br>
 &gt; &gt;&gt; likely: the random tester generates a lot of really small flo=
 nums.<br>
 &gt; &gt;&gt;<br>
 &gt; &gt;&gt; Neil =E2=8A=A5<br>
 &gt; &gt;&gt;<br>
 &gt; &gt;&gt; On 04/22/2014 11:38 AM, Robby Findler wrote:<br>
 &gt; &gt;&gt; &gt; Did you try upping the probability of those specific 10 =
 or so numbers<br>
 &gt; &gt;&gt; &gt; in the random generator? You might uncover other bugs.<b=
 r>
 &gt; &gt;&gt; &gt;<br>
 &gt; &gt;&gt; &gt; Robby<br>
 &gt; &gt;&gt; &gt;<br>
 &gt; &gt;&gt; &gt; On Tue, Apr 22, 2014 at 12:36 PM, =C2=A0&lt;<a>neil.toro=
 nto@gmail.com</a>&gt; wrote:<br>
 &gt; &gt;&gt; &gt;&gt; A new problem report is waiting at<br>
 &gt; &gt;&gt; &gt;&gt; =C2=A0 =C2=A0<a href=3D"http://bugs.racket-lang.org/=
 query/?cmd=3Dview&amp;pr=3D14462" target=3D"_blank">http://bugs.racket-lang=
 .org/query/?cmd=3Dview&amp;pr=3D14462</a><br>
 &gt; &gt;&gt; &gt;&gt;<br>
 &gt; &gt;&gt; &gt;&gt; Reported by Neil Toronto for release: 6.0.1.5--2014-=
 04-22(14bbd662/d/extflonum)<br>
 &gt; &gt;&gt; &gt;&gt;<br>
 &gt; &gt;&gt; &gt;&gt; *** Description:<br>
 &gt; &gt;&gt; &gt;&gt; The program in reproduction steps computes 10 inexac=
 t zeros, each of which is given a Positive or Negative type instead of, res=
 pectively, Nonnegative or Nonpositive. The types of the conversion function=
 s don&#39;t account for underflow.<br>
 
 &gt; &gt;&gt; &gt;&gt;<br>
 &gt; &gt;&gt; &gt;&gt; Randomized testing didn&#39;t catch these because th=
 e probability of producing random rational values whose conversions underfl=
 ow is astronomically low. The same is true for overflow.<br>
 &gt; &gt;&gt; &gt;&gt;<br>
 &gt; &gt;&gt; &gt;&gt; It would be good to add specific tests for these inc=
 lusions, where &quot;&lt;&quot; means &quot;strict subset of&quot; (ignorin=
 g infinities and NaN):<br>
 &gt; &gt;&gt; &gt;&gt;<br>
 &gt; &gt;&gt; &gt;&gt; =C2=A0 =C2=A0domain(Single-Flonum) &lt; domain(Flonu=
 m)<br>
 &gt; &gt;&gt; &gt;&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
 =A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0&lt; domain(ExtFlonum)<br>
 &gt; &gt;&gt; &gt;&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
 =A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0&lt; domain(Exact-Rational)<br>
 &gt; &gt;&gt; &gt;&gt;<br>
 &gt; &gt;&gt; &gt;&gt; It might seem strange that I&#39;m submitting a bug =
 report, especially for the extflonum functions, which I just added to the b=
 ase type environment. But<br>
 &gt; &gt;&gt; &gt;&gt;<br>
 &gt; &gt;&gt; &gt;&gt; =C2=A0 1) It&#39;s good to have an audit trail.<br>
 &gt; &gt;&gt; &gt;&gt;<br>
 &gt; &gt;&gt; &gt;&gt; =C2=A0 2) How precise the types of these conversion =
 functions should be seems like a design decision best left up to the TR mai=
 ntainers.<br>
 &gt; &gt;&gt; &gt;&gt;<br>
 &gt; &gt;&gt; &gt;&gt; *** How to repeat:<br>
 &gt; &gt;&gt; &gt;&gt; #lang typed/racket<br>
 &gt; &gt;&gt; &gt;&gt;<br>
 &gt; &gt;&gt; &gt;&gt; (require racket/flonum<br>
 &gt; &gt;&gt; &gt;&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 racket/extflonum)=
 <br>
 &gt; &gt;&gt; &gt;&gt;<br>
 &gt; &gt;&gt; &gt;&gt; (real-&gt;double-flonum #e1e-500)<br>
 &gt; &gt;&gt; &gt;&gt; (real-&gt;double-flonum #e-1e-500)<br>
 &gt; &gt;&gt; &gt;&gt; (real-&gt;single-flonum #e1e-500)<br>
 &gt; &gt;&gt; &gt;&gt; (real-&gt;single-flonum #e-1e-500)<br>
 &gt; &gt;&gt; &gt;&gt; (real-&gt;single-flonum 1e-300)<br>
 &gt; &gt;&gt; &gt;&gt; (real-&gt;single-flonum -1e-300)<br>
 &gt; &gt;&gt; &gt;&gt; (extfl-&gt;inexact 1t-500)<br>
 &gt; &gt;&gt; &gt;&gt; (extfl-&gt;inexact -1t-500)<br>
 &gt; &gt;</blockquote>
 
 --e89a8ff252b68a26c304f7a94fcd--
