From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Thu Jun 12 14:55:37 2008
Received: from gv-out-0910.google.com (gv-out-0910.google.com [216.239.58.189])
	by champlain.ccs.neu.edu (8.14.2/8.14.2) with ESMTP id m5CItTX8027219
	for <bugs@bugs.plt-scheme.org>; Thu, 12 Jun 2008 14:55:30 -0400
Message-Id: <200806121855.m5CItOQa027213@champlain.ccs.neu.edu>
Date: Thu, 12 Jun 2008 14:55:24 -0400
From: cce@ccs.neu.edu
To: bugs@plt-scheme.org
Subject: sandbox-error-output parameter somehow interferes with DrScheme evaluation

>Number:         9492
>Category:       all
>Synopsis:       sandbox-error-output parameter somehow interferes with DrScheme evaluation
>Class:          sw-bug
>Responsible:    eli
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Thu Jun 12 14:56:01 -0400 2008
>Closed-Date:    Fri Dec 02 04:18:17 -0500 2011
>Last-Modified:  Fri Dec 02 04:18:17 -0500 2011
>Originator:     Carl Eastlund
>Organization:
plt
>Submitter-Id:   unknown
>Release:        4.0.0.1-svn11jun2008
>Environment:
macosx "Darwin Kauai.ccs.neu.edu 8.11.0 Darwin Kernel Version 8.11.0: Wed Oct 10 18:26:00 PDT 2007; root:xnu-792.24.17~1/RELEASE_PPC Power Macintosh powerpc" (ppc-macosx/3m) (get-display-depth) = 16
Human Language: english
(current-memory-use) 101927676

Collections:
(("/Users/cce/Library/PLT Scheme/4.0.0.1/collects" non-existent-path) ("/Users/cce/plt/trunk/collects" ".svn" "afm" "algol60" "browser" "combinator-parser" "compiler" "config" "defaults" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "little-helper" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profj" "profjWizard" "r5rs" "r6rs" "readline" "repos-time-stamp" "rnrs" "s-exp" "scheme" "scribble" "scribblings" "setup" "sgl" "sirmail" "slatex" "slideshow" "srfi" "srpersist" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tests" "tex2page" "texpict" "trace" "typed-scheme" "version" "waterworld" "web-server" "wxme" "xm!
 l"))
Computer Language: (("Module") (#(#t write mixed-fraction-e #f #t debug) (default) #()))
>Description:
This is a very confusing bug.  Under "Steps to Reproduce" below, I've pasted two files: "bug.ss" and "broken.ss".  If you put them in the same directory, then run "bug.ss" in the Module language of DrScheme, it will run without output, but the definition will produce no binding for "evaluator" and the expression will not be executed.  It's as if the error raised by trying to evaluate in the "broken.ss" language causes the program to come to a grinding halt.  Taking out the parameterization of sandbox-error-output, or wrapping a with-handlers to catch the exception, will prevent this bug and result in standard evaluation.
>How-To-Repeat:
;; bug.ss:
#lang scheme
(require scheme/sandbox)
(define evaluator
  (parameterize ([sandbox-error-output 'string])
    (make-evaluator "broken.ss")))
(list evaluator)

;; broken.ss:
#lang scheme
;; Providing nothing!
>Fix:
>Audit-Trail:
From: "Robby Findler" <robby@cs.uchicago.edu>
To: cce@ccs.neu.edu, bugs@plt-scheme.org
Cc: nobody@plt-scheme.org, eli@plt-scheme.org, matthias@plt-scheme.org,
        sk@plt-scheme.org, mflatt@plt-scheme.org, clements@plt-scheme.org,
        jay@plt-scheme.org, meunier@plt-scheme.org, sowens@plt-scheme.org,
        kathyg@plt-scheme.org, jacobm@plt-scheme.org, cce@plt-scheme.org,
        samth@plt-scheme.org, ryanc@plt-scheme.org, gcooper@plt-scheme.org
Subject: Re: [plt-bug] all/9492: sandbox-error-output parameter somehow interferes with DrScheme evaluation
Date: Thu, 12 Jun 2008 14:06:34 -0500

 Is this specific to DrScheme, or does the same thing happen in mzscheme?
 
 Thanks,
 Robby
 
 On Thu, Jun 12, 2008 at 1:56 PM,  <cce@ccs.neu.edu> wrote:
 > A new problem report is waiting at
 >  http://bugs.plt-scheme.org/query/?cmd=view&pr=9492
 >
 > Reported by Carl Eastlund for release: 4.0.0.1-svn11jun2008
 >
 > *** Description:
 > This is a very confusing bug.  Under "Steps to Reproduce" below, I've pasted two files: "bug.ss" and "broken.ss".  If you put them in the same directory, then run "bug.ss" in the Module language of DrScheme, it will run without output, but the definition will produce no binding for "evaluator" and the expression will not be executed.  It's as if the error raised by trying to evaluate in the "broken.ss" language causes the program to come to a grinding halt.  Taking out the parameterization of sandbox-error-output, or wrapping a with-handlers to catch the exception, will prevent this bug and result in standard evaluation.
 >
 > *** How to repeat:
 > ;; bug.ss:
 > #lang scheme
 > (require scheme/sandbox)
 > (define evaluator
 >  (parameterize ([sandbox-error-output 'string])
 >    (make-evaluator "broken.ss")))
 > (list evaluator)
 >
 > ;; broken.ss:
 > #lang scheme
 > ;; Providing nothing!
 >
 > *** Environment:
 > macosx "Darwin Kauai.ccs.neu.edu 8.11.0 Darwin Kernel Version 8.11.0: Wed Oct 10 18:26:00 PDT 2007; root:xnu-792.24.17~1/RELEASE_PPC Power Macintosh powerpc" (ppc-macosx/3m) (get-display-depth) = 16
 > Human Language: english
 > (current-memory-use) 101927676
 >
 > Collections:
 > (("/Users/cce/Library/PLT Scheme/4.0.0.1/collects" non-existent-path) ("/Users/cce/plt/trunk/collects" ".svn" "afm" "algol60" "browser" "combinator-parser" "compiler" "config" "defaults" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "little-helper" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profj" "profjWizard" "r5rs" "r6rs" "readline" "repos-time-stamp" "rnrs" "s-exp" "scheme" "scribble" "scribblings" "setup" "sgl" "sirmail" "slatex" "slideshow" "srfi" "srpersist" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tests" "tex2page" "texpict" "trace" "typed-scheme" "version" "waterworld" "web-server" "wxme" "xm!
 >  l"))
 > Computer Language: (("Module") (#(#t write mixed-fraction-e #f #t debug) (default) #()))
 >
 >
From: "Carl Eastlund" <cce@ccs.neu.edu>
To: "Robby Findler" <robby@cs.uchicago.edu>
Cc: bugs@plt-scheme.org, nobody@plt-scheme.org, eli@plt-scheme.org,
        matthias@plt-scheme.org, sk@plt-scheme.org, mflatt@plt-scheme.org,
        clements@plt-scheme.org, jay@plt-scheme.org, meunier@plt-scheme.org,
        sowens@plt-scheme.org, kathyg@plt-scheme.org, jacobm@plt-scheme.org,
        samth@plt-scheme.org, ryanc@plt-scheme.org, gcooper@plt-scheme.org
Subject: Re: [plt-bug] all/9492: sandbox-error-output parameter somehow interferes with DrScheme evaluation
Date: Thu, 12 Jun 2008 15:09:25 -0400

 It reproduces in mzscheme.
 
 On Thu, Jun 12, 2008 at 3:06 PM, Robby Findler <robby@cs.uchicago.edu> wrote:
 > Is this specific to DrScheme, or does the same thing happen in mzscheme?
 >
 > Thanks,
 > Robby
From: Sam Tobin-Hochstadt <samth@ccs.neu.edu>
To: cce@ccs.neu.edu, bugs@plt-scheme.org
Cc: bug-notification <bug-notification@racket-lang.org>,
        Eli Barzilay <eli@barzilay.org>
Subject: Re: [plt-bug] all/9492: sandbox-error-output parameter somehow
 interferes with DrScheme evaluation
Date: Thu, 1 Dec 2011 10:08:36 -0500

 The program in this bug now produces the error message:
 
 module: no #%module-begin binding in the module's language in: (module
 program "broken.ss")
 
 Is this the correct behavior? I can't tell.
 
 On Thu, Jun 12, 2008 at 2:56 PM,  <cce@ccs.neu.edu> wrote:
 >
 > Reported by Carl Eastlund for release: 4.0.0.1-svn11jun2008
 >
 > *** Description:
 > This is a very confusing bug.  Under "Steps to Reproduce" below, I've pasted two files: "bug.ss" and "broken.ss".  If you put them in the same directory, then run "bug.ss" in the Module language of DrScheme, it will run without output, but the definition will produce no binding for "evaluator" and the expression will not be executed.  It's as if the error raised by trying to evaluate in the "broken.ss" language causes the program to come to a grinding halt.  Taking out the parameterization of sandbox-error-output, or wrapping a with-handlers to catch the exception, will prevent this bug and result in standard evaluation.
 >
 > *** How to repeat:
 > ;; bug.ss:
 > #lang scheme
 > (require scheme/sandbox)
 > (define evaluator
 >  (parameterize ([sandbox-error-output 'string])
 >    (make-evaluator "broken.ss")))
 > (list evaluator)
 >
 > ;; broken.ss:
 > #lang scheme
 > ;; Providing nothing!
 
 
 
 -- 
 sam th
 samth@ccs.neu.edu
 

Responsible changed from "nobody" to "eli" by eli at Fri, 02 Dec 2011 04:18:17 -0500
Reason>>> sandbox

State changed from "open" to "closed" by eli at Fri, 02 Dec 2011 04:18:17 -0500
Reason>>> Yes, this is the correct behavior: `make-evaluator' is the function that creates a
sandboxed top-level style evaluator using a given language -- and in this case the
language is obviously broken.  The error is the one that you get if you try the code
that `make-evaluator' uses with this:

  (module program "broken.ss")

The confusing thing in the past was that an error during the initialization of the
sandbox would not get displayed too, and that's fixed now.

