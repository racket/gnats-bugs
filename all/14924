From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Sun Jan  4 14:22:30 2015
Received: from mail-ie0-f173.google.com (mail-ie0-f173.google.com [209.85.223.173])
	by winooski.ccs.neu.edu (8.14.7/8.14.7) with ESMTP id t04JMTfT013937
	for <bugs@bugs.plt-scheme.org>; Sun, 4 Jan 2015 14:22:29 -0500
Message-Id: <201501041922.t04JMR0r013917@winooski.ccs.neu.edu>
Date: Sun, 4 Jan 2015 14:22:27 -0500
From: eric.n.dobson@gmail.com
To: bugs@racket-lang.org
Subject: for/fold: over generalizes in some cases

>Number:         14924
>Category:       all
>Synopsis:       for/fold: over generalizes in some cases
>Class:          sw-bug
>Responsible:    nobody
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Sun Jan 04 14:24:01 -0500 2015
>Originator:     Eric Dobson
>Organization:
plt
>Submitter-Id:   unknown
>Release:        HEAD
>Environment:
MacIntel / Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2251.0 Safari/537.36
>Description:
When a sequence type has the form (Listof A), there is no need to generalize A to make the expanded for form type check, yet TR does it.
>How-To-Repeat:
#lang typed/racket

(define-type Var Symbol)
(define-type Expr (U Number Var))
(define-type Bindings (Listof (List Symbol Expr)))

(: f (Bindings -> (Listof Symbol)))
(define (f binds)
  (for/fold ((names : (Listof Symbol) empty)) ([bind binds])
    (: name Symbol)
    (match-define (list name v) bind)
    (cons name names)))
>Fix:
