From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Wed Nov 21 15:55:20 2012
Received: from mail-ia0-f172.google.com (mail-ia0-f172.google.com [209.85.210.172])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id qALKtH9h029110
	for <bugs@bugs.plt-scheme.org>; Wed, 21 Nov 2012 15:55:17 -0500
Message-Id: <201211212055.qALKtDM3029104@champlain.ccs.neu.edu>
Date: Wed, 21 Nov 2012 15:55:13 -0500
From: greghendershott@gmail.com
To: bugs@racket-lang.org
Subject: Shadowing a syntax-parse pattern variable isn't complete

>Number:         13280
>Category:       all
>Synopsis:       Shadowing a syntax-parse pattern variable isn't complete
>Class:          sw-bug
>Responsible:    nobody
>Severity:       non-critical
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Wed Nov 21 15:56:01 -0500 2012
>Originator:     Greg Hendershott
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.3
>Environment:
macosx "Darwin Gregs-MacBook-Pro.local 11.4.2 Darwin Kernel Version 11.4.2: Thu Aug 23 16:25:48 PDT 2012; root:xnu-1699.32.7~1/RELEASE_X86_64 x86_64" (x86_64-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 700808312
Links: (links) = ("raco-git"); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()


Collections:
("/Users/greg/Library/Racket/5.3/collects"
 ("info-domain"))
("/Applications/Racket_v5.3/collects"
 ("2htdp" "algol60" "at-exp" "browser" "compiler" "config" "data" "datalog" "db" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "future-visualizer" "games" "graphics" "gui-debugger" "help" "hierlist" "htdp" "html" "icons" "images" "info-domain" "json" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "picturing-programs" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "redex" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-engine" "texpict" "trace" "typed" "typed-racket" "typed-scheme" "unstable" "version" "web-server" "wxme" "xml" "xrepl"))

Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default "/Users/greg/src/scheme/collects") #() "#lang racket\n" #f #t ((main) (test))))
>Description:
Hesitated whether to report this because I don't think it's a
bug per se. Instead an expectation question.

If I shadow a syntax-parse pattern variable with something that
isn't, then use an attribute on the name, I get the original
"un-shadowed" thing instead of an error.

A possible expectation is that foo.x would be "undefined"
when shadowing foo doesn't have such an attribute, and
result in an error?
>How-To-Repeat:
#lang racket
(require (for-syntax syntax/parse))
(begin-for-syntax
  (define-syntax-class cls
    #:attributes (x y)
    (pattern x:expr #:with y #''not-an-error)))
(define-syntax (foo stx)
  (syntax-parse stx
    [(_ shadow-me:cls)
     ;; Shadow `shadow-me' using with-syntax or a nested syntax-parse
     (with-syntax ([shadow-me #''bar])
       #'shadow-me.y)])) ;using .y here mistakenly doesn't elicit an error
(foo 2) ; => 'not-an-error
>Fix:
