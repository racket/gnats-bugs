From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Tue Feb 16 12:14:03 2010
Received: from mail-yx0-f198.google.com (mail-yx0-f198.google.com [209.85.210.198])
	by champlain.ccs.neu.edu (8.14.3/8.14.3) with ESMTP id o1GHE1hv011633
	for <bugs@bugs.plt-scheme.org>; Tue, 16 Feb 2010 12:14:01 -0500
Message-Id: <201002161713.o1GHDwqZ011623@champlain.ccs.neu.edu>
Date: Tue, 16 Feb 2010 12:13:58 -0500
From: samth@ccs.neu.edu
To: bugs@plt-scheme.org
Subject: `object-contract' can't find methods not listed in previous `object-contract'

>Number:         10766
>Category:       all
>Synopsis:       `object-contract' can't find methods not listed in previous `object-contract'
>Class:          sw-bug
>Responsible:    sstrickl
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Tue Feb 16 12:16:01 -0500 2010
>Closed-Date:    Tue Feb 16 17:14:57 -0500 2010
>Last-Modified:  Tue Feb 16 17:24:01 -0500 2010
>Originator:     Sam TH
>Organization:
plt
>Submitter-Id:   unknown
>Release:        4.2.4.2-svn15feb2010
>Environment:
unix "Linux ajax 2.6.31-17-generic #54-Ubuntu SMP Thu Dec 10 16:20:31 UTC 2009 i686 GNU/Linux" (i386-linux/3m) (get-display-depth) = 24
Human Language: english
(current-memory-use) 124951676

Collections:
(("/home/samth/.plt-scheme/4.2.4.2/collects" non-existent-path) ("/home/samth/sw/plt-trunk/collects" "ffi" "hierlist" "teachpack" ".svn" "icons" "framework" "planet" "test-engine" "trace" "unstable" "htdp" "setup" "embedded-gui" "readline" "browser" "deinprogramm" "algol60" "make" "scribblings" "mzscheme" "mrlib" "sgl" "r5rs" "xml" "redex" "repos-time-stamp" "honu" "games" "syntax-color" "launcher" "parser-tools" "reader" "slideshow" "help" "drscheme" "scheme" "dynext" "afm" "srpersist" "sirmail" "tests" "handin-client" "plot" "html" "tex2page" "handin-server" "meta" "info-domain" "graphics" "profile" "lazy" "macro-debugger" "lang" "compiler" "mzcom" "gui-debugger" "guibuilder" "mysterx" "frtime" "rnrs" "scribble" "r6rs" "stepper" "syntax" "scriblib" "2htdp" "combinator-parser" "string-constants" "waterworld" "openssl" "schemeunit" "slatex" "errortrace" "net" "eopl" "s-exp" "mzlib" "typed-scheme" "wxme" "web-server" "config" "test-box-recovery" "srfi" "svn.commit~" "mred" "v!
 ersion" "defaults" "at-exp" "texpict" "file" "swindle" "typed" "preprocessor"))
Computer Language: (("Teaching Languages" "How to Design Programs" "Beginning Student") (#(#t constructor repeating-decimal #f #t none) #f ()))
>Description:
Consider this program:

#lang scheme

(define c1 (object-contract))
(define c2 (object-contract (m (-> any/c any/c))))

(define c% (class object% (define/public (m x) x) (super-new)))

(define/contract v1 c1 (new c%))
(send v1 m 5)
(define/contract v2 c2 v1)

`c1' doesn't specify any methods, but we can still call `m' on `v1', which prints 5.  

However, if we try to apply a contract that mentions `m' to `v1', we get this error:


<collects>/typed-scheme/objtest.ss:10.17: (definition v2) broke the contract 
  (object-contract (m (-> any/c any/c))) on v2; expected an object with method m
>How-To-Repeat:
>Fix:
>Audit-Trail:
Responsible changed from "nobody" to "sstrickl" by sstrickl at Tue, 16 Feb 2010 14:11:58 -0500
Reason>>> I'm the man with the plan.

State changed from "open" to "analyzed" by sstrickl at Tue, 16 Feb 2010 14:11:58 -0500
Reason>>> So translucent, not opaque, contracts are wanted here.  I can fix that for now, 
and we can actually have separate translucent and opaque contract systems 
when we move to object/c.

From: Robby Findler <robby@eecs.northwestern.edu>
To: bugs@plt-scheme.org
Cc: sstrickl@plt-scheme.org, nobody@plt-scheme.org,
        bug-notification@plt-scheme.org, samth@ccs.neu.edu
Subject: Re: [plt-bug] all/10766 `object-contract' can't find methods not 
	listed in previous `object-contract'
Date: Tue, 16 Feb 2010 14:09:50 -0600

 FWIW, if the semantics of object/c contract change, that'd be fine.
 They are strange.
 
 Changing the semantics of the class system is a larger deal, but
 that's also doable (and done several times now).
 
 Robby
 
 On Tue, Feb 16, 2010 at 1:11 PM,  <sstrickl@plt-scheme.org> wrote:
 >
 > Responsible changed from "nobody" to "sstrickl" by sstrickl at Tue, 16 Fe=
 b 2010 14:11:58 -0500
 > Reason>>> I'm the man with the plan.
 >
 > State changed from "open" to "analyzed" by sstrickl at Tue, 16 Feb 2010 1=
 4:11:58 -0500
 > Reason>>> So translucent, not opaque, contracts are wanted here. =C2=A0I =
 can fix that for now,
 > and we can actually have separate translucent and opaque contract systems
 > when we move to object/c.
 >
 >
 > View:
 > =C2=A0http://bugs.plt-scheme.org/query/?cmd=3Dview&pr=3D10766
 >
 >

State changed from "analyzed" to "closed" by sstrickl at Tue, 16 Feb 2010 17:14:57 -0500
Reason>>> Fixed in SVN, r18102.

From: Stevie Strickland <sstrickl@plt-scheme.org>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: bugs@plt-scheme.org, nobody@plt-scheme.org,
        bug-notification@plt-scheme.org, samth@ccs.neu.edu
Subject: Re: [plt-bug] all/10766 `object-contract' can't find methods not  listed in previous `object-contract'
Date: Tue, 16 Feb 2010 17:14:32 -0500

 On Feb 16, 2010, at 3:09 PM, Robby Findler wrote:
 > FWIW, if the semantics of object/c contract change, that'd be fine.
 > They are strange.
 
 :)
 
 Yeah, what I plan for object/c will definitely differ from =
 object-contract, especially in the cases of object state, etc. (since =
 object-contract right now copies all the fields).  But once we have =
 class/c, object/c is basically "treat the object as if its class was =
 wrapped with the equivalent class/c contract".  Really, we should =
 discuss this sometime just to get you up to speed with where I am on =
 what I've been working on.
 
 > Changing the semantics of the class system is a larger deal, but
 > that's also doable (and done several times now).
 
 Right.  I don't really plan on changing the semantics of the class =
 system in a major way, if at all.  I think all the changes I've made are =
 only in the internals, and users of the class system shouldn't see any =
 semantic changes.
 
 Stevie=
From: Robby Findler <robby@eecs.northwestern.edu>
To: Stevie Strickland <sstrickl@plt-scheme.org>
Cc: Robby Findler <robby@eecs.northwestern.edu>, bugs@plt-scheme.org,
        nobody@plt-scheme.org, bug-notification@plt-scheme.org,
        samth@ccs.neu.edu
Subject: Re: [plt-bug] all/10766 `object-contract' can't find methods not 
	listed in previous `object-contract'
Date: Tue, 16 Feb 2010 16:22:42 -0600

 Oh right. I meant object-contract. Glad to hear you're sorting this
 out. Now that you say that I do recall something but another
 discussion that brings me up to speed would be most welcome.
 
 Thanks and sorry.
 
 Robby
 
 On Tuesday, February 16, 2010, Stevie Strickland
 <sstrickl@plt-scheme.org> wrote:
 > On Feb 16, 2010, at 3:09 PM, Robby Findler wrote:
 >> FWIW, if the semantics of object/c contract change, that'd be fine.
 >> They are strange.
 >
 > :)
 >
 > Yeah, what I plan for object/c will definitely differ from object-contrac=
 t, especially in the cases of object state, etc. (since object-contract rig=
 ht now copies all the fields). =C2=A0But once we have class/c, object/c is =
 basically "treat the object as if its class was wrapped with the equivalent=
  class/c contract". =C2=A0Really, we should discuss this sometime just to g=
 et you up to speed with where I am on what I've been working on.
 >
 >> Changing the semantics of the class system is a larger deal, but
 >> that's also doable (and done several times now).
 >
 > Right. =C2=A0I don't really plan on changing the semantics of the class s=
 ystem in a major way, if at all. =C2=A0I think all the changes I've made ar=
 e only in the internals, and users of the class system shouldn't see any se=
 mantic changes.
 >
 > Stevie
