From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Wed Nov 14 19:11:04 2012
Received: from mail-ia0-f172.google.com (mail-ia0-f172.google.com [209.85.210.172])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id qAF0B0au005763
	for <bugs@bugs.plt-scheme.org>; Wed, 14 Nov 2012 19:11:00 -0500
Message-Id: <201211150010.qAF0Allf005751@champlain.ccs.neu.edu>
Date: Wed, 14 Nov 2012 19:10:47 -0500
From: stchang@ccs.neu.edu
To: bugs@racket-lang.org
Subject: stream-filter leaks memory

>Number:         13257
>Category:       all
>Synopsis:       stream-filter leaks memory
>Class:          sw-bug
>Responsible:    nobody
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Wed Nov 14 19:12:01 -0500 2012
>Originator:     Stephen Chang
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.3.1.1
>Environment:
unix "Linux caprica 3.0.0-13-generic #22-Ubuntu SMP Wed Nov 2 13:27:26 UTC 2011 x86_64 x86_64 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 1196518672
Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()


Collections:
("/home/stchang/.racket/5.3.1.1/collects"
 (non-existent-path))
("/home/stchang/plt/collects"
 ("html" "errortrace" "parser-tools" "scribble" "mzscheme" "scriblib" "algol60" "make" "racklog" "repo-time-stamp" "ffi" "drscheme" "version" "images" "config" "plai" "handin-client" "web-server" "defaults" "typed-racket" "readline" "scribblings" "unstable" "data" "scheme" "slideshow" "planet" "texpict" "test-box-recovery" "racket" "future-visualizer" "slatex" "htdp" "rackunit" "2htdp" "xrepl" "compatibility" "openssl" "lazy" "srfi" "info-domain" "syntax-color" "typed" "mzlib" "games" "db" "dynext" "frtime" "test-engine" "drracket" "datalog" "json" "launcher" "mzcom" "framework" "teachpack" "mrlib" "meta" "icons" "deinprogramm" "lang" "tests" "raco" "wxme" "at-exp" ".gitignore" "schemeunit" "sgl" "redex" "eopl" "plot" "rnrs" "xml" "file" "sirmail" "embedded-gui" "reader" "swindle" "graphics" "trace" "compiler" "browser" "profile" "honu" "help" "macro-debugger" "net" "setup" "mred" "stepper" "s-exp" "gui-debugger" "mysterx" "string-constants" "tex2page" "combinator-parser" "h!
 andin-server" "picturing-programs" "r6rs" "hierlist" "preprocessor" "r5rs" "typed-scheme" "syntax"))

Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t none) (default) #() "#lang racket\n" #t #f ((main) (test))))
>Description:
stream-filter should run in constant space but it does not. 

(You can assign this bug to me.)
>How-To-Repeat:
Here is an example from srfi 41. The srfi 41 version runs in constant space but the racket version does not because it hangs onto the skipped stream elements.

#lang racket

(require (prefix-in s41: srfi/41)
         (prefix-in r: racket/stream))

(define (s41:from n) (s41:stream-cons n (s41:from (add1 n))))
(define (s41:times3 n)
  (s41:stream-car (s41:stream-cdr (s41:stream-cdr (s41:stream-cdr
    (s41:stream-filter (λ (x) (zero? (modulo x n))) (s41:from 0)))))))

(define (r:from n) (r:stream-cons n (r:from (add1 n))))
(define (r:times3 n)
  (r:stream-first (r:stream-rest (r:stream-rest (r:stream-rest
    (r:stream-filter (λ (x) (zero? (modulo x n))) (r:from 0)))))))

(require rackunit)
(check-equal? (s41:times3 5) (r:times3 5) 15)

(define LARGE 1000000000)

;; (s41:times3 LARGE) ;; constant space
;; (r:times3 LARGE)   ;; not constant space
>Fix:
