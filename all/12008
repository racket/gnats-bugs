From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Sun Jun 26 04:58:21 2011
Received: from mail-vw0-f44.google.com (mail-vw0-f44.google.com [209.85.212.44])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id p5Q8wIUo009575
	for <bugs@bugs.plt-scheme.org>; Sun, 26 Jun 2011 04:58:18 -0400
Message-Id: <201106260858.p5Q8wDOT009564@champlain.ccs.neu.edu>
Date: Sun, 26 Jun 2011 04:58:13 -0400
From: neil@neilvandyke.org
To: bugs@racket-lang.org
Subject: #1234567890(1) crashes DrRacket and racket command-line program

>Number:         12008
>Category:       all
>Synopsis:       #1234567890(1) crashes DrRacket and racket command-line program
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Sun Jun 26 05:00:01 -0400 2011
>Closed-Date:    Thu Jun 30 11:49:03 -0400 2011
>Last-Modified:  Thu Jun 30 11:49:03 -0400 2011
>Originator:     Neil Van Dyke
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.1.1
>Environment:
unix "Linux computer 2.6.26-2-686 #1 SMP Thu Jan 27 00:28:05 UTC 2011 i686 GNU/Linux" (i386-linux/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 119298904

Collections:
("/home/user/.racket/5.1.1/collects"
 (non-existent-path))
("/usr/local/racket-5.1.1/lib/racket/collects"
 ("stepper" "r5rs" "parser-tools" "profile" "web-server" "mrlib" "make" "teachpack" "gui-debugger" "browser" "racket" "rackunit" "html" "reader" "rnrs" "config" "texpict" "racklog" "file" "preprocessor" "graphics" "mzcom" "syntax-color" "planet" "trace" "scribblings" "sgl" "openssl" "r6rs" "raco" "tests" "mred" "drracket" "datalog" "s-exp" "ffi" "framework" "data" "typed-scheme" "slatex" "version" "redex" "eopl" "macro-debugger" "scriblib" "info-domain" "typed" "unstable" "syntax" "embedded-gui" "icons" "2htdp" "scheme" "setup" "htdp" "dynext" "scribble" "lang" "defaults" "mysterx" "errortrace" "wxme" "hierlist" "frtime" "xml" "deinprogramm" "test-engine" "picturing-programs" "string-constants" "srfi" "mzscheme" "plai" "slideshow" "mzlib" "algol60" "compiler" "help" "net" "lazy" "combinator-parser" "readline" "tex2page" "launcher" "swindle" "at-exp" "drscheme" "schemeunit" "games" "test-box-recovery" "plot"))

Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t))
>Description:
Trying to read (evaluate?) "#1234567890(1)" in DrRacket or the "racket" command-line REPL crashes with a SIGSEGV.

At least on 32-bit x86 with Racket 5.1.1.
>How-To-Repeat:
With "#lang racket", attempt to evaluate this:

(begin #123456789(1) 'hi)
>Fix:
>Audit-Trail:
From: Neil Van Dyke <neil@neilvandyke.org>
To: bugs@racket-lang.org, bug-notification@racket-lang.org
Cc: 
Subject: Re: [racket-bug] all/12008: #1234567890(1) crashes DrRacket and racket
 command-line program
Date: Sun, 26 Jun 2011 05:09:52 -0400

 This problem was discovered by user "rapacity" on the IRC channel.
 
From: Neil Van Dyke <neil@neilvandyke.org>
To: bugs@racket-lang.org, bug-notification@racket-lang.org
Cc: 
Subject: Re: [racket-bug] all/12008: #1234567890(1) crashes DrRacket and racket
 command-line program
Date: Sun, 26 Jun 2011 05:16:19 -0400

 This crash was observed by two different users with 5.1.1 on GNU/Linux.  
 One user on x86, and the other on x86_64.
 
 This crash was *not* observed by a third user with a patched version of 
 5.1.1 on GNU/Linux, on amd64.  List of patches at: 
 http://paste.debian.net/121026/
 
From: Eli Barzilay <eli@barzilay.org>
To: Neil Van Dyke <neil@neilvandyke.org>
Cc: bugs@racket-lang.org, rapacity@codealife.com,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12008: #1234567890(1) crashes DrRacket and racket
 command-line program
Date: Mon, 27 Jun 2011 00:37:24 -0400

 Yesterday, Neil Van Dyke wrote:
 > This crash was observed by two different users with 5.1.1 on
 > GNU/Linux.  One user on x86, and the other on x86_64.
 > 
 > This crash was *not* observed by a third user with a patched version
 > of 5.1.1 on GNU/Linux, on amd64.  List of patches at:
 > http://paste.debian.net/121026/
 
 Looking at the stacktrace shows the relevant piece of information:
 
   #3  0x0000000000640e92 in out_of_memory ()
   #4  0x000000000064744e in malloc_pages.clone.52 ()
   #5  0x000000000064aa53 in allocate_big ()
   #6  0x0000000000425b89 in scheme_malloc_fail_ok ()
   #7  0x000000000062939f in scheme_make_vector ()
   #8  0x00000000005ad5d7 in read_vector ()
   #9  0x00000000005a5a2e in read_inner_inner ()
 
 -- when it reads "#1234567890(1)", it tries to allocate a huge vector,
 so having it lead to the same error as you get from
 (make-vector 1234567890) seems sensible.
 
 (This is because "#10(1 2 3)" is shorthand syntax for #(1 2 3 3 3 3 3
 3 3 3).)
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!
From: Robby Findler <robby@eecs.northwestern.edu>
To: Eli Barzilay <eli@barzilay.org>
Cc: Neil Van Dyke <neil@neilvandyke.org>, bugs@racket-lang.org,
        rapacity@codealife.com, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12008: #1234567890(1) crashes DrRacket and
 racket command-line program
Date: Mon, 27 Jun 2011 14:46:08 +0800

 It still shouldn't crash drracket, tho.
 
 Unless the memory limit was disabled?
 
 Robby
 
 On Mon, Jun 27, 2011 at 12:37 PM, Eli Barzilay <eli@barzilay.org> wrote:
 > Yesterday, Neil Van Dyke wrote:
 >> This crash was observed by two different users with 5.1.1 on
 >> GNU/Linux.  One user on x86, and the other on x86_64.
 >>
 >> This crash was *not* observed by a third user with a patched version
 >> of 5.1.1 on GNU/Linux, on amd64.  List of patches at:
 >> http://paste.debian.net/121026/
 >
 > Looking at the stacktrace shows the relevant piece of information:
 >
 >  #3  0x0000000000640e92 in out_of_memory ()
 >  #4  0x000000000064744e in malloc_pages.clone.52 ()
 >  #5  0x000000000064aa53 in allocate_big ()
 >  #6  0x0000000000425b89 in scheme_malloc_fail_ok ()
 >  #7  0x000000000062939f in scheme_make_vector ()
 >  #8  0x00000000005ad5d7 in read_vector ()
 >  #9  0x00000000005a5a2e in read_inner_inner ()
 >
 > -- when it reads "#1234567890(1)", it tries to allocate a huge vector,
 > so having it lead to the same error as you get from
 > (make-vector 1234567890) seems sensible.
 >
 > (This is because "#10(1 2 3)" is shorthand syntax for #(1 2 3 3 3 3 3
 > 3 3 3).)
 >
 > --
 >          ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
 >                    http://barzilay.org/                   Maze is Life!
 >
 
From: Eli Barzilay <eli@barzilay.org>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: Neil Van Dyke <neil@neilvandyke.org>, bugs@racket-lang.org,
        rapacity@codealife.com, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12008: #1234567890(1) crashes DrRacket and
 racket command-line program
Date: Mon, 27 Jun 2011 02:56:40 -0400

 Two minutes ago, Robby Findler wrote:
 > It still shouldn't crash drracket, tho.
 > 
 > Unless the memory limit was disabled?
 
 Good point.  As far as memory limits go, it works:
 
   #lang racket
   (require racket/sandbox)
   (define e (make-evaluator 'racket))
   (with-handlers ([exn? (thunk* (error "poof!"))])
     (e "#1234567890(1)"))
 
 produces my error.
 
 But it looks like there is a drracket bug, when I enter
 
   #12345678900(1)
 
 (note the extra 0), I get a read error -- but it's an internal drr
 error: it's printed on stderr, and drr resumes reading from the same
 point (so another newline gets another error).
 
 If instead of that I try the original
 
   #1234567890(1)
 
 There is a different problem -- stderr shows "Racket virtual machine
 has run out of memory; aborting", and after a while it crashes.  But
 using `make-vector' behaves as expected in all cases.
 
 (BTW, I was careful to say that IMO having it lead to the same error
 as the `make-vector' one makes sense, so the drr issue certainly looks
 like a bug there.)
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!
From: Neil Van Dyke <neil@neilvandyke.org>
To: bugs@racket-lang.org
Cc: bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12008: #1234567890(1) crashes DrRacket and racket
 command-line program
Date: Mon, 27 Jun 2011 03:01:59 -0400

 Robby Findler wrote at 06/27/2011 02:46 AM:
 > It still shouldn't crash drracket, tho.
 >   
 
 I forgot to mention, when I was constructing the test case, my system, 
 "#123456789(1)" gave a caught "out of memory" error in DrRacket.  Adding 
 a "0" pushed it over the edge to crash.
 
 After Eli's comments, I wondered whether the allocation was actually 
 happening before the memory check is made.  If so, then that could 
 present a security vulnerability in a system relying upon the memory 
 limit mechanism to help sandbox untrusted code, separate from this crash 
 bug.
 
From: Eli Barzilay <eli@barzilay.org>
To: Neil Van Dyke <neil@neilvandyke.org>
Cc: bugs@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12008: #1234567890(1) crashes DrRacket and racket
 command-line program
Date: Mon, 27 Jun 2011 03:14:03 -0400

 10 minutes ago, Neil Van Dyke wrote:
 > Robby Findler wrote at 06/27/2011 02:46 AM:
 > > It still shouldn't crash drracket, tho.
 > >   
 > 
 > I forgot to mention, when I was constructing the test case, my system, 
 > "#123456789(1)" gave a caught "out of memory" error in DrRacket.  Adding 
 > a "0" pushed it over the edge to crash.
 > 
 > After Eli's comments, I wondered whether the allocation was actually 
 > happening before the memory check is made.  If so, then that could 
 > present a security vulnerability in a system relying upon the memory 
 > limit mechanism to help sandbox untrusted code, separate from this crash 
 > bug.
 
 [Strictly speaking, this is not a security issue, since drracket can
 run any insecure code.  I think that it's more like the fact that
 macro expansion (still?) happens outside of its memory limit.]
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!
From: Neil Van Dyke <neil@neilvandyke.org>
To: 
Cc: bugs@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12008: #1234567890(1) crashes DrRacket and racket
 command-line program
Date: Mon, 27 Jun 2011 03:17:00 -0400

 > [Strictly speaking, this is not a security issue, since drracket can
 > run any insecure code.  I think that it's more like the fact that
 > macro expansion (still?) happens outside of its memory limit.]
 >   
 
 I think we probably meant the same thing.  I was thinking that, if this 
 same memory-limiting mechanism was used to sandbox, such as in a server, 
 it could be exploitable.
 
 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Neil Van Dyke <neil@neilvandyke.org>
Cc: bugs@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12008: #1234567890(1) crashes DrRacket and
 racket command-line program
Date: Mon, 27 Jun 2011 15:27:02 +0800

 On Mon, Jun 27, 2011 at 3:01 PM, Neil Van Dyke <neil@neilvandyke.org> wrote:
 > Robby Findler wrote at 06/27/2011 02:46 AM:
 >>
 >> It still shouldn't crash drracket, tho.
 >>
 >
 > I forgot to mention, when I was constructing the test case, my system,
 > "#123456789(1)" gave a caught "out of memory" error in DrRacket.  Adding a
 > "0" pushed it over the edge to crash.
 >
 > After Eli's comments, I wondered whether the allocation was actually
 > happening before the memory check is made.  If so, then that could present a
 > security vulnerability in a system relying upon the memory limit mechanism
 > to help sandbox untrusted code, separate from this crash bug.
 
 I think that probabably drracket is reading the editor in a way that's
 not set up with proper protections somehow (ie it is a bug in
 drracket, not racket)
 
 Robby
 
Responsible changed from "nobody" to "mflatt" by mflatt@racket-lang.org at Thu, 30 Jun 2011 11:49:03 -0400
Reason>>> A commit by mflatt@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/37e4ea497b
State changed from "open" to "closed" by mflatt@racket-lang.org at Thu, 30 Jun 2011 11:49:03 -0400
Reason>>> A commit by mflatt@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/37e4ea497b
