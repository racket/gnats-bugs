From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Wed May 29 12:29:51 2013
Received: from mail-oa0-f54.google.com (mail-oa0-f54.google.com [209.85.219.54])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id r4TGTm1w013953
	for <bugs@bugs.plt-scheme.org>; Wed, 29 May 2013 12:29:48 -0400
Message-Id: <201305291629.r4TGTkbr013947@champlain.ccs.neu.edu>
Date: Wed, 29 May 2013 12:29:46 -0400
From: skanaley@gmail.com
To: bugs@racket-lang.org
Subject: Object System Wrong Method Call

>Number:         13798
>Category:       all
>Synopsis:       Object System Wrong Method Call
>Class:          sw-bug
>Responsible:    asumu
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Wed May 29 12:32:01 -0400 2013
>Closed-Date:    Wed May 29 13:10:15 -0400 2013
>Last-Modified:  Wed May 29 13:20:01 -0400 2013
>Originator:     Sean Kanaley
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.3.4--2013-05-08(-/f)
>Environment:
unix "Linux skanaley 3.2.0-44-generic-pae #69-Ubuntu SMP Thu May 16 18:50:07 UTC 2013 i686 athlon i386 GNU/Linux" (i386-linux/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 362985944
Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()
raco pkg (show):
Installation-wide:
 [none]
User-specific, all-version:
 [none]
User-specific, version-specific (5.3.4):
 [none]



Collections:
("/home/seanner/.racket/5.3.4/collects"
 (non-existent-path))
("/usr/share/racket/collects"
 ("parser-tools" "unstable" "plot" "file" "browser" "setup" "net" "teachpack" "scribblings" "mysterx" "web-server" "datalog" "games" "errortrace" "drracket" "launcher" "scriblib" "make" "typed-racket" "ffi" "deinprogramm" "2htdp" "racket" "readline" "schemeunit" "typed" "db" "reader" "handin-server" "picturing-programs" "xml" "tests" "compatibility" "trace" "preprocessor" "help" "syntax" "realm" "icons" "html" "hierlist" "handin-client" "version" "syntax-color" "lazy" "macro-debugger" "slatex" "wxme" "raco" "graphics" "math" "future-visualizer" "mred" "mzscheme" "racklog" "eopl" "mzcom" "mrlib" "algol60" "string-constants" "at-exp" "dynext" "swindle" "images" "scribble" "rnrs" "plai" "slideshow" "xrepl" "sgl" "s-exp" "profile" "pkg" "mzlib" "defaults" "test-engine" "meta" "typed-scheme" "compiler" "json" "planet" "info-domain" "data" "scheme" "r5rs" "gui-debugger" "stepper" "frtime" "r6rs" "srfi" "redex" "drscheme" "repo-time-stamp" "framework" "openssl" "htdp" "texpict" "la!
 ng" "embedded-gui" "rackunit" "honu" "config"))

Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #f #t ((main) (test))))
>Description:
The object system can call a method of a different name than the one in the "apply" position when abstract methods are declared in the hierarchy, e.g.

(send this add1 3) => 4
(add1 3) => *whatever the abstract method of a different name does*

The problem can be circumvented by using (send this method x ...) vs (method ...).
>How-To-Repeat:
(define test%
  (class object% (super-new)
    (define/public (name) "test")))
(define sub-abstract%
  (class test% (super-new) (inherit name)
    (abstract broken)
    (define/public (full-name) (string-append (name) "subabs"))))
(define sub-concrete%
  (class sub-abstract% (super-new)
    (define/override (broken) "broken")))

(send (new sub-concrete%) full-name)
=> "brokensubabs"

Changing full-name to use (send this name) instead of (name) results in what I would think should be the result:
(send (new sub-concrete%) full-name)
=> "testsubabs"

Overriding without inheriting also works properly:
...
(define sub-abstract%
  (class test% (super-new) ;(inherit name)
    (abstract broken)
    (define/override (name) (string-append (super name) "subabs"))))
...
(send (new sub-concrete%) name)
=> "testsubabs"
>Fix:
>Audit-Trail:
Responsible changed from "nobody" to "asumu" by asumu@racket-lang.org at Wed, 29 May 2013 13:10:15 -0400
Reason>>> A commit by asumu@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/6988b2e138
State changed from "open" to "closed" by asumu@racket-lang.org at Wed, 29 May 2013 13:10:15 -0400
Reason>>> A commit by asumu@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/6988b2e138
  | Fix method accessors for inherits and abstracts
  | 
  | Closes PR 13798

From: Asumu Takikawa <asumu@ccs.neu.edu>
To: skanaley@gmail.com, bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/13798: Object System Wrong Method Call
Date: Wed, 29 May 2013 13:11:01 -0400

 On 2013-05-29 12:32:01 -0400, skanaley@gmail.com wrote:
 > *** Description:
 > The object system can call a method of a different name than the one
 > in the "apply" position when abstract methods are declared in the
 > hierarchy, e.g.
 
 Thanks for the report! This should be fixed in git now.
 
 Cheers,
 Asumu
