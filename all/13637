From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Wed Mar 27 15:26:50 2013
Received: from mail-oa0-f47.google.com (mail-oa0-f47.google.com [209.85.219.47])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id r2RJQkqD025367
	for <bugs@bugs.plt-scheme.org>; Wed, 27 Mar 2013 15:26:46 -0400
Message-Id: <201303271926.r2RJQhc6025360@champlain.ccs.neu.edu>
Date: Wed, 27 Mar 2013 15:26:43 -0400
From: sbloch@adelphi.edu
To: bugs@racket-lang.org
Subject: stepper doesn't step into infinite loop

>Number:         13637
>Category:       all
>Synopsis:       stepper doesn't step into infinite loop
>Class:          sw-bug
>Responsible:    nobody
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Wed Mar 27 15:28:01 -0400 2013
>Last-Modified:  Thu Nov 20 12:16:02 -0500 2014
>Originator:     Stephen Bloch
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.3.1
>Environment:
windows "Windows NT 5.1 (Build 2600) Service Pack 3" (win32\i386\3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 157905712
Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()


Collections:
("C:\\Documents and Settings\\Administrator\\Application Data\\Racket\\5.3.1\\collects"
 (non-existent-path))
("C:\\Program Files\\Racket\\collects"
 ("2htdp" "algol60" "at-exp" "browser" "compatibility" "compiler" "config" "data" "datalog" "db" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "future-visualizer" "games" "graphics" "gui-debugger" "help" "hierlist" "htdp" "html" "icons" "images" "info-domain" "json" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "picturing-programs" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "redex" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-engine" "texpict" "trace" "typed" "typed-racket" "typed-scheme" "unstable" "version" "web-server" "wxme" "xml" "xrepl"))

Computer Language: (("Teaching Languages" "How to Design Programs" "Beginning Student") (#(#t constructor repeating-decimal #f #t none) #f ()))
>Description:
A student wrote a simple infinitely-recursive function and hit "Run".  Naturally, it froze until we stopped it.  So I suggested using the Stepper... but the Stepper froze too.  I inserted another non-recursive expression in front of it, and the Stepper evaluated it, but then said "No more steps" rather than showing me what was happening in the recursion.
>How-To-Repeat:
(define (f x) (f x))

(+ 1 2) "should be 3"
(f 1) "should be something"
(f 2) "should be something"
>Fix:
>Audit-Trail:
From: Stephen Chang <stchang@ccs.neu.edu>
To: Stephen Bloch <sbloch@adelphi.edu>, bugs <bugs@racket-lang.org>
Cc: nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/13637: stepper doesn't step into infinite loop
Date: Wed, 27 Mar 2013 17:54:05 -0400

 This happens because the stepper doesn't display duplicate steps.
 
 I believe this is the same as pr 13469, which I'm looking into. Both
 can be assigned to me.
 
 On Wed, Mar 27, 2013 at 3:28 PM,  <sbloch@adelphi.edu> wrote:
 > A new problem report is waiting at
 >   http://bugs.racket-lang.org/query/?cmd=view&pr=13637
 >
 > Reported by Stephen Bloch for release: 5.3.1
 >
 > *** Description:
 > A student wrote a simple infinitely-recursive function and hit "Run".  Naturally, it froze until we stopped it.  So I suggested using the Stepper... but the Stepper froze too.  I inserted another non-recursive expression in front of it, and the Stepper evaluated it, but then said "No more steps" rather than showing me what was happening in the recursion.
 >
 > *** How to repeat:
 > (define (f x) (f x))
 >
 > (+ 1 2) "should be 3"
 > (f 1) "should be something"
 > (f 2) "should be something"
 >
 > *** Environment:
 > windows "Windows NT 5.1 (Build 2600) Service Pack 3" (win32\i386\3m) (get-display-depth) = 32
 > Human Language: english
 > (current-memory-use) 157905712
 > Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()
 >
 >
 > Collections:
 > ("C:\\Documents and Settings\\Administrator\\Application Data\\Racket\\5.3.1\\collects"
 >  (non-existent-path))
 > ("C:\\Program Files\\Racket\\collects"
 >  ("2htdp" "algol60" "at-exp" "browser" "compatibility" "compiler" "config" "data" "datalog" "db" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "future-visualizer" "games" "graphics" "gui-debugger" "help" "hierlist" "htdp" "html" "icons" "images" "info-domain" "json" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "picturing-programs" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "redex" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-engine" "texpict" "trace" "typed" "typed-racket" "typed-scheme" "unstable" "version" "web-server" "wxme" "xml" "xrepl"))
 >
 > Computer Language: (("Teaching Languages" "How to Design Programs" "Beginning Student") (#(#t constructor repeating-decimal #f #t none) #f ()))
 >
 
From: John Clements <clements@brinckerhoff.org>
To: Stephen Chang <stchang@ccs.neu.edu>
Cc: Stephen Bloch <sbloch@adelphi.edu>, bugs <bugs@racket-lang.org>,
        nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/13637: stepper doesn't step into infinite loop
Date: Wed, 27 Mar 2013 16:28:30 -0700

 On Mar 27, 2013, at 2:54 PM, Stephen Chang wrote:
 
 > This happens because the stepper doesn't display duplicate steps.
 > 
 > I believe this is the same as pr 13469, which I'm looking into. Both
 > can be assigned to me.
 
 Stephen, can you go ahead and claim these two?
  
 (or close the dup, if you like)
 
 John
 
 > 
 > On Wed, Mar 27, 2013 at 3:28 PM,  <sbloch@adelphi.edu> wrote:
 >> A new problem report is waiting at
 >>  http://bugs.racket-lang.org/query/?cmd=view&pr=13637
 >> 
 >> Reported by Stephen Bloch for release: 5.3.1
 >> 
 >> *** Description:
 >> A student wrote a simple infinitely-recursive function and hit "Run".  Naturally, it froze until we stopped it.  So I suggested using the Stepper... but the Stepper froze too.  I inserted another non-recursive expression in front of it, and the Stepper evaluated it, but then said "No more steps" rather than showing me what was happening in the recursion.
 >> 
 >> *** How to repeat:
 >> (define (f x) (f x))
 >> 
 >> (+ 1 2) "should be 3"
 >> (f 1) "should be something"
 >> (f 2) "should be something"
 >> 
 >> *** Environment:
 >> windows "Windows NT 5.1 (Build 2600) Service Pack 3" (win32\i386\3m) (get-display-depth) = 32
 >> Human Language: english
 >> (current-memory-use) 157905712
 >> Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()
 >> 
 >> 
 >> Collections:
 >> ("C:\\Documents and Settings\\Administrator\\Application Data\\Racket\\5.3.1\\collects"
 >> (non-existent-path))
 >> ("C:\\Program Files\\Racket\\collects"
 >> ("2htdp" "algol60" "at-exp" "browser" "compatibility" "compiler" "config" "data" "datalog" "db" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "future-visualizer" "games" "graphics" "gui-debugger" "help" "hierlist" "htdp" "html" "icons" "images" "info-domain" "json" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "picturing-programs" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "redex" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-engine" "texpict" "trace" "typed" "typed-racket" "typed-scheme" "unstable" "version" "web-server" "wxme" "xml" "xrepl"))
 >> 
 >> Computer Language: (("Teaching Languages" "How to Design Programs" "Beginning Student") (#(#t constructor repeating-decimal #f #t none) #f ()))
 >> 
 
 
From: Stephen Chang <stchang216@gmail.com>
To: John Clements <clements@brinckerhoff.org>
Cc: Stephen Bloch <sbloch@adelphi.edu>, bugs <bugs@racket-lang.org>,
        nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/13637: stepper doesn't step into infinite loop
Date: Wed, 27 Mar 2013 19:43:48 -0400

 I dont have permission to do anything in the bug db.
 
 On Wed, Mar 27, 2013 at 7:28 PM, John Clements
 <clements@brinckerhoff.org> wrote:
 >
 > On Mar 27, 2013, at 2:54 PM, Stephen Chang wrote:
 >
 >> This happens because the stepper doesn't display duplicate steps.
 >>
 >> I believe this is the same as pr 13469, which I'm looking into. Both
 >> can be assigned to me.
 >
 > Stephen, can you go ahead and claim these two?
 >
 > (or close the dup, if you like)
 >
 > John
 >
 >>
 >> On Wed, Mar 27, 2013 at 3:28 PM,  <sbloch@adelphi.edu> wrote:
 >>> A new problem report is waiting at
 >>>  http://bugs.racket-lang.org/query/?cmd=view&pr=13637
 >>>
 >>> Reported by Stephen Bloch for release: 5.3.1
 >>>
 >>> *** Description:
 >>> A student wrote a simple infinitely-recursive function and hit "Run".  Naturally, it froze until we stopped it.  So I suggested using the Stepper... but the Stepper froze too.  I inserted another non-recursive expression in front of it, and the Stepper evaluated it, but then said "No more steps" rather than showing me what was happening in the recursion.
 >>>
 >>> *** How to repeat:
 >>> (define (f x) (f x))
 >>>
 >>> (+ 1 2) "should be 3"
 >>> (f 1) "should be something"
 >>> (f 2) "should be something"
 >>>
 >>> *** Environment:
 >>> windows "Windows NT 5.1 (Build 2600) Service Pack 3" (win32\i386\3m) (get-display-depth) = 32
 >>> Human Language: english
 >>> (current-memory-use) 157905712
 >>> Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()
 >>>
 >>>
 >>> Collections:
 >>> ("C:\\Documents and Settings\\Administrator\\Application Data\\Racket\\5.3.1\\collects"
 >>> (non-existent-path))
 >>> ("C:\\Program Files\\Racket\\collects"
 >>> ("2htdp" "algol60" "at-exp" "browser" "compatibility" "compiler" "config" "data" "datalog" "db" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "future-visualizer" "games" "graphics" "gui-debugger" "help" "hierlist" "htdp" "html" "icons" "images" "info-domain" "json" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "picturing-programs" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "redex" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-engine" "texpict" "trace" "typed" "typed-racket" "typed-scheme" "unstable" "version" "web-server" "wxme" "xml" "xrepl"))
 >>>
 >>> Computer Language: (("Teaching Languages" "How to Design Programs" "Beginning Student") (#(#t constructor repeating-decimal #f #t none) #f ()))
 >>>
 >
 
From: Stephen Chang <stchang@ccs.neu.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: Ron Garcia <rxg@cs.ubc.ca>, John Clements <clements@brinckerhoff.org>,
        bugs <bugs@racket-lang.org>, nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/13637: stepper doesn't step into infinite loop
Date: Thu, 20 Nov 2014 12:11:09 -0500

 (Changing the subject line to avoid polluting Ron's original pr. I
 wonder if the bug tracker will properly log the conversation.)
 
 
 > Can you make it work only when it is appropriate and don't enable it
 > in the teaching languages somehow?
 
 I suppose we could add some special-casing but I'm hesitant because it
 would probably add a lot of code.
 
 John do you have an opinion?
 
 
 
 
 
 >
 > Robby
 >
 >
 > On Thu, Nov 20, 2014 at 9:10 AM, Stephen Chang <stchang@ccs.neu.edu> wrote:
 >>> I was teaching my students about tail recursion, and I wrote the code:
 >>>
 >>> (define (recurse f)
 >>>  (recurse f))
 >>>
 >>> (recurse 7)
 >>>
 >>> And I brought it up in the stepper in Intermediate Student Language.  Didn't work so well.  I think it worked when I switched to Intermediate Student Language with Lambda, since the expression would step to a lambda and then back to (recurse 7), though I would have preferred showing it step to itself right away each time.
 >>
 >> This is due to the lazy stepper, which needs to collapse syntactically
 >> identical consecutive steps. Since I don't know of anyone using the
 >> lazy stepper, should I remove this behavior?
 >>
 >> (Btw, there is at least one existing bug report that also reports
 >> this, pr 13637).
 >>
 >>
 >>
 >>
 >>>
 >>> Cheers,
 >>> Ron
 >>>
 >>>
 >>> On 2014-11-20, at 6:23 AM, John Clements <clements@brinckerhoff.org> wrote:
 >>>
 >>>> An automatically-submitted part of your bug report, below, suggests that you managed to generate an internal error using the stepper. If so, can you give me any hints on how to reproduce that?
 >>>>
 >>>> Many thanks (and also to Robby for noticing the stepper connection),
 >>>>
 >>>> John
 >>>>
 >>>> On Nov 19, 2014, at 8:20 PM, rxg@cs.ubc.ca wrote:
 >>>>>
 >>>>> Recent Internal Errors: Saved 1 internal error:
 >>>>>
 >>>>> list-ref: contract violation
 >>>>> expected: pair?
 >>>>> given: '()
 >>>>> argument position: 1st
 >>>>> other arguments...:
 >>>>>  -1
 >>>>> context...:
 >>>>>  /Applications/Racket v6.1/share/pkgs/htdp-lib/stepper/private/view-controller.rkt:341:2: update-view/existing
 >>>>>  /Applications/Racket v6.1/share/pkgs/gui-lib/mred/private/wx/common/queue.rkt:451:6
 >>>>>  /Applications/Racket v6.1/share/pkgs/gui-lib/mred/private/wx/common/queue.rkt:502:32
 >>>>>  /Applications/Racket v6.1/share/pkgs/gui-lib/mred/private/wx/common/queue.rkt:650:3
 >>>>>
 >>>>> Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((test) (main)) #t))
 >>>>>
 >>>>
 >>>
 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Stephen Chang <stchang@ccs.neu.edu>
Cc: Ron Garcia <rxg@cs.ubc.ca>, John Clements <clements@brinckerhoff.org>,
        bugs <bugs@racket-lang.org>, nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/13637: stepper doesn't step into infinite loop
Date: Thu, 20 Nov 2014 11:12:21 -0600

 I probably don't understand how the lazy stepper is fitting into the
 world well enough. Please disregard if it makes no sense.
 
 Robby
 
 On Thu, Nov 20, 2014 at 11:11 AM, Stephen Chang <stchang@ccs.neu.edu> wrote:
 > (Changing the subject line to avoid polluting Ron's original pr. I
 > wonder if the bug tracker will properly log the conversation.)
 >
 >
 >> Can you make it work only when it is appropriate and don't enable it
 >> in the teaching languages somehow?
 >
 > I suppose we could add some special-casing but I'm hesitant because it
 > would probably add a lot of code.
 >
 > John do you have an opinion?
 >
 >
 >
 >
 >
 >>
 >> Robby
 >>
 >>
 >> On Thu, Nov 20, 2014 at 9:10 AM, Stephen Chang <stchang@ccs.neu.edu> wrote:
 >>>> I was teaching my students about tail recursion, and I wrote the code:
 >>>>
 >>>> (define (recurse f)
 >>>>  (recurse f))
 >>>>
 >>>> (recurse 7)
 >>>>
 >>>> And I brought it up in the stepper in Intermediate Student Language.  Didn't work so well.  I think it worked when I switched to Intermediate Student Language with Lambda, since the expression would step to a lambda and then back to (recurse 7), though I would have preferred showing it step to itself right away each time.
 >>>
 >>> This is due to the lazy stepper, which needs to collapse syntactically
 >>> identical consecutive steps. Since I don't know of anyone using the
 >>> lazy stepper, should I remove this behavior?
 >>>
 >>> (Btw, there is at least one existing bug report that also reports
 >>> this, pr 13637).
 >>>
 >>>
 >>>
 >>>
 >>>>
 >>>> Cheers,
 >>>> Ron
 >>>>
 >>>>
 >>>> On 2014-11-20, at 6:23 AM, John Clements <clements@brinckerhoff.org> wrote:
 >>>>
 >>>>> An automatically-submitted part of your bug report, below, suggests that you managed to generate an internal error using the stepper. If so, can you give me any hints on how to reproduce that?
 >>>>>
 >>>>> Many thanks (and also to Robby for noticing the stepper connection),
 >>>>>
 >>>>> John
 >>>>>
 >>>>> On Nov 19, 2014, at 8:20 PM, rxg@cs.ubc.ca wrote:
 >>>>>>
 >>>>>> Recent Internal Errors: Saved 1 internal error:
 >>>>>>
 >>>>>> list-ref: contract violation
 >>>>>> expected: pair?
 >>>>>> given: '()
 >>>>>> argument position: 1st
 >>>>>> other arguments...:
 >>>>>>  -1
 >>>>>> context...:
 >>>>>>  /Applications/Racket v6.1/share/pkgs/htdp-lib/stepper/private/view-controller.rkt:341:2: update-view/existing
 >>>>>>  /Applications/Racket v6.1/share/pkgs/gui-lib/mred/private/wx/common/queue.rkt:451:6
 >>>>>>  /Applications/Racket v6.1/share/pkgs/gui-lib/mred/private/wx/common/queue.rkt:502:32
 >>>>>>  /Applications/Racket v6.1/share/pkgs/gui-lib/mred/private/wx/common/queue.rkt:650:3
 >>>>>>
 >>>>>> Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((test) (main)) #t))
 >>>>>>
 >>>>>
 >>>>
 
