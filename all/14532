From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Wed May 28 12:22:46 2014
Received: from mail-ob0-f181.google.com (mail-ob0-f181.google.com [209.85.214.181])
	by winooski.ccs.neu.edu (8.14.7/8.14.7) with ESMTP id s4SGMfpa016835
	for <bugs@bugs.plt-scheme.org>; Wed, 28 May 2014 12:22:41 -0400
Message-Id: <201405281622.s4SGMdAY016828@winooski.ccs.neu.edu>
Date: Wed, 28 May 2014 12:22:39 -0400
From: eric.n.dobson@gmail.com
To: bugs@racket-lang.org
Subject: Optimizer treats car differently from pair?

>Number:         14532
>Category:       all
>Synopsis:       Optimizer treats car differently from pair?
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Wed May 28 12:24:01 -0400 2014
>Closed-Date:    Wed May 28 15:26:21 -0400 2014
>Last-Modified:  Wed May 28 15:26:21 -0400 2014
>Originator:     Eric Dobson
>Organization:
plt
>Submitter-Id:   unknown
>Release:        HEAD
>Environment:
MacIntel / Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/33.0.1750.27 Safari/537.36
>Description:
Optimizing car needs to determine if the value coming to it is a pair before optimizing, and it successfully does this. But the optimizer cannot do the same check for pair?.

Program:
#lang racket

(define (go1)
  (car (cons 1 2)))

(define (go2)
  (pair? (cons 1 2)))

Decompiled output:
(begin
  (module tmp ....
    (require (lib "racket/main.rkt"))
    (module configure-runtime ....
      (require '#%kernel (lib "racket/runtime-config.rkt"))
      (print-as-expression '#t))
    (define-values
     (_go1)
     (begin
       '%%inline-variant%%
       (#%closed
        go136
        (lambda ()
          '#(go1 #<path:/Users/endobson/tmp/tmp.rkt> 3 0 15 33 #f)
          '(flags: preserves-marks single-result)
          '1))
       (#%closed
        go135
        (lambda ()
          '#(go1 #<path:/Users/endobson/tmp/tmp.rkt> 3 0 15 33 #f)
          '(flags: preserves-marks single-result)
          '1))))
    (define-values
     (_go2)
     (begin
       '%%inline-variant%%
       (#%closed
        go238
        (lambda ()
          '#(go2 #<path:/Users/endobson/tmp/tmp.rkt> 6 0 50 35 #f)
          '(flags: preserves-marks single-result)
          (pair? (cons '1 '2))))
       (#%closed
        go237
        (lambda ()
          '#(go2 #<path:/Users/endobson/tmp/tmp.rkt> 6 0 50 35 #f)
          '(flags: preserves-marks single-result)
          (pair? (cons '1 '2))))))))
>How-To-Repeat:

>Fix:
>Audit-Trail:
Responsible changed from "nobody" to "mflatt" by mflatt@racket-lang.org at Wed, 28 May 2014 15:26:21 -0400
Reason>>> A commit by mflatt@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/eac2ce0ef6
State changed from "open" to "closed" by mflatt@racket-lang.org at Wed, 28 May 2014 15:26:21 -0400
Reason>>> A commit by mflatt@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/eac2ce0ef6
  | optimizer: ad hoc optimization of predicates applied to constructions
  | 
  | This is probably more of a job for Typed Racket, but maybe it's
  | useful to detect some obviously unnecessary allocations of lists, etc.
  | 
  | Closes PR 14532

