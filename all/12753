From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Sat May  5 11:47:28 2012
Received: from mail-vb0-f44.google.com (mail-vb0-f44.google.com [209.85.212.44])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id q45FlO7i001757
	for <bugs@bugs.plt-scheme.org>; Sat, 5 May 2012 11:47:24 -0400
Message-Id: <201205051547.q45FlLaN001749@champlain.ccs.neu.edu>
Date: Sat, 5 May 2012 11:47:21 -0400
From: erich@snafu.de
To: bugs@racket-lang.org
Subject: [REQ] Reliable way to hide or supress console window on all platforms

>Number:         12753
>Category:       all
>Synopsis:       [REQ] Reliable way to hide or supress console window on all platforms
>Class:          change-request
>Responsible:    samth
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Sat May 05 11:48:01 -0400 2012
>Closed-Date:    Sun Jun 03 11:38:29 -0400 2012
>Last-Modified:  Mon Feb 18 23:14:29 -0500 2013
>Originator:     Erich Rast
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.2.1
>Environment:
unix "Linux murkel 3.2.0-24-generic #37-Ubuntu SMP Wed Apr 25 08:43:22 UTC 2012 x86_64 x86_64 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 214275984
Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()


Collections:
("/home/nemo/.racket/5.2.1/collects"
 (non-existent-path))
("/home/nemo/racket/collects"
 ("typed" "syntax" "lazy" "mzlib" "images" "raco" "defaults" "info-domain" "embedded-gui" "picturing-programs" "r5rs" "redex" "planet" "tex2page" "file" "rackunit" "stepper" "compiler" "gui-debugger" "frtime" "openssl" "racket" "texpict" "datalog" "help" "xrepl" "make" "eopl" "preprocessor" "mzscheme" "combinator-parser" "sgl" "syntax-color" "dynext" "readline" "typed-racket" "reader" "html" "drracket" "scribblings" "wxme" "test-engine" "mrlib" "hierlist" "setup" "plot" "icons" "at-exp" "plai" "games" "drscheme" "swindle" "slatex" "string-constants" "db" "ffi" "net" "mysterx" "browser" "trace" "scribble" "parser-tools" "mzcom" "algol60" "scheme" "graphics" "2htdp" "teachpack" "r6rs" "deinprogramm" "unstable" "data" "errortrace" "launcher" "rnrs" "racklog" "htdp" "scriblib" "slideshow" "srfi" "framework" "lang" "web-server" "macro-debugger" "version" "test-box-recovery" "schemeunit" "config" "typed-scheme" "mred" "s-exp" "profile" "xml"))

Computer Language: (("Determine language from source") (#(#t trad-write mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t))
>Description:
While I agree that it is good for during debugging and development when a console window pops up, it is unacceptable for a final end-consumer product. This particuarly holds for windows, since on this platform the application will not quit normally and instead you have to press Control-C to close the application once it has been opened.

I have a (small) shareware application that I cannot release for Windows because of this misfeature. Please add a way to turn off the console window / ignore console output in general. My apologies if such a possibility already exists and I've missed it -- I'd be eager to hear about a solution in that case.

Workaround: Embedd any top-level statement that returns a value into (void ...). However, this solution does not work in general, e.g. void does not have the desired effect in the following example on Windows:

(define (view-pdf path)
  (void
   (case (system-type 'os)
     ((unix) (system* "xgd-open" (path->string path)))
     ((macosx) (send-url (string-append "file://" (path->string path))))
     ((windows) (system (string-append "start" " \"\" \"" (path->string path) "\"")))
     (else (system* "xdg-open" (path->string path)))))) 
>How-To-Repeat:
; 1. compile the following program on windows as standalone executable
; 2. put or put not a file "test.pdf" in the default program path
; 3. launch the executable
; ==> A console window will show up and the executable will not end automatically. (exit does not work either)

#lang racket/gui
(require browser/external)

(define (view-pdf path)
  (void
   (case (system-type 'os)
     ((unix) (system* "xdg-open" (path->string path)))
     ((macosx) (send-url (string-append "file://" (path->string path))))
     ((windows) (system (string-append "start" " \"\" \"" (path->string path) "\"")))
     (else (system* "xdg-open" (path->string path))))))

(view-pdf "test.pdf")
>Fix:
>Audit-Trail:
From: Matthew Flatt <mflatt@cs.utah.edu>
To: erich@snafu.de, bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12753: [REQ] Reliable way to hide or supress console window on all platforms
Date: Sat, 5 May 2012 10:27:56 -0600

 The `system' function uses the current input, output, and error ports.
 When the current input port is a console, then Racket is essentially
 forced to create the console to send potential input to a subprocess
 created by `system'.
 
 You can avoid using the default input port (and hence the console) by
 `parameterize'ing the call to `system':
 
  ï»¿(parameterize ([current-input-port (open-input-bytes #"")])
    (system "...."))
 
 
 At Sat, 5 May 2012 11:48:02 -0400, erich@snafu.de wrote:
 > A new problem report is waiting at
 >   http://bugs.racket-lang.org/query/?cmd=view&pr=12753
 > 
 > Reported by Erich Rast for release: 5.2.1
 > 
 > *** Description:
 > While I agree that it is good for during debugging and development when a console 
 > window pops up, it is unacceptable for a final end-consumer product. This 
 > particuarly holds for windows, since on this platform the application will not quit 
 > normally and instead you have to press Control-C to close the application once it 
 > has been opened.
 > 
 > I have a (small) shareware application that I cannot release for Windows because of 
 > this misfeature. Please add a way to turn off the console window / ignore console 
 > output in general. My apologies if such a possibility already exists and I've 
 > missed it -- I'd be eager to hear about a solution in that case.
 > 
 > Workaround: Embedd any top-level statement that returns a value into (void ...). 
 > However, this solution does not work in general, e.g. void does not have the 
 > desired effect in the following example on Windows:
 > 
 > (define (view-pdf path)
 >   (void
 >    (case (system-type 'os)
 >      ((unix) (system* "xgd-open" (path->string path)))
 >      ((macosx) (send-url (string-append "file://" (path->string path))))
 >      ((windows) (system (string-append "start" " \"\" \"" (path->string path) 
 > "\"")))
 >      (else (system* "xdg-open" (path->string path)))))) 
 > 
 > *** How to repeat:
 > ; 1. compile the following program on windows as standalone executable
 > ; 2. put or put not a file "test.pdf" in the default program path
 > ; 3. launch the executable
 > ; ==> A console window will show up and the executable will not end automatically. 
 > (exit does not work either)
 > 
 > #lang racket/gui
 > (require browser/external)
 > 
 > (define (view-pdf path)
 >   (void
 >    (case (system-type 'os)
 >      ((unix) (system* "xdg-open" (path->string path)))
 >      ((macosx) (send-url (string-append "file://" (path->string path))))
 >      ((windows) (system (string-append "start" " \"\" \"" (path->string path) 
 > "\"")))
 >      (else (system* "xdg-open" (path->string path))))))
 > 
 > (view-pdf "test.pdf")
 > 
 > *** Environment:
 > unix "Linux murkel 3.2.0-24-generic #37-Ubuntu SMP Wed Apr 25 08:43:22 UTC 2012 
 > x86_64 x86_64 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
 > Human Language: english
 > (current-memory-use) 214275984
 > Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); (links 
 > #:user? #f #:root? #t) = ()
 > 
 > 
 > Collections:
 > ("/home/nemo/.racket/5.2.1/collects"
 >  (non-existent-path))
 > ("/home/nemo/racket/collects"
 >  ("typed" "syntax" "lazy" "mzlib" "images" "raco" "defaults" "info-domain" 
 > "embedded-gui" "picturing-programs" "r5rs" "redex" "planet" "tex2page" "file" 
 > "rackunit" "stepper" "compiler" "gui-debugger" "frtime" "openssl" "racket" 
 > "texpict" "datalog" "help" "xrepl" "make" "eopl" "preprocessor" "mzscheme" 
 > "combinator-parser" "sgl" "syntax-color" "dynext" "readline" "typed-racket" 
 > "reader" "html" "drracket" "scribblings" "wxme" "test-engine" "mrlib" "hierlist" 
 > "setup" "plot" "icons" "at-exp" "plai" "games" "drscheme" "swindle" "slatex" 
 > "string-constants" "db" "ffi" "net" "mysterx" "browser" "trace" "scribble" 
 > "parser-tools" "mzcom" "algol60" "scheme" "graphics" "2htdp" "teachpack" "r6rs" 
 > "deinprogramm" "unstable" "data" "errortrace" "launcher" "rnrs" "racklog" "htdp" 
 > "scriblib" "slideshow" "srfi" "framework" "lang" "web-server" "macro-debugger" 
 > "version" "test-box-recovery" "schemeunit" "config" "typed-scheme" "mred" "s-exp" 
 > "profile" "xml"))
 > 
 > Computer Language: (("Determine language from source") (#(#t trad-write 
 > mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t))
 

State changed from "open" to "closed" by samth at Sun, 03 Jun 2012 11:38:29 -0400
Reason>>> Matthew supplied an answer.


Responsible changed from "nobody" to "samth" by eli at Mon, 18 Feb 2013 23:14:29 -0500
Reason>>> samth closed

