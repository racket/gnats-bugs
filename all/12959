From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Wed Aug  1 09:32:03 2012
Received: from mail-qa0-f44.google.com (mail-qa0-f44.google.com [209.85.216.44])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id q71DW05X029193
	for <bugs@bugs.plt-scheme.org>; Wed, 1 Aug 2012 09:32:00 -0400
Message-Id: <201208011331.q71DVvcq029186@champlain.ccs.neu.edu>
Date: Wed, 1 Aug 2012 09:31:57 -0400
From: lothar_@warpmail.net
To: bugs@racket-lang.org
Subject: graphics toolkit text-field% does not honor min-width initialization

>Number:         12959
>Category:       all
>Synopsis:       graphics toolkit text-field% does not honor min-width initialization
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Wed Aug 01 09:36:01 -0400 2012
>Closed-Date:    Wed Aug 01 11:35:31 -0400 2012
>Last-Modified:  Wed Aug 01 11:35:31 -0400 2012
>Originator:     lothar atheling
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.2
>Environment:
windows "Windows NT 5.1 (Build 2600) Service Pack 3" (win32\i386\3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 148898540
Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()


Collections:
("H:\\Documents and Settings\\Administrator\\Application Data\\Racket\\5.2\\collects"
 (non-existent-path))
("H:\\Program Files\\Racket\\collects"
 ("2htdp" "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "data" "datalog" "db" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "help" "hierlist" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "picturing-programs" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "redex" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tex2page" "texpict" "trace" "typed" "typed-racket" "typed-scheme" "unstable" "version" "web-server" "wxme" "xml" "xrepl"))

Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t))
>Description:
the object is to set the width of a text-field% and make the width to be fixed.

if a text-field% is a child of frame%, it works to use, say
  (min-width 20)
  (stretchable-width #f)
as parameters to (new text-field% ...) to do this.

if a text-field% is a child of horizontal-pane%, however, these parameters are not honored, in that the text-field% may not have the given minimum width.

The Racket Graphical Interface Toolkit
1 Windowing, 
1.4 Geometry Management,
1.4.1 Containees
http://download.racket-lang.org/docs/5.2/html/gui/windowing-overview.html

states, 

Unless a containee is stretchable (in a particular direction), it always shrinks to its minimum size (in the corresponding direction). Otherwise, containees are stretched to fill all available space in a container.

i take this to mean that parameters shown above will always produce a fixed-width area% with the given width.
>How-To-Repeat:
;; 1. use the following module.
;; 2. note the behaviour of the three text-field%s.

(module xx mzscheme

(require (lib "class.ss") 
         (lib "mred.ss" "mred"))

(define myframe (new frame% 
      (label "text-field% query")
      (min-width 40)
      (min-height 40)
      (border 5)))
(define main (new vertical-pane% (parent myframe)
      (border 3)))
(define main-textx (new text-field%
    (label #f)
    (init-value "x")
    (min-width 20)
    (parent main)
    (stretchable-width #f)
    (style (list 'single))))
(define main-horiz (new horizontal-pane%
    (parent main)
    (min-width 400)
    (stretchable-width #f)
    (alignment (list 'right 'bottom))))
     (define horiz-texta (new text-field%
        (label #f)
        (min-width 20)
        (stretchable-width #f)
        (parent main-horiz)
        (style (list 'single))
        (callback void)))
     (define horiz-textb (new text-field%
        (label #f)
        (min-width 20)
        (stretchable-width #f)
        (parent main-horiz)
        (style (list 'single))
        (callback void)))
    
(let-values (((w h) (send main-textx get-graphical-min-size)))
    (printf "(main-textx: w= ~a h= ~a)~n" w h))
(let-values (((w h) (send horiz-texta get-graphical-min-size)))
    (printf "(horiz-texta: w= ~a h= ~a)~n" w h))

    (send myframe show #t))
>Fix:
>Audit-Trail:
From: Matthew Flatt <mflatt@cs.utah.edu>
To: lothar_@warpmail.net, bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12959: graphics toolkit text-field% does not honor min-width initialization
Date: Wed, 1 Aug 2012 07:42:31 -0600

 I think the difference between the `text-field%' instances is not the
 container, but whether you provided an `init-value' argument. The
 `init-value' argument determines a "graphical" minimum width below
 which the text field cannot be resized, even if `min-width' is less.
 
 At Wed, 1 Aug 2012 09:36:01 -0400, lothar_@warpmail.net wrote:
 > A new problem report is waiting at
 >   http://bugs.racket-lang.org/query/?cmd=view&pr=12959
 > 
 > Reported by lothar atheling for release: 5.2
 > 
 > *** Description:
 > the object is to set the width of a text-field% and make the width to be fixed.
 > 
 > if a text-field% is a child of frame%, it works to use, say
 >   (min-width 20)
 >   (stretchable-width #f)
 > as parameters to (new text-field% ...) to do this.
 > 
 > if a text-field% is a child of horizontal-pane%, however, these parameters are 
 > not honored, in that the text-field% may not have the given minimum width.
 > 
 > The Racket Graphical Interface Toolkit
 > 1 Windowing, 
 > 1.4 Geometry Management,
 > 1.4.1 Containees
 > http://download.racket-lang.org/docs/5.2/html/gui/windowing-overview.html
 > 
 > states, 
 > 
 > Unless a containee is stretchable (in a particular direction), it always 
 > shrinks to its minimum size (in the corresponding direction). Otherwise, 
 > containees are stretched to fill all available space in a container.
 > 
 > i take this to mean that parameters shown above will always produce a 
 > fixed-width area% with the given width.
 > 
 > *** How to repeat:
 > ;; 1. use the following module.
 > ;; 2. note the behaviour of the three text-field%s.
 > 
 > (module xx mzscheme
 > 
 > (require (lib "class.ss") 
 >          (lib "mred.ss" "mred"))
 > 
 > (define myframe (new frame% 
 >       (label "text-field% query")
 >       (min-width 40)
 >       (min-height 40)
 >       (border 5)))
 > (define main (new vertical-pane% (parent myframe)
 >       (border 3)))
 > (define main-textx (new text-field%
 >     (label #f)
 >     (init-value "x")
 >     (min-width 20)
 >     (parent main)
 >     (stretchable-width #f)
 >     (style (list 'single))))
 > (define main-horiz (new horizontal-pane%
 >     (parent main)
 >     (min-width 400)
 >     (stretchable-width #f)
 >     (alignment (list 'right 'bottom))))
 >      (define horiz-texta (new text-field%
 >         (label #f)
 >         (min-width 20)
 >         (stretchable-width #f)
 >         (parent main-horiz)
 >         (style (list 'single))
 >         (callback void)))
 >      (define horiz-textb (new text-field%
 >         (label #f)
 >         (min-width 20)
 >         (stretchable-width #f)
 >         (parent main-horiz)
 >         (style (list 'single))
 >         (callback void)))
 >     
 > (let-values (((w h) (send main-textx get-graphical-min-size)))
 >     (printf "(main-textx: w= ~a h= ~a)~n" w h))
 > (let-values (((w h) (send horiz-texta get-graphical-min-size)))
 >     (printf "(horiz-texta: w= ~a h= ~a)~n" w h))
 > 
 >     (send myframe show #t))
 > 
 > *** Environment:
 > windows "Windows NT 5.1 (Build 2600) Service Pack 3" (win32\i386\3m) 
 > (get-display-depth) = 32
 > Human Language: english
 > (current-memory-use) 148898540
 > Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); (links 
 > #:user? #f #:root? #t) = ()
 > 
 > 
 > Collections:
 > ("H:\\Documents and Settings\\Administrator\\Application 
 > Data\\Racket\\5.2\\collects"
 >  (non-existent-path))
 > ("H:\\Program Files\\Racket\\collects"
 >  ("2htdp" "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" 
 > "data" "datalog" "db" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" 
 > "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" 
 > "graphics" "gui-debugger" "help" "hierlist" "htdp" "html" "icons" "info-domain" 
 > "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" 
 > "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "picturing-programs" 
 > "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" 
 > "racklog" "rackunit" "raco" "reader" "readline" "redex" "rnrs" "s-exp" "scheme" 
 > "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "slatex" 
 > "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" 
 > "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tex2page" 
 > "texpict" "trace" "typed" "typed-racket" "typed-scheme" "unstable" "version" 
 > "web-server" "wxme" "xml" "xrepl"))
 > 
 > Computer Language: (("Determine language from source") (#(#t print 
 > mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t))
Responsible changed from "nobody" to "mflatt" by mflatt@racket-lang.org at Wed, 01 Aug 2012 11:35:31 -0400
Reason>>> A commit by mflatt@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/7df91a6148
State changed from "open" to "closed" by mflatt@racket-lang.org at Wed, 01 Aug 2012 11:35:31 -0400
Reason>>> A commit by mflatt@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/7df91a6148
