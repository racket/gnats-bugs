From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Sat Jun 28 12:33:49 2014
Received: from mail-ob0-f177.google.com (mail-ob0-f177.google.com [209.85.214.177])
	by winooski.ccs.neu.edu (8.14.7/8.14.7) with ESMTP id s5SGXmbA029034
	for <bugs@bugs.plt-scheme.org>; Sat, 28 Jun 2014 12:33:48 -0400
Message-Id: <201406281633.s5SGXloY029025@winooski.ccs.neu.edu>
Date: Sat, 28 Jun 2014 12:33:47 -0400
From: eric.n.dobson@gmail.com
To: bugs@racket-lang.org
Subject: TR contract generation should remove extraneous recursive contract wrappers

>Number:         14611
>Category:       all
>Synopsis:       TR contract generation should remove extraneous recursive contract wrappers
>Class:          sw-bug
>Responsible:    endobson
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Sat Jun 28 12:36:01 -0400 2014
>Closed-Date:    Mon Jun 30 02:31:51 -0400 2014
>Last-Modified:  Mon Jun 30 02:32:01 -0400 2014
>Originator:     Eric Dobson
>Organization:
plt
>Submitter-Id:   unknown
>Release:        HEAD
>Environment:
MacIntel / Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/33.0.1750.27 Safari/537.36
>Description:
Extraneous contract wrappers are slow, and if they are not needed we should remove them.
>How-To-Repeat:
#lang typed/racket
(define-predicate exact-zero? Zero)

exact-zero?

=>
#<flat-contract: (recursive-contract (flat-named-contract (quote 0) (lambda (x) (equal? x (quote 0)))) #:flat)>
>Fix:
>Audit-Trail:
From: Sam Tobin-Hochstadt <samth@cs.indiana.edu>
To: Eric Dobson <eric.n.dobson@gmail.com>, bugs <bugs@racket-lang.org>
Cc: nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/14611: TR contract generation should remove
 extraneous recursive contract wrappers
Date: Sat, 28 Jun 2014 12:59:44 -0400

 Would using the contract optimizer fix this?
 
 Sam
 
 On Sat, Jun 28, 2014 at 12:36 PM,  <eric.n.dobson@gmail.com> wrote:
 > A new problem report is waiting at
 >   http://bugs.racket-lang.org/query/?cmd=view&pr=14611
 >
 > Reported by Eric Dobson for release: HEAD
 >
 > *** Description:
 > Extraneous contract wrappers are slow, and if they are not needed we should remove them.
 >
 > *** How to repeat:
 > #lang typed/racket
 > (define-predicate exact-zero? Zero)
 >
 > exact-zero?
 >
 > =>
 > #<flat-contract: (recursive-contract (flat-named-contract (quote 0) (lambda (x) (equal? x (quote 0)))) #:flat)>
 >
 > *** Environment:
 > MacIntel / Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/33.0.1750.27 Safari/537.36
 >
From: Eric Dobson <eric.n.dobson@gmail.com>
To: Sam Tobin-Hochstadt <samth@cs.indiana.edu>
Cc: bugs <bugs@racket-lang.org>, nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/14611: TR contract generation should remove
 extraneous recursive contract wrappers
Date: Sat, 28 Jun 2014 10:38:13 -0700

 Are you refering to the static contract optimizer that I wrote or
 something else? I haven't debugged this too deeply but this is
 something I thought the static contract optimizer was supposed to
 solve and I thought we were using it when generating predicates. So my
 guess is that the optimization is not triggering for some reason.
 
 On Sat, Jun 28, 2014 at 9:59 AM, Sam Tobin-Hochstadt
 <samth@cs.indiana.edu> wrote:
 > Would using the contract optimizer fix this?
 >
 > Sam
 >
 > On Sat, Jun 28, 2014 at 12:36 PM,  <eric.n.dobson@gmail.com> wrote:
 >> A new problem report is waiting at
 >>   http://bugs.racket-lang.org/query/?cmd=view&pr=14611
 >>
 >> Reported by Eric Dobson for release: HEAD
 >>
 >> *** Description:
 >> Extraneous contract wrappers are slow, and if they are not needed we should remove them.
 >>
 >> *** How to repeat:
 >> #lang typed/racket
 >> (define-predicate exact-zero? Zero)
 >>
 >> exact-zero?
 >>
 >> =>
 >> #<flat-contract: (recursive-contract (flat-named-contract (quote 0) (lambda (x) (equal? x (quote 0)))) #:flat)>
 >>
 >> *** Environment:
 >> MacIntel / Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/33.0.1750.27 Safari/537.36
 >>
From: Eric Dobson <eric.n.dobson@gmail.com>
To: Sam Tobin-Hochstadt <samth@cs.indiana.edu>
Cc: bugs <bugs@racket-lang.org>, nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/14611: TR contract generation should remove
 extraneous recursive contract wrappers
Date: Sun, 29 Jun 2014 16:40:58 -0700

 Ok, figured out where this is coming from. We wrap all contracts at
 the top level with a recursive contract so that they can refer to
 identifiers before their binding. We may be able to avoid this
 inefficency by adding an eta abstraction over certain parts of the
 contracts (at least struct predicates).
 
 On Sat, Jun 28, 2014 at 10:38 AM, Eric Dobson <eric.n.dobson@gmail.com> wrote:
 > Are you refering to the static contract optimizer that I wrote or
 > something else? I haven't debugged this too deeply but this is
 > something I thought the static contract optimizer was supposed to
 > solve and I thought we were using it when generating predicates. So my
 > guess is that the optimization is not triggering for some reason.
 >
 > On Sat, Jun 28, 2014 at 9:59 AM, Sam Tobin-Hochstadt
 > <samth@cs.indiana.edu> wrote:
 >> Would using the contract optimizer fix this?
 >>
 >> Sam
 >>
 >> On Sat, Jun 28, 2014 at 12:36 PM,  <eric.n.dobson@gmail.com> wrote:
 >>> A new problem report is waiting at
 >>>   http://bugs.racket-lang.org/query/?cmd=view&pr=14611
 >>>
 >>> Reported by Eric Dobson for release: HEAD
 >>>
 >>> *** Description:
 >>> Extraneous contract wrappers are slow, and if they are not needed we should remove them.
 >>>
 >>> *** How to repeat:
 >>> #lang typed/racket
 >>> (define-predicate exact-zero? Zero)
 >>>
 >>> exact-zero?
 >>>
 >>> =>
 >>> #<flat-contract: (recursive-contract (flat-named-contract (quote 0) (lambda (x) (equal? x (quote 0)))) #:flat)>
 >>>
 >>> *** Environment:
 >>> MacIntel / Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/33.0.1750.27 Safari/537.36
 >>>
From: Sam Tobin-Hochstadt <samth@cs.indiana.edu>
To: endobson <eric.n.dobson@gmail.com>
Cc: bug-notification <bug-notification@racket-lang.org>,
        nobody <nobody@racket-lang.org>, bugs <bugs@racket-lang.org>
Subject: Re: [racket-bug] all/14611: TR contract generation should remove
 extraneous recursive contract wrappers
Date: Mon, 30 Jun 2014 02:08:06 -0400

 --047d7bdc06c28eaf7704fd077bef
 Content-Type: text/plain; charset=UTF-8
 
 No, I'm referring to opt/c from the contract library.
 
 Sam
 On Jun 28, 2014 7:38 PM, "Eric Dobson" <eric.n.dobson@gmail.com> wrote:
 
 > Are you refering to the static contract optimizer that I wrote or
 > something else? I haven't debugged this too deeply but this is
 > something I thought the static contract optimizer was supposed to
 > solve and I thought we were using it when generating predicates. So my
 > guess is that the optimization is not triggering for some reason.
 >
 > On Sat, Jun 28, 2014 at 9:59 AM, Sam Tobin-Hochstadt
 > <samth@cs.indiana.edu> wrote:
 > > Would using the contract optimizer fix this?
 > >
 > > Sam
 > >
 > > On Sat, Jun 28, 2014 at 12:36 PM,  <eric.n.dobson@gmail.com> wrote:
 > >> A new problem report is waiting at
 > >>   http://bugs.racket-lang.org/query/?cmd=view&pr=14611
 > >>
 > >> Reported by Eric Dobson for release: HEAD
 > >>
 > >> *** Description:
 > >> Extraneous contract wrappers are slow, and if they are not needed we
 > should remove them.
 > >>
 > >> *** How to repeat:
 > >> #lang typed/racket
 > >> (define-predicate exact-zero? Zero)
 > >>
 > >> exact-zero?
 > >>
 > >> =>
 > >> #<flat-contract: (recursive-contract (flat-named-contract (quote 0)
 > (lambda (x) (equal? x (quote 0)))) #:flat)>
 > >>
 > >> *** Environment:
 > >> MacIntel / Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_5)
 > AppleWebKit/537.36 (KHTML, like Gecko) Chrome/33.0.1750.27 Safari/537.36
 > >>
 >
 
 --047d7bdc06c28eaf7704fd077bef
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 <p dir=3D"ltr">No, I&#39;m referring to opt/c from the contract library.</p=
 >
 <p dir=3D"ltr">Sam</p>
 <div class=3D"gmail_quote">On Jun 28, 2014 7:38 PM, &quot;Eric Dobson&quot;=
  &lt;<a href=3D"mailto:eric.n.dobson@gmail.com">eric.n.dobson@gmail.com</a>=
 &gt; wrote:<br type=3D"attribution"><blockquote class=3D"gmail_quote" style=
 =3D"margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">
 Are you refering to the static contract optimizer that I wrote or<br>
 something else? I haven&#39;t debugged this too deeply but this is<br>
 something I thought the static contract optimizer was supposed to<br>
 solve and I thought we were using it when generating predicates. So my<br>
 guess is that the optimization is not triggering for some reason.<br>
 <br>
 On Sat, Jun 28, 2014 at 9:59 AM, Sam Tobin-Hochstadt<br>
 &lt;<a href=3D"mailto:samth@cs.indiana.edu">samth@cs.indiana.edu</a>&gt; wr=
 ote:<br>
 &gt; Would using the contract optimizer fix this?<br>
 &gt;<br>
 &gt; Sam<br>
 &gt;<br>
 &gt; On Sat, Jun 28, 2014 at 12:36 PM, =C2=A0&lt;<a href=3D"mailto:eric.n.d=
 obson@gmail.com">eric.n.dobson@gmail.com</a>&gt; wrote:<br>
 &gt;&gt; A new problem report is waiting at<br>
 &gt;&gt; =C2=A0 <a href=3D"http://bugs.racket-lang.org/query/?cmd=3Dview&am=
 p;pr=3D14611" target=3D"_blank">http://bugs.racket-lang.org/query/?cmd=3Dvi=
 ew&amp;pr=3D14611</a><br>
 &gt;&gt;<br>
 &gt;&gt; Reported by Eric Dobson for release: HEAD<br>
 &gt;&gt;<br>
 &gt;&gt; *** Description:<br>
 &gt;&gt; Extraneous contract wrappers are slow, and if they are not needed =
 we should remove them.<br>
 &gt;&gt;<br>
 &gt;&gt; *** How to repeat:<br>
 &gt;&gt; #lang typed/racket<br>
 &gt;&gt; (define-predicate exact-zero? Zero)<br>
 &gt;&gt;<br>
 &gt;&gt; exact-zero?<br>
 &gt;&gt;<br>
 &gt;&gt; =3D&gt;<br>
 &gt;&gt; #&lt;flat-contract: (recursive-contract (flat-named-contract (quot=
 e 0) (lambda (x) (equal? x (quote 0)))) #:flat)&gt;<br>
 &gt;&gt;<br>
 &gt;&gt; *** Environment:<br>
 &gt;&gt; MacIntel / Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_5) AppleWeb=
 Kit/537.36 (KHTML, like Gecko) Chrome/33.0.1750.27 Safari/537.36<br>
 &gt;&gt;<br>
 </blockquote></div>
 
 --047d7bdc06c28eaf7704fd077bef--
From: Eric Dobson <eric.n.dobson@gmail.com>
To: Sam Tobin-Hochstadt <samth@cs.indiana.edu>
Cc: bug-notification <bug-notification@racket-lang.org>,
        nobody <nobody@racket-lang.org>, bugs <bugs@racket-lang.org>
Subject: Re: [racket-bug] all/14611: TR contract generation should remove
 extraneous recursive contract wrappers
Date: Sun, 29 Jun 2014 23:12:43 -0700

 Ah. Well I already solved this without opt/c, but yes we should
 investigate using it.
 
 When I looked in January there were issues:
 http://bugs.racket-lang.org/query/?cmd=view%20audit-trail&database=default&pr=14292
 
 
 On Sun, Jun 29, 2014 at 11:08 PM, Sam Tobin-Hochstadt
 <samth@cs.indiana.edu> wrote:
 > No, I'm referring to opt/c from the contract library.
 >
 > Sam
 >
 > On Jun 28, 2014 7:38 PM, "Eric Dobson" <eric.n.dobson@gmail.com> wrote:
 >>
 >> Are you refering to the static contract optimizer that I wrote or
 >> something else? I haven't debugged this too deeply but this is
 >> something I thought the static contract optimizer was supposed to
 >> solve and I thought we were using it when generating predicates. So my
 >> guess is that the optimization is not triggering for some reason.
 >>
 >> On Sat, Jun 28, 2014 at 9:59 AM, Sam Tobin-Hochstadt
 >> <samth@cs.indiana.edu> wrote:
 >> > Would using the contract optimizer fix this?
 >> >
 >> > Sam
 >> >
 >> > On Sat, Jun 28, 2014 at 12:36 PM,  <eric.n.dobson@gmail.com> wrote:
 >> >> A new problem report is waiting at
 >> >>   http://bugs.racket-lang.org/query/?cmd=view&pr=14611
 >> >>
 >> >> Reported by Eric Dobson for release: HEAD
 >> >>
 >> >> *** Description:
 >> >> Extraneous contract wrappers are slow, and if they are not needed we
 >> >> should remove them.
 >> >>
 >> >> *** How to repeat:
 >> >> #lang typed/racket
 >> >> (define-predicate exact-zero? Zero)
 >> >>
 >> >> exact-zero?
 >> >>
 >> >> =>
 >> >> #<flat-contract: (recursive-contract (flat-named-contract (quote 0)
 >> >> (lambda (x) (equal? x (quote 0)))) #:flat)>
 >> >>
 >> >> *** Environment:
 >> >> MacIntel / Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_5)
 >> >> AppleWebKit/537.36 (KHTML, like Gecko) Chrome/33.0.1750.27 Safari/537.36
 >> >>
Responsible changed from "nobody" to "endobson" by endobson@racket-lang.org at Mon, 30 Jun 2014 02:31:51 -0400
Reason>>> A commit by endobson@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/72d1128604
State changed from "open" to "closed" by endobson@racket-lang.org at Mon, 30 Jun 2014 02:31:51 -0400
Reason>>> A commit by endobson@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/72d1128604
  | Make TR contract generation not wrap everything in recursive contract.
  | 
  | Eta expand struct predicates, as this was the reason for recursive
  | contracts in the first place.
  | 
  | Closes PR 14611.

From: Robby Findler <robby@eecs.northwestern.edu>
To: Eric Dobson <eric.n.dobson@gmail.com>
Cc: Sam Tobin-Hochstadt <samth@cs.indiana.edu>,
        bug-notification <bug-notification@racket-lang.org>,
        nobody <nobody@racket-lang.org>, bugs <bugs@racket-lang.org>
Subject: Re: [racket-bug] all/14611: TR contract generation should remove
 extraneous recursive contract wrappers
Date: Mon, 30 Jun 2014 01:28:23 -0500

 Yes, it needs more love.
 
 Basically what it can do is fuse nested uses of combinators into a
 single combinator that avoids the overhead of combinators. So it can
 turn:
 
   (opt/c (-> integer? integer?))
 
 directy into a single wrapping function that checks integer? on the
 argument and the result instead of going thru intermediate data
 structures.
 
 I don't think it can do what Sam wants, tho, because removing
 'recursive-contract' changes the timing of the evaluation of
 expressions.
 
 Robby
 
 On Mon, Jun 30, 2014 at 1:12 AM, Eric Dobson <eric.n.dobson@gmail.com> wrote:
 > Ah. Well I already solved this without opt/c, but yes we should
 > investigate using it.
 >
 > When I looked in January there were issues:
 > http://bugs.racket-lang.org/query/?cmd=view%20audit-trail&database=default&pr=14292
 >
 >
 > On Sun, Jun 29, 2014 at 11:08 PM, Sam Tobin-Hochstadt
 > <samth@cs.indiana.edu> wrote:
 >> No, I'm referring to opt/c from the contract library.
 >>
 >> Sam
 >>
 >> On Jun 28, 2014 7:38 PM, "Eric Dobson" <eric.n.dobson@gmail.com> wrote:
 >>>
 >>> Are you refering to the static contract optimizer that I wrote or
 >>> something else? I haven't debugged this too deeply but this is
 >>> something I thought the static contract optimizer was supposed to
 >>> solve and I thought we were using it when generating predicates. So my
 >>> guess is that the optimization is not triggering for some reason.
 >>>
 >>> On Sat, Jun 28, 2014 at 9:59 AM, Sam Tobin-Hochstadt
 >>> <samth@cs.indiana.edu> wrote:
 >>> > Would using the contract optimizer fix this?
 >>> >
 >>> > Sam
 >>> >
 >>> > On Sat, Jun 28, 2014 at 12:36 PM,  <eric.n.dobson@gmail.com> wrote:
 >>> >> A new problem report is waiting at
 >>> >>   http://bugs.racket-lang.org/query/?cmd=view&pr=14611
 >>> >>
 >>> >> Reported by Eric Dobson for release: HEAD
 >>> >>
 >>> >> *** Description:
 >>> >> Extraneous contract wrappers are slow, and if they are not needed we
 >>> >> should remove them.
 >>> >>
 >>> >> *** How to repeat:
 >>> >> #lang typed/racket
 >>> >> (define-predicate exact-zero? Zero)
 >>> >>
 >>> >> exact-zero?
 >>> >>
 >>> >> =>
 >>> >> #<flat-contract: (recursive-contract (flat-named-contract (quote 0)
 >>> >> (lambda (x) (equal? x (quote 0)))) #:flat)>
 >>> >>
 >>> >> *** Environment:
 >>> >> MacIntel / Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_5)
 >>> >> AppleWebKit/537.36 (KHTML, like Gecko) Chrome/33.0.1750.27 Safari/537.36
 >>> >>
