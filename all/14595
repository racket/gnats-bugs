From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Tue Jun 24 15:11:43 2014
Received: from mail-ob0-f180.google.com (mail-ob0-f180.google.com [209.85.214.180])
	by winooski.ccs.neu.edu (8.14.7/8.14.7) with ESMTP id s5OJBaqB024870
	for <bugs@bugs.plt-scheme.org>; Tue, 24 Jun 2014 15:11:37 -0400
Message-Id: <201406241911.s5OJBXim024863@winooski.ccs.neu.edu>
Date: Tue, 24 Jun 2014 15:11:33 -0400
From: stchang@ccs.neu.edu
To: bugs@racket-lang.org
Subject: redex define-judgment-form bad error msg when there's multiple ellipses + metafunction

>Number:         14595
>Category:       all
>Synopsis:       redex define-judgment-form bad error msg when there's multiple ellipses + metafunction
>Class:          sw-bug
>Responsible:    robby
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Tue Jun 24 15:12:01 -0400 2014
>Last-Modified:  Sun Jul 06 02:44:01 -0400 2014
>Originator:     Stephen Chang
>Organization:
plt
>Submitter-Id:   unknown
>Release:        6.0.1.12
>Environment:
unix "Linux caprica 3.2.0-4-amd64 #1 SMP Debian 3.2.54-2 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 499182888
raco pkg (show):
/home/stchang/plt/racket/share/devel-pkgs:
 Package              Checksum    Source
 main-distribution    #f          (static-link ../../../pkgs/main-distribution)
 plt-services         #f          (static-link ../../../pkgs/plt-services)
 racket-lib           #f          (static-link ../../../pkgs/racket-pkgs/racket-lib)
 [213 auto-installed packages not shown]
Installation-wide:
 Package             Checksum                                    Source
 graph               #f                                          (link ../../../../racket/graph)
 parsack             #f                                          (link ../../../../racket/parsack)
 racket-benchmark    ddd86af24cf00005ac476f3078acc788d7da6994    (url git://github.com/stamourv/racket-benchmark)
 rackjure            #f                                          (link ../../../../racket/rackjure)
 sexp-diff           9a73188925a6e167322629f558435b813abed0b0    (catalog sexp-diff)
 sundry              #f                                          (link ../../../../racket/sundry)
User-specific for installation "development":
 [none]



Collections:
("/home/stchang/.racket/development/collects"
 (non-existent-path))
("/home/stchang/plt/racket/collects"
 (".gitignore" "acks" "compiler" "data" "db" "dynext" "ffi" "file" "info" "info-domain" "json" "launcher" "net" "openssl" "pkg" "planet" "racket" "raco" "reader" "realm" "s-exp" "setup" "syntax" "unstable" "version" "xml"))

Recent Internal Errors: 
Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t none) (default) #() "#lang racket\n" #t #f ((test) (main)) #t))
>Description:
The included example produces the error: 

syntax: too many ellipses in template in: ...

Removing either of the ellipses, or the metafunction call avoids the error.
>How-To-Repeat:
#lang racket
(require redex)

(define-language L
  (e (λ (x ...) e ...))
  (x variable-not-otherwise-mentioned))

(define-judgment-form L
  #:mode (⊢ I I)
  #:contract (⊢ (x ...) e)
  [(⊢ (xs (x ...)) e) ...
   ---------------------
   (⊢ () (λ (x ...) e ...))])

(define-metafunction L
  xs : (x ...) -> (x ...)
  [(xs (x ...)) (x ...)])
>Fix:
>Audit-Trail:
From: Robby Findler <robby@eecs.northwestern.edu>
To: Stephen Chang <stchang@ccs.neu.edu>, bugs <bugs@racket-lang.org>
Cc: nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/14595: redex define-judgment-form bad error msg
 when there's multiple ellipses + metafunction
Date: Wed, 25 Jun 2014 00:20:57 -0500

 Redex generally has the word "syntax" in the front of those error messages, eg:
 
 (define-metafunction L
   [(xs any) (any ...)])
 
 but usually there is a reasonable source location (unlike in the
 example below). I guess it was the source location lack that's more
 problematic, right?
 
 Robby
 
 
 On Tue, Jun 24, 2014 at 2:12 PM,  <stchang@ccs.neu.edu> wrote:
 > A new problem report is waiting at
 >   http://bugs.racket-lang.org/query/?cmd=view&pr=14595
 >
 > Reported by Stephen Chang for release: 6.0.1.12
 >
 > *** Description:
 > The included example produces the error:
 >
 > syntax: too many ellipses in template in: ...
 >
 > Removing either of the ellipses, or the metafunction call avoids the error.
 >
 > *** How to repeat:
 > #lang racket
 > (require redex)
 >
 > (define-language L
 >   (e (λ (x ...) e ...))
 >   (x variable-not-otherwise-mentioned))
 >
 > (define-judgment-form L
 >   #:mode (⊢ I I)
 >   #:contract (⊢ (x ...) e)
 >   [(⊢ (xs (x ...)) e) ...
 >    ---------------------
 >    (⊢ () (λ (x ...) e ...))])
 >
 > (define-metafunction L
 >   xs : (x ...) -> (x ...)
 >   [(xs (x ...)) (x ...)])
 >
 > *** Environment:
 > unix "Linux caprica 3.2.0-4-amd64 #1 SMP Debian 3.2.54-2 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
 > Human Language: english
 > (current-memory-use) 499182888
 > raco pkg (show):
 > /home/stchang/plt/racket/share/devel-pkgs:
 >  Package              Checksum    Source
 >  main-distribution    #f          (static-link ../../../pkgs/main-distribution)
 >  plt-services         #f          (static-link ../../../pkgs/plt-services)
 >  racket-lib           #f          (static-link ../../../pkgs/racket-pkgs/racket-lib)
 >  [213 auto-installed packages not shown]
 > Installation-wide:
 >  Package             Checksum                                    Source
 >  graph               #f                                          (link ../../../../racket/graph)
 >  parsack             #f                                          (link ../../../../racket/parsack)
 >  racket-benchmark    ddd86af24cf00005ac476f3078acc788d7da6994    (url git://github.com/stamourv/racket-benchmark)
 >  rackjure            #f                                          (link ../../../../racket/rackjure)
 >  sexp-diff           9a73188925a6e167322629f558435b813abed0b0    (catalog sexp-diff)
 >  sundry              #f                                          (link ../../../../racket/sundry)
 > User-specific for installation "development":
 >  [none]
 >
 >
 >
 > Collections:
 > ("/home/stchang/.racket/development/collects"
 >  (non-existent-path))
 > ("/home/stchang/plt/racket/collects"
 >  (".gitignore" "acks" "compiler" "data" "db" "dynext" "ffi" "file" "info" "info-domain" "json" "launcher" "net" "openssl" "pkg" "planet" "racket" "raco" "reader" "realm" "s-exp" "setup" "syntax" "unstable" "version" "xml"))
 >
 > Recent Internal Errors:
 > Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t none) (default) #() "#lang racket\n" #t #f ((test) (main)) #t))
 >
 
From: Stephen Chang <stchang@ccs.neu.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: bugs <bugs@racket-lang.org>, nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/14595: redex define-judgment-form bad error msg
 when there's multiple ellipses + metafunction
Date: Wed, 25 Jun 2014 11:00:01 -0400

 Yes, in general would it be possible to get some more information in
 the error message, to help in pinpointing the error? Source location
 would definitely help.
 
 Also, in my example, it's not actually the ellipses that are wrong,
 but the presence of the metafunction call (I think?). Is it possible
 to say this in the error?
 
 On Wed, Jun 25, 2014 at 1:20 AM, Robby Findler
 <robby@eecs.northwestern.edu> wrote:
 > Redex generally has the word "syntax" in the front of those error messages, eg:
 >
 > (define-metafunction L
 >   [(xs any) (any ...)])
 >
 > but usually there is a reasonable source location (unlike in the
 > example below). I guess it was the source location lack that's more
 > problematic, right?
 >
 > Robby
 >
 >
 > On Tue, Jun 24, 2014 at 2:12 PM,  <stchang@ccs.neu.edu> wrote:
 >> A new problem report is waiting at
 >>   http://bugs.racket-lang.org/query/?cmd=view&pr=14595
 >>
 >> Reported by Stephen Chang for release: 6.0.1.12
 >>
 >> *** Description:
 >> The included example produces the error:
 >>
 >> syntax: too many ellipses in template in: ...
 >>
 >> Removing either of the ellipses, or the metafunction call avoids the error.
 >>
 >> *** How to repeat:
 >> #lang racket
 >> (require redex)
 >>
 >> (define-language L
 >>   (e (λ (x ...) e ...))
 >>   (x variable-not-otherwise-mentioned))
 >>
 >> (define-judgment-form L
 >>   #:mode (⊢ I I)
 >>   #:contract (⊢ (x ...) e)
 >>   [(⊢ (xs (x ...)) e) ...
 >>    ---------------------
 >>    (⊢ () (λ (x ...) e ...))])
 >>
 >> (define-metafunction L
 >>   xs : (x ...) -> (x ...)
 >>   [(xs (x ...)) (x ...)])
 >>
 >> *** Environment:
 >> unix "Linux caprica 3.2.0-4-amd64 #1 SMP Debian 3.2.54-2 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
 >> Human Language: english
 >> (current-memory-use) 499182888
 >> raco pkg (show):
 >> /home/stchang/plt/racket/share/devel-pkgs:
 >>  Package              Checksum    Source
 >>  main-distribution    #f          (static-link ../../../pkgs/main-distribution)
 >>  plt-services         #f          (static-link ../../../pkgs/plt-services)
 >>  racket-lib           #f          (static-link ../../../pkgs/racket-pkgs/racket-lib)
 >>  [213 auto-installed packages not shown]
 >> Installation-wide:
 >>  Package             Checksum                                    Source
 >>  graph               #f                                          (link ../../../../racket/graph)
 >>  parsack             #f                                          (link ../../../../racket/parsack)
 >>  racket-benchmark    ddd86af24cf00005ac476f3078acc788d7da6994    (url git://github.com/stamourv/racket-benchmark)
 >>  rackjure            #f                                          (link ../../../../racket/rackjure)
 >>  sexp-diff           9a73188925a6e167322629f558435b813abed0b0    (catalog sexp-diff)
 >>  sundry              #f                                          (link ../../../../racket/sundry)
 >> User-specific for installation "development":
 >>  [none]
 >>
 >>
 >>
 >> Collections:
 >> ("/home/stchang/.racket/development/collects"
 >>  (non-existent-path))
 >> ("/home/stchang/plt/racket/collects"
 >>  (".gitignore" "acks" "compiler" "data" "db" "dynext" "ffi" "file" "info" "info-domain" "json" "launcher" "net" "openssl" "pkg" "planet" "racket" "raco" "reader" "realm" "s-exp" "setup" "syntax" "unstable" "version" "xml"))
 >>
 >> Recent Internal Errors:
 >> Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t none) (default) #() "#lang racket\n" #t #f ((test) (main)) #t))
 >>
 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Stephen Chang <stchang@ccs.neu.edu>
Cc: bugs <bugs@racket-lang.org>, nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/14595: redex define-judgment-form bad error msg
 when there's multiple ellipses + metafunction
Date: Wed, 25 Jun 2014 10:07:28 -0500

 On Wed, Jun 25, 2014 at 10:00 AM, Stephen Chang <stchang@ccs.neu.edu> wrote:
 > Yes, in general would it be possible to get some more information in
 > the error message, to help in pinpointing the error? Source location
 > would definitely help.
 >
 > Also, in my example, it's not actually the ellipses that are wrong,
 > but the presence of the metafunction call (I think?). Is it possible
 > to say this in the error?
 
 Oh, right. Good point. I feel like it should be the same with or
 without the metafunction. I'll have to look more carefully to
 understand what's doable.
 
 Robby
 
 > On Wed, Jun 25, 2014 at 1:20 AM, Robby Findler
 > <robby@eecs.northwestern.edu> wrote:
 >> Redex generally has the word "syntax" in the front of those error messages, eg:
 >>
 >> (define-metafunction L
 >>   [(xs any) (any ...)])
 >>
 >> but usually there is a reasonable source location (unlike in the
 >> example below). I guess it was the source location lack that's more
 >> problematic, right?
 >>
 >> Robby
 >>
 >>
 >> On Tue, Jun 24, 2014 at 2:12 PM,  <stchang@ccs.neu.edu> wrote:
 >>> A new problem report is waiting at
 >>>   http://bugs.racket-lang.org/query/?cmd=view&pr=14595
 >>>
 >>> Reported by Stephen Chang for release: 6.0.1.12
 >>>
 >>> *** Description:
 >>> The included example produces the error:
 >>>
 >>> syntax: too many ellipses in template in: ...
 >>>
 >>> Removing either of the ellipses, or the metafunction call avoids the error.
 >>>
 >>> *** How to repeat:
 >>> #lang racket
 >>> (require redex)
 >>>
 >>> (define-language L
 >>>   (e (λ (x ...) e ...))
 >>>   (x variable-not-otherwise-mentioned))
 >>>
 >>> (define-judgment-form L
 >>>   #:mode (⊢ I I)
 >>>   #:contract (⊢ (x ...) e)
 >>>   [(⊢ (xs (x ...)) e) ...
 >>>    ---------------------
 >>>    (⊢ () (λ (x ...) e ...))])
 >>>
 >>> (define-metafunction L
 >>>   xs : (x ...) -> (x ...)
 >>>   [(xs (x ...)) (x ...)])
 >>>
 >>> *** Environment:
 >>> unix "Linux caprica 3.2.0-4-amd64 #1 SMP Debian 3.2.54-2 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
 >>> Human Language: english
 >>> (current-memory-use) 499182888
 >>> raco pkg (show):
 >>> /home/stchang/plt/racket/share/devel-pkgs:
 >>>  Package              Checksum    Source
 >>>  main-distribution    #f          (static-link ../../../pkgs/main-distribution)
 >>>  plt-services         #f          (static-link ../../../pkgs/plt-services)
 >>>  racket-lib           #f          (static-link ../../../pkgs/racket-pkgs/racket-lib)
 >>>  [213 auto-installed packages not shown]
 >>> Installation-wide:
 >>>  Package             Checksum                                    Source
 >>>  graph               #f                                          (link ../../../../racket/graph)
 >>>  parsack             #f                                          (link ../../../../racket/parsack)
 >>>  racket-benchmark    ddd86af24cf00005ac476f3078acc788d7da6994    (url git://github.com/stamourv/racket-benchmark)
 >>>  rackjure            #f                                          (link ../../../../racket/rackjure)
 >>>  sexp-diff           9a73188925a6e167322629f558435b813abed0b0    (catalog sexp-diff)
 >>>  sundry              #f                                          (link ../../../../racket/sundry)
 >>> User-specific for installation "development":
 >>>  [none]
 >>>
 >>>
 >>>
 >>> Collections:
 >>> ("/home/stchang/.racket/development/collects"
 >>>  (non-existent-path))
 >>> ("/home/stchang/plt/racket/collects"
 >>>  (".gitignore" "acks" "compiler" "data" "db" "dynext" "ffi" "file" "info" "info-domain" "json" "launcher" "net" "openssl" "pkg" "planet" "racket" "raco" "reader" "realm" "s-exp" "setup" "syntax" "unstable" "version" "xml"))
 >>>
 >>> Recent Internal Errors:
 >>> Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t none) (default) #() "#lang racket\n" #t #f ((test) (main)) #t))
 >>>
 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Stephen Chang <stchang@ccs.neu.edu>
Cc: bugs <bugs@racket-lang.org>, nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/14595: redex define-judgment-form bad error msg
 when there's multiple ellipses + metafunction
Date: Sat, 5 Jul 2014 23:42:18 -0500

 Okay, I understand what's going on here, and unfortunately, I don't
 see an easy fix.
 
 Here's a variation on your program:
 
 #lang racket/base
 (require redex/reduction-semantics)
 
 (define-language L
   (x y ::= any))
 
 (define-metafunction L
   [(g any) any])
 
 (define-metafunction L
   [(f (x ...) (y ...))
    (((g (x ...)) y) ...)])
 
 
 If you remove the call to 'g' in the body of 'f', you have this
 pattern on the right-hand side:
 
   (((x ...) y) ...)
 
 which quasidatum (what redex expands into) can deal with by splicing.
 For example, if x = (1 2 3) and y = (4 5 6), then you get:
 
 (term (((1 2 3) 4) ((1 2 3) 5) ((1 2 3) 6)))
 
 as the result because quasidatum knows to duplicate the (1 2 3) in
 each place, using the ellipses on the 'y' as a guide for how to do the
 duplication.
 
 But the way redex implements metafunction calls is by lifting them
 out, doing them first, and then putting the results back in to let
 quasidatum do it's complex magic to implement the ellipses.
 
 Lifting out in this case turns the 'g' call into this:
 
  ((g (x ...)) ...)
 
 but that isn't something that quasidatum can deal with because it
 doesn't have the 'y' any more to guide it.
 
 The reason I don't see an easy fix is that I'd need to either change
 quasidatum to support metafunctions or to reimplement what quasidatum
 is doing inside Redex, neither of which is straightforward.
 
 Robby
From: Robby Findler <robby@eecs.northwestern.edu>
To: Stephen Chang <stchang@ccs.neu.edu>
Cc: bugs <bugs@racket-lang.org>, nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/14595: redex define-judgment-form bad error msg
 when there's multiple ellipses + metafunction
Date: Sat, 5 Jul 2014 23:59:52 -0500

 Okay, looking into the lack of source location, it is because the way
 raise-syntax-error is being called from racket/private/sc.rkt (search
 for "too many") seems to be discarding the object with the useful
 source locations. It's being called like this, effectively:
 
 (with-handlers ([values values])
     (raise-syntax-error
      'something "went wrong"
      #'useful-source-loc
      (datum->syntax #f 'no-source-loc #f #f)))
 
 and the result exn doesn't have the one with the useful source location.
 
 I think this is probably all by definition and not fixable at that
 level, but I thought I'd check. And I'll see if I can find where that
 ellipsis is actually coming from (inside redex somewhere I assume) and
 get a source location for it.
 
 Robby
Responsible changed from "nobody" to "robby" by robby@racket-lang.org at Sun, 06 Jul 2014 01:58:41 -0400
Reason>>> A commit by robby@racket-lang.org was marked as relevant
  http://git.racket-lang.org/plt/commit/53d6fffe71
  | propagate some source locations for better error reporting
  | 
  | related to PR 14595

From: Matthew Flatt <mflatt@cs.utah.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: Stephen Chang <stchang@ccs.neu.edu>, bugs <bugs@racket-lang.org>,
        nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/14595: redex define-judgment-form bad error msg
 when there's multiple ellipses + metafunction
Date: Sun, 6 Jul 2014 07:43:12 +0100

 I think it may be fixable, and we should experiment with changing the
 way that `raise-syntax-error` uses its two expression arguments
 (instead of the way that it currently omits one from the generated
 exception) after the v6.1 branch.
 
 At Sat, 5 Jul 2014 23:59:52 -0500, Robby Findler wrote:
 > Okay, looking into the lack of source location, it is because the way
 > raise-syntax-error is being called from racket/private/sc.rkt (search
 > for "too many") seems to be discarding the object with the useful
 > source locations. It's being called like this, effectively:
 > 
 > (with-handlers ([values values])
 >     (raise-syntax-error
 >      'something "went wrong"
 >      #'useful-source-loc
 >      (datum->syntax #f 'no-source-loc #f #f)))
 > 
 > and the result exn doesn't have the one with the useful source location.
 > 
 > I think this is probably all by definition and not fixable at that
 > level, but I thought I'd check. And I'll see if I can find where that
 > ellipsis is actually coming from (inside redex somewhere I assume) and
 > get a source location for it.
 > 
 > Robby
