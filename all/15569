From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Thu Dec 20 00:47:37 2018
Received: from mail-oi1-f172.google.com (mail-oi1-f172.google.com [209.85.167.172])
	by winooski.ccs.neu.edu (8.14.7/8.14.7) with ESMTP id wBK5lZg6021463
	for <bugs@bugs.plt-scheme.org>; Thu, 20 Dec 2018 00:47:36 -0500
Message-Id: <201812200547.wBK5lX92021456@winooski.ccs.neu.edu>
Date: Thu, 20 Dec 2018 00:47:33 -0500
From: rxg@cs.ubc.ca
To: bugs@racket-lang.org
Subject: (_ptr o t) could use a mode for "non-collectible" allocation

>Number:         15569
>Category:       all
>Synopsis:       (_ptr o t) could use a mode for "non-collectible" allocation
>Class:          change-request
>Responsible:    nobody
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Thu Dec 20 00:48:01 -0500 2018
>Originator:     Ronald Garcia
>Organization:
plt
>Submitter-Id:   unknown
>Release:        7.1
>Environment:
macosx "Darwin CPSC-LM-RXG 15.6.0 Darwin Kernel Version 15.6.0: Thu Jun 21 20:07:40 PDT 2018; root:xnu-3248.73.11~1/RELEASE_X86_64 x86_64" (x86_64-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 1331128256
raco pkg (show):
Installation-wide:
 Package            Checksum             Source
 main-distribution  107e1b59943f693b...  catalog...tribution
 racket-lib         21fbc2a1a2972f1f...  catalog racket-lib
 [198 auto-installed packages not shown]
User-specific for installation "7.1":
 Package      Checksum               Source
 csv-reading  217c1ee293ee246cba...  catalog csv-reading
 data-frame   c2e031549cc7ae7a51...  catalog...a-frame.git
 nlopt        362f338891785a5bc4...  catalog...minek/nlopt
 [2 auto-installed packages not shown]



Collections:
("/Users/ronaldgarcia/Library/Racket/7.1/collects"
 (non-existent-path))
("/Applications/Racket v7.1/collects"
 ("acks" "compiler" "data" "db" "dynext" "ffi" "file" "info" "info-domain" "json" "launcher" "net" "openssl" "pkg" "planet" "racket" "raco" "reader" "realm" "s-exp" "setup" "syntax" "version" "xml"))

Recent Internal Errors: 
Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((test) (main)) #t))
>Description:
In the FFI, (_ptr o t) uses malloc to create an output space, but when calling into C that calls back into Racket, it seems like the allocated memory could be moved before C returns (if I understand the Racket FFI docs correctly)
>How-To-Repeat:
Too involved, but in misbehaving code that I had, replacing _ptr with "_peg-ptr" and providing the following macro made things work.  It's possible the affect is spurious though:
(define-fun-syntax _peg-ptr
  (syntax-rules (o)
    [(_ o  t) (type: _pointer
               pre:  (malloc t 'atomic-interior)
               post: (x => (ptr-ref x t)))]))

In general should probably not be atomic, but I was dealing only with t=_double.
>Fix:
