From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Wed Mar 20 12:32:17 2013
Received: from mail-ob0-f169.google.com (mail-ob0-f169.google.com [209.85.214.169])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id r2KGWEfe021074
	for <bugs@bugs.plt-scheme.org>; Wed, 20 Mar 2013 12:32:14 -0400
Message-Id: <201303201632.r2KGWAJq021069@champlain.ccs.neu.edu>
Date: Wed, 20 Mar 2013 12:32:10 -0400
From: muranov@math.univ-toulouse.fr
To: bugs@racket-lang.org
Subject: eval returnes an error

>Number:         13618
>Category:       all
>Synopsis:       eval returnes an error
>Class:          not-a-bug
>Responsible:    nobody
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Wed Mar 20 12:36:01 -0400 2013
>Closed-Date:    Wed Mar 20 14:34:49 -0400 2013
>Last-Modified:  Wed Mar 20 16:52:02 -0400 2013
>Originator:     Alexey Muranov
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.3.3
>Environment:
macosx "Darwin rhone.ups-tlse.fr 10.8.0 Darwin Kernel Version 10.8.0: Tue Jun  7 16:33:36 PDT 2011; root:xnu-1504.15.3~1/RELEASE_I386 i386" (x86_64-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 452377760
Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()
Planet2 (show):
Installation-wide:
 [none]
User-specific, all-version:
 [none]
User-specific, version-specific:
 [none]



Collections:
("/Volumes/Data/Users/alexey/Library/Racket/5.3.3/collects"
 (non-existent-path))
("/Applications/Custom/Racket v5.3.3/collects"
 ("2htdp" "algol60" "at-exp" "browser" "compatibility" "compiler" "config" "data" "datalog" "db" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "future-visualizer" "games" "graphics" "gui-debugger" "help" "hierlist" "htdp" "html" "icons" "images" "info-domain" "json" "lang" "launcher" "lazy" "macro-debugger" "make" "math" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "picturing-programs" "plai" "planet" "planet2" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "redex" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-engine" "texpict" "trace" "typed" "typed-racket" "typed-scheme" "unstable" "version" "web-server" "wxme" "xml" "xrepl"))

Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((main) (test))))
>Description:
I am completely new to Racket, maybe i am doing something incorrectly, but this looks strange to me: running this two-line pogram in the interactive window returnes 3, but running it in the definition window gives an error.
>How-To-Repeat:
Run the following program in the definition window:

#lang racket
{define a '{+ 1 2}}
{eval a}

The output:
+: unbound identifier;
 also, no #%app syntax transformer is bound in: +
>Fix:
>Audit-Trail:
From: John Clements <clements@brinckerhoff.org>
To: muranov@math.univ-toulouse.fr, bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/13618: eval returnes an error
Date: Wed, 20 Mar 2013 09:48:00 -0700

 On Mar 20, 2013, at 9:36 AM, muranov@math.univ-toulouse.fr wrote:
 
 > A new problem report is waiting at
 >  http://bugs.racket-lang.org/query/?cmd=view&pr=13618
 > 
 > Reported by Alexey Muranov for release: 5.3.3
 > 
 > *** Description:
 > I am completely new to Racket, maybe i am doing something incorrectly, but this looks strange to me: running this two-line pogram in the interactive window returnes 3, but running it in the definition window gives an error.
 > 
 > *** How to repeat:
 > Run the following program in the definition window:
 > 
 > #lang racket
 > {define a '{+ 1 2}}
 > {eval a}
 
 It's tricky to answer this question without making people grumpy.  Let me try. First, here's a program:
 
 #lang racket
 
 ;; this one prints 3:
 (eval (datum->syntax #'here '(+ 1 2)))
 
 ;; this one is equivalent to what you wrote, and fails:
 ;(eval (datum->syntax false '(+ 1 2)))
 
 ;; here's a shorter way to write (something similar to) the earlier:
 (eval #'(+ 1 2))
 
 
 I would describe the rationale as follows: Racket's designers believe in enforceable boundaries between modules and between evaluation phases. These boundaries make it possible to statically determine, for instance, whether a binding has any references, and whether it's mutated. Allowing "eval" to splice itself into the current runtime context without limits makes it difficult or impossible to discover these facts.  One of the many benefits of this design philosophy is that Racket code can be compiled into relatively fast code.
 
 John Clements
  
 
 > 
 > The output:
 > +: unbound identifier;
 > also, no #%app syntax transformer is bound in: +
 > 
 > *** Environment:
 > macosx "Darwin rhone.ups-tlse.fr 10.8.0 Darwin Kernel Version 10.8.0: Tue Jun  7 16:33:36 PDT 2011; root:xnu-1504.15.3~1/RELEASE_I386 i386" (x86_64-macosx/3m) (get-display-depth) = 32
 > Human Language: english
 > (current-memory-use) 452377760
 > Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()
 > Planet2 (show):
 > Installation-wide:
 > [none]
 > User-specific, all-version:
 > [none]
 > User-specific, version-specific:
 > [none]
 > 
 > 
 > 
 > Collections:
 > ("/Volumes/Data/Users/alexey/Library/Racket/5.3.3/collects"
 > (non-existent-path))
 > ("/Applications/Custom/Racket v5.3.3/collects"
 > ("2htdp" "algol60" "at-exp" "browser" "compatibility" "compiler" "config" "data" "datalog" "db" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "future-visualizer" "games" "graphics" "gui-debugger" "help" "hierlist" "htdp" "html" "icons" "images" "info-domain" "json" "lang" "launcher" "lazy" "macro-debugger" "make" "math" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "picturing-programs" "plai" "planet" "planet2" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "redex" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-engine" "texpict" "trace" "typed" "typed-racket" "typed-scheme" "unstable" "version" "web-server" "wxme" "xml" "xrepl"))
 > 
 > Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((main) (test))))
 > 
 
 
From: Matthew Flatt <mflatt@cs.utah.edu>
To: muranov@math.univ-toulouse.fr
Cc: bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/13618: eval returnes an error
Date: Wed, 20 Mar 2013 10:25:22 -0700

 See also
 
   http://docs.racket-lang.org/guide/eval.html#(part._namespaces)
 
 At Wed, 20 Mar 2013 09:48:00 -0700, John Clements wrote:
 > 
 > On Mar 20, 2013, at 9:36 AM, muranov@math.univ-toulouse.fr wrote:
 > 
 > > A new problem report is waiting at
 > >  http://bugs.racket-lang.org/query/?cmd=view&pr=13618
 > > 
 > > Reported by Alexey Muranov for release: 5.3.3
 > > 
 > > *** Description:
 > > I am completely new to Racket, maybe i am doing something incorrectly, but 
 > this looks strange to me: running this two-line pogram in the interactive 
 > window returnes 3, but running it in the definition window gives an error.
 > > 
 > > *** How to repeat:
 > > Run the following program in the definition window:
 > > 
 > > #lang racket
 > > {define a '{+ 1 2}}
 > > {eval a}
 > 
 > It's tricky to answer this question without making people grumpy.  Let me try. 
 > First, here's a program:
 > 
 > #lang racket
 > 
 > ;; this one prints 3:
 > (eval (datum->syntax #'here '(+ 1 2)))
 > 
 > ;; this one is equivalent to what you wrote, and fails:
 > ;(eval (datum->syntax false '(+ 1 2)))
 > 
 > ;; here's a shorter way to write (something similar to) the earlier:
 > (eval #'(+ 1 2))
 > 
 > 
 > I would describe the rationale as follows: Racket's designers believe in 
 > enforceable boundaries between modules and between evaluation phases. These 
 > boundaries make it possible to statically determine, for instance, whether a 
 > binding has any references, and whether it's mutated. Allowing "eval" to 
 > splice itself into the current runtime context without limits makes it 
 > difficult or impossible to discover these facts.  One of the many benefits of 
 > this design philosophy is that Racket code can be compiled into relatively 
 > fast code.
 > 
 > John Clements
 >  
 > 
 > > 
 > > The output:
 > > +: unbound identifier;
 > > also, no #%app syntax transformer is bound in: +
 > > 
 > > *** Environment:
 > > macosx "Darwin rhone.ups-tlse.fr 10.8.0 Darwin Kernel Version 10.8.0: Tue 
 > Jun  7 16:33:36 PDT 2011; root:xnu-1504.15.3~1/RELEASE_I386 i386" 
 > (x86_64-macosx/3m) (get-display-depth) = 32
 > > Human Language: english
 > > (current-memory-use) 452377760
 > > Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); 
 > (links #:user? #f #:root? #t) = ()
 > > Planet2 (show):
 > > Installation-wide:
 > > [none]
 > > User-specific, all-version:
 > > [none]
 > > User-specific, version-specific:
 > > [none]
 > > 
 > > 
 > > 
 > > Collections:
 > > ("/Volumes/Data/Users/alexey/Library/Racket/5.3.3/collects"
 > > (non-existent-path))
 > > ("/Applications/Custom/Racket v5.3.3/collects"
 > > ("2htdp" "algol60" "at-exp" "browser" "compatibility" "compiler" "config" 
 > "data" "datalog" "db" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" 
 > "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" 
 > "future-visualizer" "games" "graphics" "gui-debugger" "help" "hierlist" "htdp" 
 > "html" "icons" "images" "info-domain" "json" "lang" "launcher" "lazy" 
 > "macro-debugger" "make" "math" "mred" "mrlib" "mysterx" "mzcom" "mzlib" 
 > "mzscheme" "net" "openssl" "parser-tools" "picturing-programs" "plai" "planet" 
 > "planet2" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" 
 > "rackunit" "raco" "reader" "readline" "redex" "rnrs" "s-exp" "scheme" 
 > "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "slatex" 
 > "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" 
 > "syntax-color" "teachpack" "test-engine" "texpict" "trace" "typed" 
 > "typed-racket" "typed-scheme" "unstable" "version" "web-server" "wxme" "xml" 
 > "xrepl"))
 > > 
 > > Computer Language: (("Determine language from source") (#(#t print 
 > mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((main) 
 > (test))))
 > > 

Class changed from "sw-bug" to "not-a-bug" by dyoo at Wed, 20 Mar 2013 14:34:49 -0400
Reason>>> Not a bug.

State changed from "open" to "closed" by dyoo at Wed, 20 Mar 2013 14:34:49 -0400
Reason>>> Not a bug; recommend discussion on mailing list instead.

From: Danny Yoo <dyoo@hashcollision.org>
To: muranov@math.univ-toulouse.fr, bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/13618: eval returnes an error
Date: Wed, 20 Mar 2013 12:36:05 -0600

 > *** Description:
 > I am completely new to Racket, maybe i am doing something incorrectly, but this looks strange to me: running this two-line pogram in the interactive window returnes 3, but running it in the definition window gives an error.
 
 Hi Alexey,
 
 This is not a bug, so I'll close this report.  However, you'll want to
 read this section in the documentation about dynamic evaluation:
 
     http://docs.racket-lang.org/guide/reflection.html
 
 which includes the content about namespaces that Matthew mentioned.
 If you have questions about this, please feel free to ask the
 Racket-users mailing list; we'll be happy to talk about it there.
 
     http://lists.racket-lang.org/users/
From: Alexey Muranov <muranov@math.univ-toulouse.fr>
To: Danny Yoo <dyoo@hashcollision.org>
Cc: bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/13618: eval returnes an error
Date: Wed, 20 Mar 2013 21:48:42 +0100

 Ok, thanks for the explanations.
 
 I have also found some explanations here: http://blog.racket-lang.org/2011/10/on-eval-in-dynamic-languages-generally.html
 
 Alexey.
 
 On 20 Mar 2013, at 19:36, Danny Yoo wrote:
 
 >> *** Description:
 >> I am completely new to Racket, maybe i am doing something incorrectly, but this looks strange to me: running this two-line pogram in the interactive window returnes 3, but running it in the definition window gives an error.
 > 
 > Hi Alexey,
 > 
 > This is not a bug, so I'll close this report.  However, you'll want to
 > read this section in the documentation about dynamic evaluation:
 > 
 >    http://docs.racket-lang.org/guide/reflection.html
 > 
 > which includes the content about namespaces that Matthew mentioned.
 > If you have questions about this, please feel free to ask the
 > Racket-users mailing list; we'll be happy to talk about it there.
 > 
 >    http://lists.racket-lang.org/users/
 
 
