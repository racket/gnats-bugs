From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Thu Feb 11 02:40:03 2016
Received: from mail-io0-f170.google.com (mail-io0-f170.google.com [209.85.223.170])
	by winooski.ccs.neu.edu (8.14.7/8.14.7) with ESMTP id u1B7e15J028152
	for <bugs@bugs.plt-scheme.org>; Thu, 11 Feb 2016 02:40:01 -0500
Message-Id: <201602110739.u1B7dwvU028145@winooski.ccs.neu.edu>
Date: Thu, 11 Feb 2016 02:39:58 -0500
From: eric.n.dobson@gmail.com
To: bugs@racket-lang.org
Subject: Segfault from eval of huge expression

>Number:         15247
>Category:       all
>Synopsis:       Segfault from eval of huge expression
>Class:          sw-bug
>Responsible:    nobody
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Thu Feb 11 02:44:01 -0500 2016
>Originator:     Eric Dobson
>Organization:
plt
>Submitter-Id:   unknown
>Release:        HEAD
>Environment:
MacIntel / Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2593.0 Safari/537.36
>Description:
The following program reliably segfaults for me.           
>How-To-Repeat:
#lang racket/base

(require
  racket/match
  racket/pretty
  racket/syntax
  racket/list)


(define (n-calls n id calls)
  (cond
    [(zero? n)
     (cons #`(define (#,id) 0) calls)]
    [else
      (define new-id (generate-temporary))
      (n-calls (sub1 n) new-id (cons #`(define (#,id) (#,new-id)) calls))]))

(define-namespace-anchor anchor)
(define ns (namespace-anchor->empty-namespace anchor))

(for ([j (in-range 3)])
  (collect-garbage)
  (collect-garbage)
  (collect-garbage)
  (define defs (n-calls 10000 #'start empty))
  (time
    ((time (eval #`(let () #,@defs start) ns)))))
     
           
>Fix:
