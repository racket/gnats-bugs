From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Fri Dec  5 18:19:38 2014
Received: from mail-ie0-f169.google.com (mail-ie0-f169.google.com [209.85.223.169])
	by winooski.ccs.neu.edu (8.14.7/8.14.7) with ESMTP id sB5NJaem029052
	for <bugs@bugs.plt-scheme.org>; Fri, 5 Dec 2014 18:19:37 -0500
Message-Id: <201412052319.sB5NJYGk028963@winooski.ccs.neu.edu>
Date: Fri, 5 Dec 2014 18:19:34 -0500
From: krgermane@gmail.com
To: bugs@racket-lang.org
Subject: Deeply-nested with-handlers trigger segfault

>Number:         14870
>Category:       all
>Synopsis:       Deeply-nested with-handlers trigger segfault
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       non-critical
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Fri Dec 05 18:20:02 -0500 2014
>Closed-Date:    Tue Dec 09 16:48:52 -0500 2014
>Last-Modified:  Tue Dec 09 16:48:52 -0500 2014
>Originator:     Kimball Germane
>Organization:
plt
>Submitter-Id:   unknown
>Release:        6.1.1.5
>Environment:
mac-i386-osx
>Description:
On OS X, if with-handlers, in which the error handler application itself raises an exception, are nested deeply enough and an (asynchonous?) exception is raised, the racket process segfaults.

I've confirmed the issue present on OS X (10.9.4) with
- 6.1 release
- 6.1.1.5 (current HEAD of 468d77e8d00b9537116ee2bbc8faa63301580781)
and absent on Linux (3.17.4) with
- 6.1.1 release
- 6.1.1.5 (current HEAD)

A segfault is triggered consistently with a handler depth of 6013 or more and only by a break exception (at least on my machine).

I can't imagine these conditions arising in a real program unless by mistake (as I discovered them), but I also can't sleep at night knowing there's a segfault lurking in racket.
>How-To-Repeat:
#lang racket/base

(let loop ([i 6013])
  (if (zero? i)
    (break-thread)
    (with-handlers ([void (lambda (x y) x)])
      (loop (sub1 i)))))
>Fix:
>Audit-Trail:
Responsible changed from "nobody" to "mflatt" by mflatt@racket-lang.org at Tue, 09 Dec 2014 16:48:52 -0500
Reason>>> A commit by mflatt@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/195a46a23e
State changed from "open" to "closed" by mflatt@racket-lang.org at Tue, 09 Dec 2014 16:48:52 -0500
Reason>>> A commit by mflatt@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/195a46a23e
  | fix problem with truncated value printing and stack overflow
  | 
  | A value-printing truncation discovered after a stack-overflow handle
  | and return could go badly, because the truncation escape wasn't
  | reset correctly after overflow handling (in contrast to truncation
  | discovered during the overflow handling, which was handled correctly).
  | 
  | Closes PR 14870

