From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Sat Jan 19 16:15:16 2013
Received: from mail-oa0-f47.google.com (mail-oa0-f47.google.com [209.85.219.47])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id r0JLFC1g020110
	for <bugs@bugs.plt-scheme.org>; Sat, 19 Jan 2013 16:15:12 -0500
Message-Id: <201301192115.r0JLF9cU020104@champlain.ccs.neu.edu>
Date: Sat, 19 Jan 2013 16:15:09 -0500
From: cce@ccs.neu.edu
To: bugs@racket-lang.org
Subject: "raco link --root" interprets .git directory as a collection

>Number:         13442
>Category:       all
>Synopsis:       "raco link --root" interprets .git directory as a collection
>Class:          not-a-bug
>Responsible:    cce
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Sat Jan 19 16:16:01 -0500 2013
>Closed-Date:    Mon Jan 28 12:27:05 -0500 2013
>Last-Modified:  Mon Jan 28 12:27:05 -0500 2013
>Originator:     Carl Eastlund
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.3.1
>Environment:
MacIntel / Mozilla/5.0 (Macintosh; Intel Mac OS X 10.7; rv:17.0) Gecko/20100101 Firefox/17.0
>Description:
"raco link --root <dir>" when <dir> is a git repository will also use the .git directory as a collection itself.  It should really ignore directories like .git, .svn, etc.  That, or there should be a way to configure it, by an argument or info.rkt or something similar.
>How-To-Repeat:
>Fix:
>Audit-Trail:
From: Eli Barzilay <eli@barzilay.org>
To: cce@ccs.neu.edu, bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/13442: "raco link --root" interprets .git directory as a collection
Date: Sun, 20 Jan 2013 10:16:36 -0500

 Yesterday, cce@ccs.neu.edu wrote:
 > A new problem report is waiting at
 >   http://bugs.racket-lang.org/query/?cmd=view&pr=13442
 > 
 > Reported by Carl Eastlund for release: 5.3.1
 > 
 > *** Description:
 > "raco link --root <dir>" when <dir> is a git repository will also
 > use the .git directory as a collection itself.  It should really
 > ignore directories like .git, .svn, etc.  That, or there should be a
 > way to configure it, by an argument or info.rkt or something
 > similar.
 
 -2 for "fixing" this.  I don't see anything useful that it would
 protect me from -- and OTOH, I see possible uses for putting racket
 files in .git directories.
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!
From: Carl Eastlund <cce@ccs.neu.edu>
To: Eli Barzilay <eli@barzilay.org>
Cc: bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/13442: "raco link --root" interprets .git
 directory as a collection
Date: Sun, 20 Jan 2013 12:58:38 -0500

 --f46d044797c1766d4104d3bc1a57
 Content-Type: text/plain; charset=UTF-8
 
 If I put racket files in my .git directories, that doesn't mean that the
 code I store in the repository itself should have that directory as a
 subcollection.  The .git directory is metadata.  I have some collections, I
 just happen to be storing them in git, and when I link to them, I am not in
 any way telling Racket that I also want it to link to some metadata.  And
 while I'm sure there are reasons to put Racket files in .git directories,
 that's completely different from wanting a collection named ".git" tied to
 every single linked directory that happens to be a git repository.
 
 For the same reason that "raco planet create" ignores things like .git
 directories, "raco link" should too.  And again, if you occasionally need
 to use them, there should be an option to override.
 
 Carl Eastlund
 
 
 On Sun, Jan 20, 2013 at 10:16 AM, Eli Barzilay <eli@barzilay.org> wrote:
 
 > Yesterday, cce@ccs.neu.edu wrote:
 > > A new problem report is waiting at
 > >   http://bugs.racket-lang.org/query/?cmd=view&pr=13442
 > >
 > > Reported by Carl Eastlund for release: 5.3.1
 > >
 > > *** Description:
 > > "raco link --root <dir>" when <dir> is a git repository will also
 > > use the .git directory as a collection itself.  It should really
 > > ignore directories like .git, .svn, etc.  That, or there should be a
 > > way to configure it, by an argument or info.rkt or something
 > > similar.
 >
 > -2 for "fixing" this.  I don't see anything useful that it would
 > protect me from -- and OTOH, I see possible uses for putting racket
 > files in .git directories.
 >
 > --
 >           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
 >                     http://barzilay.org/                   Maze is Life!
 >
 >
 
 --f46d044797c1766d4104d3bc1a57
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 <div dir=3D"ltr">If I put racket files in my .git directories, that doesn&#=
 39;t mean that the code I store in the repository itself should have that d=
 irectory as a subcollection.=C2=A0 The .git directory is metadata.=C2=A0 I =
 have some collections, I just happen to be storing them in git, and when I =
 link to them, I am not in any way telling Racket that I also want it to lin=
 k to some metadata.=C2=A0 And while I&#39;m sure there are reasons to put R=
 acket files in .git directories, that&#39;s completely different from wanti=
 ng a collection named &quot;.git&quot; tied to every single linked director=
 y that happens to be a git repository.<br>
 
 <br>For the same reason that &quot;raco planet create&quot; ignores things =
 like .git directories, &quot;raco link&quot; should too.=C2=A0 And again, i=
 f you occasionally need to use them, there should be an option to override.=
 <br>
 
 </div><div class=3D"gmail_extra"><br clear=3D"all"><div>Carl Eastlund</div>
 <br><br><div class=3D"gmail_quote">On Sun, Jan 20, 2013 at 10:16 AM, Eli Ba=
 rzilay <span dir=3D"ltr">&lt;<a href=3D"mailto:eli@barzilay.org" target=3D"=
 _blank">eli@barzilay.org</a>&gt;</span> wrote:<br><blockquote class=3D"gmai=
 l_quote" style=3D"margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left=
 :1ex">
 
 <div class=3D"im">Yesterday, <a href=3D"mailto:cce@ccs.neu.edu">cce@ccs.neu=
 .edu</a> wrote:<br>
 &gt; A new problem report is waiting at<br>
 &gt; =C2=A0 <a href=3D"http://bugs.racket-lang.org/query/?cmd=3Dview&amp;pr=
 =3D13442" target=3D"_blank">http://bugs.racket-lang.org/query/?cmd=3Dview&a=
 mp;pr=3D13442</a><br>
 &gt;<br>
 &gt; Reported by Carl Eastlund for release: 5.3.1<br>
 &gt;<br>
 &gt; *** Description:<br>
 &gt; &quot;raco link --root &lt;dir&gt;&quot; when &lt;dir&gt; is a git rep=
 ository will also<br>
 &gt; use the .git directory as a collection itself. =C2=A0It should really<=
 br>
 &gt; ignore directories like .git, .svn, etc. =C2=A0That, or there should b=
 e a<br>
 &gt; way to configure it, by an argument or info.rkt or something<br>
 &gt; similar.<br>
 <br>
 </div>-2 for &quot;fixing&quot; this. =C2=A0I don&#39;t see anything useful=
  that it would<br>
 protect me from -- and OTOH, I see possible uses for putting racket<br>
 files in .git directories.<br>
 <span class=3D"HOEnZb"><font color=3D"#888888"><br>
 --<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 ((lambda (x) (x x)) (lambda (x) (x x))) =
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Eli Barzilay:<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 <a hr=
 ef=3D"http://barzilay.org/" target=3D"_blank">http://barzilay.org/</a> =C2=
 =A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 Maze is Life!<b=
 r>
 <br>
 </font></span></blockquote></div><br></div>
 
 --f46d044797c1766d4104d3bc1a57--
From: Eli Barzilay <eli@barzilay.org>
To: Carl Eastlund <cce@ccs.neu.edu>
Cc: bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/13442: "raco link --root" interprets .git
 directory as a collection
Date: Mon, 21 Jan 2013 00:55:13 -0500

 12 hours ago, Carl Eastlund wrote:
 > If I put racket files in my .git directories, that doesn't mean that
 > the code I store in the repository itself should have that directory
 > as a subcollection.
 
 Why not?  Rephrase more clearly but more verbosely:
 
 1. I don't see anything useful that I get from being protected against
    using ".git" on a module path.
 
 2. I do see potential uses for allowing it, and putting files in what
    you call metadata.
 
 3. Both points become much stronger IMO when you consider other names
    like "CVS" or maybe ".DS_Store" and "desktop.ini" (which for all I
    know could become directories in the future).  To be clear, "you
    consider" is intentional here -- related to the possible potential
    in #2.
 
 4. I do think that it's a valid point to ignore these names for
    *distribution*, but not for naming code.
 
 5. Another point to consider: with all of the distribution or whatever
    code that ignores these directories, there is always a way to
    configure things to disable it.  I really don't want my language to
    get some new syntax for (require .git/YES-I-MEAN-THAT/foo).
 
 6. And I can't help but think about the major mistake MS did when
    burning a near-permanent hole in the namespace of files with its
    "NUL" etc special names.  What you're asking for seems similar to
    that.
 
 7. Still, the most important point is #1.  I don't see what benefits I
    get from that, or equivalently what harm it helps me to avoid.  If
    I typed `.git/bleh' then I supposedly didn't do so by mistake.
 
 
 > And while I'm sure there are reasons to put Racket files in .git
 > directories, that's completely different from wanting a collection
 > named ".git" tied to every single linked directory that happens to
 > be a git repository.
 
 I *do* refer to putting them in ".git" directories and using them as
 a collection.
 
 
 > For the same reason that "raco planet create" ignores things like
 > .git directories, "raco link" should too.
 
 See #4 -- the first is a distribution bundler, the second is a
 linguistic extension.
 
 
 > And again, if you occasionally need to use them, there should be an
 > option to override.
 
 Oh, so you're probably thinking about some argument to `link'.  That
 defeats the whole point of --root, which is something that I
 originally suggested when Matthew added the link thing -- where
 there's a difference between linking "--root foo" and "foo/*".
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!
From: Matthew Flatt <mflatt@cs.utah.edu>
To: Eli Barzilay <eli@barzilay.org>
Cc: Carl Eastlund <cce@ccs.neu.edu>, bugs@racket-lang.org,
        nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/13442: "raco link --root" interprets .git
 directory as a collection
Date: Mon, 21 Jan 2013 06:58:29 +0100

 Doesn't answer the bug report, but a point of information: `raco setup'
 does ignore ".git" and ".svn" directories when finding collections from
 a `raco link --root' directory (and I added that after getting messages
 from `raco setup' when I started using the package system).
 
From: Carl Eastlund <cce@ccs.neu.edu>
To: Eli Barzilay <eli@barzilay.org>
Cc: bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/13442: "raco link --root" interprets .git
 directory as a collection
Date: Wed, 23 Jan 2013 16:04:28 -0500

 --14dae9340dd1a2c61b04d3fb0c2f
 Content-Type: text/plain; charset=UTF-8
 
 Here's the workflow I'm trying to support:
 
 - I develop collections A0 through An, none of which happen to be named
 ".git".
 - I keep them in a git repository.  A0 to An are direct subdirectories of
 the repository root.
 - I install the collections using "raco link --root".
 - I may do the above for other collections in other repositories as well.
 
 Here's the issue I run into: when I run "raco link --root", I get
 collections A0 to An, and I get this additional collection named ".git"
 that I have no interest in.  In 5.3.1, this wastes time during "raco
 setup", although as Matthew points out, this is no longer the case.  It
 remains true, though, that if I have multiple such repositories, or if I
 have an intentional .git collection somewhere, I now have ambiguity when
 the module resolver tries to look up ".git".
 
 I don't want to disallow ".git" as a collection name.  I want to make it
 available -- I just don't want to accidentally clobber that name with the
 .git directory I have to have, but don't care about, when developing
 collections in a git repository.  I entirely support having "raco link
 --root --no-ignore" or something similar.
 
 As for code distribution versus language extension, "raco link" acts as
 both.  By analogy, with Planet, when deploying a file to the server, I
 would use "raco planet create" and clients would use "raco planet
 install".  When developing locally, I would be both developer and client,
 and I would use the single command "raco planet link" in lieu of both "...
 create" and "... install".  If commands that package code for distribution
 ignore common metadata directories, then commands that link the same code
 for local development should ignore the same directories.
 
 Carl Eastlund
 
 
 On Mon, Jan 21, 2013 at 12:55 AM, Eli Barzilay <eli@barzilay.org> wrote:
 
 > 12 hours ago, Carl Eastlund wrote:
 > > If I put racket files in my .git directories, that doesn't mean that
 > > the code I store in the repository itself should have that directory
 > > as a subcollection.
 >
 > Why not?  Rephrase more clearly but more verbosely:
 >
 > 1. I don't see anything useful that I get from being protected against
 >    using ".git" on a module path.
 >
 > 2. I do see potential uses for allowing it, and putting files in what
 >    you call metadata.
 >
 > 3. Both points become much stronger IMO when you consider other names
 >    like "CVS" or maybe ".DS_Store" and "desktop.ini" (which for all I
 >    know could become directories in the future).  To be clear, "you
 >    consider" is intentional here -- related to the possible potential
 >    in #2.
 >
 > 4. I do think that it's a valid point to ignore these names for
 >    *distribution*, but not for naming code.
 >
 > 5. Another point to consider: with all of the distribution or whatever
 >    code that ignores these directories, there is always a way to
 >    configure things to disable it.  I really don't want my language to
 >    get some new syntax for (require .git/YES-I-MEAN-THAT/foo).
 >
 > 6. And I can't help but think about the major mistake MS did when
 >    burning a near-permanent hole in the namespace of files with its
 >    "NUL" etc special names.  What you're asking for seems similar to
 >    that.
 >
 > 7. Still, the most important point is #1.  I don't see what benefits I
 >    get from that, or equivalently what harm it helps me to avoid.  If
 >    I typed `.git/bleh' then I supposedly didn't do so by mistake.
 >
 >
 > > And while I'm sure there are reasons to put Racket files in .git
 > > directories, that's completely different from wanting a collection
 > > named ".git" tied to every single linked directory that happens to
 > > be a git repository.
 >
 > I *do* refer to putting them in ".git" directories and using them as
 > a collection.
 >
 >
 > > For the same reason that "raco planet create" ignores things like
 > > .git directories, "raco link" should too.
 >
 > See #4 -- the first is a distribution bundler, the second is a
 > linguistic extension.
 >
 >
 > > And again, if you occasionally need to use them, there should be an
 > > option to override.
 >
 > Oh, so you're probably thinking about some argument to `link'.  That
 > defeats the whole point of --root, which is something that I
 > originally suggested when Matthew added the link thing -- where
 > there's a difference between linking "--root foo" and "foo/*".
 >
 > --
 >           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
 >                     http://barzilay.org/                   Maze is Life!
 >
 >
 
 --14dae9340dd1a2c61b04d3fb0c2f
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 <div dir=3D"ltr"><div><div><div><div><div><div><div>Here&#39;s the workflow=
  I&#39;m trying to support:<br><br></div>- I develop collections A0 through=
  An, none of which happen to be named &quot;.git&quot;.<br></div>- I keep t=
 hem in a git repository.=C2=A0 A0 to An are direct subdirectories of the re=
 pository root.<br>
 
 </div>- I install the collections using &quot;raco link --root&quot;.<br></=
 div>- I may do the above for other collections in other repositories as wel=
 l.<br></div><br></div>Here&#39;s the issue I run into: when I run &quot;rac=
 o link --root&quot;, I get collections A0 to An, and I get this additional =
 collection named &quot;.git&quot; that I have no interest in.=C2=A0 In 5.3.=
 1, this wastes time during &quot;raco setup&quot;, although as Matthew poin=
 ts out, this is no longer the case.=C2=A0 It remains true, though, that if =
 I have multiple such repositories, or if I have an intentional .git collect=
 ion somewhere, I now have ambiguity when the module resolver tries to look =
 up &quot;.git&quot;.<br>
 
 <br></div><div>I don&#39;t want to disallow &quot;.git&quot; as a collectio=
 n name.=C2=A0 I want to make it available -- I just don&#39;t want to accid=
 entally clobber that name with the .git directory I have to have, but don&#=
 39;t care about, when developing collections in a git repository.=C2=A0 I e=
 ntirely support having &quot;raco link --root --no-ignore&quot; or somethin=
 g similar.<br>
 
 <br></div><div>As for code distribution versus language extension, &quot;ra=
 co link&quot; acts as both.=C2=A0 By analogy, with Planet, when deploying a=
  file to the server, I would use &quot;raco planet create&quot; and clients=
  would use &quot;raco planet install&quot;.=C2=A0 When developing locally, =
 I would be both developer and client, and I would use the single command &q=
 uot;raco planet link&quot; in lieu of both &quot;... create&quot; and &quot=
 ;... install&quot;.=C2=A0 If commands that package code for distribution ig=
 nore common metadata directories, then commands that link the same code for=
  local development should ignore the same directories.<br>
 
 </div></div><div class=3D"gmail_extra"><br clear=3D"all"><div>Carl Eastlund=
 </div>
 <br><br><div class=3D"gmail_quote">On Mon, Jan 21, 2013 at 12:55 AM, Eli Ba=
 rzilay <span dir=3D"ltr">&lt;<a href=3D"mailto:eli@barzilay.org" target=3D"=
 _blank">eli@barzilay.org</a>&gt;</span> wrote:<br><blockquote class=3D"gmai=
 l_quote" style=3D"margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left=
 :1ex">
 
 <div class=3D"im">12 hours ago, Carl Eastlund wrote:<br>
 &gt; If I put racket files in my .git directories, that doesn&#39;t mean th=
 at<br>
 &gt; the code I store in the repository itself should have that directory<b=
 r>
 &gt; as a subcollection.<br>
 <br>
 </div>Why not? =C2=A0Rephrase more clearly but more verbosely:<br>
 <br>
 1. I don&#39;t see anything useful that I get from being protected against<=
 br>
 =C2=A0 =C2=A0using &quot;.git&quot; on a module path.<br>
 <br>
 2. I do see potential uses for allowing it, and putting files in what<br>
 =C2=A0 =C2=A0you call metadata.<br>
 <br>
 3. Both points become much stronger IMO when you consider other names<br>
 =C2=A0 =C2=A0like &quot;CVS&quot; or maybe &quot;.DS_Store&quot; and &quot;=
 desktop.ini&quot; (which for all I<br>
 =C2=A0 =C2=A0know could become directories in the future). =C2=A0To be clea=
 r, &quot;you<br>
 =C2=A0 =C2=A0consider&quot; is intentional here -- related to the possible =
 potential<br>
 =C2=A0 =C2=A0in #2.<br>
 <br>
 4. I do think that it&#39;s a valid point to ignore these names for<br>
 =C2=A0 =C2=A0*distribution*, but not for naming code.<br>
 <br>
 5. Another point to consider: with all of the distribution or whatever<br>
 =C2=A0 =C2=A0code that ignores these directories, there is always a way to<=
 br>
 =C2=A0 =C2=A0configure things to disable it. =C2=A0I really don&#39;t want =
 my language to<br>
 =C2=A0 =C2=A0get some new syntax for (require .git/YES-I-MEAN-THAT/foo).<br=
 >
 <br>
 6. And I can&#39;t help but think about the major mistake MS did when<br>
 =C2=A0 =C2=A0burning a near-permanent hole in the namespace of files with i=
 ts<br>
 =C2=A0 =C2=A0&quot;NUL&quot; etc special names. =C2=A0What you&#39;re askin=
 g for seems similar to<br>
 =C2=A0 =C2=A0that.<br>
 <br>
 7. Still, the most important point is #1. =C2=A0I don&#39;t see what benefi=
 ts I<br>
 =C2=A0 =C2=A0get from that, or equivalently what harm it helps me to avoid.=
  =C2=A0If<br>
 =C2=A0 =C2=A0I typed `.git/bleh&#39; then I supposedly didn&#39;t do so by =
 mistake.<br>
 <div class=3D"im"><br>
 <br>
 &gt; And while I&#39;m sure there are reasons to put Racket files in .git<b=
 r>
 &gt; directories, that&#39;s completely different from wanting a collection=
 <br>
 &gt; named &quot;.git&quot; tied to every single linked directory that happ=
 ens to<br>
 &gt; be a git repository.<br>
 <br>
 </div>I *do* refer to putting them in &quot;.git&quot; directories and usin=
 g them as<br>
 a collection.<br>
 <div class=3D"im"><br>
 <br>
 &gt; For the same reason that &quot;raco planet create&quot; ignores things=
  like<br>
 &gt; .git directories, &quot;raco link&quot; should too.<br>
 <br>
 </div>See #4 -- the first is a distribution bundler, the second is a<br>
 linguistic extension.<br>
 <div class=3D"im"><br>
 <br>
 &gt; And again, if you occasionally need to use them, there should be an<br=
 >
 &gt; option to override.<br>
 <br>
 </div>Oh, so you&#39;re probably thinking about some argument to `link&#39;=
 . =C2=A0That<br>
 defeats the whole point of --root, which is something that I<br>
 originally suggested when Matthew added the link thing -- where<br>
 there&#39;s a difference between linking &quot;--root foo&quot; and &quot;f=
 oo/*&quot;.<br>
 <div class=3D"HOEnZb"><div class=3D"h5"><br>
 --<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 ((lambda (x) (x x)) (lambda (x) (x x))) =
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Eli Barzilay:<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 <a hr=
 ef=3D"http://barzilay.org/" target=3D"_blank">http://barzilay.org/</a> =C2=
 =A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 Maze is Life!<b=
 r>
 <br>
 </div></div></blockquote></div><br></div>
 
 --14dae9340dd1a2c61b04d3fb0c2f--
From: Eli Barzilay <eli@barzilay.org>
To: Carl Eastlund <cce@ccs.neu.edu>
Cc: bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/13442: "raco link --root" interprets .git
 directory as a collection
Date: Sun, 27 Jan 2013 04:27:44 -0500

 On Wednesday, Carl Eastlund wrote:
 > 
 > Here's the issue I run into: when I run "raco link --root", I get
 > collections A0 to An, and I get this additional collection named
 > ".git" that I have no interest in.
 
 I think that you're missing here something that says that the names
 can change dynamically, otherwise you can just link them all instead
 of using --root.
 
 > In 5.3.1, this wastes time during "raco setup", although as Matthew
 > points out, this is no longer the case.  It remains true, though,
 > that if I have multiple such repositories, or if I have an
 > intentional .git collection somewhere, I now have ambiguity when the
 > module resolver tries to look up ".git".
 
 There's no ambiguity since they'd be searched in order, but if there
 was, then you wouldn't care about it anyway...  Re the time wastage, I
 don't see how that's different than all the other kinds of meta files
 that you can end up with, and keeping track of them all is
 impractical.  (IMO.)
 
 In any case, I think that this is not a bug report but a feature
 request for a new kind of "use this directory as a collection root,
 except for things called X, Y, or Z".
 
 (I don't think that such a feature is not too useful though, and I
 still don't see the harm in not using it.  Even if I had some issue
 with a longer compilation time, I'd avoid it using a
 `compile-omit-paths' or by placing the $GIT_DIR elsewhere, or by doing
 the thing that you're expected to do with git and not use it for
 deployment.)
 
 
 > I don't want to disallow ".git" as a collection name.  I want to
 > make it available -- I just don't want to accidentally clobber that
 > name with the .git directory I have to have, but don't care about,
 > when developing collections in a git repository.  I entirely support
 > having "raco link --root --no-ignore" or something similar.
 
 Ugh...  I much prefer uniform behavior with a flag to do something
 special rather than something special being the default with a "don't
 do the special thing" to cancel it.  Most well behaved unix tools
 usually do something similar: you need to specify things to skip
 explicitly.
 
 
 > As for code distribution versus language extension, "raco link" acts
 > as both.
 
 (I'm not following that.  How is link doing distribution?)
 
 
 > By analogy, with Planet, when deploying a file to the server, I
 > would use "raco planet create" and clients would use "raco planet
 > install".
 
 The `planet create' is exactly a distribution tool, like tar or zip.
 
 
 > When developing locally, I would be both developer and client, and I
 > would use the single command "raco planet link" in lieu of both
 > "... create" and "...  install".
 
 (Yes, but that's in preparation for working with something that
 resembles how the distributed code would look like.  And BTW, I think
 that having such a separate preparation step greatly complicates the
 whole thing, and it's better to separate things as they are now.)
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!
 
From: Carl Eastlund <cce@ccs.neu.edu>
To: Eli Barzilay <eli@barzilay.org>
Cc: bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/13442: "raco link --root" interprets .git
 directory as a collection
Date: Sun, 27 Jan 2013 13:00:08 -0500

 --f46d04447ee9c3021404d448f01d
 Content-Type: text/plain; charset=UTF-8
 
 On Sun, Jan 27, 2013 at 4:27 AM, Eli Barzilay <eli@barzilay.org> wrote:
 
 > On Wednesday, Carl Eastlund wrote:
 > >
 > > Here's the issue I run into: when I run "raco link --root", I get
 > > collections A0 to An, and I get this additional collection named
 > > ".git" that I have no interest in.
 >
 > I think that you're missing here something that says that the names
 > can change dynamically, otherwise you can just link them all instead
 > of using --root.
 >
 
 Okay, but the names may well change dynamically in my case.
 
 >
 > > In 5.3.1, this wastes time during "raco setup", although as Matthew
 > > points out, this is no longer the case.  It remains true, though,
 > > that if I have multiple such repositories, or if I have an
 > > intentional .git collection somewhere, I now have ambiguity when the
 > > module resolver tries to look up ".git".
 >
 > There's no ambiguity since they'd be searched in order, but if there
 > was, then you wouldn't care about it anyway...  Re the time wastage, I
 > don't see how that's different than all the other kinds of meta files
 > that you can end up with, and keeping track of them all is
 > impractical.  (IMO.)
 >
 
 And yet "raco planet create" and "raco setup" do appear to keep track of
 them.
 
 
 > In any case, I think that this is not a bug report but a feature
 > request for a new kind of "use this directory as a collection root,
 > except for things called X, Y, or Z".
 >
 
 This is absolutely a bug report.  It is a bug for our "link for local
 development" tools to behave differently from our "package up for
 deployment" tools.  I have one repository for this source code, and I use
 it for both local development and for packaging things up.
 
 
 > (I don't think that such a feature is not too useful though, and I
 > still don't see the harm in not using it.  Even if I had some issue
 > with a longer compilation time, I'd avoid it using a
 > `compile-omit-paths' or by placing the $GIT_DIR elsewhere, or by doing
 > the thing that you're expected to do with git and not use it for
 > deployment.)
 >
 
 The harm is when packaged-and-deployed code behaves differently from how
 the code was developed locally.  The commands "raco planet link", "raco
 planet create", "raco pkg install", "raco pkg create", "raco link", and
 "raco setup" should all do the same thing with metadata files.  Currently
 at least two of them ignore metadata files for some purpose or another.
 
 
 > > I don't want to disallow ".git" as a collection name.  I want to
 > > make it available -- I just don't want to accidentally clobber that
 > > name with the .git directory I have to have, but don't care about,
 > > when developing collections in a git repository.  I entirely support
 > > having "raco link --root --no-ignore" or something similar.
 >
 > Ugh...  I much prefer uniform behavior with a flag to do something
 > special rather than something special being the default with a "don't
 > do the special thing" to cancel it.  Most well behaved unix tools
 > usually do something similar: you need to specify things to skip
 > explicitly.
 >
 
 Lots of tools have things they ignore by default.  The most common example
 is files whose names start with ".".  The ".git" directory is not a part of
 the code I am working on.
 
 
 > > As for code distribution versus language extension, "raco link" acts
 > > as both.
 >
 > (I'm not following that.  How is link doing distribution?)
 >
 
 It is mimicking the combination of "create" + "install" for local
 development.  That's packaging + distribution.
 
 
 > > By analogy, with Planet, when deploying a file to the server, I
 > > would use "raco planet create" and clients would use "raco planet
 > > install".
 >
 > The `planet create' is exactly a distribution tool, like tar or zip.
 >
 
 Yes.  And my local link is supposed to be doing what create does, or else I
 cannot deploy my code with any confidence of how the packaged version will
 behave.
 
 
 > > When developing locally, I would be both developer and client, and I
 > > would use the single command "raco planet link" in lieu of both
 > > "... create" and "...  install".
 >
 > (Yes, but that's in preparation for working with something that
 > resembles how the distributed code would look like.  And BTW, I think
 > that having such a separate preparation step greatly complicates the
 > whole thing, and it's better to separate things as they are now.)
 >
 
 Separate preparation step?  Huh?  The "link" step is the only way to work
 with my code.  It's not separate from anything.  There's no other way to do
 it.  I use "raco planet link" to work with planet package code, "raco link"
 to work with collection code, and "raco pkg link" to work with code in the
 new package system.  That's what the commands are for.  And they all need
 to behave the same way as the packaging + distribution commands.
 
 --f46d04447ee9c3021404d448f01d
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 <div dir=3D"ltr"><br><div class=3D"gmail_extra">On Sun, Jan 27, 2013 at 4:2=
 7 AM, Eli Barzilay <span dir=3D"ltr">&lt;<a href=3D"mailto:eli@barzilay.org=
 " target=3D"_blank">eli@barzilay.org</a>&gt;</span> wrote:<br><div class=3D=
 "gmail_quote">
 
 <blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1p=
 x #ccc solid;padding-left:1ex"><div class=3D"im">On Wednesday, Carl Eastlun=
 d wrote:<br>
 &gt;<br>
 &gt; Here&#39;s the issue I run into: when I run &quot;raco link --root&quo=
 t;, I get<br>
 &gt; collections A0 to An, and I get this additional collection named<br>
 &gt; &quot;.git&quot; that I have no interest in.<br>
 <br>
 </div>I think that you&#39;re missing here something that says that the nam=
 es<br>
 can change dynamically, otherwise you can just link them all instead<br>
 of using --root.<br></blockquote><div><br></div><div>Okay, but the names ma=
 y well change dynamically in my case.<br></div>=C2=A0<blockquote class=3D"g=
 mail_quote" style=3D"margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-l=
 eft:1ex">
 
 
 <div class=3D"im">&gt; In 5.3.1, this wastes time during &quot;raco setup&q=
 uot;, although as Matthew<br>
 &gt; points out, this is no longer the case.=C2=A0 It remains true, though,=
 <br>
 &gt; that if I have multiple such repositories, or if I have an<br>
 &gt; intentional .git collection somewhere, I now have ambiguity when the<b=
 r>
 &gt; module resolver tries to look up &quot;.git&quot;.<br>
 <br>
 </div>There&#39;s no ambiguity since they&#39;d be searched in order, but i=
 f there<br>
 was, then you wouldn&#39;t care about it anyway... =C2=A0Re the time wastag=
 e, I<br>
 don&#39;t see how that&#39;s different than all the other kinds of meta fil=
 es<br>
 that you can end up with, and keeping track of them all is<br>
 impractical. =C2=A0(IMO.)<br></blockquote><div><br></div><div>And yet &quot=
 ;raco planet create&quot; and &quot;raco setup&quot; do appear to keep trac=
 k of them.<br></div><div>=C2=A0<br></div><blockquote class=3D"gmail_quote" =
 style=3D"margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">
 
 
 In any case, I think that this is not a bug report but a feature<br>
 request for a new kind of &quot;use this directory as a collection root,<br=
 >
 except for things called X, Y, or Z&quot;.<br></blockquote><div><br></div><=
 div>This is absolutely a bug report.=C2=A0 It is a bug for our &quot;link f=
 or local development&quot; tools to behave differently from our &quot;packa=
 ge up for deployment&quot; tools.=C2=A0 I have one repository for this sour=
 ce code, and I use it for both local development and for packaging things u=
 p.<br>
 
 </div><div>=C2=A0<br></div><blockquote class=3D"gmail_quote" style=3D"margi=
 n:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">
 (I don&#39;t think that such a feature is not too useful though, and I<br>
 still don&#39;t see the harm in not using it. =C2=A0Even if I had some issu=
 e<br>
 with a longer compilation time, I&#39;d avoid it using a<br>
 `compile-omit-paths&#39; or by placing the $GIT_DIR elsewhere, or by doing<=
 br>
 the thing that you&#39;re expected to do with git and not use it for<br>
 deployment.)<br></blockquote><div><br></div><div>The harm is when packaged-=
 and-deployed code behaves differently from how the code was developed local=
 ly.=C2=A0 The commands &quot;raco planet link&quot;, &quot;raco planet crea=
 te&quot;, &quot;raco pkg install&quot;, &quot;raco pkg create&quot;, &quot;=
 raco link&quot;, and &quot;raco setup&quot; should all do the same thing wi=
 th metadata files.=C2=A0 Currently at least two of them ignore metadata fil=
 es for some purpose or another.<br>
 
 </div><div>=C2=A0</div><blockquote class=3D"gmail_quote" style=3D"margin:0 =
 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">
 <div class=3D"im">&gt; I don&#39;t want to disallow &quot;.git&quot; as a c=
 ollection name.=C2=A0 I want to<br>
 &gt; make it available -- I just don&#39;t want to accidentally clobber tha=
 t<br>
 &gt; name with the .git directory I have to have, but don&#39;t care about,=
 <br>
 &gt; when developing collections in a git repository.=C2=A0 I entirely supp=
 ort<br>
 &gt; having &quot;raco link --root --no-ignore&quot; or something similar.<=
 br>
 <br>
 </div>Ugh... =C2=A0I much prefer uniform behavior with a flag to do somethi=
 ng<br>
 special rather than something special being the default with a &quot;don&#3=
 9;t<br>
 do the special thing&quot; to cancel it. =C2=A0Most well behaved unix tools=
 <br>
 usually do something similar: you need to specify things to skip<br>
 explicitly.<br></blockquote><div><br></div><div>Lots of tools have things t=
 hey ignore by default.=C2=A0 The most common example is files whose names s=
 tart with &quot;.&quot;.=C2=A0 The &quot;.git&quot; directory is not a part=
  of the code I am working on.<br>
 
 </div><div>=C2=A0</div><blockquote class=3D"gmail_quote" style=3D"margin:0 =
 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">
 <div class=3D"im">&gt; As for code distribution versus language extension, =
 &quot;raco link&quot; acts<br>
 &gt; as both.<br>
 <br>
 </div>(I&#39;m not following that. =C2=A0How is link doing distribution?)<b=
 r></blockquote><div><br></div><div>It is mimicking the combination of &quot=
 ;create&quot; + &quot;install&quot; for local development.=C2=A0 That&#39;s=
  packaging + distribution.<br>
 
 </div><div>=C2=A0</div><blockquote class=3D"gmail_quote" style=3D"margin:0 =
 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">
 <div class=3D"im">&gt; By analogy, with Planet, when deploying a file to th=
 e server, I<br>
 &gt; would use &quot;raco planet create&quot; and clients would use &quot;r=
 aco planet<br>
 &gt; install&quot;.<br>
 <br>
 </div>The `planet create&#39; is exactly a distribution tool, like tar or z=
 ip.<br></blockquote><div><br></div><div>Yes.=C2=A0 And my local link is sup=
 posed to be doing what create does, or else I cannot deploy my code with an=
 y confidence of how the packaged version will behave.<br>
 
 </div><div>=C2=A0</div><blockquote class=3D"gmail_quote" style=3D"margin:0 =
 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">&gt; When developing =
 locally, I would be both developer and client, and I<br><div class=3D"im">
 &gt; would use the single command &quot;raco planet link&quot; in lieu of b=
 oth<br>
 &gt; &quot;... create&quot; and &quot;... =C2=A0install&quot;.<br>
 <br>
 </div>(Yes, but that&#39;s in preparation for working with something that<b=
 r>
 resembles how the distributed code would look like. =C2=A0And BTW, I think<=
 br>
 that having such a separate preparation step greatly complicates the<br>
 whole thing, and it&#39;s better to separate things as they are now.)<br></=
 blockquote><div><br></div><div>Separate preparation step?=C2=A0 Huh?=C2=A0 =
 The &quot;link&quot; step is the only way to work with my code.=C2=A0 It&#3=
 9;s not separate from anything.=C2=A0 There&#39;s no other way to do it.=C2=
 =A0 I use &quot;raco planet link&quot; to work with planet package code, &q=
 uot;raco link&quot; to work with collection code, and &quot;raco pkg link&q=
 uot; to work with code in the new package system.=C2=A0 That&#39;s what the=
  commands are for.=C2=A0 And they all need to behave the same way as the pa=
 ckaging + distribution commands.<br>
 
 </div><br></div><br></div></div>
 
 --f46d04447ee9c3021404d448f01d--
From: Eli Barzilay <eli@barzilay.org>
To: Carl Eastlund <cce@ccs.neu.edu>
Cc: bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/13442: "raco link --root" interprets .git
 directory as a collection
Date: Sun, 27 Jan 2013 13:40:36 -0500

 20 minutes ago, Carl Eastlund wrote:
 > On Sun, Jan 27, 2013 at 4:27 AM, Eli Barzilay <eli@barzilay.org> wrote:
 > 
 >     On Wednesday, Carl Eastlund wrote:
 >     >
 >     > Here's the issue I run into: when I run "raco link --root", I get
 >     > collections A0 to An, and I get this additional collection named
 >     > ".git" that I have no interest in.
 >    
 >     I think that you're missing here something that says that the names
 >     can change dynamically, otherwise you can just link them all instead
 >     of using --root.
 > 
 > Okay, but the names may well change dynamically in my case.
 
 Right -- I'm saying that you should have specified that.  If the names
 *don't* change, then you should just avoid --root since (as I said
 earlier) adding "foo" as a root not intended to replace adding each of
 "foo/*"s.
 
 
 >     In any case, I think that this is not a bug report but a feature
 >     request for a new kind of "use this directory as a collection
 >     root, except for things called X, Y, or Z".
 > 
 > This is absolutely a bug report.
 
 Then a -1.
 
 
 >     (I don't think that such a feature is not too useful though, and
 >     I still don't see the harm in not using it.  Even if I had some
 >     issue with a longer compilation time, I'd avoid it using a
 >     `compile-omit-paths' or by placing the $GIT_DIR elsewhere, or by
 >     doing the thing that you're expected to do with git and not use
 >     it for deployment.)
 > 
 > The harm is when packaged-and-deployed code behaves differently from
 > how the code was developed locally.
 
 Can you please be more concrete about this harm?  So far the only
 guess I have is:
 
   * I write code that uses (require .git/whatever)
   * I distribute it
   * The distributed code is broken since .git is not included
 
 Since you clearly say that you want the first thing to fail, then you
 don't want to use it and I don't see the harm unless you're worried
 that people will use .git/whatever accidentally (and IMO that's an
 extemely unlikely thing to warrant semantic changes to the language).
 
 
 >     > I don't want to disallow ".git" as a collection name.  I want
 >     > to make it available -- I just don't want to accidentally
 >     > clobber that name with the .git directory I have to have, but
 >     > don't care about, when developing collections in a git
 >     > repository.  I entirely support having "raco link --root
 >     > --no-ignore" or something similar.
 >    
 >     Ugh...  I much prefer uniform behavior with a flag to do
 >     something special rather than something special being the
 >     default with a "don't do the special thing" to cancel it.  Most
 >     well behaved unix tools usually do something similar: you need
 >     to specify things to skip explicitly.
 > 
 > Lots of tools have things they ignore by default.  The most common
 > example is files whose names start with ".".  The ".git" directory
 > is not a part of the code I am working on.
 
 To be clear, I wouldn't mind as much ignoring all ".*" files since
 that's a generic convention for things that are hidden.  Ignoring just
 ".git" is a *very* different thing, worse in many many ways.
 
 
 >     > As for code distribution versus language extension, "raco
 >     > link" acts as both.
 >    
 >     (I'm not following that.  How is link doing distribution?)
 > 
 > It is mimicking the combination of "create" + "install" for local
 > development.  That's packaging + distribution.
 
 Then you're talking about something that is not *link* -- it's "make
 my environment similar to how my users would see it".  (And the
 difference should be painfully clear.)  At minimum, `link' is not a
 command that is related to any packaging system (planet, planet2, .plt
 files, or whatever), so you should want something at *that* level.
 Ie, you want a `raco pkg link' instead of just a plain link.
 
 I think that this is a major point here, since it will continue to be
 problematic as more things get done by the package system that you'd
 want to see reflected in your local link.  It makes sense for such
 future extensions and other differences (eg, you'd want a linked root
 to be a registered package so that you can't also install it via the
 pkg command); it makes sense for people who are not using the package
 system (eg, I want to configure my environment manually); and it makes
 sense in terms of code dependency (the `link' command is something
 that is at the core resolver level, and that code shouldn't depend on
 the pkg code).
 
 So this is IMO still a feature request -- you want a `pkg link', not
 just `link'.  (Possibly using some other name to avoid confusion, of
 course.)
 
 
 >     > By analogy, with Planet, when deploying a file to the server,
 >     > I would use "raco planet create" and clients would use "raco
 >     > planet install".
 >    
 >     The `planet create' is exactly a distribution tool, like tar or
 >     zip.
 > 
 > Yes.  And my local link is supposed to be doing what create does, or
 > else I cannot deploy my code with any confidence of how the packaged
 > version will behave.
 
 (Yeah, that confirms the above.)
 
 
 > Separate preparation step?  Huh?  The "link" step is the only way to
 > work with my code.  It's not separate from anything.  There's no
 > other way to do it.  I use "raco planet link" to work with planet
 > package code, "raco link" to work with collection code, and "raco
 > pkg link" to work with code in the new package system.  That's what
 > the commands are for.  And they all need to behave the same way as
 > the packaging + distribution commands.
 
 Um, you're even talking about `pkg link' where it makes sense to
 ignore whatever the distribution ignores, but just `link' shouldn't be
 required follow the same rules in the same way that planet isn't.
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!
 
From: Carl Eastlund <cce@ccs.neu.edu>
To: Eli Barzilay <eli@barzilay.org>
Cc: bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/13442: "raco link --root" interprets .git
 directory as a collection
Date: Mon, 28 Jan 2013 12:12:12 -0500

 --e89a8fb1edaa26cf4504d45c6332
 Content-Type: text/plain; charset=UTF-8
 
 Well, it sounds like I should just be using "raco pkg install --link", so
 I'll switch to that and close the bug.  I still don't understand when
 someone would be likely to have source code that (a) wasn't for
 distribution and (b) wasn't likely to be kept in source control, such that
 "raco link" would be useful, but fortunately I don't have to know that.  If
 others need a command that works that way, I'll leave that one alone and
 use the pkg system I was clearly using "in my head" anyway.
 
 Carl Eastlund
 
 
 On Sun, Jan 27, 2013 at 1:40 PM, Eli Barzilay <eli@barzilay.org> wrote:
 
 > 20 minutes ago, Carl Eastlund wrote:
 > > On Sun, Jan 27, 2013 at 4:27 AM, Eli Barzilay <eli@barzilay.org> wrote:
 > >
 > >     On Wednesday, Carl Eastlund wrote:
 > >     >
 > >     > Here's the issue I run into: when I run "raco link --root", I get
 > >     > collections A0 to An, and I get this additional collection named
 > >     > ".git" that I have no interest in.
 > >
 > >     I think that you're missing here something that says that the names
 > >     can change dynamically, otherwise you can just link them all instead
 > >     of using --root.
 > >
 > > Okay, but the names may well change dynamically in my case.
 >
 > Right -- I'm saying that you should have specified that.  If the names
 > *don't* change, then you should just avoid --root since (as I said
 > earlier) adding "foo" as a root not intended to replace adding each of
 > "foo/*"s.
 >
 >
 > >     In any case, I think that this is not a bug report but a feature
 > >     request for a new kind of "use this directory as a collection
 > >     root, except for things called X, Y, or Z".
 > >
 > > This is absolutely a bug report.
 >
 > Then a -1.
 >
 >
 > >     (I don't think that such a feature is not too useful though, and
 > >     I still don't see the harm in not using it.  Even if I had some
 > >     issue with a longer compilation time, I'd avoid it using a
 > >     `compile-omit-paths' or by placing the $GIT_DIR elsewhere, or by
 > >     doing the thing that you're expected to do with git and not use
 > >     it for deployment.)
 > >
 > > The harm is when packaged-and-deployed code behaves differently from
 > > how the code was developed locally.
 >
 > Can you please be more concrete about this harm?  So far the only
 > guess I have is:
 >
 >   * I write code that uses (require .git/whatever)
 >   * I distribute it
 >   * The distributed code is broken since .git is not included
 >
 > Since you clearly say that you want the first thing to fail, then you
 > don't want to use it and I don't see the harm unless you're worried
 > that people will use .git/whatever accidentally (and IMO that's an
 > extemely unlikely thing to warrant semantic changes to the language).
 >
 >
 > >     > I don't want to disallow ".git" as a collection name.  I want
 > >     > to make it available -- I just don't want to accidentally
 > >     > clobber that name with the .git directory I have to have, but
 > >     > don't care about, when developing collections in a git
 > >     > repository.  I entirely support having "raco link --root
 > >     > --no-ignore" or something similar.
 > >
 > >     Ugh...  I much prefer uniform behavior with a flag to do
 > >     something special rather than something special being the
 > >     default with a "don't do the special thing" to cancel it.  Most
 > >     well behaved unix tools usually do something similar: you need
 > >     to specify things to skip explicitly.
 > >
 > > Lots of tools have things they ignore by default.  The most common
 > > example is files whose names start with ".".  The ".git" directory
 > > is not a part of the code I am working on.
 >
 > To be clear, I wouldn't mind as much ignoring all ".*" files since
 > that's a generic convention for things that are hidden.  Ignoring just
 > ".git" is a *very* different thing, worse in many many ways.
 >
 >
 > >     > As for code distribution versus language extension, "raco
 > >     > link" acts as both.
 > >
 > >     (I'm not following that.  How is link doing distribution?)
 > >
 > > It is mimicking the combination of "create" + "install" for local
 > > development.  That's packaging + distribution.
 >
 > Then you're talking about something that is not *link* -- it's "make
 > my environment similar to how my users would see it".  (And the
 > difference should be painfully clear.)  At minimum, `link' is not a
 > command that is related to any packaging system (planet, planet2, .plt
 > files, or whatever), so you should want something at *that* level.
 > Ie, you want a `raco pkg link' instead of just a plain link.
 >
 > I think that this is a major point here, since it will continue to be
 > problematic as more things get done by the package system that you'd
 > want to see reflected in your local link.  It makes sense for such
 > future extensions and other differences (eg, you'd want a linked root
 > to be a registered package so that you can't also install it via the
 > pkg command); it makes sense for people who are not using the package
 > system (eg, I want to configure my environment manually); and it makes
 > sense in terms of code dependency (the `link' command is something
 > that is at the core resolver level, and that code shouldn't depend on
 > the pkg code).
 >
 > So this is IMO still a feature request -- you want a `pkg link', not
 > just `link'.  (Possibly using some other name to avoid confusion, of
 > course.)
 >
 >
 > >     > By analogy, with Planet, when deploying a file to the server,
 > >     > I would use "raco planet create" and clients would use "raco
 > >     > planet install".
 > >
 > >     The `planet create' is exactly a distribution tool, like tar or
 > >     zip.
 > >
 > > Yes.  And my local link is supposed to be doing what create does, or
 > > else I cannot deploy my code with any confidence of how the packaged
 > > version will behave.
 >
 > (Yeah, that confirms the above.)
 >
 >
 > > Separate preparation step?  Huh?  The "link" step is the only way to
 > > work with my code.  It's not separate from anything.  There's no
 > > other way to do it.  I use "raco planet link" to work with planet
 > > package code, "raco link" to work with collection code, and "raco
 > > pkg link" to work with code in the new package system.  That's what
 > > the commands are for.  And they all need to behave the same way as
 > > the packaging + distribution commands.
 >
 > Um, you're even talking about `pkg link' where it makes sense to
 > ignore whatever the distribution ignores, but just `link' shouldn't be
 > required follow the same rules in the same way that planet isn't.
 >
 > --
 >           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
 >                     http://barzilay.org/                   Maze is Life!
 >
 >
 
 --e89a8fb1edaa26cf4504d45c6332
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 <div dir=3D"ltr"><div>Well, it sounds like I should just be using &quot;rac=
 o pkg install --link&quot;, so I&#39;ll switch to that and close the bug.=
 =C2=A0 I still don&#39;t understand when someone would be likely to have so=
 urce code that (a) wasn&#39;t for distribution and (b) wasn&#39;t likely to=
  be kept in source control, such that &quot;raco link&quot; would be useful=
 , but fortunately I don&#39;t have to know that.=C2=A0 If others need a com=
 mand that works that way, I&#39;ll leave that one alone and use the pkg sys=
 tem I was clearly using &quot;in my head&quot; anyway.<br>
 
 </div></div><div class=3D"gmail_extra"><br clear=3D"all"><div>Carl Eastlund=
 </div>
 <br><br><div class=3D"gmail_quote">On Sun, Jan 27, 2013 at 1:40 PM, Eli Bar=
 zilay <span dir=3D"ltr">&lt;<a href=3D"mailto:eli@barzilay.org" target=3D"_=
 blank">eli@barzilay.org</a>&gt;</span> wrote:<br><blockquote class=3D"gmail=
 _quote" style=3D"margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:=
 1ex">
 
 <div class=3D"im">20 minutes ago, Carl Eastlund wrote:<br>
 &gt; On Sun, Jan 27, 2013 at 4:27 AM, Eli Barzilay &lt;<a href=3D"mailto:el=
 i@barzilay.org">eli@barzilay.org</a>&gt; wrote:<br>
 &gt;<br>
 &gt; =C2=A0 =C2=A0 On Wednesday, Carl Eastlund wrote:<br>
 &gt; =C2=A0 =C2=A0 &gt;<br>
 &gt; =C2=A0 =C2=A0 &gt; Here&#39;s the issue I run into: when I run &quot;r=
 aco link --root&quot;, I get<br>
 &gt; =C2=A0 =C2=A0 &gt; collections A0 to An, and I get this additional col=
 lection named<br>
 &gt; =C2=A0 =C2=A0 &gt; &quot;.git&quot; that I have no interest in.<br>
 &gt;<br>
 &gt; =C2=A0 =C2=A0 I think that you&#39;re missing here something that says=
  that the names<br>
 &gt; =C2=A0 =C2=A0 can change dynamically, otherwise you can just link them=
  all instead<br>
 &gt; =C2=A0 =C2=A0 of using --root.<br>
 &gt;<br>
 &gt; Okay, but the names may well change dynamically in my case.<br>
 <br>
 </div>Right -- I&#39;m saying that you should have specified that. =C2=A0If=
  the names<br>
 *don&#39;t* change, then you should just avoid --root since (as I said<br>
 earlier) adding &quot;foo&quot; as a root not intended to replace adding ea=
 ch of<br>
 &quot;foo/*&quot;s.<br>
 <div class=3D"im"><br>
 <br>
 &gt; =C2=A0 =C2=A0 In any case, I think that this is not a bug report but a=
  feature<br>
 &gt; =C2=A0 =C2=A0 request for a new kind of &quot;use this directory as a =
 collection<br>
 &gt; =C2=A0 =C2=A0 root, except for things called X, Y, or Z&quot;.<br>
 &gt;<br>
 &gt; This is absolutely a bug report.<br>
 <br>
 </div>Then a -1.<br>
 <div class=3D"im"><br>
 <br>
 &gt; =C2=A0 =C2=A0 (I don&#39;t think that such a feature is not too useful=
  though, and<br>
 &gt; =C2=A0 =C2=A0 I still don&#39;t see the harm in not using it. =C2=A0Ev=
 en if I had some<br>
 &gt; =C2=A0 =C2=A0 issue with a longer compilation time, I&#39;d avoid it u=
 sing a<br>
 &gt; =C2=A0 =C2=A0 `compile-omit-paths&#39; or by placing the $GIT_DIR else=
 where, or by<br>
 &gt; =C2=A0 =C2=A0 doing the thing that you&#39;re expected to do with git =
 and not use<br>
 &gt; =C2=A0 =C2=A0 it for deployment.)<br>
 &gt;<br>
 &gt; The harm is when packaged-and-deployed code behaves differently from<b=
 r>
 &gt; how the code was developed locally.<br>
 <br>
 </div>Can you please be more concrete about this harm? =C2=A0So far the onl=
 y<br>
 guess I have is:<br>
 <br>
 =C2=A0 * I write code that uses (require .git/whatever)<br>
 =C2=A0 * I distribute it<br>
 =C2=A0 * The distributed code is broken since .git is not included<br>
 <br>
 Since you clearly say that you want the first thing to fail, then you<br>
 don&#39;t want to use it and I don&#39;t see the harm unless you&#39;re wor=
 ried<br>
 that people will use .git/whatever accidentally (and IMO that&#39;s an<br>
 extemely unlikely thing to warrant semantic changes to the language).<br>
 <div class=3D"im"><br>
 <br>
 &gt; =C2=A0 =C2=A0 &gt; I don&#39;t want to disallow &quot;.git&quot; as a =
 collection name.=C2=A0 I want<br>
 &gt; =C2=A0 =C2=A0 &gt; to make it available -- I just don&#39;t want to ac=
 cidentally<br>
 &gt; =C2=A0 =C2=A0 &gt; clobber that name with the .git directory I have to=
  have, but<br>
 &gt; =C2=A0 =C2=A0 &gt; don&#39;t care about, when developing collections i=
 n a git<br>
 &gt; =C2=A0 =C2=A0 &gt; repository.=C2=A0 I entirely support having &quot;r=
 aco link --root<br>
 &gt; =C2=A0 =C2=A0 &gt; --no-ignore&quot; or something similar.<br>
 &gt;<br>
 &gt; =C2=A0 =C2=A0 Ugh... =C2=A0I much prefer uniform behavior with a flag =
 to do<br>
 &gt; =C2=A0 =C2=A0 something special rather than something special being th=
 e<br>
 &gt; =C2=A0 =C2=A0 default with a &quot;don&#39;t do the special thing&quot=
 ; to cancel it. =C2=A0Most<br>
 &gt; =C2=A0 =C2=A0 well behaved unix tools usually do something similar: yo=
 u need<br>
 &gt; =C2=A0 =C2=A0 to specify things to skip explicitly.<br>
 &gt;<br>
 &gt; Lots of tools have things they ignore by default.=C2=A0 The most commo=
 n<br>
 &gt; example is files whose names start with &quot;.&quot;.=C2=A0 The &quot=
 ;.git&quot; directory<br>
 &gt; is not a part of the code I am working on.<br>
 <br>
 </div>To be clear, I wouldn&#39;t mind as much ignoring all &quot;.*&quot; =
 files since<br>
 that&#39;s a generic convention for things that are hidden. =C2=A0Ignoring =
 just<br>
 &quot;.git&quot; is a *very* different thing, worse in many many ways.<br>
 <div class=3D"im"><br>
 <br>
 &gt; =C2=A0 =C2=A0 &gt; As for code distribution versus language extension,=
  &quot;raco<br>
 &gt; =C2=A0 =C2=A0 &gt; link&quot; acts as both.<br>
 &gt;<br>
 &gt; =C2=A0 =C2=A0 (I&#39;m not following that. =C2=A0How is link doing dis=
 tribution?)<br>
 &gt;<br>
 &gt; It is mimicking the combination of &quot;create&quot; + &quot;install&=
 quot; for local<br>
 &gt; development.=C2=A0 That&#39;s packaging + distribution.<br>
 <br>
 </div>Then you&#39;re talking about something that is not *link* -- it&#39;=
 s &quot;make<br>
 my environment similar to how my users would see it&quot;. =C2=A0(And the<b=
 r>
 difference should be painfully clear.) =C2=A0At minimum, `link&#39; is not =
 a<br>
 command that is related to any packaging system (planet, planet2, .plt<br>
 files, or whatever), so you should want something at *that* level.<br>
 Ie, you want a `raco pkg link&#39; instead of just a plain link.<br>
 <br>
 I think that this is a major point here, since it will continue to be<br>
 problematic as more things get done by the package system that you&#39;d<br=
 >
 want to see reflected in your local link. =C2=A0It makes sense for such<br>
 future extensions and other differences (eg, you&#39;d want a linked root<b=
 r>
 to be a registered package so that you can&#39;t also install it via the<br=
 >
 pkg command); it makes sense for people who are not using the package<br>
 system (eg, I want to configure my environment manually); and it makes<br>
 sense in terms of code dependency (the `link&#39; command is something<br>
 that is at the core resolver level, and that code shouldn&#39;t depend on<b=
 r>
 the pkg code).<br>
 <br>
 So this is IMO still a feature request -- you want a `pkg link&#39;, not<br=
 >
 just `link&#39;. =C2=A0(Possibly using some other name to avoid confusion, =
 of<br>
 course.)<br>
 <div class=3D"im"><br>
 <br>
 &gt; =C2=A0 =C2=A0 &gt; By analogy, with Planet, when deploying a file to t=
 he server,<br>
 &gt; =C2=A0 =C2=A0 &gt; I would use &quot;raco planet create&quot; and clie=
 nts would use &quot;raco<br>
 &gt; =C2=A0 =C2=A0 &gt; planet install&quot;.<br>
 &gt;<br>
 &gt; =C2=A0 =C2=A0 The `planet create&#39; is exactly a distribution tool, =
 like tar or<br>
 &gt; =C2=A0 =C2=A0 zip.<br>
 &gt;<br>
 &gt; Yes.=C2=A0 And my local link is supposed to be doing what create does,=
  or<br>
 &gt; else I cannot deploy my code with any confidence of how the packaged<b=
 r>
 &gt; version will behave.<br>
 <br>
 </div>(Yeah, that confirms the above.)<br>
 <div class=3D"im"><br>
 <br>
 &gt; Separate preparation step?=C2=A0 Huh?=C2=A0 The &quot;link&quot; step =
 is the only way to<br>
 &gt; work with my code.=C2=A0 It&#39;s not separate from anything.=C2=A0 Th=
 ere&#39;s no<br>
 &gt; other way to do it.=C2=A0 I use &quot;raco planet link&quot; to work w=
 ith planet<br>
 &gt; package code, &quot;raco link&quot; to work with collection code, and =
 &quot;raco<br>
 &gt; pkg link&quot; to work with code in the new package system.=C2=A0 That=
 &#39;s what<br>
 &gt; the commands are for.=C2=A0 And they all need to behave the same way a=
 s<br>
 &gt; the packaging + distribution commands.<br>
 <br>
 </div>Um, you&#39;re even talking about `pkg link&#39; where it makes sense=
  to<br>
 ignore whatever the distribution ignores, but just `link&#39; shouldn&#39;t=
  be<br>
 required follow the same rules in the same way that planet isn&#39;t.<br>
 <div class=3D"HOEnZb"><div class=3D"h5"><br>
 --<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 ((lambda (x) (x x)) (lambda (x) (x x))) =
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Eli Barzilay:<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 <a hr=
 ef=3D"http://barzilay.org/" target=3D"_blank">http://barzilay.org/</a> =C2=
 =A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 Maze is Life!<b=
 r>
 <br>
 </div></div></blockquote></div><br></div>
 
 --e89a8fb1edaa26cf4504d45c6332--

Class changed from "sw-bug" to "not-a-bug" by cce at Mon, 28 Jan 2013 12:27:05 -0500
Reason>>> Looks like I want "raco pkg" commands instead.

Responsible changed from "nobody" to "cce" by cce at Mon, 28 Jan 2013 12:27:05 -0500
Reason>>> I reported & closed it.

State changed from "open" to "closed" by cce at Mon, 28 Jan 2013 12:27:05 -0500
Reason>>> Not a bug.

