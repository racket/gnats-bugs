From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Wed Sep 28 14:44:27 2011
Received: from mail-iy0-f172.google.com (mail-iy0-f172.google.com [209.85.210.172])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id p8SIiO71024987
	for <bugs@bugs.plt-scheme.org>; Wed, 28 Sep 2011 14:44:24 -0400
Message-Id: <201109281844.p8SIiJU3024959@champlain.ccs.neu.edu>
Date: Wed, 28 Sep 2011 14:44:19 -0400
From: abenitez@filos.ucm.es
To: bugs@racket-lang.org
Subject: problem with vectors

>Number:         12237
>Category:       all
>Synopsis:       problem with vectors
>Class:          sw-bug
>Responsible:    matthias
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Wed Sep 28 14:48:01 -0400 2011
>Closed-Date:    Wed Sep 28 14:52:50 -0400 2011
>Last-Modified:  Wed Sep 28 14:56:01 -0400 2011
>Originator:     Antonio Benítez
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.1.2
>Environment:
mac-i386-osx
>Description:
Dear Sir:
I do not understand why the following program does not work correctly:
(define-syntax make-matriz
  (syntax-rules ()
    ((make-matriz filas columnas)
     (make-vector filas
                  (make-vector columnas 0))
     )
    ))
(define-syntax matriz-set!
  (syntax-rules ()
    ((matriz-set! name fila columna new)
     (begin
       (vector-set! (vector-ref name fila) columna new)
       name
       )
     )
    ))
>How-To-Repeat:
For example:
Welcome to DrRacket, version 5.1.2 [3m].
Language: racket.
> (define q (make-matriz 10 10))
> q
'#(#(0 0 0 0 0 0 0 0 0 0)
   #(0 0 0 0 0 0 0 0 0 0)
   #(0 0 0 0 0 0 0 0 0 0)
   #(0 0 0 0 0 0 0 0 0 0)
   #(0 0 0 0 0 0 0 0 0 0)
   #(0 0 0 0 0 0 0 0 0 0)
   #(0 0 0 0 0 0 0 0 0 0)
   #(0 0 0 0 0 0 0 0 0 0)
   #(0 0 0 0 0 0 0 0 0 0)
   #(0 0 0 0 0 0 0 0 0 0))
> (matriz-set! q 3 5 'A)
'#(#(0 0 0 0 0 A 0 0 0 0)
   #(0 0 0 0 0 A 0 0 0 0)
   #(0 0 0 0 0 A 0 0 0 0)
   #(0 0 0 0 0 A 0 0 0 0)
   #(0 0 0 0 0 A 0 0 0 0)
   #(0 0 0 0 0 A 0 0 0 0)
   #(0 0 0 0 0 A 0 0 0 0)
   #(0 0 0 0 0 A 0 0 0 0)
   #(0 0 0 0 0 A 0 0 0 0)
   #(0 0 0 0 0 A 0 0 0 0))
 Can you tell me what's wrong?
Thank you very much. Sincerely,
>Fix:
>Audit-Trail:
Responsible changed from "nobody" to "matthias" by matthias at Wed, 28 Sep 2011 14:52:50 -0400
Reason>>> .

State changed from "open" to "closed" by matthias at Wed, 28 Sep 2011 14:52:50 -0400
Reason>>> not  a bug 

From: Matthias Felleisen <matthias@ccs.neu.edu>
To: abenitez@filos.ucm.es, bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12237: problem with vectors
Date: Wed, 28 Sep 2011 14:52:22 -0400

 Because you're filling all slots of the outer vector with the *same* vector. 
 
 Try this instead: 
 
 (define-syntax make-matriz
   (syntax-rules ()
     ((make-matriz filas columnas)
      (build-vector filas (λ (_) (make-vector columnas 0))))))
 
 
 
 On Sep 28, 2011, at 2:48 PM, abenitez@filos.ucm.es wrote:
 
 > A new problem report is waiting at
 >  http://bugs.racket-lang.org/query/?cmd=view&pr=12237
 > 
 > Reported by Antonio Benítez for release: 5.1.2
 > 
 > *** Description:
 > Dear Sir:
 > I do not understand why the following program does not work correctly:
 > (define-syntax make-matriz
 >  (syntax-rules ()
 >    ((make-matriz filas columnas)
 >     (make-vector filas
 >                  (make-vector columnas 0))
 >     )
 >    ))
 > (define-syntax matriz-set!
 >  (syntax-rules ()
 >    ((matriz-set! name fila columna new)
 >     (begin
 >       (vector-set! (vector-ref name fila) columna new)
 >       name
 >       )
 >     )
 >    ))
 > 
 > *** How to repeat:
 > For example:
 > Welcome to DrRacket, version 5.1.2 [3m].
 > Language: racket.
 >> (define q (make-matriz 10 10))
 >> q
 > '#(#(0 0 0 0 0 0 0 0 0 0)
 >   #(0 0 0 0 0 0 0 0 0 0)
 >   #(0 0 0 0 0 0 0 0 0 0)
 >   #(0 0 0 0 0 0 0 0 0 0)
 >   #(0 0 0 0 0 0 0 0 0 0)
 >   #(0 0 0 0 0 0 0 0 0 0)
 >   #(0 0 0 0 0 0 0 0 0 0)
 >   #(0 0 0 0 0 0 0 0 0 0)
 >   #(0 0 0 0 0 0 0 0 0 0)
 >   #(0 0 0 0 0 0 0 0 0 0))
 >> (matriz-set! q 3 5 'A)
 > '#(#(0 0 0 0 0 A 0 0 0 0)
 >   #(0 0 0 0 0 A 0 0 0 0)
 >   #(0 0 0 0 0 A 0 0 0 0)
 >   #(0 0 0 0 0 A 0 0 0 0)
 >   #(0 0 0 0 0 A 0 0 0 0)
 >   #(0 0 0 0 0 A 0 0 0 0)
 >   #(0 0 0 0 0 A 0 0 0 0)
 >   #(0 0 0 0 0 A 0 0 0 0)
 >   #(0 0 0 0 0 A 0 0 0 0)
 >   #(0 0 0 0 0 A 0 0 0 0))
 > Can you tell me what's wrong?
 > Thank you very much. Sincerely,
 > 
 > *** Environment:
 > mac-i386-osx
 > 
 
 
