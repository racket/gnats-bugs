From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Wed Sep 19 11:42:11 2012
Received: from mail-ie0-f172.google.com (mail-ie0-f172.google.com [209.85.223.172])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id q8JFg8Zm001028
	for <bugs@bugs.plt-scheme.org>; Wed, 19 Sep 2012 11:42:08 -0400
Message-Id: <201209191542.q8JFg1TH001015@champlain.ccs.neu.edu>
Date: Wed, 19 Sep 2012 11:42:01 -0400
From: ulrik.terp.rasmussen@gmail.com
To: bugs@racket-lang.org
Subject: Unsound cast allowed in typed/racket

>Number:         13123
>Category:       all
>Synopsis:       Unsound cast allowed in typed/racket
>Class:          sw-bug
>Responsible:    asumu
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Wed Sep 19 11:44:01 -0400 2012
>Closed-Date:    Thu Dec 13 18:02:54 -0500 2012
>Last-Modified:  Thu Dec 13 18:02:54 -0500 2012
>Originator:     Ulrik Rasmussen
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.3
>Environment:
unix "Linux squash 3.2.0-29-generic #46-Ubuntu SMP Fri Jul 27 17:03:23 UTC 2012 x86_64 x86_64 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 448149760
Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()


Collections:
("/home/ulrik/.racket/5.3/collects"
 (non-existent-path))
("/home/ulrik/racket/collects"
 ("icons" "rnrs" "mysterx" "games" "future-visualizer" "syntax" "plai" "redex" "images" "profile" "texpict" "ffi" "stepper" "db" "json" "htdp" "scriblib" "drscheme" "net" "compiler" "config" "hierlist" "picturing-programs" "openssl" "mzlib" "r6rs" "frtime" "setup" "scribble" "framework" "xrepl" "embedded-gui" "dynext" "syntax-color" "typed-scheme" "datalog" "swindle" "mred" "mzcom" "xml" "mrlib" "graphics" "2htdp" "data" "unstable" "r5rs" "plot" "typed" "typed-racket" "help" "mzscheme" "file" "algol60" "slideshow" "eopl" "version" "html" "defaults" "at-exp" "string-constants" "raco" "reader" "lang" "srfi" "drracket" "sgl" "browser" "readline" "parser-tools" "web-server" "wxme" "preprocessor" "deinprogramm" "scheme" "trace" "gui-debugger" "s-exp" "test-engine" "planet" "racklog" "slatex" "macro-debugger" "teachpack" "launcher" "scribblings" "info-domain" "errortrace" "racket" "rackunit" "lazy" "make" "schemeunit"))

Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((main) (test))))
>Description:
Using Racket 5.3, I am able to write a function that allows me to cast values to arbitrary (inhabited) types.

The problem seems to be that the type checker performs an unsound equality check on type variables in nested polymorphic declarations, by comparing the names of variables without respecting the scope.
>How-To-Repeat:
The following code declares a variable `wrong' with the type Integer and the value 'oops.

The code does not type check when I change the name of the inner quantified type variable to something that is different from `a'. Since (All (a) (a -> Void)) should be equivalent to (All (b) (b -> Void)), I figured this was a bug.

#lang typed/racket

(: unsound-cast (All (a b) (a b -> a)))
(define (unsound-cast w r)
  (let: ([x : a w])
    (: set-x (All (a) (a -> Void)))
    (define (set-x y)
      (set! x y))
    (set-x r)
    x))

(: wrong Integer)
(define wrong (unsound-cast 42 'oops))
>Fix:
>Audit-Trail:
Responsible changed from "nobody" to "asumu" by asumu@racket-lang.org at Thu, 13 Dec 2012 18:02:54 -0500
Reason>>> A commit by asumu@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/13b831f0ec
State changed from "open" to "closed" by asumu@racket-lang.org at Thu, 13 Dec 2012 18:02:54 -0500
Reason>>> A commit by asumu@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/13b831f0ec
