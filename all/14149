From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Mon Nov 11 12:49:31 2013
Received: from mail-ob0-f170.google.com (mail-ob0-f170.google.com [209.85.214.170])
	by winooski.ccs.neu.edu (8.14.7/8.14.7) with ESMTP id rABHnUSx004728
	for <bugs@bugs.plt-scheme.org>; Mon, 11 Nov 2013 12:49:30 -0500
Message-Id: <201311111749.rABHnSY9004719@winooski.ccs.neu.edu>
Date: Mon, 11 Nov 2013 12:49:28 -0500
From: avtinc2000@gmail.com
To: bugs@racket-lang.org
Subject: Incorrect "" unbound identifier in module"  error in Racket

>Number:         14149
>Category:       all
>Synopsis:       Incorrect "" unbound identifier in module"  error in Racket
>Class:          not-a-bug
>Responsible:    nobody
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Mon Nov 11 12:52:01 -0500 2013
>Closed-Date:    Wed Nov 20 01:40:52 -0500 2013
>Last-Modified:  Wed Nov 20 01:40:52 -0500 2013
>Originator:     HoePhuan Ng
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.3.6
>Environment:
windows "Windows NT 6.1 (Build 7601) Service Pack 1" (win32\x86_64\3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 414535592
Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()
raco pkg (show):
Installation-wide:
 [none]
User-specific, all-version:
 [none]
User-specific, version-specific (5.3.6):
 [none]



Collections:
("C:\\Users\\hp\\AppData\\Roaming\\Racket\\5.3.6\\collects"
 (non-existent-path))
("C:\\Program Files\\Racket\\collects"
 ("2htdp" "algol60" "at-exp" "browser" "compatibility" "compiler" "config" "data" "datalog" "db" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "future-visualizer" "games" "graphics" "gui-debugger" "help" "hierlist" "htdp" "html" "icons" "images" "info-domain" "json" "lang" "launcher" "lazy" "macro-debugger" "make" "math" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "picturing-programs" "pkg" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "realm" "redex" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-engine" "texpict" "trace" "typed" "typed-racket" "typed-scheme" "unstable" "version" "web-server" "wxme" "xml" "xrepl"))

Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((main) (test))))
>Description:
Racket Error warning:
vectorAssocResult: unbound identifier in module in: vectorAssocResult
The problem is here:
         (let ( [vectorAssocResult (vector-assoc1 v cacheV)]
               [assocResult (if vectorAssocResult   ;<=== Error here: "unbound identifier"
                             #f
                             (assoc v xs))])

DrRacket said vectorAssocResult is an unbound identifier, but it was 
defined in code line above the "assocResult binding code"

However, the test code below of same form has no error.
(define (test x) 
  (letrec ([a 1]
        [b (if (= a 1)  ; b gets a or zero
               a
               #f )]
        [c b]  
    [f (lambda () (+ a b))])
    f ))

Run test function like this:
((test 1))

Test cached like this:
((cached (list (cons 1 2) (cons 5 4)) 5) 3) to get (cons 5 4)
>How-To-Repeat:
(define (vector-assoc1 v vec)
  (cond [(= (vector-length vec) 0) #f]
        [(pair? (vector-ref vec 0))  
                (if (equal? v (car (vector-ref vec 0)))
                    (vector-ref vec 0)
                    (vector-assoc v (vector-drop vec 1)))] 
         [#t (vector-assoc v  (vector-drop vec 1))]))

;=========================================================
(define (cached xs n)
  (letrec ([cacheV (make-vector n #f)] 
        [cacheIndex 0]  
;    (begin (print "cacheV is: ") (print cacheV)) (newline)
;     (begin (print "cacheIndex is: ") (print cacheIndex)) (newline)
    [f (lambda (v) 
         (let ( [vectorAssocResult (vector-assoc1 v cacheV)]
               [assocResult (if vectorAssocResult 
                             #f
                             (assoc v xs))])
;    (begin (print "assoc Result is: ") (print assocResult)) (newline)
                 (if vectorAssocResult
                     vectorAssocResult
                     (if assocResult
                         (begin  
                           (vector-set! cacheV cacheIndex assocResult)
                           (set! cacheIndex (modulo (+ cacheIndex 1) n))
;    (begin (print "cacheV is: ") (print cacheV)) (newline)
;     (begin (print "cacheIndex is: ") (print cacheIndex)) (newline)                                     
                           assocResult
;    (begin (print "Returned: assoc Result is: ") (print assocResult)) (newline)
                           )
                         assocResult ; returns assocResult = false
                         )
                     )))])
    f))
>Fix:
>Audit-Trail:
From: Robby Findler <robby@eecs.northwestern.edu>
To: avtinc2000@gmail.com, bugs <bugs@racket-lang.org>
Cc: nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/14149: Incorrect "" unbound identifier in
 module" error in Racket
Date: Mon, 11 Nov 2013 11:59:24 -0600

 --089e015382b8039ed204eaea7e81
 Content-Type: text/plain; charset=UTF-8
 
 Racket is correct. You probably wanted to use let*, not let.
 
 Robby
 
 
 On Mon, Nov 11, 2013 at 11:52 AM, <avtinc2000@gmail.com> wrote:
 
 > A new problem report is waiting at
 >   http://bugs.racket-lang.org/query/?cmd=view&pr=14149
 >
 > Reported by HoePhuan Ng for release: 5.3.6
 >
 > *** Description:
 > Racket Error warning:
 > vectorAssocResult: unbound identifier in module in: vectorAssocResult
 > The problem is here:
 >          (let ( [vectorAssocResult (vector-assoc1 v cacheV)]
 >                [assocResult (if vectorAssocResult   ;<=== Error here:
 > "unbound identifier"
 >                              #f
 >                              (assoc v xs))])
 >
 > DrRacket said vectorAssocResult is an unbound identifier, but it was
 > defined in code line above the "assocResult binding code"
 >
 > However, the test code below of same form has no error.
 > (define (test x)
 >   (letrec ([a 1]
 >         [b (if (= a 1)  ; b gets a or zero
 >                a
 >                #f )]
 >         [c b]
 >     [f (lambda () (+ a b))])
 >     f ))
 >
 > Run test function like this:
 > ((test 1))
 >
 > Test cached like this:
 > ((cached (list (cons 1 2) (cons 5 4)) 5) 3) to get (cons 5 4)
 >
 > *** How to repeat:
 > (define (vector-assoc1 v vec)
 >   (cond [(= (vector-length vec) 0) #f]
 >         [(pair? (vector-ref vec 0))
 >                 (if (equal? v (car (vector-ref vec 0)))
 >                     (vector-ref vec 0)
 >                     (vector-assoc v (vector-drop vec 1)))]
 >          [#t (vector-assoc v  (vector-drop vec 1))]))
 >
 > ;=========================================================
 > (define (cached xs n)
 >   (letrec ([cacheV (make-vector n #f)]
 >         [cacheIndex 0]
 > ;    (begin (print "cacheV is: ") (print cacheV)) (newline)
 > ;     (begin (print "cacheIndex is: ") (print cacheIndex)) (newline)
 >     [f (lambda (v)
 >          (let ( [vectorAssocResult (vector-assoc1 v cacheV)]
 >                [assocResult (if vectorAssocResult
 >                              #f
 >                              (assoc v xs))])
 > ;    (begin (print "assoc Result is: ") (print assocResult)) (newline)
 >                  (if vectorAssocResult
 >                      vectorAssocResult
 >                      (if assocResult
 >                          (begin
 >                            (vector-set! cacheV cacheIndex assocResult)
 >                            (set! cacheIndex (modulo (+ cacheIndex 1) n))
 > ;    (begin (print "cacheV is: ") (print cacheV)) (newline)
 > ;     (begin (print "cacheIndex is: ") (print cacheIndex)) (newline)
 >                            assocResult
 > ;    (begin (print "Returned: assoc Result is: ") (print assocResult))
 > (newline)
 >                            )
 >                          assocResult ; returns assocResult = false
 >                          )
 >                      )))])
 >     f))
 >
 > *** Environment:
 > windows "Windows NT 6.1 (Build 7601) Service Pack 1" (win32\x86_64\3m)
 > (get-display-depth) = 32
 > Human Language: english
 > (current-memory-use) 414535592
 > Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = ();
 > (links #:user? #f #:root? #t) = ()
 > raco pkg (show):
 > Installation-wide:
 >  [none]
 > User-specific, all-version:
 >  [none]
 > User-specific, version-specific (5.3.6):
 >  [none]
 >
 >
 >
 > Collections:
 > ("C:\\Users\\hp\\AppData\\Roaming\\Racket\\5.3.6\\collects"
 >  (non-existent-path))
 > ("C:\\Program Files\\Racket\\collects"
 >  ("2htdp" "algol60" "at-exp" "browser" "compatibility" "compiler" "config"
 > "data" "datalog" "db" "defaults" "deinprogramm" "drracket" "drscheme"
 > "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework"
 > "frtime" "future-visualizer" "games" "graphics" "gui-debugger" "help"
 > "hierlist" "htdp" "html" "icons" "images" "info-domain" "json" "lang"
 > "launcher" "lazy" "macro-debugger" "make" "math" "mred" "mrlib" "mysterx"
 > "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools"
 > "picturing-programs" "pkg" "plai" "planet" "plot" "preprocessor" "profile"
 > "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline"
 > "realm" "redex" "rnrs" "s-exp" "scheme" "schemeunit" "scribble"
 > "scribblings" "scriblib" "setup" "sgl" "slatex" "slideshow" "srfi"
 > "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack"
 > "test-engine" "texpict" "trace" "typed" "typed-racket" "typed-scheme"
 > "unstable" "version" "web-server" "wxme" "xml" "xrepl"))
 >
 > Computer Language: (("Determine language from source") (#(#t print
 > mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((main)
 > (test))))
 >
 >
 
 --089e015382b8039ed204eaea7e81
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 <div dir=3D"ltr">Racket is correct. You probably wanted to use let*, not le=
 t.<div><br></div><div>Robby</div></div><div class=3D"gmail_extra"><br><br><=
 div class=3D"gmail_quote">On Mon, Nov 11, 2013 at 11:52 AM,  <span dir=3D"l=
 tr">&lt;<a href=3D"mailto:avtinc2000@gmail.com" target=3D"_blank">avtinc200=
 0@gmail.com</a>&gt;</span> wrote:<br>
 <blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1p=
 x #ccc solid;padding-left:1ex">A new problem report is waiting at<br>
 =C2=A0 <a href=3D"http://bugs.racket-lang.org/query/?cmd=3Dview&amp;pr=3D14=
 149" target=3D"_blank">http://bugs.racket-lang.org/query/?cmd=3Dview&amp;pr=
 =3D14149</a><br>
 <br>
 Reported by HoePhuan Ng for release: 5.3.6<br>
 <br>
 *** Description:<br>
 Racket Error warning:<br>
 vectorAssocResult: unbound identifier in module in: vectorAssocResult<br>
 The problem is here:<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(let ( [vectorAssocResult (vector-assoc1 =
 v cacheV)]<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0[assocResult (if vec=
 torAssocResult =C2=A0 ;&lt;=3D=3D=3D Error here: &quot;unbound identifier&q=
 uot;<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
 =A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0#f<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
 =A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(assoc v xs))])<br>
 <br>
 DrRacket said vectorAssocResult is an unbound identifier, but it was<br>
 defined in code line above the &quot;assocResult binding code&quot;<br>
 <br>
 However, the test code below of same form has no error.<br>
 (define (test x)<br>
 =C2=A0 (letrec ([a 1]<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 [b (if (=3D a 1) =C2=A0; b gets a or zero<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0a<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0#f )]<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 [c b]<br>
 =C2=A0 =C2=A0 [f (lambda () (+ a b))])<br>
 =C2=A0 =C2=A0 f ))<br>
 <br>
 Run test function like this:<br>
 ((test 1))<br>
 <br>
 Test cached like this:<br>
 ((cached (list (cons 1 2) (cons 5 4)) 5) 3) to get (cons 5 4)<br>
 <br>
 *** How to repeat:<br>
 (define (vector-assoc1 v vec)<br>
 =C2=A0 (cond [(=3D (vector-length vec) 0) #f]<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 [(pair? (vector-ref vec 0))<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 (if (equal? v (car =
 (vector-ref vec 0)))<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 (vect=
 or-ref vec 0)<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 (vect=
 or-assoc v (vector-drop vec 1)))]<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0[#t (vector-assoc v =C2=A0(vector-drop ve=
 c 1))]))<br>
 <br>
 ;=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
 =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
 =3D=3D=3D=3D=3D=3D=3D=3D<br>
 (define (cached xs n)<br>
 =C2=A0 (letrec ([cacheV (make-vector n #f)]<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 [cacheIndex 0]<br>
 ; =C2=A0 =C2=A0(begin (print &quot;cacheV is: &quot;) (print cacheV)) (newl=
 ine)<br>
 ; =C2=A0 =C2=A0 (begin (print &quot;cacheIndex is: &quot;) (print cacheInde=
 x)) (newline)<br>
 =C2=A0 =C2=A0 [f (lambda (v)<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(let ( [vectorAssocResult (vector-assoc1 =
 v cacheV)]<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0[assocResult (if vec=
 torAssocResult<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
 =A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0#f<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
 =A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(assoc v xs))])<br>
 ; =C2=A0 =C2=A0(begin (print &quot;assoc Result is: &quot;) (print assocRes=
 ult)) (newline)<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(if vectorAss=
 ocResult<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
 =A0vectorAssocResult<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
 =A0(if assocResult<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
 =A0 =C2=A0 =C2=A0(begin<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
 =A0 =C2=A0 =C2=A0 =C2=A0(vector-set! cacheV cacheIndex assocResult)<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
 =A0 =C2=A0 =C2=A0 =C2=A0(set! cacheIndex (modulo (+ cacheIndex 1) n))<br>
 ; =C2=A0 =C2=A0(begin (print &quot;cacheV is: &quot;) (print cacheV)) (newl=
 ine)<br>
 ; =C2=A0 =C2=A0 (begin (print &quot;cacheIndex is: &quot;) (print cacheInde=
 x)) (newline)<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
 =A0 =C2=A0 =C2=A0 =C2=A0assocResult<br>
 ; =C2=A0 =C2=A0(begin (print &quot;Returned: assoc Result is: &quot;) (prin=
 t assocResult)) (newline)<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
 =A0 =C2=A0 =C2=A0 =C2=A0)<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
 =A0 =C2=A0 =C2=A0assocResult ; returns assocResult =3D false<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
 =A0 =C2=A0 =C2=A0)<br>
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
 =A0)))])<br>
 =C2=A0 =C2=A0 f))<br>
 <br>
 *** Environment:<br>
 windows &quot;Windows NT 6.1 (Build 7601) Service Pack 1&quot; (win32\x86_6=
 4\3m) (get-display-depth) =3D 32<br>
 Human Language: english<br>
 (current-memory-use) 414535592<br>
 Links: (links) =3D (); (links #:user? #f) =3D (); (links #:root? #t) =3D ()=
 ; (links #:user? #f #:root? #t) =3D ()<br>
 raco pkg (show):<br>
 Installation-wide:<br>
 =C2=A0[none]<br>
 User-specific, all-version:<br>
 =C2=A0[none]<br>
 User-specific, version-specific (5.3.6):<br>
 =C2=A0[none]<br>
 <br>
 <br>
 <br>
 Collections:<br>
 (&quot;C:\\Users\\hp\\AppData\\Roaming\\Racket\\5.3.6\\collects&quot;<br>
 =C2=A0(non-existent-path))<br>
 (&quot;C:\\Program Files\\Racket\\collects&quot;<br>
 =C2=A0(&quot;2htdp&quot; &quot;algol60&quot; &quot;at-exp&quot; &quot;brows=
 er&quot; &quot;compatibility&quot; &quot;compiler&quot; &quot;config&quot; =
 &quot;data&quot; &quot;datalog&quot; &quot;db&quot; &quot;defaults&quot; &q=
 uot;deinprogramm&quot; &quot;drracket&quot; &quot;drscheme&quot; &quot;dyne=
 xt&quot; &quot;embedded-gui&quot; &quot;eopl&quot; &quot;errortrace&quot; &=
 quot;ffi&quot; &quot;file&quot; &quot;framework&quot; &quot;frtime&quot; &q=
 uot;future-visualizer&quot; &quot;games&quot; &quot;graphics&quot; &quot;gu=
 i-debugger&quot; &quot;help&quot; &quot;hierlist&quot; &quot;htdp&quot; &qu=
 ot;html&quot; &quot;icons&quot; &quot;images&quot; &quot;info-domain&quot; =
 &quot;json&quot; &quot;lang&quot; &quot;launcher&quot; &quot;lazy&quot; &qu=
 ot;macro-debugger&quot; &quot;make&quot; &quot;math&quot; &quot;mred&quot; =
 &quot;mrlib&quot; &quot;mysterx&quot; &quot;mzcom&quot; &quot;mzlib&quot; &=
 quot;mzscheme&quot; &quot;net&quot; &quot;openssl&quot; &quot;parser-tools&=
 quot; &quot;picturing-programs&quot; &quot;pkg&quot; &quot;plai&quot; &quot=
 ;planet&quot; &quot;plot&quot; &quot;preprocessor&quot; &quot;profile&quot;=
  &quot;r5rs&quot; &quot;r6rs&quot; &quot;racket&quot; &quot;racklog&quot; &=
 quot;rackunit&quot; &quot;raco&quot; &quot;reader&quot; &quot;readline&quot=
 ; &quot;realm&quot; &quot;redex&quot; &quot;rnrs&quot; &quot;s-exp&quot; &q=
 uot;scheme&quot; &quot;schemeunit&quot; &quot;scribble&quot; &quot;scribbli=
 ngs&quot; &quot;scriblib&quot; &quot;setup&quot; &quot;sgl&quot; &quot;slat=
 ex&quot; &quot;slideshow&quot; &quot;srfi&quot; &quot;stepper&quot; &quot;s=
 tring-constants&quot; &quot;swindle&quot; &quot;syntax&quot; &quot;syntax-c=
 olor&quot; &quot;teachpack&quot; &quot;test-engine&quot; &quot;texpict&quot=
 ; &quot;trace&quot; &quot;typed&quot; &quot;typed-racket&quot; &quot;typed-=
 scheme&quot; &quot;unstable&quot; &quot;version&quot; &quot;web-server&quot=
 ; &quot;wxme&quot; &quot;xml&quot; &quot;xrepl&quot;))<br>
 
 <br>
 Computer Language: ((&quot;Determine language from source&quot;) (#(#t prin=
 t mixed-fraction-e #f #t debug) (default) #() &quot;#lang racket\n&quot; #t=
  #t ((main) (test))))<br>
 <br>
 </blockquote></div><br></div>
 
 --089e015382b8039ed204eaea7e81--

Class changed from "sw-bug" to "not-a-bug" by asumu at Wed, 20 Nov 2013 01:40:52 -0500
Reason>>> Not a bug. See transcript.

State changed from "open" to "closed" by asumu at Wed, 20 Nov 2013 01:40:52 -0500
Reason>>> Not a bug.

