From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Mon Aug 26 19:42:40 2013
Received: from mail-oa0-f50.google.com (mail-oa0-f50.google.com [209.85.219.50])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id r7QNgaM6010572
	for <bugs@bugs.plt-scheme.org>; Mon, 26 Aug 2013 19:42:36 -0400
Message-Id: <201308262342.r7QNgXag010566@champlain.ccs.neu.edu>
Date: Mon, 26 Aug 2013 19:42:33 -0400
From: stchang@ccs.neu.edu
To: bugs@racket-lang.org
Subject: sequence-generate doesn't work with multiple values

>Number:         13983
>Category:       all
>Synopsis:       sequence-generate doesn't work with multiple values
>Class:          not-a-bug
>Responsible:    nobody
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Mon Aug 26 19:44:01 -0400 2013
>Closed-Date:    Thu Aug 29 16:29:28 -0400 2013
>Last-Modified:  Thu Aug 29 16:29:28 -0400 2013
>Originator:     Stephen Chang
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.90.0.6
>Environment:
unix "Linux caprica 3.2.0-35-generic #55-Ubuntu SMP Wed Dec 5 17:42:16 UTC 2012 x86_64 x86_64 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 244413952
Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (#<path:/home/stchang/.racket/5.90.0.6/pkgs/graph>); (links #:user? #f #:root? #t) = ()
raco pkg (show):
/home/stchang/pltpkg/racket/share/devel-pkgs:
 Package              Checksum    Source
 main-distribution    #f          (static-link ../../../pkgs/main-distribution)
 plt-services         #f          (static-link ../../../pkgs/plt-services)
 racket-lib           #f          (static-link ../../../pkgs/racket-pkgs/racket-lib)
Installation-wide:
 [none]
User-specific for installation "5.90.0.6":
 Package    Checksum                                    Source
 graph      5c769639e02fac538b1034a311ea787627b8a7f6    (catalog graph)



Collections:
("/home/stchang/.racket/5.90.0.6/collects"
 (non-existent-path))
("/home/stchang/pltpkg/racket/collects"
 (".gitignore" "acks" "compiler" "data" "db" "dynext" "ffi" "file" "info" "info-domain" "json" "launcher" "net" "openssl" "pkg" "planet" "racket" "rackunit" "raco" "reader" "s-exp" "scheme" "setup" "srfi" "syntax" "unstable" "version" "xml"))

Recent Internal Errors: 
Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((main) (test)) #t))
>Description:
The example below works if changed to only produce one value.
>How-To-Repeat:
#lang racket
(require racket/generator)

(let ([g (in-generator (let loop ([n 3]) 
                         (unless (zero? n)
                           (yield n (add1 n)) 
                           (loop (sub1 n)))))])
    (let-values ([(not-empty? next) (sequence-generate g)])
      (let loop ()
        (when (not-empty?)
          (let-values ([(x y) (next)]) (display (list x y)))
          (loop)))))
>Fix:
>Audit-Trail:
Class changed from "sw-bug" to "not-a-bug" by stchang at Thu, 29 Aug 2013 16:29:28 -0400
Reason>>> The example does not use in-generator properly. An #:arity
argument is required when returning multiple values.

State changed from "open" to "closed" by stchang at Thu, 29 Aug 2013 16:29:28 -0400
Reason>>> rtfm

