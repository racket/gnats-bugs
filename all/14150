From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Mon Nov 11 15:59:20 2013
Received: from mail-ob0-f173.google.com (mail-ob0-f173.google.com [209.85.214.173])
	by winooski.ccs.neu.edu (8.14.7/8.14.7) with ESMTP id rABKxH9X022585
	for <bugs@bugs.plt-scheme.org>; Mon, 11 Nov 2013 15:59:17 -0500
Message-Id: <201311112059.rABKxFBd022578@winooski.ccs.neu.edu>
Date: Mon, 11 Nov 2013 15:59:15 -0500
From: ianj@ccs.neu.edu
To: bugs@racket-lang.org
Subject: pkg name resolution disregards info.rkt

>Number:         14150
>Category:       all
>Synopsis:       pkg name resolution disregards info.rkt
>Class:          change-request
>Responsible:    nobody
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Mon Nov 11 16:00:01 -0500 2013
>Last-Modified:  Mon Nov 11 17:04:01 -0500 2013
>Originator:     J. Ian Johnson
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.90.0.9
>Environment:
Linux x86_64 / Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:23.0) Gecko/20100101 Firefox/23.0
>Description:
If I have a repo of several packages, one in a subdirectory "utils/", it doesn't matter what name I give in utils/info.rkt. The package manager will always install the collection to a "utils/" directory instead of the intended name, unless I give at installation time, --name <intended-name>. This is not what I want users of my package to have to do. Also, please document the behavior -- currently this problem is unspecified.
>How-To-Repeat:

>Fix:
>Audit-Trail:
From: Matthew Flatt <mflatt@cs.utah.edu>
To: ianj@ccs.neu.edu, bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/14150: pkg name resolution disregards info.rkt
Date: Mon, 11 Nov 2013 14:16:35 -0700

 At Mon, 11 Nov 2013 16:00:02 -0500, ianj@ccs.neu.edu wrote:
 > If I have a repo of several packages, one in a subdirectory "utils/", it 
 > doesn't matter what name I give in utils/info.rkt. 
 
 There is no way to declare a package name within an "info.rkt" file.
 
 You can declare the name of a collection that is provided by a
 single-collection package, but a package implementation doesn't declare
 it's own name. The name of a package is "outside" in the same way that
 a procedure name is outside of a `lambda`.
 
 > The package manager will always install the collection to a "utils/"
 > directory instead of the intended name, unless I give at installation
 > time, --name <intended-name>. This is not what I want users of my
 > package to have to do. Also, please document the behavior --
 > currently this problem is unspecified.
 
 Unless I misunderstand what you mean, the way that a package name is
 inferred from a package source is documented here:
 
 http://www.cs.utah.edu/plt/snapshots/current/doc/pkg/Package_Concepts.html#%28part._concept~3asource%29
 
 
From: "J. Ian Johnson" <ianj@ccs.neu.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org, ianj@ccs.neu.edu,
        bugs@racket-lang.org
Subject: Re: [racket-bug] all/14150: pkg name resolution disregards info.rkt
Date: Mon, 11 Nov 2013 16:43:08 -0500 (EST)

 >> If I have a repo of several packages, one in a subdirectory "utils/", it 
 >> doesn't matter what name I give in utils/info.rkt. 
 >
 >There is no way to declare a package name within an "info.rkt" file.
 >
 >You can declare the name of a collection that is provided by a
 >single-collection package, but a package implementation doesn't declare
 >it's own name. The name of a package is "outside" in the same way that
 >a procedure name is outside of a `lambda`.
 
 I don't think this analogy applies, since packages names are inferred,
 and the inferred name is used as a link, and a directory for where the
 package should be stored. The analogous thing would be an unchangable
 semantics for lambda lifting that infers a name for the anonymous
 function from its code, that need not be fresh, and when it clashes with a top level
 name, the compiler crashes.
 
 >
 >> The package manager will always install the collection to a "utils/"
 >> directory instead of the intended name, unless I give at installation
 >> time, --name <intended-name>. This is not what I want users of my
 >> package to have to do. Also, please document the behavior --
 >> currently this problem is unspecified.
 >
 >Unless I misunderstand what you mean, the way that a package name is
 >inferred from a package source is documented here:
 
 You misunderstand. I know what the inference is, but I did not see in
 the docs that, "the inferred name will be the name of the raco link
 and the name of the subdirectory in which the package is installed,"
 for if that were actually written, someone might think, "hey wait,
 maybe that's not the best thing to do."
 
 >
 >http://www.cs.utah.edu/plt/snapshots/current/doc/pkg/Package_Concepts.html#%28part._concept~3asource%29
 
From: Matthew Flatt <mflatt@cs.utah.edu>
To: "J. Ian Johnson" <ianj@ccs.neu.edu>
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org, ianj@ccs.neu.edu,
        bugs@racket-lang.org
Subject: Re: [racket-bug] all/14150: pkg name resolution disregards info.rkt
Date: Mon, 11 Nov 2013 14:59:26 -0700

 I am sorry, but I still do not understand what you are saying, probably
 because I'm guessing wrong about the actions that you took and what you
 expected to happen.
 
 Can you provide step-by-step instructions to produce the behavior that
 you saw (i.e., detailed enough that I could perform the same steps
 myself)? And then can you contrast with a step-by-step description of
 the behavior that you expected?
 
 At Mon, 11 Nov 2013 16:43:08 -0500 (EST), "J. Ian Johnson" wrote:
 > >> If I have a repo of several packages, one in a subdirectory "utils/", it 
 > >> doesn't matter what name I give in utils/info.rkt. 
 > >
 > >There is no way to declare a package name within an "info.rkt" file.
 > >
 > >You can declare the name of a collection that is provided by a
 > >single-collection package, but a package implementation doesn't declare
 > >it's own name. The name of a package is "outside" in the same way that
 > >a procedure name is outside of a `lambda`.
 > 
 > I don't think this analogy applies, since packages names are inferred,
 > and the inferred name is used as a link, and a directory for where the
 > package should be stored. The analogous thing would be an unchangable
 > semantics for lambda lifting that infers a name for the anonymous
 > function from its code, that need not be fresh, and when it clashes with a top 
 > level
 > name, the compiler crashes.
 > 
 > >
 > >> The package manager will always install the collection to a "utils/"
 > >> directory instead of the intended name, unless I give at installation
 > >> time, --name <intended-name>. This is not what I want users of my
 > >> package to have to do. Also, please document the behavior --
 > >> currently this problem is unspecified.
 > >
 > >Unless I misunderstand what you mean, the way that a package name is
 > >inferred from a package source is documented here:
 > 
 > You misunderstand. I know what the inference is, but I did not see in
 > the docs that, "the inferred name will be the name of the raco link
 > and the name of the subdirectory in which the package is installed,"
 > for if that were actually written, someone might think, "hey wait,
 > maybe that's not the best thing to do."
 > 
 > >
 > >http://www.cs.utah.edu/plt/snapshots/current/doc/pkg/Package_Concepts.html#%28
 > part._concept~3asource%29
From: "J. Ian Johnson" <ianj@ccs.neu.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org, ianj@ccs.neu.edu,
        bugs@racket-lang.org
Subject: Re: [racket-bug] all/14150: pkg name resolution disregards info.rkt
Date: Mon, 11 Nov 2013 17:03:15 -0500 (EST)

 I got some help from samth, whom pointed me at the snapshot's docs (I had been using docs.racket-lang.org).
 Using collection instead of name in the info.rkt got me the behavior I expected.
 Sorry for the noise.
 -Ian
 ----- Original Message -----
 From: "Matthew Flatt" <mflatt@cs.utah.edu>
 To: "J. Ian Johnson" <ianj@ccs.neu.edu>
 Cc: nobody@racket-lang.org, bug-notification@racket-lang.org, ianj@ccs.neu.edu, bugs@racket-lang.org
 Sent: Monday, November 11, 2013 4:59:26 PM GMT -05:00 US/Canada Eastern
 Subject: Re: [racket-bug] all/14150: pkg name resolution disregards info.rkt
 
 I am sorry, but I still do not understand what you are saying, probably
 because I'm guessing wrong about the actions that you took and what you
 expected to happen.
 
 Can you provide step-by-step instructions to produce the behavior that
 you saw (i.e., detailed enough that I could perform the same steps
 myself)? And then can you contrast with a step-by-step description of
 the behavior that you expected?
 
 At Mon, 11 Nov 2013 16:43:08 -0500 (EST), "J. Ian Johnson" wrote:
 > >> If I have a repo of several packages, one in a subdirectory "utils/", it 
 > >> doesn't matter what name I give in utils/info.rkt. 
 > >
 > >There is no way to declare a package name within an "info.rkt" file.
 > >
 > >You can declare the name of a collection that is provided by a
 > >single-collection package, but a package implementation doesn't declare
 > >it's own name. The name of a package is "outside" in the same way that
 > >a procedure name is outside of a `lambda`.
 > 
 > I don't think this analogy applies, since packages names are inferred,
 > and the inferred name is used as a link, and a directory for where the
 > package should be stored. The analogous thing would be an unchangable
 > semantics for lambda lifting that infers a name for the anonymous
 > function from its code, that need not be fresh, and when it clashes with a top 
 > level
 > name, the compiler crashes.
 > 
 > >
 > >> The package manager will always install the collection to a "utils/"
 > >> directory instead of the intended name, unless I give at installation
 > >> time, --name <intended-name>. This is not what I want users of my
 > >> package to have to do. Also, please document the behavior --
 > >> currently this problem is unspecified.
 > >
 > >Unless I misunderstand what you mean, the way that a package name is
 > >inferred from a package source is documented here:
 > 
 > You misunderstand. I know what the inference is, but I did not see in
 > the docs that, "the inferred name will be the name of the raco link
 > and the name of the subdirectory in which the package is installed,"
 > for if that were actually written, someone might think, "hey wait,
 > maybe that's not the best thing to do."
 > 
 > >
 > >http://www.cs.utah.edu/plt/snapshots/current/doc/pkg/Package_Concepts.html#%28
 > part._concept~3asource%29
