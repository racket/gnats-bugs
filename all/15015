From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Fri Mar 27 00:54:41 2015
Received: from mail-ie0-f170.google.com (mail-ie0-f170.google.com [209.85.223.170])
	by winooski.ccs.neu.edu (8.14.7/8.14.7) with ESMTP id t2R4sdib022181
	for <bugs@bugs.plt-scheme.org>; Fri, 27 Mar 2015 00:54:40 -0400
Message-Id: <201503270454.t2R4sa2r022174@winooski.ccs.neu.edu>
Date: Fri, 27 Mar 2015 00:54:36 -0400
From: eric.n.dobson@gmail.com
To: bugs@racket-lang.org
Subject: syntax-parse gives error message at wrong level

>Number:         15015
>Category:       all
>Synopsis:       syntax-parse gives error message at wrong level
>Class:          sw-bug
>Responsible:    nobody
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Fri Mar 27 00:56:01 -0400 2015
>Last-Modified:  Fri Mar 27 13:24:01 -0400 2015
>Originator:     Eric Dobson
>Organization:
plt
>Submitter-Id:   unknown
>Release:        HEAD
>Environment:
MacIntel / Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2251.0 Safari/537.36
>Description:
I expect the following to not say anything about expected foo because there is no list and thus it shouldn't be expecting a foo.

/Users/endobson/tmp/tmp.rkt:15.16: x: expected foo
  at: x
  in: x
  parsing context:
   while parsing bar
    term: x
    location: /Users/endobson/tmp/tmp.rkt:15.16
  context...:
   /Users/endobson/proj/racket/plt/racket/collects/unstable/error.rkt:65:0: raise-syntax-error*46
   /Users/endobson/proj/racket/plt/racket/collects/syntax/parse/private/runtime-report.rkt:31:0
   /Users/endobson/tmp/tmp.rkt: [running body]
>How-To-Repeat:
#lang racket

(require syntax/parse
         )

(define-splicing-syntax-class foo
  #:description "foo"
  (pattern n:number))


(define-syntax-class bar
  #:description "bar"
  (pattern (:foo)))

(syntax-parse #'x (y:bar #t))
>Fix:
>Audit-Trail:
From: Ryan Culpepper <ryanc@ccs.neu.edu>
To: eric.n.dobson@gmail.com, bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Cc: 
Subject: Re: [racket-bug] all/15015: syntax-parse gives error message at wrong
 level
Date: Fri, 27 Mar 2015 13:20:31 -0400

 What syntax-parse means (and what it should find a better way to say) is 
 that it was unable to decompose x into (append a-foo '()) such that 
 a-foo matches the syntax class foo.
 
 But to answer another point, parentheses in the pattern don't 
 necessarily require match only lists.
 
    > (require syntax/parse)
    > (define-splicing-syntax-class maybe-foo
        (pattern (~seq n:number))
        (pattern (~seq)))
    > (define-syntax-class bar2
        #:description "bar2"
        (pattern (f:maybe-foo . x:id)))
    > (syntax-parse #'x [y:bar2 'ok])
    'ok
 
 In your example, (:foo) is (:foo . ()), and syntax-parse doesn't 
 consider the second part of the pattern until it has matched the first, 
 which is why it doesn't bail early with "not a list". Similarly, the 
 term (1 2) fails the pattern (x:id y:id z:id) with the error "expected 
 identifier" rather than "wrong number of terms in list".
 
 Ryan
 
 
 On 03/27/2015 12:56 AM, eric.n.dobson@gmail.com wrote:
 > A new problem report is waiting at
 >    http://bugs.racket-lang.org/query/?cmd=view&pr=15015
 >
 > Reported by Eric Dobson for release: HEAD
 >
 > *** Description:
 > I expect the following to not say anything about expected foo because
 > there is no list and thus it shouldn't be expecting a foo.
 >
 > /Users/endobson/tmp/tmp.rkt:15.16: x: expected foo
 >    at: x
 >    in: x
 >    parsing context:
 >     while parsing bar
 >      term: x
 >      location: /Users/endobson/tmp/tmp.rkt:15.16
 >    context...:
 >     /Users/endobson/proj/racket/plt/racket/collects/unstable/error.rkt:65:0: raise-syntax-error*46
 >     /Users/endobson/proj/racket/plt/racket/collects/syntax/parse/private/runtime-report.rkt:31:0
 >     /Users/endobson/tmp/tmp.rkt: [running body]
 >
 > *** How to repeat:
 > #lang racket
 >
 > (require syntax/parse
 >           )
 >
 > (define-splicing-syntax-class foo
 >    #:description "foo"
 >    (pattern n:number))
 >
 >
 > (define-syntax-class bar
 >    #:description "bar"
 >    (pattern (:foo)))
 >
 > (syntax-parse #'x (y:bar #t))
 >
 > *** Environment:
 > MacIntel / Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2251.0 Safari/537.36
 >
 
