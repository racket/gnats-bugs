From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Wed May 13 17:17:20 2015
Received: from mail-ig0-f175.google.com (mail-ig0-f175.google.com [209.85.213.175])
	by winooski.ccs.neu.edu (8.14.7/8.14.7) with ESMTP id t4DLHESD009640
	for <bugs@bugs.plt-scheme.org>; Wed, 13 May 2015 17:17:15 -0400
Message-Id: <201505132117.t4DLHAFl009631@winooski.ccs.neu.edu>
Date: Wed, 13 May 2015 17:17:10 -0400
From: john+racket@croisant.net
To: bugs@racket-lang.org
Subject: Implementation of SRFI 7 lacks support for ELSE clauses

>Number:         15063
>Category:       all
>Synopsis:       Implementation of SRFI 7 lacks support for ELSE clauses
>Class:          sw-bug
>Responsible:    nobody
>Severity:       non-critical
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Wed May 13 17:20:01 -0400 2015
>Originator:     John Croisant
>Organization:
plt
>Submitter-Id:   unknown
>Release:        6.1.1
>Environment:
macosx "Darwin anadara.local 13.4.0 Darwin Kernel Version 13.4.0: Wed Mar 18 16:20:14 PDT 2015; root:xnu-2422.115.14~1/RELEASE_X86_64 x86_64" (i386-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 277773284
raco pkg (show):
Installation-wide:
 Package              Checksum                                    Source
 main-distribution    84a366a8c2b2908babe6c2811b0ada036bb159df    (catalog main-distribution)
 racket-lib           436f0928598fc1a8abf27422e8e6588bef45f652    (catalog racket-lib)
 [184 auto-installed packages not shown]
User-specific for installation "6.1.1":
 [none]



Collections:
("/Users/jac/Library/Racket/6.1.1/collects"
 (non-existent-path))
("/Applications/Racket/collects"
 (".gitignore" "acks" "compiler" "data" "db" "dynext" "ffi" "file" "info" "info-domain" "json" "launcher" "net" "openssl" "pkg" "planet" "racket" "raco" "reader" "realm" "s-exp" "setup" "syntax" "unstable" "version" "xml"))

Recent Internal Errors: 
Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((main) (test)) #t))
>Description:
Racket's implementation of SRFI 7 seems to lack support for ELSE clauses, which are specified in the SRFI 7 document.

In the SRFI 7 document, the "Syntax" section lists the following as a valid form of <program clause>:

  (feature-cond <feature-cond clause>* (else <program clause>+))

And the "Semantics" section explains:

  If an ELSE clause is present it is used if and only if no preceding clause is satisfied; a FEATURE-COND with an ELSE clause is always satisfied.

However, as the example programs in "Steps to Reproduce" of this bug report demonstrate, Racket's implementation does not ever use an ELSE clause, even in cases when the SRFI indicates that it should.
>How-To-Repeat:
Example 1: Run the following program, which demonstrates an ELSE clause with a preceding clause that is not satisfied:

  #lang racket
  (require srfi/7)
  (program (feature-cond ((or) (code (displayln "(or) is never satisfied"))) (else (code (displayln "Hello from ELSE")))))

Expected: The message "Hello from ELSE" should be displayed.

Observed: No message is displayed.


Example 2: Run the following program, which demonstrates an ELSE clause with no preceding clauses (which is valid in the SRFI 7 grammar):

  #lang racket
  (require srfi/7)
  (program (feature-cond (else (code (displayln "Hello from ELSE")))))

Expected: The message "Hello from ELSE" should be displayed.

Observed: No message is displayed.
>Fix:
