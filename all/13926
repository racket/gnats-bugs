From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Sun Jul 21 11:59:59 2013
Received: from mail-ob0-f178.google.com (mail-ob0-f178.google.com [209.85.214.178])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id r6LFxuU8003464
	for <bugs@bugs.plt-scheme.org>; Sun, 21 Jul 2013 11:59:56 -0400
Message-Id: <201307211559.r6LFxrCn003457@champlain.ccs.neu.edu>
Date: Sun, 21 Jul 2013 11:59:53 -0400
From: robb@nne.net
To: bugs@racket-lang.org
Subject: Seemingly inconsistent behavior placing a square into a scene

>Number:         13926
>Category:       all
>Synopsis:       Seemingly inconsistent behavior placing a square into a scene
>Class:          sw-bug
>Responsible:    nobody
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Sun Jul 21 12:00:02 -0400 2013
>Closed-Date:    Sun Jul 21 15:42:50 -0400 2013
>Last-Modified:  Mon Jul 22 08:56:01 -0400 2013
>Originator:     Robb Cutler
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.3.5
>Environment:
macosx "Darwin Cottage.local 10.8.0 Darwin Kernel Version 10.8.0: Tue Jun  7 16:33:36 PDT 2011; root:xnu-1504.15.3~1/RELEASE_I386 i386" (x86_64-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 322327984
Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()
raco pkg (show):
Installation-wide:
 [none]
User-specific, all-version:
 [none]
User-specific, version-specific (5.3.5):
 [none]



Collections:
("/Users/robbcutler/Library/Racket/5.3.5/collects"
 (non-existent-path))
("/Applications/Racket v5.3.5/collects"
 ("2htdp" "algol60" "at-exp" "browser" "compatibility" "compiler" "config" "data" "datalog" "db" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "future-visualizer" "games" "graphics" "gui-debugger" "help" "hierlist" "htdp" "html" "icons" "images" "info-domain" "json" "lang" "launcher" "lazy" "macro-debugger" "make" "math" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "picturing-programs" "pkg" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "realm" "redex" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-engine" "texpict" "trace" "typed" "typed-racket" "typed-scheme" "unstable" "version" "web-server" "wxme" "xml" "xrepl"))

Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((main) (test))))
>Description:
Placing a solid square into an empty scene has a different look when the square has a side of even size vs. odd size.
>How-To-Repeat:
Compare the results of
(place-image (square 3 'solid "black") 10 10 (empty-scene 20 20))
and
(place-image (square 4 'solid "black") 10 10 (empty-scene 20 20))
>Fix:
>Audit-Trail:
State changed from "open" to "closed" by robby at Sun, 21 Jul 2013 15:42:50 -0400
Reason>>> not a bug

I don't mean to say that we don't want your feedback, but I'm closing this PR 
as this is the best that I think we can do. Feel free to continue the discussion 
in email if you disagree and I'll revisit.

From: Robby Findler <robby@eecs.northwestern.edu>
To: robb@nne.net, bugs <bugs@racket-lang.org>
Cc: nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/13926: Seemingly inconsistent behavior placing a
 square into a scene
Date: Sun, 21 Jul 2013 14:41:57 -0500

 --089e01538afcaeedc404e20ac092
 Content-Type: text/plain; charset=UTF-8
 
 When you put the center a square of size 3x3 at 5x5, then you get 1.5
 pixels hanging off to the left of that spot and 1.5 to the right. The
 graphics hardware is limited to coloring complete pixels, tho, so the
 library uses shades of grey.
 
 Robby
 
 
 On Sun, Jul 21, 2013 at 11:00 AM, <robb@nne.net> wrote:
 
 > A new problem report is waiting at
 >   http://bugs.racket-lang.org/query/?cmd=view&pr=13926
 >
 > Reported by Robb Cutler for release: 5.3.5
 >
 > *** Description:
 > Placing a solid square into an empty scene has a different look when the
 > square has a side of even size vs. odd size.
 >
 > *** How to repeat:
 > Compare the results of
 > (place-image (square 3 'solid "black") 10 10 (empty-scene 20 20))
 > and
 > (place-image (square 4 'solid "black") 10 10 (empty-scene 20 20))
 >
 > *** Environment:
 > macosx "Darwin Cottage.local 10.8.0 Darwin Kernel Version 10.8.0: Tue Jun
 >  7 16:33:36 PDT 2011; root:xnu-1504.15.3~1/RELEASE_I386 i386"
 > (x86_64-macosx/3m) (get-display-depth) = 32
 > Human Language: english
 > (current-memory-use) 322327984
 > Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = ();
 > (links #:user? #f #:root? #t) = ()
 > raco pkg (show):
 > Installation-wide:
 >  [none]
 > User-specific, all-version:
 >  [none]
 > User-specific, version-specific (5.3.5):
 >  [none]
 >
 >
 >
 > Collections:
 > ("/Users/robbcutler/Library/Racket/5.3.5/collects"
 >  (non-existent-path))
 > ("/Applications/Racket v5.3.5/collects"
 >  ("2htdp" "algol60" "at-exp" "browser" "compatibility" "compiler" "config"
 > "data" "datalog" "db" "defaults" "deinprogramm" "drracket" "drscheme"
 > "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework"
 > "frtime" "future-visualizer" "games" "graphics" "gui-debugger" "help"
 > "hierlist" "htdp" "html" "icons" "images" "info-domain" "json" "lang"
 > "launcher" "lazy" "macro-debugger" "make" "math" "mred" "mrlib" "mysterx"
 > "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools"
 > "picturing-programs" "pkg" "plai" "planet" "plot" "preprocessor" "profile"
 > "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline"
 > "realm" "redex" "rnrs" "s-exp" "scheme" "schemeunit" "scribble"
 > "scribblings" "scriblib" "setup" "sgl" "slatex" "slideshow" "srfi"
 > "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack"
 > "test-engine" "texpict" "trace" "typed" "typed-racket" "typed-scheme"
 > "unstable" "version" "web-server" "wxme" "xml" "xrepl"))
 >
 > Computer Language: (("Determine language from source") (#(#t print
 > mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((main)
 > (test))))
 >
 >
 
 --089e01538afcaeedc404e20ac092
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 <div dir=3D"ltr">When you put the center a square of size 3x3 at 5x5, then =
 you get 1.5 pixels hanging off to the left of that spot and 1.5 to the righ=
 t. The graphics hardware is limited to coloring complete pixels, tho, so th=
 e library uses shades of grey.<div>
 <div><br></div><div>Robby</div></div></div><div class=3D"gmail_extra"><br><=
 br><div class=3D"gmail_quote">On Sun, Jul 21, 2013 at 11:00 AM,  <span dir=
 =3D"ltr">&lt;<a href=3D"mailto:robb@nne.net" target=3D"_blank">robb@nne.net=
 </a>&gt;</span> wrote:<br>
 <blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1p=
 x #ccc solid;padding-left:1ex">A new problem report is waiting at<br>
 =C2=A0 <a href=3D"http://bugs.racket-lang.org/query/?cmd=3Dview&amp;pr=3D13=
 926" target=3D"_blank">http://bugs.racket-lang.org/query/?cmd=3Dview&amp;pr=
 =3D13926</a><br>
 <br>
 Reported by Robb Cutler for release: 5.3.5<br>
 <br>
 *** Description:<br>
 Placing a solid square into an empty scene has a different look when the sq=
 uare has a side of even size vs. odd size.<br>
 <br>
 *** How to repeat:<br>
 Compare the results of<br>
 (place-image (square 3 &#39;solid &quot;black&quot;) 10 10 (empty-scene 20 =
 20))<br>
 and<br>
 (place-image (square 4 &#39;solid &quot;black&quot;) 10 10 (empty-scene 20 =
 20))<br>
 <br>
 *** Environment:<br>
 macosx &quot;Darwin Cottage.local 10.8.0 Darwin Kernel Version 10.8.0: Tue =
 Jun =C2=A07 16:33:36 PDT 2011; root:xnu-1504.15.3~1/RELEASE_I386 i386&quot;=
  (x86_64-macosx/3m) (get-display-depth) =3D 32<br>
 Human Language: english<br>
 (current-memory-use) 322327984<br>
 Links: (links) =3D (); (links #:user? #f) =3D (); (links #:root? #t) =3D ()=
 ; (links #:user? #f #:root? #t) =3D ()<br>
 raco pkg (show):<br>
 Installation-wide:<br>
 =C2=A0[none]<br>
 User-specific, all-version:<br>
 =C2=A0[none]<br>
 User-specific, version-specific (5.3.5):<br>
 =C2=A0[none]<br>
 <br>
 <br>
 <br>
 Collections:<br>
 (&quot;/Users/robbcutler/Library/Racket/5.3.5/collects&quot;<br>
 =C2=A0(non-existent-path))<br>
 (&quot;/Applications/Racket v5.3.5/collects&quot;<br>
 =C2=A0(&quot;2htdp&quot; &quot;algol60&quot; &quot;at-exp&quot; &quot;brows=
 er&quot; &quot;compatibility&quot; &quot;compiler&quot; &quot;config&quot; =
 &quot;data&quot; &quot;datalog&quot; &quot;db&quot; &quot;defaults&quot; &q=
 uot;deinprogramm&quot; &quot;drracket&quot; &quot;drscheme&quot; &quot;dyne=
 xt&quot; &quot;embedded-gui&quot; &quot;eopl&quot; &quot;errortrace&quot; &=
 quot;ffi&quot; &quot;file&quot; &quot;framework&quot; &quot;frtime&quot; &q=
 uot;future-visualizer&quot; &quot;games&quot; &quot;graphics&quot; &quot;gu=
 i-debugger&quot; &quot;help&quot; &quot;hierlist&quot; &quot;htdp&quot; &qu=
 ot;html&quot; &quot;icons&quot; &quot;images&quot; &quot;info-domain&quot; =
 &quot;json&quot; &quot;lang&quot; &quot;launcher&quot; &quot;lazy&quot; &qu=
 ot;macro-debugger&quot; &quot;make&quot; &quot;math&quot; &quot;mred&quot; =
 &quot;mrlib&quot; &quot;mysterx&quot; &quot;mzcom&quot; &quot;mzlib&quot; &=
 quot;mzscheme&quot; &quot;net&quot; &quot;openssl&quot; &quot;parser-tools&=
 quot; &quot;picturing-programs&quot; &quot;pkg&quot; &quot;plai&quot; &quot=
 ;planet&quot; &quot;plot&quot; &quot;preprocessor&quot; &quot;profile&quot;=
  &quot;r5rs&quot; &quot;r6rs&quot; &quot;racket&quot; &quot;racklog&quot; &=
 quot;rackunit&quot; &quot;raco&quot; &quot;reader&quot; &quot;readline&quot=
 ; &quot;realm&quot; &quot;redex&quot; &quot;rnrs&quot; &quot;s-exp&quot; &q=
 uot;scheme&quot; &quot;schemeunit&quot; &quot;scribble&quot; &quot;scribbli=
 ngs&quot; &quot;scriblib&quot; &quot;setup&quot; &quot;sgl&quot; &quot;slat=
 ex&quot; &quot;slideshow&quot; &quot;srfi&quot; &quot;stepper&quot; &quot;s=
 tring-constants&quot; &quot;swindle&quot; &quot;syntax&quot; &quot;syntax-c=
 olor&quot; &quot;teachpack&quot; &quot;test-engine&quot; &quot;texpict&quot=
 ; &quot;trace&quot; &quot;typed&quot; &quot;typed-racket&quot; &quot;typed-=
 scheme&quot; &quot;unstable&quot; &quot;version&quot; &quot;web-server&quot=
 ; &quot;wxme&quot; &quot;xml&quot; &quot;xrepl&quot;))<br>
 
 <br>
 Computer Language: ((&quot;Determine language from source&quot;) (#(#t prin=
 t mixed-fraction-e #f #t debug) (default) #() &quot;#lang racket\n&quot; #t=
  #t ((main) (test))))<br>
 <br>
 </blockquote></div><br></div>
 
 --089e01538afcaeedc404e20ac092--
From: Robb Cutler <robb@nne.net>
To: bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org,
        robby@racket-lang.org
Subject: Re: [racket-bug] all/13926: Seemingly inconsistent behavior placing a square into a scene
Date: Sun, 21 Jul 2013 18:34:25 -0400

 --Apple-Mail=_A66A643A-BCC6-40E0-8806-7A97770E331C
 Content-Transfer-Encoding: quoted-printable
 Content-Type: text/plain;
 	charset=us-ascii
 
 Hi Robby -
 
 Thanks for the quick response.  What is odd is that if I just make the =
 image, say (square 3 "solid" "black), the image is correct.  It's only =
 when I place the image in a scene that it ends up not being 3x3.
 
 What I really want to do is to set individual pixels.  Obviously, making =
 a 1x1 square doesn't work.  Any suggestions as to how I could do this?
 
 Thanks,
 Robb
 
 
 On Jul 21, 2013, at 3:42 PM, robby@racket-lang.org wrote:
 
 >=20
 > State changed from "open" to "closed" by robby at Sun, 21 Jul 2013 =
 15:42:50 -0400
 > Reason>>> not a bug
 >=20
 > I don't mean to say that we don't want your feedback, but I'm closing =
 this PR=20
 > as this is the best that I think we can do. Feel free to continue the =
 discussion=20
 > in email if you disagree and I'll revisit.
 >=20
 >=20
 > View:
 >  http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D13926
 >=20
 
 
 --Apple-Mail=_A66A643A-BCC6-40E0-8806-7A97770E331C
 Content-Disposition: attachment;
 	filename=smime.p7s
 Content-Type: application/pkcs7-signature;
 	name=smime.p7s
 Content-Transfer-Encoding: base64
 
 MIAGCSqGSIb3DQEHAqCAMIACAQExCzAJBgUrDgMCGgUAMIAGCSqGSIb3DQEHAQAAoIIMaTCCBi0w
 ggUVoAMCAQICAwVf3zANBgkqhkiG9w0BAQUFADCBjDELMAkGA1UEBhMCSUwxFjAUBgNVBAoTDVN0
 YXJ0Q29tIEx0ZC4xKzApBgNVBAsTIlNlY3VyZSBEaWdpdGFsIENlcnRpZmljYXRlIFNpZ25pbmcx
 ODA2BgNVBAMTL1N0YXJ0Q29tIENsYXNzIDEgUHJpbWFyeSBJbnRlcm1lZGlhdGUgQ2xpZW50IENB
 MB4XDTEyMTEyNjE0MTE0N1oXDTEzMTEyNzE5NTQ0MVowTzEZMBcGA1UEDRMQMDIxaUg3ckJSdGhN
 Q2FJMTEVMBMGA1UEAwwMcm9iYkBubmUubmV0MRswGQYJKoZIhvcNAQkBFgxyb2JiQG5uZS5uZXQw
 ggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDFcniysqBMBh7FX1+HbkTg6S/QhQ+Btp8p
 5Rp25JuFH2o3vn0Xt/YuiKxFFdfj1Zk6GlajgW8H21AzkKhnM0dw+he2RC4fspZBGUE6pP3e5cLU
 8bG1cAX6nATCqg0z5c8ymFflDZ3yBvlbLCNjeS+sROf2/DYamwcOS5UwE2J+oeU8NGwGDfzpABqv
 tiNs+3PtzMQHnftsMI2TvIsyd5qHcr0olxJZskVqHE+ar0Puqb4KqbLJ7Lc817NkTYcXvUuUZbHy
 6a5/k5b/w2pSppt1r13iquxgNfR7pGdT+vwLzCclEig3AYY1cgdbKLFLgQAJE0HVcGI+irR2gSrw
 5LBfAgMBAAGjggLSMIICzjAJBgNVHRMEAjAAMAsGA1UdDwQEAwIEsDAdBgNVHSUEFjAUBggrBgEF
 BQcDAgYIKwYBBQUHAwQwHQYDVR0OBBYEFDUMtadiFMFbUacdjwDm4o/oGtQ/MB8GA1UdIwQYMBaA
 FFNy7ZKc4NrLAVx8fpY1TvLUuFGCMBcGA1UdEQQQMA6BDHJvYmJAbm5lLm5ldDCCAUwGA1UdIASC
 AUMwggE/MIIBOwYLKwYBBAGBtTcBAgMwggEqMC4GCCsGAQUFBwIBFiJodHRwOi8vd3d3LnN0YXJ0
 c3NsLmNvbS9wb2xpY3kucGRmMIH3BggrBgEFBQcCAjCB6jAnFiBTdGFydENvbSBDZXJ0aWZpY2F0
 aW9uIEF1dGhvcml0eTADAgEBGoG+VGhpcyBjZXJ0aWZpY2F0ZSB3YXMgaXNzdWVkIGFjY29yZGlu
 ZyB0byB0aGUgQ2xhc3MgMSBWYWxpZGF0aW9uIHJlcXVpcmVtZW50cyBvZiB0aGUgU3RhcnRDb20g
 Q0EgcG9saWN5LCByZWxpYW5jZSBvbmx5IGZvciB0aGUgaW50ZW5kZWQgcHVycG9zZSBpbiBjb21w
 bGlhbmNlIG9mIHRoZSByZWx5aW5nIHBhcnR5IG9ibGlnYXRpb25zLjA2BgNVHR8ELzAtMCugKaAn
 hiVodHRwOi8vY3JsLnN0YXJ0c3NsLmNvbS9jcnR1MS1jcmwuY3JsMIGOBggrBgEFBQcBAQSBgTB/
 MDkGCCsGAQUFBzABhi1odHRwOi8vb2NzcC5zdGFydHNzbC5jb20vc3ViL2NsYXNzMS9jbGllbnQv
 Y2EwQgYIKwYBBQUHMAKGNmh0dHA6Ly9haWEuc3RhcnRzc2wuY29tL2NlcnRzL3N1Yi5jbGFzczEu
 Y2xpZW50LmNhLmNydDAjBgNVHRIEHDAahhhodHRwOi8vd3d3LnN0YXJ0c3NsLmNvbS8wDQYJKoZI
 hvcNAQEFBQADggEBADuXrMKL4JXf3PQtKn1+D3uFAtmiwxaVqosOu6sHSo6NGmMBIko2Zf5PeXrE
 Afrb/rzLbjpf4Mkx+LgueXd3jHeNn4LEodSLaPfMamWFLowsLQVjSSdMJVpl3nmGpyEhra00sx21
 xaisUZs+KsFH2+e8VC1rb6+qERA4Ot+Fepbf9VQk/ymdrf7QQ3LzcAwy4cCiTpA1kVGyFEty8Prg
 +e8S7uHP5N7KKqrcfIlorCy/Gzl6RWpO9PvyGwBTX2unVq6jFScHv5igmqQIfWJ4ZhyV3xehSUr7
 wx9K6pSRbw6ytxtRlrpCNSZaI9SphDPFOHlWjtwFq6S8y3HdO+XQomswggY0MIIEHKADAgECAgEe
 MA0GCSqGSIb3DQEBBQUAMH0xCzAJBgNVBAYTAklMMRYwFAYDVQQKEw1TdGFydENvbSBMdGQuMSsw
 KQYDVQQLEyJTZWN1cmUgRGlnaXRhbCBDZXJ0aWZpY2F0ZSBTaWduaW5nMSkwJwYDVQQDEyBTdGFy
 dENvbSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAeFw0wNzEwMjQyMTAxNTVaFw0xNzEwMjQyMTAx
 NTVaMIGMMQswCQYDVQQGEwJJTDEWMBQGA1UEChMNU3RhcnRDb20gTHRkLjErMCkGA1UECxMiU2Vj
 dXJlIERpZ2l0YWwgQ2VydGlmaWNhdGUgU2lnbmluZzE4MDYGA1UEAxMvU3RhcnRDb20gQ2xhc3Mg
 MSBQcmltYXJ5IEludGVybWVkaWF0ZSBDbGllbnQgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAw
 ggEKAoIBAQDHCYPMzi3YGrEppC4Tq5a+ijKDjKaIQZZVR63UbxIP6uq/I0fhCu+cQhoUfE6ERKKn
 u8zPf1Jwuk0tsvVCk6U9b+0UjM0dLep3ZdE1gblK/1FwYT5Pipsu2yOMluLqwvsuz9/9f1+1PKHG
 /FaR/wpbfuIqu54qzHDYeqiUfsYzoVflR80DAC7hmJ+SmZnNTWyUGHJbBpA8Q89lGxahNvuryGaC
 /o2/ceD2uYDX9U8Eg5DpIpGQdcbQeGarV04WgAUjjXX5r/2dabmtxWMZwhZna//jdiSyrrSMTGKk
 DiXm6/3/4ebfeZuCYKzN2P8O2F/Xe2AC/Y7zeEsnR7FOp+uXAgMBAAGjggGtMIIBqTAPBgNVHRMB
 Af8EBTADAQH/MA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4EFgQUU3Ltkpzg2ssBXHx+ljVO8tS4UYIw
 HwYDVR0jBBgwFoAUTgvvGqRAW6UXaYcwyjRoQ9BBrvIwZgYIKwYBBQUHAQEEWjBYMCcGCCsGAQUF
 BzABhhtodHRwOi8vb2NzcC5zdGFydHNzbC5jb20vY2EwLQYIKwYBBQUHMAKGIWh0dHA6Ly93d3cu
 c3RhcnRzc2wuY29tL3Nmc2NhLmNydDBbBgNVHR8EVDBSMCegJaAjhiFodHRwOi8vd3d3LnN0YXJ0
 c3NsLmNvbS9zZnNjYS5jcmwwJ6AloCOGIWh0dHA6Ly9jcmwuc3RhcnRzc2wuY29tL3Nmc2NhLmNy
 bDCBgAYDVR0gBHkwdzB1BgsrBgEEAYG1NwECATBmMC4GCCsGAQUFBwIBFiJodHRwOi8vd3d3LnN0
 YXJ0c3NsLmNvbS9wb2xpY3kucGRmMDQGCCsGAQUFBwIBFihodHRwOi8vd3d3LnN0YXJ0c3NsLmNv
 bS9pbnRlcm1lZGlhdGUucGRmMA0GCSqGSIb3DQEBBQUAA4ICAQAKgwh9eKssBly4Y4xerhy5I3dN
 oXHYfYa8PlVLL/qtXnkFgdtY1o95CfegFJTwqBBmf8pyTUnFsukDFUI22zF5bVHzuJ+GxhnSqN2s
 D1qetbYwBYK2iyYA5Pg7Er1A+hKMIzEzcduRkIMmCeUTyMyikfbUFvIBivtvkR8ZFAk22BZy+pJf
 AoedO61HTz4qSfQoCRcLN5A0t4DkuVhTMXIzuQ8CnykhExD6x4e6ebIbrjZLb7L+ocR0y4YjCl/P
 d4MXU91y0vTipgr/O75CDUHDRHCCKBVmz/Rzkc/b970MEeHt5LC3NiWTgBSvrLEuVzBKM586YoRD
 9Dy3OHQgWI270g+5MYA8GfgI/EPT5G7xPbCDz+zjdH89PeR3U4So4lSXur6H6vp+m9TQXPF3a0Lw
 Zrp8MQ+Z77U1uL7TelWO5lApsbAonrqASfTpaprFVkL4nyGH+NHST2ZJPWIBk81i6Vw0ny0qZW2N
 iy/QvVNKbb43A43ny076khXO7cNbBIRdJ/6qQNq9Bqb5C0Q5nEsFcj75oxQRqlKf6TcvGbjxkJh8
 BYtv9ePsXklAxtm8J7GCUBthHSQgepbkOexhJ0wP8imUkyiPHQ0GvEnd83129fZjoEhdGwXV27io
 RKbj/cIq7JRXun0NbeY+UdMYu9jGfIpDLtUUGSgsg2zMGs5R4jGCA28wggNrAgEBMIGUMIGMMQsw
 CQYDVQQGEwJJTDEWMBQGA1UEChMNU3RhcnRDb20gTHRkLjErMCkGA1UECxMiU2VjdXJlIERpZ2l0
 YWwgQ2VydGlmaWNhdGUgU2lnbmluZzE4MDYGA1UEAxMvU3RhcnRDb20gQ2xhc3MgMSBQcmltYXJ5
 IEludGVybWVkaWF0ZSBDbGllbnQgQ0ECAwVf3zAJBgUrDgMCGgUAoIIBrzAYBgkqhkiG9w0BCQMx
 CwYJKoZIhvcNAQcBMBwGCSqGSIb3DQEJBTEPFw0xMzA3MjEyMjM0MjVaMCMGCSqGSIb3DQEJBDEW
 BBSlYiWcBxn0/NUceJhI4Ee1WdVYdzCBpQYJKwYBBAGCNxAEMYGXMIGUMIGMMQswCQYDVQQGEwJJ
 TDEWMBQGA1UEChMNU3RhcnRDb20gTHRkLjErMCkGA1UECxMiU2VjdXJlIERpZ2l0YWwgQ2VydGlm
 aWNhdGUgU2lnbmluZzE4MDYGA1UEAxMvU3RhcnRDb20gQ2xhc3MgMSBQcmltYXJ5IEludGVybWVk
 aWF0ZSBDbGllbnQgQ0ECAwVf3zCBpwYLKoZIhvcNAQkQAgsxgZeggZQwgYwxCzAJBgNVBAYTAklM
 MRYwFAYDVQQKEw1TdGFydENvbSBMdGQuMSswKQYDVQQLEyJTZWN1cmUgRGlnaXRhbCBDZXJ0aWZp
 Y2F0ZSBTaWduaW5nMTgwNgYDVQQDEy9TdGFydENvbSBDbGFzcyAxIFByaW1hcnkgSW50ZXJtZWRp
 YXRlIENsaWVudCBDQQIDBV/fMA0GCSqGSIb3DQEBAQUABIIBABNH5MkKHyGx21L22Cshc7lZDzaS
 3Z6lnVpX6K1cDZMARwDxlfV7+OWpwC+fdIb6BgJcLAgBVVQaF85gI18w4OpwiU7PmOlF5NNG3XcF
 Kr/t+SuQ3RKCnRT8JumZneanwUDcyGzccIofEQq7rFCxFkM80SkqEUG4NsmF3/HCTTCjxqU5tUpe
 hSZTAPRAav3IDNs28WXoikFjdFoztvMDgqGUhhw+kIeDktSqyR3hkTwlEdcKt5JDqBudHcMRfJNQ
 gE9/+OZHp0rSVPZdJ4uKI8by3u4DKkWXi+xTDGU+IacuJPfMAQWVSLp21IC/OM1brj4cFL3EKKVm
 unQIXGPVEdoAAAAAAAA=
 
 --Apple-Mail=_A66A643A-BCC6-40E0-8806-7A97770E331C--
From: Robby Findler <robby@eecs.northwestern.edu>
To: Robb Cutler <robb@nne.net>
Cc: "bugs@racket-lang.org" <bugs@racket-lang.org>,
        "nobody@racket-lang.org" <nobody@racket-lang.org>,
        "bug-notification@racket-lang.org" <bug-notification@racket-lang.org>,
        "robby@racket-lang.org" <robby@racket-lang.org>
Subject: Re: [racket-bug] all/13926: Seemingly inconsistent behavior placing a
 square into a scene
Date: Sun, 21 Jul 2013 17:55:08 -0500

 --001a11c302529d185404e20d7374
 Content-Type: text/plain; charset=UTF-8
 
 On Sunday, July 21, 2013, Robb Cutler wrote:
 
 > Hi Robby -
 >
 > Thanks for the quick response.  What is odd is that if I just make the
 > image, say (square 3 "solid" "black), the image is correct.  It's only when
 > I place the image in a scene that it ends up not being 3x3.
 >
 >
 This is the same issue. It is because you are placing wrt to the center of
 the image.
 
 Maybe you need to read the "nitty gritty" section of the docs (the one
 about pixels)?
 
 
 > What I really want to do is to set individual pixels.  Obviously, making a
 > 1x1 square doesn't work.  Any suggestions as to how I could do this?
 >
 >
 That will work. Just place them properly. Hopefully the docs will help you
 understand how.
 
 But why do you want to do this?
 
 Robby
 
 
 > Thanks,
 > Robb
 >
 >
 > On Jul 21, 2013, at 3:42 PM, robby@racket-lang.org <javascript:;> wrote:
 >
 > >
 > > State changed from "open" to "closed" by robby at Sun, 21 Jul 2013
 > 15:42:50 -0400
 > > Reason>>> not a bug
 > >
 > > I don't mean to say that we don't want your feedback, but I'm closing
 > this PR
 > > as this is the best that I think we can do. Feel free to continue the
 > discussion
 > > in email if you disagree and I'll revisit.
 > >
 > >
 > > View:
 > >  http://bugs.racket-lang.org/query/?cmd=view&pr=13926
 > >
 >
 >
 
 --001a11c302529d185404e20d7374
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 <br><br>On Sunday, July 21, 2013, Robb Cutler  wrote:<br><blockquote class=
 =3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1px #ccc solid;padd=
 ing-left:1ex">Hi Robby -<br>
 <br>
 Thanks for the quick response. =C2=A0What is odd is that if I just make the=
  image, say (square 3 &quot;solid&quot; &quot;black), the image is correct.=
  =C2=A0It&#39;s only when I place the image in a scene that it ends up not =
 being 3x3.<br>
 
 <br></blockquote><div><br></div>This is the same issue. It is because you a=
 re placing wrt to the center of the image.=C2=A0<div><br></div><div>Maybe y=
 ou need to read the &quot;nitty gritty&quot; section of the docs (the one a=
 bout pixels)?<br>
 <div>=C2=A0</div><blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8=
 ex;border-left:1px #ccc solid;padding-left:1ex">
 What I really want to do is to set individual pixels. =C2=A0Obviously, maki=
 ng a 1x1 square doesn&#39;t work. =C2=A0Any suggestions as to how I could d=
 o this?<br>
 <br></blockquote><div><br></div><div>That will work. Just place them proper=
 ly. Hopefully the docs will help you understand how.=C2=A0<span></span></di=
 v><div><br></div><div>But why do you want to do this?</div><div><br></div><=
 div>
 Robby</div><div>=C2=A0</div><blockquote class=3D"gmail_quote" style=3D"marg=
 in:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">
 Thanks,<br>
 Robb<br>
 <br>
 <br>
 On Jul 21, 2013, at 3:42 PM, <a href=3D"javascript:;" onclick=3D"_e(event, =
 &#39;cvml&#39;, &#39;robby@racket-lang.org&#39;)">robby@racket-lang.org</a>=
  wrote:<br>
 <br>
 &gt;<br>
 &gt; State changed from &quot;open&quot; to &quot;closed&quot; by robby at =
 Sun, 21 Jul 2013 15:42:50 -0400<br>
 &gt; Reason&gt;&gt;&gt; not a bug<br>
 &gt;<br>
 &gt; I don&#39;t mean to say that we don&#39;t want your feedback, but I&#3=
 9;m closing this PR<br>
 &gt; as this is the best that I think we can do. Feel free to continue the =
 discussion<br>
 &gt; in email if you disagree and I&#39;ll revisit.<br>
 &gt;<br>
 &gt;<br>
 &gt; View:<br>
 &gt; =C2=A0<a href=3D"http://bugs.racket-lang.org/query/?cmd=3Dview&amp;pr=
 =3D13926" target=3D"_blank">http://bugs.racket-lang.org/query/?cmd=3Dview&a=
 mp;pr=3D13926</a><br>
 &gt;<br>
 <br>
 </blockquote></div>
 
 --001a11c302529d185404e20d7374--
From: Robb Cutler <robb@nne.net>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: "bugs@racket-lang.org" <bugs@racket-lang.org>,
        "nobody@racket-lang.org" <nobody@racket-lang.org>,
        "bug-notification@racket-lang.org" <bug-notification@racket-lang.org>,
        "robby@racket-lang.org" <robby@racket-lang.org>
Subject: Re: [racket-bug] all/13926: Seemingly inconsistent behavior placing a square into a scene
Date: Sun, 21 Jul 2013 19:09:38 -0400

 --Apple-Mail=_7C98D71C-AE01-450B-BE4C-B0DA0FFFA29F
 Content-Type: multipart/alternative;
 	boundary="Apple-Mail=_300246A7-51FA-4A21-8321-5A95D3195D2D"
 
 
 --Apple-Mail=_300246A7-51FA-4A21-8321-5A95D3195D2D
 Content-Transfer-Encoding: quoted-printable
 Content-Type: text/plain;
 	charset=us-ascii
 
 
 On Jul 21, 2013, at 6:55 PM, Robby Findler wrote:
 
 >=20
 >=20
 > On Sunday, July 21, 2013, Robb Cutler wrote:
 > Hi Robby -
 >=20
 > Thanks for the quick response.  What is odd is that if I just make the =
 image, say (square 3 "solid" "black), the image is correct.  It's only =
 when I place the image in a scene that it ends up not being 3x3.
 >=20
 >=20
 > This is the same issue. It is because you are placing wrt to the =
 center of the image.=20
 >=20
 > Maybe you need to read the "nitty gritty" section of the docs (the one =
 about pixels)?
 
 I did...  I understand why outline shapes act the way they do, but it =
 doesn't address solid shapes (except to say that you get exactly n^2 =
 pixels colored in as one would expect).
 
 > =20
 > What I really want to do is to set individual pixels.  Obviously, =
 making a 1x1 square doesn't work.  Any suggestions as to how I could do =
 this?
 >=20
 >=20
 > That will work. Just place them properly. Hopefully the docs will help =
 you understand how.=20
 
 Can you give me an example?  I'm not sure what you mean.
 
 
 >=20
 > But why do you want to do this?
 
 I'm working with some students on building a graphics library from =
 scratch (where all they get is a set-pixel function).
 
 - Robb
 
 
 
 >=20
 > Robby
 > =20
 > Thanks,
 > Robb
 >=20
 >=20
 > On Jul 21, 2013, at 3:42 PM, robby@racket-lang.org wrote:
 >=20
 > >
 > > State changed from "open" to "closed" by robby at Sun, 21 Jul 2013 =
 15:42:50 -0400
 > > Reason>>> not a bug
 > >
 > > I don't mean to say that we don't want your feedback, but I'm =
 closing this PR
 > > as this is the best that I think we can do. Feel free to continue =
 the discussion
 > > in email if you disagree and I'll revisit.
 > >
 > >
 > > View:
 > >  http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D13926
 > >
 >=20
 
 
 --Apple-Mail=_300246A7-51FA-4A21-8321-5A95D3195D2D
 Content-Transfer-Encoding: 7bit
 Content-Type: text/html;
 	charset=us-ascii
 
 <html><head></head><body style="word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space; "><br><div><div>On Jul 21, 2013, at 6:55 PM, Robby Findler wrote:</div><br class="Apple-interchange-newline"><blockquote type="cite"><br><br>On Sunday, July 21, 2013, Robb Cutler  wrote:<br><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">Hi Robby -<br>
 <br>
 Thanks for the quick response. &nbsp;What is odd is that if I just make the image, say (square 3 "solid" "black), the image is correct. &nbsp;It's only when I place the image in a scene that it ends up not being 3x3.<br>
 
 <br></blockquote><div><br></div>This is the same issue. It is because you are placing wrt to the center of the image.&nbsp;<div><br></div><div>Maybe you need to read the "nitty gritty" section of the docs (the one about pixels)?<br></div></blockquote><div><br></div>I did... &nbsp;I understand why outline shapes act the way they do, but it doesn't address solid shapes (except to say that you get exactly n^2 pixels colored in as one would expect).</div><div><br></div><div><blockquote type="cite"><div>
 <div>&nbsp;</div><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">
 What I really want to do is to set individual pixels. &nbsp;Obviously, making a 1x1 square doesn't work. &nbsp;Any suggestions as to how I could do this?<br>
 <br></blockquote><div><br></div><div>That will work. Just place them properly. Hopefully the docs will help you understand how.&nbsp;</div></div></blockquote><div><br></div>Can you give me an example? &nbsp;I'm not sure what you mean.</div><div><br></div><div><br><blockquote type="cite"><div><div><span></span></div><div><br></div><div>But why do you want to do this?</div></div></blockquote><div><br></div>I'm working with some students on building a graphics library from scratch (where all they get is a set-pixel function).</div><div><br></div><div>- Robb</div><div><br></div><div><br></div><div><br><blockquote type="cite"><div><div><br></div><div>
 Robby</div><div>&nbsp;</div><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">
 Thanks,<br>
 Robb<br>
 <br>
 <br>
 On Jul 21, 2013, at 3:42 PM, <a href="javascript:;" onclick="_e(event, 'cvml', 'robby@racket-lang.org')">robby@racket-lang.org</a> wrote:<br>
 <br>
 &gt;<br>
 &gt; State changed from "open" to "closed" by robby at Sun, 21 Jul 2013 15:42:50 -0400<br>
 &gt; Reason&gt;&gt;&gt; not a bug<br>
 &gt;<br>
 &gt; I don't mean to say that we don't want your feedback, but I'm closing this PR<br>
 &gt; as this is the best that I think we can do. Feel free to continue the discussion<br>
 &gt; in email if you disagree and I'll revisit.<br>
 &gt;<br>
 &gt;<br>
 &gt; View:<br>
 &gt; &nbsp;<a href="http://bugs.racket-lang.org/query/?cmd=view&amp;pr=13926" target="_blank">http://bugs.racket-lang.org/query/?cmd=view&amp;pr=13926</a><br>
 &gt;<br>
 <br>
 </blockquote></div>
 </blockquote></div><br></body></html>
 --Apple-Mail=_300246A7-51FA-4A21-8321-5A95D3195D2D--
 
 --Apple-Mail=_7C98D71C-AE01-450B-BE4C-B0DA0FFFA29F
 Content-Disposition: attachment;
 	filename=smime.p7s
 Content-Type: application/pkcs7-signature;
 	name=smime.p7s
 Content-Transfer-Encoding: base64
 
 MIAGCSqGSIb3DQEHAqCAMIACAQExCzAJBgUrDgMCGgUAMIAGCSqGSIb3DQEHAQAAoIIMaTCCBi0w
 ggUVoAMCAQICAwVf3zANBgkqhkiG9w0BAQUFADCBjDELMAkGA1UEBhMCSUwxFjAUBgNVBAoTDVN0
 YXJ0Q29tIEx0ZC4xKzApBgNVBAsTIlNlY3VyZSBEaWdpdGFsIENlcnRpZmljYXRlIFNpZ25pbmcx
 ODA2BgNVBAMTL1N0YXJ0Q29tIENsYXNzIDEgUHJpbWFyeSBJbnRlcm1lZGlhdGUgQ2xpZW50IENB
 MB4XDTEyMTEyNjE0MTE0N1oXDTEzMTEyNzE5NTQ0MVowTzEZMBcGA1UEDRMQMDIxaUg3ckJSdGhN
 Q2FJMTEVMBMGA1UEAwwMcm9iYkBubmUubmV0MRswGQYJKoZIhvcNAQkBFgxyb2JiQG5uZS5uZXQw
 ggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDFcniysqBMBh7FX1+HbkTg6S/QhQ+Btp8p
 5Rp25JuFH2o3vn0Xt/YuiKxFFdfj1Zk6GlajgW8H21AzkKhnM0dw+he2RC4fspZBGUE6pP3e5cLU
 8bG1cAX6nATCqg0z5c8ymFflDZ3yBvlbLCNjeS+sROf2/DYamwcOS5UwE2J+oeU8NGwGDfzpABqv
 tiNs+3PtzMQHnftsMI2TvIsyd5qHcr0olxJZskVqHE+ar0Puqb4KqbLJ7Lc817NkTYcXvUuUZbHy
 6a5/k5b/w2pSppt1r13iquxgNfR7pGdT+vwLzCclEig3AYY1cgdbKLFLgQAJE0HVcGI+irR2gSrw
 5LBfAgMBAAGjggLSMIICzjAJBgNVHRMEAjAAMAsGA1UdDwQEAwIEsDAdBgNVHSUEFjAUBggrBgEF
 BQcDAgYIKwYBBQUHAwQwHQYDVR0OBBYEFDUMtadiFMFbUacdjwDm4o/oGtQ/MB8GA1UdIwQYMBaA
 FFNy7ZKc4NrLAVx8fpY1TvLUuFGCMBcGA1UdEQQQMA6BDHJvYmJAbm5lLm5ldDCCAUwGA1UdIASC
 AUMwggE/MIIBOwYLKwYBBAGBtTcBAgMwggEqMC4GCCsGAQUFBwIBFiJodHRwOi8vd3d3LnN0YXJ0
 c3NsLmNvbS9wb2xpY3kucGRmMIH3BggrBgEFBQcCAjCB6jAnFiBTdGFydENvbSBDZXJ0aWZpY2F0
 aW9uIEF1dGhvcml0eTADAgEBGoG+VGhpcyBjZXJ0aWZpY2F0ZSB3YXMgaXNzdWVkIGFjY29yZGlu
 ZyB0byB0aGUgQ2xhc3MgMSBWYWxpZGF0aW9uIHJlcXVpcmVtZW50cyBvZiB0aGUgU3RhcnRDb20g
 Q0EgcG9saWN5LCByZWxpYW5jZSBvbmx5IGZvciB0aGUgaW50ZW5kZWQgcHVycG9zZSBpbiBjb21w
 bGlhbmNlIG9mIHRoZSByZWx5aW5nIHBhcnR5IG9ibGlnYXRpb25zLjA2BgNVHR8ELzAtMCugKaAn
 hiVodHRwOi8vY3JsLnN0YXJ0c3NsLmNvbS9jcnR1MS1jcmwuY3JsMIGOBggrBgEFBQcBAQSBgTB/
 MDkGCCsGAQUFBzABhi1odHRwOi8vb2NzcC5zdGFydHNzbC5jb20vc3ViL2NsYXNzMS9jbGllbnQv
 Y2EwQgYIKwYBBQUHMAKGNmh0dHA6Ly9haWEuc3RhcnRzc2wuY29tL2NlcnRzL3N1Yi5jbGFzczEu
 Y2xpZW50LmNhLmNydDAjBgNVHRIEHDAahhhodHRwOi8vd3d3LnN0YXJ0c3NsLmNvbS8wDQYJKoZI
 hvcNAQEFBQADggEBADuXrMKL4JXf3PQtKn1+D3uFAtmiwxaVqosOu6sHSo6NGmMBIko2Zf5PeXrE
 Afrb/rzLbjpf4Mkx+LgueXd3jHeNn4LEodSLaPfMamWFLowsLQVjSSdMJVpl3nmGpyEhra00sx21
 xaisUZs+KsFH2+e8VC1rb6+qERA4Ot+Fepbf9VQk/ymdrf7QQ3LzcAwy4cCiTpA1kVGyFEty8Prg
 +e8S7uHP5N7KKqrcfIlorCy/Gzl6RWpO9PvyGwBTX2unVq6jFScHv5igmqQIfWJ4ZhyV3xehSUr7
 wx9K6pSRbw6ytxtRlrpCNSZaI9SphDPFOHlWjtwFq6S8y3HdO+XQomswggY0MIIEHKADAgECAgEe
 MA0GCSqGSIb3DQEBBQUAMH0xCzAJBgNVBAYTAklMMRYwFAYDVQQKEw1TdGFydENvbSBMdGQuMSsw
 KQYDVQQLEyJTZWN1cmUgRGlnaXRhbCBDZXJ0aWZpY2F0ZSBTaWduaW5nMSkwJwYDVQQDEyBTdGFy
 dENvbSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAeFw0wNzEwMjQyMTAxNTVaFw0xNzEwMjQyMTAx
 NTVaMIGMMQswCQYDVQQGEwJJTDEWMBQGA1UEChMNU3RhcnRDb20gTHRkLjErMCkGA1UECxMiU2Vj
 dXJlIERpZ2l0YWwgQ2VydGlmaWNhdGUgU2lnbmluZzE4MDYGA1UEAxMvU3RhcnRDb20gQ2xhc3Mg
 MSBQcmltYXJ5IEludGVybWVkaWF0ZSBDbGllbnQgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAw
 ggEKAoIBAQDHCYPMzi3YGrEppC4Tq5a+ijKDjKaIQZZVR63UbxIP6uq/I0fhCu+cQhoUfE6ERKKn
 u8zPf1Jwuk0tsvVCk6U9b+0UjM0dLep3ZdE1gblK/1FwYT5Pipsu2yOMluLqwvsuz9/9f1+1PKHG
 /FaR/wpbfuIqu54qzHDYeqiUfsYzoVflR80DAC7hmJ+SmZnNTWyUGHJbBpA8Q89lGxahNvuryGaC
 /o2/ceD2uYDX9U8Eg5DpIpGQdcbQeGarV04WgAUjjXX5r/2dabmtxWMZwhZna//jdiSyrrSMTGKk
 DiXm6/3/4ebfeZuCYKzN2P8O2F/Xe2AC/Y7zeEsnR7FOp+uXAgMBAAGjggGtMIIBqTAPBgNVHRMB
 Af8EBTADAQH/MA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4EFgQUU3Ltkpzg2ssBXHx+ljVO8tS4UYIw
 HwYDVR0jBBgwFoAUTgvvGqRAW6UXaYcwyjRoQ9BBrvIwZgYIKwYBBQUHAQEEWjBYMCcGCCsGAQUF
 BzABhhtodHRwOi8vb2NzcC5zdGFydHNzbC5jb20vY2EwLQYIKwYBBQUHMAKGIWh0dHA6Ly93d3cu
 c3RhcnRzc2wuY29tL3Nmc2NhLmNydDBbBgNVHR8EVDBSMCegJaAjhiFodHRwOi8vd3d3LnN0YXJ0
 c3NsLmNvbS9zZnNjYS5jcmwwJ6AloCOGIWh0dHA6Ly9jcmwuc3RhcnRzc2wuY29tL3Nmc2NhLmNy
 bDCBgAYDVR0gBHkwdzB1BgsrBgEEAYG1NwECATBmMC4GCCsGAQUFBwIBFiJodHRwOi8vd3d3LnN0
 YXJ0c3NsLmNvbS9wb2xpY3kucGRmMDQGCCsGAQUFBwIBFihodHRwOi8vd3d3LnN0YXJ0c3NsLmNv
 bS9pbnRlcm1lZGlhdGUucGRmMA0GCSqGSIb3DQEBBQUAA4ICAQAKgwh9eKssBly4Y4xerhy5I3dN
 oXHYfYa8PlVLL/qtXnkFgdtY1o95CfegFJTwqBBmf8pyTUnFsukDFUI22zF5bVHzuJ+GxhnSqN2s
 D1qetbYwBYK2iyYA5Pg7Er1A+hKMIzEzcduRkIMmCeUTyMyikfbUFvIBivtvkR8ZFAk22BZy+pJf
 AoedO61HTz4qSfQoCRcLN5A0t4DkuVhTMXIzuQ8CnykhExD6x4e6ebIbrjZLb7L+ocR0y4YjCl/P
 d4MXU91y0vTipgr/O75CDUHDRHCCKBVmz/Rzkc/b970MEeHt5LC3NiWTgBSvrLEuVzBKM586YoRD
 9Dy3OHQgWI270g+5MYA8GfgI/EPT5G7xPbCDz+zjdH89PeR3U4So4lSXur6H6vp+m9TQXPF3a0Lw
 Zrp8MQ+Z77U1uL7TelWO5lApsbAonrqASfTpaprFVkL4nyGH+NHST2ZJPWIBk81i6Vw0ny0qZW2N
 iy/QvVNKbb43A43ny076khXO7cNbBIRdJ/6qQNq9Bqb5C0Q5nEsFcj75oxQRqlKf6TcvGbjxkJh8
 BYtv9ePsXklAxtm8J7GCUBthHSQgepbkOexhJ0wP8imUkyiPHQ0GvEnd83129fZjoEhdGwXV27io
 RKbj/cIq7JRXun0NbeY+UdMYu9jGfIpDLtUUGSgsg2zMGs5R4jGCA28wggNrAgEBMIGUMIGMMQsw
 CQYDVQQGEwJJTDEWMBQGA1UEChMNU3RhcnRDb20gTHRkLjErMCkGA1UECxMiU2VjdXJlIERpZ2l0
 YWwgQ2VydGlmaWNhdGUgU2lnbmluZzE4MDYGA1UEAxMvU3RhcnRDb20gQ2xhc3MgMSBQcmltYXJ5
 IEludGVybWVkaWF0ZSBDbGllbnQgQ0ECAwVf3zAJBgUrDgMCGgUAoIIBrzAYBgkqhkiG9w0BCQMx
 CwYJKoZIhvcNAQcBMBwGCSqGSIb3DQEJBTEPFw0xMzA3MjEyMzA5MzhaMCMGCSqGSIb3DQEJBDEW
 BBTEYHHzcj37ku+aBhFF7mKlYVvzdDCBpQYJKwYBBAGCNxAEMYGXMIGUMIGMMQswCQYDVQQGEwJJ
 TDEWMBQGA1UEChMNU3RhcnRDb20gTHRkLjErMCkGA1UECxMiU2VjdXJlIERpZ2l0YWwgQ2VydGlm
 aWNhdGUgU2lnbmluZzE4MDYGA1UEAxMvU3RhcnRDb20gQ2xhc3MgMSBQcmltYXJ5IEludGVybWVk
 aWF0ZSBDbGllbnQgQ0ECAwVf3zCBpwYLKoZIhvcNAQkQAgsxgZeggZQwgYwxCzAJBgNVBAYTAklM
 MRYwFAYDVQQKEw1TdGFydENvbSBMdGQuMSswKQYDVQQLEyJTZWN1cmUgRGlnaXRhbCBDZXJ0aWZp
 Y2F0ZSBTaWduaW5nMTgwNgYDVQQDEy9TdGFydENvbSBDbGFzcyAxIFByaW1hcnkgSW50ZXJtZWRp
 YXRlIENsaWVudCBDQQIDBV/fMA0GCSqGSIb3DQEBAQUABIIBABTZ63xLuZZCll6Swl/XqCmDfQK3
 6eY3EHPBuUAvX/5ghApJBY00qkS68OO8+nUUiSZj46L02xScT0bqKPE7GDuE/WWJ58llZg+cl7Po
 bvQH+pEQFXxc1+s9gku7EIMgx5mW8HZy1Qd2vITkhgCGgx20zj0TQYKavXZZkc+p+TVkzE4gw9L6
 pDT6JEoIvPn3CER/TpN3sGFEohBLb9+ElYKKP4rdxCapwuKgaSZVR14cb7Kk1zIavKOPqGJVJf49
 h93r41dVohJzT5E0sVGzQjzU2ROwT+O+zCbGQGtMNjPJRP8BxoZuqbzTOa2RLK3OSsHipGnDa8qw
 330osf8BYdMAAAAAAAA=
 
 --Apple-Mail=_7C98D71C-AE01-450B-BE4C-B0DA0FFFA29F--
From: Robby Findler <robby@eecs.northwestern.edu>
To: Robb Cutler <robb@nne.net>
Cc: "bugs@racket-lang.org" <bugs@racket-lang.org>,
        "nobody@racket-lang.org" <nobody@racket-lang.org>,
        "bug-notification@racket-lang.org" <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/13926: Seemingly inconsistent behavior placing a
 square into a scene
Date: Sun, 21 Jul 2013 20:43:04 -0500

 --089e01538afc2fa60f04e20fcc4b
 Content-Type: text/plain; charset=UTF-8
 
 On Sun, Jul 21, 2013 at 6:09 PM, Robb Cutler <robb@nne.net> wrote:
 
 >
 > On Jul 21, 2013, at 6:55 PM, Robby Findler wrote:
 >
 >
 >
 > On Sunday, July 21, 2013, Robb Cutler wrote:
 >
 >> Hi Robby -
 >>
 >> Thanks for the quick response.  What is odd is that if I just make the
 >> image, say (square 3 "solid" "black), the image is correct.  It's only when
 >> I place the image in a scene that it ends up not being 3x3.
 >>
 >>
 > This is the same issue. It is because you are placing wrt to the center of
 > the image.
 >
 > Maybe you need to read the "nitty gritty" section of the docs (the one
 > about pixels)?
 >
 >
 > I did...  I understand why outline shapes act the way they do, but it
 > doesn't address solid shapes (except to say that you get exactly n^2 pixels
 > colored in as one would expect).
 >
 > I think you might want to read again the parts that explain how
 coordinates work and think about your example in that light.
 
 Anyway, I guess this is the function you are looking for.
 
 ;; pt-at-xy : image nat nat -> image
 ;; puts a single black dot at (x,y)
 (define (pt-at-xy img x y)
   (underlay/xy img x y (square 1 'solid "black")))
 
 
 
 
 >
 >
 >> What I really want to do is to set individual pixels.  Obviously, making
 >> a 1x1 square doesn't work.  Any suggestions as to how I could do this?
 >>
 >>
 > That will work. Just place them properly. Hopefully the docs will help you
 > understand how.
 >
 >
 > Can you give me an example?  I'm not sure what you mean.
 >
 >
 >
 > But why do you want to do this?
 >
 >
 > I'm working with some students on building a graphics library from scratch
 > (where all they get is a set-pixel function).
 >
 > - Robb
 >
 >
 >
 >
 > Robby
 >
 >
 >> Thanks,
 >> Robb
 >>
 >>
 >> On Jul 21, 2013, at 3:42 PM, robby@racket-lang.org wrote:
 >>
 >> >
 >> > State changed from "open" to "closed" by robby at Sun, 21 Jul 2013
 >> 15:42:50 -0400
 >> > Reason>>> not a bug
 >> >
 >> > I don't mean to say that we don't want your feedback, but I'm closing
 >> this PR
 >> > as this is the best that I think we can do. Feel free to continue the
 >> discussion
 >> > in email if you disagree and I'll revisit.
 >> >
 >> >
 >> > View:
 >> >  http://bugs.racket-lang.org/query/?cmd=view&pr=13926
 >> >
 >>
 >>
 >
 
 --089e01538afc2fa60f04e20fcc4b
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 <div dir=3D"ltr"><br><div class=3D"gmail_extra"><br><br><div class=3D"gmail=
 _quote">On Sun, Jul 21, 2013 at 6:09 PM, Robb Cutler <span dir=3D"ltr">&lt;=
 <a href=3D"mailto:robb@nne.net" target=3D"_blank">robb@nne.net</a>&gt;</spa=
 n> wrote:<br>
 <blockquote class=3D"gmail_quote" style=3D"margin:0px 0px 0px 0.8ex;border-=
 left-width:1px;border-left-color:rgb(204,204,204);border-left-style:solid;p=
 adding-left:1ex"><div style=3D"word-wrap:break-word"><br><div><div class=3D=
 "im">
 <div>On Jul 21, 2013, at 6:55 PM, Robby Findler wrote:</div><br><blockquote=
  type=3D"cite"><br><br>On Sunday, July 21, 2013, Robb Cutler  wrote:<br><bl=
 ockquote class=3D"gmail_quote" style=3D"margin:0px 0px 0px 0.8ex;border-lef=
 t-width:1px;border-left-color:rgb(204,204,204);border-left-style:solid;padd=
 ing-left:1ex">
 Hi Robby -<br>
 <br>
 Thanks for the quick response. =C2=A0What is odd is that if I just make the=
  image, say (square 3 &quot;solid&quot; &quot;black), the image is correct.=
  =C2=A0It&#39;s only when I place the image in a scene that it ends up not =
 being 3x3.<br>
 
 
 <br></blockquote><div><br></div>This is the same issue. It is because you a=
 re placing wrt to the center of the image.=C2=A0<div><br></div><div>Maybe y=
 ou need to read the &quot;nitty gritty&quot; section of the docs (the one a=
 bout pixels)?<br>
 </div></blockquote><div><br></div></div>I did... =C2=A0I understand why out=
 line shapes act the way they do, but it doesn&#39;t address solid shapes (e=
 xcept to say that you get exactly n^2 pixels colored in as one would expect=
 ).</div>
 <div><br></div><div><div class=3D"im"><blockquote type=3D"cite"><div>
 <div></div></div></blockquote></div></div></div></blockquote><div>I think y=
 ou might want to read again the parts that explain how coordinates work and=
  think about your example in that light.</div><div><br></div><div>Anyway, I=
  guess this is the function you are looking for.</div>
 <div><br></div><div><div>;; pt-at-xy : image nat nat -&gt; image</div><div>=
 ;; puts a single black dot at (x,y)</div><div>(define (pt-at-xy img x y)</d=
 iv><div>=C2=A0 (underlay/xy img x y (square 1 &#39;solid &quot;black&quot;)=
 ))</div>
 </div><div><br></div><div><br></div><div>=C2=A0</div><blockquote class=3D"g=
 mail_quote" style=3D"margin:0px 0px 0px 0.8ex;border-left-width:1px;border-=
 left-color:rgb(204,204,204);border-left-style:solid;padding-left:1ex"><div =
 style=3D"word-wrap:break-word">
 <div><div class=3D"im"><blockquote type=3D"cite"><div><div>=C2=A0</div><blo=
 ckquote class=3D"gmail_quote" style=3D"margin:0px 0px 0px 0.8ex;border-left=
 -width:1px;border-left-color:rgb(204,204,204);border-left-style:solid;paddi=
 ng-left:1ex">
 
 What I really want to do is to set individual pixels. =C2=A0Obviously, maki=
 ng a 1x1 square doesn&#39;t work. =C2=A0Any suggestions as to how I could d=
 o this?<br>
 <br></blockquote><div><br></div><div>That will work. Just place them proper=
 ly. Hopefully the docs will help you understand how.=C2=A0</div></div></blo=
 ckquote><div><br></div></div>Can you give me an example? =C2=A0I&#39;m not =
 sure what you mean.</div>
 <div><br></div><div><div class=3D"im"><br><blockquote type=3D"cite"><div><d=
 iv><span></span></div><div><br></div><div>But why do you want to do this?</=
 div></div></blockquote><div><br></div></div>I&#39;m working with some stude=
 nts on building a graphics library from scratch (where all they get is a se=
 t-pixel function).</div>
 <span class=3D""><font color=3D"#888888"><div><br></div><div>- Robb</div></=
 font></span><div class=3D"im"><div><br></div><div><br></div><div><br><block=
 quote type=3D"cite"><div><div><br></div><div>
 Robby</div><div>=C2=A0</div><blockquote class=3D"gmail_quote" style=3D"marg=
 in:0px 0px 0px 0.8ex;border-left-width:1px;border-left-color:rgb(204,204,20=
 4);border-left-style:solid;padding-left:1ex">
 Thanks,<br>
 Robb<br>
 <br>
 <br>
 On Jul 21, 2013, at 3:42 PM, <a>robby@racket-lang.org</a> wrote:<br>
 <br>
 &gt;<br>
 &gt; State changed from &quot;open&quot; to &quot;closed&quot; by robby at =
 Sun, 21 Jul 2013 15:42:50 -0400<br>
 &gt; Reason&gt;&gt;&gt; not a bug<br>
 &gt;<br>
 &gt; I don&#39;t mean to say that we don&#39;t want your feedback, but I&#3=
 9;m closing this PR<br>
 &gt; as this is the best that I think we can do. Feel free to continue the =
 discussion<br>
 &gt; in email if you disagree and I&#39;ll revisit.<br>
 &gt;<br>
 &gt;<br>
 &gt; View:<br>
 &gt; =C2=A0<a href=3D"http://bugs.racket-lang.org/query/?cmd=3Dview&amp;pr=
 =3D13926" target=3D"_blank">http://bugs.racket-lang.org/query/?cmd=3Dview&a=
 mp;pr=3D13926</a><br>
 &gt;<br>
 <br>
 </blockquote></div>
 </blockquote></div><br></div></div></blockquote></div><br></div></div>
 
 --089e01538afc2fa60f04e20fcc4b--
From: =?UTF-8?Q?Jens_Axel_S=C3=B8gaard?= <jensaxel@soegaard.net>
To: Robb Cutler <robb@nne.net>
Cc: bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org, robby@racket-lang.org
Subject: Re: [racket-bug] all/13926: Seemingly inconsistent behavior placing a
 square into a scene
Date: Mon, 22 Jul 2013 11:51:00 +0200

 --bcaec52c67cf32175504e2169d03
 Content-Type: text/plain; charset=UTF-8
 
 Hi Robb,
 
 2013/7/22 Robb Cutler <robb@nne.net>
 
 > Hi Robby -
 >
 > Thanks for the quick response.  What is odd is that if I just make the
 > image, say (square 3 "solid" "black), the image is correct.  It's only when
 > I place the image in a scene that it ends up not being 3x3.
 >
 > What I really want to do is to set individual pixels.  Obviously, making a
 > 1x1 square doesn't work.  Any suggestions as to how I could do this?
 >
 
 The pixel at (10,10) consists logically of all the point in the square
 whose upper left corner is (10,10) and lower right corner is (11,11).
 To draw a pixel at that location, we must use a pen. If the width of
 the pen is 1, then we must draw a dot in the center of the pixel
 in order to stay within the pixel. If we draw outside, antializing kicks
 in, as you observed.
 
 Compare:
 
 (place-image (square 3 'solid "black") 10 10 (empty-scene 20 20))
 (place-image (square 3 'solid "black") 10.5 10.5 (empty-scene 20 20))
 (place-image (square 3 'solid "black") 11 11 (empty-scene 20 20))
 (place-image (square 3 'solid "black") 11.5 11.5 (empty-scene 20 20))
 
 At first it looks odd, that the drawing operations work like this.
 The reason is that the underlying toolkit works with both vector based
 and bitmap based image formats. For most purposes the 2htdp/image
 teachpack works as expected, but for lines (and the border of a square
 is drawn with lines) one sees the difference.
 
 What complicates things is that there are two drawing modes in
 the toolkit used to implement 2htdp/images namely aligned and
 smoothed. I believe the 2htdp/images teachpack mostly uses
 the aligned mode.
 
 http://docs.racket-lang.org/draw/overview.html?q=racket/draw
 http://docs.racket-lang.org/teachpack/2htdpimage-guide.html?q=nitty%20gritty&q=racket/draw#(part._nitty-gritty)
 
 /Jens Axel
 
 --bcaec52c67cf32175504e2169d03
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 <div>Hi Robb,</div><div><br></div>2013/7/22 Robb Cutler <span dir=3D"ltr">&=
 lt;<a href=3D"mailto:robb@nne.net" target=3D"_blank">robb@nne.net</a>&gt;</=
 span><br><div class=3D"gmail_quote"><blockquote class=3D"gmail_quote" style=
 =3D"margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">
 Hi Robby -<br>
 <br>
 Thanks for the quick response. =C2=A0What is odd is that if I just make the=
  image, say (square 3 &quot;solid&quot; &quot;black), the image is correct.=
  =C2=A0It&#39;s only when I place the image in a scene that it ends up not =
 being 3x3.<br>
 
 <br>
 What I really want to do is to set individual pixels. =C2=A0Obviously, maki=
 ng a 1x1 square doesn&#39;t work. =C2=A0Any suggestions as to how I could d=
 o this?<br></blockquote><div><br></div><div>The pixel at (10,10) consists l=
 ogically of all the point in the square</div>
 <div>whose upper left corner is (10,10) and lower right corner is (11,11).<=
 /div><div>To draw a pixel at that location, we must use a pen. If the width=
  of</div><div>the pen is 1, then we must draw a dot in the center of the pi=
 xel</div>
 <div>in order to stay within the pixel. If we draw outside, antializing kic=
 ks</div><div>in, as you observed.</div><div><br></div><div>Compare:</div><d=
 iv><br></div><div>(place-image (square 3 &#39;solid &quot;black&quot;) 10 1=
 0 (empty-scene 20 20))</div>
 <div>(place-image (square 3 &#39;solid &quot;black&quot;) 10.5 10.5 (empty-=
 scene 20 20))</div><div>(place-image (square 3 &#39;solid &quot;black&quot;=
 ) 11 11 (empty-scene 20 20))</div><div>(place-image (square 3 &#39;solid &q=
 uot;black&quot;) 11.5 11.5 (empty-scene 20 20))</div>
 <div><br></div><div>At first it looks odd, that the drawing operations work=
  like this.</div><div>The reason is that the underlying toolkit works with =
 both vector based</div><div>and bitmap based image formats. For most purpos=
 es the 2htdp/image</div>
 <div>teachpack works as expected, but for lines (and the border of a square=
 </div><div>is drawn with lines) one sees the difference.</div><div><br></di=
 v><div>What complicates things is that there are two drawing modes in</div>
 <div>the toolkit used to implement 2htdp/images namely aligned and</div><di=
 v>smoothed. I believe the 2htdp/images teachpack mostly uses</div><div>the =
 aligned mode.</div><div><br></div><div><a href=3D"http://docs.racket-lang.o=
 rg/draw/overview.html?q=3Dracket/draw">http://docs.racket-lang.org/draw/ove=
 rview.html?q=3Dracket/draw</a></div>
 <div><a href=3D"http://docs.racket-lang.org/teachpack/2htdpimage-guide.html=
 ?q=3Dnitty%20gritty&amp;q=3Dracket/draw#(part._nitty-gritty)">http://docs.r=
 acket-lang.org/teachpack/2htdpimage-guide.html?q=3Dnitty%20gritty&amp;q=3Dr=
 acket/draw#(part._nitty-gritty)</a></div>
 <div><br></div><div>/Jens Axel</div><div><br></div><div><br></div></div>
 
 --bcaec52c67cf32175504e2169d03--
From: Robb Cutler <robb@nne.net>
To: =?iso-8859-1?Q?Jens_Axel_S=F8gaard?= <jensaxel@soegaard.net>
Cc: bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org, robby@racket-lang.org
Subject: Re: [racket-bug] all/13926: Seemingly inconsistent behavior placing a square into a scene
Date: Mon, 22 Jul 2013 08:28:55 -0400

 --Apple-Mail=_231AD41C-DC87-4EAE-87C5-9A5FE6E61AE5
 Content-Transfer-Encoding: quoted-printable
 Content-Type: text/plain;
 	charset=iso-8859-1
 
 Hi Jens -
 
 On Jul 22, 2013, at 5:51 AM, Jens Axel S=F8gaard wrote:
 
 > Hi Robb,
 >=20
 >=20
 > The pixel at (10,10) consists logically of all the point in the square
 > whose upper left corner is (10,10) and lower right corner is (11,11).
 > To draw a pixel at that location, we must use a pen. If the width of
 > the pen is 1, then we must draw a dot in the center of the pixel
 > in order to stay within the pixel. If we draw outside, antializing =
 kicks
 > in, as you observed.
 >=20
 > Compare:
 >=20
 > (place-image (square 3 'solid "black") 10 10 (empty-scene 20 20))
 > (place-image (square 3 'solid "black") 10.5 10.5 (empty-scene 20 20))
 > (place-image (square 3 'solid "black") 11 11 (empty-scene 20 20))
 > (place-image (square 3 'solid "black") 11.5 11.5 (empty-scene 20 20))
 
 This makes sense...  except that if I change the size of the square to =
 4, then the antialiasing behavior kicks in on the second and fourth =
 lines.  Why should the behavior be different when the side of the square =
 is even than when the side of the square is odd?
 
 Thanks,
 Robb
 
 
 
 --Apple-Mail=_231AD41C-DC87-4EAE-87C5-9A5FE6E61AE5
 Content-Disposition: attachment;
 	filename=smime.p7s
 Content-Type: application/pkcs7-signature;
 	name=smime.p7s
 Content-Transfer-Encoding: base64
 
 MIAGCSqGSIb3DQEHAqCAMIACAQExCzAJBgUrDgMCGgUAMIAGCSqGSIb3DQEHAQAAoIIMaTCCBi0w
 ggUVoAMCAQICAwVf3zANBgkqhkiG9w0BAQUFADCBjDELMAkGA1UEBhMCSUwxFjAUBgNVBAoTDVN0
 YXJ0Q29tIEx0ZC4xKzApBgNVBAsTIlNlY3VyZSBEaWdpdGFsIENlcnRpZmljYXRlIFNpZ25pbmcx
 ODA2BgNVBAMTL1N0YXJ0Q29tIENsYXNzIDEgUHJpbWFyeSBJbnRlcm1lZGlhdGUgQ2xpZW50IENB
 MB4XDTEyMTEyNjE0MTE0N1oXDTEzMTEyNzE5NTQ0MVowTzEZMBcGA1UEDRMQMDIxaUg3ckJSdGhN
 Q2FJMTEVMBMGA1UEAwwMcm9iYkBubmUubmV0MRswGQYJKoZIhvcNAQkBFgxyb2JiQG5uZS5uZXQw
 ggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDFcniysqBMBh7FX1+HbkTg6S/QhQ+Btp8p
 5Rp25JuFH2o3vn0Xt/YuiKxFFdfj1Zk6GlajgW8H21AzkKhnM0dw+he2RC4fspZBGUE6pP3e5cLU
 8bG1cAX6nATCqg0z5c8ymFflDZ3yBvlbLCNjeS+sROf2/DYamwcOS5UwE2J+oeU8NGwGDfzpABqv
 tiNs+3PtzMQHnftsMI2TvIsyd5qHcr0olxJZskVqHE+ar0Puqb4KqbLJ7Lc817NkTYcXvUuUZbHy
 6a5/k5b/w2pSppt1r13iquxgNfR7pGdT+vwLzCclEig3AYY1cgdbKLFLgQAJE0HVcGI+irR2gSrw
 5LBfAgMBAAGjggLSMIICzjAJBgNVHRMEAjAAMAsGA1UdDwQEAwIEsDAdBgNVHSUEFjAUBggrBgEF
 BQcDAgYIKwYBBQUHAwQwHQYDVR0OBBYEFDUMtadiFMFbUacdjwDm4o/oGtQ/MB8GA1UdIwQYMBaA
 FFNy7ZKc4NrLAVx8fpY1TvLUuFGCMBcGA1UdEQQQMA6BDHJvYmJAbm5lLm5ldDCCAUwGA1UdIASC
 AUMwggE/MIIBOwYLKwYBBAGBtTcBAgMwggEqMC4GCCsGAQUFBwIBFiJodHRwOi8vd3d3LnN0YXJ0
 c3NsLmNvbS9wb2xpY3kucGRmMIH3BggrBgEFBQcCAjCB6jAnFiBTdGFydENvbSBDZXJ0aWZpY2F0
 aW9uIEF1dGhvcml0eTADAgEBGoG+VGhpcyBjZXJ0aWZpY2F0ZSB3YXMgaXNzdWVkIGFjY29yZGlu
 ZyB0byB0aGUgQ2xhc3MgMSBWYWxpZGF0aW9uIHJlcXVpcmVtZW50cyBvZiB0aGUgU3RhcnRDb20g
 Q0EgcG9saWN5LCByZWxpYW5jZSBvbmx5IGZvciB0aGUgaW50ZW5kZWQgcHVycG9zZSBpbiBjb21w
 bGlhbmNlIG9mIHRoZSByZWx5aW5nIHBhcnR5IG9ibGlnYXRpb25zLjA2BgNVHR8ELzAtMCugKaAn
 hiVodHRwOi8vY3JsLnN0YXJ0c3NsLmNvbS9jcnR1MS1jcmwuY3JsMIGOBggrBgEFBQcBAQSBgTB/
 MDkGCCsGAQUFBzABhi1odHRwOi8vb2NzcC5zdGFydHNzbC5jb20vc3ViL2NsYXNzMS9jbGllbnQv
 Y2EwQgYIKwYBBQUHMAKGNmh0dHA6Ly9haWEuc3RhcnRzc2wuY29tL2NlcnRzL3N1Yi5jbGFzczEu
 Y2xpZW50LmNhLmNydDAjBgNVHRIEHDAahhhodHRwOi8vd3d3LnN0YXJ0c3NsLmNvbS8wDQYJKoZI
 hvcNAQEFBQADggEBADuXrMKL4JXf3PQtKn1+D3uFAtmiwxaVqosOu6sHSo6NGmMBIko2Zf5PeXrE
 Afrb/rzLbjpf4Mkx+LgueXd3jHeNn4LEodSLaPfMamWFLowsLQVjSSdMJVpl3nmGpyEhra00sx21
 xaisUZs+KsFH2+e8VC1rb6+qERA4Ot+Fepbf9VQk/ymdrf7QQ3LzcAwy4cCiTpA1kVGyFEty8Prg
 +e8S7uHP5N7KKqrcfIlorCy/Gzl6RWpO9PvyGwBTX2unVq6jFScHv5igmqQIfWJ4ZhyV3xehSUr7
 wx9K6pSRbw6ytxtRlrpCNSZaI9SphDPFOHlWjtwFq6S8y3HdO+XQomswggY0MIIEHKADAgECAgEe
 MA0GCSqGSIb3DQEBBQUAMH0xCzAJBgNVBAYTAklMMRYwFAYDVQQKEw1TdGFydENvbSBMdGQuMSsw
 KQYDVQQLEyJTZWN1cmUgRGlnaXRhbCBDZXJ0aWZpY2F0ZSBTaWduaW5nMSkwJwYDVQQDEyBTdGFy
 dENvbSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAeFw0wNzEwMjQyMTAxNTVaFw0xNzEwMjQyMTAx
 NTVaMIGMMQswCQYDVQQGEwJJTDEWMBQGA1UEChMNU3RhcnRDb20gTHRkLjErMCkGA1UECxMiU2Vj
 dXJlIERpZ2l0YWwgQ2VydGlmaWNhdGUgU2lnbmluZzE4MDYGA1UEAxMvU3RhcnRDb20gQ2xhc3Mg
 MSBQcmltYXJ5IEludGVybWVkaWF0ZSBDbGllbnQgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAw
 ggEKAoIBAQDHCYPMzi3YGrEppC4Tq5a+ijKDjKaIQZZVR63UbxIP6uq/I0fhCu+cQhoUfE6ERKKn
 u8zPf1Jwuk0tsvVCk6U9b+0UjM0dLep3ZdE1gblK/1FwYT5Pipsu2yOMluLqwvsuz9/9f1+1PKHG
 /FaR/wpbfuIqu54qzHDYeqiUfsYzoVflR80DAC7hmJ+SmZnNTWyUGHJbBpA8Q89lGxahNvuryGaC
 /o2/ceD2uYDX9U8Eg5DpIpGQdcbQeGarV04WgAUjjXX5r/2dabmtxWMZwhZna//jdiSyrrSMTGKk
 DiXm6/3/4ebfeZuCYKzN2P8O2F/Xe2AC/Y7zeEsnR7FOp+uXAgMBAAGjggGtMIIBqTAPBgNVHRMB
 Af8EBTADAQH/MA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4EFgQUU3Ltkpzg2ssBXHx+ljVO8tS4UYIw
 HwYDVR0jBBgwFoAUTgvvGqRAW6UXaYcwyjRoQ9BBrvIwZgYIKwYBBQUHAQEEWjBYMCcGCCsGAQUF
 BzABhhtodHRwOi8vb2NzcC5zdGFydHNzbC5jb20vY2EwLQYIKwYBBQUHMAKGIWh0dHA6Ly93d3cu
 c3RhcnRzc2wuY29tL3Nmc2NhLmNydDBbBgNVHR8EVDBSMCegJaAjhiFodHRwOi8vd3d3LnN0YXJ0
 c3NsLmNvbS9zZnNjYS5jcmwwJ6AloCOGIWh0dHA6Ly9jcmwuc3RhcnRzc2wuY29tL3Nmc2NhLmNy
 bDCBgAYDVR0gBHkwdzB1BgsrBgEEAYG1NwECATBmMC4GCCsGAQUFBwIBFiJodHRwOi8vd3d3LnN0
 YXJ0c3NsLmNvbS9wb2xpY3kucGRmMDQGCCsGAQUFBwIBFihodHRwOi8vd3d3LnN0YXJ0c3NsLmNv
 bS9pbnRlcm1lZGlhdGUucGRmMA0GCSqGSIb3DQEBBQUAA4ICAQAKgwh9eKssBly4Y4xerhy5I3dN
 oXHYfYa8PlVLL/qtXnkFgdtY1o95CfegFJTwqBBmf8pyTUnFsukDFUI22zF5bVHzuJ+GxhnSqN2s
 D1qetbYwBYK2iyYA5Pg7Er1A+hKMIzEzcduRkIMmCeUTyMyikfbUFvIBivtvkR8ZFAk22BZy+pJf
 AoedO61HTz4qSfQoCRcLN5A0t4DkuVhTMXIzuQ8CnykhExD6x4e6ebIbrjZLb7L+ocR0y4YjCl/P
 d4MXU91y0vTipgr/O75CDUHDRHCCKBVmz/Rzkc/b970MEeHt5LC3NiWTgBSvrLEuVzBKM586YoRD
 9Dy3OHQgWI270g+5MYA8GfgI/EPT5G7xPbCDz+zjdH89PeR3U4So4lSXur6H6vp+m9TQXPF3a0Lw
 Zrp8MQ+Z77U1uL7TelWO5lApsbAonrqASfTpaprFVkL4nyGH+NHST2ZJPWIBk81i6Vw0ny0qZW2N
 iy/QvVNKbb43A43ny076khXO7cNbBIRdJ/6qQNq9Bqb5C0Q5nEsFcj75oxQRqlKf6TcvGbjxkJh8
 BYtv9ePsXklAxtm8J7GCUBthHSQgepbkOexhJ0wP8imUkyiPHQ0GvEnd83129fZjoEhdGwXV27io
 RKbj/cIq7JRXun0NbeY+UdMYu9jGfIpDLtUUGSgsg2zMGs5R4jGCA28wggNrAgEBMIGUMIGMMQsw
 CQYDVQQGEwJJTDEWMBQGA1UEChMNU3RhcnRDb20gTHRkLjErMCkGA1UECxMiU2VjdXJlIERpZ2l0
 YWwgQ2VydGlmaWNhdGUgU2lnbmluZzE4MDYGA1UEAxMvU3RhcnRDb20gQ2xhc3MgMSBQcmltYXJ5
 IEludGVybWVkaWF0ZSBDbGllbnQgQ0ECAwVf3zAJBgUrDgMCGgUAoIIBrzAYBgkqhkiG9w0BCQMx
 CwYJKoZIhvcNAQcBMBwGCSqGSIb3DQEJBTEPFw0xMzA3MjIxMjI4NTZaMCMGCSqGSIb3DQEJBDEW
 BBRWg62tUGFZr+K2TD4YGeQU5BwZejCBpQYJKwYBBAGCNxAEMYGXMIGUMIGMMQswCQYDVQQGEwJJ
 TDEWMBQGA1UEChMNU3RhcnRDb20gTHRkLjErMCkGA1UECxMiU2VjdXJlIERpZ2l0YWwgQ2VydGlm
 aWNhdGUgU2lnbmluZzE4MDYGA1UEAxMvU3RhcnRDb20gQ2xhc3MgMSBQcmltYXJ5IEludGVybWVk
 aWF0ZSBDbGllbnQgQ0ECAwVf3zCBpwYLKoZIhvcNAQkQAgsxgZeggZQwgYwxCzAJBgNVBAYTAklM
 MRYwFAYDVQQKEw1TdGFydENvbSBMdGQuMSswKQYDVQQLEyJTZWN1cmUgRGlnaXRhbCBDZXJ0aWZp
 Y2F0ZSBTaWduaW5nMTgwNgYDVQQDEy9TdGFydENvbSBDbGFzcyAxIFByaW1hcnkgSW50ZXJtZWRp
 YXRlIENsaWVudCBDQQIDBV/fMA0GCSqGSIb3DQEBAQUABIIBAFAEhHBMNzm3Aq5UES04hTqqZbtp
 g2nlqJYLBqHsjjDaDAmevHSrP1DmO/7e7YOfw51O2yOu1mqa0Sm1MhwQj0jKGQqwv/ZHDOJT6UvP
 qB+Fy4vL+AQYC+dl3nE6J4J2GCcTWjS5lulkCs3H3+WlRKIcdjB2uQiV6Mg7eTlctSPT97SMrT19
 o5kTVIjuKDdTOwTFNUE7VXDhtOiLPLgTRIa+DZCZ23/CAyoJDGtVt4gd/dngJJShUEvjNGRvVloO
 V6RtrxQ1hfDhUjuDlRvBKBmNKs/MV5VewTzlXHKFM83vnsSV3s0OaLmRjqdXTyiTGL/0DV6W8XmY
 QefgA7JSdA0AAAAAAAA=
 
 --Apple-Mail=_231AD41C-DC87-4EAE-87C5-9A5FE6E61AE5--
From: Robby Findler <robby@eecs.northwestern.edu>
To: Robb Cutler <robb@nne.net>
Cc: =?UTF-8?Q?Jens_Axel_S=C3=B8gaard?= <jensaxel@soegaard.net>,
        bugs <bugs@racket-lang.org>, nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/13926: Seemingly inconsistent behavior placing a
 square into a scene
Date: Mon, 22 Jul 2013 07:37:47 -0500

 --001a11c2570ea1cf2304e218f1a4
 Content-Type: text/plain; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 Robb: the issue is that when you put an even-sized square in the middle of
 a pixel you will have little bits of the square hanging off the edges.
 
 Does this make sense?
 
 From this, plus the whole "can only turn off and on entire pixels" aspect
 of our graphics hardware means that we get some grey pixels as an attempt
 to simulate a partially turned on black pixel.
 
 Robby
 
 
 
 On Mon, Jul 22, 2013 at 7:28 AM, Robb Cutler <robb@nne.net> wrote:
 
 > Hi Jens -
 >
 > On Jul 22, 2013, at 5:51 AM, Jens Axel S=C3=B8gaard wrote:
 >
 > > Hi Robb,
 > >
 > >
 > > The pixel at (10,10) consists logically of all the point in the square
 > > whose upper left corner is (10,10) and lower right corner is (11,11).
 > > To draw a pixel at that location, we must use a pen. If the width of
 > > the pen is 1, then we must draw a dot in the center of the pixel
 > > in order to stay within the pixel. If we draw outside, antializing kick=
 s
 > > in, as you observed.
 > >
 > > Compare:
 > >
 > > (place-image (square 3 'solid "black") 10 10 (empty-scene 20 20))
 > > (place-image (square 3 'solid "black") 10.5 10.5 (empty-scene 20 20))
 > > (place-image (square 3 'solid "black") 11 11 (empty-scene 20 20))
 > > (place-image (square 3 'solid "black") 11.5 11.5 (empty-scene 20 20))
 >
 > This makes sense...  except that if I change the size of the square to 4,
 > then the antialiasing behavior kicks in on the second and fourth lines.
 >  Why should the behavior be different when the side of the square is even
 > than when the side of the square is odd?
 >
 > Thanks,
 > Robb
 >
 >
 >
 
 --001a11c2570ea1cf2304e218f1a4
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 <div dir=3D"ltr">Robb: the issue is that when you put an even-sized square =
 in the middle of a pixel you will have little bits of the square hanging of=
 f the edges.<div><br></div><div>Does this make sense?</div><div><br></div>
 <div>From this, plus the whole &quot;can only turn off and on entire pixels=
 &quot; aspect of our graphics hardware means that we get some grey pixels a=
 s an attempt to simulate a partially turned on black pixel.</div><div><br>
 </div><div>Robby</div><div><br></div></div><div class=3D"gmail_extra"><br><=
 br><div class=3D"gmail_quote">On Mon, Jul 22, 2013 at 7:28 AM, Robb Cutler =
 <span dir=3D"ltr">&lt;<a href=3D"mailto:robb@nne.net" target=3D"_blank">rob=
 b@nne.net</a>&gt;</span> wrote:<br>
 <blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1p=
 x #ccc solid;padding-left:1ex">Hi Jens -<br>
 <br>
 On Jul 22, 2013, at 5:51 AM, Jens Axel S=C3=B8gaard wrote:<br>
 <br>
 &gt; Hi Robb,<br>
 <div class=3D"im">&gt;<br>
 &gt;<br>
 &gt; The pixel at (10,10) consists logically of all the point in the square=
 <br>
 &gt; whose upper left corner is (10,10) and lower right corner is (11,11).<=
 br>
 &gt; To draw a pixel at that location, we must use a pen. If the width of<b=
 r>
 &gt; the pen is 1, then we must draw a dot in the center of the pixel<br>
 &gt; in order to stay within the pixel. If we draw outside, antializing kic=
 ks<br>
 &gt; in, as you observed.<br>
 &gt;<br>
 &gt; Compare:<br>
 &gt;<br>
 &gt; (place-image (square 3 &#39;solid &quot;black&quot;) 10 10 (empty-scen=
 e 20 20))<br>
 &gt; (place-image (square 3 &#39;solid &quot;black&quot;) 10.5 10.5 (empty-=
 scene 20 20))<br>
 &gt; (place-image (square 3 &#39;solid &quot;black&quot;) 11 11 (empty-scen=
 e 20 20))<br>
 &gt; (place-image (square 3 &#39;solid &quot;black&quot;) 11.5 11.5 (empty-=
 scene 20 20))<br>
 <br>
 </div>This makes sense... =C2=A0except that if I change the size of the squ=
 are to 4, then the antialiasing behavior kicks in on the second and fourth =
 lines. =C2=A0Why should the behavior be different when the side of the squa=
 re is even than when the side of the square is odd?<br>
 
 <br>
 Thanks,<br>
 Robb<br>
 <br>
 <br>
 </blockquote></div><br></div>
 
 --001a11c2570ea1cf2304e218f1a4--
From: Robb Cutler <robb@nne.net>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: =?iso-8859-1?Q?Jens_Axel_S=F8gaard?= <jensaxel@soegaard.net>,
        bugs <bugs@racket-lang.org>, nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/13926: Seemingly inconsistent behavior placing a square into a scene
Date: Mon, 22 Jul 2013 08:54:38 -0400

 --Apple-Mail=_8FA5B79D-5613-47CF-846F-B0C8E634A4A2
 Content-Type: multipart/alternative;
 	boundary="Apple-Mail=_92D18178-0D78-4386-8367-A42C5A4ABCDD"
 
 
 --Apple-Mail=_92D18178-0D78-4386-8367-A42C5A4ABCDD
 Content-Transfer-Encoding: quoted-printable
 Content-Type: text/plain;
 	charset=iso-8859-1
 
 Sorry to be so dense.  I've been working with another graphics library =
 where the images are all oriented from their upper-left corner rather =
 than their center.  Even though I *know* that images are "placed" at a =
 location relative to their centers in Racket, I kept thinking =
 *upper-left*....
 
 Appreciate your patience...
 
 - Robb
 
 
 On Jul 22, 2013, at 8:37 AM, Robby Findler wrote:
 
 > Robb: the issue is that when you put an even-sized square in the =
 middle of a pixel you will have little bits of the square hanging off =
 the edges.
 >=20
 > Does this make sense?
 >=20
 > =46rom this, plus the whole "can only turn off and on entire pixels" =
 aspect of our graphics hardware means that we get some grey pixels as an =
 attempt to simulate a partially turned on black pixel.
 >=20
 > Robby
 >=20
 >=20
 >=20
 > On Mon, Jul 22, 2013 at 7:28 AM, Robb Cutler <robb@nne.net> wrote:
 > Hi Jens -
 >=20
 > On Jul 22, 2013, at 5:51 AM, Jens Axel S=F8gaard wrote:
 >=20
 > > Hi Robb,
 > >
 > >
 > > The pixel at (10,10) consists logically of all the point in the =
 square
 > > whose upper left corner is (10,10) and lower right corner is =
 (11,11).
 > > To draw a pixel at that location, we must use a pen. If the width of
 > > the pen is 1, then we must draw a dot in the center of the pixel
 > > in order to stay within the pixel. If we draw outside, antializing =
 kicks
 > > in, as you observed.
 > >
 > > Compare:
 > >
 > > (place-image (square 3 'solid "black") 10 10 (empty-scene 20 20))
 > > (place-image (square 3 'solid "black") 10.5 10.5 (empty-scene 20 =
 20))
 > > (place-image (square 3 'solid "black") 11 11 (empty-scene 20 20))
 > > (place-image (square 3 'solid "black") 11.5 11.5 (empty-scene 20 =
 20))
 >=20
 > This makes sense...  except that if I change the size of the square to =
 4, then the antialiasing behavior kicks in on the second and fourth =
 lines.  Why should the behavior be different when the side of the square =
 is even than when the side of the square is odd?
 >=20
 > Thanks,
 > Robb
 >=20
 >=20
 >=20
 
 
 --Apple-Mail=_92D18178-0D78-4386-8367-A42C5A4ABCDD
 Content-Transfer-Encoding: quoted-printable
 Content-Type: text/html;
 	charset=iso-8859-1
 
 <html><head></head><body style=3D"word-wrap: break-word; =
 -webkit-nbsp-mode: space; -webkit-line-break: after-white-space; ">Sorry =
 to be so dense. &nbsp;I've been working with another graphics library =
 where the images are all oriented from their upper-left corner rather =
 than their center. &nbsp;Even though I *know* that images are "placed" =
 at a location relative to their centers in Racket, I kept thinking =
 *upper-left*....<div><br></div><div>Appreciate your =
 patience...</div><div><br></div><div>- =
 Robb<br><div><br></div><div><br><div><div>On Jul 22, 2013, at 8:37 AM, =
 Robby Findler wrote:</div><br =
 class=3D"Apple-interchange-newline"><blockquote type=3D"cite"><div =
 dir=3D"ltr">Robb: the issue is that when you put an even-sized square in =
 the middle of a pixel you will have little bits of the square hanging =
 off the edges.<div><br></div><div>Does this make =
 sense?</div><div><br></div>
 <div>=46rom this, plus the whole "can only turn off and on entire =
 pixels" aspect of our graphics hardware means that we get some grey =
 pixels as an attempt to simulate a partially turned on black =
 pixel.</div><div><br>
 </div><div>Robby</div><div><br></div></div><div =
 class=3D"gmail_extra"><br><br><div class=3D"gmail_quote">On Mon, Jul 22, =
 2013 at 7:28 AM, Robb Cutler <span dir=3D"ltr">&lt;<a =
 href=3D"mailto:robb@nne.net" target=3D"_blank">robb@nne.net</a>&gt;</span>=
  wrote:<br>
 <blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 =
 .8ex;border-left:1px #ccc solid;padding-left:1ex">Hi Jens -<br>
 <br>
 On Jul 22, 2013, at 5:51 AM, Jens Axel S=F8gaard wrote:<br>
 <br>
 &gt; Hi Robb,<br>
 <div class=3D"im">&gt;<br>
 &gt;<br>
 &gt; The pixel at (10,10) consists logically of all the point in the =
 square<br>
 &gt; whose upper left corner is (10,10) and lower right corner is =
 (11,11).<br>
 &gt; To draw a pixel at that location, we must use a pen. If the width =
 of<br>
 &gt; the pen is 1, then we must draw a dot in the center of the =
 pixel<br>
 &gt; in order to stay within the pixel. If we draw outside, antializing =
 kicks<br>
 &gt; in, as you observed.<br>
 &gt;<br>
 &gt; Compare:<br>
 &gt;<br>
 &gt; (place-image (square 3 'solid "black") 10 10 (empty-scene 20 =
 20))<br>
 &gt; (place-image (square 3 'solid "black") 10.5 10.5 (empty-scene 20 =
 20))<br>
 &gt; (place-image (square 3 'solid "black") 11 11 (empty-scene 20 =
 20))<br>
 &gt; (place-image (square 3 'solid "black") 11.5 11.5 (empty-scene 20 =
 20))<br>
 <br>
 </div>This makes sense... &nbsp;except that if I change the size of the =
 square to 4, then the antialiasing behavior kicks in on the second and =
 fourth lines. &nbsp;Why should the behavior be different when the side =
 of the square is even than when the side of the square is odd?<br>
 
 <br>
 Thanks,<br>
 Robb<br>
 <br>
 <br>
 </blockquote></div><br></div>
 </blockquote></div><br></div></div></body></html>=
 
 --Apple-Mail=_92D18178-0D78-4386-8367-A42C5A4ABCDD--
 
 --Apple-Mail=_8FA5B79D-5613-47CF-846F-B0C8E634A4A2
 Content-Disposition: attachment;
 	filename=smime.p7s
 Content-Type: application/pkcs7-signature;
 	name=smime.p7s
 Content-Transfer-Encoding: base64
 
 MIAGCSqGSIb3DQEHAqCAMIACAQExCzAJBgUrDgMCGgUAMIAGCSqGSIb3DQEHAQAAoIIMaTCCBi0w
 ggUVoAMCAQICAwVf3zANBgkqhkiG9w0BAQUFADCBjDELMAkGA1UEBhMCSUwxFjAUBgNVBAoTDVN0
 YXJ0Q29tIEx0ZC4xKzApBgNVBAsTIlNlY3VyZSBEaWdpdGFsIENlcnRpZmljYXRlIFNpZ25pbmcx
 ODA2BgNVBAMTL1N0YXJ0Q29tIENsYXNzIDEgUHJpbWFyeSBJbnRlcm1lZGlhdGUgQ2xpZW50IENB
 MB4XDTEyMTEyNjE0MTE0N1oXDTEzMTEyNzE5NTQ0MVowTzEZMBcGA1UEDRMQMDIxaUg3ckJSdGhN
 Q2FJMTEVMBMGA1UEAwwMcm9iYkBubmUubmV0MRswGQYJKoZIhvcNAQkBFgxyb2JiQG5uZS5uZXQw
 ggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDFcniysqBMBh7FX1+HbkTg6S/QhQ+Btp8p
 5Rp25JuFH2o3vn0Xt/YuiKxFFdfj1Zk6GlajgW8H21AzkKhnM0dw+he2RC4fspZBGUE6pP3e5cLU
 8bG1cAX6nATCqg0z5c8ymFflDZ3yBvlbLCNjeS+sROf2/DYamwcOS5UwE2J+oeU8NGwGDfzpABqv
 tiNs+3PtzMQHnftsMI2TvIsyd5qHcr0olxJZskVqHE+ar0Puqb4KqbLJ7Lc817NkTYcXvUuUZbHy
 6a5/k5b/w2pSppt1r13iquxgNfR7pGdT+vwLzCclEig3AYY1cgdbKLFLgQAJE0HVcGI+irR2gSrw
 5LBfAgMBAAGjggLSMIICzjAJBgNVHRMEAjAAMAsGA1UdDwQEAwIEsDAdBgNVHSUEFjAUBggrBgEF
 BQcDAgYIKwYBBQUHAwQwHQYDVR0OBBYEFDUMtadiFMFbUacdjwDm4o/oGtQ/MB8GA1UdIwQYMBaA
 FFNy7ZKc4NrLAVx8fpY1TvLUuFGCMBcGA1UdEQQQMA6BDHJvYmJAbm5lLm5ldDCCAUwGA1UdIASC
 AUMwggE/MIIBOwYLKwYBBAGBtTcBAgMwggEqMC4GCCsGAQUFBwIBFiJodHRwOi8vd3d3LnN0YXJ0
 c3NsLmNvbS9wb2xpY3kucGRmMIH3BggrBgEFBQcCAjCB6jAnFiBTdGFydENvbSBDZXJ0aWZpY2F0
 aW9uIEF1dGhvcml0eTADAgEBGoG+VGhpcyBjZXJ0aWZpY2F0ZSB3YXMgaXNzdWVkIGFjY29yZGlu
 ZyB0byB0aGUgQ2xhc3MgMSBWYWxpZGF0aW9uIHJlcXVpcmVtZW50cyBvZiB0aGUgU3RhcnRDb20g
 Q0EgcG9saWN5LCByZWxpYW5jZSBvbmx5IGZvciB0aGUgaW50ZW5kZWQgcHVycG9zZSBpbiBjb21w
 bGlhbmNlIG9mIHRoZSByZWx5aW5nIHBhcnR5IG9ibGlnYXRpb25zLjA2BgNVHR8ELzAtMCugKaAn
 hiVodHRwOi8vY3JsLnN0YXJ0c3NsLmNvbS9jcnR1MS1jcmwuY3JsMIGOBggrBgEFBQcBAQSBgTB/
 MDkGCCsGAQUFBzABhi1odHRwOi8vb2NzcC5zdGFydHNzbC5jb20vc3ViL2NsYXNzMS9jbGllbnQv
 Y2EwQgYIKwYBBQUHMAKGNmh0dHA6Ly9haWEuc3RhcnRzc2wuY29tL2NlcnRzL3N1Yi5jbGFzczEu
 Y2xpZW50LmNhLmNydDAjBgNVHRIEHDAahhhodHRwOi8vd3d3LnN0YXJ0c3NsLmNvbS8wDQYJKoZI
 hvcNAQEFBQADggEBADuXrMKL4JXf3PQtKn1+D3uFAtmiwxaVqosOu6sHSo6NGmMBIko2Zf5PeXrE
 Afrb/rzLbjpf4Mkx+LgueXd3jHeNn4LEodSLaPfMamWFLowsLQVjSSdMJVpl3nmGpyEhra00sx21
 xaisUZs+KsFH2+e8VC1rb6+qERA4Ot+Fepbf9VQk/ymdrf7QQ3LzcAwy4cCiTpA1kVGyFEty8Prg
 +e8S7uHP5N7KKqrcfIlorCy/Gzl6RWpO9PvyGwBTX2unVq6jFScHv5igmqQIfWJ4ZhyV3xehSUr7
 wx9K6pSRbw6ytxtRlrpCNSZaI9SphDPFOHlWjtwFq6S8y3HdO+XQomswggY0MIIEHKADAgECAgEe
 MA0GCSqGSIb3DQEBBQUAMH0xCzAJBgNVBAYTAklMMRYwFAYDVQQKEw1TdGFydENvbSBMdGQuMSsw
 KQYDVQQLEyJTZWN1cmUgRGlnaXRhbCBDZXJ0aWZpY2F0ZSBTaWduaW5nMSkwJwYDVQQDEyBTdGFy
 dENvbSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAeFw0wNzEwMjQyMTAxNTVaFw0xNzEwMjQyMTAx
 NTVaMIGMMQswCQYDVQQGEwJJTDEWMBQGA1UEChMNU3RhcnRDb20gTHRkLjErMCkGA1UECxMiU2Vj
 dXJlIERpZ2l0YWwgQ2VydGlmaWNhdGUgU2lnbmluZzE4MDYGA1UEAxMvU3RhcnRDb20gQ2xhc3Mg
 MSBQcmltYXJ5IEludGVybWVkaWF0ZSBDbGllbnQgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAw
 ggEKAoIBAQDHCYPMzi3YGrEppC4Tq5a+ijKDjKaIQZZVR63UbxIP6uq/I0fhCu+cQhoUfE6ERKKn
 u8zPf1Jwuk0tsvVCk6U9b+0UjM0dLep3ZdE1gblK/1FwYT5Pipsu2yOMluLqwvsuz9/9f1+1PKHG
 /FaR/wpbfuIqu54qzHDYeqiUfsYzoVflR80DAC7hmJ+SmZnNTWyUGHJbBpA8Q89lGxahNvuryGaC
 /o2/ceD2uYDX9U8Eg5DpIpGQdcbQeGarV04WgAUjjXX5r/2dabmtxWMZwhZna//jdiSyrrSMTGKk
 DiXm6/3/4ebfeZuCYKzN2P8O2F/Xe2AC/Y7zeEsnR7FOp+uXAgMBAAGjggGtMIIBqTAPBgNVHRMB
 Af8EBTADAQH/MA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4EFgQUU3Ltkpzg2ssBXHx+ljVO8tS4UYIw
 HwYDVR0jBBgwFoAUTgvvGqRAW6UXaYcwyjRoQ9BBrvIwZgYIKwYBBQUHAQEEWjBYMCcGCCsGAQUF
 BzABhhtodHRwOi8vb2NzcC5zdGFydHNzbC5jb20vY2EwLQYIKwYBBQUHMAKGIWh0dHA6Ly93d3cu
 c3RhcnRzc2wuY29tL3Nmc2NhLmNydDBbBgNVHR8EVDBSMCegJaAjhiFodHRwOi8vd3d3LnN0YXJ0
 c3NsLmNvbS9zZnNjYS5jcmwwJ6AloCOGIWh0dHA6Ly9jcmwuc3RhcnRzc2wuY29tL3Nmc2NhLmNy
 bDCBgAYDVR0gBHkwdzB1BgsrBgEEAYG1NwECATBmMC4GCCsGAQUFBwIBFiJodHRwOi8vd3d3LnN0
 YXJ0c3NsLmNvbS9wb2xpY3kucGRmMDQGCCsGAQUFBwIBFihodHRwOi8vd3d3LnN0YXJ0c3NsLmNv
 bS9pbnRlcm1lZGlhdGUucGRmMA0GCSqGSIb3DQEBBQUAA4ICAQAKgwh9eKssBly4Y4xerhy5I3dN
 oXHYfYa8PlVLL/qtXnkFgdtY1o95CfegFJTwqBBmf8pyTUnFsukDFUI22zF5bVHzuJ+GxhnSqN2s
 D1qetbYwBYK2iyYA5Pg7Er1A+hKMIzEzcduRkIMmCeUTyMyikfbUFvIBivtvkR8ZFAk22BZy+pJf
 AoedO61HTz4qSfQoCRcLN5A0t4DkuVhTMXIzuQ8CnykhExD6x4e6ebIbrjZLb7L+ocR0y4YjCl/P
 d4MXU91y0vTipgr/O75CDUHDRHCCKBVmz/Rzkc/b970MEeHt5LC3NiWTgBSvrLEuVzBKM586YoRD
 9Dy3OHQgWI270g+5MYA8GfgI/EPT5G7xPbCDz+zjdH89PeR3U4So4lSXur6H6vp+m9TQXPF3a0Lw
 Zrp8MQ+Z77U1uL7TelWO5lApsbAonrqASfTpaprFVkL4nyGH+NHST2ZJPWIBk81i6Vw0ny0qZW2N
 iy/QvVNKbb43A43ny076khXO7cNbBIRdJ/6qQNq9Bqb5C0Q5nEsFcj75oxQRqlKf6TcvGbjxkJh8
 BYtv9ePsXklAxtm8J7GCUBthHSQgepbkOexhJ0wP8imUkyiPHQ0GvEnd83129fZjoEhdGwXV27io
 RKbj/cIq7JRXun0NbeY+UdMYu9jGfIpDLtUUGSgsg2zMGs5R4jGCA28wggNrAgEBMIGUMIGMMQsw
 CQYDVQQGEwJJTDEWMBQGA1UEChMNU3RhcnRDb20gTHRkLjErMCkGA1UECxMiU2VjdXJlIERpZ2l0
 YWwgQ2VydGlmaWNhdGUgU2lnbmluZzE4MDYGA1UEAxMvU3RhcnRDb20gQ2xhc3MgMSBQcmltYXJ5
 IEludGVybWVkaWF0ZSBDbGllbnQgQ0ECAwVf3zAJBgUrDgMCGgUAoIIBrzAYBgkqhkiG9w0BCQMx
 CwYJKoZIhvcNAQcBMBwGCSqGSIb3DQEJBTEPFw0xMzA3MjIxMjU0MzlaMCMGCSqGSIb3DQEJBDEW
 BBRGOZSJ5fmTj1V8BC1CAqYSx+LZgDCBpQYJKwYBBAGCNxAEMYGXMIGUMIGMMQswCQYDVQQGEwJJ
 TDEWMBQGA1UEChMNU3RhcnRDb20gTHRkLjErMCkGA1UECxMiU2VjdXJlIERpZ2l0YWwgQ2VydGlm
 aWNhdGUgU2lnbmluZzE4MDYGA1UEAxMvU3RhcnRDb20gQ2xhc3MgMSBQcmltYXJ5IEludGVybWVk
 aWF0ZSBDbGllbnQgQ0ECAwVf3zCBpwYLKoZIhvcNAQkQAgsxgZeggZQwgYwxCzAJBgNVBAYTAklM
 MRYwFAYDVQQKEw1TdGFydENvbSBMdGQuMSswKQYDVQQLEyJTZWN1cmUgRGlnaXRhbCBDZXJ0aWZp
 Y2F0ZSBTaWduaW5nMTgwNgYDVQQDEy9TdGFydENvbSBDbGFzcyAxIFByaW1hcnkgSW50ZXJtZWRp
 YXRlIENsaWVudCBDQQIDBV/fMA0GCSqGSIb3DQEBAQUABIIBALfzSXUQLafUSk6BO4+sI1D0vG7G
 iWKfnx/0+XcMTYbYhk9RnrlBWjpLA+oEP8jmiQsd63w2tlXX0V8oqdXaUJW2joCyeCLfFhlxeS/a
 LehwP8qmVUkhwYMkBSD/kPunDaVvHRC9P/tSoAtp/vZZ0FjC4uhZ3AjYNewm6ohaOxQ7/O9endsA
 YRNx5UeaA3PvFnSFnlx+vLtscuTWBoy8U8S3YLUrjF6uKDqb5wflF2jHXITDwF0TcYMH3/8XK9G7
 7bmJ3lGqI3iDlRQWy6gKERQ7PrvEWQkxWDnLGa8MnPjUgTis0ojB+X0pO3XZAZxcRjGEwZ+f1SSV
 A5clmPaQ9vYAAAAAAAA=
 
 --Apple-Mail=_8FA5B79D-5613-47CF-846F-B0C8E634A4A2--
