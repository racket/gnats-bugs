From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Tue May  7 16:56:45 2013
Received: from mail-ob0-f175.google.com (mail-ob0-f175.google.com [209.85.214.175])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id r47KugLc010527
	for <bugs@bugs.plt-scheme.org>; Tue, 7 May 2013 16:56:42 -0400
Message-Id: <201305072056.r47KueBD010522@champlain.ccs.neu.edu>
Date: Tue, 7 May 2013 16:56:40 -0400
From: stamourv@ccs.neu.edu
To: bugs@racket-lang.org
Subject: arithmetic-shift out of memory error different on 32 and 64 bits

>Number:         13738
>Category:       all
>Synopsis:       arithmetic-shift out of memory error different on 32 and 64 bits
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Tue May 07 17:00:01 -0400 2013
>Closed-Date:    Wed May 08 11:32:30 -0400 2013
>Last-Modified:  Thu May 09 11:32:01 -0400 2013
>Originator:     Vincent St-Amour
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.3.4.9--2013-05-07(b925ea41/d)
>Environment:
unix "Linux ahuntsic 2.6.38-custom-sisusb #1 SMP Fri Mar 25 11:03:24 EDT 2011 i686 GNU/Linux" (i386-linux/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 173423996
Links: (links) = ("Acquire" "rash" "contract-repl"); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()
raco pkg (show):
Installation-wide:
 [none]
User-specific, all-version:
 [none]
User-specific, version-specific (5.3.4.9):
 [none]



Collections:
("/home/stamourv/src/plt/add-on/5.3.4.9/collects"
 (non-existent-path))
("/home/stamourv/src/plt/collects"
 ("trace" "raco" "scribblings" "scheme" "readline" "typed-scheme" "help" "mzcom" "plot" "info-domain" "mysterx" "math" "config" "picturing-programs" "openssl" "lazy" "teachpack" "planet" "mred" "tex2page" "frtime" "drscheme" "graphics" "at-exp" "slideshow" "hierlist" "errortrace" "sirmail" "compatibility" "framework" "web-server" "lang" "icons" "xml" "scribble" "mzscheme" "racklog" "compiler" "data" "slatex" "htdp" "redex" "s-exp" ".gitignore" "typed-racket" "scriblib" "rackunit" "setup" "tests" "macro-debugger" "images" "stepper" "html" "syntax-color" "gui-debugger" "racket" "defaults" "wxme" "r6rs" "embedded-gui" "deinprogramm" "reader" "net" "launcher" "profile" "drracket" "handin-server" "honu" "algol60" "schemeunit" "srfi" "datalog" "xrepl" "handin-client" "browser" "file" "json" "parser-tools" "dynext" "games" "test-engine" "plai" "planet2" "optimization-coach" "version" "db" "eopl" "repo-time-stamp" "guibuilder" "rnrs" "realm" "texpict" "2htdp" "sgl" "future-visualize!
 r" "swindle" "ffi" "unstable" "mrlib" "make" "r5rs" "meta" "syntax" "mzlib" "pkg" "typed" "preprocessor" "string-constants"))

Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((main) (test))))
>Description:
The attached expression causes `arithmetic-shift' to raise an out of memory error.

On 32-bit Linux, I get the following error which is recoverable:
  arithmetic-shift: out of memory

On 64-bit Linux, I get this other error and the Racket VM crashes:
  Racket virtual machine has run out of memory; aborting

The code which triggered this error was running inside a `call-with-limits' that limited memory use, which made the second error pretty strange.
>How-To-Repeat:
(arithmetic-shift 1 30070458541082)
>Fix:
>Audit-Trail:
Responsible changed from "nobody" to "mflatt" by mflatt@racket-lang.org at Wed, 08 May 2013 11:32:30 -0400
Reason>>> A commit by mflatt@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/7946c73c42
State changed from "open" to "closed" by mflatt@racket-lang.org at Wed, 08 May 2013 11:32:30 -0400
Reason>>> A commit by mflatt@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/7946c73c42
  | avoid a constant folding that can use too much memory
  | 
  | Closes PR 13738

From: Vincent St-Amour <stamourv@ccs.neu.edu>
To: bugs@racket-lang.org
Cc: mflatt@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org, stamourv@ccs.neu.edu
Subject: Re: [racket-bug] all/13738: arithmetic-shift out of memory error different on 32 and 64 bits
Date: Thu, 09 May 2013 10:32:58 -0400

 I still see the inconsistency.
 
 Running this code
 
     (with-handlers ([exn:fail:out-of-memory? void])
       (arithmetic-shift 1 30070458541082))
 
 works fine on 32 bits, but crashes on 64.
 
 The optimization tests all pass on both platforms, though.
 
 Vincent
 
 
 
 At Wed, 8 May 2013 11:32:30 -0400,
 mflatt@racket-lang.org wrote:
 > 
 > 
 > Responsible changed from "nobody" to "mflatt" by mflatt@racket-lang.org at Wed, 08 May 2013 11:32:30 -0400
 > Reason>>> A commit by mflatt@racket-lang.org has resolved this report
 >   http://git.racket-lang.org/plt/commit/7946c73c42
 > State changed from "open" to "closed" by mflatt@racket-lang.org at Wed, 08 May 2013 11:32:30 -0400
 > Reason>>> A commit by mflatt@racket-lang.org has resolved this report
 >   http://git.racket-lang.org/plt/commit/7946c73c42
 >   | avoid a constant folding that can use too much memory
 >   | 
 >   | Closes PR 13738
 > 
 > 
 > View:
 >   http://bugs.racket-lang.org/query/?cmd=view&pr=13738
 > 
From: Matthew Flatt <mflatt@cs.utah.edu>
To: Vincent St-Amour <stamourv@ccs.neu.edu>
Cc: "bugs@racket-lang.org" <bugs@racket-lang.org>,
        "mflatt@racket-lang.org" <mflatt@racket-lang.org>,
        "nobody@racket-lang.org" <nobody@racket-lang.org>,
        "bug-notification@racket-lang.org" <bug-notification@racket-lang.org>,
        "stamourv@ccs.neu.edu" <stamourv@ccs.neu.edu>
Subject: Re: [racket-bug] all/13738: arithmetic-shift out of memory error different on 32 and 64 bits
Date: Thu, 9 May 2013 10:48:28 -0400

 Racket can raise an immediate out-of-memory on 32-bit machines because there's not enough address space to hold the result. Not so on a 64-bit machine, right?
 
 
 
 On May 9, 2013, at 10:32 AM, Vincent St-Amour <stamourv@ccs.neu.edu> wrote:
 
 > I still see the inconsistency.
 > 
 > Running this code
 > 
 >    (with-handlers ([exn:fail:out-of-memory? void])
 >      (arithmetic-shift 1 30070458541082))
 > 
 > works fine on 32 bits, but crashes on 64.
 > 
 > The optimization tests all pass on both platforms, though.
 > 
 > Vincent
 > 
 > 
 > 
 > At Wed, 8 May 2013 11:32:30 -0400,
 > mflatt@racket-lang.org wrote:
 >> 
 >> 
 >> Responsible changed from "nobody" to "mflatt" by mflatt@racket-lang.org at Wed, 08 May 2013 11:32:30 -0400
 >> Reason>>> A commit by mflatt@racket-lang.org has resolved this report
 >>  http://git.racket-lang.org/plt/commit/7946c73c42
 >> State changed from "open" to "closed" by mflatt@racket-lang.org at Wed, 08 May 2013 11:32:30 -0400
 >> Reason>>> A commit by mflatt@racket-lang.org has resolved this report
 >>  http://git.racket-lang.org/plt/commit/7946c73c42
 >>  | avoid a constant folding that can use too much memory
 >>  | 
 >>  | Closes PR 13738
 >> 
 >> 
 >> View:
 >>  http://bugs.racket-lang.org/query/?cmd=view&pr=13738
 >> 
 > 
 
From: Vincent St-Amour <stamourv@ccs.neu.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: Vincent St-Amour <stamourv@ccs.neu.edu>,
        "bugs@racket-lang.org" <bugs@racket-lang.org>,
        "mflatt@racket-lang.org" <mflatt@racket-lang.org>,
        "nobody@racket-lang.org" <nobody@racket-lang.org>,
        "bug-notification@racket-lang.org" <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/13738: arithmetic-shift out of memory error different on 32 and 64 bits
Date: Thu, 09 May 2013 10:57:07 -0400

 Ah, right, that makes sense.
 
 `call-with-limits' can catch the out-of-memory, so everything works.
 
 Thanks!
 
 Vincent
 
 
 At Thu, 9 May 2013 10:48:28 -0400,
 Matthew Flatt wrote:
 > 
 > Racket can raise an immediate out-of-memory on 32-bit machines because there's not enough address space to hold the result. Not so on a 64-bit machine, right?
 > 
 > 
 > 
 > On May 9, 2013, at 10:32 AM, Vincent St-Amour <stamourv@ccs.neu.edu> wrote:
 > 
 > > I still see the inconsistency.
 > > 
 > > Running this code
 > > 
 > >    (with-handlers ([exn:fail:out-of-memory? void])
 > >      (arithmetic-shift 1 30070458541082))
 > > 
 > > works fine on 32 bits, but crashes on 64.
 > > 
 > > The optimization tests all pass on both platforms, though.
 > > 
 > > Vincent
 > > 
 > > 
 > > 
 > > At Wed, 8 May 2013 11:32:30 -0400,
 > > mflatt@racket-lang.org wrote:
 > >> 
 > >> 
 > >> Responsible changed from "nobody" to "mflatt" by mflatt@racket-lang.org at Wed, 08 May 2013 11:32:30 -0400
 > >> Reason>>> A commit by mflatt@racket-lang.org has resolved this report
 > >>  http://git.racket-lang.org/plt/commit/7946c73c42
 > >> State changed from "open" to "closed" by mflatt@racket-lang.org at Wed, 08 May 2013 11:32:30 -0400
 > >> Reason>>> A commit by mflatt@racket-lang.org has resolved this report
 > >>  http://git.racket-lang.org/plt/commit/7946c73c42
 > >>  | avoid a constant folding that can use too much memory
 > >>  | 
 > >>  | Closes PR 13738
 > >> 
 > >> 
 > >> View:
 > >>  http://bugs.racket-lang.org/query/?cmd=view&pr=13738
 > >> 
 > > 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: Vincent St-Amour <stamourv@ccs.neu.edu>,
        "bugs@racket-lang.org" <bugs@racket-lang.org>,
        "mflatt@racket-lang.org" <mflatt@racket-lang.org>,
        "nobody@racket-lang.org" <nobody@racket-lang.org>,
        "bug-notification@racket-lang.org" <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/13738: arithmetic-shift out of memory error
 different on 32 and 64 bits
Date: Thu, 9 May 2013 10:31:38 -0500

 --001a11c2d1b4134e1e04dc4abfb9
 Content-Type: text/plain; charset=UTF-8
 
 Amazing how representation details show up in so many ways!! Not only the
 'obvious' aspect of Matthew's response wrt to address space size, but also
 this reveals representation details of bignums; after all we could
 represent big nums that have lots of zero digits as association tables that
 tell us where the 1s are and, if that happened, this could be easily
 represented. We could even print it out (eventually).
 
 BTW, if I fiddle with that second argument to arithmetic shift, can I then
 deduce the size of the represntation of bignums (find the smallest one for
 which it raises the exn and then divide by the amount of memory in a 32 bit
 address space and the number of digits that number has, something like
 that)?
 
 Robby
 
 On Thursday, May 9, 2013, Matthew Flatt wrote:
 
 > Racket can raise an immediate out-of-memory on 32-bit machines because
 > there's not enough address space to hold the result. Not so on a 64-bit
 > machine, right?
 >
 >
 >
 > On May 9, 2013, at 10:32 AM, Vincent St-Amour <stamourv@ccs.neu.edu<javascript:;>>
 > wrote:
 >
 > > I still see the inconsistency.
 > >
 > > Running this code
 > >
 > >    (with-handlers ([exn:fail:out-of-memory? void])
 > >      (arithmetic-shift 1 30070458541082))
 > >
 > > works fine on 32 bits, but crashes on 64.
 > >
 > > The optimization tests all pass on both platforms, though.
 > >
 > > Vincent
 > >
 > >
 > >
 > > At Wed, 8 May 2013 11:32:30 -0400,
 > > mflatt@racket-lang.org <javascript:;> wrote:
 > >>
 > >>
 > >> Responsible changed from "nobody" to "mflatt" by mflatt@racket-lang.org<javascript:;>at Wed, 08 May 2013 11:32:30 -0400
 > >> Reason>>> A commit by mflatt@racket-lang.org <javascript:;> has
 > resolved this report
 > >>  http://git.racket-lang.org/plt/commit/7946c73c42
 > >> State changed from "open" to "closed" by mflatt@racket-lang.org<javascript:;>at Wed, 08 May 2013 11:32:30 -0400
 > >> Reason>>> A commit by mflatt@racket-lang.org <javascript:;> has
 > resolved this report
 > >>  http://git.racket-lang.org/plt/commit/7946c73c42
 > >>  | avoid a constant folding that can use too much memory
 > >>  |
 > >>  | Closes PR 13738
 > >>
 > >>
 > >> View:
 > >>  http://bugs.racket-lang.org/query/?cmd=view&pr=13738
 > >>
 > >
 >
 
 --001a11c2d1b4134e1e04dc4abfb9
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 Amazing how representation details show up in so many ways!! Not only the &=
 #39;obvious&#39; aspect of Matthew&#39;s response wrt to address space size=
 , but also this reveals representation details of bignums; after all we cou=
 ld represent big nums that have lots of zero digits as association tables t=
 hat tell us where the 1s are and, if that happened, this could be easily re=
 presented. We could even print it out (eventually).=C2=A0<div>
 <br></div><div>BTW, if I fiddle with that second argument to arithmetic shi=
 ft, can I then deduce the size of the represntation of bignums (find the sm=
 allest one for which it raises the exn and then divide by the amount of mem=
 ory in a 32 bit address space and the number of digits that number has, som=
 ething like that)?</div>
 <div><br></div><div>Robby<br><br>On Thursday, May 9, 2013, Matthew Flatt  w=
 rote:<br><blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;borde=
 r-left:1px #ccc solid;padding-left:1ex">Racket can raise an immediate out-o=
 f-memory on 32-bit machines because there&#39;s not enough address space to=
  hold the result. Not so on a 64-bit machine, right?<br>
 
 <br>
 <br>
 <br>
 On May 9, 2013, at 10:32 AM, Vincent St-Amour &lt;<a href=3D"javascript:;" =
 onclick=3D"_e(event, &#39;cvml&#39;, &#39;stamourv@ccs.neu.edu&#39;)">stamo=
 urv@ccs.neu.edu</a>&gt; wrote:<br>
 <br>
 &gt; I still see the inconsistency.<br>
 &gt;<br>
 &gt; Running this code<br>
 &gt;<br>
 &gt; =C2=A0 =C2=A0(with-handlers ([exn:fail:out-of-memory? void])<br>
 &gt; =C2=A0 =C2=A0 =C2=A0(arithmetic-shift 1 30070458541082))<br>
 &gt;<br>
 &gt; works fine on 32 bits, but crashes on 64.<br>
 &gt;<br>
 &gt; The optimization tests all pass on both platforms, though.<br>
 &gt;<br>
 &gt; Vincent<br>
 &gt;<br>
 &gt;<br>
 &gt;<br>
 &gt; At Wed, 8 May 2013 11:32:30 -0400,<br>
 &gt; <a href=3D"javascript:;" onclick=3D"_e(event, &#39;cvml&#39;, &#39;mfl=
 att@racket-lang.org&#39;)">mflatt@racket-lang.org</a> wrote:<br>
 &gt;&gt;<br>
 &gt;&gt;<br>
 &gt;&gt; Responsible changed from &quot;nobody&quot; to &quot;mflatt&quot; =
 by <a href=3D"javascript:;" onclick=3D"_e(event, &#39;cvml&#39;, &#39;mflat=
 t@racket-lang.org&#39;)">mflatt@racket-lang.org</a> at Wed, 08 May 2013 11:=
 32:30 -0400<br>
 
 &gt;&gt; Reason&gt;&gt;&gt; A commit by <a href=3D"javascript:;" onclick=3D=
 "_e(event, &#39;cvml&#39;, &#39;mflatt@racket-lang.org&#39;)">mflatt@racket=
 -lang.org</a> has resolved this report<br>
 &gt;&gt; =C2=A0<a href=3D"http://git.racket-lang.org/plt/commit/7946c73c42"=
  target=3D"_blank">http://git.racket-lang.org/plt/commit/7946c73c42</a><br>
 &gt;&gt; State changed from &quot;open&quot; to &quot;closed&quot; by <a hr=
 ef=3D"javascript:;" onclick=3D"_e(event, &#39;cvml&#39;, &#39;mflatt@racket=
 -lang.org&#39;)">mflatt@racket-lang.org</a> at Wed, 08 May 2013 11:32:30 -0=
 400<br>
 
 &gt;&gt; Reason&gt;&gt;&gt; A commit by <a href=3D"javascript:;" onclick=3D=
 "_e(event, &#39;cvml&#39;, &#39;mflatt@racket-lang.org&#39;)">mflatt@racket=
 -lang.org</a> has resolved this report<br>
 &gt;&gt; =C2=A0<a href=3D"http://git.racket-lang.org/plt/commit/7946c73c42"=
  target=3D"_blank">http://git.racket-lang.org/plt/commit/7946c73c42</a><br>
 &gt;&gt; =C2=A0| avoid a constant folding that can use too much memory<br>
 &gt;&gt; =C2=A0|<br>
 &gt;&gt; =C2=A0| Closes PR 13738<br>
 &gt;&gt;<br>
 &gt;&gt;<br>
 &gt;&gt; View:<br>
 &gt;&gt; =C2=A0<a href=3D"http://bugs.racket-lang.org/query/?cmd=3Dview&amp=
 ;pr=3D13738" target=3D"_blank">http://bugs.racket-lang.org/query/?cmd=3Dvie=
 w&amp;pr=3D13738</a><br>
 &gt;&gt;<br>
 &gt;<br>
 </blockquote></div>
 
 --001a11c2d1b4134e1e04dc4abfb9--
