From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Sat Mar 30 19:59:28 2013
Received: from mail-oa0-f45.google.com (mail-oa0-f45.google.com [209.85.219.45])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id r2UNxO2v028191
	for <bugs@bugs.plt-scheme.org>; Sat, 30 Mar 2013 19:59:24 -0400
Message-Id: <201303302359.r2UNxLvv028186@champlain.ccs.neu.edu>
Date: Sat, 30 Mar 2013 19:59:21 -0400
From: robby@racket-lang.org
To: bugs@racket-lang.org
Subject: keyword procedures hurt procedure names

>Number:         13643
>Category:       all
>Synopsis:       keyword procedures hurt procedure names
>Class:          sw-bug
>Responsible:    nobody
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Sat Mar 30 20:00:01 -0400 2013
>Last-Modified:  Sat Mar 30 20:32:01 -0400 2013
>Originator:     Robby Findler
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.3.3.8--2013-03-29(ceac0d3a/d)
>Environment:
macosx "Darwin yanpu.local 11.4.2 Darwin Kernel Version 11.4.2: Thu Aug 23 16:25:48 PDT 2012; root:xnu-1699.32.7~1/RELEASE_X86_64 x86_64" (x86_64-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 671613236
Links: (links) = ("gb"); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()
raco pkg (show):
Installation-wide:
 [none]
User-specific, all-version:
 [none]
User-specific, version-specific (5.3.3.8):
 [none]



Collections:
("/Users/robby/Library/Racket/5.3.3.8/collects"
 (non-existent-path))
("/Users/robby/git/exp/plt/collects"
 (".gitignore" "2htdp" "algol60" "at-exp" "browser" "compatibility" "compiler" "config" "data" "datalog" "db" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "future-visualizer" "games" "graphics" "gui-debugger" "handin-client" "handin-server" "help" "hierlist" "honu" "htdp" "html" "icons" "images" "info-domain" "json" "lang" "launcher" "lazy" "macro-debugger" "make" "math" "meta" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "picturing-programs" "pkg" "plai" "planet" "planet2" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "realm" "redex" "repo-time-stamp" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-engine" "tests" "texpict" "trace" "typed" "typed-racket" "!
 typed-scheme" "unstable" "version" "web-server" "wxme" "xml" "xrepl"))

Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #f #t ((main) (test))))
>Description:
This program think's that f's name is temp<NN>

#lang racket/base

(define (g f #:x [x #f]) (printf "object-name ~s\n" (object-name f)) (f 1 2))
(g (位 () (printf "hi\n")))

but this one properly gets a name based on the source location.

#lang racket/base
(define (g f) (printf "object-name ~s\n" (object-name f)) (f 1 2))
(g (位 () (printf "hi\n")))
>How-To-Repeat:

>Fix:
>Audit-Trail:
From: Danny Yoo <dyoo@hashcollision.org>
To: robby@racket-lang.org, "bugs@racket-lang.org" <bugs@racket-lang.org>
Cc: "nobody@racket-lang.org" <nobody@racket-lang.org>,
        "bug-notification@racket-lang.org" <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/13643: keyword procedures hurt procedure names
Date: Sat, 30 Mar 2013 18:25:05 -0600

 Is this essentially the same issue as PR 13304?
 
 On Sat, Mar 30, 2013 at 6:00 PM,  <robby@racket-lang.org> wrote:
 > A new problem report is waiting at
 >   http://bugs.racket-lang.org/query/?cmd=view&pr=13643
 >
 > Reported by Robby Findler for release: 5.3.3.8--2013-03-29(ceac0d3a/d)
 >
 > *** Description:
 > This program think's that f's name is temp<NN>
 >
 > #lang racket/base
 >
 > (define (g f #:x [x #f]) (printf "object-name ~s\n" (object-name f)) (f 1 2))
 > (g (位 () (printf "hi\n")))
 >
 > but this one properly gets a name based on the source location.
 >
 > #lang racket/base
 > (define (g f) (printf "object-name ~s\n" (object-name f)) (f 1 2))
 > (g (位 () (printf "hi\n")))
 >
 > *** How to repeat:
 >
 >
 > *** Environment:
 > macosx "Darwin yanpu.local 11.4.2 Darwin Kernel Version 11.4.2: Thu Aug 23 16:25:48 PDT 2012; root:xnu-1699.32.7~1/RELEASE_X86_64 x86_64" (x86_64-macosx/3m) (get-display-depth) = 32
 > Human Language: english
 > (current-memory-use) 671613236
 > Links: (links) = ("gb"); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()
 > raco pkg (show):
 > Installation-wide:
 >  [none]
 > User-specific, all-version:
 >  [none]
 > User-specific, version-specific (5.3.3.8):
 >  [none]
 >
 >
 >
 > Collections:
 > ("/Users/robby/Library/Racket/5.3.3.8/collects"
 >  (non-existent-path))
 > ("/Users/robby/git/exp/plt/collects"
 >  (".gitignore" "2htdp" "algol60" "at-exp" "browser" "compatibility" "compiler" "config" "data" "datalog" "db" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "future-visualizer" "games" "graphics" "gui-debugger" "handin-client" "handin-server" "help" "hierlist" "honu" "htdp" "html" "icons" "images" "info-domain" "json" "lang" "launcher" "lazy" "macro-debugger" "make" "math" "meta" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "picturing-programs" "pkg" "plai" "planet" "planet2" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "realm" "redex" "repo-time-stamp" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-engine" "tests" "texpict" "trace" "typed" "typed-racket" "!
 >  typed-scheme" "unstable" "version" "web-server" "wxme" "xml" "xrepl"))
 >
 > Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #f #t ((main) (test))))
 >
 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Danny Yoo <dyoo@hashcollision.org>
Cc: "bugs@racket-lang.org" <bugs@racket-lang.org>,
        "nobody@racket-lang.org" <nobody@racket-lang.org>,
        "bug-notification@racket-lang.org" <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/13643: keyword procedures hurt procedure names
Date: Sat, 30 Mar 2013 19:31:14 -0500

 --001a11c2971637b57204d92d9f6a
 Content-Type: text/plain; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 Probably related issue, but I guess it will require a change in a different
 place, since one makes up the name "temp" something and the other "core"
 something.
 
 They are both pretty frustrating when they happen, tho.
 
 Robby
 
 
 On Sat, Mar 30, 2013 at 7:25 PM, Danny Yoo <dyoo@hashcollision.org> wrote:
 
 > Is this essentially the same issue as PR 13304?
 >
 > On Sat, Mar 30, 2013 at 6:00 PM,  <robby@racket-lang.org> wrote:
 > > A new problem report is waiting at
 > >   http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D13643
 > >
 > > Reported by Robby Findler for release: 5.3.3.8--2013-03-29(ceac0d3a/d)
 > >
 > > *** Description:
 > > This program think's that f's name is temp<NN>
 > >
 > > #lang racket/base
 > >
 > > (define (g f #:x [x #f]) (printf "object-name ~s\n" (object-name f)) (f
 > 1 2))
 > > (g (=CE=BB () (printf "hi\n")))
 > >
 > > but this one properly gets a name based on the source location.
 > >
 > > #lang racket/base
 > > (define (g f) (printf "object-name ~s\n" (object-name f)) (f 1 2))
 > > (g (=CE=BB () (printf "hi\n")))
 > >
 > > *** How to repeat:
 > >
 > >
 > > *** Environment:
 > > macosx "Darwin yanpu.local 11.4.2 Darwin Kernel Version 11.4.2: Thu Aug
 > 23 16:25:48 PDT 2012; root:xnu-1699.32.7~1/RELEASE_X86_64 x86_64"
 > (x86_64-macosx/3m) (get-display-depth) =3D 32
 > > Human Language: english
 > > (current-memory-use) 671613236
 > > Links: (links) =3D ("gb"); (links #:user? #f) =3D (); (links #:root? #t=
 ) =3D
 > (); (links #:user? #f #:root? #t) =3D ()
 > > raco pkg (show):
 > > Installation-wide:
 > >  [none]
 > > User-specific, all-version:
 > >  [none]
 > > User-specific, version-specific (5.3.3.8):
 > >  [none]
 > >
 > >
 > >
 > > Collections:
 > > ("/Users/robby/Library/Racket/5.3.3.8/collects"
 > >  (non-existent-path))
 > > ("/Users/robby/git/exp/plt/collects"
 > >  (".gitignore" "2htdp" "algol60" "at-exp" "browser" "compatibility"
 > "compiler" "config" "data" "datalog" "db" "defaults" "deinprogramm"
 > "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi"
 > "file" "framework" "frtime" "future-visualizer" "games" "graphics"
 > "gui-debugger" "handin-client" "handin-server" "help" "hierlist" "honu"
 > "htdp" "html" "icons" "images" "info-domain" "json" "lang" "launcher"
 > "lazy" "macro-debugger" "make" "math" "meta" "mred" "mrlib" "mysterx"
 > "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools"
 > "picturing-programs" "pkg" "plai" "planet" "planet2" "plot" "preprocessor=
 "
 > "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader"
 > "readline" "realm" "redex" "repo-time-stamp" "rnrs" "s-exp" "scheme"
 > "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "slatex"
 > "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax"
 > "syntax-color" "teachpack" "test-engine" "tests" "texpict" "trace" "typed=
 "
 > "typed-racket" "!
 > >  typed-scheme" "unstable" "version" "web-server" "wxme" "xml" "xrepl"))
 > >
 > > Computer Language: (("Determine language from source") (#(#t print
 > mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #f #t ((main=
 )
 > (test))))
 > >
 >
 
 --001a11c2971637b57204d92d9f6a
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 <div dir=3D"ltr">Probably related issue, but I guess it will require a chan=
 ge in a different place, since one makes up the name &quot;temp&quot; somet=
 hing and the other &quot;core&quot; something.<div><br></div><div>They are =
 both pretty frustrating when they happen, tho.</div>
 <div><br></div><div>Robby</div></div><div class=3D"gmail_extra"><br><br><di=
 v class=3D"gmail_quote">On Sat, Mar 30, 2013 at 7:25 PM, Danny Yoo <span di=
 r=3D"ltr">&lt;<a href=3D"mailto:dyoo@hashcollision.org" target=3D"_blank">d=
 yoo@hashcollision.org</a>&gt;</span> wrote:<br>
 <blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1p=
 x #ccc solid;padding-left:1ex">Is this essentially the same issue as PR 133=
 04?<br>
 <div class=3D"HOEnZb"><div class=3D"h5"><br>
 On Sat, Mar 30, 2013 at 6:00 PM, =C2=A0&lt;<a href=3D"mailto:robby@racket-l=
 ang.org">robby@racket-lang.org</a>&gt; wrote:<br>
 &gt; A new problem report is waiting at<br>
 &gt; =C2=A0 <a href=3D"http://bugs.racket-lang.org/query/?cmd=3Dview&amp;pr=
 =3D13643" target=3D"_blank">http://bugs.racket-lang.org/query/?cmd=3Dview&a=
 mp;pr=3D13643</a><br>
 &gt;<br>
 &gt; Reported by Robby Findler for release: 5.3.3.8--2013-03-29(ceac0d3a/d)=
 <br>
 &gt;<br>
 &gt; *** Description:<br>
 &gt; This program think&#39;s that f&#39;s name is temp&lt;NN&gt;<br>
 &gt;<br>
 &gt; #lang racket/base<br>
 &gt;<br>
 &gt; (define (g f #:x [x #f]) (printf &quot;object-name ~s\n&quot; (object-=
 name f)) (f 1 2))<br>
 &gt; (g (=CE=BB () (printf &quot;hi\n&quot;)))<br>
 &gt;<br>
 &gt; but this one properly gets a name based on the source location.<br>
 &gt;<br>
 &gt; #lang racket/base<br>
 &gt; (define (g f) (printf &quot;object-name ~s\n&quot; (object-name f)) (f=
  1 2))<br>
 &gt; (g (=CE=BB () (printf &quot;hi\n&quot;)))<br>
 &gt;<br>
 &gt; *** How to repeat:<br>
 &gt;<br>
 &gt;<br>
 &gt; *** Environment:<br>
 &gt; macosx &quot;Darwin yanpu.local 11.4.2 Darwin Kernel Version 11.4.2: T=
 hu Aug 23 16:25:48 PDT 2012; root:xnu-1699.32.7~1/RELEASE_X86_64 x86_64&quo=
 t; (x86_64-macosx/3m) (get-display-depth) =3D 32<br>
 &gt; Human Language: english<br>
 &gt; (current-memory-use) 671613236<br>
 &gt; Links: (links) =3D (&quot;gb&quot;); (links #:user? #f) =3D (); (links=
  #:root? #t) =3D (); (links #:user? #f #:root? #t) =3D ()<br>
 &gt; raco pkg (show):<br>
 &gt; Installation-wide:<br>
 &gt; =C2=A0[none]<br>
 &gt; User-specific, all-version:<br>
 &gt; =C2=A0[none]<br>
 &gt; User-specific, version-specific (5.3.3.8):<br>
 &gt; =C2=A0[none]<br>
 &gt;<br>
 &gt;<br>
 &gt;<br>
 &gt; Collections:<br>
 &gt; (&quot;/Users/robby/Library/Racket/<a href=3D"http://5.3.3.8/collects"=
  target=3D"_blank">5.3.3.8/collects</a>&quot;<br>
 &gt; =C2=A0(non-existent-path))<br>
 &gt; (&quot;/Users/robby/git/exp/plt/collects&quot;<br>
 &gt; =C2=A0(&quot;.gitignore&quot; &quot;2htdp&quot; &quot;algol60&quot; &q=
 uot;at-exp&quot; &quot;browser&quot; &quot;compatibility&quot; &quot;compil=
 er&quot; &quot;config&quot; &quot;data&quot; &quot;datalog&quot; &quot;db&q=
 uot; &quot;defaults&quot; &quot;deinprogramm&quot; &quot;drracket&quot; &qu=
 ot;drscheme&quot; &quot;dynext&quot; &quot;embedded-gui&quot; &quot;eopl&qu=
 ot; &quot;errortrace&quot; &quot;ffi&quot; &quot;file&quot; &quot;framework=
 &quot; &quot;frtime&quot; &quot;future-visualizer&quot; &quot;games&quot; &=
 quot;graphics&quot; &quot;gui-debugger&quot; &quot;handin-client&quot; &quo=
 t;handin-server&quot; &quot;help&quot; &quot;hierlist&quot; &quot;honu&quot=
 ; &quot;htdp&quot; &quot;html&quot; &quot;icons&quot; &quot;images&quot; &q=
 uot;info-domain&quot; &quot;json&quot; &quot;lang&quot; &quot;launcher&quot=
 ; &quot;lazy&quot; &quot;macro-debugger&quot; &quot;make&quot; &quot;math&q=
 uot; &quot;meta&quot; &quot;mred&quot; &quot;mrlib&quot; &quot;mysterx&quot=
 ; &quot;mzcom&quot; &quot;mzlib&quot; &quot;mzscheme&quot; &quot;net&quot; =
 &quot;openssl&quot; &quot;parser-tools&quot; &quot;picturing-programs&quot;=
  &quot;pkg&quot; &quot;plai&quot; &quot;planet&quot; &quot;planet2&quot; &q=
 uot;plot&quot; &quot;preprocessor&quot; &quot;profile&quot; &quot;r5rs&quot=
 ; &quot;r6rs&quot; &quot;racket&quot; &quot;racklog&quot; &quot;rackunit&qu=
 ot; &quot;raco&quot; &quot;reader&quot; &quot;readline&quot; &quot;realm&qu=
 ot; &quot;redex&quot; &quot;repo-time-stamp&quot; &quot;rnrs&quot; &quot;s-=
 exp&quot; &quot;scheme&quot; &quot;schemeunit&quot; &quot;scribble&quot; &q=
 uot;scribblings&quot; &quot;scriblib&quot; &quot;setup&quot; &quot;sgl&quot=
 ; &quot;slatex&quot; &quot;slideshow&quot; &quot;srfi&quot; &quot;stepper&q=
 uot; &quot;string-constants&quot; &quot;swindle&quot; &quot;syntax&quot; &q=
 uot;syntax-color&quot; &quot;teachpack&quot; &quot;test-engine&quot; &quot;=
 tests&quot; &quot;texpict&quot; &quot;trace&quot; &quot;typed&quot; &quot;t=
 yped-racket&quot; &quot;!<br>
 
 &gt; =C2=A0typed-scheme&quot; &quot;unstable&quot; &quot;version&quot; &quo=
 t;web-server&quot; &quot;wxme&quot; &quot;xml&quot; &quot;xrepl&quot;))<br>
 &gt;<br>
 &gt; Computer Language: ((&quot;Determine language from source&quot;) (#(#t=
  print mixed-fraction-e #f #t debug) (default) #() &quot;#lang racket\n&quo=
 t; #f #t ((main) (test))))<br>
 &gt;<br>
 </div></div></blockquote></div><br></div>
 
 --001a11c2971637b57204d92d9f6a--
