From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Sat Feb  9 12:47:41 2013
Received: from mail-ob0-f178.google.com (mail-ob0-f178.google.com [209.85.214.178])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id r19Hlcus003490
	for <bugs@bugs.plt-scheme.org>; Sat, 9 Feb 2013 12:47:38 -0500
Message-Id: <201302091747.r19Hlarx003480@champlain.ccs.neu.edu>
Date: Sat, 9 Feb 2013 12:47:36 -0500
From: eric.n.dobson@gmail.com
To: bugs@racket-lang.org
Subject: Subtype of -poly in TR is incorrect

>Number:         13510
>Category:       all
>Synopsis:       Subtype of -poly in TR is incorrect
>Class:          sw-bug
>Responsible:    stamourv
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Sat Feb 09 12:48:01 -0500 2013
>Closed-Date:    Tue Feb 12 17:48:08 -0500 2013
>Last-Modified:  Tue Feb 12 17:48:08 -0500 2013
>Originator:     Eric Dobson
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.3.2.3
>Environment:
MacIntel / Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_2) AppleWebKit/537.28 (KHTML, like Gecko) Chrome/26.0.1397.2 Safari/537.28
>Description:
I believe some of the following should return true yet they all return #f.
>How-To-Repeat:
#lang racket

(require typed-racket/types/union typed-racket/types/abbrev typed-racket/rep/type-rep typed-racket/infer/infer typed-racket/types/subtype)
(subtype (-poly (y z) (-lst y)) (-poly (x y z) (-lst y)))
(subtype (-poly (y z) (-lst y)) (-poly (z y) (-lst y)))
;; Possibly these as well
(subtype (-poly (y) (-poly (z) (-pair y z))) (-poly (z) (-poly (y) (-pair y z))))
(subtype (-poly (y) (-poly (z) (-pair y z))) (-poly (y z) (-pair y z)))
(subtype (-poly (y z) (-pair y z)) (-poly (y) (-poly (z) (-pair y z))))
>Fix:
>Audit-Trail:
From: Sam Tobin-Hochstadt <samth@ccs.neu.edu>
To: Eric Dobson <eric.n.dobson@gmail.com>, bugs <bugs@racket-lang.org>
Cc: nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/13510: Subtype of -poly in TR is incorrect
Date: Sat, 9 Feb 2013 12:57:31 -0500

  I disagree -- you can't substitute the left for the right in all
 cases for any of those examples.
 
 On Sat, Feb 9, 2013 at 12:48 PM,  <eric.n.dobson@gmail.com> wrote:
 > A new problem report is waiting at
 >   http://bugs.racket-lang.org/query/?cmd=view&pr=13510
 >
 > Reported by Eric Dobson for release: 5.3.2.3
 >
 > *** Description:
 > I believe some of the following should return true yet they all return #f.
 >
 > *** How to repeat:
 > #lang racket
 >
 > (require typed-racket/types/union typed-racket/types/abbrev typed-racket/rep/type-rep typed-racket/infer/infer typed-racket/types/subtype)
 > (subtype (-poly (y z) (-lst y)) (-poly (x y z) (-lst y)))
 > (subtype (-poly (y z) (-lst y)) (-poly (z y) (-lst y)))
 > ;; Possibly these as well
 > (subtype (-poly (y) (-poly (z) (-pair y z))) (-poly (z) (-poly (y) (-pair y z))))
 > (subtype (-poly (y) (-poly (z) (-pair y z))) (-poly (y z) (-pair y z)))
 > (subtype (-poly (y z) (-pair y z)) (-poly (y) (-poly (z) (-pair y z))))
 >
 > *** Environment:
 > MacIntel / Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_2) AppleWebKit/537.28 (KHTML, like Gecko) Chrome/26.0.1397.2 Safari/537.28
 >
From: Eric Dobson <eric.n.dobson@gmail.com>
To: Sam Tobin-Hochstadt <samth@ccs.neu.edu>
Cc: bugs <bugs@racket-lang.org>, nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/13510: Subtype of -poly in TR is incorrect
Date: Sat, 9 Feb 2013 10:05:35 -0800

 --047d7b414244c884cb04d54e85e4
 Content-Type: text/plain; charset=UTF-8
 
 Can you give cases other than instantiation? Or is that enough to break
 them?
 
 Also why is (subtype (-poly (y z) -String) (-poly (x y z) -String)) true,
 but not the first example?
 
 The reason that I think they are subtypes is that in the logicial framework
 that the typesystem represents, you can prove the same things with either
 the left or the right.
 
 
 On Sat, Feb 9, 2013 at 9:57 AM, Sam Tobin-Hochstadt <samth@ccs.neu.edu>wrote:
 
 >  I disagree -- you can't substitute the left for the right in all
 > cases for any of those examples.
 >
 > On Sat, Feb 9, 2013 at 12:48 PM,  <eric.n.dobson@gmail.com> wrote:
 > > A new problem report is waiting at
 > >   http://bugs.racket-lang.org/query/?cmd=view&pr=13510
 > >
 > > Reported by Eric Dobson for release: 5.3.2.3
 > >
 > > *** Description:
 > > I believe some of the following should return true yet they all return
 > #f.
 > >
 > > *** How to repeat:
 > > #lang racket
 > >
 > > (require typed-racket/types/union typed-racket/types/abbrev
 > typed-racket/rep/type-rep typed-racket/infer/infer
 > typed-racket/types/subtype)
 > > (subtype (-poly (y z) (-lst y)) (-poly (x y z) (-lst y)))
 > > (subtype (-poly (y z) (-lst y)) (-poly (z y) (-lst y)))
 > > ;; Possibly these as well
 > > (subtype (-poly (y) (-poly (z) (-pair y z))) (-poly (z) (-poly (y)
 > (-pair y z))))
 > > (subtype (-poly (y) (-poly (z) (-pair y z))) (-poly (y z) (-pair y z)))
 > > (subtype (-poly (y z) (-pair y z)) (-poly (y) (-poly (z) (-pair y z))))
 > >
 > > *** Environment:
 > > MacIntel / Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_2)
 > AppleWebKit/537.28 (KHTML, like Gecko) Chrome/26.0.1397.2 Safari/537.28
 > >
 >
 
 --047d7b414244c884cb04d54e85e4
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 <div dir=3D"ltr">Can you give cases other than instantiation? Or is that en=
 ough to break them?<div><br></div><div>Also why is=C2=A0<span style=3D"font=
 -family:arial,sans-serif;font-size:13px">(subtype (-poly (y z) -String) (-p=
 oly (x y z) -String)) true, but not the first example?</span><br>
 <div><br></div><div style>The reason that I think they are subtypes is that=
  in the logicial framework that the typesystem represents, you can prove th=
 e same things with either the left or the right.</div></div></div><div clas=
 s=3D"gmail_extra">
 <br><br><div class=3D"gmail_quote">On Sat, Feb 9, 2013 at 9:57 AM, Sam Tobi=
 n-Hochstadt <span dir=3D"ltr">&lt;<a href=3D"mailto:samth@ccs.neu.edu" targ=
 et=3D"_blank">samth@ccs.neu.edu</a>&gt;</span> wrote:<br><blockquote class=
 =3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1px #ccc solid;padd=
 ing-left:1ex">
 =C2=A0I disagree -- you can&#39;t substitute the left for the right in all<=
 br>
 cases for any of those examples.<br>
 <br>
 On Sat, Feb 9, 2013 at 12:48 PM, =C2=A0&lt;<a href=3D"mailto:eric.n.dobson@=
 gmail.com">eric.n.dobson@gmail.com</a>&gt; wrote:<br>
 &gt; A new problem report is waiting at<br>
 &gt; =C2=A0 <a href=3D"http://bugs.racket-lang.org/query/?cmd=3Dview&amp;pr=
 =3D13510" target=3D"_blank">http://bugs.racket-lang.org/query/?cmd=3Dview&a=
 mp;pr=3D13510</a><br>
 &gt;<br>
 &gt; Reported by Eric Dobson for release: 5.3.2.3<br>
 &gt;<br>
 &gt; *** Description:<br>
 &gt; I believe some of the following should return true yet they all return=
  #f.<br>
 &gt;<br>
 &gt; *** How to repeat:<br>
 &gt; #lang racket<br>
 &gt;<br>
 &gt; (require typed-racket/types/union typed-racket/types/abbrev typed-rack=
 et/rep/type-rep typed-racket/infer/infer typed-racket/types/subtype)<br>
 &gt; (subtype (-poly (y z) (-lst y)) (-poly (x y z) (-lst y)))<br>
 &gt; (subtype (-poly (y z) (-lst y)) (-poly (z y) (-lst y)))<br>
 &gt; ;; Possibly these as well<br>
 &gt; (subtype (-poly (y) (-poly (z) (-pair y z))) (-poly (z) (-poly (y) (-p=
 air y z))))<br>
 &gt; (subtype (-poly (y) (-poly (z) (-pair y z))) (-poly (y z) (-pair y z))=
 )<br>
 &gt; (subtype (-poly (y z) (-pair y z)) (-poly (y) (-poly (z) (-pair y z)))=
 )<br>
 &gt;<br>
 &gt; *** Environment:<br>
 &gt; MacIntel / Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_2) AppleWebKit/=
 537.28 (KHTML, like Gecko) Chrome/26.0.1397.2 Safari/537.28<br>
 &gt;<br>
 </blockquote></div><br></div>
 
 --047d7b414244c884cb04d54e85e4--
From: Sam Tobin-Hochstadt <samth@ccs.neu.edu>
To: Eric Dobson <eric.n.dobson@gmail.com>
Cc: bugs <bugs@racket-lang.org>, nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/13510: Subtype of -poly in TR is incorrect
Date: Sat, 9 Feb 2013 13:18:04 -0500

 On Sat, Feb 9, 2013 at 1:05 PM, Eric Dobson <eric.n.dobson@gmail.com> wrote:
 > Can you give cases other than instantiation? Or is that enough to break
 > them?
 
 For the first two, I think that instantiation is the only case, and
 thus it might be sound to allow them.
 
 For the third, you end up with quite different types after
 instantiating the first type parameter -- that would lead to
 unsoundness.
 
 For the last two, again instantiation is I think the only case.
 
 However, I don't think that we should allow such subtypes unless we
 have a clear sense of exactly what all of them mean.
 
 > Also why is (subtype (-poly (y z) -String) (-poly (x y z) -String)) true,
 > but not the first example?
 
 Because those two types are not actually polymorphic -- the
 parameterization is just discarded.
 
 > The reason that I think they are subtypes is that in the logicial framework
 > that the typesystem represents, you can prove the same things with either
 > the left or the right.
 
 But that's true of lots of things, such as (Pair A B) and (Pair B A).
 
 >
 >
 > On Sat, Feb 9, 2013 at 9:57 AM, Sam Tobin-Hochstadt <samth@ccs.neu.edu>
 > wrote:
 >>
 >>  I disagree -- you can't substitute the left for the right in all
 >> cases for any of those examples.
 >>
 >> On Sat, Feb 9, 2013 at 12:48 PM,  <eric.n.dobson@gmail.com> wrote:
 >> > A new problem report is waiting at
 >> >   http://bugs.racket-lang.org/query/?cmd=view&pr=13510
 >> >
 >> > Reported by Eric Dobson for release: 5.3.2.3
 >> >
 >> > *** Description:
 >> > I believe some of the following should return true yet they all return
 >> > #f.
 >> >
 >> > *** How to repeat:
 >> > #lang racket
 >> >
 >> > (require typed-racket/types/union typed-racket/types/abbrev
 >> > typed-racket/rep/type-rep typed-racket/infer/infer
 >> > typed-racket/types/subtype)
 >> > (subtype (-poly (y z) (-lst y)) (-poly (x y z) (-lst y)))
 >> > (subtype (-poly (y z) (-lst y)) (-poly (z y) (-lst y)))
 >> > ;; Possibly these as well
 >> > (subtype (-poly (y) (-poly (z) (-pair y z))) (-poly (z) (-poly (y)
 >> > (-pair y z))))
 >> > (subtype (-poly (y) (-poly (z) (-pair y z))) (-poly (y z) (-pair y z)))
 >> > (subtype (-poly (y z) (-pair y z)) (-poly (y) (-poly (z) (-pair y z))))
 >> >
 >> > *** Environment:
 >> > MacIntel / Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_2)
 >> > AppleWebKit/537.28 (KHTML, like Gecko) Chrome/26.0.1397.2 Safari/537.28
 >> >
 >
 >
From: Eric Dobson <eric.n.dobson@gmail.com>
To: Sam Tobin-Hochstadt <samth@ccs.neu.edu>
Cc: bugs <bugs@racket-lang.org>, nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/13510: Subtype of -poly in TR is incorrect
Date: Sat, 9 Feb 2013 10:36:40 -0800

 --e89a8f3b9d9df670cc04d54ef4ac
 Content-Type: text/plain; charset=UTF-8
 
 On Sat, Feb 9, 2013 at 10:18 AM, Sam Tobin-Hochstadt <samth@ccs.neu.edu>wrote:
 
 > On Sat, Feb 9, 2013 at 1:05 PM, Eric Dobson <eric.n.dobson@gmail.com>
 > wrote:
 > > Can you give cases other than instantiation? Or is that enough to break
 > > them?
 >
 > For the first two, I think that instantiation is the only case, and
 > thus it might be sound to allow them.
 >
 > For the third, you end up with quite different types after
 > instantiating the first type parameter -- that would lead to
 > unsoundness.
 >
 > For the last two, again instantiation is I think the only case.
 >
 > However, I don't think that we should allow such subtypes unless we
 > have a clear sense of exactly what all of them mean.
 >
 I agree. The reason that I was considering them was that I want to take a
 type and replace all occurrences of Univ in covariant positions with a free
 type variable, and wrap with the appropriate poly. Then this generated type
 should be a subtype of the original type, but I was worried that cases like
 these would make it not actually check out, but this might not actually
 matter.
 
 I'll add tests that check that these are not subtypes, and add a comment
 about the discussion on this bug.
 
 
 > > Also why is (subtype (-poly (y z) -String) (-poly (x y z) -String)) true,
 > > but not the first example?
 >
 > Because those two types are not actually polymorphic -- the
 > parameterization is just discarded.
 >
 > > The reason that I think they are subtypes is that in the logicial
 > framework
 > > that the typesystem represents, you can prove the same things with either
 > > the left or the right.
 >
 > But that's true of lots of things, such as (Pair A B) and (Pair B A).
 >
 > True, the logic gives the ability to move stuff around, which I missed.
 
 
 > >
 > >
 > > On Sat, Feb 9, 2013 at 9:57 AM, Sam Tobin-Hochstadt <samth@ccs.neu.edu>
 > > wrote:
 > >>
 > >>  I disagree -- you can't substitute the left for the right in all
 > >> cases for any of those examples.
 > >>
 > >> On Sat, Feb 9, 2013 at 12:48 PM,  <eric.n.dobson@gmail.com> wrote:
 > >> > A new problem report is waiting at
 > >> >   http://bugs.racket-lang.org/query/?cmd=view&pr=13510
 > >> >
 > >> > Reported by Eric Dobson for release: 5.3.2.3
 > >> >
 > >> > *** Description:
 > >> > I believe some of the following should return true yet they all return
 > >> > #f.
 > >> >
 > >> > *** How to repeat:
 > >> > #lang racket
 > >> >
 > >> > (require typed-racket/types/union typed-racket/types/abbrev
 > >> > typed-racket/rep/type-rep typed-racket/infer/infer
 > >> > typed-racket/types/subtype)
 > >> > (subtype (-poly (y z) (-lst y)) (-poly (x y z) (-lst y)))
 > >> > (subtype (-poly (y z) (-lst y)) (-poly (z y) (-lst y)))
 > >> > ;; Possibly these as well
 > >> > (subtype (-poly (y) (-poly (z) (-pair y z))) (-poly (z) (-poly (y)
 > >> > (-pair y z))))
 > >> > (subtype (-poly (y) (-poly (z) (-pair y z))) (-poly (y z) (-pair y
 > z)))
 > >> > (subtype (-poly (y z) (-pair y z)) (-poly (y) (-poly (z) (-pair y
 > z))))
 > >> >
 > >> > *** Environment:
 > >> > MacIntel / Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_2)
 > >> > AppleWebKit/537.28 (KHTML, like Gecko) Chrome/26.0.1397.2
 > Safari/537.28
 > >> >
 > >
 > >
 >
 
 --e89a8f3b9d9df670cc04d54ef4ac
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 <div dir=3D"ltr"><br><div class=3D"gmail_extra"><br><br><div class=3D"gmail=
 _quote">On Sat, Feb 9, 2013 at 10:18 AM, Sam Tobin-Hochstadt <span dir=3D"l=
 tr">&lt;<a href=3D"mailto:samth@ccs.neu.edu" target=3D"_blank">samth@ccs.ne=
 u.edu</a>&gt;</span> wrote:<br>
 <blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1p=
 x #ccc solid;padding-left:1ex"><div class=3D"im">On Sat, Feb 9, 2013 at 1:0=
 5 PM, Eric Dobson &lt;<a href=3D"mailto:eric.n.dobson@gmail.com">eric.n.dob=
 son@gmail.com</a>&gt; wrote:<br>
 
 &gt; Can you give cases other than instantiation? Or is that enough to brea=
 k<br>
 &gt; them?<br>
 <br>
 </div>For the first two, I think that instantiation is the only case, and<b=
 r>
 thus it might be sound to allow them.<br>
 <br>
 For the third, you end up with quite different types after<br>
 instantiating the first type parameter -- that would lead to<br>
 unsoundness.<br>
 <br>
 For the last two, again instantiation is I think the only case.<br>
 <br>
 However, I don&#39;t think that we should allow such subtypes unless we<br>
 have a clear sense of exactly what all of them mean.<br></blockquote><div s=
 tyle>I agree. The reason that I was considering them was that I want to tak=
 e a type and replace all=C2=A0occurrences=C2=A0of Univ in covariant positio=
 ns with a free type variable, and wrap with the appropriate poly. Then this=
  generated type should be a subtype of the original type, but I was worried=
  that cases like these would make it not actually check out, but this might=
  not actually matter.</div>
 <div><br></div><div style>I&#39;ll add tests that check that these are not =
 subtypes, and add a comment about the=C2=A0discussion=C2=A0on this bug.=C2=
 =A0</div><div><br></div><blockquote class=3D"gmail_quote" style=3D"margin:0=
  0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">
 
 <div class=3D"im"><br>
 &gt; Also why is (subtype (-poly (y z) -String) (-poly (x y z) -String)) tr=
 ue,<br>
 &gt; but not the first example?<br>
 <br>
 </div>Because those two types are not actually polymorphic -- the<br>
 parameterization is just discarded.<br>
 <div class=3D"im"><br>
 &gt; The reason that I think they are subtypes is that in the logicial fram=
 ework<br>
 &gt; that the typesystem represents, you can prove the same things with eit=
 her<br>
 &gt; the left or the right.<br>
 <br>
 </div>But that&#39;s true of lots of things, such as (Pair A B) and (Pair B=
  A).<br>
 <div class=3D"HOEnZb"><div class=3D"h5"><br></div></div></blockquote><div s=
 tyle>True, the logic gives the ability to move stuff around, which I missed=
 .</div><div>=C2=A0</div><blockquote class=3D"gmail_quote" style=3D"margin:0=
  0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">
 <div class=3D"HOEnZb"><div class=3D"h5">
 &gt;<br>
 &gt;<br>
 &gt; On Sat, Feb 9, 2013 at 9:57 AM, Sam Tobin-Hochstadt &lt;<a href=3D"mai=
 lto:samth@ccs.neu.edu">samth@ccs.neu.edu</a>&gt;<br>
 &gt; wrote:<br>
 &gt;&gt;<br>
 &gt;&gt; =C2=A0I disagree -- you can&#39;t substitute the left for the righ=
 t in all<br>
 &gt;&gt; cases for any of those examples.<br>
 &gt;&gt;<br>
 &gt;&gt; On Sat, Feb 9, 2013 at 12:48 PM, =C2=A0&lt;<a href=3D"mailto:eric.=
 n.dobson@gmail.com">eric.n.dobson@gmail.com</a>&gt; wrote:<br>
 &gt;&gt; &gt; A new problem report is waiting at<br>
 &gt;&gt; &gt; =C2=A0 <a href=3D"http://bugs.racket-lang.org/query/?cmd=3Dvi=
 ew&amp;pr=3D13510" target=3D"_blank">http://bugs.racket-lang.org/query/?cmd=
 =3Dview&amp;pr=3D13510</a><br>
 &gt;&gt; &gt;<br>
 &gt;&gt; &gt; Reported by Eric Dobson for release: 5.3.2.3<br>
 &gt;&gt; &gt;<br>
 &gt;&gt; &gt; *** Description:<br>
 &gt;&gt; &gt; I believe some of the following should return true yet they a=
 ll return<br>
 &gt;&gt; &gt; #f.<br>
 &gt;&gt; &gt;<br>
 &gt;&gt; &gt; *** How to repeat:<br>
 &gt;&gt; &gt; #lang racket<br>
 &gt;&gt; &gt;<br>
 &gt;&gt; &gt; (require typed-racket/types/union typed-racket/types/abbrev<b=
 r>
 &gt;&gt; &gt; typed-racket/rep/type-rep typed-racket/infer/infer<br>
 &gt;&gt; &gt; typed-racket/types/subtype)<br>
 &gt;&gt; &gt; (subtype (-poly (y z) (-lst y)) (-poly (x y z) (-lst y)))<br>
 &gt;&gt; &gt; (subtype (-poly (y z) (-lst y)) (-poly (z y) (-lst y)))<br>
 &gt;&gt; &gt; ;; Possibly these as well<br>
 &gt;&gt; &gt; (subtype (-poly (y) (-poly (z) (-pair y z))) (-poly (z) (-pol=
 y (y)<br>
 &gt;&gt; &gt; (-pair y z))))<br>
 &gt;&gt; &gt; (subtype (-poly (y) (-poly (z) (-pair y z))) (-poly (y z) (-p=
 air y z)))<br>
 &gt;&gt; &gt; (subtype (-poly (y z) (-pair y z)) (-poly (y) (-poly (z) (-pa=
 ir y z))))<br>
 &gt;&gt; &gt;<br>
 &gt;&gt; &gt; *** Environment:<br>
 &gt;&gt; &gt; MacIntel / Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_2)<br>
 &gt;&gt; &gt; AppleWebKit/537.28 (KHTML, like Gecko) Chrome/26.0.1397.2 Saf=
 ari/537.28<br>
 &gt;&gt; &gt;<br>
 &gt;<br>
 &gt;<br>
 </div></div></blockquote></div><br></div></div>
 
 --e89a8f3b9d9df670cc04d54ef4ac--
Responsible changed from "nobody" to "stamourv" by stamourv@racket-lang.org at Tue, 12 Feb 2013 17:48:08 -0500
Reason>>> A commit by stamourv@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/67c6d7804d
State changed from "open" to "closed" by stamourv@racket-lang.org at Tue, 12 Feb 2013 17:48:08 -0500
Reason>>> A commit by stamourv@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/67c6d7804d
  | Add tests for subtyping -poly. Closes PR13510.

