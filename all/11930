From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Tue May 17 19:43:47 2011
Received: from mail-fx0-f44.google.com (mail-fx0-f44.google.com [209.85.161.44])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id p4HNhicQ012342
	for <bugs@bugs.plt-scheme.org>; Tue, 17 May 2011 19:43:44 -0400
Message-Id: <201105172343.p4HNhduZ012337@champlain.ccs.neu.edu>
Date: Tue, 17 May 2011 19:43:39 -0400
From: clements@brinckerhoff.org
To: bugs@racket-lang.org
Subject: scribble build fails for all planet-linked packages

>Number:         11930
>Category:       all
>Synopsis:       scribble build fails for all planet-linked packages
>Class:          sw-bug
>Responsible:    tewk
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Tue May 17 19:44:01 -0400 2011
>Closed-Date:    Thu May 19 13:55:38 -0400 2011
>Last-Modified:  Thu May 19 13:55:38 -0400 2011
>Originator:     John Clements
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.1.1.5--2011-05-06(101b22e/g)
>Environment:
macosx "Darwin pcp070679pcs.wireless.calpoly.edu 10.7.0 Darwin Kernel Version 10.7.0: Sat Jan 29 15:17:16 PST 2011; root:xnu-1504.9.37~1/RELEASE_I386 i386" (x86_64-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 314088512

Collections:
("/Users/clements/git-clements/clements/collects"
 (".gitignore" "badger" "clements-lib" "contour-letters" "file-size-checker" "info-domain" "iTunes-helper" "java-helpers" "jbc-gnucash" "matrix-arithmetic" "mboxrd-read" "midi" "mnemisis" "profj-auto-runner" "projector" "shelly" "smootxes" "template-tester" "txomp" "web-utilities"))
("/Users/clements/clements/matthias/collects"
 ("info-domain" "web"))
("/Users/clements/Library/Racket/5.1.1.5/collects"
 (non-existent-path))
("/Users/clements/plt/collects"
 (".gitignore" "2htdp" "afm" "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "data" "datalog" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "meta" "mred" "mrlib" "mysterx" "mz" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "picturing-programs" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raclog" "raco" "racunit" "reader" "readline" "redex" "repo-time-stamp" "repos-time-stamp" "rnrs" "s-exp" "schelog" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "sirmail" "slatex" "slideshow" "srfi" "srpersist" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tes!
 ts" "tex2page" "texpict" "trace" "typed" "typed-scheme" "unstable" "version" "waterworld" "web-server" "wxme" "xml"))

Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t test-coverage) (default) #() "#lang racket\n" #f #t))
>Description:
It appears that all attempts to build local planet
packages attached with 'raco planet link' produce this
error:

default-module-name-resolver: the kernel's resolver works only on `quote' forms; given: '(lib "planet/resolver.rkt")

The workaround is to use fileinject rather than 
link/unlink, but that's a bit painful
>How-To-Repeat:
cd /tmp
mkdir planet-example
cd planet-example
cat > info.rkt <<DELIMITER
#lang setup/infotab

(define name "planet-example")
(define scribblings '(("broken.scrbl")))
DELIMITER
cat > broken.scrbl <<DELIMITER
#lang scribble/doc

@(require scribble/manual)

@title{AWESOMENESS!!1!!}
@author{Bob Trotsky}
DELIMITER
raco planet link clements planet-example.plt 1 0 /tmp/planet-example
raco setup -P clements planet-example.plt 1 0

...
see the error above.
>Fix:
>Audit-Trail:
From: Matthew Flatt <mflatt@cs.utah.edu>
To: clements@brinckerhoff.org, bugs@racket-lang.org
Cc: robby@eecs.northwestern.edu, tewk@cs.utah.edu
Subject: Re: [racket-bug] all/11930: scribble build fails for all planet-linked packages
Date: Wed, 18 May 2011 07:39:03 -0700

 This is a problem with places.
 
 Here's a small example:
 
  #lang racket/base
  (require racket/place)
 
  (provide main)
 
  (define (main)
    (place-wait
     (place/anon
      pch
      (dynamic-require '(planet foo/bar) #f))))
 
 The `current-module-name-resolver' parameter somehow isn't getting
 configured right in the non-main place.
 
 At Tue, 17 May 2011 19:44:02 -0400, clements@brinckerhoff.org wrote:
 > A new problem report is waiting at
 >   http://bugs.racket-lang.org/query/?cmd=view&pr=11930
 > 
 > Reported by John Clements for release: 5.1.1.5--2011-05-06(101b22e/g)
 > 
 > *** Description:
 > It appears that all attempts to build local planet
 > packages attached with 'raco planet link' produce this
 > error:
 > 
 > default-module-name-resolver: the kernel's resolver works only on `quote' 
 > forms; given: '(lib "planet/resolver.rkt")
 > 
 > The workaround is to use fileinject rather than 
 > link/unlink, but that's a bit painful
 > 
 > *** How to repeat:
 > cd /tmp
 > mkdir planet-example
 > cd planet-example
 > cat > info.rkt <<DELIMITER
 > #lang setup/infotab
 > 
 > (define name "planet-example")
 > (define scribblings '(("broken.scrbl")))
 > DELIMITER
 > cat > broken.scrbl <<DELIMITER
 > #lang scribble/doc
 > 
 > @(require scribble/manual)
 > 
 > @title{AWESOMENESS!!1!!}
 > @author{Bob Trotsky}
 > DELIMITER
 > raco planet link clements planet-example.plt 1 0 /tmp/planet-example
 > raco setup -P clements planet-example.plt 1 0
 > 
 > ...
 > see the error above.
 > 
 > *** Environment:
 > macosx "Darwin pcp070679pcs.wireless.calpoly.edu 10.7.0 Darwin Kernel Version 
 > 10.7.0: Sat Jan 29 15:17:16 PST 2011; root:xnu-1504.9.37~1/RELEASE_I386 i386" 
 > (x86_64-macosx/3m) (get-display-depth) = 32
 > Human Language: english
 > (current-memory-use) 314088512
 > 
 > Collections:
 > ("/Users/clements/git-clements/clements/collects"
 >  (".gitignore" "badger" "clements-lib" "contour-letters" "file-size-checker" 
 > "info-domain" "iTunes-helper" "java-helpers" "jbc-gnucash" "matrix-arithmetic" 
 > "mboxrd-read" "midi" "mnemisis" "profj-auto-runner" "projector" "shelly" 
 > "smootxes" "template-tester" "txomp" "web-utilities"))
 > ("/Users/clements/clements/matthias/collects"
 >  ("info-domain" "web"))
 > ("/Users/clements/Library/Racket/5.1.1.5/collects"
 >  (non-existent-path))
 > ("/Users/clements/plt/collects"
 >  (".gitignore" "2htdp" "afm" "algol60" "at-exp" "browser" "combinator-parser" 
 > "compiler" "config" "data" "datalog" "defaults" "deinprogramm" "drracket" 
 > "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" 
 > "frtime" "games" "graphics" "gui-debugger" "guibuilder" "handin-client" 
 > "handin-server" "help" "hierlist" "honu" "htdp" "html" "icons" "info-domain" 
 > "lang" "launcher" "lazy" "macro-debugger" "make" "meta" "mred" "mrlib" 
 > "mysterx" "mz" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" 
 > "picturing-programs" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" 
 > "r6rs" "racket" "racklog" "rackunit" "raclog" "raco" "racunit" "reader" 
 > "readline" "redex" "repo-time-stamp" "repos-time-stamp" "rnrs" "s-exp" 
 > "schelog" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" 
 > "sgl" "sirmail" "slatex" "slideshow" "srfi" "srpersist" "stepper" 
 > "string-constants" "swindle" "syntax" "syntax-color" "teachpack" 
 > "test-box-recovery" "test-engine" "tes!
 >  ts" "tex2page" "texpict" "trace" "typed" "typed-scheme" "unstable" "version" 
 > "waterworld" "web-server" "wxme" "xml"))
 > 
 > Computer Language: (("Determine language from source") (#(#t print 
 > mixed-fraction-e #f #t test-coverage) (default) #() "#lang racket\n" #f #t))
Responsible changed from "nobody" to "robby" by robby@racket-lang.org at Wed, 18 May 2011 11:05:52 -0400
Reason>>> A commit by robby@racket-lang.org was marked as relevant
  http://git.racket-lang.org/plt/commit/91f5fbcd88
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: clements@brinckerhoff.org, bugs@racket-lang.org, tewk@cs.utah.edu
Subject: Re: [racket-bug] all/11930: scribble build fails for all
 planet-linked packages
Date: Wed, 18 May 2011 10:05:22 -0500

 John: this might mean you can say "raco setup -j 1" and avoid the problem.
 
 Robby
 
 On Wed, May 18, 2011 at 9:39 AM, Matthew Flatt <mflatt@cs.utah.edu> wrote:
 > This is a problem with places.
 >
 > Here's a small example:
 >
 >  #lang racket/base
 >  (require racket/place)
 >
 >  (provide main)
 >
 >  (define (main)
 >   (place-wait
 >    (place/anon
 >     pch
 >     (dynamic-require '(planet foo/bar) #f))))
 >
 > The `current-module-name-resolver' parameter somehow isn't getting
 > configured right in the non-main place.
 >
 > At Tue, 17 May 2011 19:44:02 -0400, clements@brinckerhoff.org wrote:
 >> A new problem report is waiting at
 >>   http://bugs.racket-lang.org/query/?cmd=view&pr=11930
 >>
 >> Reported by John Clements for release: 5.1.1.5--2011-05-06(101b22e/g)
 >>
 >> *** Description:
 >> It appears that all attempts to build local planet
 >> packages attached with 'raco planet link' produce this
 >> error:
 >>
 >> default-module-name-resolver: the kernel's resolver works only on `quote'
 >> forms; given: '(lib "planet/resolver.rkt")
 >>
 >> The workaround is to use fileinject rather than
 >> link/unlink, but that's a bit painful
 >>
 >> *** How to repeat:
 >> cd /tmp
 >> mkdir planet-example
 >> cd planet-example
 >> cat > info.rkt <<DELIMITER
 >> #lang setup/infotab
 >>
 >> (define name "planet-example")
 >> (define scribblings '(("broken.scrbl")))
 >> DELIMITER
 >> cat > broken.scrbl <<DELIMITER
 >> #lang scribble/doc
 >>
 >> @(require scribble/manual)
 >>
 >> @title{AWESOMENESS!!1!!}
 >> @author{Bob Trotsky}
 >> DELIMITER
 >> raco planet link clements planet-example.plt 1 0 /tmp/planet-example
 >> raco setup -P clements planet-example.plt 1 0
 >>
 >> ...
 >> see the error above.
 >>
 >> *** Environment:
 >> macosx "Darwin pcp070679pcs.wireless.calpoly.edu 10.7.0 Darwin Kernel Version
 >> 10.7.0: Sat Jan 29 15:17:16 PST 2011; root:xnu-1504.9.37~1/RELEASE_I386 i386"
 >> (x86_64-macosx/3m) (get-display-depth) = 32
 >> Human Language: english
 >> (current-memory-use) 314088512
 >>
 >> Collections:
 >> ("/Users/clements/git-clements/clements/collects"
 >>  (".gitignore" "badger" "clements-lib" "contour-letters" "file-size-checker"
 >> "info-domain" "iTunes-helper" "java-helpers" "jbc-gnucash" "matrix-arithmetic"
 >> "mboxrd-read" "midi" "mnemisis" "profj-auto-runner" "projector" "shelly"
 >> "smootxes" "template-tester" "txomp" "web-utilities"))
 >> ("/Users/clements/clements/matthias/collects"
 >>  ("info-domain" "web"))
 >> ("/Users/clements/Library/Racket/5.1.1.5/collects"
 >>  (non-existent-path))
 >> ("/Users/clements/plt/collects"
 >>  (".gitignore" "2htdp" "afm" "algol60" "at-exp" "browser" "combinator-parser"
 >> "compiler" "config" "data" "datalog" "defaults" "deinprogramm" "drracket"
 >> "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework"
 >> "frtime" "games" "graphics" "gui-debugger" "guibuilder" "handin-client"
 >> "handin-server" "help" "hierlist" "honu" "htdp" "html" "icons" "info-domain"
 >> "lang" "launcher" "lazy" "macro-debugger" "make" "meta" "mred" "mrlib"
 >> "mysterx" "mz" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools"
 >> "picturing-programs" "plai" "planet" "plot" "preprocessor" "profile" "r5rs"
 >> "r6rs" "racket" "racklog" "rackunit" "raclog" "raco" "racunit" "reader"
 >> "readline" "redex" "repo-time-stamp" "repos-time-stamp" "rnrs" "s-exp"
 >> "schelog" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup"
 >> "sgl" "sirmail" "slatex" "slideshow" "srfi" "srpersist" "stepper"
 >> "string-constants" "swindle" "syntax" "syntax-color" "teachpack"
 >> "test-box-recovery" "test-engine" "tes!
 >>  ts" "tex2page" "texpict" "trace" "typed" "typed-scheme" "unstable" "version"
 >> "waterworld" "web-server" "wxme" "xml"))
 >>
 >> Computer Language: (("Determine language from source") (#(#t print
 >> mixed-fraction-e #f #t test-coverage) (default) #() "#lang racket\n" #f #t))
 >
 

Responsible changed from "robby" to "tewk" by robby at Wed, 18 May 2011 12:44:34 -0400
Reason>>> places

From: Kevin Tew <tewk@cs.utah.edu>
To: bugs@racket-lang.org
Cc: robby@racket-lang.org, tewk@racket-lang.org,
        bug-notification@racket-lang.org, clements@brinckerhoff.org
Subject: Re: [racket-bug] all/11930 scribble build fails for all planet-linked
 packages
Date: Wed, 18 May 2011 12:03:27 -0600

 I'll work on it.
 
 On 05/18/2011 10:44 AM, robby@racket-lang.org wrote:
 > Responsible changed from "robby" to "tewk" by robby at Wed, 18 May 2011 12:44:34 -0400
 > Reason>>>  places
 >
 >
 > View:
 >    http://bugs.racket-lang.org/query/?cmd=view&pr=11930
 
From: Kevin Tew <tewk@cs.utah.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: clements@brinckerhoff.org, bugs@racket-lang.org,
        robby@eecs.northwestern.edu
Subject: Re: [racket-bug] all/11930: scribble build fails for all planet-linked
 packages
Date: Wed, 18 May 2011 14:52:35 -0600

 This is a multi-part message in MIME format.
 --------------050806060408000104030702
 Content-Type: text/plain; charset=UTF-8; format=flowed
 Content-Transfer-Encoding: 7bit
 
 Places get setup correctly by calling boot_module_resolver
 I don't call scheme_seal_parameters though.  (adding a call to 
 scheme_seal_parameters didn't seem to help)
 
 It appears as if an early set of parameters get used at the time of the 
 error.  But at place creation and death, the 
 current-module-name-resolver looks right.
 
 Any ideas?
 
 Kevin
 
 DESC : ADDR TYPE
 main_place current-module-name-resolver pre boot_module_resolver   : 
 0x1532bd0 37 (default-module-name-resolver)
 main_place current-module-name-resolver post boot_module_resolve   : 
 0x7f7ff49c6aa8 40 (standard-module-name-resolver)
 
 
 worker_place current-module-name-resolver pre boot_module_resolve  : 
 0x7f7ff15af828 37 (default-module-name-resolver)
 worker_place current-module-name-resolver post boot_module_resolve : 
 0x7f7ff16140d8 40 (standard-module-name-resolver)
 worker_place current-module-name-resolver at error 
 location                 : 0x7f7fefa11108 37 (default-module-name-resolver)
 worker_place current-module-name-resolver at end of place execution  : 
 0x7f7fefa11188 40 (standard-module-name-resolver)
 
 
 Here is the backtrace at the site of the error.
 #0  scheme_arg_mismatch (name=0x752c4d "default-module-name-resolver",
      msg=0x752e50 "the kernel's resolver works only on `quote' forms; 
 given: ", o=0x7fffeeb2b970)
      at ../../../src/racket/gc2/../src/error.c:1421
 #1  0x000000000056c092 in default_module_resolver (argc=4, 
 argv=0x7ffff1184940) at ../../../src/racket/gc2/../src/module.c:821
 #2  0x0000000000448c9e in scheme_do_eval (obj=0x7fffeeb29108, 
 num_rands=4, rands=0x7ffff1184940, get_value=1)
      at ../../../src/racket/gc2/../src/eval.c:2351
 #3  0x000000000046a091 in apply_k () at 
 ../../../src/racket/gc2/../src/fun.c:1284
 #4  0x0000000000469916 in scheme_top_level_do_worker (k=0x469f74 
 <apply_k>, eb=1, new_thread=0, dyn_state=0x0)
      at ../../../src/racket/gc2/../src/fun.c:1123
 #5  0x000000000046947d in scheme_top_level_do (k=0x469f74 <apply_k>, 
 eb=1) at ../../../src/racket/gc2/../src/fun.c:1036
 #6  0x000000000046a12a in _apply (rator=0x7fffeeb29108, num_rands=4, 
 rands=0x7ffff1184940, multi=0, eb=1)
      at ../../../src/racket/gc2/../src/fun.c:1297
 #7  0x000000000046a15d in scheme_apply (rator=0x7fffeeb29108, 
 num_rands=4, rands=0x7ffff1184940)
      at ../../../src/racket/gc2/../src/fun.c:1303
 #8  0x000000000057530b in _module_resolve (modidx=0x7fffeda831b8, 
 stx=0x0, env=0x0, load_it=1)
      at ../../../src/racket/gc2/../src/module.c:3232
 #9  0x000000000057544e in scheme_module_resolve (modidx=0x7fffeda831b8, 
 load_it=1) at ../../../src/racket/gc2/../src/module.c:3263
 #10 0x000000000056c773 in _dynamic_require (argc=2, argv=0x7ffff03fdf10, 
 env=0x7fffeeb1cdb0, get_bucket=0, phase=0, mod_phase=0,
      indirect_ok=0, fail_with_error=1, position=-1) at 
 ../../../src/racket/gc2/../src/module.c:950
 #11 0x000000000056d4fd in scheme_dynamic_require (argc=2, 
 argv=0x7ffff03fdf10) at ../../../src/racket/gc2/../src/module.c:1161
 #12 0x0000000000448c9e in scheme_do_eval (obj=0xa2af60, num_rands=2, 
 rands=0x7ffff03fdf10, get_value=1)
      at ../../../src/racket/gc2/../src/eval.c:2351
 #13 0x000000000044be24 in scheme_do_eval (obj=0x9d2ad8, num_rands=-1, 
 rands=0x0, get_value=-1)
      at ../../../src/racket/gc2/../src/eval.c:3152
 #14 0x000000000044bccd in scheme_do_eval (obj=0x7fffeeb298d0, 
 num_rands=4, rands=0x7ffff1185840, get_value=1)
      at ../../../src/racket/gc2/../src/eval.c:3113
 #15 0x000000000046a091 in apply_k () at 
 ../../../src/racket/gc2/../src/fun.c:1284
 #16 0x0000000000469916 in scheme_top_level_do_worker (k=0x469f74 
 <apply_k>, eb=1, new_thread=0, dyn_state=0x0)
      at ../../../src/racket/gc2/../src/fun.c:1123
 #17 0x000000000046947d in scheme_top_level_do (k=0x469f74 <apply_k>, 
 eb=1) at ../../../src/racket/gc2/../src/fun.c:1036
 #18 0x000000000046a12a in _apply (rator=0x7fffeeb29188, num_rands=4, 
 rands=0x7ffff1185840, multi=0, eb=1)
      at ../../../src/racket/gc2/../src/fun.c:1297
 #19 0x000000000046a15d in scheme_apply (rator=0x7fffeeb29188, 
 num_rands=4, rands=0x7ffff1185840)
      at ../../../src/racket/gc2/../src/fun.c:1303
 #20 0x000000000057530b in _module_resolve (modidx=0x7fffeda830d8, 
 stx=0x0, env=0x0, load_it=1)
      at ../../../src/racket/gc2/../src/module.c:3232
 #21 0x000000000057544e in scheme_module_resolve (modidx=0x7fffeda830d8, 
 load_it=1) at ../../../src/racket/gc2/../src/module.c:3263
 #22 0x000000000056c773 in _dynamic_require (argc=2, argv=0x7ffff03fdf50, 
 env=0x7fffeeb1cdb0, get_bucket=0, phase=0, mod_phase=0,
      indirect_ok=0, fail_with_error=1, position=-1) at 
 ../../../src/racket/gc2/../src/module.c:950
 #23 0x000000000056d4fd in scheme_dynamic_require (argc=2, 
 argv=0x7ffff03fdf50) at ../../../src/racket/gc2/../src/module.c:1161
 #24 0x0000000000448c9e in scheme_do_eval (obj=0xa2af60, num_rands=2, 
 rands=0x7ffff03fdf50, get_value=1)
      at ../../../src/racket/gc2/../src/eval.c:2351
 #25 0x000000000046a091 in apply_k () at 
 ../../../src/racket/gc2/../src/fun.c:1284
 #26 0x0000000000469916 in scheme_top_level_do_worker (k=0x469f74 
 <apply_k>, eb=1, new_thread=0, dyn_state=0x0)
      at ../../../src/racket/gc2/../src/fun.c:1123
 #27 0x000000000046947d in scheme_top_level_do (k=0x469f74 <apply_k>, 
 eb=1) at ../../../src/racket/gc2/../src/fun.c:1036
 #28 0x000000000046a12a in _apply (rator=0x7fffeda4aa70, num_rands=1, 
 rands=0x7ffff11862b0, multi=0, eb=1)
      at ../../../src/racket/gc2/../src/fun.c:1297
 #29 0x000000000046a15d in scheme_apply (rator=0x7fffeda4aa70, 
 num_rands=1, rands=0x7ffff11862b0)
      at ../../../src/racket/gc2/../src/fun.c:1303
 #30 0x00000000005e8a76 in place_start_proc_after_stack (data_arg=0x0, 
 stack_base=0x7ffff1186340)
      at ../../../src/racket/gc2/../src/place.c:1640
 #31 0x00000000005e831a in place_start_proc (data_arg=0x7ffff11c4f60) at 
 ../../../src/racket/gc2/../src/place.c:1496
 #32 0x0000000000592ce4 in mzrt_thread_stub (data=0xa83220) at 
 ../../../src/racket/gc2/../src/mzrt.c:179
 #33 0x00007ffff7533d8c in start_thread () from 
 /lib/x86_64-linux-gnu/libpthread.so.0
 #34 0x00007ffff727f04d in clone () from /lib/x86_64-linux-gnu/libc.so.6
 #35 0x0000000000000000 in ?? ()
 
 On 05/18/2011 08:39 AM, Matthew Flatt wrote:
 >  This is a problem with places.
 >
 >  Here's a small example:
 >
 >  #lang racket/base (require racket/place)
 >
 >  (provide main)
 >
 >  (define (main) (place-wait (place/anon pch (dynamic-require '(planet
 >  foo/bar) #f))))
 >
 >  The `current-module-name-resolver' parameter somehow isn't getting
 >  configured right in the non-main place.
 >
 >  At Tue, 17 May 2011 19:44:02 -0400, clements@brinckerhoff.org wrote:
 > > A new problem report is waiting at
 > > http://bugs.racket-lang.org/query/?cmd=view&pr=11930
 > >
 > > Reported by John Clements for release:
 > > 5.1.1.5--2011-05-06(101b22e/g)
 > >
 > > *** Description: It appears that all attempts to build local
 > > planet packages attached with 'raco planet link' produce this
 > > error:
 > >
 > > default-module-name-resolver: the kernel's resolver works only on
 > > `quote' forms; given: '(lib "planet/resolver.rkt")
 > >
 > > The workaround is to use fileinject rather than link/unlink, but
 > > that's a bit painful
 > >
 > > *** How to repeat: cd /tmp mkdir planet-example cd planet-example
 > > cat > info.rkt <<DELIMITER #lang setup/infotab
 > >
 > > (define name "planet-example") (define scribblings
 > > '(("broken.scrbl"))) DELIMITER cat > broken.scrbl <<DELIMITER #lang
 > > scribble/doc
 > >
 > > @(require scribble/manual)
 > >
 > > @title{AWESOMENESS!!1!!} @author{Bob Trotsky} DELIMITER raco planet
 > > link clements planet-example.plt 1 0 /tmp/planet-example raco setup
 > > -P clements planet-example.plt 1 0
 > >
 > > ... see the error above.
 > >
 > > *** Environment: macosx "Darwin pcp070679pcs.wireless.calpoly.edu
 > > 10.7.0 Darwin Kernel Version 10.7.0: Sat Jan 29 15:17:16 PST 2011;
 > > root:xnu-1504.9.37~1/RELEASE_I386 i386" (x86_64-macosx/3m)
 > > (get-display-depth) = 32 Human Language: english
 > > (current-memory-use) 314088512
 > >
 > > Collections: ("/Users/clements/git-clements/clements/collects"
 > > (".gitignore" "badger" "clements-lib" "contour-letters"
 > > "file-size-checker" "info-domain" "iTunes-helper" "java-helpers"
 > > "jbc-gnucash" "matrix-arithmetic" "mboxrd-read" "midi" "mnemisis"
 > > "profj-auto-runner" "projector" "shelly" "smootxes"
 > > "template-tester" "txomp" "web-utilities"))
 > > ("/Users/clements/clements/matthias/collects" ("info-domain"
 > > "web")) ("/Users/clements/Library/Racket/5.1.1.5/collects"
 > > (non-existent-path)) ("/Users/clements/plt/collects" (".gitignore"
 > > "2htdp" "afm" "algol60" "at-exp" "browser" "combinator-parser"
 > > "compiler" "config" "data" "datalog" "defaults" "deinprogramm"
 > > "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace"
 > > "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger"
 > > "guibuilder" "handin-client" "handin-server" "help" "hierlist"
 > > "honu" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy"
 > > "macro-debugger" "make" "meta" "mred" "mrlib" "mysterx" "mz"
 > > "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools"
 > > "picturing-programs" "plai" "planet" "plot" "preprocessor"
 > > "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raclog"
 > > "raco" "racunit" "reader" "readline" "redex" "repo-time-stamp"
 > > "repos-time-stamp" "rnrs" "s-exp" "schelog" "scheme" "schemeunit"
 > > "scribble" "scribblings" "scriblib" "setup" "sgl" "sirmail"
 > > "slatex" "slideshow" "srfi" "srpersist" "stepper"
 > > "string-constants" "swindle" "syntax" "syntax-color" "teachpack"
 > > "test-box-recovery" "test-engine" "tes! ts" "tex2page" "texpict"
 > > "trace" "typed" "typed-scheme" "unstable" "version" "waterworld"
 > > "web-server" "wxme" "xml"))
 > >
 > > Computer Language: (("Determine language from source") (#(#t print
 > > mixed-fraction-e #f #t test-coverage) (default) #() "#lang
 > > racket\n" #f #t))
 
 
 
 --------------050806060408000104030702
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: 8bit
 
 <html>
   <head>
     <meta content="text/html; charset=UTF-8" http-equiv="Content-Type">
   </head>
   <body text="#000000" bgcolor="#FFFFFF">
     Places get setup correctly by calling boot_module_resolver<br>
     I don't call scheme_seal_parameters though.  (adding a call to
     scheme_seal_parameters didn't seem to help)<br>
     <br>
     It appears as if an early set of parameters get used at the time of
     the error.  But at place creation and death, the
     current-module-name-resolver looks right.<br>
     <br>
     Any ideas?<br>
     <br>
     Kevin<br>
     <br>
     DESC : ADDR TYPE<br>
     main_place current-module-name-resolver pre boot_module_resolver   :
     0x1532bd0 37 (default-module-name-resolver)<br>
     main_place current-module-name-resolver post boot_module_resolve   :
     0x7f7ff49c6aa8 40 (standard-module-name-resolver)<br>
     <br>
     <br>
     worker_place current-module-name-resolver pre boot_module_resolve  :
     0x7f7ff15af828 37 (default-module-name-resolver) <br>
     worker_place current-module-name-resolver post boot_module_resolve :
     0x7f7ff16140d8 40 (standard-module-name-resolver)<br>
     worker_place current-module-name-resolver at error
     location                 : 0x7f7fefa11108 37
     (default-module-name-resolver)<br>
     worker_place current-module-name-resolver at end of place execution 
     : 0x7f7fefa11188 40 (standard-module-name-resolver)<br>
     <br>
     <br>
     Here is the backtrace at the site of the error.<br>
     #0  scheme_arg_mismatch (name=0x752c4d
     "default-module-name-resolver",<br>
         msg=0x752e50 "the kernel's resolver works only on `quote' forms;
     given: ", o=0x7fffeeb2b970)<br>
         at ../../../src/racket/gc2/../src/error.c:1421<br>
     #1  0x000000000056c092 in default_module_resolver (argc=4,
     argv=0x7ffff1184940) at ../../../src/racket/gc2/../src/module.c:821<br>
     #2  0x0000000000448c9e in scheme_do_eval (obj=0x7fffeeb29108,
     num_rands=4, rands=0x7ffff1184940, get_value=1)<br>
         at ../../../src/racket/gc2/../src/eval.c:2351<br>
     #3  0x000000000046a091 in apply_k () at
     ../../../src/racket/gc2/../src/fun.c:1284<br>
     #4  0x0000000000469916 in scheme_top_level_do_worker (k=0x469f74
     &lt;apply_k&gt;, eb=1, new_thread=0, dyn_state=0x0)<br>
         at ../../../src/racket/gc2/../src/fun.c:1123<br>
     #5  0x000000000046947d in scheme_top_level_do (k=0x469f74
     &lt;apply_k&gt;, eb=1) at ../../../src/racket/gc2/../src/fun.c:1036<br>
     #6  0x000000000046a12a in _apply (rator=0x7fffeeb29108, num_rands=4,
     rands=0x7ffff1184940, multi=0, eb=1)<br>
         at ../../../src/racket/gc2/../src/fun.c:1297<br>
     #7  0x000000000046a15d in scheme_apply (rator=0x7fffeeb29108,
     num_rands=4, rands=0x7ffff1184940)<br>
         at ../../../src/racket/gc2/../src/fun.c:1303<br>
     #8  0x000000000057530b in _module_resolve (modidx=0x7fffeda831b8,
     stx=0x0, env=0x0, load_it=1)<br>
         at ../../../src/racket/gc2/../src/module.c:3232<br>
     #9  0x000000000057544e in scheme_module_resolve
     (modidx=0x7fffeda831b8, load_it=1) at
     ../../../src/racket/gc2/../src/module.c:3263<br>
     #10 0x000000000056c773 in _dynamic_require (argc=2,
     argv=0x7ffff03fdf10, env=0x7fffeeb1cdb0, get_bucket=0, phase=0,
     mod_phase=0,<br>
         indirect_ok=0, fail_with_error=1, position=-1) at
     ../../../src/racket/gc2/../src/module.c:950<br>
     #11 0x000000000056d4fd in scheme_dynamic_require (argc=2,
     argv=0x7ffff03fdf10) at ../../../src/racket/gc2/../src/module.c:1161<br>
     #12 0x0000000000448c9e in scheme_do_eval (obj=0xa2af60, num_rands=2,
     rands=0x7ffff03fdf10, get_value=1)<br>
         at ../../../src/racket/gc2/../src/eval.c:2351<br>
     #13 0x000000000044be24 in scheme_do_eval (obj=0x9d2ad8,
     num_rands=-1, rands=0x0, get_value=-1)<br>
         at ../../../src/racket/gc2/../src/eval.c:3152<br>
     #14 0x000000000044bccd in scheme_do_eval (obj=0x7fffeeb298d0,
     num_rands=4, rands=0x7ffff1185840, get_value=1)<br>
         at ../../../src/racket/gc2/../src/eval.c:3113<br>
     #15 0x000000000046a091 in apply_k () at
     ../../../src/racket/gc2/../src/fun.c:1284<br>
     #16 0x0000000000469916 in scheme_top_level_do_worker (k=0x469f74
     &lt;apply_k&gt;, eb=1, new_thread=0, dyn_state=0x0)<br>
         at ../../../src/racket/gc2/../src/fun.c:1123<br>
     #17 0x000000000046947d in scheme_top_level_do (k=0x469f74
     &lt;apply_k&gt;, eb=1) at ../../../src/racket/gc2/../src/fun.c:1036<br>
     #18 0x000000000046a12a in _apply (rator=0x7fffeeb29188, num_rands=4,
     rands=0x7ffff1185840, multi=0, eb=1)<br>
         at ../../../src/racket/gc2/../src/fun.c:1297<br>
     #19 0x000000000046a15d in scheme_apply (rator=0x7fffeeb29188,
     num_rands=4, rands=0x7ffff1185840)<br>
         at ../../../src/racket/gc2/../src/fun.c:1303<br>
     #20 0x000000000057530b in _module_resolve (modidx=0x7fffeda830d8,
     stx=0x0, env=0x0, load_it=1)<br>
         at ../../../src/racket/gc2/../src/module.c:3232<br>
     #21 0x000000000057544e in scheme_module_resolve
     (modidx=0x7fffeda830d8, load_it=1) at
     ../../../src/racket/gc2/../src/module.c:3263<br>
     #22 0x000000000056c773 in _dynamic_require (argc=2,
     argv=0x7ffff03fdf50, env=0x7fffeeb1cdb0, get_bucket=0, phase=0,
     mod_phase=0,<br>
         indirect_ok=0, fail_with_error=1, position=-1) at
     ../../../src/racket/gc2/../src/module.c:950<br>
     #23 0x000000000056d4fd in scheme_dynamic_require (argc=2,
     argv=0x7ffff03fdf50) at ../../../src/racket/gc2/../src/module.c:1161<br>
     #24 0x0000000000448c9e in scheme_do_eval (obj=0xa2af60, num_rands=2,
     rands=0x7ffff03fdf50, get_value=1)<br>
         at ../../../src/racket/gc2/../src/eval.c:2351<br>
     #25 0x000000000046a091 in apply_k () at
     ../../../src/racket/gc2/../src/fun.c:1284<br>
     #26 0x0000000000469916 in scheme_top_level_do_worker (k=0x469f74
     &lt;apply_k&gt;, eb=1, new_thread=0, dyn_state=0x0)<br>
         at ../../../src/racket/gc2/../src/fun.c:1123<br>
     #27 0x000000000046947d in scheme_top_level_do (k=0x469f74
     &lt;apply_k&gt;, eb=1) at ../../../src/racket/gc2/../src/fun.c:1036<br>
     #28 0x000000000046a12a in _apply (rator=0x7fffeda4aa70, num_rands=1,
     rands=0x7ffff11862b0, multi=0, eb=1)<br>
         at ../../../src/racket/gc2/../src/fun.c:1297<br>
     #29 0x000000000046a15d in scheme_apply (rator=0x7fffeda4aa70,
     num_rands=1, rands=0x7ffff11862b0)<br>
         at ../../../src/racket/gc2/../src/fun.c:1303<br>
     #30 0x00000000005e8a76 in place_start_proc_after_stack
     (data_arg=0x0, stack_base=0x7ffff1186340)<br>
         at ../../../src/racket/gc2/../src/place.c:1640<br>
     #31 0x00000000005e831a in place_start_proc (data_arg=0x7ffff11c4f60)
     at ../../../src/racket/gc2/../src/place.c:1496<br>
     #32 0x0000000000592ce4 in mzrt_thread_stub (data=0xa83220) at
     ../../../src/racket/gc2/../src/mzrt.c:179<br>
     #33 0x00007ffff7533d8c in start_thread () from
     /lib/x86_64-linux-gnu/libpthread.so.0<br>
     #34 0x00007ffff727f04d in clone () from
     /lib/x86_64-linux-gnu/libc.so.6<br>
     #35 0x0000000000000000 in ?? ()<br>
     <br>
     On 05/18/2011 08:39 AM, Matthew Flatt wrote:<br>
     <span style="white-space: pre;">&gt; This is a problem with places.<br>
       &gt; <br>
       &gt; Here's a small example:<br>
       &gt; <br>
       &gt; #lang racket/base (require racket/place)<br>
       &gt; <br>
       &gt; (provide main)<br>
       &gt; <br>
       &gt; (define (main) (place-wait (place/anon pch (dynamic-require
       '(planet<br>
       &gt; foo/bar) #f))))<br>
       &gt; <br>
       &gt; The `current-module-name-resolver' parameter somehow isn't
       getting <br>
       &gt; configured right in the non-main place.<br>
       &gt; <br>
       &gt; At Tue, 17 May 2011 19:44:02 -0400, <a class="moz-txt-link-abbreviated" href="mailto:clements@brinckerhoff.org">clements@brinckerhoff.org</a>
       wrote:<br>
       &gt;&gt; A new problem report is waiting at <br>
       &gt;&gt; <a class="moz-txt-link-freetext" href="http://bugs.racket-lang.org/query/?cmd=view&amp;pr=11930">http://bugs.racket-lang.org/query/?cmd=view&amp;pr=11930</a><br>
       &gt;&gt; <br>
       &gt;&gt; Reported by John Clements for release: <br>
       &gt;&gt; 5.1.1.5--2011-05-06(101b22e/g)<br>
       &gt;&gt; <br>
       &gt;&gt; *** Description: It appears that all attempts to build
       local<br>
       &gt;&gt; planet packages attached with 'raco planet link' produce
       this<br>
       &gt;&gt; error:<br>
       &gt;&gt; <br>
       &gt;&gt; default-module-name-resolver: the kernel's resolver works
       only on <br>
       &gt;&gt; `quote' forms; given: '(lib "planet/resolver.rkt")<br>
       &gt;&gt; <br>
       &gt;&gt; The workaround is to use fileinject rather than
       link/unlink, but <br>
       &gt;&gt; that's a bit painful<br>
       &gt;&gt; <br>
       &gt;&gt; *** How to repeat: cd /tmp mkdir planet-example cd
       planet-example <br>
       &gt;&gt; cat &gt; info.rkt &lt;&lt;DELIMITER #lang setup/infotab<br>
       &gt;&gt; <br>
       &gt;&gt; (define name "planet-example") (define scribblings <br>
       &gt;&gt; '(("broken.scrbl"))) DELIMITER cat &gt; broken.scrbl
       &lt;&lt;DELIMITER #lang<br>
       &gt;&gt; scribble/doc<br>
       &gt;&gt; <br>
       &gt;&gt; @(require scribble/manual)<br>
       &gt;&gt; <br>
       &gt;&gt; @title{AWESOMENESS!!1!!} @author{Bob Trotsky} DELIMITER
       raco planet<br>
       &gt;&gt; link clements planet-example.plt 1 0 /tmp/planet-example
       raco setup<br>
       &gt;&gt; -P clements planet-example.plt 1 0<br>
       &gt;&gt; <br>
       &gt;&gt; ... see the error above.<br>
       &gt;&gt; <br>
       &gt;&gt; *** Environment: macosx "Darwin
       pcp070679pcs.wireless.calpoly.edu <br>
       &gt;&gt; 10.7.0 Darwin Kernel Version 10.7.0: Sat Jan 29 15:17:16
       PST 2011;<br>
       &gt;&gt; root:xnu-1504.9.37~1/RELEASE_I386 i386"
       (x86_64-macosx/3m) <br>
       &gt;&gt; (get-display-depth) = 32 Human Language: english <br>
       &gt;&gt; (current-memory-use) 314088512<br>
       &gt;&gt; <br>
       &gt;&gt; Collections:
       ("/Users/clements/git-clements/clements/collects" <br>
       &gt;&gt; (".gitignore" "badger" "clements-lib" "contour-letters" <br>
       &gt;&gt; "file-size-checker" "info-domain" "iTunes-helper"
       "java-helpers" <br>
       &gt;&gt; "jbc-gnucash" "matrix-arithmetic" "mboxrd-read" "midi"
       "mnemisis" <br>
       &gt;&gt; "profj-auto-runner" "projector" "shelly" "smootxes" <br>
       &gt;&gt; "template-tester" "txomp" "web-utilities")) <br>
       &gt;&gt; ("/Users/clements/clements/matthias/collects"
       ("info-domain" <br>
       &gt;&gt; "web"))
       ("/Users/clements/Library/Racket/5.1.1.5/collects" <br>
       &gt;&gt; (non-existent-path)) ("/Users/clements/plt/collects"
       (".gitignore"<br>
       &gt;&gt; "2htdp" "afm" "algol60" "at-exp" "browser"
       "combinator-parser" <br>
       &gt;&gt; "compiler" "config" "data" "datalog" "defaults"
       "deinprogramm" <br>
       &gt;&gt; "drracket" "drscheme" "dynext" "embedded-gui" "eopl"
       "errortrace" <br>
       &gt;&gt; "ffi" "file" "framework" "frtime" "games" "graphics"
       "gui-debugger"<br>
       &gt;&gt; "guibuilder" "handin-client" "handin-server" "help"
       "hierlist"<br>
       &gt;&gt; "honu" "htdp" "html" "icons" "info-domain" "lang"
       "launcher" "lazy"<br>
       &gt;&gt; "macro-debugger" "make" "meta" "mred" "mrlib" "mysterx"
       "mz"<br>
       &gt;&gt; "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools"<br>
       &gt;&gt; "picturing-programs" "plai" "planet" "plot"
       "preprocessor"<br>
       &gt;&gt; "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit"
       "raclog"<br>
       &gt;&gt; "raco" "racunit" "reader" "readline" "redex"
       "repo-time-stamp"<br>
       &gt;&gt; "repos-time-stamp" "rnrs" "s-exp" "schelog" "scheme"
       "schemeunit"<br>
       &gt;&gt; "scribble" "scribblings" "scriblib" "setup" "sgl"
       "sirmail"<br>
       &gt;&gt; "slatex" "slideshow" "srfi" "srpersist" "stepper" <br>
       &gt;&gt; "string-constants" "swindle" "syntax" "syntax-color"
       "teachpack" <br>
       &gt;&gt; "test-box-recovery" "test-engine" "tes! ts" "tex2page"
       "texpict" <br>
       &gt;&gt; "trace" "typed" "typed-scheme" "unstable" "version"
       "waterworld" <br>
       &gt;&gt; "web-server" "wxme" "xml"))<br>
       &gt;&gt; <br>
       &gt;&gt; Computer Language: (("Determine language from source")
       (#(#t print<br>
       &gt;&gt; mixed-fraction-e #f #t test-coverage) (default) #()
       "#lang <br>
       &gt;&gt; racket\n" #f #t))</span><br>
     <br>
     <br>
   </body>
 </html>
 
 --------------050806060408000104030702--
From: Kevin Tew <tewk@cs.utah.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: clements@brinckerhoff.org, bugs@racket-lang.org,
        robby@eecs.northwestern.edu
Subject: Re: [racket-bug] all/11930: scribble build fails for all planet-linked
 packages
Date: Thu, 19 May 2011 06:47:53 -0600

 More info.
 
 Adding the patch below seems to fix Matthews small test case, but it 
 doesn't seem to have any effect on tests/planet/doc-build.rkt
 
 Kevin
 
 diff --git a/src/racket/src/env.c b/src/racket/src/env.c
 index ff6a543..19474bd 100644
 --- a/src/racket/src/env.c
 +++ b/src/racket/src/env.c
 @@ -483,6 +483,7 @@ static Scheme_Env *place_instance_init(void 
 *stack_base, int initial_main_os_thr
 
     scheme_save_initial_module_set(env);
 
 +  scheme_seal_parameters();
 
     scheme_starting_up = 0;
 
 
 WITH scheme_seal_parameters(
 Thu May 19 06:14:52 tewk@nan:~/srcs/mplt$ rktl -jtm matthews_test.rkt
 standard-module-name-resolver: collection not found: "planet" in any of: ()
 
   === context ===
 show-collection-err
 lifted.0
 
 1
 
 WITHOUT scheme_seal_parameters(
 Thu May 19 06:14:55 tewk@nan:~/srcs/mplt$ rktl -jtm matthews_test
 .rkt
 default-module-name-resolver: the kernel's resolver works only on 
 `quote' forms; given: '(lib "planet/resolver.rkt")
 
   === context ===
 lifted.0
 
 1
 
 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Kevin Tew <tewk@cs.utah.edu>
Cc: Matthew Flatt <mflatt@cs.utah.edu>,
        "clements@brinckerhoff.org" <clements@brinckerhoff.org>,
        "bugs@racket-lang.org" <bugs@racket-lang.org>
Subject: Re: [racket-bug] all/11930: scribble build fails for all
 planet-linked packages
Date: Thu, 19 May 2011 08:03:14 -0500

 Looks like progress.
 
 Is the current-library-collections parameter getting initialized at
 the right time?
 
 The module name resolver actually saves a bunch state (just
 parameters?) early on and then restores them before trying to load the
 planet resolver. That seems to be going wrong here somehow.
 
 Robby
 
 On Thursday, May 19, 2011, Kevin Tew <tewk@cs.utah.edu> wrote:
 > More info.
 >
 > Adding the patch below seems to fix Matthews small test case, but it doesn't seem to have any effect on tests/planet/doc-build.rkt
 >
 > Kevin
 >
 > diff --git a/src/racket/src/env.c b/src/racket/src/env.c
 > index ff6a543..19474bd 100644
 > --- a/src/racket/src/env.c
 > +++ b/src/racket/src/env.c
 > @@ -483,6 +483,7 @@ static Scheme_Env *place_instance_init(void *stack_base, int initial_main_os_thr
 >
 >    scheme_save_initial_module_set(env);
 >
 > +  scheme_seal_parameters();
 >
 >    scheme_starting_up = 0;
 >
 >
 > WITH scheme_seal_parameters(
 > Thu May 19 06:14:52 tewk@nan:~/srcs/mplt$ rktl -jtm matthews_test.rkt
 > standard-module-name-resolver: collection not found: "planet" in any of: ()
 >
 >  === context ===
 > show-collection-err
 > lifted.0
 >
 > 1
 >
 > WITHOUT scheme_seal_parameters(
 > Thu May 19 06:14:55 tewk@nan:~/srcs/mplt$ rktl -jtm matthews_test
 > .rkt
 > default-module-name-resolver: the kernel's resolver works only on `quote' forms; given: '(lib "planet/resolver.rkt")
 >
 >  === context ===
 > lifted.0
 >
 > 1
 >
 >
 >
 
From: Matthew Flatt <mflatt@cs.utah.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: Kevin Tew <tewk@cs.utah.edu>,
        "clements@brinckerhoff.org" <clements@brinckerhoff.org>,
        "bugs@racket-lang.org" <bugs@racket-lang.org>
Subject: Re: [racket-bug] all/11930: scribble build fails for all
 planet-linked packages
Date: Thu, 19 May 2011 06:51:48 -0700

 The main place is created and configured in "cmdline.inc" with
 
   /* Creates the main kernel environment */
   global_env = mk_basic_env();
 
 #ifndef NO_FILE_SYSTEM_UTILS
   scheme_init_collection_paths_post(global_env, 
                                     collects_paths_l,
                                     collects_paths_r);
 #endif
 
   scheme_seal_parameters();
 
 So that's why adding scheme_seal_parmeters() in "env.c" helps, but also
 why the collection path needs to be set.
 
 I think a place should inherit the collection paths of the creating
 place, so probably after the call to scheme_place_instance_init() in
 "place.c" there should be
 
   /* ... set MZCONFIG_COLLECTION_PATHS in current config ... */
   scheme_seal_parameters();
 
 Putting scheme_seal_parameters() in place_instance_init() isn't really
 right, since that it also called when setting up the original place.
 
 At Thu, 19 May 2011 08:03:14 -0500, Robby Findler wrote:
 > Looks like progress.
 > 
 > Is the current-library-collections parameter getting initialized at
 > the right time?
 > 
 > The module name resolver actually saves a bunch state (just
 > parameters?) early on and then restores them before trying to load the
 > planet resolver. That seems to be going wrong here somehow.
 > 
 > Robby
 > 
 > On Thursday, May 19, 2011, Kevin Tew <tewk@cs.utah.edu> wrote:
 > > More info.
 > >
 > > Adding the patch below seems to fix Matthews small test case, but it doesn't 
 > seem to have any effect on tests/planet/doc-build.rkt
 > >
 > > Kevin
 > >
 > > diff --git a/src/racket/src/env.c b/src/racket/src/env.c
 > > index ff6a543..19474bd 100644
 > > --- a/src/racket/src/env.c
 > > +++ b/src/racket/src/env.c
 > > @@ -483,6 +483,7 @@ static Scheme_Env *place_instance_init(void *stack_base, 
 > int initial_main_os_thr
 > >
 > >    scheme_save_initial_module_set(env);
 > >
 > > +  scheme_seal_parameters();
 > >
 > >    scheme_starting_up = 0;
 > >
 > >
 > > WITH scheme_seal_parameters(
 > > Thu May 19 06:14:52 tewk@nan:~/srcs/mplt$ rktl -jtm matthews_test.rkt
 > > standard-module-name-resolver: collection not found: "planet" in any of: ()
 > >
 > >  === context ===
 > > show-collection-err
 > > lifted.0
 > >
 > > 1
 > >
 > > WITHOUT scheme_seal_parameters(
 > > Thu May 19 06:14:55 tewk@nan:~/srcs/mplt$ rktl -jtm matthews_test
 > > .rkt
 > > default-module-name-resolver: the kernel's resolver works only on `quote' 
 > forms; given: '(lib "planet/resolver.rkt")
 > >
 > >  === context ===
 > > lifted.0
 > >
 > > 1
 > >
 > >
 > >
 

State changed from "open" to "closed" by tewk at Thu, 19 May 2011 13:55:38 -0400
Reason>>> Fixed in commit 518f20142c0fd4e0f0011686e5c24e5bba10d0cd

