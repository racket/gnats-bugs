From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Mon Dec 30 22:44:00 2013
Received: from mail-ob0-f169.google.com (mail-ob0-f169.google.com [209.85.214.169])
	by winooski.ccs.neu.edu (8.14.7/8.14.7) with ESMTP id rBV3hws6014042
	for <bugs@bugs.plt-scheme.org>; Mon, 30 Dec 2013 22:43:58 -0500
Message-Id: <201312310343.rBV3htAj014035@winooski.ccs.neu.edu>
Date: Mon, 30 Dec 2013 22:43:55 -0500
From: neil.toronto@gmail.com
To: bugs@racket-lang.org
Subject: Running programs in DrRacket leaks memory

>Number:         14264
>Category:       all
>Synopsis:       Running programs in DrRacket leaks memory
>Class:          sw-bug
>Responsible:    nobody
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Mon Dec 30 22:44:01 -0500 2013
>Last-Modified:  Tue Dec 31 17:36:01 -0500 2013
>Originator:     Neil Toronto
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.91.0.900--2013-12-27(219d41f/a)
>Environment:
unix "Linux woodstock 3.11.0-14-generic #21-Ubuntu SMP Tue Nov 12 17:04:55 UTC 2013 x86_64 x86_64 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 298806588
Links: (links) = (); (links #:user? #f) = ("contract-profile" "syntax" "mysterx" "sgl" "datalog" "shell-completion" "algol60" "icons" "ds-store" "slatex" "realm" "games" "make" "trace" "plai" "eopl" "lazy" "preprocessor" "profile" "racklog" "mzcom" "schemeunit" "unstable" "frtime" "mrlib" "swindle"); (links #:root? #t) = (); (links #:user? #f #:root? #t) = (#<path:/usr/racket-5.91.0.900/share/pkgs/racket-lib> #<path:/usr/racket-5.91.0.900/share/pkgs/main-distribution> #<path:/usr/racket-5.91.0.900/share/pkgs/main-distribution-test> #<path:/usr/racket-5.91.0.900/share/pkgs/at-exp-lib> #<path:/usr/racket-5.91.0.900/share/pkgs/compatibility> #<path:/usr/racket-5.91.0.900/share/pkgs/compiler> #<path:/usr/racket-5.91.0.900/share/pkgs/data> #<path:/usr/racket-5.91.0.900/share/pkgs/db> #<path:/usr/racket-5.91.0.900/share/pkgs/deinprogramm> #<path:/usr/racket-5.91.0.900/share/pkgs/draw> #<path:/usr/racket-5.91.0.900/share/pkgs/draw-doc> #<path:/usr/racket-5.91.0.900/share/pkgs/draw-!
 lib> #<path:/usr/racket-5.91.0.900/share/pkgs/drracket> #<path:/usr/racket-5.91.0.900/share/pkgs/errortrace> #<path:/usr/racket-5.91.0.900/share/pkgs/future-visualizer> #<path:/usr/racket-5.91.0.900/share/pkgs/future-visualizer-typed> #<path:/usr/racket-5.91.0.900/share/pkgs/gui> #<path:/usr/racket-5.91.0.900/share/pkgs/htdp> #<path:/usr/racket-5.91.0.900/share/pkgs/html> #<path:/usr/racket-5.91.0.900/share/pkgs/images> #<path:/usr/racket-5.91.0.900/share/pkgs/macro-debugger> #<path:/usr/racket-5.91.0.900/share/pkgs/macro-debugger-text-lib> #<path:/usr/racket-5.91.0.900/share/pkgs/math> #<path:/usr/racket-5.91.0.900/share/pkgs/mzscheme> #<path:/usr/racket-5.91.0.900/share/pkgs/net> #<path:/usr/racket-5.91.0.900/share/pkgs/parser-tools> #<path:/usr/racket-5.91.0.900/share/pkgs/pconvert-lib> #<path:/usr/racket-5.91.0.900/share/pkgs/pict> #<path:/usr/racket-5.91.0.900/share/pkgs/picturing-programs> #<path:/usr/racket-5.91.0.900/share/pkgs/planet> #<path:/usr/racket-5.91.0.900/!
 share/pkgs/plot> #<path:/usr/racket-5.91.0.900/share/pkgs/prof!
 ile> #<path:/usr/racket-5.91.0.900/share/pkgs/r5rs> #<path:/usr/racket-5.91.0.900/share/pkgs/r6rs> #<path:/usr/racket-5.91.0.900/share/pkgs/racket-doc> #<path:/usr/racket-5.91.0.900/share/pkgs/distributed-places> #<path:/usr/racket-5.91.0.900/share/pkgs/racket-index> #<path:/usr/racket-5.91.0.900/share/pkgs/rackunit> #<path:/usr/racket-5.91.0.900/share/pkgs/readline> #<path:/usr/racket-5.91.0.900/share/pkgs/redex> #<path:/usr/racket-5.91.0.900/share/pkgs/sandbox-lib> #<path:/usr/racket-5.91.0.900/share/pkgs/scribble> #<path:/usr/racket-5.91.0.900/share/pkgs/serialize-cstruct-lib> #<path:/usr/racket-5.91.0.900/share/pkgs/slideshow> #<path:/usr/racket-5.91.0.900/share/pkgs/snip> #<path:/usr/racket-5.91.0.900/share/pkgs/srfi> #<path:/usr/racket-5.91.0.900/share/pkgs/string-constants> #<path:/usr/racket-5.91.0.900/share/pkgs/syntax-color> #<path:/usr/racket-5.91.0.900/share/pkgs/typed-racket> #<path:/usr/racket-5.91.0.900/share/pkgs/typed-racket-more> #<path:/usr/racket-5.91.0.!
 900/share/pkgs/unstable> #<path:/usr/racket-5.91.0.900/share/pkgs/unstable-contract-lib> #<path:/usr/racket-5.91.0.900/share/pkgs/unstable-latent-contract-lib> #<path:/usr/racket-5.91.0.900/share/pkgs/unstable-list-lib> #<path:/usr/racket-5.91.0.900/share/pkgs/unstable-options-lib> #<path:/usr/racket-5.91.0.900/share/pkgs/unstable-parameter-group-lib> #<path:/usr/racket-5.91.0.900/share/pkgs/unstable-2d> #<path:/usr/racket-5.91.0.900/share/pkgs/web-server> #<path:/usr/racket-5.91.0.900/share/pkgs/wxme> #<path:/usr/racket-5.91.0.900/share/pkgs/xrepl> #<path:/usr/racket-5.91.0.900/share/pkgs/racket-test> #<path:/usr/racket-5.91.0.900/share/pkgs/gui-test> #<path:/usr/racket-5.91.0.900/share/pkgs/db-test> #<path:/usr/racket-5.91.0.900/share/pkgs/htdp-test> #<path:/usr/racket-5.91.0.900/share/pkgs/redex-test> #<path:/usr/racket-5.91.0.900/share/pkgs/drracket-test> #<path:/usr/racket-5.91.0.900/share/pkgs/profile-test> #<path:/usr/racket-5.91.0.900/share/pkgs/srfi-test> #<path:/u!
 sr/racket-5.91.0.900/share/pkgs/errortrace-test> #<path:/usr/racket-5.9!
 1.0.900/share/pkgs/r6rs-test> #<path:/usr/racket-5.91.0.900/share/pkgs/web-server-test> #<path:/usr/racket-5.91.0.900/share/pkgs/typed-racket-test> #<path:/usr/racket-5.91.0.900/share/pkgs/xrepl-test> #<path:/usr/racket-5.91.0.900/share/pkgs/scribble-test> #<path:/usr/racket-5.91.0.900/share/pkgs/unstable-test> #<path:/usr/racket-5.91.0.900/share/pkgs/compiler-test> #<path:/usr/racket-5.91.0.900/share/pkgs/compatibility-test> #<path:/usr/racket-5.91.0.900/share/pkgs/data-test> #<path:/usr/racket-5.91.0.900/share/pkgs/net-test> #<path:/usr/racket-5.91.0.900/share/pkgs/planet-test> #<path:/usr/racket-5.91.0.900/share/pkgs/syntax-color-test> #<path:/usr/racket-5.91.0.900/share/pkgs/images-test> #<path:/usr/racket-5.91.0.900/share/pkgs/plot-test> #<path:/usr/racket-5.91.0.900/share/pkgs/math-test> #<path:/usr/racket-5.91.0.900/share/pkgs/racket-benchmarks> #<path:/usr/racket-5.91.0.900/share/pkgs/base> #<path:/usr/racket-5.91.0.900/share/pkgs/compatibility-lib> #<path:/usr/rack!
 et-5.91.0.900/share/pkgs/drracket-plugin-lib> #<path:/usr/racket-5.91.0.900/share/pkgs/errortrace-lib> #<path:/usr/racket-5.91.0.900/share/pkgs/gui-lib> #<path:/usr/racket-5.91.0.900/share/pkgs/parser-tools-lib> #<path:/usr/racket-5.91.0.900/share/pkgs/string-constants-lib> #<path:/usr/racket-5.91.0.900/share/pkgs/rackunit-lib> #<path:/usr/racket-5.91.0.900/share/pkgs/scribble-doc> #<path:/usr/racket-5.91.0.900/share/pkgs/scribble-lib> #<path:/usr/racket-5.91.0.900/share/pkgs/scheme-lib> #<path:/usr/racket-5.91.0.900/share/pkgs/compatibility-doc> #<path:/usr/racket-5.91.0.900/share/pkgs/math-lib> #<path:/usr/racket-5.91.0.900/share/pkgs/compiler-lib> #<path:/usr/racket-5.91.0.900/share/pkgs/data-lib> #<path:/usr/racket-5.91.0.900/share/pkgs/data-doc> #<path:/usr/racket-5.91.0.900/share/pkgs/db-lib> #<path:/usr/racket-5.91.0.900/share/pkgs/db-doc> #<path:/usr/racket-5.91.0.900/share/pkgs/srfi-lib> #<path:/usr/racket-5.91.0.900/share/pkgs/wxme-lib> #<path:/usr/racket-5.91.0.9!
 00/share/pkgs/gui-doc> #<path:/usr/racket-5.91.0.900/share/pkgs/pict-do!
 c> #<path:/usr/racket-5.91.0.900/share/pkgs/pict-lib> #<path:/usr/racket-5.91.0.900/share/pkgs/planet-lib> #<path:/usr/racket-5.91.0.900/share/pkgs/snip-lib> #<path:/usr/racket-5.91.0.900/share/pkgs/typed-racket-lib> #<path:/usr/racket-5.91.0.900/share/pkgs/html-lib> #<path:/usr/racket-5.91.0.900/share/pkgs/images-lib> #<path:/usr/racket-5.91.0.900/share/pkgs/net-lib> #<path:/usr/racket-5.91.0.900/share/pkgs/srfi-doc> #<path:/usr/racket-5.91.0.900/share/pkgs/gui-pkg-manager-lib> #<path:/usr/racket-5.91.0.900/share/pkgs/mzscheme-doc> #<path:/usr/racket-5.91.0.900/share/pkgs/net-doc> #<path:/usr/racket-5.91.0.900/share/pkgs/planet-doc> #<path:/usr/racket-5.91.0.900/share/pkgs/string-constants-doc> #<path:/usr/racket-5.91.0.900/share/pkgs/errortrace-doc> #<path:/usr/racket-5.91.0.900/share/pkgs/profile-doc> #<path:/usr/racket-5.91.0.900/share/pkgs/r5rs-doc> #<path:/usr/racket-5.91.0.900/share/pkgs/srfi-lite-lib> #<path:/usr/racket-5.91.0.900/share/pkgs/htdp-lib> #<path:/usr/ra!
 cket-5.91.0.900/share/pkgs/htdp-doc> #<path:/usr/racket-5.91.0.900/share/pkgs/html-doc> #<path:/usr/racket-5.91.0.900/share/pkgs/images-gui-lib> #<path:/usr/racket-5.91.0.900/share/pkgs/images-doc> #<path:/usr/racket-5.91.0.900/share/pkgs/eli-tester> #<path:/usr/racket-5.91.0.900/share/pkgs/cext-lib> #<path:/usr/racket-5.91.0.900/share/pkgs/math-doc> #<path:/usr/racket-5.91.0.900/share/pkgs/mzscheme-lib> #<path:/usr/racket-5.91.0.900/share/pkgs/parser-tools-doc> #<path:/usr/racket-5.91.0.900/share/pkgs/web-server-lib> #<path:/usr/racket-5.91.0.900/share/pkgs/web-server-doc> #<path:/usr/racket-5.91.0.900/share/pkgs/plot-lib> #<path:/usr/racket-5.91.0.900/share/pkgs/plot-gui-lib> #<path:/usr/racket-5.91.0.900/share/pkgs/plot-doc> #<path:/usr/racket-5.91.0.900/share/pkgs/r5rs-lib> #<path:/usr/racket-5.91.0.900/share/pkgs/r6rs-lib> #<path:/usr/racket-5.91.0.900/share/pkgs/r6rs-doc> #<path:/usr/racket-5.91.0.900/share/pkgs/rackunit-doc> #<path:/usr/racket-5.91.0.900/share/pkgs/t!
 yped-racket-doc> #<path:/usr/racket-5.91.0.900/share/pkgs/slideshow-doc!
 > #<path:/usr/racket-5.91.0.900/share/pkgs/distributed-places-lib> #<path:/usr/racket-5.91.0.900/share/pkgs/distributed-places-doc> #<path:/usr/racket-5.91.0.900/share/pkgs/rackunit-gui> #<path:/usr/racket-5.91.0.900/share/pkgs/rackunit-plugin-lib> #<path:/usr/racket-5.91.0.900/share/pkgs/readline-lib> #<path:/usr/racket-5.91.0.900/share/pkgs/readline-doc> #<path:/usr/racket-5.91.0.900/share/pkgs/redex-doc> #<path:/usr/racket-5.91.0.900/share/pkgs/redex-examples> #<path:/usr/racket-5.91.0.900/share/pkgs/redex-lib> #<path:/usr/racket-5.91.0.900/share/pkgs/redex-gui-lib> #<path:/usr/racket-5.91.0.900/share/pkgs/slideshow-lib> #<path:/usr/racket-5.91.0.900/share/pkgs/slideshow-exe> #<path:/usr/racket-5.91.0.900/share/pkgs/slideshow-plugin> #<path:/usr/racket-5.91.0.900/share/pkgs/syntax-color-lib> #<path:/usr/racket-5.91.0.900/share/pkgs/syntax-color-doc> #<path:/usr/racket-5.91.0.900/share/pkgs/unstable-flonum-lib> #<path:/usr/racket-5.91.0.900/share/pkgs/xrepl-lib> #<path:/u!
 sr/racket-5.91.0.900/share/pkgs/xrepl-doc> #<path:/usr/racket-5.91.0.900/share/pkgs/unstable-debug-lib> #<path:/usr/racket-5.91.0.900/share/pkgs/unstable-macro-testing-lib> #<path:/usr/racket-5.91.0.900/share/pkgs/scribble-text-lib> #<path:/usr/racket-5.91.0.900/share/pkgs/plot-compat> #<path:/usr/racket-5.91.0.900/share/pkgs/unstable-pretty-lib> #<path:/usr/racket-5.91.0.900/share/pkgs/redex-pict-lib>)
raco pkg (show):
Installation-wide:
 Package                   Checksum                                    Source
 main-distribution         1dadff8c12179a8237672df8dd228f951521ecdf    (catalog main-distribution)
 main-distribution-test    f614f19405ed474e181ab205e19c65a6a3019dc9    (catalog main-distribution-test)
 racket-lib                9653afaa22763d418be6a4faeaa26285a3ccdf6a    (catalog racket-lib)
 [197 auto-installed packages not shown]
User-specific for installation "release-snapshot":
 [none]



Collections:
("/home/neil/.racket/release-snapshot/collects"
 (non-existent-path))
("/usr/racket-5.91.0.900/collects"
 (".gitignore" "acks" "compiler" "data" "db" "dynext" "ffi" "file" "info" "info-domain" "json" "launcher" "net" "openssl" "pkg" "planet" "racket" "raco" "reader" "realm" "s-exp" "setup" "syntax" "unstable" "version" "xml"))

Recent Internal Errors: 
Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((main) (test)) #t))
>Description:
Running programs in DrRacket leaks memory, in some cases quite badly. I've duplicated the problem on these builds:

  * 6.0.0.1--2013-12-12 (a personal build)
  * 5.91.0.900--2013-12-17 (release candidate 1)
  * 5.91.0.900--2013-12-27 (release candidate 2)

To duplicate:
  1. Paste in a large program (as below)
  2. Click the GC indicator 3 times
  3. Run 10 times
  4. Click the GC indicator 3 times

The 216-line test program is cut down from a 568-line Typed Racket program, for which every run leaks about 22MB of memory.

There is probably no way to make a small test case. The amount of memory lost appears to depend on either the size of the file or (as I infer from how bad the leaks are in Typed Racket) the size of the expanded program.
>How-To-Repeat:
#lang racket

(require (only-in typed/racket/base index?))

(define (emit v)
  (printf "~a~n" v))

;(: multi-dag-add-edge (All (T R) ((Multi-Dag T R) T R T -> (Multi-Dag T R))))
(define (multi-dag-add-edge h src r dst)
  (define edges (hash-ref h src (λ () (make-immutable-hash))))
  (define dsts (hash-ref edges r (λ () (set))))
  (hash-set h src (hash-set edges r (set-add dsts dst))))

;; ===================================================================================================

;(: set-union* (All (A) ((Setof (Setof A)) -> (Setof A))))
(define (set-union* s)
  (define ss (set->list s))
  (cond [(empty? ss)  (set)]
        [else  (apply set-union (first ss) (rest ss))]))

;(: set-image (All (A B) ((A -> B) (Setof A) -> (Setof B))))
(define (set-image f s)
  (list->set (set-map s f)))

;(: set-bind (All (A B) ((Setof A) (A -> (Setof B)) -> (Setof B))))
(define (set-bind A f)
  (set-union* (set-image f A)))

;; ===================================================================================================

(struct Relation (forward backward)
  #:transparent
  #:property prop:custom-print-quotable 'never
  #:property prop:custom-write
  (λ (r out mode)
    (write-string (symbol->string (Relation-forward r)) out)))

(define-syntax-rule (define-relation name1 name2)
  (begin
    (define name1 (Relation 'name1 'name2))
    (define name2 (Relation 'name2 'name1))))

(define-relation holding held-by)
(define-relation inside outside)
(define-relation north south)
(define-relation east west)
(define-relation up down)

;(: relation-reverse (Relation -> Relation))
(define (relation-reverse r)
  (Relation (Relation-backward r)
            (Relation-forward r)))

;; ===================================================================================================

(struct Edge (fst rel snd) #:transparent)

(struct Action-Type () #:transparent)
(struct Look Action-Type () #:transparent)

(struct Describe Action-Type (parent relation entity) #:transparent)

(struct Action-Dest (relation entity) #:transparent)
(struct Action-Path (src dsts) #:transparent)

(struct Init-Action (type src) #:transparent)
(struct Received-Action (type path) #:transparent)

;(define-type Action (U Init-Action Received-Action))

;(: action-path-entities (Action-Path -> (Listof Pointer)))
(define (action-path-entities p)
  (match-define (Action-Path src dsts) p)
  (cons src (reverse (map Action-Dest-entity dsts))))

;(: action-path-relations (Action-Path -> (Listof Relation)))
(define (action-path-relations p)
  (reverse (map Action-Dest-relation (Action-Path-dsts p))))

;(: action-entities (Action -> (Listof Pointer)))
(define (action-entities act)
  (match act
    [(Init-Action _ src)  (list src)]
    [(Received-Action _ path)  (action-path-entities path)]))

;(: action-last-entity (Action -> Pointer))
(define (action-last-entity act)
  (match act
    [(Init-Action type src)  src]
    [(Received-Action type (Action-Path src dsts))  (Action-Dest-entity (first dsts))]))

;(: action-push-dest (Action Relation Pointer -> Received-Action))
(define (action-push-dest act r dst)
  (match act
    [(Init-Action type src)  (Received-Action type (Action-Path src (list (Action-Dest r dst))))]
    [(Received-Action type (Action-Path src dsts))
     (Received-Action type (Action-Path src (cons (Action-Dest r dst) dsts)))]))

;(: action-pop-dest (Received-Action -> (Values Action Relation Pointer)))
(define (action-pop-dest act)
  (match-define (Received-Action type (Action-Path src dsts)) act)
  (match-let* ([(Action-Dest rel dst)  (first dsts)]
               [dsts  (rest dsts)])
    (cond [(empty? dsts)  (values (Init-Action type src) rel dst)]
          [else  (values (Received-Action type (Action-Path src dsts)) rel dst)])))

;(: action-path-reverse (Action-Path -> Action-Path))
(define (action-path-reverse p)
  (match-define (Action-Path src dsts) p)
  (define es (reverse (action-path-entities p)))
  (define rs (reverse (action-path-relations p)))
  (Action-Path
   (first es)
   (reverse (for/list ([e  (in-list (rest es))]
                       [r  (in-list rs)])
              (Action-Dest (relation-reverse r) e)))))

(struct Entity (name alts start-action receive-action properties) #:transparent)

;(: empty-property-hash (HashTable Symbol Any))
(define empty-property-hash (make-immutable-hasheq))

;; ===================================================================================================
;; The world

;(define-type Pointer Index)

;(: empty-entity-set (Setof Pointer))
(define empty-entity-set (seteq))

;(: empty-relation-hash (Out-Edges Pointer Relation))
(define empty-relation-hash (make-immutable-hash))

(struct World (next entities links actions) #:transparent)

;(: empty-world World)
(define empty-world
  (World 0
         (make-immutable-hasheq)
         (make-immutable-hasheq)
         (list)))

;(: get-entity (World Pointer -> Entity))
(define (get-entity w *o)
  (hash-ref (World-entities w) *o
            (λ () (error 'get-entity "Entity ~a does not exist" *o))))

;(: world-entities (World -> (Setof Pointer)))
(define (world-entities w)
  (list->set (hash-keys (World-entities w))))

(define-syntax-rule (define-entity-accessor name Name)
  (define name
    (λ (w *o)
      (Name (get-entity w *o)))))

(define-entity-accessor entity-name Entity-name)
(define-entity-accessor entity-alts Entity-alts)
(define-entity-accessor entity-start-action Entity-start-action)
(define-entity-accessor entity-receive-action Entity-receive-action)
(define-entity-accessor entity-properties Entity-properties)

;(: add-entity (World Entity -> (Values World Pointer)))
(define (add-entity w e)
  (match-define (World idx entities links actions) w)
  (define next-idx (+ idx 1))
  (cond [(index? next-idx)
         (values (World next-idx
                        (hash-set entities idx e)
                        links
                        actions)
                 idx)]
        [else
         (error 'add-entity "No more entity indexes")]))

;(: set-entity (World Pointer Entity -> World))
(define (set-entity w e ent)
  (match-define (World idx entities links actions) w)
  (World idx (hash-set entities e ent) links actions))

;(: remove-entity (World Pointer -> World))
(define (remove-entity w e)
  (match-define (World idx entities links actions) w)
  (World idx
         (hash-remove entities e)
         (hash-remove links e)
         actions))

;(: get-relation-hash (World Pointer -> (Out-Edges Pointer Relation)))
(define (get-relation-hash w e)
  (hash-ref (World-links w) e (λ () empty-relation-hash)))

;(: set-relation-hash (World Pointer (Out-Edges Pointer Relation) -> World))
(define (set-relation-hash w e h)
  (match-define (World idx entities links actions) w)
  (let ([links  (if (zero? (hash-count h))
                    (hash-remove links e)
                    (hash-set links e h))])
    (World idx entities links actions)))

;(: push-action (World Action -> World))
(define (push-action w act)
  (match-define (World idx entities links actions) w)
  (World idx entities links (cons act actions) #;(queue-push-left actions act)))

;(: pull-action (World -> (Values World Action)))
(define (pull-action w)
  (match-define (World idx entities links actions) w)
  (let-values ([(actions act)  (values (take actions (- (length actions) 1)) (last actions))])
    (values (World idx entities links actions) act)))

;(: has-actions? (World -> Boolean))
(define (has-actions? w)
  (not (empty? (World-actions w))))
>Fix:
>Audit-Trail:
From: Robby Findler <robby@eecs.northwestern.edu>
To: Neil Toronto <neil.toronto@gmail.com>, bugs <bugs@racket-lang.org>
Cc: nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/14264: Running programs in DrRacket leaks memory
Date: Mon, 30 Dec 2013 22:52:33 -0600

 --089e0149cd5e1f0dd004eecd545a
 Content-Type: text/plain; charset=UTF-8
 
 On Mon, Dec 30, 2013 at 9:44 PM, <neil.toronto@gmail.com> wrote:
 
 > A new problem report is waiting at
 >   http://bugs.racket-lang.org/query/?cmd=view&pr=14264
 >
 >
 FWIW, this program also appears to leak, at about the rate of 3 megs per 30
 runs (on my mac).
 
 #lang racket
 (void)
 
 --089e0149cd5e1f0dd004eecd545a
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 <div dir=3D"ltr"><div class=3D"gmail_extra"><div class=3D"gmail_quote">On M=
 on, Dec 30, 2013 at 9:44 PM,  <span dir=3D"ltr">&lt;<a href=3D"mailto:neil.=
 toronto@gmail.com" target=3D"_blank">neil.toronto@gmail.com</a>&gt;</span> =
 wrote:<br>
 <blockquote class=3D"gmail_quote" style=3D"margin:0px 0px 0px 0.8ex;border-=
 left-width:1px;border-left-color:rgb(204,204,204);border-left-style:solid;p=
 adding-left:1ex">A new problem report is waiting at<br>
 =C2=A0 <a href=3D"http://bugs.racket-lang.org/query/?cmd=3Dview&amp;pr=3D14=
 264" target=3D"_blank">http://bugs.racket-lang.org/query/?cmd=3Dview&amp;pr=
 =3D14264<br></a><br></blockquote><div><br></div><div>FWIW, this program als=
 o appears to leak, at about the rate of 3 megs per 30 runs (on my mac).</di=
 v>
 </div></div><div class=3D"gmail_extra"><br></div><div class=3D"gmail_extra"=
 ><div class=3D"gmail_extra">#lang racket</div><div class=3D"gmail_extra">(v=
 oid)</div></div></div>
 
 --089e0149cd5e1f0dd004eecd545a--
From: Robby Findler <robby@eecs.northwestern.edu>
To: Neil Toronto <neil.toronto@gmail.com>, bugs <bugs@racket-lang.org>
Cc: nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/14264: Running programs in DrRacket leaks memory
Date: Mon, 30 Dec 2013 23:48:37 -0600

 --089e013c6fa0961c2204eece1ceb
 Content-Type: text/plain; charset=UTF-8
 
 Looks like it was somewhere after revision
 58c0074a7181a1590dfa0a931ba63c29a4334726 when the problem was introduced.
 I'll try a git bisect (but as it took me 55 minutes to figure that out,
 I'll start it running and check back in the morning).
 
 Robby
 
 
 On Mon, Dec 30, 2013 at 10:52 PM, Robby Findler <robby@eecs.northwestern.edu
 > wrote:
 
 > On Mon, Dec 30, 2013 at 9:44 PM, <neil.toronto@gmail.com> wrote:
 >
 >> A new problem report is waiting at
 >>   http://bugs.racket-lang.org/query/?cmd=view&pr=14264
 >>
 >>
 > FWIW, this program also appears to leak, at about the rate of 3 megs per
 > 30 runs (on my mac).
 >
 > #lang racket
 > (void)
 >
 
 --089e013c6fa0961c2204eece1ceb
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 <div dir=3D"ltr">Looks like it was somewhere after revision 58c0074a7181a15=
 90dfa0a931ba63c29a4334726 when the problem was introduced. I&#39;ll try a g=
 it bisect (but as it took me 55 minutes to figure that out, I&#39;ll start =
 it running and check back in the morning).<div>
 <br></div><div>Robby</div><div class=3D"gmail_extra"><br><br><div class=3D"=
 gmail_quote">On Mon, Dec 30, 2013 at 10:52 PM, Robby Findler <span dir=3D"l=
 tr">&lt;<a href=3D"mailto:robby@eecs.northwestern.edu" target=3D"_blank">ro=
 bby@eecs.northwestern.edu</a>&gt;</span> wrote:<br>
 <blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1p=
 x #ccc solid;padding-left:1ex"><div dir=3D"ltr"><div class=3D"gmail_extra">=
 <div class=3D"gmail_quote"><div class=3D"im">On Mon, Dec 30, 2013 at 9:44 P=
 M,  <span dir=3D"ltr">&lt;<a href=3D"mailto:neil.toronto@gmail.com" target=
 =3D"_blank">neil.toronto@gmail.com</a>&gt;</span> wrote:<br>
 
 <blockquote class=3D"gmail_quote" style=3D"margin:0px 0px 0px 0.8ex;border-=
 left-width:1px;border-left-color:rgb(204,204,204);border-left-style:solid;p=
 adding-left:1ex">A new problem report is waiting at<br>
 =C2=A0 <a href=3D"http://bugs.racket-lang.org/query/?cmd=3Dview&amp;pr=3D14=
 264" target=3D"_blank">http://bugs.racket-lang.org/query/?cmd=3Dview&amp;pr=
 =3D14264<br></a><br></blockquote><div><br></div></div><div>FWIW, this progr=
 am also appears to leak, at about the rate of 3 megs per 30 runs (on my mac=
 ).</div>
 
 </div></div><div class=3D"gmail_extra"><br></div><div class=3D"gmail_extra"=
 ><div class=3D"gmail_extra">#lang racket</div><div class=3D"gmail_extra">(v=
 oid)</div></div></div>
 </blockquote></div><br></div></div>
 
 --089e013c6fa0961c2204eece1ceb--
From: Matthew Flatt <mflatt@cs.utah.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: Neil Toronto <neil.toronto@gmail.com>, bugs <bugs@racket-lang.org>,
        nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/14264: Running programs in DrRacket leaks memory
Date: Tue, 31 Dec 2013 05:43:17 -0700

 I may be doing something wrong, but the PR steps seem not to trigger a
 leak if DrRacket is in "syntactic test suite coverage" instead of
 "debugging" mode.
 
 Meanwhile, opening the "Choose Language" dialog and hitting "Ok"
 immediately seems to leak around 15MB every time due to background
 expansion. If I disable background expansion, then there's no
 per-dialog leak.
 
 At Mon, 30 Dec 2013 23:48:37 -0600, Robby Findler wrote:
 > Looks like it was somewhere after revision
 > 58c0074a7181a1590dfa0a931ba63c29a4334726 when the problem was introduced.
 > I'll try a git bisect (but as it took me 55 minutes to figure that out,
 > I'll start it running and check back in the morning).
 > 
 > Robby
 > 
 > 
 > On Mon, Dec 30, 2013 at 10:52 PM, Robby Findler <robby@eecs.northwestern.edu
 > > wrote:
 > 
 > > On Mon, Dec 30, 2013 at 9:44 PM, <neil.toronto@gmail.com> wrote:
 > >
 > >> A new problem report is waiting at
 > >>   http://bugs.racket-lang.org/query/?cmd=view&pr=14264
 > >>
 > >>
 > > FWIW, this program also appears to leak, at about the rate of 3 megs per
 > > 30 runs (on my mac).
 > >
 > > #lang racket
 > > (void)
 > >
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: Neil Toronto <neil.toronto@gmail.com>, bugs <bugs@racket-lang.org>,
        nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/14264: Running programs in DrRacket leaks memory
Date: Tue, 31 Dec 2013 06:53:46 -0600

 --f46d04479f931ad53804eed40d79
 Content-Type: text/plain; charset=UTF-8
 
 I think there was a cache added to errortrace at some point. Maybe that's
 it?
 
 Robby
 
 
 On Tue, Dec 31, 2013 at 6:43 AM, Matthew Flatt <mflatt@cs.utah.edu> wrote:
 
 > I may be doing something wrong, but the PR steps seem not to trigger a
 > leak if DrRacket is in "syntactic test suite coverage" instead of
 > "debugging" mode.
 >
 > Meanwhile, opening the "Choose Language" dialog and hitting "Ok"
 > immediately seems to leak around 15MB every time due to background
 > expansion. If I disable background expansion, then there's no
 > per-dialog leak.
 >
 > At Mon, 30 Dec 2013 23:48:37 -0600, Robby Findler wrote:
 > > Looks like it was somewhere after revision
 > > 58c0074a7181a1590dfa0a931ba63c29a4334726 when the problem was introduced.
 > > I'll try a git bisect (but as it took me 55 minutes to figure that out,
 > > I'll start it running and check back in the morning).
 > >
 > > Robby
 > >
 > >
 > > On Mon, Dec 30, 2013 at 10:52 PM, Robby Findler <
 > robby@eecs.northwestern.edu
 > > > wrote:
 > >
 > > > On Mon, Dec 30, 2013 at 9:44 PM, <neil.toronto@gmail.com> wrote:
 > > >
 > > >> A new problem report is waiting at
 > > >>   http://bugs.racket-lang.org/query/?cmd=view&pr=14264
 > > >>
 > > >>
 > > > FWIW, this program also appears to leak, at about the rate of 3 megs
 > per
 > > > 30 runs (on my mac).
 > > >
 > > > #lang racket
 > > > (void)
 > > >
 >
 
 --f46d04479f931ad53804eed40d79
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 <div dir=3D"ltr">I think there was a cache added to errortrace at some poin=
 t. Maybe that&#39;s it?<div><br></div><div>Robby</div></div><div class=3D"g=
 mail_extra"><br><br><div class=3D"gmail_quote">On Tue, Dec 31, 2013 at 6:43=
  AM, Matthew Flatt <span dir=3D"ltr">&lt;<a href=3D"mailto:mflatt@cs.utah.e=
 du" target=3D"_blank">mflatt@cs.utah.edu</a>&gt;</span> wrote:<br>
 <blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1p=
 x #ccc solid;padding-left:1ex">I may be doing something wrong, but the PR s=
 teps seem not to trigger a<br>
 leak if DrRacket is in &quot;syntactic test suite coverage&quot; instead of=
 <br>
 &quot;debugging&quot; mode.<br>
 <br>
 Meanwhile, opening the &quot;Choose Language&quot; dialog and hitting &quot=
 ;Ok&quot;<br>
 immediately seems to leak around 15MB every time due to background<br>
 expansion. If I disable background expansion, then there&#39;s no<br>
 per-dialog leak.<br>
 <div class=3D"HOEnZb"><div class=3D"h5"><br>
 At Mon, 30 Dec 2013 23:48:37 -0600, Robby Findler wrote:<br>
 &gt; Looks like it was somewhere after revision<br>
 &gt; 58c0074a7181a1590dfa0a931ba63c29a4334726 when the problem was introduc=
 ed.<br>
 &gt; I&#39;ll try a git bisect (but as it took me 55 minutes to figure that=
  out,<br>
 &gt; I&#39;ll start it running and check back in the morning).<br>
 &gt;<br>
 &gt; Robby<br>
 &gt;<br>
 &gt;<br>
 &gt; On Mon, Dec 30, 2013 at 10:52 PM, Robby Findler &lt;<a href=3D"mailto:=
 robby@eecs.northwestern.edu">robby@eecs.northwestern.edu</a><br>
 &gt; &gt; wrote:<br>
 &gt;<br>
 &gt; &gt; On Mon, Dec 30, 2013 at 9:44 PM, &lt;<a href=3D"mailto:neil.toron=
 to@gmail.com">neil.toronto@gmail.com</a>&gt; wrote:<br>
 &gt; &gt;<br>
 &gt; &gt;&gt; A new problem report is waiting at<br>
 &gt; &gt;&gt; =C2=A0 <a href=3D"http://bugs.racket-lang.org/query/?cmd=3Dvi=
 ew&amp;pr=3D14264" target=3D"_blank">http://bugs.racket-lang.org/query/?cmd=
 =3Dview&amp;pr=3D14264</a><br>
 &gt; &gt;&gt;<br>
 &gt; &gt;&gt;<br>
 &gt; &gt; FWIW, this program also appears to leak, at about the rate of 3 m=
 egs per<br>
 &gt; &gt; 30 runs (on my mac).<br>
 &gt; &gt;<br>
 &gt; &gt; #lang racket<br>
 &gt; &gt; (void)<br>
 &gt; &gt;<br>
 </div></div></blockquote></div><br></div>
 
 --f46d04479f931ad53804eed40d79--
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: Neil Toronto <neil.toronto@gmail.com>, bugs <bugs@racket-lang.org>,
        nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/14264: Running programs in DrRacket leaks memory
Date: Tue, 31 Dec 2013 07:04:13 -0600

 --089e0149c5066c007804eed432a4
 Content-Type: text/plain; charset=UTF-8
 
 Yeah, this seems to make the leak go away:
 
 diff --git a/pkgs/errortrace-pkgs/errortrace-lib/errortrace/stacktrace.rkt
 b/pkgs/errortrace-pkgs/errortrace-lib/errortrace/stacktrace.rkt
 index d0f93b4..af97c79 100644
 --- a/pkgs/errortrace-pkgs/errortrace-lib/errortrace/stacktrace.rkt
 +++ b/pkgs/errortrace-pkgs/errortrace-lib/errortrace/stacktrace.rkt
 @@ -80,10 +80,9 @@
         ;; unit is invoked only once but annotate-top might be called
         ;; many times with diferent values for original-stx and
         ;; expanded-stx
 -       (define recover (hash-ref! recover-table (cons (original-stx)
 (expanded-stx))
 -  (lambda ()
 -    (recover-source-syntax (original-stx) (expanded-stx)
 -                                                           #:traverse-now?
 #t))))
 +       (define recover
 +         (recover-source-syntax (original-stx) (expanded-stx)
 +                                #:traverse-now? #t))
         (define better-stx (and stx (recover stx)))
         (with-syntax ([quote (syntax-shift-phase-level #'quote phase)])
           #`(quote (#,(short-version better-stx 10)
 
 
 
 On Tue, Dec 31, 2013 at 6:53 AM, Robby Findler
 <robby@eecs.northwestern.edu>wrote:
 
 > I think there was a cache added to errortrace at some point. Maybe that's
 > it?
 >
 > Robby
 >
 >
 > On Tue, Dec 31, 2013 at 6:43 AM, Matthew Flatt <mflatt@cs.utah.edu> wrote:
 >
 >> I may be doing something wrong, but the PR steps seem not to trigger a
 >> leak if DrRacket is in "syntactic test suite coverage" instead of
 >> "debugging" mode.
 >>
 >> Meanwhile, opening the "Choose Language" dialog and hitting "Ok"
 >> immediately seems to leak around 15MB every time due to background
 >> expansion. If I disable background expansion, then there's no
 >> per-dialog leak.
 >>
 >> At Mon, 30 Dec 2013 23:48:37 -0600, Robby Findler wrote:
 >> > Looks like it was somewhere after revision
 >> > 58c0074a7181a1590dfa0a931ba63c29a4334726 when the problem was
 >> introduced.
 >> > I'll try a git bisect (but as it took me 55 minutes to figure that out,
 >> > I'll start it running and check back in the morning).
 >> >
 >> > Robby
 >> >
 >> >
 >> > On Mon, Dec 30, 2013 at 10:52 PM, Robby Findler <
 >> robby@eecs.northwestern.edu
 >> > > wrote:
 >> >
 >> > > On Mon, Dec 30, 2013 at 9:44 PM, <neil.toronto@gmail.com> wrote:
 >> > >
 >> > >> A new problem report is waiting at
 >> > >>   http://bugs.racket-lang.org/query/?cmd=view&pr=14264
 >> > >>
 >> > >>
 >> > > FWIW, this program also appears to leak, at about the rate of 3 megs
 >> per
 >> > > 30 runs (on my mac).
 >> > >
 >> > > #lang racket
 >> > > (void)
 >> > >
 >>
 >
 >
 
 --089e0149c5066c007804eed432a4
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 <div dir=3D"ltr">Yeah, this seems to make the leak go away:<div><br></div><=
 div><div>diff --git a/pkgs/errortrace-pkgs/errortrace-lib/errortrace/stackt=
 race.rkt b/pkgs/errortrace-pkgs/errortrace-lib/errortrace/stacktrace.rkt</d=
 iv>
 <div>index d0f93b4..af97c79 100644</div><div>--- a/pkgs/errortrace-pkgs/err=
 ortrace-lib/errortrace/stacktrace.rkt</div><div>+++ b/pkgs/errortrace-pkgs/=
 errortrace-lib/errortrace/stacktrace.rkt</div><div>@@ -80,10 +80,9 @@</div>
 <div>=C2=A0 =C2=A0 =C2=A0 =C2=A0 ;; unit is invoked only once but annotate-=
 top might be called</div><div>=C2=A0 =C2=A0 =C2=A0 =C2=A0 ;; many times wit=
 h diferent values for original-stx and</div><div>=C2=A0 =C2=A0 =C2=A0 =C2=
 =A0 ;; expanded-stx</div><div>- =C2=A0 =C2=A0 =C2=A0 (define recover (hash-=
 ref! recover-table (cons (original-stx) (expanded-stx))</div>
 <div>-<span class=3D"" style=3D"white-space:pre">				</span> =C2=A0(lambda =
 ()</div><div>-<span class=3D"" style=3D"white-space:pre">				</span> =C2=A0=
  =C2=A0(recover-source-syntax (original-stx) (expanded-stx)</div><div>- =C2=
 =A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
 =A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 #:traverse-now? #t))))=
 </div>
 <div>+ =C2=A0 =C2=A0 =C2=A0 (define recover=C2=A0</div><div>+ =C2=A0 =C2=A0=
  =C2=A0 =C2=A0 (recover-source-syntax (original-stx) (expanded-stx)</div><d=
 iv>+ =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0#:traverse-now? #t))</div><div>=C2=
 =A0 =C2=A0 =C2=A0 =C2=A0 (define better-stx (and stx (recover stx)))</div>
 <div>=C2=A0 =C2=A0 =C2=A0 =C2=A0 (with-syntax ([quote (syntax-shift-phase-l=
 evel #&#39;quote phase)])</div><div>=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 #`(q=
 uote (#,(short-version better-stx 10)</div></div><div><br></div></div><div =
 class=3D"gmail_extra"><br><br><div class=3D"gmail_quote">
 On Tue, Dec 31, 2013 at 6:53 AM, Robby Findler <span dir=3D"ltr">&lt;<a hre=
 f=3D"mailto:robby@eecs.northwestern.edu" target=3D"_blank">robby@eecs.north=
 western.edu</a>&gt;</span> wrote:<br><blockquote class=3D"gmail_quote" styl=
 e=3D"margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">
 <div dir=3D"ltr">I think there was a cache added to errortrace at some poin=
 t. Maybe that&#39;s it?<span class=3D"HOEnZb"><font color=3D"#888888"><div>=
 <br></div><div>Robby</div></font></span></div><div class=3D"HOEnZb"><div cl=
 ass=3D"h5">
 <div class=3D"gmail_extra"><br><br><div class=3D"gmail_quote">On Tue, Dec 3=
 1, 2013 at 6:43 AM, Matthew Flatt <span dir=3D"ltr">&lt;<a href=3D"mailto:m=
 flatt@cs.utah.edu" target=3D"_blank">mflatt@cs.utah.edu</a>&gt;</span> wrot=
 e:<br>
 
 <blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1p=
 x #ccc solid;padding-left:1ex">I may be doing something wrong, but the PR s=
 teps seem not to trigger a<br>
 leak if DrRacket is in &quot;syntactic test suite coverage&quot; instead of=
 <br>
 &quot;debugging&quot; mode.<br>
 <br>
 Meanwhile, opening the &quot;Choose Language&quot; dialog and hitting &quot=
 ;Ok&quot;<br>
 immediately seems to leak around 15MB every time due to background<br>
 expansion. If I disable background expansion, then there&#39;s no<br>
 per-dialog leak.<br>
 <div><div><br>
 At Mon, 30 Dec 2013 23:48:37 -0600, Robby Findler wrote:<br>
 &gt; Looks like it was somewhere after revision<br>
 &gt; 58c0074a7181a1590dfa0a931ba63c29a4334726 when the problem was introduc=
 ed.<br>
 &gt; I&#39;ll try a git bisect (but as it took me 55 minutes to figure that=
  out,<br>
 &gt; I&#39;ll start it running and check back in the morning).<br>
 &gt;<br>
 &gt; Robby<br>
 &gt;<br>
 &gt;<br>
 &gt; On Mon, Dec 30, 2013 at 10:52 PM, Robby Findler &lt;<a href=3D"mailto:=
 robby@eecs.northwestern.edu" target=3D"_blank">robby@eecs.northwestern.edu<=
 /a><br>
 &gt; &gt; wrote:<br>
 &gt;<br>
 &gt; &gt; On Mon, Dec 30, 2013 at 9:44 PM, &lt;<a href=3D"mailto:neil.toron=
 to@gmail.com" target=3D"_blank">neil.toronto@gmail.com</a>&gt; wrote:<br>
 &gt; &gt;<br>
 &gt; &gt;&gt; A new problem report is waiting at<br>
 &gt; &gt;&gt; =C2=A0 <a href=3D"http://bugs.racket-lang.org/query/?cmd=3Dvi=
 ew&amp;pr=3D14264" target=3D"_blank">http://bugs.racket-lang.org/query/?cmd=
 =3Dview&amp;pr=3D14264</a><br>
 &gt; &gt;&gt;<br>
 &gt; &gt;&gt;<br>
 &gt; &gt; FWIW, this program also appears to leak, at about the rate of 3 m=
 egs per<br>
 &gt; &gt; 30 runs (on my mac).<br>
 &gt; &gt;<br>
 &gt; &gt; #lang racket<br>
 &gt; &gt; (void)<br>
 &gt; &gt;<br>
 </div></div></blockquote></div><br></div>
 </div></div></blockquote></div><br></div>
 
 --089e0149c5066c007804eed432a4--
From: Matthew Flatt <mflatt@cs.utah.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: Neil Toronto <neil.toronto@gmail.com>, bugs <bugs@racket-lang.org>,
        nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/14264: Running programs in DrRacket leaks memory
Date: Tue, 31 Dec 2013 06:09:20 -0700

 Well, there's a mismatch between the memory-use accounting and the
 effect of clicking the memory-use label that has been confusing me, so
 I'm back to square one.
 
 For example, using
 
  #lang racket
  (begin-for-syntax
    (define s (make-bytes (* 1024 1024 10))))
 
 Add a semi-colon so that background expansion runs. Memory use will go
 up by 10-20 MB. But if you do that a few times, a GC happens in the
 expansion place, and memory use goes back to its starting point.
 
 I think the memory-use label shows memory use across places, but
 clicking the label only triggers a GC in the main place.
 
 At Tue, 31 Dec 2013 06:53:46 -0600, Robby Findler wrote:
 > I think there was a cache added to errortrace at some point. Maybe that's
 > it?
 > 
 > Robby
 > 
 > 
 > On Tue, Dec 31, 2013 at 6:43 AM, Matthew Flatt <mflatt@cs.utah.edu> wrote:
 > 
 > > I may be doing something wrong, but the PR steps seem not to trigger a
 > > leak if DrRacket is in "syntactic test suite coverage" instead of
 > > "debugging" mode.
 > >
 > > Meanwhile, opening the "Choose Language" dialog and hitting "Ok"
 > > immediately seems to leak around 15MB every time due to background
 > > expansion. If I disable background expansion, then there's no
 > > per-dialog leak.
 > >
 > > At Mon, 30 Dec 2013 23:48:37 -0600, Robby Findler wrote:
 > > > Looks like it was somewhere after revision
 > > > 58c0074a7181a1590dfa0a931ba63c29a4334726 when the problem was introduced.
 > > > I'll try a git bisect (but as it took me 55 minutes to figure that out,
 > > > I'll start it running and check back in the morning).
 > > >
 > > > Robby
 > > >
 > > >
 > > > On Mon, Dec 30, 2013 at 10:52 PM, Robby Findler <
 > > robby@eecs.northwestern.edu
 > > > > wrote:
 > > >
 > > > > On Mon, Dec 30, 2013 at 9:44 PM, <neil.toronto@gmail.com> wrote:
 > > > >
 > > > >> A new problem report is waiting at
 > > > >>   http://bugs.racket-lang.org/query/?cmd=view&pr=14264
 > > > >>
 > > > >>
 > > > > FWIW, this program also appears to leak, at about the rate of 3 megs
 > > per
 > > > > 30 runs (on my mac).
 > > > >
 > > > > #lang racket
 > > > > (void)
 > > > >
 > >
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: Neil Toronto <neil.toronto@gmail.com>, bugs <bugs@racket-lang.org>,
        nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/14264: Running programs in DrRacket leaks memory
Date: Tue, 31 Dec 2013 07:12:06 -0600

 --e89a8ff1ce9e9be63a04eed44e39
 Content-Type: text/plain; charset=UTF-8
 
 On Tue, Dec 31, 2013 at 7:09 AM, Matthew Flatt <mflatt@cs.utah.edu> wrote:
 >
 > Well, there's a mismatch between the memory-use accounting and the
 > effect of clicking the memory-use label that has been confusing me, so
 > I'm back to square one.
 >
 > For example, using
 >
 >  #lang racket
 >  (begin-for-syntax
 >    (define s (make-bytes (* 1024 1024 10))))
 >
 > Add a semi-colon so that background expansion runs. Memory use will go
 > up by 10-20 MB. But if you do that a few times, a GC happens in the
 > expansion place, and memory use goes back to its starting point.
 >
 > I think the memory-use label shows memory use across places, but
 > clicking the label only triggers a GC in the main place.
 
 Clicking the memory use label calls collect-garbage,
 in plt/pkgs/gui-pkgs/gui-lib/framework/private/frame.rkt.
 
 Robby
 
 --e89a8ff1ce9e9be63a04eed44e39
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 <div dir=3D"ltr"><div>On Tue, Dec 31, 2013 at 7:09 AM, Matthew Flatt &lt;<a=
  href=3D"mailto:mflatt@cs.utah.edu">mflatt@cs.utah.edu</a>&gt; wrote:<br>&g=
 t;<br>&gt; Well, there&#39;s a mismatch between the memory-use accounting a=
 nd the<br>
 &gt; effect of clicking the memory-use label that has been confusing me, so=
 <br>&gt; I&#39;m back to square one.<br>&gt;<br>&gt; For example, using<br>=
 &gt;<br>&gt; =C2=A0#lang racket<br>&gt; =C2=A0(begin-for-syntax<br>&gt; =C2=
 =A0 =C2=A0(define s (make-bytes (* 1024 1024 10))))<br>
 &gt;<br>&gt; Add a semi-colon so that background expansion runs. Memory use=
  will go<br>&gt; up by 10-20 MB. But if you do that a few times, a GC happe=
 ns in the<br>&gt; expansion place, and memory use goes back to its starting=
  point.<br>
 &gt;<br>&gt; I think the memory-use label shows memory use across places, b=
 ut<br>&gt; clicking the label only triggers a GC in the main place.<br></di=
 v><div><br></div><div>Clicking the memory use label calls collect-garbage, =
 in=C2=A0plt/pkgs/gui-pkgs/gui-lib/framework/private/frame.rkt.<div>
 <br></div><div>Robby<br></div></div><div><br></div></div>
 
 --e89a8ff1ce9e9be63a04eed44e39--
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: Neil Toronto <neil.toronto@gmail.com>, bugs <bugs@racket-lang.org>,
        nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/14264: Running programs in DrRacket leaks memory
Date: Tue, 31 Dec 2013 07:21:24 -0600

 --089e0111be76dd27bc04eed46fff
 Content-Type: text/plain; charset=UTF-8
 
 Okay, I've pushed a commit that makes the leak go away, but I believe that
 Sam has some way to test if the cache is still being effective. Sam: can
 you check into that, please? I tried to preserve the usefulness of the
 cache, but I'm not positive I did it right....
 
 Thanks,
 Robby
 
 --089e0111be76dd27bc04eed46fff
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 <div dir=3D"ltr"><div class=3D"gmail_extra">Okay, I&#39;ve pushed a commit =
 that makes the leak go away, but I believe that Sam has some way to test if=
  the cache is still being effective. Sam: can you check into that, please? =
 I tried to preserve the usefulness of the cache, but I&#39;m not positive I=
  did it right....</div>
 <div class=3D"gmail_extra"><br></div><div class=3D"gmail_extra">Thanks,</di=
 v><div class=3D"gmail_extra">Robby</div><div class=3D"gmail_extra"><br></di=
 v></div>
 
 --089e0111be76dd27bc04eed46fff--
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: Neil Toronto <neil.toronto@gmail.com>, bugs <bugs@racket-lang.org>,
        nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/14264: Running programs in DrRacket leaks memory
Date: Tue, 31 Dec 2013 07:22:03 -0600

 --001a11c2e60a32d49304eed47272
 Content-Type: text/plain; charset=UTF-8
 
 Oh, rats: forgot to include this PR in the commit message. Here's the
 commit: 8cd129ba6d3e468a39b202eed8b79d7d210aa2fb
 
 Robby
 
 --001a11c2e60a32d49304eed47272
 Content-Type: text/html; charset=UTF-8
 
 <div dir="ltr"><div class="gmail_extra">Oh, rats: forgot to include this PR in the commit message. Here&#39;s the commit: 8cd129ba6d3e468a39b202eed8b79d7d210aa2fb</div><div class="gmail_extra"><br></div><div class="gmail_extra">
 Robby</div><div class="gmail_extra"><br></div>
 
 
 
 
 
 
 
 </div>
 
 --001a11c2e60a32d49304eed47272--
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Robby Findler <robby@eecs.northwestern.edu>,
        Vincent St-Amour <stamourv@ccs.neu.edu>
Cc: Matthew Flatt <mflatt@cs.utah.edu>, Neil Toronto <neil.toronto@gmail.com>,
        bugs <bugs@racket-lang.org>, nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/14264: Running programs in DrRacket leaks memory
Date: Tue, 31 Dec 2013 09:47:39 -0500

 Sam is traveling. 
 
 Vincent and Sam jointly worked on this thing for the new statistical profiler from what I understand. Vincent is already using the thing to build more stuff. I'll talk to him when he gets in. 
 
 -- Matthias
 
 
 
 
 On Dec 31, 2013, at 8:21 AM, Robby Findler <robby@eecs.northwestern.edu> wrote:
 
 > Okay, I've pushed a commit that makes the leak go away, but I believe that Sam has some way to test if the cache is still being effective. Sam: can you check into that, please? I tried to preserve the usefulness of the cache, but I'm not positive I did it right....
 > 
 > Thanks,
 > Robby
 > 
 
 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: Vincent St-Amour <stamourv@ccs.neu.edu>,
        Matthew Flatt <mflatt@cs.utah.edu>,
        Neil Toronto <neil.toronto@gmail.com>, bugs <bugs@racket-lang.org>,
        nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/14264: Running programs in DrRacket leaks memory
Date: Tue, 31 Dec 2013 09:18:01 -0600

 --001a1134ad06ed963b04eed61048
 Content-Type: text/plain; charset=UTF-8
 
 Well, it shouldn't be hard to find a program that is slow without the
 cache, fast before my push and then check to make sure it is still fast
 afterwards.
 
 I'll try that this afternoon if no one beats me to it.
 
 Robby
 
 
 On Tue, Dec 31, 2013 at 8:47 AM, Matthias Felleisen <matthias@ccs.neu.edu>wrote:
 
 >
 > Sam is traveling.
 >
 > Vincent and Sam jointly worked on this thing for the new statistical
 > profiler from what I understand. Vincent is already using the thing to
 > build more stuff. I'll talk to him when he gets in.
 >
 > -- Matthias
 >
 >
 >
 >
 > On Dec 31, 2013, at 8:21 AM, Robby Findler <robby@eecs.northwestern.edu>
 > wrote:
 >
 > > Okay, I've pushed a commit that makes the leak go away, but I believe
 > that Sam has some way to test if the cache is still being effective. Sam:
 > can you check into that, please? I tried to preserve the usefulness of the
 > cache, but I'm not positive I did it right....
 > >
 > > Thanks,
 > > Robby
 > >
 >
 >
 
 --001a1134ad06ed963b04eed61048
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 <div dir=3D"ltr">Well, it shouldn&#39;t be hard to find a program that is s=
 low without the cache, fast before my push and then check to make sure it i=
 s still fast afterwards.<div><br></div><div>I&#39;ll try that this afternoo=
 n if no one beats me to it.</div>
 <div><br>Robby</div></div><div class=3D"gmail_extra"><br><br><div class=3D"=
 gmail_quote">On Tue, Dec 31, 2013 at 8:47 AM, Matthias Felleisen <span dir=
 =3D"ltr">&lt;<a href=3D"mailto:matthias@ccs.neu.edu" target=3D"_blank">matt=
 hias@ccs.neu.edu</a>&gt;</span> wrote:<br>
 <blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1p=
 x #ccc solid;padding-left:1ex"><br>
 Sam is traveling.<br>
 <br>
 Vincent and Sam jointly worked on this thing for the new statistical profil=
 er from what I understand. Vincent is already using the thing to build more=
  stuff. I&#39;ll talk to him when he gets in.<br>
 <span class=3D"HOEnZb"><font color=3D"#888888"><br>
 -- Matthias<br>
 </font></span><div class=3D"HOEnZb"><div class=3D"h5"><br>
 <br>
 <br>
 <br>
 On Dec 31, 2013, at 8:21 AM, Robby Findler &lt;<a href=3D"mailto:robby@eecs=
 .northwestern.edu">robby@eecs.northwestern.edu</a>&gt; wrote:<br>
 <br>
 &gt; Okay, I&#39;ve pushed a commit that makes the leak go away, but I beli=
 eve that Sam has some way to test if the cache is still being effective. Sa=
 m: can you check into that, please? I tried to preserve the usefulness of t=
 he cache, but I&#39;m not positive I did it right....<br>
 
 &gt;<br>
 &gt; Thanks,<br>
 &gt; Robby<br>
 &gt;<br>
 <br>
 </div></div></blockquote></div><br></div>
 
 --001a1134ad06ed963b04eed61048--
From: Sam Tobin-Hochstadt <samth@cs.indiana.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: Matthew Flatt <mflatt@cs.utah.edu>,
        Vincent St-Amour <stamourv@ccs.neu.edu>, bugs <bugs@racket-lang.org>,
        Neil Toronto <neil.toronto@gmail.com>,
        Matthias Felleisen <matthias@ccs.neu.edu>,
        bug-notification <bug-notification@racket-lang.org>,
        nobody <nobody@racket-lang.org>
Subject: Re: [racket-bug] all/14264: Running programs in DrRacket leaks memory
Date: Tue, 31 Dec 2013 11:26:53 -0500

 --047d7bf15f163dc31704eed707ba
 Content-Type: text/plain; charset=UTF-8
 
 Vincent has a benchmark suite for our changes to errortrace, which we
 should run before declaring this fixed.
 
 My only concern for this is if we're dereferencing a parameter in a loop.
 
 Sam, still traveling
 On Dec 31, 2013 9:18 AM, "Robby Findler" <robby@eecs.northwestern.edu>
 wrote:
 
 > Well, it shouldn't be hard to find a program that is slow without the
 > cache, fast before my push and then check to make sure it is still fast
 > afterwards.
 >
 > I'll try that this afternoon if no one beats me to it.
 >
 > Robby
 >
 >
 > On Tue, Dec 31, 2013 at 8:47 AM, Matthias Felleisen <matthias@ccs.neu.edu>wrote:
 >
 >>
 >> Sam is traveling.
 >>
 >> Vincent and Sam jointly worked on this thing for the new statistical
 >> profiler from what I understand. Vincent is already using the thing to
 >> build more stuff. I'll talk to him when he gets in.
 >>
 >> -- Matthias
 >>
 >>
 >>
 >>
 >> On Dec 31, 2013, at 8:21 AM, Robby Findler <robby@eecs.northwestern.edu>
 >> wrote:
 >>
 >> > Okay, I've pushed a commit that makes the leak go away, but I believe
 >> that Sam has some way to test if the cache is still being effective. Sam:
 >> can you check into that, please? I tried to preserve the usefulness of the
 >> cache, but I'm not positive I did it right....
 >> >
 >> > Thanks,
 >> > Robby
 >> >
 >>
 >>
 >
 
 --047d7bf15f163dc31704eed707ba
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 <p dir=3D"ltr">Vincent has a benchmark suite for our changes to errortrace,=
  which we should run before declaring this fixed.</p>
 <p dir=3D"ltr">My only concern for this is if we&#39;re dereferencing a par=
 ameter in a loop.</p>
 <p dir=3D"ltr">Sam, still traveling</p>
 <div class=3D"gmail_quote">On Dec 31, 2013 9:18 AM, &quot;Robby Findler&quo=
 t; &lt;<a href=3D"mailto:robby@eecs.northwestern.edu">robby@eecs.northweste=
 rn.edu</a>&gt; wrote:<br type=3D"attribution"><blockquote class=3D"gmail_qu=
 ote" style=3D"margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex=
 ">
 <div dir=3D"ltr">Well, it shouldn&#39;t be hard to find a program that is s=
 low without the cache, fast before my push and then check to make sure it i=
 s still fast afterwards.<div><br></div><div>I&#39;ll try that this afternoo=
 n if no one beats me to it.</div>
 
 <div><br>Robby</div></div><div class=3D"gmail_extra"><br><br><div class=3D"=
 gmail_quote">On Tue, Dec 31, 2013 at 8:47 AM, Matthias Felleisen <span dir=
 =3D"ltr">&lt;<a href=3D"mailto:matthias@ccs.neu.edu" target=3D"_blank">matt=
 hias@ccs.neu.edu</a>&gt;</span> wrote:<br>
 
 <blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1p=
 x #ccc solid;padding-left:1ex"><br>
 Sam is traveling.<br>
 <br>
 Vincent and Sam jointly worked on this thing for the new statistical profil=
 er from what I understand. Vincent is already using the thing to build more=
  stuff. I&#39;ll talk to him when he gets in.<br>
 <span><font color=3D"#888888"><br>
 -- Matthias<br>
 </font></span><div><div><br>
 <br>
 <br>
 <br>
 On Dec 31, 2013, at 8:21 AM, Robby Findler &lt;<a href=3D"mailto:robby@eecs=
 .northwestern.edu" target=3D"_blank">robby@eecs.northwestern.edu</a>&gt; wr=
 ote:<br>
 <br>
 &gt; Okay, I&#39;ve pushed a commit that makes the leak go away, but I beli=
 eve that Sam has some way to test if the cache is still being effective. Sa=
 m: can you check into that, please? I tried to preserve the usefulness of t=
 he cache, but I&#39;m not positive I did it right....<br>
 
 
 &gt;<br>
 &gt; Thanks,<br>
 &gt; Robby<br>
 &gt;<br>
 <br>
 </div></div></blockquote></div><br></div>
 </blockquote></div>
 
 --047d7bf15f163dc31704eed707ba--
From: Vincent St-Amour <stamourv@ccs.neu.edu>
To: Sam Tobin-Hochstadt <samth@cs.indiana.edu>
Cc: Robby Findler <robby@eecs.northwestern.edu>,
        Matthew Flatt <mflatt@cs.utah.edu>,
        Vincent St-Amour <stamourv@ccs.neu.edu>, bugs <bugs@racket-lang.org>,
        Neil Toronto <neil.toronto@gmail.com>,
        Matthias Felleisen <matthias@ccs.neu.edu>,
        bug-notification <bug-notification@racket-lang.org>,
        nobody <nobody@racket-lang.org>
Subject: Re: [racket-bug] all/14264: Running programs in DrRacket leaks memory
Date: Tue, 31 Dec 2013 11:30:35 -0500

 I'm currently running the benchmark suite. I'll report once it's done.
 
 Vincent
 
 
 At Tue, 31 Dec 2013 11:26:53 -0500,
 Sam Tobin-Hochstadt wrote:
 > 
 > [1  <text/plain; UTF-8 (7bit)>]
 > Vincent has a benchmark suite for our changes to errortrace, which we
 > should run before declaring this fixed.
 > 
 > My only concern for this is if we're dereferencing a parameter in a loop.
 > 
 > Sam, still traveling
 > On Dec 31, 2013 9:18 AM, "Robby Findler" <robby@eecs.northwestern.edu>
 > wrote:
 > 
 > > Well, it shouldn't be hard to find a program that is slow without the
 > > cache, fast before my push and then check to make sure it is still fast
 > > afterwards.
 > >
 > > I'll try that this afternoon if no one beats me to it.
 > >
 > > Robby
 > >
 > >
 > > On Tue, Dec 31, 2013 at 8:47 AM, Matthias Felleisen <matthias@ccs.neu.edu>wrote:
 > >
 > >>
 > >> Sam is traveling.
 > >>
 > >> Vincent and Sam jointly worked on this thing for the new statistical
 > >> profiler from what I understand. Vincent is already using the thing to
 > >> build more stuff. I'll talk to him when he gets in.
 > >>
 > >> -- Matthias
 > >>
 > >>
 > >>
 > >>
 > >> On Dec 31, 2013, at 8:21 AM, Robby Findler <robby@eecs.northwestern.edu>
 > >> wrote:
 > >>
 > >> > Okay, I've pushed a commit that makes the leak go away, but I believe
 > >> that Sam has some way to test if the cache is still being effective. Sam:
 > >> can you check into that, please? I tried to preserve the usefulness of the
 > >> cache, but I'm not positive I did it right....
 > >> >
 > >> > Thanks,
 > >> > Robby
 > >> >
 > >>
 > >>
 > >
 > [2  <text/html; UTF-8 (quoted-printable)>]
 > 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Sam Tobin-Hochstadt <samth@cs.indiana.edu>
Cc: Matthew Flatt <mflatt@cs.utah.edu>,
        Vincent St-Amour <stamourv@ccs.neu.edu>, bugs <bugs@racket-lang.org>,
        Neil Toronto <neil.toronto@gmail.com>,
        Matthias Felleisen <matthias@ccs.neu.edu>,
        bug-notification <bug-notification@racket-lang.org>,
        nobody <nobody@racket-lang.org>
Subject: Re: [racket-bug] all/14264: Running programs in DrRacket leaks memory
Date: Tue, 31 Dec 2013 10:32:32 -0600

 --001a1134ad0669216904eed71b8e
 Content-Type: text/plain; charset=UTF-8
 
 I added a parameter dereference to code that is already doing non-trivial
 stuff. We could make it a continuation mark dereference pretty easily if it
 matters.
 
 Robby
 
 
 On Tue, Dec 31, 2013 at 10:26 AM, Sam Tobin-Hochstadt
 <samth@cs.indiana.edu>wrote:
 
 > Vincent has a benchmark suite for our changes to errortrace, which we
 > should run before declaring this fixed.
 >
 > My only concern for this is if we're dereferencing a parameter in a loop.
 >
 > Sam, still traveling
 > On Dec 31, 2013 9:18 AM, "Robby Findler" <robby@eecs.northwestern.edu>
 > wrote:
 >
 >> Well, it shouldn't be hard to find a program that is slow without the
 >> cache, fast before my push and then check to make sure it is still fast
 >> afterwards.
 >>
 >> I'll try that this afternoon if no one beats me to it.
 >>
 >> Robby
 >>
 >>
 >> On Tue, Dec 31, 2013 at 8:47 AM, Matthias Felleisen <matthias@ccs.neu.edu
 >> > wrote:
 >>
 >>>
 >>> Sam is traveling.
 >>>
 >>> Vincent and Sam jointly worked on this thing for the new statistical
 >>> profiler from what I understand. Vincent is already using the thing to
 >>> build more stuff. I'll talk to him when he gets in.
 >>>
 >>> -- Matthias
 >>>
 >>>
 >>>
 >>>
 >>> On Dec 31, 2013, at 8:21 AM, Robby Findler <robby@eecs.northwestern.edu>
 >>> wrote:
 >>>
 >>> > Okay, I've pushed a commit that makes the leak go away, but I believe
 >>> that Sam has some way to test if the cache is still being effective. Sam:
 >>> can you check into that, please? I tried to preserve the usefulness of the
 >>> cache, but I'm not positive I did it right....
 >>> >
 >>> > Thanks,
 >>> > Robby
 >>> >
 >>>
 >>>
 >>
 
 --001a1134ad0669216904eed71b8e
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 <div dir=3D"ltr">I added a parameter dereference to code that is already do=
 ing non-trivial stuff. We could make it a continuation mark dereference pre=
 tty easily if it matters.<div><br></div><div>Robby</div></div><div class=3D=
 "gmail_extra">
 <br><br><div class=3D"gmail_quote">On Tue, Dec 31, 2013 at 10:26 AM, Sam To=
 bin-Hochstadt <span dir=3D"ltr">&lt;<a href=3D"mailto:samth@cs.indiana.edu"=
  target=3D"_blank">samth@cs.indiana.edu</a>&gt;</span> wrote:<br><blockquot=
 e class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1px #ccc sol=
 id;padding-left:1ex">
 <p dir=3D"ltr">Vincent has a benchmark suite for our changes to errortrace,=
  which we should run before declaring this fixed.</p>
 <p dir=3D"ltr">My only concern for this is if we&#39;re dereferencing a par=
 ameter in a loop.</p>
 <p dir=3D"ltr">Sam, still traveling</p><div class=3D"HOEnZb"><div class=3D"=
 h5">
 <div class=3D"gmail_quote">On Dec 31, 2013 9:18 AM, &quot;Robby Findler&quo=
 t; &lt;<a href=3D"mailto:robby@eecs.northwestern.edu" target=3D"_blank">rob=
 by@eecs.northwestern.edu</a>&gt; wrote:<br type=3D"attribution"><blockquote=
  class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1px #ccc soli=
 d;padding-left:1ex">
 
 <div dir=3D"ltr">Well, it shouldn&#39;t be hard to find a program that is s=
 low without the cache, fast before my push and then check to make sure it i=
 s still fast afterwards.<div><br></div><div>I&#39;ll try that this afternoo=
 n if no one beats me to it.</div>
 
 
 <div><br>Robby</div></div><div class=3D"gmail_extra"><br><br><div class=3D"=
 gmail_quote">On Tue, Dec 31, 2013 at 8:47 AM, Matthias Felleisen <span dir=
 =3D"ltr">&lt;<a href=3D"mailto:matthias@ccs.neu.edu" target=3D"_blank">matt=
 hias@ccs.neu.edu</a>&gt;</span> wrote:<br>
 
 
 <blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1p=
 x #ccc solid;padding-left:1ex"><br>
 Sam is traveling.<br>
 <br>
 Vincent and Sam jointly worked on this thing for the new statistical profil=
 er from what I understand. Vincent is already using the thing to build more=
  stuff. I&#39;ll talk to him when he gets in.<br>
 <span><font color=3D"#888888"><br>
 -- Matthias<br>
 </font></span><div><div><br>
 <br>
 <br>
 <br>
 On Dec 31, 2013, at 8:21 AM, Robby Findler &lt;<a href=3D"mailto:robby@eecs=
 .northwestern.edu" target=3D"_blank">robby@eecs.northwestern.edu</a>&gt; wr=
 ote:<br>
 <br>
 &gt; Okay, I&#39;ve pushed a commit that makes the leak go away, but I beli=
 eve that Sam has some way to test if the cache is still being effective. Sa=
 m: can you check into that, please? I tried to preserve the usefulness of t=
 he cache, but I&#39;m not positive I did it right....<br>
 
 
 
 &gt;<br>
 &gt; Thanks,<br>
 &gt; Robby<br>
 &gt;<br>
 <br>
 </div></div></blockquote></div><br></div>
 </blockquote></div>
 </div></div></blockquote></div><br></div>
 
 --001a1134ad0669216904eed71b8e--
From: Vincent St-Amour <stamourv@ccs.neu.edu>
To: Vincent St-Amour <stamourv@ccs.neu.edu>
Cc: Sam Tobin-Hochstadt <samth@cs.indiana.edu>,
        Robby Findler <robby@eecs.northwestern.edu>,
        Matthew Flatt <mflatt@cs.utah.edu>, bugs <bugs@racket-lang.org>,
        Neil Toronto <neil.toronto@gmail.com>,
        Matthias Felleisen <matthias@ccs.neu.edu>,
        bug-notification <bug-notification@racket-lang.org>,
        nobody <nobody@racket-lang.org>
Subject: Re: [racket-bug] all/14264: Running programs in DrRacket leaks memory
Date: Tue, 31 Dec 2013 12:21:50 -0500

 Here are the results: http://www.ccs.neu.edu/home/stamourv/errortrace-slowdown2.pdf
 
 "errortrace-old" is before Robby's fix, and "errortrace-new" is after.
 
 Looks like there's a problem with `redex/examples/racket-machine/impl-exec.rkt'.
 After Robby's fix, the overhead from errortrace is similar to what it was before
 I fixed a bug in caching, which suggests that caching may now be broken.
 
 I'm re-running the benchmarks to get more samples, just to make sure.
 
 Vincent
 
 
 
 At Tue, 31 Dec 2013 11:30:35 -0500,
 Vincent St-Amour wrote:
 > 
 > I'm currently running the benchmark suite. I'll report once it's done.
 > 
 > Vincent
 > 
 > 
 > At Tue, 31 Dec 2013 11:26:53 -0500,
 > Sam Tobin-Hochstadt wrote:
 > > 
 > > [1  <text/plain; UTF-8 (7bit)>]
 > > Vincent has a benchmark suite for our changes to errortrace, which we
 > > should run before declaring this fixed.
 > > 
 > > My only concern for this is if we're dereferencing a parameter in a loop.
 > > 
 > > Sam, still traveling
 > > On Dec 31, 2013 9:18 AM, "Robby Findler" <robby@eecs.northwestern.edu>
 > > wrote:
 > > 
 > > > Well, it shouldn't be hard to find a program that is slow without the
 > > > cache, fast before my push and then check to make sure it is still fast
 > > > afterwards.
 > > >
 > > > I'll try that this afternoon if no one beats me to it.
 > > >
 > > > Robby
 > > >
 > > >
 > > > On Tue, Dec 31, 2013 at 8:47 AM, Matthias Felleisen <matthias@ccs.neu.edu>wrote:
 > > >
 > > >>
 > > >> Sam is traveling.
 > > >>
 > > >> Vincent and Sam jointly worked on this thing for the new statistical
 > > >> profiler from what I understand. Vincent is already using the thing to
 > > >> build more stuff. I'll talk to him when he gets in.
 > > >>
 > > >> -- Matthias
 > > >>
 > > >>
 > > >>
 > > >>
 > > >> On Dec 31, 2013, at 8:21 AM, Robby Findler <robby@eecs.northwestern.edu>
 > > >> wrote:
 > > >>
 > > >> > Okay, I've pushed a commit that makes the leak go away, but I believe
 > > >> that Sam has some way to test if the cache is still being effective. Sam:
 > > >> can you check into that, please? I tried to preserve the usefulness of the
 > > >> cache, but I'm not positive I did it right....
 > > >> >
 > > >> > Thanks,
 > > >> > Robby
 > > >> >
 > > >>
 > > >>
 > > >
 > > [2  <text/html; UTF-8 (quoted-printable)>]
 > > 
From: Vincent St-Amour <stamourv@ccs.neu.edu>
To: Vincent St-Amour <stamourv@ccs.neu.edu>
Cc: Sam Tobin-Hochstadt <samth@cs.indiana.edu>,
        Robby Findler <robby@eecs.northwestern.edu>,
        Matthew Flatt <mflatt@cs.utah.edu>, bugs <bugs@racket-lang.org>,
        Neil Toronto <neil.toronto@gmail.com>,
        Matthias Felleisen <matthias@ccs.neu.edu>,
        bug-notification <bug-notification@racket-lang.org>,
        nobody <nobody@racket-lang.org>
Subject: Re: [racket-bug] all/14264: Running programs in DrRacket leaks memory
Date: Tue, 31 Dec 2013 12:29:48 -0500

 At Tue, 31 Dec 2013 12:21:50 -0500,
 Vincent St-Amour wrote:
 > I'm re-running the benchmarks to get more samples, just to make sure.
 
 Results are similar:
 http://www.ccs.neu.edu/home/stamourv/errortrace-slowdown3.pdf
 
 Vincent
From: Robby Findler <robby@eecs.northwestern.edu>
To: Vincent St-Amour <stamourv@ccs.neu.edu>
Cc: Sam Tobin-Hochstadt <samth@cs.indiana.edu>,
        Robby Findler <robby@eecs.northwestern.edu>,
        Matthew Flatt <mflatt@cs.utah.edu>, bugs <bugs@racket-lang.org>,
        Neil Toronto <neil.toronto@gmail.com>,
        Matthias Felleisen <matthias@ccs.neu.edu>,
        bug-notification <bug-notification@racket-lang.org>,
        nobody <nobody@racket-lang.org>
Subject: Re: [racket-bug] all/14264: Running programs in DrRacket leaks memory
Date: Tue, 31 Dec 2013 12:22:19 -0600

 --089e01182c7e08c95604eed8a436
 Content-Type: text/plain; charset=UTF-8
 
 The caching is definitely less aggressive than it was before. I can't
 really look into this until later tonight but we may need to expose the
 cache to the clients if there is not enough caching happening now.
 
 Robby
 
 On Tuesday, December 31, 2013, Vincent St-Amour wrote:
 
 > Here are the results:
 > http://www.ccs.neu.edu/home/stamourv/errortrace-slowdown2.pdf
 >
 > "errortrace-old" is before Robby's fix, and "errortrace-new" is after.
 >
 > Looks like there's a problem with
 > `redex/examples/racket-machine/impl-exec.rkt'.
 > After Robby's fix, the overhead from errortrace is similar to what it was
 > before
 > I fixed a bug in caching, which suggests that caching may now be broken.
 >
 > I'm re-running the benchmarks to get more samples, just to make sure.
 >
 > Vincent
 >
 >
 >
 > At Tue, 31 Dec 2013 11:30:35 -0500,
 > Vincent St-Amour wrote:
 > >
 > > I'm currently running the benchmark suite. I'll report once it's done.
 > >
 > > Vincent
 > >
 > >
 > > At Tue, 31 Dec 2013 11:26:53 -0500,
 > > Sam Tobin-Hochstadt wrote:
 > > >
 > > > [1  <text/plain; UTF-8 (7bit)>]
 > > > Vincent has a benchmark suite for our changes to errortrace, which we
 > > > should run before declaring this fixed.
 > > >
 > > > My only concern for this is if we're dereferencing a parameter in a
 > loop.
 > > >
 > > > Sam, still traveling
 > > > On Dec 31, 2013 9:18 AM, "Robby Findler" <robby@eecs.northwestern.edu<javascript:;>
 > >
 > > > wrote:
 > > >
 > > > > Well, it shouldn't be hard to find a program that is slow without the
 > > > > cache, fast before my push and then check to make sure it is still
 > fast
 > > > > afterwards.
 > > > >
 > > > > I'll try that this afternoon if no one beats me to it.
 > > > >
 > > > > Robby
 > > > >
 > > > >
 > > > > On Tue, Dec 31, 2013 at 8:47 AM, Matthias Felleisen <
 > matthias@ccs.neu.edu <javascript:;>>wrote:
 > > > >
 > > > >>
 > > > >> Sam is traveling.
 > > > >>
 > > > >> Vincent and Sam jointly worked on this thing for the new statistical
 > > > >> profiler from what I understand. Vincent is already using the thing
 > to
 > > > >> build more stuff. I'll talk to him when he gets in.
 > > > >>
 > > > >> -- Matthias
 > > > >>
 > > > >>
 > > > >>
 > > > >>
 > > > >> On Dec 31, 2013, at 8:21 AM, Robby Findler <
 > robby@eecs.northwestern.edu <javascript:;>>
 > > > >> wrote:
 > > > >>
 > > > >> > Okay, I've pushed a commit that makes the leak go away, but I
 > believe
 > > > >> that Sam has some way to test if the cache is still being
 > effective. Sam:
 > > > >> can you check into that, please? I tried to preserve the usefulness
 > of the
 > > > >> cache, but I'm not positive I did it right....
 > > > >> >
 > > > >> > Thanks,
 > > > >> > Robby
 > > > >> >
 > > > >>
 > > > >>
 > > > >
 > > > [2  <text/html; UTF-8 (quoted-printable)>]
 > > >
 >
 
 --089e01182c7e08c95604eed8a436
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 The caching is definitely less aggressive than it was before. I can&#39;t r=
 eally look into this until later tonight=C2=A0<span></span>but we may need =
 to expose the cache to the clients if there is not enough caching happening=
  now.<div>
 <br></div><div>Robby<br><br>On Tuesday, December 31, 2013, Vincent St-Amour=
   wrote:<br><blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;bo=
 rder-left:1px #ccc solid;padding-left:1ex">Here are the results: <a href=3D=
 "http://www.ccs.neu.edu/home/stamourv/errortrace-slowdown2.pdf" target=3D"_=
 blank">http://www.ccs.neu.edu/home/stamourv/errortrace-slowdown2.pdf</a><br=
 >
 
 <br>
 &quot;errortrace-old&quot; is before Robby&#39;s fix, and &quot;errortrace-=
 new&quot; is after.<br>
 <br>
 Looks like there&#39;s a problem with `redex/examples/racket-machine/impl-e=
 xec.rkt&#39;.<br>
 After Robby&#39;s fix, the overhead from errortrace is similar to what it w=
 as before<br>
 I fixed a bug in caching, which suggests that caching may now be broken.<br=
 >
 <br>
 I&#39;m re-running the benchmarks to get more samples, just to make sure.<b=
 r>
 <br>
 Vincent<br>
 <br>
 <br>
 <br>
 At Tue, 31 Dec 2013 11:30:35 -0500,<br>
 Vincent St-Amour wrote:<br>
 &gt;<br>
 &gt; I&#39;m currently running the benchmark suite. I&#39;ll report once it=
 &#39;s done.<br>
 &gt;<br>
 &gt; Vincent<br>
 &gt;<br>
 &gt;<br>
 &gt; At Tue, 31 Dec 2013 11:26:53 -0500,<br>
 &gt; Sam Tobin-Hochstadt wrote:<br>
 &gt; &gt;<br>
 &gt; &gt; [1 =C2=A0&lt;text/plain; UTF-8 (7bit)&gt;]<br>
 &gt; &gt; Vincent has a benchmark suite for our changes to errortrace, whic=
 h we<br>
 &gt; &gt; should run before declaring this fixed.<br>
 &gt; &gt;<br>
 &gt; &gt; My only concern for this is if we&#39;re dereferencing a paramete=
 r in a loop.<br>
 &gt; &gt;<br>
 &gt; &gt; Sam, still traveling<br>
 &gt; &gt; On Dec 31, 2013 9:18 AM, &quot;Robby Findler&quot; &lt;<a href=3D=
 "javascript:;" onclick=3D"_e(event, &#39;cvml&#39;, &#39;robby@eecs.northwe=
 stern.edu&#39;)">robby@eecs.northwestern.edu</a>&gt;<br>
 &gt; &gt; wrote:<br>
 &gt; &gt;<br>
 &gt; &gt; &gt; Well, it shouldn&#39;t be hard to find a program that is slo=
 w without the<br>
 &gt; &gt; &gt; cache, fast before my push and then check to make sure it is=
  still fast<br>
 &gt; &gt; &gt; afterwards.<br>
 &gt; &gt; &gt;<br>
 &gt; &gt; &gt; I&#39;ll try that this afternoon if no one beats me to it.<b=
 r>
 &gt; &gt; &gt;<br>
 &gt; &gt; &gt; Robby<br>
 &gt; &gt; &gt;<br>
 &gt; &gt; &gt;<br>
 &gt; &gt; &gt; On Tue, Dec 31, 2013 at 8:47 AM, Matthias Felleisen &lt;<a h=
 ref=3D"javascript:;" onclick=3D"_e(event, &#39;cvml&#39;, &#39;matthias@ccs=
 .neu.edu&#39;)">matthias@ccs.neu.edu</a>&gt;wrote:<br>
 &gt; &gt; &gt;<br>
 &gt; &gt; &gt;&gt;<br>
 &gt; &gt; &gt;&gt; Sam is traveling.<br>
 &gt; &gt; &gt;&gt;<br>
 &gt; &gt; &gt;&gt; Vincent and Sam jointly worked on this thing for the new=
  statistical<br>
 &gt; &gt; &gt;&gt; profiler from what I understand. Vincent is already usin=
 g the thing to<br>
 &gt; &gt; &gt;&gt; build more stuff. I&#39;ll talk to him when he gets in.<=
 br>
 &gt; &gt; &gt;&gt;<br>
 &gt; &gt; &gt;&gt; -- Matthias<br>
 &gt; &gt; &gt;&gt;<br>
 &gt; &gt; &gt;&gt;<br>
 &gt; &gt; &gt;&gt;<br>
 &gt; &gt; &gt;&gt;<br>
 &gt; &gt; &gt;&gt; On Dec 31, 2013, at 8:21 AM, Robby Findler &lt;<a href=
 =3D"javascript:;" onclick=3D"_e(event, &#39;cvml&#39;, &#39;robby@eecs.nort=
 hwestern.edu&#39;)">robby@eecs.northwestern.edu</a>&gt;<br>
 &gt; &gt; &gt;&gt; wrote:<br>
 &gt; &gt; &gt;&gt;<br>
 &gt; &gt; &gt;&gt; &gt; Okay, I&#39;ve pushed a commit that makes the leak =
 go away, but I believe<br>
 &gt; &gt; &gt;&gt; that Sam has some way to test if the cache is still bein=
 g effective. Sam:<br>
 &gt; &gt; &gt;&gt; can you check into that, please? I tried to preserve the=
  usefulness of the<br>
 &gt; &gt; &gt;&gt; cache, but I&#39;m not positive I did it right....<br>
 &gt; &gt; &gt;&gt; &gt;<br>
 &gt; &gt; &gt;&gt; &gt; Thanks,<br>
 &gt; &gt; &gt;&gt; &gt; Robby<br>
 &gt; &gt; &gt;&gt; &gt;<br>
 &gt; &gt; &gt;&gt;<br>
 &gt; &gt; &gt;&gt;<br>
 &gt; &gt; &gt;<br>
 &gt; &gt; [2 =C2=A0&lt;text/html; UTF-8 (quoted-printable)&gt;]<br>
 &gt; &gt;<br>
 </blockquote></div>
 
 --089e01182c7e08c95604eed8a436--
From: Vincent St-Amour <stamourv@ccs.neu.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: Vincent St-Amour <stamourv@ccs.neu.edu>,
        Sam Tobin-Hochstadt <samth@cs.indiana.edu>,
        Matthew Flatt <mflatt@cs.utah.edu>, bugs <bugs@racket-lang.org>,
        Neil Toronto <neil.toronto@gmail.com>,
        Matthias Felleisen <matthias@ccs.neu.edu>,
        bug-notification <bug-notification@racket-lang.org>,
        nobody <nobody@racket-lang.org>
Subject: Re: [racket-bug] all/14264: Running programs in DrRacket leaks memory
Date: Tue, 31 Dec 2013 13:33:25 -0500

 I'm currently looking into a solution.
 
 In the meantime, no caching (which increases compile time, but only when
 errortrace is enabled) is preferable to memory leaks.
 
 Vincent
 
 
 
 At Tue, 31 Dec 2013 12:22:19 -0600,
 Robby Findler wrote:
 > 
 > [1  <text/plain; UTF-8 (7bit)>]
 > The caching is definitely less aggressive than it was before. I can't
 > really look into this until later tonight but we may need to expose the
 > cache to the clients if there is not enough caching happening now.
 > 
 > Robby
 > 
 > On Tuesday, December 31, 2013, Vincent St-Amour wrote:
 > 
 > > Here are the results:
 > > http://www.ccs.neu.edu/home/stamourv/errortrace-slowdown2.pdf
 > >
 > > "errortrace-old" is before Robby's fix, and "errortrace-new" is after.
 > >
 > > Looks like there's a problem with
 > > `redex/examples/racket-machine/impl-exec.rkt'.
 > > After Robby's fix, the overhead from errortrace is similar to what it was
 > > before
 > > I fixed a bug in caching, which suggests that caching may now be broken.
 > >
 > > I'm re-running the benchmarks to get more samples, just to make sure.
 > >
 > > Vincent
 > >
 > >
 > >
 > > At Tue, 31 Dec 2013 11:30:35 -0500,
 > > Vincent St-Amour wrote:
 > > >
 > > > I'm currently running the benchmark suite. I'll report once it's done.
 > > >
 > > > Vincent
 > > >
 > > >
 > > > At Tue, 31 Dec 2013 11:26:53 -0500,
 > > > Sam Tobin-Hochstadt wrote:
 > > > >
 > > > > [1  <text/plain; UTF-8 (7bit)>]
 > > > > Vincent has a benchmark suite for our changes to errortrace, which we
 > > > > should run before declaring this fixed.
 > > > >
 > > > > My only concern for this is if we're dereferencing a parameter in a
 > > loop.
 > > > >
 > > > > Sam, still traveling
 > > > > On Dec 31, 2013 9:18 AM, "Robby Findler" <robby@eecs.northwestern.edu<javascript:;>
 > > >
 > > > > wrote:
 > > > >
 > > > > > Well, it shouldn't be hard to find a program that is slow without the
 > > > > > cache, fast before my push and then check to make sure it is still
 > > fast
 > > > > > afterwards.
 > > > > >
 > > > > > I'll try that this afternoon if no one beats me to it.
 > > > > >
 > > > > > Robby
 > > > > >
 > > > > >
 > > > > > On Tue, Dec 31, 2013 at 8:47 AM, Matthias Felleisen <
 > > matthias@ccs.neu.edu <javascript:;>>wrote:
 > > > > >
 > > > > >>
 > > > > >> Sam is traveling.
 > > > > >>
 > > > > >> Vincent and Sam jointly worked on this thing for the new statistical
 > > > > >> profiler from what I understand. Vincent is already using the thing
 > > to
 > > > > >> build more stuff. I'll talk to him when he gets in.
 > > > > >>
 > > > > >> -- Matthias
 > > > > >>
 > > > > >>
 > > > > >>
 > > > > >>
 > > > > >> On Dec 31, 2013, at 8:21 AM, Robby Findler <
 > > robby@eecs.northwestern.edu <javascript:;>>
 > > > > >> wrote:
 > > > > >>
 > > > > >> > Okay, I've pushed a commit that makes the leak go away, but I
 > > believe
 > > > > >> that Sam has some way to test if the cache is still being
 > > effective. Sam:
 > > > > >> can you check into that, please? I tried to preserve the usefulness
 > > of the
 > > > > >> cache, but I'm not positive I did it right....
 > > > > >> >
 > > > > >> > Thanks,
 > > > > >> > Robby
 > > > > >> >
 > > > > >>
 > > > > >>
 > > > > >
 > > > > [2  <text/html; UTF-8 (quoted-printable)>]
 > > > >
 > >
 > [2  <text/html; UTF-8 (quoted-printable)>]
 > 
From: Neil Toronto <neil.toronto@gmail.com>
To: Vincent St-Amour <stamourv@ccs.neu.edu>,
        Robby Findler <robby@eecs.northwestern.edu>
Cc: Sam Tobin-Hochstadt <samth@cs.indiana.edu>,
        Matthew Flatt <mflatt@cs.utah.edu>, bugs <bugs@racket-lang.org>,
        Matthias Felleisen <matthias@ccs.neu.edu>,
        bug-notification <bug-notification@racket-lang.org>,
        nobody <nobody@racket-lang.org>
Subject: Re: [racket-bug] all/14264: Running programs in DrRacket leaks memory
Date: Tue, 31 Dec 2013 13:33:02 -0700

 I agree. Also, Robby, whatever you did appears to fix the memory leak 
 when running my original program. It's holding steady over multiple 
 executions.
 
 Neil ⊥
 
 On 12/31/2013 11:33 AM, Vincent St-Amour wrote:
 > I'm currently looking into a solution.
 >
 > In the meantime, no caching (which increases compile time, but only when
 > errortrace is enabled) is preferable to memory leaks.
 >
 > Vincent
 >
 >
 >
 > At Tue, 31 Dec 2013 12:22:19 -0600,
 > Robby Findler wrote:
 >>
 >> [1  <text/plain; UTF-8 (7bit)>]
 >> The caching is definitely less aggressive than it was before. I can't
 >> really look into this until later tonight but we may need to expose the
 >> cache to the clients if there is not enough caching happening now.
 >>
 >> Robby
 >>
 >> On Tuesday, December 31, 2013, Vincent St-Amour wrote:
 >>
 >>> Here are the results:
 >>> http://www.ccs.neu.edu/home/stamourv/errortrace-slowdown2.pdf
 >>>
 >>> "errortrace-old" is before Robby's fix, and "errortrace-new" is after.
 >>>
 >>> Looks like there's a problem with
 >>> `redex/examples/racket-machine/impl-exec.rkt'.
 >>> After Robby's fix, the overhead from errortrace is similar to what it was
 >>> before
 >>> I fixed a bug in caching, which suggests that caching may now be broken.
 >>>
 >>> I'm re-running the benchmarks to get more samples, just to make sure.
 >>>
 >>> Vincent
 >>>
 >>>
 >>>
 >>> At Tue, 31 Dec 2013 11:30:35 -0500,
 >>> Vincent St-Amour wrote:
 >>>>
 >>>> I'm currently running the benchmark suite. I'll report once it's done.
 >>>>
 >>>> Vincent
 >>>>
 >>>>
 >>>> At Tue, 31 Dec 2013 11:26:53 -0500,
 >>>> Sam Tobin-Hochstadt wrote:
 >>>>>
 >>>>> [1  <text/plain; UTF-8 (7bit)>]
 >>>>> Vincent has a benchmark suite for our changes to errortrace, which we
 >>>>> should run before declaring this fixed.
 >>>>>
 >>>>> My only concern for this is if we're dereferencing a parameter in a
 >>> loop.
 >>>>>
 >>>>> Sam, still traveling
 >>>>> On Dec 31, 2013 9:18 AM, "Robby Findler" <robby@eecs.northwestern.edu<javascript:;>
 >>>>
 >>>>> wrote:
 >>>>>
 >>>>>> Well, it shouldn't be hard to find a program that is slow without the
 >>>>>> cache, fast before my push and then check to make sure it is still
 >>> fast
 >>>>>> afterwards.
 >>>>>>
 >>>>>> I'll try that this afternoon if no one beats me to it.
 >>>>>>
 >>>>>> Robby
 >>>>>>
 >>>>>>
 >>>>>> On Tue, Dec 31, 2013 at 8:47 AM, Matthias Felleisen <
 >>> matthias@ccs.neu.edu <javascript:;>>wrote:
 >>>>>>
 >>>>>>>
 >>>>>>> Sam is traveling.
 >>>>>>>
 >>>>>>> Vincent and Sam jointly worked on this thing for the new statistical
 >>>>>>> profiler from what I understand. Vincent is already using the thing
 >>> to
 >>>>>>> build more stuff. I'll talk to him when he gets in.
 >>>>>>>
 >>>>>>> -- Matthias
 >>>>>>>
 >>>>>>>
 >>>>>>>
 >>>>>>>
 >>>>>>> On Dec 31, 2013, at 8:21 AM, Robby Findler <
 >>> robby@eecs.northwestern.edu <javascript:;>>
 >>>>>>> wrote:
 >>>>>>>
 >>>>>>>> Okay, I've pushed a commit that makes the leak go away, but I
 >>> believe
 >>>>>>> that Sam has some way to test if the cache is still being
 >>> effective. Sam:
 >>>>>>> can you check into that, please? I tried to preserve the usefulness
 >>> of the
 >>>>>>> cache, but I'm not positive I did it right....
 >>>>>>>>
 >>>>>>>> Thanks,
 >>>>>>>> Robby
 >>>>>>>>
 >>>>>>>
 >>>>>>>
 >>>>>>
 >>>>> [2  <text/html; UTF-8 (quoted-printable)>]
 >>>>>
 >>>
 >> [2  <text/html; UTF-8 (quoted-printable)>]
 >>
 
From: Vincent St-Amour <stamourv@ccs.neu.edu>
To: Vincent St-Amour <stamourv@ccs.neu.edu>
Cc: Robby Findler <robby@eecs.northwestern.edu>,
        Sam Tobin-Hochstadt <samth@cs.indiana.edu>,
        Matthew Flatt <mflatt@cs.utah.edu>, bugs <bugs@racket-lang.org>,
        Neil Toronto <neil.toronto@gmail.com>,
        Matthias Felleisen <matthias@ccs.neu.edu>,
        bug-notification <bug-notification@racket-lang.org>,
        nobody <nobody@racket-lang.org>
Subject: Re: [racket-bug] all/14264: Running programs in DrRacket leaks memory
Date: Tue, 31 Dec 2013 16:23:54 -0500

 It looks like most of the extra overhead I saw was a measurement error
 on my part. Long story short, the `errortrace-new' version was sometimes
 compiling extra files, while the `errortrace-old' version was not.
 
 New results: http://www.ccs.neu.edu/home/stamourv/errortrace-slowdown4.pdf
 
 Conclusion: Robby's fix does not cause significant slowdowns. Sometimes
 it's a bit slower, sometimes it's a bit faster.
 
 
 Vincent
 
 
 
 
 At Tue, 31 Dec 2013 13:33:25 -0500,
 Vincent St-Amour wrote:
 > 
 > I'm currently looking into a solution.
 > 
 > In the meantime, no caching (which increases compile time, but only when
 > errortrace is enabled) is preferable to memory leaks.
 > 
 > Vincent
 > 
 > 
 > 
 > At Tue, 31 Dec 2013 12:22:19 -0600,
 > Robby Findler wrote:
 > > 
 > > [1  <text/plain; UTF-8 (7bit)>]
 > > The caching is definitely less aggressive than it was before. I can't
 > > really look into this until later tonight but we may need to expose the
 > > cache to the clients if there is not enough caching happening now.
 > > 
 > > Robby
 > > 
 > > On Tuesday, December 31, 2013, Vincent St-Amour wrote:
 > > 
 > > > Here are the results:
 > > > http://www.ccs.neu.edu/home/stamourv/errortrace-slowdown2.pdf
 > > >
 > > > "errortrace-old" is before Robby's fix, and "errortrace-new" is after.
 > > >
 > > > Looks like there's a problem with
 > > > `redex/examples/racket-machine/impl-exec.rkt'.
 > > > After Robby's fix, the overhead from errortrace is similar to what it was
 > > > before
 > > > I fixed a bug in caching, which suggests that caching may now be broken.
 > > >
 > > > I'm re-running the benchmarks to get more samples, just to make sure.
 > > >
 > > > Vincent
 > > >
 > > >
 > > >
 > > > At Tue, 31 Dec 2013 11:30:35 -0500,
 > > > Vincent St-Amour wrote:
 > > > >
 > > > > I'm currently running the benchmark suite. I'll report once it's done.
 > > > >
 > > > > Vincent
 > > > >
 > > > >
 > > > > At Tue, 31 Dec 2013 11:26:53 -0500,
 > > > > Sam Tobin-Hochstadt wrote:
 > > > > >
 > > > > > [1  <text/plain; UTF-8 (7bit)>]
 > > > > > Vincent has a benchmark suite for our changes to errortrace, which we
 > > > > > should run before declaring this fixed.
 > > > > >
 > > > > > My only concern for this is if we're dereferencing a parameter in a
 > > > loop.
 > > > > >
 > > > > > Sam, still traveling
 > > > > > On Dec 31, 2013 9:18 AM, "Robby Findler" <robby@eecs.northwestern.edu<javascript:;>
 > > > >
 > > > > > wrote:
 > > > > >
 > > > > > > Well, it shouldn't be hard to find a program that is slow without the
 > > > > > > cache, fast before my push and then check to make sure it is still
 > > > fast
 > > > > > > afterwards.
 > > > > > >
 > > > > > > I'll try that this afternoon if no one beats me to it.
 > > > > > >
 > > > > > > Robby
 > > > > > >
 > > > > > >
 > > > > > > On Tue, Dec 31, 2013 at 8:47 AM, Matthias Felleisen <
 > > > matthias@ccs.neu.edu <javascript:;>>wrote:
 > > > > > >
 > > > > > >>
 > > > > > >> Sam is traveling.
 > > > > > >>
 > > > > > >> Vincent and Sam jointly worked on this thing for the new statistical
 > > > > > >> profiler from what I understand. Vincent is already using the thing
 > > > to
 > > > > > >> build more stuff. I'll talk to him when he gets in.
 > > > > > >>
 > > > > > >> -- Matthias
 > > > > > >>
 > > > > > >>
 > > > > > >>
 > > > > > >>
 > > > > > >> On Dec 31, 2013, at 8:21 AM, Robby Findler <
 > > > robby@eecs.northwestern.edu <javascript:;>>
 > > > > > >> wrote:
 > > > > > >>
 > > > > > >> > Okay, I've pushed a commit that makes the leak go away, but I
 > > > believe
 > > > > > >> that Sam has some way to test if the cache is still being
 > > > effective. Sam:
 > > > > > >> can you check into that, please? I tried to preserve the usefulness
 > > > of the
 > > > > > >> cache, but I'm not positive I did it right....
 > > > > > >> >
 > > > > > >> > Thanks,
 > > > > > >> > Robby
 > > > > > >> >
 > > > > > >>
 > > > > > >>
 > > > > > >
 > > > > > [2  <text/html; UTF-8 (quoted-printable)>]
 > > > > >
 > > >
 > > [2  <text/html; UTF-8 (quoted-printable)>]
 > > 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Vincent St-Amour <stamourv@ccs.neu.edu>
Cc: Sam Tobin-Hochstadt <samth@cs.indiana.edu>,
        Matthew Flatt <mflatt@cs.utah.edu>, bugs <bugs@racket-lang.org>,
        Neil Toronto <neil.toronto@gmail.com>,
        Matthias Felleisen <matthias@ccs.neu.edu>,
        bug-notification <bug-notification@racket-lang.org>,
        nobody <nobody@racket-lang.org>
Subject: Re: [racket-bug] all/14264: Running programs in DrRacket leaks memory
Date: Tue, 31 Dec 2013 15:34:34 -0600

 --047d7bd6afcc92f67f04eedb5359
 Content-Type: text/plain; charset=UTF-8
 
 Thanks, Vincent.
 
 Lets take it for the release, assuming one of the other release managers
 okays it.
 
 Robby
 
 
 On Tue, Dec 31, 2013 at 3:23 PM, Vincent St-Amour <stamourv@ccs.neu.edu>wrote:
 
 > It looks like most of the extra overhead I saw was a measurement error
 > on my part. Long story short, the `errortrace-new' version was sometimes
 > compiling extra files, while the `errortrace-old' version was not.
 >
 > New results: http://www.ccs.neu.edu/home/stamourv/errortrace-slowdown4.pdf
 >
 > Conclusion: Robby's fix does not cause significant slowdowns. Sometimes
 > it's a bit slower, sometimes it's a bit faster.
 >
 >
 > Vincent
 >
 >
 >
 >
 > At Tue, 31 Dec 2013 13:33:25 -0500,
 > Vincent St-Amour wrote:
 > >
 > > I'm currently looking into a solution.
 > >
 > > In the meantime, no caching (which increases compile time, but only when
 > > errortrace is enabled) is preferable to memory leaks.
 > >
 > > Vincent
 > >
 > >
 > >
 > > At Tue, 31 Dec 2013 12:22:19 -0600,
 > > Robby Findler wrote:
 > > >
 > > > [1  <text/plain; UTF-8 (7bit)>]
 > > > The caching is definitely less aggressive than it was before. I can't
 > > > really look into this until later tonight but we may need to expose the
 > > > cache to the clients if there is not enough caching happening now.
 > > >
 > > > Robby
 > > >
 > > > On Tuesday, December 31, 2013, Vincent St-Amour wrote:
 > > >
 > > > > Here are the results:
 > > > > http://www.ccs.neu.edu/home/stamourv/errortrace-slowdown2.pdf
 > > > >
 > > > > "errortrace-old" is before Robby's fix, and "errortrace-new" is
 > after.
 > > > >
 > > > > Looks like there's a problem with
 > > > > `redex/examples/racket-machine/impl-exec.rkt'.
 > > > > After Robby's fix, the overhead from errortrace is similar to what
 > it was
 > > > > before
 > > > > I fixed a bug in caching, which suggests that caching may now be
 > broken.
 > > > >
 > > > > I'm re-running the benchmarks to get more samples, just to make sure.
 > > > >
 > > > > Vincent
 > > > >
 > > > >
 > > > >
 > > > > At Tue, 31 Dec 2013 11:30:35 -0500,
 > > > > Vincent St-Amour wrote:
 > > > > >
 > > > > > I'm currently running the benchmark suite. I'll report once it's
 > done.
 > > > > >
 > > > > > Vincent
 > > > > >
 > > > > >
 > > > > > At Tue, 31 Dec 2013 11:26:53 -0500,
 > > > > > Sam Tobin-Hochstadt wrote:
 > > > > > >
 > > > > > > [1  <text/plain; UTF-8 (7bit)>]
 > > > > > > Vincent has a benchmark suite for our changes to errortrace,
 > which we
 > > > > > > should run before declaring this fixed.
 > > > > > >
 > > > > > > My only concern for this is if we're dereferencing a parameter
 > in a
 > > > > loop.
 > > > > > >
 > > > > > > Sam, still traveling
 > > > > > > On Dec 31, 2013 9:18 AM, "Robby Findler" <
 > robby@eecs.northwestern.edu<javascript:;>
 > > > > >
 > > > > > > wrote:
 > > > > > >
 > > > > > > > Well, it shouldn't be hard to find a program that is slow
 > without the
 > > > > > > > cache, fast before my push and then check to make sure it is
 > still
 > > > > fast
 > > > > > > > afterwards.
 > > > > > > >
 > > > > > > > I'll try that this afternoon if no one beats me to it.
 > > > > > > >
 > > > > > > > Robby
 > > > > > > >
 > > > > > > >
 > > > > > > > On Tue, Dec 31, 2013 at 8:47 AM, Matthias Felleisen <
 > > > > matthias@ccs.neu.edu <javascript:;>>wrote:
 > > > > > > >
 > > > > > > >>
 > > > > > > >> Sam is traveling.
 > > > > > > >>
 > > > > > > >> Vincent and Sam jointly worked on this thing for the new
 > statistical
 > > > > > > >> profiler from what I understand. Vincent is already using the
 > thing
 > > > > to
 > > > > > > >> build more stuff. I'll talk to him when he gets in.
 > > > > > > >>
 > > > > > > >> -- Matthias
 > > > > > > >>
 > > > > > > >>
 > > > > > > >>
 > > > > > > >>
 > > > > > > >> On Dec 31, 2013, at 8:21 AM, Robby Findler <
 > > > > robby@eecs.northwestern.edu <javascript:;>>
 > > > > > > >> wrote:
 > > > > > > >>
 > > > > > > >> > Okay, I've pushed a commit that makes the leak go away, but
 > I
 > > > > believe
 > > > > > > >> that Sam has some way to test if the cache is still being
 > > > > effective. Sam:
 > > > > > > >> can you check into that, please? I tried to preserve the
 > usefulness
 > > > > of the
 > > > > > > >> cache, but I'm not positive I did it right....
 > > > > > > >> >
 > > > > > > >> > Thanks,
 > > > > > > >> > Robby
 > > > > > > >> >
 > > > > > > >>
 > > > > > > >>
 > > > > > > >
 > > > > > > [2  <text/html; UTF-8 (quoted-printable)>]
 > > > > > >
 > > > >
 > > > [2  <text/html; UTF-8 (quoted-printable)>]
 > > >
 >
 
 --047d7bd6afcc92f67f04eedb5359
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 <div dir=3D"ltr">Thanks, Vincent.<div><br></div><div>Lets take it for the r=
 elease, assuming one of the other release managers okays it.</div><div><br>=
 </div><div>Robby</div></div><div class=3D"gmail_extra"><br><br><div class=
 =3D"gmail_quote">
 On Tue, Dec 31, 2013 at 3:23 PM, Vincent St-Amour <span dir=3D"ltr">&lt;<a =
 href=3D"mailto:stamourv@ccs.neu.edu" target=3D"_blank">stamourv@ccs.neu.edu=
 </a>&gt;</span> wrote:<br><blockquote class=3D"gmail_quote" style=3D"margin=
 :0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">
 It looks like most of the extra overhead I saw was a measurement error<br>
 on my part. Long story short, the `errortrace-new&#39; version was sometime=
 s<br>
 compiling extra files, while the `errortrace-old&#39; version was not.<br>
 <br>
 New results: <a href=3D"http://www.ccs.neu.edu/home/stamourv/errortrace-slo=
 wdown4.pdf" target=3D"_blank">http://www.ccs.neu.edu/home/stamourv/errortra=
 ce-slowdown4.pdf</a><br>
 <br>
 Conclusion: Robby&#39;s fix does not cause significant slowdowns. Sometimes=
 <br>
 it&#39;s a bit slower, sometimes it&#39;s a bit faster.<br>
 <br>
 <br>
 Vincent<br>
 <br>
 <br>
 <br>
 <br>
 At Tue, 31 Dec 2013 13:33:25 -0500,<br>
 <div class=3D"HOEnZb"><div class=3D"h5">Vincent St-Amour wrote:<br>
 &gt;<br>
 &gt; I&#39;m currently looking into a solution.<br>
 &gt;<br>
 &gt; In the meantime, no caching (which increases compile time, but only wh=
 en<br>
 &gt; errortrace is enabled) is preferable to memory leaks.<br>
 &gt;<br>
 &gt; Vincent<br>
 &gt;<br>
 &gt;<br>
 &gt;<br>
 &gt; At Tue, 31 Dec 2013 12:22:19 -0600,<br>
 &gt; Robby Findler wrote:<br>
 &gt; &gt;<br>
 &gt; &gt; [1 =C2=A0&lt;text/plain; UTF-8 (7bit)&gt;]<br>
 &gt; &gt; The caching is definitely less aggressive than it was before. I c=
 an&#39;t<br>
 &gt; &gt; really look into this until later tonight but we may need to expo=
 se the<br>
 &gt; &gt; cache to the clients if there is not enough caching happening now=
 .<br>
 &gt; &gt;<br>
 &gt; &gt; Robby<br>
 &gt; &gt;<br>
 &gt; &gt; On Tuesday, December 31, 2013, Vincent St-Amour wrote:<br>
 &gt; &gt;<br>
 &gt; &gt; &gt; Here are the results:<br>
 &gt; &gt; &gt; <a href=3D"http://www.ccs.neu.edu/home/stamourv/errortrace-s=
 lowdown2.pdf" target=3D"_blank">http://www.ccs.neu.edu/home/stamourv/errort=
 race-slowdown2.pdf</a><br>
 &gt; &gt; &gt;<br>
 &gt; &gt; &gt; &quot;errortrace-old&quot; is before Robby&#39;s fix, and &q=
 uot;errortrace-new&quot; is after.<br>
 &gt; &gt; &gt;<br>
 &gt; &gt; &gt; Looks like there&#39;s a problem with<br>
 &gt; &gt; &gt; `redex/examples/racket-machine/impl-exec.rkt&#39;.<br>
 &gt; &gt; &gt; After Robby&#39;s fix, the overhead from errortrace is simil=
 ar to what it was<br>
 &gt; &gt; &gt; before<br>
 &gt; &gt; &gt; I fixed a bug in caching, which suggests that caching may no=
 w be broken.<br>
 &gt; &gt; &gt;<br>
 &gt; &gt; &gt; I&#39;m re-running the benchmarks to get more samples, just =
 to make sure.<br>
 &gt; &gt; &gt;<br>
 &gt; &gt; &gt; Vincent<br>
 &gt; &gt; &gt;<br>
 &gt; &gt; &gt;<br>
 &gt; &gt; &gt;<br>
 &gt; &gt; &gt; At Tue, 31 Dec 2013 11:30:35 -0500,<br>
 &gt; &gt; &gt; Vincent St-Amour wrote:<br>
 &gt; &gt; &gt; &gt;<br>
 &gt; &gt; &gt; &gt; I&#39;m currently running the benchmark suite. I&#39;ll=
  report once it&#39;s done.<br>
 &gt; &gt; &gt; &gt;<br>
 &gt; &gt; &gt; &gt; Vincent<br>
 &gt; &gt; &gt; &gt;<br>
 &gt; &gt; &gt; &gt;<br>
 &gt; &gt; &gt; &gt; At Tue, 31 Dec 2013 11:26:53 -0500,<br>
 &gt; &gt; &gt; &gt; Sam Tobin-Hochstadt wrote:<br>
 &gt; &gt; &gt; &gt; &gt;<br>
 &gt; &gt; &gt; &gt; &gt; [1 =C2=A0&lt;text/plain; UTF-8 (7bit)&gt;]<br>
 &gt; &gt; &gt; &gt; &gt; Vincent has a benchmark suite for our changes to e=
 rrortrace, which we<br>
 &gt; &gt; &gt; &gt; &gt; should run before declaring this fixed.<br>
 &gt; &gt; &gt; &gt; &gt;<br>
 &gt; &gt; &gt; &gt; &gt; My only concern for this is if we&#39;re dereferen=
 cing a parameter in a<br>
 &gt; &gt; &gt; loop.<br>
 &gt; &gt; &gt; &gt; &gt;<br>
 &gt; &gt; &gt; &gt; &gt; Sam, still traveling<br>
 &gt; &gt; &gt; &gt; &gt; On Dec 31, 2013 9:18 AM, &quot;Robby Findler&quot;=
  &lt;<a href=3D"mailto:robby@eecs.northwestern.edu">robby@eecs.northwestern=
 .edu</a>&lt;javascript:;&gt;<br>
 &gt; &gt; &gt; &gt;<br>
 &gt; &gt; &gt; &gt; &gt; wrote:<br>
 &gt; &gt; &gt; &gt; &gt;<br>
 &gt; &gt; &gt; &gt; &gt; &gt; Well, it shouldn&#39;t be hard to find a prog=
 ram that is slow without the<br>
 &gt; &gt; &gt; &gt; &gt; &gt; cache, fast before my push and then check to =
 make sure it is still<br>
 &gt; &gt; &gt; fast<br>
 &gt; &gt; &gt; &gt; &gt; &gt; afterwards.<br>
 &gt; &gt; &gt; &gt; &gt; &gt;<br>
 &gt; &gt; &gt; &gt; &gt; &gt; I&#39;ll try that this afternoon if no one be=
 ats me to it.<br>
 &gt; &gt; &gt; &gt; &gt; &gt;<br>
 &gt; &gt; &gt; &gt; &gt; &gt; Robby<br>
 &gt; &gt; &gt; &gt; &gt; &gt;<br>
 &gt; &gt; &gt; &gt; &gt; &gt;<br>
 &gt; &gt; &gt; &gt; &gt; &gt; On Tue, Dec 31, 2013 at 8:47 AM, Matthias Fel=
 leisen &lt;<br>
 &gt; &gt; &gt; <a href=3D"mailto:matthias@ccs.neu.edu">matthias@ccs.neu.edu=
 </a> &lt;javascript:;&gt;&gt;wrote:<br>
 &gt; &gt; &gt; &gt; &gt; &gt;<br>
 &gt; &gt; &gt; &gt; &gt; &gt;&gt;<br>
 &gt; &gt; &gt; &gt; &gt; &gt;&gt; Sam is traveling.<br>
 &gt; &gt; &gt; &gt; &gt; &gt;&gt;<br>
 &gt; &gt; &gt; &gt; &gt; &gt;&gt; Vincent and Sam jointly worked on this th=
 ing for the new statistical<br>
 &gt; &gt; &gt; &gt; &gt; &gt;&gt; profiler from what I understand. Vincent =
 is already using the thing<br>
 &gt; &gt; &gt; to<br>
 &gt; &gt; &gt; &gt; &gt; &gt;&gt; build more stuff. I&#39;ll talk to him wh=
 en he gets in.<br>
 &gt; &gt; &gt; &gt; &gt; &gt;&gt;<br>
 &gt; &gt; &gt; &gt; &gt; &gt;&gt; -- Matthias<br>
 &gt; &gt; &gt; &gt; &gt; &gt;&gt;<br>
 &gt; &gt; &gt; &gt; &gt; &gt;&gt;<br>
 &gt; &gt; &gt; &gt; &gt; &gt;&gt;<br>
 &gt; &gt; &gt; &gt; &gt; &gt;&gt;<br>
 &gt; &gt; &gt; &gt; &gt; &gt;&gt; On Dec 31, 2013, at 8:21 AM, Robby Findle=
 r &lt;<br>
 &gt; &gt; &gt; <a href=3D"mailto:robby@eecs.northwestern.edu">robby@eecs.no=
 rthwestern.edu</a> &lt;javascript:;&gt;&gt;<br>
 &gt; &gt; &gt; &gt; &gt; &gt;&gt; wrote:<br>
 &gt; &gt; &gt; &gt; &gt; &gt;&gt;<br>
 &gt; &gt; &gt; &gt; &gt; &gt;&gt; &gt; Okay, I&#39;ve pushed a commit that =
 makes the leak go away, but I<br>
 &gt; &gt; &gt; believe<br>
 &gt; &gt; &gt; &gt; &gt; &gt;&gt; that Sam has some way to test if the cach=
 e is still being<br>
 &gt; &gt; &gt; effective. Sam:<br>
 &gt; &gt; &gt; &gt; &gt; &gt;&gt; can you check into that, please? I tried =
 to preserve the usefulness<br>
 &gt; &gt; &gt; of the<br>
 &gt; &gt; &gt; &gt; &gt; &gt;&gt; cache, but I&#39;m not positive I did it =
 right....<br>
 &gt; &gt; &gt; &gt; &gt; &gt;&gt; &gt;<br>
 &gt; &gt; &gt; &gt; &gt; &gt;&gt; &gt; Thanks,<br>
 &gt; &gt; &gt; &gt; &gt; &gt;&gt; &gt; Robby<br>
 &gt; &gt; &gt; &gt; &gt; &gt;&gt; &gt;<br>
 &gt; &gt; &gt; &gt; &gt; &gt;&gt;<br>
 &gt; &gt; &gt; &gt; &gt; &gt;&gt;<br>
 &gt; &gt; &gt; &gt; &gt; &gt;<br>
 &gt; &gt; &gt; &gt; &gt; [2 =C2=A0&lt;text/html; UTF-8 (quoted-printable)&g=
 t;]<br>
 &gt; &gt; &gt; &gt; &gt;<br>
 &gt; &gt; &gt;<br>
 &gt; &gt; [2 =C2=A0&lt;text/html; UTF-8 (quoted-printable)&gt;]<br>
 &gt; &gt;<br>
 </div></div></blockquote></div><br></div>
 
 --047d7bd6afcc92f67f04eedb5359--
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: Vincent St-Amour <stamourv@ccs.neu.edu>,
        Sam Tobin-Hochstadt <samth@cs.indiana.edu>,
        Matthew Flatt <mflatt@cs.utah.edu>, bugs <bugs@racket-lang.org>,
        Neil Toronto <neil.toronto@gmail.com>,
        bug-notification <bug-notification@racket-lang.org>,
        nobody <nobody@racket-lang.org>
Subject: Re: [racket-bug] all/14264: Running programs in DrRacket leaks memory
Date: Tue, 31 Dec 2013 17:32:29 -0500

 --Apple-Mail=_9C683DE5-D6EC-4941-B3F7-1F8905449755
 Content-Transfer-Encoding: quoted-printable
 Content-Type: text/plain;
 	charset=us-ascii
 
 
 Based on Vincent's results, I think we're safe to accept this commit.=20
 
 
 On Dec 31, 2013, at 4:34 PM, Robby Findler wrote:
 
 > Thanks, Vincent.
 >=20
 > Lets take it for the release, assuming one of the other release =
 managers okays it.
 >=20
 > Robby
 >=20
 >=20
 > On Tue, Dec 31, 2013 at 3:23 PM, Vincent St-Amour =
 <stamourv@ccs.neu.edu> wrote:
 > It looks like most of the extra overhead I saw was a measurement error
 > on my part. Long story short, the `errortrace-new' version was =
 sometimes
 > compiling extra files, while the `errortrace-old' version was not.
 >=20
 > New results: =
 http://www.ccs.neu.edu/home/stamourv/errortrace-slowdown4.pdf
 >=20
 > Conclusion: Robby's fix does not cause significant slowdowns. =
 Sometimes
 > it's a bit slower, sometimes it's a bit faster.
 >=20
 >=20
 > Vincent
 >=20
 >=20
 >=20
 >=20
 > At Tue, 31 Dec 2013 13:33:25 -0500,
 > Vincent St-Amour wrote:
 > >
 > > I'm currently looking into a solution.
 > >
 > > In the meantime, no caching (which increases compile time, but only =
 when
 > > errortrace is enabled) is preferable to memory leaks.
 > >
 > > Vincent
 > >
 > >
 > >
 > > At Tue, 31 Dec 2013 12:22:19 -0600,
 > > Robby Findler wrote:
 > > >
 > > > [1  <text/plain; UTF-8 (7bit)>]
 > > > The caching is definitely less aggressive than it was before. I =
 can't
 > > > really look into this until later tonight but we may need to =
 expose the
 > > > cache to the clients if there is not enough caching happening now.
 > > >
 > > > Robby
 > > >
 > > > On Tuesday, December 31, 2013, Vincent St-Amour wrote:
 > > >
 > > > > Here are the results:
 > > > > http://www.ccs.neu.edu/home/stamourv/errortrace-slowdown2.pdf
 > > > >
 > > > > "errortrace-old" is before Robby's fix, and "errortrace-new" is =
 after.
 > > > >
 > > > > Looks like there's a problem with
 > > > > `redex/examples/racket-machine/impl-exec.rkt'.
 > > > > After Robby's fix, the overhead from errortrace is similar to =
 what it was
 > > > > before
 > > > > I fixed a bug in caching, which suggests that caching may now be =
 broken.
 > > > >
 > > > > I'm re-running the benchmarks to get more samples, just to make =
 sure.
 > > > >
 > > > > Vincent
 > > > >
 > > > >
 > > > >
 > > > > At Tue, 31 Dec 2013 11:30:35 -0500,
 > > > > Vincent St-Amour wrote:
 > > > > >
 > > > > > I'm currently running the benchmark suite. I'll report once =
 it's done.
 > > > > >
 > > > > > Vincent
 > > > > >
 > > > > >
 > > > > > At Tue, 31 Dec 2013 11:26:53 -0500,
 > > > > > Sam Tobin-Hochstadt wrote:
 > > > > > >
 > > > > > > [1  <text/plain; UTF-8 (7bit)>]
 > > > > > > Vincent has a benchmark suite for our changes to errortrace, =
 which we
 > > > > > > should run before declaring this fixed.
 > > > > > >
 > > > > > > My only concern for this is if we're dereferencing a =
 parameter in a
 > > > > loop.
 > > > > > >
 > > > > > > Sam, still traveling
 > > > > > > On Dec 31, 2013 9:18 AM, "Robby Findler" =
 <robby@eecs.northwestern.edu<javascript:;>
 > > > > >
 > > > > > > wrote:
 > > > > > >
 > > > > > > > Well, it shouldn't be hard to find a program that is slow =
 without the
 > > > > > > > cache, fast before my push and then check to make sure it =
 is still
 > > > > fast
 > > > > > > > afterwards.
 > > > > > > >
 > > > > > > > I'll try that this afternoon if no one beats me to it.
 > > > > > > >
 > > > > > > > Robby
 > > > > > > >
 > > > > > > >
 > > > > > > > On Tue, Dec 31, 2013 at 8:47 AM, Matthias Felleisen <
 > > > > matthias@ccs.neu.edu <javascript:;>>wrote:
 > > > > > > >
 > > > > > > >>
 > > > > > > >> Sam is traveling.
 > > > > > > >>
 > > > > > > >> Vincent and Sam jointly worked on this thing for the new =
 statistical
 > > > > > > >> profiler from what I understand. Vincent is already using =
 the thing
 > > > > to
 > > > > > > >> build more stuff. I'll talk to him when he gets in.
 > > > > > > >>
 > > > > > > >> -- Matthias
 > > > > > > >>
 > > > > > > >>
 > > > > > > >>
 > > > > > > >>
 > > > > > > >> On Dec 31, 2013, at 8:21 AM, Robby Findler <
 > > > > robby@eecs.northwestern.edu <javascript:;>>
 > > > > > > >> wrote:
 > > > > > > >>
 > > > > > > >> > Okay, I've pushed a commit that makes the leak go away, =
 but I
 > > > > believe
 > > > > > > >> that Sam has some way to test if the cache is still being
 > > > > effective. Sam:
 > > > > > > >> can you check into that, please? I tried to preserve the =
 usefulness
 > > > > of the
 > > > > > > >> cache, but I'm not positive I did it right....
 > > > > > > >> >
 > > > > > > >> > Thanks,
 > > > > > > >> > Robby
 > > > > > > >> >
 > > > > > > >>
 > > > > > > >>
 > > > > > > >
 > > > > > > [2  <text/html; UTF-8 (quoted-printable)>]
 > > > > > >
 > > > >
 > > > [2  <text/html; UTF-8 (quoted-printable)>]
 > > >
 >=20
 
 
 --Apple-Mail=_9C683DE5-D6EC-4941-B3F7-1F8905449755
 Content-Transfer-Encoding: 7bit
 Content-Type: text/html;
 	charset=us-ascii
 
 <html><head></head><body style="word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space; "><div><br></div><div>Based on Vincent's results, I think we're safe to accept this commit.&nbsp;</div><div><br></div><br><div><div>On Dec 31, 2013, at 4:34 PM, Robby Findler wrote:</div><br class="Apple-interchange-newline"><blockquote type="cite"><div dir="ltr">Thanks, Vincent.<div><br></div><div>Lets take it for the release, assuming one of the other release managers okays it.</div><div><br></div><div>Robby</div></div><div class="gmail_extra"><br><br><div class="gmail_quote">
 On Tue, Dec 31, 2013 at 3:23 PM, Vincent St-Amour <span dir="ltr">&lt;<a href="mailto:stamourv@ccs.neu.edu" target="_blank">stamourv@ccs.neu.edu</a>&gt;</span> wrote:<br><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">
 It looks like most of the extra overhead I saw was a measurement error<br>
 on my part. Long story short, the `errortrace-new' version was sometimes<br>
 compiling extra files, while the `errortrace-old' version was not.<br>
 <br>
 New results: <a href="http://www.ccs.neu.edu/home/stamourv/errortrace-slowdown4.pdf" target="_blank">http://www.ccs.neu.edu/home/stamourv/errortrace-slowdown4.pdf</a><br>
 <br>
 Conclusion: Robby's fix does not cause significant slowdowns. Sometimes<br>
 it's a bit slower, sometimes it's a bit faster.<br>
 <br>
 <br>
 Vincent<br>
 <br>
 <br>
 <br>
 <br>
 At Tue, 31 Dec 2013 13:33:25 -0500,<br>
 <div class="HOEnZb"><div class="h5">Vincent St-Amour wrote:<br>
 &gt;<br>
 &gt; I'm currently looking into a solution.<br>
 &gt;<br>
 &gt; In the meantime, no caching (which increases compile time, but only when<br>
 &gt; errortrace is enabled) is preferable to memory leaks.<br>
 &gt;<br>
 &gt; Vincent<br>
 &gt;<br>
 &gt;<br>
 &gt;<br>
 &gt; At Tue, 31 Dec 2013 12:22:19 -0600,<br>
 &gt; Robby Findler wrote:<br>
 &gt; &gt;<br>
 &gt; &gt; [1 &nbsp;&lt;text/plain; UTF-8 (7bit)&gt;]<br>
 &gt; &gt; The caching is definitely less aggressive than it was before. I can't<br>
 &gt; &gt; really look into this until later tonight but we may need to expose the<br>
 &gt; &gt; cache to the clients if there is not enough caching happening now.<br>
 &gt; &gt;<br>
 &gt; &gt; Robby<br>
 &gt; &gt;<br>
 &gt; &gt; On Tuesday, December 31, 2013, Vincent St-Amour wrote:<br>
 &gt; &gt;<br>
 &gt; &gt; &gt; Here are the results:<br>
 &gt; &gt; &gt; <a href="http://www.ccs.neu.edu/home/stamourv/errortrace-slowdown2.pdf" target="_blank">http://www.ccs.neu.edu/home/stamourv/errortrace-slowdown2.pdf</a><br>
 &gt; &gt; &gt;<br>
 &gt; &gt; &gt; "errortrace-old" is before Robby's fix, and "errortrace-new" is after.<br>
 &gt; &gt; &gt;<br>
 &gt; &gt; &gt; Looks like there's a problem with<br>
 &gt; &gt; &gt; `redex/examples/racket-machine/impl-exec.rkt'.<br>
 &gt; &gt; &gt; After Robby's fix, the overhead from errortrace is similar to what it was<br>
 &gt; &gt; &gt; before<br>
 &gt; &gt; &gt; I fixed a bug in caching, which suggests that caching may now be broken.<br>
 &gt; &gt; &gt;<br>
 &gt; &gt; &gt; I'm re-running the benchmarks to get more samples, just to make sure.<br>
 &gt; &gt; &gt;<br>
 &gt; &gt; &gt; Vincent<br>
 &gt; &gt; &gt;<br>
 &gt; &gt; &gt;<br>
 &gt; &gt; &gt;<br>
 &gt; &gt; &gt; At Tue, 31 Dec 2013 11:30:35 -0500,<br>
 &gt; &gt; &gt; Vincent St-Amour wrote:<br>
 &gt; &gt; &gt; &gt;<br>
 &gt; &gt; &gt; &gt; I'm currently running the benchmark suite. I'll report once it's done.<br>
 &gt; &gt; &gt; &gt;<br>
 &gt; &gt; &gt; &gt; Vincent<br>
 &gt; &gt; &gt; &gt;<br>
 &gt; &gt; &gt; &gt;<br>
 &gt; &gt; &gt; &gt; At Tue, 31 Dec 2013 11:26:53 -0500,<br>
 &gt; &gt; &gt; &gt; Sam Tobin-Hochstadt wrote:<br>
 &gt; &gt; &gt; &gt; &gt;<br>
 &gt; &gt; &gt; &gt; &gt; [1 &nbsp;&lt;text/plain; UTF-8 (7bit)&gt;]<br>
 &gt; &gt; &gt; &gt; &gt; Vincent has a benchmark suite for our changes to errortrace, which we<br>
 &gt; &gt; &gt; &gt; &gt; should run before declaring this fixed.<br>
 &gt; &gt; &gt; &gt; &gt;<br>
 &gt; &gt; &gt; &gt; &gt; My only concern for this is if we're dereferencing a parameter in a<br>
 &gt; &gt; &gt; loop.<br>
 &gt; &gt; &gt; &gt; &gt;<br>
 &gt; &gt; &gt; &gt; &gt; Sam, still traveling<br>
 &gt; &gt; &gt; &gt; &gt; On Dec 31, 2013 9:18 AM, "Robby Findler" &lt;<a href="mailto:robby@eecs.northwestern.edu">robby@eecs.northwestern.edu</a>&lt;javascript:;&gt;<br>
 &gt; &gt; &gt; &gt;<br>
 &gt; &gt; &gt; &gt; &gt; wrote:<br>
 &gt; &gt; &gt; &gt; &gt;<br>
 &gt; &gt; &gt; &gt; &gt; &gt; Well, it shouldn't be hard to find a program that is slow without the<br>
 &gt; &gt; &gt; &gt; &gt; &gt; cache, fast before my push and then check to make sure it is still<br>
 &gt; &gt; &gt; fast<br>
 &gt; &gt; &gt; &gt; &gt; &gt; afterwards.<br>
 &gt; &gt; &gt; &gt; &gt; &gt;<br>
 &gt; &gt; &gt; &gt; &gt; &gt; I'll try that this afternoon if no one beats me to it.<br>
 &gt; &gt; &gt; &gt; &gt; &gt;<br>
 &gt; &gt; &gt; &gt; &gt; &gt; Robby<br>
 &gt; &gt; &gt; &gt; &gt; &gt;<br>
 &gt; &gt; &gt; &gt; &gt; &gt;<br>
 &gt; &gt; &gt; &gt; &gt; &gt; On Tue, Dec 31, 2013 at 8:47 AM, Matthias Felleisen &lt;<br>
 &gt; &gt; &gt; <a href="mailto:matthias@ccs.neu.edu">matthias@ccs.neu.edu</a> &lt;javascript:;&gt;&gt;wrote:<br>
 &gt; &gt; &gt; &gt; &gt; &gt;<br>
 &gt; &gt; &gt; &gt; &gt; &gt;&gt;<br>
 &gt; &gt; &gt; &gt; &gt; &gt;&gt; Sam is traveling.<br>
 &gt; &gt; &gt; &gt; &gt; &gt;&gt;<br>
 &gt; &gt; &gt; &gt; &gt; &gt;&gt; Vincent and Sam jointly worked on this thing for the new statistical<br>
 &gt; &gt; &gt; &gt; &gt; &gt;&gt; profiler from what I understand. Vincent is already using the thing<br>
 &gt; &gt; &gt; to<br>
 &gt; &gt; &gt; &gt; &gt; &gt;&gt; build more stuff. I'll talk to him when he gets in.<br>
 &gt; &gt; &gt; &gt; &gt; &gt;&gt;<br>
 &gt; &gt; &gt; &gt; &gt; &gt;&gt; -- Matthias<br>
 &gt; &gt; &gt; &gt; &gt; &gt;&gt;<br>
 &gt; &gt; &gt; &gt; &gt; &gt;&gt;<br>
 &gt; &gt; &gt; &gt; &gt; &gt;&gt;<br>
 &gt; &gt; &gt; &gt; &gt; &gt;&gt;<br>
 &gt; &gt; &gt; &gt; &gt; &gt;&gt; On Dec 31, 2013, at 8:21 AM, Robby Findler &lt;<br>
 &gt; &gt; &gt; <a href="mailto:robby@eecs.northwestern.edu">robby@eecs.northwestern.edu</a> &lt;javascript:;&gt;&gt;<br>
 &gt; &gt; &gt; &gt; &gt; &gt;&gt; wrote:<br>
 &gt; &gt; &gt; &gt; &gt; &gt;&gt;<br>
 &gt; &gt; &gt; &gt; &gt; &gt;&gt; &gt; Okay, I've pushed a commit that makes the leak go away, but I<br>
 &gt; &gt; &gt; believe<br>
 &gt; &gt; &gt; &gt; &gt; &gt;&gt; that Sam has some way to test if the cache is still being<br>
 &gt; &gt; &gt; effective. Sam:<br>
 &gt; &gt; &gt; &gt; &gt; &gt;&gt; can you check into that, please? I tried to preserve the usefulness<br>
 &gt; &gt; &gt; of the<br>
 &gt; &gt; &gt; &gt; &gt; &gt;&gt; cache, but I'm not positive I did it right....<br>
 &gt; &gt; &gt; &gt; &gt; &gt;&gt; &gt;<br>
 &gt; &gt; &gt; &gt; &gt; &gt;&gt; &gt; Thanks,<br>
 &gt; &gt; &gt; &gt; &gt; &gt;&gt; &gt; Robby<br>
 &gt; &gt; &gt; &gt; &gt; &gt;&gt; &gt;<br>
 &gt; &gt; &gt; &gt; &gt; &gt;&gt;<br>
 &gt; &gt; &gt; &gt; &gt; &gt;&gt;<br>
 &gt; &gt; &gt; &gt; &gt; &gt;<br>
 &gt; &gt; &gt; &gt; &gt; [2 &nbsp;&lt;text/html; UTF-8 (quoted-printable)&gt;]<br>
 &gt; &gt; &gt; &gt; &gt;<br>
 &gt; &gt; &gt;<br>
 &gt; &gt; [2 &nbsp;&lt;text/html; UTF-8 (quoted-printable)&gt;]<br>
 &gt; &gt;<br>
 </div></div></blockquote></div><br></div>
 </blockquote></div><br></body></html>
 --Apple-Mail=_9C683DE5-D6EC-4941-B3F7-1F8905449755--
