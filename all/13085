From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Fri Aug 31 01:57:19 2012
Received: from mail-iy0-f172.google.com (mail-iy0-f172.google.com [209.85.210.172])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id q7V5vG2d025884
	for <bugs@bugs.plt-scheme.org>; Fri, 31 Aug 2012 01:57:16 -0400
Message-Id: <201208310557.q7V5vDk8025878@champlain.ccs.neu.edu>
Date: Fri, 31 Aug 2012 01:57:13 -0400
From: asumu@ccs.neu.edu
To: bugs@racket-lang.org
Subject: Cannot remove continuation barrier using call/cc

>Number:         13085
>Category:       all
>Synopsis:       Cannot remove continuation barrier using call/cc
>Class:          sw-bug
>Responsible:    asumu
>Notify-List:    eric.n.dobson@gmail.com
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Fri Aug 31 02:00:01 -0400 2012
>Closed-Date:    Fri Nov 02 18:51:33 -0400 2012
>Last-Modified:  Fri Nov 02 18:51:33 -0400 2012
>Originator:     Asumu Takikawa
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.3.0.20--2012-08-23(edd2035f/d)
>Environment:
unix "Linux howl 3.2.0-3-amd64 #1 SMP Thu Jun 28 09:07:26 UTC 2012 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 581645584
Links: (links) = ("drracket-vim-tool"); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()


Collections:
("/home/asumu/.racket/5.3.0.20/collects"
 (non-existent-path))
("/home/asumu/plt/current/collects"
 ("typed" "rnrs" "plot" "version" "frtime" "combinator-parser" "compiler" "framework" "honu" "gui-debugger" "launcher" "srfi" "drscheme" "2htdp" "ffi" "datalog" "plai" "racklog" "compatibility" "tex2page" "scheme" "config" "profile" "algol60" "texpict" "handin-server" "dynext" "errortrace" "db" "mzlib" "make" "file" "sgl" "xrepl" "syntax" "slatex" "browser" "macro-debugger" "xml" "data" "at-exp" "trace" "r6rs" "syntax-color" "web-server" "graphics" "teachpack" "defaults" "racket" "lang" "openssl" "r5rs" "redex" "unstable" "deinprogramm" "mzcom" ".gitignore" "mred" "icons" "htdp" "drracket" "html" "readline" "test-engine" "mysterx" "typed-scheme" "reader" "repo-time-stamp" "handin-client" "games" "string-constants" "typed-racket" "hierlist" "net" "slideshow" "swindle" "sirmail" "schemeunit" "picturing-programs" "meta" "info-domain" "waterworld" "eopl" "setup" "future-visualizer" "tests" "rackunit" "scriblib" "json" "mrlib" "scribble" "mzscheme" "lazy" "preprocessor" "planet" !
 "images" "help" "guibuilder" "test-box-recovery" "wxme" "s-exp" "raco" "srpersist" "parser-tools" "stepper" "scribblings" "embedded-gui"))

Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((main) (test))))
>Description:
The documentation for continuation barriers seems to suggest that
the removal of a barrier via a control operator is always okay, but
that the addition of a barrier is not allowed. However, the
following snippet seems to be a counterexample:

#lang racket

(define f
  (call-with-continuation-prompt
   (lambda ()
     (call/cc (lambda (k) k)))))

(call-with-continuation-prompt
 (lambda ()
   (call-with-continuation-barrier
    (lambda ()
      (f 5)))))

`f` is an abortive continuation from `call/cc`, which will just
remove the single barrier inside the second prompt. It produces this
error though:

  continuation application: attempt to cross a continuation barrier

Is there another barrier being inserted somehow by this example
that causes it to fail?

The relevant documentation snippet says:

  Specifically, a continuation can be replaced by another only 
  when the replacement does not introduce any continuation
  barriers (but it may remove them).
>How-To-Repeat:
>Fix:
>Audit-Trail:
From: Matthew Flatt <mflatt@cs.utah.edu>
To: asumu@ccs.neu.edu, bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/13085: Cannot remove continuation barrier using call/cc
Date: Fri, 31 Aug 2012 10:51:01 -0600

 I think the solution here is to fix the documentation. In the
 implementation, a barrier can be removed only though a jump to a
 continuation that is a tail of the current continuation.
 
 At Fri, 31 Aug 2012 02:00:01 -0400, asumu@ccs.neu.edu wrote:
 > A new problem report is waiting at
 >   http://bugs.racket-lang.org/query/?cmd=view&pr=13085
 > 
 > Reported by Asumu Takikawa for release: 5.3.0.20--2012-08-23(edd2035f/d)
 > 
 > *** Description:
 > The documentation for continuation barriers seems to suggest that
 > the removal of a barrier via a control operator is always okay, but
 > that the addition of a barrier is not allowed. However, the
 > following snippet seems to be a counterexample:
 > 
 > #lang racket
 > 
 > (define f
 >   (call-with-continuation-prompt
 >    (lambda ()
 >      (call/cc (lambda (k) k)))))
 > 
 > (call-with-continuation-prompt
 >  (lambda ()
 >    (call-with-continuation-barrier
 >     (lambda ()
 >       (f 5)))))
 > 
 > `f` is an abortive continuation from `call/cc`, which will just
 > remove the single barrier inside the second prompt. It produces this
 > error though:
 > 
 >   continuation application: attempt to cross a continuation barrier
 > 
 > Is there another barrier being inserted somehow by this example
 > that causes it to fail?
 > 
 > The relevant documentation snippet says:
 > 
 >   Specifically, a continuation can be replaced by another only 
 >   when the replacement does not introduce any continuation
 >   barriers (but it may remove them).
 > 
 > *** How to repeat:
 > 
 > 
 > *** Environment:
 > unix "Linux howl 3.2.0-3-amd64 #1 SMP Thu Jun 28 09:07:26 UTC 2012 x86_64 
 > GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
 > Human Language: english
 > (current-memory-use) 581645584
 > Links: (links) = ("drracket-vim-tool"); (links #:user? #f) = (); (links 
 > #:root? #t) = (); (links #:user? #f #:root? #t) = ()
 > 
 > 
 > Collections:
 > ("/home/asumu/.racket/5.3.0.20/collects"
 >  (non-existent-path))
 > ("/home/asumu/plt/current/collects"
 >  ("typed" "rnrs" "plot" "version" "frtime" "combinator-parser" "compiler" 
 > "framework" "honu" "gui-debugger" "launcher" "srfi" "drscheme" "2htdp" "ffi" 
 > "datalog" "plai" "racklog" "compatibility" "tex2page" "scheme" "config" 
 > "profile" "algol60" "texpict" "handin-server" "dynext" "errortrace" "db" 
 > "mzlib" "make" "file" "sgl" "xrepl" "syntax" "slatex" "browser" 
 > "macro-debugger" "xml" "data" "at-exp" "trace" "r6rs" "syntax-color" 
 > "web-server" "graphics" "teachpack" "defaults" "racket" "lang" "openssl" 
 > "r5rs" "redex" "unstable" "deinprogramm" "mzcom" ".gitignore" "mred" "icons" 
 > "htdp" "drracket" "html" "readline" "test-engine" "mysterx" "typed-scheme" 
 > "reader" "repo-time-stamp" "handin-client" "games" "string-constants" 
 > "typed-racket" "hierlist" "net" "slideshow" "swindle" "sirmail" "schemeunit" 
 > "picturing-programs" "meta" "info-domain" "waterworld" "eopl" "setup" 
 > "future-visualizer" "tests" "rackunit" "scriblib" "json" "mrlib" "scribble" 
 > "mzscheme" "lazy" "preprocessor" "planet" !
 >  "images" "help" "guibuilder" "test-box-recovery" "wxme" "s-exp" "raco" 
 > "srpersist" "parser-tools" "stepper" "scribblings" "embedded-gui"))
 > 
 > Computer Language: (("Determine language from source") (#(#t print 
 > mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t ((main) 
 > (test))))
Responsible changed from "nobody" to "asumu" by asumu@racket-lang.org at Fri, 02 Nov 2012 18:51:33 -0400
Reason>>> A commit by asumu@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/27aa999446
State changed from "open" to "closed" by asumu@racket-lang.org at Fri, 02 Nov 2012 18:51:33 -0400
Reason>>> A commit by asumu@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/27aa999446
