From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Fri Oct  5 17:59:08 2012
Received: from mail-ie0-f172.google.com (mail-ie0-f172.google.com [209.85.223.172])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id q95Lx4C0028234
	for <bugs@bugs.plt-scheme.org>; Fri, 5 Oct 2012 17:59:04 -0400
Message-Id: <201210052159.q95Lx1LC028224@champlain.ccs.neu.edu>
Date: Fri, 5 Oct 2012 17:59:01 -0400
From: matthias@ccs.neu.edu
To: bugs@racket-lang.org
Subject: drracket renaming with submodules is faulty

>Number:         13167
>Category:       all
>Synopsis:       drracket renaming with submodules is faulty
>Class:          sw-bug
>Responsible:    nobody
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Fri Oct 05 18:00:01 -0400 2012
>Closed-Date:    Wed Jul 29 19:55:10 -0400 2015
>Last-Modified:  Wed Jul 29 19:55:10 -0400 2015
>Originator:     matthias
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.3.0.24--2012-10-05(1d880254/d)
>Environment:
macosx "Darwin antarctica.ccs.neu.edu 11.4.2 Darwin Kernel Version 11.4.2: Thu Aug 23 16:25:48 PDT 2012; root:xnu-1699.32.7~1/RELEASE_X86_64 x86_64" (x86_64-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 505553240
Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()


Collections:
("/Users/matthias/0Unison/collects/"
 (".DS_Store" "compiled" "date" "finance" "info-domain" "info.ss" "pdf.ss~" "session" "short" "testing" "tll-collects" "utils" "web"))
("/Users/matthias/Library/Racket/5.3.0.24/collects"
 (non-existent-path))
("/Users/matthias/plt/collects"
 (".gitignore" "2htdp" "algol60" "at-exp" "browser" "combinator-parser" "compatibility" "compiler" "config" "data" "datalog" "db" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "future-visualizer" "games" "graphics" "gui-debugger" "handin-client" "handin-server" "help" "hierlist" "honu" "htdp" "html" "icons" "images" "info-domain" "json" "lang" "launcher" "lazy" "macro-debugger" "make" "meta" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "picturing-programs" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "redex" "repo-time-stamp" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "sirmail" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tests" "tex2page" "texpict" "t!
 race" "typed" "typed-racket" "typed-scheme" "unstable" "version" "web-server" "wxme" "xml" "xrepl"))

Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket" #t #t ((main) (test))))
>Description:
>How-To-Repeat:
Take this program: 

#lang racket

(define x 29)

(displayln (+ x 2))

(module+ 
 test
 (define x 10) ;; <-- second 
 
 (displayln x))

Live CS 'blesses' this program and you can rename the second definition of x to, say, y. 

What happens is that BOTH (define x ...) get renamed and all occurrences of x, too. 

(When run, the program prints 31 and 10.) 
>Fix:
>Audit-Trail:
From: Robby Findler <robby@eecs.northwestern.edu>
To: matthias@ccs.neu.edu, bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/13167: drracket renaming with submodules is faulty
Date: Fri, 5 Oct 2012 19:51:34 -0500

 On Fri, Oct 5, 2012 at 5:00 PM,  <matthias@ccs.neu.edu> wrote:
 > A new problem report is waiting at
 >   http://bugs.racket-lang.org/query/?cmd=view&pr=13167
 >
 
 Check Syntax is doing what the program below is doing and finding out
 that the two 'x's are the same 'x'. Not sure if that's wrong on CS's
 part or the expander's part.
 
 #lang racket
 
 (define port (open-input-string #<<--
 #lang racket
 (define x 29)
 (module+ test
   (define x 10)
   x)
 --
   ))
 
 (port-count-lines! port)
 
 (define stx
   (parameterize ([current-namespace (make-base-namespace)])
     (expand
      (parameterize ([read-accept-reader #t])
        (read-syntax "tmp.rkt" port)))))
 
 (syntax-case stx ()
   [(_module _tmp _racket
             (_#%module-begin
              (_define-values (x) _twenty-nine)
              (_module* _test _f
                        (_#%module-begin2 (_define-values2 (x2) _ten)
                                          . whatever))))
    (free-identifier=? #'x #'x2)])
 ;; => #t
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/13167: drracket renaming with submodules is faulty
Date: Sat, 6 Oct 2012 09:10:00 -0400

 I assume this question is for Matthew. 
 
 I think that the program should blow up because x is defined twice in the same scope. 
 
 
 On Oct 5, 2012, at 8:51 PM, Robby Findler wrote:
 
 > On Fri, Oct 5, 2012 at 5:00 PM,  <matthias@ccs.neu.edu> wrote:
 >> A new problem report is waiting at
 >>  http://bugs.racket-lang.org/query/?cmd=view&pr=13167
 >> 
 > 
 > Check Syntax is doing what the program below is doing and finding out
 > that the two 'x's are the same 'x'. Not sure if that's wrong on CS's
 > part or the expander's part.
 > 
 > #lang racket
 > 
 > (define port (open-input-string #<<--
 > #lang racket
 > (define x 29)
 > (module+ test
 >  (define x 10)
 >  x)
 > --
 >  ))
 > 
 > (port-count-lines! port)
 > 
 > (define stx
 >  (parameterize ([current-namespace (make-base-namespace)])
 >    (expand
 >     (parameterize ([read-accept-reader #t])
 >       (read-syntax "tmp.rkt" port)))))
 > 
 > (syntax-case stx ()
 >  [(_module _tmp _racket
 >            (_#%module-begin
 >             (_define-values (x) _twenty-nine)
 >             (_module* _test _f
 >                       (_#%module-begin2 (_define-values2 (x2) _ten)
 >                                         . whatever))))
 >   (free-identifier=? #'x #'x2)])
 > ;; => #t
 
 
From: Matthew Flatt <mflatt@cs.utah.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: Robby Findler <robby@eecs.northwestern.edu>, bugs@racket-lang.org,
        nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/13167: drracket renaming with submodules is faulty
Date: Sat, 6 Oct 2012 07:18:07 -0600

 I think the program is fine --- a submodule creates a nested scope ---
 and the Check-Syntax problem reflects a weakness in the implementation
 of syntax objects that I currently plan to address by rewriting the
 macro expander.
 
 At Sat, 6 Oct 2012 09:10:00 -0400, Matthias Felleisen wrote:
 > 
 > I assume this question is for Matthew. 
 > 
 > I think that the program should blow up because x is defined twice in the same 
 > scope. 
 > 
 > 
 > On Oct 5, 2012, at 8:51 PM, Robby Findler wrote:
 > 
 > > On Fri, Oct 5, 2012 at 5:00 PM,  <matthias@ccs.neu.edu> wrote:
 > >> A new problem report is waiting at
 > >>  http://bugs.racket-lang.org/query/?cmd=view&pr=13167
 > >> 
 > > 
 > > Check Syntax is doing what the program below is doing and finding out
 > > that the two 'x's are the same 'x'. Not sure if that's wrong on CS's
 > > part or the expander's part.
 > > 
 > > #lang racket
 > > 
 > > (define port (open-input-string #<<--
 > > #lang racket
 > > (define x 29)
 > > (module+ test
 > >  (define x 10)
 > >  x)
 > > --
 > >  ))
 > > 
 > > (port-count-lines! port)
 > > 
 > > (define stx
 > >  (parameterize ([current-namespace (make-base-namespace)])
 > >    (expand
 > >     (parameterize ([read-accept-reader #t])
 > >       (read-syntax "tmp.rkt" port)))))
 > > 
 > > (syntax-case stx ()
 > >  [(_module _tmp _racket
 > >            (_#%module-begin
 > >             (_define-values (x) _twenty-nine)
 > >             (_module* _test _f
 > >                       (_#%module-begin2 (_define-values2 (x2) _ten)
 > >                                         . whatever))))
 > >   (free-identifier=? #'x #'x2)])
 > > ;; => #t
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: Robby Findler <robby@eecs.northwestern.edu>, bugs@racket-lang.org,
        nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/13167: drracket renaming with submodules is faulty
Date: Sat, 6 Oct 2012 09:19:16 -0400

 On Oct 6, 2012, at 9:18 AM, Matthew Flatt wrote:
 
 > I currently plan to address by rewriting the macro expander.
 
 Okay ... Wow. Is it a bug in the expander or really just a weakness? 
 
From: Matthew Flatt <mflatt@cs.utah.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: Robby Findler <robby@eecs.northwestern.edu>, bugs@racket-lang.org,
        nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/13167: drracket renaming with submodules is faulty
Date: Sat, 6 Oct 2012 07:34:28 -0600

 At Sat, 6 Oct 2012 09:19:16 -0400, Matthias Felleisen wrote:
 > 
 > On Oct 6, 2012, at 9:18 AM, Matthew Flatt wrote:
 > 
 > > I currently plan to address by rewriting the macro expander.
 > 
 > Okay ... Wow. Is it a bug in the expander or really just a weakness? 
 
 It's a bug, but one where the relevant data structure has gotten so
 complicated that bugs like this are more and more difficult to fix.
 

State changed from "open" to "closed" by samth at Wed, 29 Jul 2015 19:55:10 -0400
Reason>>> fixed (by the new expander)

