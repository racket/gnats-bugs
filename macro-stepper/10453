From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Fri Sep 11 16:08:18 2009
Received: from mail-yx0-f172.google.com (mail-yx0-f172.google.com [209.85.210.172])
	by champlain.ccs.neu.edu (8.14.2/8.14.2) with ESMTP id n8BK8Dss017456
	for <bugs@bugs.plt-scheme.org>; Fri, 11 Sep 2009 16:08:13 -0400
Message-Id: <200909112008.n8BK8BsZ017450@champlain.ccs.neu.edu>
Date: Fri, 11 Sep 2009 16:08:11 -0400
From: pnkfelix@ccs.neu.edu
To: bugs@plt-scheme.org
Subject: macro stepper hides too much on toplevel expansion

>Number:         10453
>Category:       macro-stepper
>Synopsis:       macro stepper hides too much on toplevel expansion
>Class:          sw-bug
>Responsible:    ryanc
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Fri Sep 11 16:12:01 -0400 2009
>Last-Modified:  Fri Sep 03 21:36:13 -0400 2010
>Originator:     Felix Klock
>Organization:
plt
>Submitter-Id:   unknown
>Release:        4.1.5
>Environment:
macosx "Darwin Chimaera.local 9.8.0 Darwin Kernel Version 9.8.0: Wed Jul 15 16:55:01 PDT 2009; root:xnu-1228.15.4~1/RELEASE_I386 i386 i386" (i386-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 126102952

Collections:
(("/Users/pnkfelix/Library/PLT Scheme/4.1.5/collects" non-existent-path) ("/Applications/PLT Scheme v4.1.5/collects" "2htdp" "afm" "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "defaults" "deinprogramm" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "help" "hierlist" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profj" "r5rs" "r6rs" "readline" "redex" "rnrs" "s-exp" "scheme" "scribble" "scribblings" "scriblib" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "stxclass" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tex2page" "texpict" "trace" "typed" "typed-scheme" "version" "web-server" "wxme" "xml"))
Computer Language: (("Module") (#(#t write repeating-decimal-e #f #t debug) (default) #() "#lang scheme\n" #t))
>Description:
In the process of writing some code to show off the 
macro stepper, I encountered the following problem:

When macro stepping this code:

#lang scheme
(define-syntax ds (syntax-rules () ((_ ID DEF) (define-syntax ID DEF))))
(ds a (syntax-rules ()  ((_) (begin (ds b (syntax-rules () ((_) 1)))
                                    (b)))))

(a)

... I end up at this final form:

(module page scheme
  (define-syntax ds (syntax-rules () ((_ ID DEF) (define-syntax ID DEF))))
  (define-syntax a (syntax-rules () ((_) (begin (ds b (syntax-rules () ((_) 1))) (b)))))
  (begin (ds b (syntax-rules () ((_) 1))) (b)))


Note that the last (b) there has not been expanded into the literal 1.

Ryan and I looked at this and he confirmed that wrapping the (a) in a let binding fixes the problem.  So this is an issue with how macro hiding is interacting with top level stuff.
>How-To-Repeat:
1. Type in:

#lang scheme
(define-syntax ds (syntax-rules () ((_ ID DEF) (define-syntax ID DEF))))
(ds a (syntax-rules ()  ((_) (begin (ds b (syntax-rules () ((_) 1)))
                                    (b)))))

(a)


2. Hit Macro Stepper button

3. Hit End--> button

4. Observe whether it says "(b)))" or "1))" at end 
>Fix:
>Audit-Trail:
From: Felix S Klock II <pnkfelix@ccs.neu.edu>
To: bugs@plt-scheme.org
Cc: 
Subject: Re: [plt-bug] all/10453: macro stepper hides too much on toplevel expansion
Date: Fri, 11 Sep 2009 16:16:50 -0400

 On Sep 11, 2009, at 4:12 PM, bugs@plt-scheme.org wrote:
 
 > Thank you very much for your problem report.
 > It has the internal identification `all/10453'.
 > You can check on the status of your problem report at
 >  http://bugs.plt-scheme.org/query/?cmd=view&pr=10453
 > Assigned to Unclaimed <nobody@plt-scheme.org>.
 
 Also, there are simpler examples that fail; the below does not show  
 any expansion steps at all:
 
 #lang scheme
 (define-syntax a (syntax-rules ()  ((_) 3)))
 
 (begin (a))
 
 

