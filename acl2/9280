From: matthias@ccs.neu.edu
Reply-To: matthias@ccs.neu.edu
To: bugs
Cc:
Subject: interrupting Dracula causes a proof to succeed
X-Send-Pr-Version: gnatsweb-4.00 (1.1)
X-GNATS-Notify:

>Number:         9280
>Category:       acl2
>Synopsis:       interrupting Dracula causes a proof to succeed
>Class:          sw-bug
>Responsible:    cce
>Notify-List:    cce@ccs.neu.edu, matthias@ccs.neu.edu
>Severity:       critical
>Priority:       high
>State:          analyzed
>Confidential:   no
>Arrival-Date:   Thu Apr 03 15:56:19 -0400 2008
>Closed-Date:    
>Last-Modified:  Wed May 14 15:32:54 -0400 2008
>Originator:     cce@ccs.neu.edu
>Organization:
>Submitter-Id:   unknown
>Release:        
>Environment:
>Description:
Do a long-running proof. Click Interrupt proof. Get green highlighting for the thing you wanted to prove.

Here is what ACL2 spit out.


        (CHECK (CONS SOURCE1 SOURCE2) L)).
***********************************************
************ ABORTING from raw Lisp ***********
Error:  Interactive interrupt at #x11C735F0.
***********************************************

If you didn't cause an explicit interrupt (Control-C),
then the root cause may be call of a :program mode
function that has the wrong guard specified, or even no
guard specified (i.e., an implicit guard of t).
See :DOC guards.

To enable breaks into the debugger:
(SET-DEBUGGER-ENABLE T)
Here is the current pstack [see :DOC pstack]:
(REWRITE-ATM SIMPLIFY-CLAUSE WATERFALL)
ACL2 !>(INTERN "|||this-symbol-indicates-that-ACL2-is-done|||"
              "ACL2")

ACL2 !>Abort to ACL2 top-level

ACL2 Version 3.2.  Level 1.  Cbd "/Users/matthias/Unison/ACL2/".
Type :help for help.
Type (good-bye) to quit completely out of ACL2.

ACL2 !>(INTERN "|||this-symbol-indicates-that-ACL2-is-done|||"
              "ACL2")
>How-To-Repeat:
>Fix:
>Audit-Trail:
State changed from "open" to "analyzed" by cce at Wed, 14 May 2008 15:32:54 -0400
Reason>>> The Interrupt Proof button gets all sorts of spurious
results depending on platform, and Dracula's parser for ACL2
output is fragile.  I'll need to work on both to get more
reliable results.  Copying the ACL2 Sedan's tricks will help
a lot.

>Unformatted:
