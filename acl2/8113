From apache@plt-scheme.org Wed Jun 14 10:55:55 2006
Received: from champlain.ccs.neu.edu (champlain.ccs.neu.edu [127.0.0.1])
	by champlain.ccs.neu.edu (8.12.10/8.12.10) with ESMTP id k5EEtqqt025662
	for <bugs@plt-scheme.org>; Wed, 14 Jun 2006 10:55:52 -0400
Message-Id: <200606141455.k5EEtqvi025660@champlain.ccs.neu.edu>
Date: Wed, 14 Jun 2006 10:55:52 -0400
From: page@ou.edu
To: bugs@plt-scheme.org
Subject: block execution of functions until ACL2 admits them

>Number:         8113
>Category:       acl2
>Synopsis:       block execution of functions until ACL2 admits them
>Class:          change-request
>Responsible:    dalev
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Wed Jun 14 11:00:01 -0400 2006
>Last-Modified:  Wed Jun 21 11:01:14 -0400 2006
>Originator:     Rex Page
>Organization:
plt
>Submitter-Id:   unknown
>Release:        301 with ACL2
>Environment:
windows-xp
>Description:
I'm teaching a course in Bogota using DrScheme in ACL2 mode for a course. The problem with students ignoring the requirement for admitting functions to the ACL2 logic before running them is more severe, here, because there is a bit of a language barrier (my Spanish is extremely limited, and some of the students are not proficient in English).

I wonder if it would be feasible to put a lock on functions to prevent running them in the interactions window until after putting them through the ACL2 admission process. This would help students avoid the trap of writing functions that they will not be able to use in ACL2.

I think, now, that this may be even more important, as a practical matter in using ACL2 mode in courses, than solving the problems with modules and control of name visibility, and maybe a lot easier to fix.
>How-To-Repeat:
>Fix:
>Audit-Trail:
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: page@ou.edu, bugs@plt-scheme.org
Cc: Dale Vaillancourt <dalev@ccs.neu.edu>
Subject: Re: all/8113: block execution of functions until ACL2 admits them
Date: Wed, 14 Jun 2006 11:08:35 -0400

 Rex, Dale and I will discuss.
 
 In the meantime, I recommend taking your students thru HtDP parts I and 
 II and VI and possibly III in preparation for ACL2. I bet this will 
 help them understand how to program well in ACL2.
 
 -- Matthias
 
 
 On Jun 14, 2006, at 11:00 AM, page@ou.edu wrote:
 
 > A new problem report is waiting at
 >   http://bugs.plt-scheme.org/query/?cmd=view&pr=8113
 >
 > Reported by Rex Page for release: 301 with ACL2
 >
 > *** Description:
 > I'm teaching a course in Bogota using DrScheme in ACL2 mode for a 
 > course. The problem with students ignoring the requirement for 
 > admitting functions to the ACL2 logic before running them is more 
 > severe, here, because there is a bit of a language barrier (my Spanish 
 > is extremely limited, and some of the students are not proficient in 
 > English).
 >
 > I wonder if it would be feasible to put a lock on functions to prevent 
 > running them in the interactions window until after putting them 
 > through the ACL2 admission process. This would help students avoid the 
 > trap of writing functions that they will not be able to use in ACL2.
 >
 > I think, now, that this may be even more important, as a practical 
 > matter in using ACL2 mode in courses, than solving the problems with 
 > modules and control of name visibility, and maybe a lot easier to fix.
 >
 > *** How to repeat:
 >
 >
 > *** Environment:
 > windows-xp
 >
 


State changed from "open" to "closed" by dalev at Wed, 21 Jun 2006 11:01:14 -0400
Reason>>> Added feature.  

