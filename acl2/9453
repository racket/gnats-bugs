From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Wed Jun  4 13:48:20 2008
Received: from wx-out-0506.google.com (wx-out-0506.google.com [66.249.82.226])
	by champlain.ccs.neu.edu (8.14.2/8.14.2) with ESMTP id m54HmC7I016098
	for <bugs@bugs.plt-scheme.org>; Wed, 4 Jun 2008 13:48:12 -0400
Message-Id: <200806041748.m54Hm7HQ016092@champlain.ccs.neu.edu>
Date: Wed, 4 Jun 2008 13:48:07 -0400
From: page@ou.edu
To: bugs@plt-scheme.org
Subject: can't double-include doublecheck

>Number:         9453
>Category:       acl2
>Synopsis:       can't double-include doublecheck
>Class:          sw-bug
>Responsible:    cce
>Severity:       serious
>Priority:       medium
>State:          analyzed
>Confidential:   no
>Arrival-Date:   Wed Jun 04 13:52:01 -0400 2008
>Closed-Date:    
>Last-Modified:  Wed Jun 04 14:36:01 -0400 2008
>Originator:     Rex Page
>Organization:
plt
>Submitter-Id:   unknown
>Release:        372
>Environment:
windows "Windows NT 5.1 (Build 2600) Service Pack 3" (win32\i386\3m) (get-display-depth) = 32
Docs Installed:
(("C:\\Program Files\\PLT\\doc" "r5rs" "mzscheme" "mred" "help" "tour" "drscheme" "srfi" "mzlib" "misclib" "mrlib" "framework" "foreign" "mzc" "tools" "insidemz" "web-server" "swindle" "plot" "release-notes" "t-y-scheme" "tex2page" "beginning" "beginning-abbr" "intermediate" "intermediate-lambda" "advanced" "teachpack" "teachpack-htdc" "profj-beginner" "profj-intermediate" "profj-intermediate-access" "profj-advanced") (* "C:\\Documents and Settings\\rex\\Application Data\\PLT Scheme\\planet\\300\\372\\cache\\cce\\dracula.plt\\2\\5\\language/acl2-html-docs"))
Human Language: english
(current-memory-use) 163325248

Collections:
(("C:\\Documents and Settings\\rex\\Application Data\\PLT Scheme\\372\\collects" non-existent-path) ("C:\\Program Files\\PLT\\collects" "afm" "algol60" "big" "browser" "combinator-parser" "compiler" "config" "defaults" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "framework" "frtime" "games" "graphics" "help" "hierlist" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "mztake" "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profj" "profjWizard" "r5rs" "readline" "scribble" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "tex2page" "texpict" "trace" "version" "web-server" "wxme" "xml"))
Computer Language: (("Dracula Languages" "Dracula v2.5") (#2("C:\\ACL2-3.3\\bin\\acl2.exe" #f) . #6(#t write mixed-fraction-e #f #t debug)))
>Description:
If you include the dblchk teachpack in a book, then include that book in another book that includes the dblchk teachpack, it breaks.

This seems inconsistent with the usual policy of "confirming includes", plus, it's a little inconvenient if you want to build a build of generators to be imported elsewhere, and you want to check them for sytax or function from the definition file
>How-To-Repeat:
Try to issue an include-book command for this book:
(in-package "ACL2")
(include-book "doublecheck" :dir :teachpacks)
; random sample from uniform distribution on [0,1)
; Note: r > 0 required
;       larger r gives higher resolution
(defgenerator random-U01-rational (r)
  (1 (random-apply / (random-int-between 0 (1- r))
                     (random-int-between 0 r))))
; choose random element of list
(defgenerator random-insert-into-list (xs)
  (1 (random-apply Nth
                   (random-int-between 0 (1- (length xs)))
                   xs)))
; insert new element between element k and element k+1 in xs
(defgenerator random-insert-into-list (k x xs)
  (1 (random-apply append 
                   (random-apply take k xs)
                   (random-apply cons
                                 x 
                                 (random-apply NthCdr k xs)))))
>Fix:
Thanks for the bug report.

Until I can do something about this, the workaround is to arrange files such that doublecheck is included only once.  If file A includes B includes C, put the doublecheck include in C and let that suffice for A and B.  If A includes B and C directly, you'll have to rearrange your files; otherwise I don't know a way for B and C to use doublecheck independently and still work within A.  I will add this explanation (in expanded form) to the Dracula documentation so that users don't have to reinvent it for themselves.

I may fix this in the short term by implementing local events within books, although that may lead to other problems (e.g. interfering with executable content in the doublecheck book).  Detecting ACL2's notion of "redundant events" would also work, but I don't know how to implement that.

In the slightly longer term, Modular ACL2 should not have this kind of problem once it's in a usable state.  In the meantime, sorry for the inconvenience.
>Audit-Trail:
Responsible changed from "nobody" to "cce" by cce at Wed, 04 Jun 2008 14:31:06 -0400
Reason>>> Dracula-related

State changed from "open" to "analyzed" by cce at Wed, 04 Jun 2008 14:31:06 -0400
Reason>>> Dracula does not recognize what ACL2 calls "redundant events".

From: "Carl Eastlund" <cce@plt-scheme.org>
To: cce@plt-scheme.org, bugs@plt-scheme.org, matthias@plt-scheme.org,
        page@ou.edu
Cc: 
Subject: Re: [plt-bug] acl2/9453 can't double-include doublecheck
Date: Wed, 4 Jun 2008 14:32:32 -0400

 Apparently the "workaround" field of the bug report does not get put
 into emails.  Here's what I wrote:
 
 Thanks for the bug report.
 
 Until I can do something about this, the workaround is to arrange
 files such that doublecheck is included only once.  If file A includes
 B includes C, put the doublecheck include in C and let that suffice
 for A and B.  If A includes B and C directly, you'll have to rearrange
 your files; otherwise I don't know a way for B and C to use
 doublecheck independently and still work within A.  I will add this
 explanation (in expanded form) to the Dracula documentation so that
 users don't have to reinvent it for themselves.
 
 I may fix this in the short term by implementing local events within
 books, although that may lead to other problems (e.g. interfering with
 executable content in the doublecheck book).  Detecting ACL2's notion
 of "redundant events" would also work, but I don't know how to
 implement that.
 
 In the slightly longer term, Modular ACL2 should not have this kind of
 problem once it's in a usable state.  In the meantime, sorry for the
 inconvenience.
 
 On Wed, Jun 4, 2008 at 2:31 PM,  <cce@plt-scheme.org> wrote:
 >
 > Responsible changed from "nobody" to "cce" by cce at Wed, 04 Jun 2008 14:31:06 -0400
 > Reason>>> Dracula-related
 >
 > State changed from "open" to "analyzed" by cce at Wed, 04 Jun 2008 14:31:06 -0400
 > Reason>>> Dracula does not recognize what ACL2 calls "redundant events".
 
 -- 
 Carl Eastlund
