From krentel@cs.rice.edu  Thu May 22 15:42:14 1997
Received: from new-world.cs.rice.edu (new-world.cs.rice.edu [128.42.6.103]) by cs.rice.edu (8.8.5/8.7.1) with ESMTP id PAA25018 for <plt-gnats@cs.rice.edu>; Thu, 22 May 1997 15:42:13 -0500 (CDT)
Message-Id: <199705222042.PAA17306@new-world.cs.rice.edu>
Date: Thu, 22 May 1997 15:42:13 -0500 (CDT)
From: "Mark W. Krentel" <krentel@cs.rice.edu>
Reply-To: krentel@cs.rice.edu
To: plt-gnats@cs.rice.edu
Subject: spidey fails to detect delayed errors in primitives
X-Send-Pr-Version: 3.101

>Number:         117
>Category:       mrspidey
>Synopsis:       spidey fails to detect delayed errors in primitives
>Confidential:   no
>Severity:       serious
>Priority:       medium
>Responsible:    cormac
>State:          closed
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Thu May 22 20:45:02 GMT 1997
>Last-Modified:  Mon Jul  7 20:30:52 CDT 1997
>Originator:     Mark W. Krentel
>Organization:
titan
>Release:        unknown
>Environment:
	
freebsd, -x, 49s1.

>Description:
	
Spidey fails to detect errors in primitives that require iteration,
invoking a procedure, etc.  That is, errors that are not apparent
at first glance of the arguments.  I have in mind primitives like 
length, map, build-string, etc.

For example, Spidey at QR4 level sees no checks in:

  (length '(a b . c))
  (map + (list 1 2) (list 1 2 3))
  (build-string 10 (lambda (n) 4))
  (/ 1 0)

These are essentially generalizations of the "index out of bounds"
checks for vector-ref, etc, where you can discover a problem only
by looking at two arguments together.

Note that if I wrote out the implementation of length, map and build-
string, then Spidey would find the error.  That's why I find these 
omissions much more disturbing than vector-ref.  It's a much larger
class of primitives.  And I have to start thinking about the underlying
implementation of the primitives.  At least with vector-ref, it was
a small, tidy package.

Build-string may be fixable.  Spidey reports the value set of (lambda (n) 4)
as num -> num, which is clearly wrong for build-string.

(/ 1 0) is also a little puzzling because Spidey reports the value
set of 0 as the const 0, not the approximation num.

These should at least be mentioned in Spidey's "Restrictions on Source
Programs."

And let's not start a holy war on improper lists.

>How-To-Repeat:
	
>Fix:
	
>Audit-Trail:

From: Shriram Krishnamurthi <shriram@cs.rice.edu>
To: krentel@cs.rice.edu
Cc: matthias@cs.rice.edu, cormac@cs.rice.edu, plt-gnats@cs.rice.edu
Subject: all/117: spidey fails to detect delayed errors in primitives
Date: Thu, 22 May 1997 17:18:59 -0500 (CDT)

 Mark W. Krentel wrote:
 
 > For example, Spidey at QR4 level sees no checks in:
 > 
 >   (length '(a b . c))
 >   (map + (list 1 2) (list 1 2 3))
 >   (build-string 10 (lambda (n) 4))
 >   (/ 1 0)
 > 
 > These are essentially generalizations of the "index out of bounds"
 > checks for vector-ref, etc, where you can discover a problem only
 > by looking at two arguments together.
 
 I don't agree.  These aren't all the same kind of example.
 
 - (length ...)
 
 Spidey should report an error because the type of length is list(X) ->
 int, whereas the argument isn't entirely a list.  (There is no
 question that the list will be traversed in length, unlike something
 like memq or assq, where Spidey _should_ report an error, but the
 program may actually run safely.)
 
 - (map ...)
 
 Since Spidey keeps track of cons'es, it should be able to tell that
 the two lists might not be of the same length.  However, this isn't
 expressible in the type system, so maybe it's not possible to check
 for this case.  You could argue this is akin to vector-ref.
 
 - (build-string ...)
 
 Spidey should flag this.  I don't see the question.  The type is
 
   build-string : int x (int -> char) -> string
 
 and the procedure doesn't have type (int -> char).
 
 - (/ 1 0)
 
 Clearly outside the range of Spidey at present.  This is the only one
 that is clearly akin to vector-ref.
 
 'shriram

From: Matthias Felleisen <matthias@cs.rice.edu>
To: shriram@cs.rice.edu
Cc: krentel@cs.rice.edu, cormac@cs.rice.edu, plt-gnats@cs.rice.edu
Subject: Re: all/117: spidey fails to detect delayed errors in primitives
Date: Thu, 22 May 1997 21:42:37 -0500 (CDT)

 correct: 
 
 1. / and map are okay as they are 
 2. length and build-string should be fixable
 
 -- Matthias

State-Changed-From-To: open-closed
State-Changed-By: cormac
State-Changed-When: Sat Jun 21 14:16:19 1997
State-Changed-Why:


  (length '(a b . c))

Fixed. Spidey didn't parse improper lists correctly (the Zodiac AST changed)

  (map + (list 1 2) (list 1 2 3))

Beyond spideys capabilities.

  (build-string 10 (lambda (n) 4))

Fixed.

  (/ 1 0)

Beyond spideys capabilities.

Responsible-Changed-From-To: krentel->cormac
Responsible-Changed-By: cormac
Responsible-Changed-When: Mon Jul  7 20:30:36 1997
Responsible-Changed-Why:


>Unformatted:
