From nobody@cs.rice.edu  Fri Apr  2 09:23:00 1999
Received: from web.cs.rice.edu (web.cs.rice.edu [128.42.1.163])
	by cs.rice.edu (8.9.0/8.9.0) with ESMTP id JAA10040
	for <plt-gnats@cs.rice.edu>; Fri, 2 Apr 1999 09:23:00 -0600 (CST)
Message-Id: <199904021522.JAA11263@web.cs.rice.edu>
Date: Fri, 2 Apr 1999 09:22:59 -0600 (CST)
From: mflatt@rice.edu
Reply-To: mflatt@rice.edu
To: plt-gnats@cs.rice.edu
Subject: MrSpidey/DrScheme: DrScheme doesn't exit after Spidey window opened 

>Number:         948
>Category:       mrspidey
>Synopsis:       MrSpidey/DrScheme: DrScheme doesn't exit after Spidey window opened
>Confidential:   no
>Severity:       serious
>Priority:       medium
>Responsible:    steck
>State:          closed
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Fri Apr  2 15:30:02 GMT 1999
>Last-Modified:  Mon Apr  5 14:29:42 CDT 1999
>Originator:     Matthew
>Organization:
titan
>Release:        100d3
>Environment:
Linux
>Description:
MrSpidey and DrScheme somehow don't work together on Close vs.
Exit.
>How-To-Repeat:
Start DrScheme
Open a program file (text format)
Click the `Analyze' button
 => Now 3 frames are open
Close each frame by clicking on the close box
 => No close triggers the "sure you want to quit?" dialog
MrEd is still running (with no frames)


>Fix:

>Audit-Trail:

State-Changed-From-To: open-analyzed
State-Changed-By: steck
State-Changed-When: Fri Apr  2 10:47:13 1999
State-Changed-Why:

State-Changed-From-To: analyzed-open
State-Changed-By: steck
State-Changed-When: Fri Apr  2 10:55:25 1999
State-Changed-Why:



From: Paul Steckler <steck@cs.rice.edu>
To: mflatt@rice.edu
Cc: plt-gnats@cs.rice.edu
Subject: Re: all/948: MrSpidey/DrScheme: DrScheme doesn't exit after Spidey window opened
Date: Fri, 2 Apr 1999 10:20:45 -0600 (CST)

 > MrEd is still running (with no frames)
 
 I think MrSpidey may be a red herring here.
 
 After starting up DrScheme 100, choosing File|Close closes
 the window, but the process is still running.  Also, the
 quit confirmation dialog does not appear.
 
 -- Paul

From: Matthew Flatt <mflatt@cs.rice.edu>
To: Paul Steckler <steck@cs.rice.edu>
Cc: robby@cs.rice.edu, plt-gnats@cs.rice.edu
Subject: Re: all/948: MrSpidey/DrScheme: DrScheme doesn't exit after Spidey window opened
Date: Fri, 2 Apr 1999 08:27:47 -0800 (PST)

 Quoting Paul Steckler:
 > > MrEd is still running (with no frames)
 > 
 > I think MrSpidey may be a red herring here.
 > 
 > After starting up DrScheme 100, choosing File|Close closes
 > the window, but the process is still running.  Also, the
 > quit confirmation dialog does not appear.
 
 Hm - that's not my experience under Linux and Windows with the current
 exp-tagged sources. I get the confimation dialog.
 

From: Robert Bruce Findler <robby@cs.rice.edu>
To: Matthew Flatt <mflatt@cs.rice.edu>
Cc: Paul Steckler <steck@cs.rice.edu>, plt-gnats@cs.rice.edu
Subject: Re: all/948: MrSpidey/DrScheme: DrScheme doesn't exit after Spidey 
 window opened
Date: Fri, 02 Apr 1999 10:41:27 -0600

 This may be a problem with the preferences. Please send your preferences
 file.
 
 Thanks,
 Robby
 

From: Robert Bruce Findler <robby@cs.rice.edu>
To: plt-gnats@cs.rice.edu
Cc:  Subject: Re: all/948: MrSpidey/DrScheme: DrScheme doesn't exit after Spidey 
 window opened
Date: Fri, 02 Apr 1999 14:35:10 -0600

 "Paul A. Steckler" wrote:
 
 > > This may be a problem with the preferences. Please send your preferences
 > > file.
 >
 > Here is.
 >
 > ((drscheme:test-suite:file-name "repl-tests.ss")
 >  (framework:windows-mdi #t)
 >  (framework:tabify
 >    ((class lambda)
 >     (recur lambda)
 >     (shared lambda)
 >     (call-with-output-file lambda)
 >     (send* lambda)
 >     (define-some lambda)
 >     (let*-values lambda)
 >     (class-asi* lambda)
 >     (let-values lambda)
 >     (with-input-from-port lambda)
 >     (begin begin)
 >     (let* lambda)
 >     (let-syntax lambda)
 >     (letrec lambda)
 >     (with-output-to-file lambda)
 >     (catch lambda)
 >     (let-struct lambda)
 >     (let/ec lambda)
 >     (compound-unit/sig begin)
 >     (defmacro define)
 >     (letrec-syntax lambda)
 >     (unless lambda)
 >     (let/cc lambda)
 >     (opt-lambda lambda)
 >     (define-schema define)
 >     (syntax-case lambda)
 >     (delay begin)
 >     (class-asi lambda)
 >     (define-syntax define)
 >     (let-signature lambda)
 >     (interface lambda)
 >     (unit begin)
 >     (with-handlers lambda)
 >     (do lambda)
 >     (match lambda)
 >     (define-signature define)
 >     (inherit begin)
 >     (define-values define)
 >     (define define)
 >     (private begin)
 >     (let-enumerate lambda)
 >     (override begin)
 >     (define-macro define)
 >     (public begin)
 >     (let-macro lambda)
 >     (case lambda)
 >     (sequence begin)
 >     (compound-unit begin)
 >     (let lambda)
 >     (local lambda)
 >     (fluid-let lambda)
 >     (letcc lambda)
 >     (begin0 begin)
 >     (with-input-from-file lambda)
 >     (cond begin)
 >     (when lambda)
 >     (with-output-to-port lambda)
 >     (class* lambda)
 >     (lambda lambda)
 >     (parameterize lambda)
 >     (unit/sig lambda)
 >     (call-with-input-file lambda)))
 >  (mred:modern "Default Value")
 >  (framework:print-output-mode standard)
 >  (drscheme:execute-warning-once #f)
 >  (mred:line-offsets #t)
 >  (drscheme:keep-interactions-history #f)
 >  (framework:modern "Default Value")
 >  (mred:autosaving-on? #t)
 >  (st:sdl-tidy #t)
 >  (framework:exit-when-no-frames #f)
 >  (drscheme:config #f)
 >  (st:constraint-simplification-poly none)
 >  (st:numops #f)
 >  (framework:show-periods-in-dirlist #f)
 >  (framework:menu-bindings #t)
 >  (drscheme:open-all-files-in-scheme-mode #t)
 >  (framework:swiss "Default Value")
 >  (framework:line-offsets #t)
 >  (mred:paren-match #t)
 >  (st:const-merge-size 7)
 >  (framework:show-status-line #t)
 >  (st:primitive-types inferred)
 >  (mred:defaultfontsize 12)
 >  (mred:tabify
 >    ((sequence begin)
 >     (class-asi lambda)
 >     (case lambda)
 >     (unit begin)
 >     (define-signature define)
 >     (define define)
 >     (begin begin)
 >     (with-parameterization lambda)
 >     (defmacro define)
 >     (rename-from begin)
 >     (letrec lambda)
 >     (delay begin)
 >     (letrec* lambda)
 >     (share-from begin)
 >     (let* lambda)
 >     (let/cc lambda)
 >     (define-syntax define)
 >     (let-values lambda)
 >     (parameterize lambda)
 >     (public begin)
 >     (define-schema define)
 >     (let/ec lambda)
 >     (private begin)
 >     (call-with-output-file lambda)
 >     (inherit-from begin)
 >     (share begin)
 >     (unit/sig lambda)
 >     (rename begin)
 >     (letrec-syntax lambda)
 >     (define-some lambda)
 >     (with-handlers lambda)
 >     (unless lambda)
 >     (with-output-to-port lambda)
 >     (compound-unit begin)
 >     (call-with-input-file lambda)
 >     (match lambda)
 >     (lambda lambda)
 >     (let-syntax lambda)
 >     (class lambda)
 >     (syntax-case lambda)
 >     (when lambda)
 >     (with-input-from-file lambda)
 >     (letcc lambda)
 >     (begin0 begin)
 >     (let-signature lambda)
 >     (shared lambda)
 >     (let-macro lambda)
 >     (let-struct lambda)
 >     (compound-unit/sig begin)
 >     (with-output-to-file lambda)
 >     (fluid-let lambda)
 >     (class-asi* lambda)
 >     (catch lambda)
 >     (let-enumerate lambda)
 >     (class* lambda)
 >     (recur lambda)
 >     (local lambda)
 >     (let lambda)
 >     (send* lambda)
 >     (with-input-from-port lambda)
 >     (let*-values lambda)
 >     (do lambda)
 >     (inherit begin)
 >     (define-values define)
 >     (interface lambda)
 >     (define-macro define)
 >     (cond begin)
 >     (opt-lambda lambda)))
 >  (mred:show-periods-in-dirlist #f)
 >  (framework:auto-set-wrap? #f)
 >  (st:constants #f)
 >  (st:flow-sensitive #f)
 >  (mred:roman "Default Value")
 >  (mred:default "Default Value")
 >  (st:polymorphism compress)
 >  (st:if-split #t)
 >  (rcs-pathname ("/usr/local/RCS/" "/usr/bin/" "/usr/local/bin/"))
 >  (|mzprizm:unbound variable|
 >    (base base
 >          (0 0 0)
 >          (1.0 1.0 1.0)
 >          #f
 >          base
 >          (255 0 0)
 >          (0.0 0.0 0.0)
 >          0
 >          1.0
 >          base
 >          base
 >          #f
 >          #f
 >          base
 >          base))
 >  (framework:file-dialogs common)
 >  (mred:swiss "Default Value")
 >  (drscheme:setup-dir "/home/comp210/")
 >  (mzprizm:constant
 >    (base base
 >          (0 0 0)
 >          (1.0 1.0 1.0)
 >          #f
 >          base
 >          (0 0 255)
 >          (0.0 0.0 0.0)
 >          0
 >          1.0
 >          base
 >          base
 >          #f
 >          #f
 >          base
 >          base))
 >  (drscheme:settings
 >    ("Beginner"
 >     beginner
 >     #t
 >     #f
 >     #t
 >     #f
 >     #f
 >     #f
 >     #f
 >     #t
 >     #t
 >     #t
 >     #t
 >     #f
 >     #t
 >     #f
 >     constructor-style
 >     #f))
 >  (drscheme:repl-always-active #f)
 >  (|mzprizm:bound variable|
 >    (base base
 >          (0 0 0)
 >          (1.0 1.0 1.0)
 >          #f
 >          base
 >          (0 100 0)
 >          (0.0 0.0 0.0)
 >          0
 >          1.0
 >          base
 >          base
 >          #f
 >          #f
 >          base
 >          base))
 >  (framework:decorative "Default Value")
 >  (mzprizm:primitive
 >    (base base
 >          (0 0 0)
 >          (1.0 1.0 1.0)
 >          #f
 >          base
 >          (0 0 255)
 >          (0.0 0.0 0.0)
 >          0
 >          1.0
 >          base
 >          base
 >          #f
 >          #f
 >          base
 >          base))
 >  (framework:delete-forward? #f)
 >  (drscheme:setup-file "setup.ss")
 >  (mred:console-previous-exprs (("foobar")))
 >  (framework:defaultFontSize 12)
 >  (st:naming-strategy multiple)
 >  (framework:display-line-numbers #t)
 >  (framework:paren-match #t)
 >  (drscheme:user-dir "/home/steck/comp210/")
 >  (mred:auto-set-wrap? #f)
 >  (framework:fixup-parens #t)
 >  (framework:verify-change-format #f)
 >  (drscheme:library-file #f)
 >  (drscheme:hw-dir "/home/comp210/Hw/")
 >  (mred:fixup-parens #t)
 >  (mred:autosave-delay 300)
 >  (mred:highlight-parens #t)
 >  (mred:decorative "Default Value")
 >  (mzprizm:syntax
 >    (base base
 >          (0 0 0)
 >          (1.0 1.0 1.0)
 >          #f
 >          base
 >          (0 0 0)
 >          (0.0 0.0 0.0)
 >          0
 >          1.0
 >          base
 >          base
 >          #f
 >          #f
 >          base
 >          base))
 >  (framework:roman "Default Value")
 >  (st:sdl-fo-ivars #t)
 >  (mred:menu-bindings #t)
 >  (mred:display-line-numbers #t)
 >  (mred:delete-forward? #f)
 >  (mred:print-output-mode 0)
 >  (framework:defaultfontsize 12)
 >  (mred:bookmarks ())
 >  (framework:Modern "Default Value")
 >  (framework:verify-exit #t)
 >  (framework:autosave-delay 300)
 >  (drscheme:wrap-program? #f)
 >  (framework:default "Default Value")
 >  (framework:Swiss "Default Value")
 >  (mred:verify-change-format #f)
 >  (framework:Decorative "Default Value")
 >  (st:sdl-fo type-schemas)
 >  (st:save-za-in source-directory)
 >  (framework:highlight-parens #t)
 >  (mred:verify-exit #t)
 >  (mred:show-status-line #t)
 >  (framework:Roman "Default Value")
 >  (drscheme:use-setup? #f)
 >  (st:expand-output-type #t)
 >  (mred:file-dialogs common)
 >  (mred:script "Default Value")
 >  (framework:Default "Default Value")
 >  (st:sdl-constraint-simplification none)
 >  (drscheme:lab-dir "/home/comp210/Labs/")
 >  (drscheme:test-suite:run-interval 10)
 >  (st:sdl-fo-struct-fields #t)
 >  (framework:autosaving-on? #t))
 >

State-Changed-From-To: open-closed
State-Changed-By: steck
State-Changed-When: Mon Apr  5 14:28:15 1999
State-Changed-Why:
Fixed by edit to Tframe.ss
 
>Unformatted:
