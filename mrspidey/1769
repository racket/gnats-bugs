From matthias@cs.rice.edu  Mon Nov 13 10:48:45 2000
Received: from localhost (jam.rice.edu [192.225.19.51])
	by cs.rice.edu (8.9.0/8.9.0) with ESMTP id KAA25749
	for <plt-gnats>; Mon, 13 Nov 2000 10:48:44 -0600 (CST)
Message-Id: <200011131648.KAA25749@cs.rice.edu>
Date: Mon, 13 Nov 2000 10:48:44 -0600 (CST)
From: matthias@cs.rice.edu
To: plt-gnats@cs.rice.edu
Subject: Spidey is not analyzing set! variables in letrec correctly

>Number:         1769
>Category:       mrspidey
>Synopsis:       Spidey is not analyzing set! variables in letrec correctly
>Confidential:   no
>Severity:       serious
>Priority:       medium
>Responsible:    steck
>State:          closed
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Mon Nov 13 12:00:01 -0500 2000
>Last-Modified:  Sun Mar 28 22:57:00 -0500 2004
>Originator:     matthias
>Release:        103/1d100
>Organization:
titan
>Environment:
unix (i386-linux) (get-display-depth) = 16
Tools: ("CVS" "analysis" "debug" "mail" "syncheck" "unit-bundle" "project-manager" "typeset")
Docs Installed:
("mzc" "icons" "drscheme" "framework" "help" "teachpack" "r5rs" "mzscheme" "mred" "misclib" "tools" "insidemz" "match" "mrspidey")
Collections:
(("/home/matthias/Collects/" ("eopl" "collects-doc.txt" "collects-doc.txt~")) ("/home/matthias/plt/collects/" "non-existant path") ("/home/matthias/Collects/" ("eopl" "collects-doc.txt" "collects-doc.txt~")) ("/home/matthias/plt/collects/" "non-existant path") ("/home/scheme/plt/collects" ("CVS" "afm" "doc" "browser" "defaults" "compiler" "countdwn" "drjava" "drscheme" "drscheme-jr" "dynext" "errortrace" "framework" "games" "graphics" "guibuilder" "help" "hierarchy" "hierlist" "htdp" "guserspce" "icons" "launcher" "make" "mrdemo" "mred" "mrspidey" "mysterx" "mzlib" "mzscheme" "net" "quasiquote" "readline" "slatex" "slibinit" "srpersist" "stepper" "stepper-graphical" "tests" "texpict" "userspce" "xml" "zodiac" "typeset" "setup")))
>Description:
consistent1 should yield #t or (listof str)
See bad inferences!

(define course-tag (type: (str -> str)))
(define course-prereqs (type: (str -> (listof str))))

(define (consistent1 domain)
  (let* ([courses (list "a" "b")]
         [names (map course-tag courses)])
    (letrec (; consistent : course -> boolean
             (consistent (lambda (c) (for-each exists? (course-prereqs c))))
             
             ; not-found : (listof str)
             ; the names/tags of the courses that aren't offered but required 
             (not-found. null)
             
             ; exists? : course -> (listof course)
             (exists? (lambda (c.)
                        (unless (member c names)
                          (set! not-found. (cons c not-found))))))
      (for-each consistent courses)
      (if (null? not-found)
          #t
          not-found.))))
  

>How-To-Repeat:
>Fix:
>Audit-Trail:
State-Changed-From-To: open->closed
State-Changed-By: eli
State-Changed-When: Sun, 28 Mar 2004 22:57:00 -0500
State-Changed-Why:
MrSpidey is dead.



View:
  http://bugs.plt-scheme.org/query/gnatsweb.pl?cmd=view+audit-trail&pr=1769
Edit:
  https://internal.plt-scheme.org/bugs/gnatsweb.pl?cmd=edit&pr=1769&database=default
>Unformatted:
