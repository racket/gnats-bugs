From matthias@cs.rice.edu  Sat Jun 21 16:12:29 1997
Received: from africa.cs.rice.edu (africa.cs.rice.edu [128.42.1.175]) by cs.rice.edu (8.8.5/8.7.1) with ESMTP id QAA25979 for <plt-gnats@cs.rice.edu>; Sat, 21 Jun 1997 16:12:29 -0500 (CDT)
Message-Id: <199706212112.QAA13795@africa.cs.rice.edu>
Date: Sat, 21 Jun 1997 16:12:28 -0500 (CDT)
From: Matthias Felleisen <matthias@cs.rice.edu>
Reply-To: matthias@rice.edu
To: plt-gnats@cs.rice.edu
Subject: spidey introduces check for no good
X-Send-Pr-Version: 3.101

>Number:         194
>Category:       mrspidey
>Synopsis:       spidey introduces check for no good
>Confidential:   no
>Severity:       serious
>Priority:       medium
>Responsible:    cormac
>State:          closed
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Sat Jun 21 21:15:02 GMT 1997
>Last-Modified:  Mon Jul  7 21:39:55 CDT 1997
>Originator:     Matthias Felleisen
>Organization:
titan
>Release:        unknown
>Environment:
	
>Description:
	Analyze this: 

	(define-struct n (succs))

	(define-type tree (MU tree (structure:n (listof tree))))

	(define (for-each-n an-n f)
	  (f (lambda (another-n) (for-each-n another-n f))
	     (n-succs an-n)))

	(define atree (type: tree))

	(: (for-each-n atree for-each) void)

	Spidey high-lights lambda in red, even though it infers that 
	f is for-each and n-succs produces a list of correct type.

	Why can it not conclude the rest? 

>How-To-Repeat:
	this is isolated from a larger file
>Fix:
	
>Audit-Trail:

Responsible-Changed-From-To: krentel->cormac
Responsible-Changed-By: cormac
Responsible-Changed-When: Sun Jun 29 23:20:31 1997
Responsible-Changed-Why:

State-Changed-From-To: open-closed
State-Changed-By: cormac
State-Changed-When: Mon Jul  7 21:37:16 1997
State-Changed-Why:

This is a feature, not a bug :-)

Seriously, for-each is used in a higher-order manner. Spidey cannot
tell at constraint generation time which arity for-each is intended,
ie which of the following types is appropriate:

                         (forall (a)
                           ((a     -> _) (listof a) 
                             -> void))

                         (forall (a b)
                           ((a b   -> _) (listof a) (listof b) 
                             -> void))

                         ...

So Spidey gives for-each its most general type, which allows it to be
applied to any number of lists, and then applies the lambda to an
n-tuple of arguments, on argument from each list. Thus the information
that the lambda is only applied to a sinlge argument is lost, and
hence the lambda is red :-(

>Unformatted:
