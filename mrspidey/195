From matthias@cs.rice.edu  Sat Jun 21 16:40:40 1997
Received: from africa.cs.rice.edu (africa.cs.rice.edu [128.42.1.175]) by cs.rice.edu (8.8.5/8.7.1) with ESMTP id QAA26237 for <plt-gnats@cs.rice.edu>; Sat, 21 Jun 1997 16:40:40 -0500 (CDT)
Message-Id: <199706212140.QAA13859@africa.cs.rice.edu>
Date: Sat, 21 Jun 1997 16:40:39 -0500 (CDT)
From: Matthias Felleisen <matthias@cs.rice.edu>
Reply-To: matthias@rice.edu
To: plt-gnats@cs.rice.edu
Subject: spidey cannot perform polym analysis
X-Send-Pr-Version: 3.101

>Number:         195
>Category:       mrspidey
>Synopsis:       spidey cannot perform polym analysis
>Confidential:   no
>Severity:       serious
>Priority:       medium
>Responsible:    cormac
>State:          closed
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Sat Jun 21 21:45:01 GMT 1997
>Last-Modified:  Mon Jul  7 21:49:57 CDT 1997
>Originator:     Matthias Felleisen
>Organization:
titan
>Release:        unknown
>Environment:
	
>Description:
	see ~/Spidey3
	analyze type-checker.ss
	compare with notes in the file
>How-To-Repeat:
	
>Fix:
	
>Audit-Trail:

Responsible-Changed-From-To: krentel->cormac
Responsible-Changed-By: cormac
Responsible-Changed-When: Sun Jun 29 23:20:54 1997
Responsible-Changed-Why:

State-Changed-From-To: open-closed
State-Changed-By: cormac
State-Changed-When: Mon Jul  7 21:48:57 1997
State-Changed-Why:

(define (type-expr tenv)
  (local ((define type-expr
	    (lambda (expr)
	      (cond
		((symbol? expr) (ass-variable expr tenv))
		((new? expr) (exists-in (new-type expr)))
		((=>? expr) (let ((the-method
				   (type-access expr =>-object =>-method tenv 
						node-methods method-name
						"method does not exists =>"))) 
			      (if (equal?
				   (map field-type (method-args the-method))
				   (map type-expr (=>-args expr)))
				  (exists-in (method-range the-method))
				  (error 'type-expr "bad arg types =>"))))
		((**? expr) (exists-in
			     (field-type 
;; type-access does not produce fields only here
;; but the selector is not marked;; ditto for above
########### I COULD NOT REPEAT THIS. field-type IS RED
			      (type-access expr **-object **-field tenv 
					   node-fields field-name
					   "field does not exist **"))))
		(else ; (as? expr) 
		 (let ((obj-type (type-expr (as-expr expr)))
		       (as-type (as-type expr)))
		   (cond
		     [(<-type as-type obj-type) as-type] ; run-time check required
		     [(<-type obj-type as-type) as-type] ; superfluous, elaborate
		     [else
		      (error 'type-expr "run-time check cannot succeed")]))))))
	  
	  (define (type-access expr object-sel name-sel tenv class-sel e-sel msg)
	    (polymorphic
	     (let* ((obj-type (type-expr (object-sel expr)))
;; this type-expr has no ancestors? Why? polymorphic? 
########### STATIC DEBUGGING DOES NOT WORK INSIDE POLYMORPHIC
		    (the-component 
		     (ass-component obj-type (name-sel expr) class-sel e-sel)))
	       (if the-component the-component (error 'type-expr msg))))))
    type-expr))

>Unformatted:
