From matthias@cs.rice.edu  Mon Jul  7 21:14:03 1997
Received: from africa.cs.rice.edu (africa.cs.rice.edu [128.42.1.175]) by cs.rice.edu (8.8.5/8.7.1) with ESMTP id VAA28159 for <plt-gnats@cs.rice.edu>; Mon, 7 Jul 1997 21:14:02 -0500 (CDT)
Message-Id: <199707080214.VAA06970@africa.cs.rice.edu>
Date: Mon, 7 Jul 1997 21:14:20 -0500 (CDT)
From: Matthias Felleisen <matthias@cs.rice.edu>
Reply-To: matthias@rice.edu
To: plt-gnats@cs.rice.edu
Subject: spidey does not detect struct-access problems
X-Send-Pr-Version: 3.101

>Number:         217
>Category:       mrspidey
>Synopsis:       spidey does not detect struct-access problems
>Confidential:   no
>Severity:       serious
>Priority:       medium
>Responsible:    cormac
>State:          closed
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Tue Jul  8 02:15:02 GMT 1997
>Last-Modified:  Tue Jul  8 12:52:30 CDT 1997
>Originator:     Matthias Felleisen
>Organization:
titan
>Release:        unknown
>Environment:
	
>Description:

  EXAMPLE 1: [This may be fixed according to 156]
	(define-struct cons (first rest))

	(define (sum l r)
	  (cond
	    ((null? l) 0)
	    (else (* (cons-first l r) (sum (cons-rest l) (cons 1 r))))))
	;; Spidey does not mark this first cons-first as faulty, 
	;; even though it is of the wrong arity

	(define-type lnum 
	  (MU lnum (union nil (structure:cons num lnum))))

	(define a (type: lnum))

	(: (sum a null) num)

  EXAMPLE 2: [This is a different kind of bug, but possibly related.]
	(define-struct cons (first rest))

	(define (sum l r)
	  (cond
	    ((null? l) 0)
	    (else (* (cons-first r) (sum (cons-rest l) (cons 1 r))))))
	;; Spidey does not mark this first cons-first as faulty, 
	;; even though it is applied to the wrong kind of structure

	(define-type lnum 
	  (MU lnum (union nil (structure:cons num lnum))))

	(define a (type: lnum))

	(: (sum a null) num)

>How-To-Repeat:
	
>Fix:
	
>Audit-Trail:

Responsible-Changed-From-To: krentel->cormac
Responsible-Changed-By: cormac
Responsible-Changed-When: Tue Jul  8 12:51:17 1997
Responsible-Changed-Why:

State-Changed-From-To: open-closed
State-Changed-By: cormac
State-Changed-When: Tue Jul  8 12:51:20 1997
State-Changed-Why:



  EXAMPLE 1: [This may be fixed according to 156]
	(define-struct cons (first rest))

	(define (sum l r)
	  (cond
	    ((null? l) 0)
	    (else (* (cons-first l r) (sum (cons-rest l) (cons 1 r))))))
	;; Spidey does not mark this first cons-first as faulty, 
	;; even though it is of the wrong arity

	(define-type lnum 
	  (MU lnum (union nil (structure:cons num lnum))))

	(define a (type: lnum))

	(: (sum a null) num)

Was fixed according to 156

  EXAMPLE 2: [This is a different kind of bug, but possibly related.]
	(define-struct cons (first rest))

	(define (sum l r)
	  (cond
	    ((null? l) 0)
	    (else (* (cons-first r) (sum (cons-rest l) (cons 1 r))))))
	;; Spidey does not mark this first cons-first as faulty, 
	;; even though it is applied to the wrong kind of structure

	(define-type lnum 
	  (MU lnum (union nil (structure:cons num lnum))))

	(define a (type: lnum))

	(: (sum a null) num)

Was fixed according to 156

>Unformatted:
