From jja.koot@wolmail.nl  Sat Jun 17 06:09:37 2000
Received: from localhost ([195.240.223.163])
	by cs.rice.edu (8.9.0/8.9.0) with ESMTP id GAA29758
	for <plt-gnats>; Sat, 17 Jun 2000 06:09:33 -0500 (CDT)
Message-Id: <200006171109.GAA29758@cs.rice.edu>
Date: Sat, 17 Jun 2000 06:09:33 -0500 (CDT)
From: jja.koot@wolmail.nl
To: plt-gnats@cs.rice.edu
Subject: "let-macro" in body of "let" does not work

>Number:         1522
>Category:       mcmicmac
>Synopsis:       "let-macro" in body of "let" does not work
>Confidential:   no
>Severity:       non-critical
>Priority:       low
>Responsible:    mflatt
>State:          closed
>Class:          support
>Submitter-Id:   unknown
>Arrival-Date:   Sat Jun 17 11:15:04 GMT 2000
>Closed-Date:    Thu Jan 15 17:14:27 EST 2004
>Last-Modified:  Thu Jan 15 17:14:27 EST 2004
>Originator:     Jacob J. A. Koot
>Release:        101
>Organization:
titan
>Environment:
windows (win32\i386)
Tools: ("stepper" "syncheck" "unit-bundle")
Docs Installed:
("drscheme" "help" "icons" "misclib" "mred" "mzscheme" "r5rs" "teachpack" "mzc")
Collections:
(("C:\\PROGRAM FILES\\PLT\\collects" ("afm" "browser" "cogen" "compiler" "doc" "drscheme" "drscheme-jr" "dynext" "errortrace" "framework" "games" "graphics" "help" "hierlist" "htdp" "icons" "launcher" "make" "mred" "mzlib" "mzscheme" "net" "slibinit" "stepper" "userspce" "xml" "zodiac")))
>Description:
The same let-macro form works properly at
     top level, but wont work in the body of
     a let form.
     Is this intended behaviour or a bug?
     I use the full language.
>How-To-Repeat:
(let-macro a (lambda (x) x) (a 3))
       ==> 3 (correct)
(let () (let-macro (lambda (x) x) (a 3)))
       ==> reference to undefined identifier a
>Fix:

>Release-Note:

>Audit-Trail:

From: Matthias Felleisen <matthias@cs.rice.edu>
To: jja.koot@wolmail.nl
Cc: plt-gnats@cs.rice.edu, steck@cs.rice.edu, steck@cs.rice.edu,
        shriram@cs.rice.edu, mflatt@cs.rice.edu, robby@cs.rice.edu,
        clements@cs.rice.edu, ptg@cs.rice.edu
Subject: Re: all/1522: "let-macro" in body of "let" does not work
Date: Sat, 17 Jun 2000 09:44:56 -0500 (CDT)

 Hi Jacob -- are you the Jacob Koot who gave rise to Koot's banquet in The
 Little Lisper (trade ed)? Good to see that you're still doing Scheme.
 
 If what you send is what you typed, it may just be a typo. You're missing
 an a in 
 
   (let () (let-macro (lambda (x) x) (a 3)))
 
 Type 
 
   (let () (let-macro a (lambda (x) x) (a 3)))
 
 and the result is 3. 
 
 If that's not what you mean, let us know. 
 
 -- Matthias

From: Matthew Flatt <mflatt@cs.utah.edu>
To: matthias@rice.edu
Cc: jja.koot@wolmail.nl, plt-gnats@cs.rice.edu, steck@cs.rice.edu,
        steck@cs.rice.edu, shriram@cs.rice.edu, robby@cs.rice.edu,
        clements@cs.rice.edu, ptg@cs.rice.edu
Subject: Re: all/1522: "let-macro" in body of "let" does not work
Date: Sat, 17 Jun 2000 08:07:53 -0700

 Quoting Matthias Felleisen:
 > Type 
 > 
 >   (let () (let-macro a (lambda (x) x) (a 3)))
 > 
 > and the result is 3. 
 
 Should be, but it isn't in the debugging languages. `let-macro' is
 currently broken when it appears in places where an internal define
 might appear. Even in version 102, so far.
 
 Matthew
 

From: Matthew Flatt <mflatt@cs.utah.edu>
To: shriram@cs.rice.edu, matthias@rice.edu
Cc: jja.koot@wolmail.nl, plt-gnats@cs.rice.edu, steck@cs.rice.edu
Subject: Re: all/1522: "let-macro" in body of "let" does not work
Date: Sat, 17 Jun 2000 10:02:09 -0700

 Quoting Matthias Felleisen:
 > Type 
 > 
 >   (let () (let-macro a (lambda (x) x) (a 3)))
 > 
 > and the result is 3. 
 
 Ok - this is fixed for version 102, now.
 
 I'm fairly certain that I had worked out the problem before, which is
 why I looked at it again. Somehow, back then, I concluded that the
 solution was complex. It's actually trivial.
 
 The solution is to turn off the "in internal define" context flag while
 expanding the `let-macro' body. (The body happens to be another
 internal define context, but it's a different one.)
 
 DrScheme [Jr] now passes the `let-macro' part of the MzScheme test
 suite, except for the embedded `define-macro' (!) part.
 
 Matthew

Responsible-Changed-From-To: steck->shriram
Responsible-Changed-By: shriram
Responsible-Changed-When: Mon Jun 19 12:49:01 2000
Responsible-Changed-Why:

State-Changed-From-To: open-analyzed
State-Changed-By: shriram
State-Changed-When: Mon Jun 19 12:49:09 2000
State-Changed-Why:

 
Responsible-Changed-From-To: shriram->mflatt
Responsible-Changed-By: mflatt
Responsible-Changed-When: Thu Jan 15 17:14:27 2004
Responsible-Changed-Why:
    obs
State-Changed-From-To: analyzed->closed
State-Changed-By: mflatt
State-Changed-When: Thu Jan 15 17:14:27 2004
State-Changed-Why:
    obsolete
>Unformatted:

