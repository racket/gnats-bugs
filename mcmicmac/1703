From ian@cs.rice.edu  Tue Oct 10 11:35:26 2000
Received: from localhost (swba-176-223.rice.edu [128.42.176.223])
	by cs.rice.edu (8.9.0/8.9.0) with ESMTP id LAA16508
	for <plt-gnats>; Tue, 10 Oct 2000 11:35:25 -0500 (CDT)
Message-Id: <200010101635.LAA16508@cs.rice.edu>
Date: Tue, 10 Oct 2000 11:35:25 -0500 (CDT)
From: ian@cs.rice.edu
To: plt-gnats@cs.rice.edu
Subject: error message a bit off when defining a class w/ catch-all initialization args

>Number:         1703
>Category:       mcmicmac
>Synopsis:       error message a bit off when defining a class w/ catch-all initialization args
>Confidential:   no
>Severity:       non-critical
>Priority:       low
>Responsible:    mflatt
>State:          closed
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Tue Oct 10 16:45:06 GMT 2000
>Last-Modified:  Sun May  6 12:28:49 CDT 2001
>Originator:     ian
>Organization:
titan
>Release:        103
>Environment:
macos (ppc-mac) (get-display-depth) = 16
Tools: ("project-manager" "syncheck")
Docs Installed:
("advanced" "beginning" "drscheme" "help" "icons" "intermediate" "misclib" "mred" "mzscheme" "r5rs" "teachpack")
Collections:
(("stratus:programming:plt:collects" ("afm" "browser" "compiler" "defaults" "doc" "drscheme" "drscheme-jr" "dynext" "errortrace" "framework" "games" "graphics" "guserspce" "help" "hierlist" "htdp" "icons" "launcher" "make" "mred" "mzlib" "mzscheme" "net" "setup" "slibinit" "stepper" "stepper-graphical" "userspce" "xml" "zodiac")))
>Description:
I'd expect the following two error messages to be the same/similar,
but they give different errors:
>How-To-Repeat:
(class object% ([a 4] b))     ; error: b appears after init-val specs; sure.
(class object% ([a 4] b . c)) ; error: c appears after catch-all arg?!
>Fix:
>Audit-Trail:

From: Matthew Flatt <mflatt@cs.utah.edu>
To: ian@cs.rice.edu
Cc: plt-gnats@cs.rice.edu
Subject: Re: all/1703: error message a bit off when defining a class w/ catch-all initialization args
Date: Tue, 10 Oct 2000 12:14:59 -0600 (MDT)

 Quoting ian@cs.rice.edu:
 > I'd expect the following two error messages to be the same/similar,
 > but they give different errors:
 > >How-To-Repeat:
 > (class object% ([a 4] b))     ; error: b appears after init-val specs; sure.
 > (class object% ([a 4] b . c)) ; error: c appears after catch-all arg?!
 
 I'm not sure why the error should be different in each case. Can you
 explain a little more?
 
 Maybe a more specific error message would help?:
 
  class*: bad syntax in argument list (default expression required)
  at: b in: (#%class*/names (this super-init) obj...
 
 Thanks,
 Matthew
 

From: ian barland (Bald \'n\' arian) <ian>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: ian@cs.rice.edu, plt-gnats@cs.rice.edu
Subject: re: all/1703: error message a bit off when defining a class w/ 
 catch-all initialization args
Date: Tue, 10 Oct 2000 15:47:02 -0500

 howdy matthew --
 
 | > I'd expect the following two error messages to be the same/similar,
 | > but they give different errors:
 | > >How-To-Repeat:
 | > (class object% ([a 4] b))     ; error: b appears after init-val specs; 
 sure.
 | > (class object% ([a 4] b . c)) ; error: c appears after catch-all arg?!
 | 
 | I'm not sure why the error should be different in each case. Can you
 | explain a little more?
 | 
 I was thinking that the second error should (also) be
     argument list: appears after initial value specifications [highlighted: b].
 The existing error
     argument list: appears after catch-all argument [highlit: c]
 doesn't seem right since c *is* the catch-all argument, not after it?
 
 | Maybe a more specific error message would help?:
 | 
 |  class*: bad syntax in argument list (default expression required)
 |  at: b in: (#%class*/names (this super-init) obj...
 | 
 Yeah, i like that just fine.
 (Funny, i hadn't viewed b as lacking an initializer, rather as b just
 being in the wrong place, given that it was un-initialized.)
 
 
 Enjoying the finally-nice weather,
 ian

Responsible-Changed-From-To: steck->mflatt
Responsible-Changed-By: mflatt
Responsible-Changed-When: Tue Dec 19 10:59:47 2000
Responsible-Changed-Why:

State-Changed-From-To: open-suspended
State-Changed-By: mflatt
State-Changed-When: Tue Dec 19 10:59:53 2000
State-Changed-Why:
Will be replaced by new syntax system.

State-Changed-From-To: suspended-analyzed
State-Changed-By: mflatt
State-Changed-When: Wed Jan  3 10:06:58 2001
State-Changed-Why:

State-Changed-From-To: analyzed-closed
State-Changed-By: mflatt
State-Changed-When: Sun May  6 12:28:42 2001
State-Changed-Why:
v200 implementation provides the right error


 
>Unformatted:
