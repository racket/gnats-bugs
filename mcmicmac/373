From mflatt@cs.rice.edu  Fri Nov 14 08:40:06 1997
Received: from africa.cs.rice.edu (africa.cs.rice.edu [128.42.1.175]) by cs.rice.edu (8.8.5/8.7.1) with ESMTP id IAA16778 for <plt-gnats@cs.rice.edu>; Fri, 14 Nov 1997 08:40:05 -0600 (CST)
Message-Id: <199711141438.IAA28803@africa.cs.rice.edu>
Date: Fri, 14 Nov 1997 08:38:39 -0600 (CST)
From: Matthew Flatt <mflatt@cs.rice.edu>
Reply-To: mflatt@cs.rice.edu
To: plt-gnats@cs.rice.edu
Subject: DrScheme and compound-unit/sig
X-Send-Pr-Version: 3.101

>Number:         373
>Category:       mcmicmac
>Synopsis:       DrScheme and compound-unit/sig error
>Confidential:   no
>Severity:       serious
>Priority:       medium
>Responsible:    shriram
>State:          closed
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Fri Nov 14 14:45:01 GMT 1997
>Last-Modified:  Thu Dec 11 11:58:01 CST 1997
>Originator:     Matthew Flatt
>Organization:
titan
>Release:        unknown
>Environment:
	drscheme -x
>Description:
	The code in the `How-To-Repeat' section gives me a strange
error message in DrScheme. The last expression is indeed erroneous,
but the error should be:

 compound-unit/sig: 1st linkage (i signature) for b@ contains an extra value name "x" which is not required by b@ unit's 1st import (i signature)

not:

 compound-unit: bad syntax (id must be an identifier) at: (#<primitive:set-box!> #&#(struct:zodiac #f #(struct:location 0 12 105 #<object>) #(struct:location 0 67 160 #<object>)) #(struct:zodiac #f #(struct:location 0 0 166 #<object>) #(struct:location 3 17 264 #<object>))) in: (#%compound-unit (import g4574:i:x g4575:i:y) (link (b@ ((#%begin0 (#%let ((fun4598 (#%begin (#<primitive:set-box!> #&#(struct:zodiac #f #(struct:location 0 12 105 #<object>) #(struct:location 0 67 160 #<object>)) #(struct:zodiac #f #(struct:locat...

DrScheme gives the latter error message (hilighting the unit/sig
expression).

This expression is from the MzScheme test suite. (Since DrScheme 50
passed the test suite, probably something has been broken in 51.)

>How-To-Repeat:
  (define-signature b (x y))

  (define b3@ (unit/sig b (import (i : ())) (define x 9) (define y 9)))

  (compound-unit/sig
        (import (i : b))
        (link (b@ : b (b3@ (i : b))))
        (export))
>Fix:

>Audit-Trail:

Responsible-Changed-From-To: ptg->shriram
Responsible-Changed-By: shriram
Responsible-Changed-When: Mon Dec  8 14:34:55 1997
Responsible-Changed-Why:

State-Changed-From-To: open-closed
State-Changed-By: shriram
State-Changed-When: Thu Dec 11 11:57:26 1997
State-Changed-Why:
This bug has been fixed.  M3 now expands into the appropriate code,
using which MzScheme is able to generate the desired error.

>Unformatted:
