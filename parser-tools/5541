From dbtucker@cs.brown.edu  Tue Jun 25 15:56:00 2002
Received: from localhost (IDENT:root@localhost.localdomain [127.0.0.1])
	by champlain.ccs.neu.edu (8.9.3/8.8.7) with ESMTP id PAA11090
	for <bugs>; Tue, 25 Jun 2002 15:56:00 -0400
Message-Id: <200206251956.PAA11090@champlain.ccs.neu.edu>
Date: Tue, 25 Jun 2002 15:56:00 -0400
From: David Tucker <dbtucker@cs.brown.edu>
To: bugs@plt-scheme.org
Subject: parser-tools gives vector-ref error

>Number:         5541
>Category:       parser-tools
>Synopsis:       parser-tools gives vector-ref error
>Confidential:   no
>Severity:       non-critical
>Priority:       low
>Responsible:    sowens
>State:          closed
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Tue Jun 25 16:00:00 EDT 2002
>Closed-Date:    Mon Jul 22 16:25:39 EDT 2002
>Last-Modified:  Mon Jul 22 16:25:39 EDT 2002
>Originator:     David Tucker
>Release:        200-cvs13jun2002
>Organization:
titan
>Environment:
unix "Linux rumba 2.2.20cs.std.1 #1 Wed Dec 5 23:51:44 EST 2001 i686 unknown" (i386-linux) (get-display-depth) = 24
Docs Installed:
("help" "icons" "teachpack" "r5rs" "mzscheme" "mzlib" "mred" "drscheme" "misclib" "framework" "tools" "mzc")
Collections: 
(("/pro/plt/plt/Linux_unknown/exp/collects" ("CVS" "afm" "algol60" "doc" "browser" "compiler" "cvs-time-stamp" "defaults" "drjava" "drscheme" "dynext" "eopl" "errortrace" "framework" "games" "graphics" "help" "hierlist" "htdp" "html" "icons" "lang" "launcher" "make" "mred" "mrflow" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "parser-tools" "readline" "setup" "sirmail" "slatex" "slibinit" "srpersist" "stepper" "string-constants" "syntax" "tests" "tex2page" "texpict" "typeset" "version" "waterworld" "web-server" "xml")))
Human Language: english
>Description:
If you give the parser generator a (bad) grammar with cyclic productions, it
raises a vector-ref error:

vector-ref: expects type <vector> as 1st argument, given: accept; other arguments were: 0

This should be handled more gracefully.  Code attached.
>How-To-Repeat:
(require (lib "lex.ss" "parser-tools")
         (lib "yacc.ss" "parser-tools"))

(define-empty-tokens tokens0 (A B C EOF))

(define (get-token port)
  (let ([lex (lexer-src-pos
              [a (token-A)]
              [b (token-B)]
              [C (token-C)]
              [(eof) (token-EOF)]
              [(- #\000 #\377) (return-without-pos (get-token port))])])
      (lex port)))

(define (make-lexer port)
  (port-count-lines! port)
  (lambda () (get-token port)))

(define small-parser
  (parser
   (src-pos)
   (error (lambda (token-ok token-name token-value start-pos end-pos)
            (display "error!")))
   (tokens tokens0)
   (start <foo>)
   (end EOF)
   (grammar
    (<foo> [(<bar>) $1])
    (<bar> [(<foo>) $1]))))

>Fix:

>Release-Note:

>Audit-Trail:
Responsible-Changed-From-To: steck->sowens
Responsible-Changed-By: sowens
Responsible-Changed-When: Fri Jul 19 22:18:40 2002
Responsible-Changed-Why:
    parser-tools bug
State-Changed-From-To: open->closed
State-Changed-By: sowens
State-Changed-When: Mon Jul 22 16:25:39 2002
State-Changed-Why:
    fixed and exp tagged
>Unformatted:

