From apache@plt-scheme.org Mon Feb 28 19:46:12 2005
Received: from champlain.ccs.neu.edu (champlain.ccs.neu.edu [127.0.0.1])
	by champlain.ccs.neu.edu (8.12.10/8.12.10) with ESMTP id j210kCnN004906
	for <bugs@plt-scheme.org>; Mon, 28 Feb 2005 19:46:12 -0500
Message-Id: <200503010046.j210kCJh004904@champlain.ccs.neu.edu>
Date: Mon, 28 Feb 2005 19:46:12 -0500
From: dherman@ccs.neu.edu
To: bugs@plt-scheme.org
Subject: parser-tools: custom position-tokens

>Number:         7264
>Category:       parser-tools
>Synopsis:       parser-tools: custom position-tokens
>Class:          change-request
>Responsible:    sowens
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Mon Feb 28 19:50:00 -0500 2005
>Last-Modified:  Tue Mar 01 18:46:45 -0500 2005
>Originator:     Dave Herman
>Organization:
plt
>Submitter-Id:   unknown
>Release:        299.32-cvs24feb2005
>Environment:
windows "Windows NT 5.1 (Build 2600) Service Pack 2" (win32\i386) (get-display-depth) = 32
Docs Installed:
(#<path:C:\Program Files\plt-299\collects\doc\web-server> #<path:C:\Program Files\plt-299\collects\doc\tour> #<path:C:\Program Files\plt-299\collects\doc\tools> #<path:C:\Program Files\plt-299\collects\doc\tex2page> #<path:C:\Program Files\plt-299\collects\doc\teachpack> #<path:C:\Program Files\plt-299\collects\doc\t-y-scheme> #<path:C:\Program Files\plt-299\collects\doc\swindle> #<path:C:\Program Files\plt-299\collects\doc\srfi> #<path:C:\Program Files\plt-299\collects\doc\r5rs> #<path:C:\Program Files\plt-299\collects\doc\profj-intermediate> #<path:C:\Program Files\plt-299\collects\doc\profj-beginner> #<path:C:\Program Files\plt-299\collects\doc\profj-advanced> #<path:C:\Program Files\plt-299\collects\doc\plot> #<path:C:\Program Files\plt-299\collects\doc\mzscheme> #<path:C:\Program Files\plt-299\collects\doc\mzlib> #<path:C:\Program Files\plt-299\collects\doc\mzc> #<path:C:\Program Files\plt-299\collects\doc\mrlib> #<path:C:\Program Files\plt-299\collects\doc\mred> #<path:C:\Program Files\plt-299\collects\doc\misclib> #<path:C:\Program Files\plt-299\collects\doc\intermediate-lambda> #<path:C:\Program Files\plt-299\collects\doc\intermediate> #<path:C:\Program Files\plt-299\collects\doc\insidemz> #<path:C:\Program Files\plt-299\collects\doc\help> #<path:C:\Program Files\plt-299\collects\doc\framework> #<path:C:\Program Files\plt-299\collects\doc\foreign> #<path:C:\Program Files\plt-299\collects\doc\drscheme> #<path:C:\Program Files\plt-299\collects\doc\beginning-abbr> #<path:C:\Program Files\plt-299\collects\doc\beginning> #<path:C:\Program Files\plt-299\collects\doc\advanced>)
Collections:
((#<path:C:\Documents and Settings\Dave Herman\Application Data\PLT Scheme\299.32\collects> "non-existent path") (#<path:C:\Program Files\plt-299\collects> (#<path:afm> #<path:algol60> #<path:browser> #<path:compiler> #<path:cvs-time-stamp> #<path:defaults> #<path:doc> #<path:drscheme> #<path:dynext> #<path:embedded-gui> #<path:eopl> #<path:errortrace> #<path:ffi> #<path:finish-install> #<path:framework> #<path:frtime> #<path:games> #<path:graphics> #<path:guibuilder> #<path:handin-client> #<path:handin-server> #<path:help> #<path:hierlist> #<path:honu-module> #<path:htdp> #<path:html> #<path:icons> #<path:info-domain> #<path:lang> #<path:launcher> #<path:make> #<path:mrdemo> #<path:mred> #<path:mrflow> #<path:mrlib> #<path:mysterx> #<path:mzcom> #<path:mzlib> #<path:mzscheme> #<path:net> #<path:openssl> #<path:parser-tools> #<path:planet> #<path:plot> #<path:preprocessor> #<path:profj> #<path:profjBoxes> #<path:readline> #<path:reduction-semantics> #<path:setup> #<path:sgl> #<path:sirmail> #<path:skipper> #<path:slatex> #<path:slibinit> #<path:slideshow> #<path:srfi> #<path:srpersist> #<path:ssax> #<path:stepper> #<path:string-constants> #<path:swindle> #<path:syntax> #<path:syntax-color> #<path:test-suite> #<path:tests> #<path:tex2page> #<path:texpict> #<path:trace> #<path:version> #<path:waterworld> #<path:web-server> #<path:xelda> #<path:xml>)))
Human Language: english
Teachpack filenames: ()
Computer Language: (("Professional Languages" "(module ...)") (#6(#t write mixed-fraction-e #f #t debug) (default) #0()))
>Description:
A lexer-src-pos is required to produce ordinary `token'
structs in its semantic action, and gets automatically
wrapped by a `position-token' struct. It would be great
to be able to generate a `position-token' struct in the
semantic action and have the lexer-src-pos know to use
that instead of automatically generating the default
position-token.

This way when one lexer farms out some input to another
lexer, it can use the position information from the
helper lexer.
>How-To-Repeat:
>Fix:
>Audit-Trail:
Responsible changed from "nobody" to "sowens" by sowens at Tue, 01 Mar 2005 14:44:22 -0500
Reason>>> . 

State changed from "open" to "analyzed" by sowens at Tue, 01 Mar 2005 14:44:22 -0500
Reason>>> . 

From: Scott Owens <sowens@cs.utah.edu>
To: dherman@ccs.neu.edu, bugs@plt-scheme.org
Cc: 
Subject: Re: all/7264: parser-tools: custom position-tokens
Date: Tue, 1 Mar 2005 12:46:40 -0700

 I don't understand what you're asking for.  A lexer or lexer-src-pos can 
 return whatever value it wants.  A lexer-src-pos wraps this value in a 
 position token.  make-position-token is exported by lex.ss.
 
 -Scott
 
 On Monday 28 February 2005 05:50 pm, dherman@ccs.neu.edu wrote:
 > A new problem report is waiting at
 >   http://bugs.plt-scheme.org/query/?cmd=view&pr=7264
 >
 > Reported by Dave Herman for release: 299.32-cvs24feb2005
 >
 > *** Description:
 > A lexer-src-pos is required to produce ordinary `token'
 > structs in its semantic action, and gets automatically
 > wrapped by a `position-token' struct. It would be great
 > to be able to generate a `position-token' struct in the
 > semantic action and have the lexer-src-pos know to use
 > that instead of automatically generating the default
 > position-token.
 >
 > This way when one lexer farms out some input to another
 > lexer, it can use the position information from the
 > helper lexer.
 >
 > *** How to repeat:
 >
 >
 > *** Environment:
 > windows "Windows NT 5.1 (Build 2600) Service Pack 2" (win32\i386)
 > (get-display-depth) = 32 Docs Installed:
 > (#<path:C:\Program Files\plt-299\collects\doc\web-server> #<path:C:\Program
 > Files\plt-299\collects\doc\tour> #<path:C:\Program
 > Files\plt-299\collects\doc\tools> #<path:C:\Program
 > Files\plt-299\collects\doc\tex2page> #<path:C:\Program
 > Files\plt-299\collects\doc\teachpack> #<path:C:\Program
 > Files\plt-299\collects\doc\t-y-scheme> #<path:C:\Program
 > Files\plt-299\collects\doc\swindle> #<path:C:\Program
 > Files\plt-299\collects\doc\srfi> #<path:C:\Program
 > Files\plt-299\collects\doc\r5rs> #<path:C:\Program
 > Files\plt-299\collects\doc\profj-intermediate> #<path:C:\Program
 > Files\plt-299\collects\doc\profj-beginner> #<path:C:\Program
 > Files\plt-299\collects\doc\profj-advanced> #<path:C:\Program
 > Files\plt-299\collects\doc\plot> #<path:C:\Program
 > Files\plt-299\collects\doc\mzscheme> #<path:C:\Program
 > Files\plt-299\collects\doc\mzlib> #<path:C:\Program
 > Files\plt-299\collects\doc\mzc> #<path:C:\Program
 > Files\plt-299\collects\doc\mrlib> #<path:C:\Program
 > Files\plt-299\collects\doc\mred> #<path!
 >
 >  :C:\Program Files\plt-299\collects\doc\misclib> #<path:C:\Program
 >  : Files\plt-299\collects\doc\intermediate-lambda> #<path:C:\Program
 >  : Files\plt-299\collects\doc\intermediate> #<path:C:\Program
 >  : Files\plt-299\collects\doc\insidemz> #<path:C:\Program
 >  : Files\plt-299\collects\doc\help> #<path:C:\Program
 >  : Files\plt-299\collects\doc\framework> #<path:C:\Program
 >  : Files\plt-299\collects\doc\foreign> #<path:C:\Program
 >  : Files\plt-299\collects\doc\drscheme> #<path:C:\Program
 >  : Files\plt-299\collects\doc\beginning-abbr> #<path:C:\Program
 >  : Files\plt-299\collects\doc\beginning> #<path:C:\Program
 >  : Files\plt-299\collects\doc\advanced>)
 >
 > Collections:
 > ((#<path:C:\Documents and Settings\Dave Herman\Application Data\PLT
 > Scheme\299.32\collects> "non-existent path") (#<path:C:\Program
 > Files\plt-299\collects> (#<path:afm> #<path:algol60> #<path:browser>
 > #<path:compiler> #<path:cvs-time-stamp> #<path:defaults> #<path:doc>
 > #<path:drscheme> #<path:dynext> #<path:embedded-gui> #<path:eopl>
 > #<path:errortrace> #<path:ffi> #<path:finish-install> #<path:framework>
 > #<path:frtime> #<path:games> #<path:graphics> #<path:guibuilder>
 > #<path:handin-client> #<path:handin-server> #<path:help> #<path:hierlist>
 > #<path:honu-module> #<path:htdp> #<path:html> #<path:icons>
 > #<path:info-domain> #<path:lang> #<path:launcher> #<path:make>
 > #<path:mrdemo> #<path:mred> #<path:mrflow> #<path:mrlib> #<path:mysterx>
 > #<path:mzcom> #<path:mzlib> #<path:mzscheme> #<path:net> #<path:openssl>
 > #<path:parser-tools> #<path:planet> #<path:plot> #<path:preprocessor>
 > #<path:profj> #<path:profjBoxes> #<path:readline>
 > #<path:reduction-semantics> #<path:setup> #<path:sgl>! #<path:sirmail>
 > #<path:skipper> #<path:slatex> #<path:slibinit> #<path:slideshow>
 > #<path:srfi> #<path:srpersist> #<path:ssax> #<path:stepper>
 > #<path:string-constants> #<path:swindle> #<path:syntax>
 > #<path:syntax-color> #<path:test-suite> #<path:tests> #<path:tex2page>
 > #<path:texpict> #<path:trace> #<path:version> #<path:waterworld>
 > #<path:web-server> #<path:xelda> #<path:xml>))) Human Language: english
 > Teachpack filenames: ()
 > Computer Language: (("Professional Languages" "(module ...)") (#6(#t write
 > mixed-fraction-e #f #t debug) (default) #0()))
From: Dave Herman <dherman@ccs.neu.edu>
To: Scott Owens <sowens@cs.utah.edu>
Cc: bugs@plt-scheme.org, Sam Tobin-Hochstadt <samth@ccs.neu.edu>
Subject: Re: all/7264: parser-tools: custom position-tokens
Date: Tue, 01 Mar 2005 18:08:06 -0500

 > I don't understand what you're asking for.  A lexer or lexer-src-pos can 
 > return whatever value it wants.  A lexer-src-pos wraps this value in a 
 > position token.  make-position-token is exported by lex.ss.
 
 Right -- what I'm saying is that because the lexer-src-pos automatically 
 wraps the value in a position token, the writer of the semantic action 
 does not have the ability to override how that position token gets created.
 
 Here's an example of where that's problematic. Sometimes you need to 
 write multiple lexers for one language. An example is the ProfessorJ 
 lexer: when the main lexer sees a #\" character it calls out to a 
 separate lexer for string literals. So the separate lexer should 
 generate a position token, and then the Java lexer should be able to 
 *override* the position information it would otherwise automatically be 
 associated with, and replace it with the position information from the 
 result of the string lexer.
 
 Does this make more sense?
 
 One way to deal with this would be to change the interface for 
 lexer-src-pos so that a semantic action can return whatever value it 
 wants, as it can now, but if it produces a position token, the 
 lexer-src-pos should not rewrap it in another position token but just 
 return it as is. I'm not saying this is the best solution, but it's just 
 an example.
 
 Dave
From: Scott Owens <sowens@cs.utah.edu>
To: Dave Herman <dherman@ccs.neu.edu>, bugs@plt-scheme.org
Cc: 
Subject: Re: all/7264: parser-tools: custom position-tokens
Date: Tue, 1 Mar 2005 16:21:05 -0700

 Use return-without-pos to cause a position lexer to return the 
 specified value (which possibly came from make-position-token) without 
 wrapping it, or use a lexer (not a lexer-src-pos) and craft all the 
 position-tokens manually.  I think either of these solutions would let 
 you craft a position for the entire string.  Further, I don't think 
 these approaches are awkward to the point that it would be worth 
 further complicating the lexer interface to achieve the same results 
 more automatically, as you suggest.
 
 -Scott
 
 
 On Mar 1, 2005, at 4:10 PM, Dave Herman wrote:
 >
 >  Right -- what I'm saying is that because the lexer-src-pos 
 > automatically
 >  wraps the value in a position token, the writer of the semantic action
 >  does not have the ability to override how that position token gets 
 > created.
 >
 >  Here's an example of where that's problematic. Sometimes you need to
 >  write multiple lexers for one language. An example is the ProfessorJ
 >  lexer: when the main lexer sees a #\" character it calls out to a
 >  separate lexer for string literals. So the separate lexer should
 >  generate a position token, and then the Java lexer should be able to
 >  *override* the position information it would otherwise automatically 
 > be
 >  associated with, and replace it with the position information from the
 >  result of the string lexer.
 >
 >  Does this make more sense?
 >
 >  One way to deal with this would be to change the interface for
 >  lexer-src-pos so that a semantic action can return whatever value it
 >  wants, as it can now, but if it produces a position token, the
 >  lexer-src-pos should not rewrap it in another position token but just
 >  return it as is. I'm not saying this is the best solution, but it's 
 > just
 >  an example.
 >
 >  Dave
 
From: Dave Herman <dherman@ccs.neu.edu>
To: Scott Owens <sowens@cs.utah.edu>
Cc: bugs@plt-scheme.org
Subject: Re: all/7264: parser-tools: custom position-tokens
Date: Tue, 01 Mar 2005 18:44:59 -0500

 > Use return-without-pos to cause a position lexer to return the specified 
 > value (which possibly came from make-position-token) without wrapping 
 > it, or use a lexer (not a lexer-src-pos) and craft all the 
 > position-tokens manually.
 
 Aha! I forgot about return-without-pos. That's exactly what I needed. 
 Sorry about that.
 
 Thanks,
 Dave
State changed from "analyzed" to "closed" by sowens at Tue, 01 Mar 2005 18:46:45 -0500
Reason>>> Not a bug

