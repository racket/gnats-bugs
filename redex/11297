From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Fri Oct  8 15:55:28 2010
Received: from mail-yw0-f44.google.com (mail-yw0-f44.google.com [209.85.213.44])
	by champlain.ccs.neu.edu (8.14.3/8.14.3) with ESMTP id o98JtPms002338
	for <bugs@bugs.plt-scheme.org>; Fri, 8 Oct 2010 15:55:25 -0400
Message-Id: <201010081955.o98JtMeC002330@champlain.ccs.neu.edu>
Date: Fri, 8 Oct 2010 15:55:23 -0400
From: robby@racket-lang.org
To: bugs@racket-lang.org
Subject: redex matching can fail to terminate

>Number:         11297
>Category:       redex
>Synopsis:       redex matching can fail to terminate
>Class:          sw-bug
>Responsible:    clklein
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Fri Oct 08 15:56:01 -0400 2010
>Closed-Date:    Sat Sep 29 10:15:55 -0400 2012
>Last-Modified:  Sat Sep 29 10:15:55 -0400 2012
>Originator:     Robby Findler
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.0.1.7
>Environment:
macosx "Darwin penghu.ece.northwestern.edu 10.4.0 Darwin Kernel Version 10.4.0: Fri Apr 23 18:28:53 PDT 2010; root:xnu-1504.7.4~1/RELEASE_I386 i386" (i386-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 583080132

Collections:
(("/Users/robby/Library/Racket/5.0.1.7/collects" non-existent-path) ("/Users/robby/git/plt/collects" ".gitignore" "2htdp" "afm" "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "data" "datalog" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "meta" "mred" "mrlib" "mysterx" "mz" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raclog" "raco" "racunit" "reader" "readline" "redex" "repo-time-stamp" "repos-time-stamp" "rico" "rnrs" "s-exp" "schelog" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "sirmail" "slatex" "slideshow" "srfi" "srpersist" "stepper" "string-constants"!
  "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tests" "tex2page" "texpict" "tool" "trace" "typed" "typed-scheme" "unstable" "version" "waterworld" "web-server" "wxme" "x" "xml"))
Computer Language: (("Teaching Languages" "How to Design Programs" "Beginning Student") (#(#t constructor repeating-decimal #f #t none) #f ()))
>Description:
The program below causes the Redex matcher to run forever (non-tail recursively).

I think that, instead, the define-language for should do some kind of a graph traversal and reject the language as ill-formed.

(This will also have to happen when languages are extended.)
>How-To-Repeat:
#lang racket
(require redex/reduction-semantics)

(define-language stlc
  (x y)
  (y x))

(redex-match stlc x 1)
>Fix:
>Audit-Trail:
From: Casey Klein <clklein@eecs.northwestern.edu>
To: robby <robby@racket-lang.org>, bugs <bugs@racket-lang.org>
Cc: nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/11297: redex matching can fail to terminate
Date: Fri, 8 Oct 2010 19:52:12 -0500

 On Fri, Oct 8, 2010 at 2:56 PM,  <robby@racket-lang.org> wrote:
 > *** Description:
 > The program below causes the Redex matcher to run forever (non-tail recur=
 sively).
 >
 > I think that, instead, the define-language for should do some kind of a g=
 raph traversal and reject the language as ill-formed.
 >
 > (This will also have to happen when languages are extended.)
 >
 > *** How to repeat:
 > #lang racket
 > (require redex/reduction-semantics)
 >
 > (define-language stlc
 > =A0(x y)
 > =A0(y x))
 >
 > (redex-match stlc x 1)
 >
 
 Would you also consider this language to be ill-formed?
 
 (define-language L
   (n n 1))
 
 IOW, is a language ill-formed if the matcher would need to watch out
 for left recursion? Or only when it has non-productive non-terminals,
 i.e., ones that don't match anything?
From: Robby Findler <robby@eecs.northwestern.edu>
To: Casey Klein <clklein@eecs.northwestern.edu>
Cc: robby <robby@racket-lang.org>, bugs <bugs@racket-lang.org>,
        nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/11297: redex matching can fail to terminate
Date: Fri, 8 Oct 2010 20:06:59 -0500

 On Friday, October 8, 2010, Casey Klein <clklein@eecs.northwestern.edu> wro=
 te:
 > On Fri, Oct 8, 2010 at 2:56 PM, =C2=A0<robby@racket-lang.org> wrote:
 >> *** Description:
 >> The program below causes the Redex matcher to run forever (non-tail recu=
 rsively).
 >>
 >> I think that, instead, the define-language for should do some kind of a =
 graph traversal and reject the language as ill-formed.
 >>
 >> (This will also have to happen when languages are extended.)
 >>
 >> *** How to repeat:
 >> #lang racket
 >> (require redex/reduction-semantics)
 >>
 >> (define-language stlc
 >> =C2=A0(x y)
 >> =C2=A0(y x))
 >>
 >> (redex-match stlc x 1)
 >>
 >
 > Would you also consider this language to be ill-formed?
 >
 > (define-language L
 >  =C2=A0(n n 1))
 >
 > IOW, is a language ill-formed if the matcher would need to watch out
 > for left recursion? Or only when it has non-productive non-terminals,
 > i.e., ones that don't match anything?
 
 I'd say that that is illformed because (n 1) dies the same thing
 without defining a nt in terms of itself directly. (I'm not sure the
 "left" is right here.)
 
 Robby
From: Casey Klein <clklein@eecs.northwestern.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: robby <robby@racket-lang.org>, bugs <bugs@racket-lang.org>,
        nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/11297: redex matching can fail to terminate
Date: Sat, 9 Oct 2010 06:47:14 -0500

 On Fri, Oct 8, 2010 at 8:06 PM, Robby Findler
 <robby@eecs.northwestern.edu> wrote:
 > On Friday, October 8, 2010, Casey Klein <clklein@eecs.northwestern.edu> w=
 rote:
 >> On Fri, Oct 8, 2010 at 2:56 PM, =A0<robby@racket-lang.org> wrote:
 >>> *** Description:
 >>> The program below causes the Redex matcher to run forever (non-tail rec=
 ursively).
 >>>
 >>> I think that, instead, the define-language for should do some kind of a=
  graph traversal and reject the language as ill-formed.
 >>>
 >>> (This will also have to happen when languages are extended.)
 >>>
 >>> *** How to repeat:
 >>> #lang racket
 >>> (require redex/reduction-semantics)
 >>>
 >>> (define-language stlc
 >>> =A0(x y)
 >>> =A0(y x))
 >>>
 >>> (redex-match stlc x 1)
 >>>
 >>
 >> Would you also consider this language to be ill-formed?
 >>
 >> (define-language L
 >> =A0=A0(n n 1))
 >>
 >> IOW, is a language ill-formed if the matcher would need to watch out
 >> for left recursion? Or only when it has non-productive non-terminals,
 >> i.e., ones that don't match anything?
 >
 > I'd say that that is illformed because (n 1) dies the same thing
 > without defining a nt in terms of itself directly. (I'm not sure the
 > "left" is right here.)
 >
 
 OK, makes sense.

State changed from "open" to "closed" by robby at Sat, 29 Sep 2012 10:15:55 -0400
Reason>>> fixed at some point in the past

