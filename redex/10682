From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Wed Jan  6 11:10:49 2010
Received: from mail-gx0-f227.google.com (mail-gx0-f227.google.com [209.85.217.227])
	by champlain.ccs.neu.edu (8.14.2/8.14.2) with ESMTP id o06GAiBs014997
	for <bugs@bugs.plt-scheme.org>; Wed, 6 Jan 2010 11:10:44 -0500
Message-Id: <201001061610.o06GAcCB014989@champlain.ccs.neu.edu>
Date: Wed, 6 Jan 2010 11:10:38 -0500
From: keiko@cs.ioc.ee
To: bugs@plt-scheme.org
Subject: [redex] recognition of variables

>Number:         10682
>Category:       redex
>Synopsis:       [redex] recognition of variables
>Class:          not-a-bug
>Responsible:    robby
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Wed Jan 06 11:12:01 -0500 2010
>Closed-Date:    Wed Jan 06 11:41:23 -0500 2010
>Last-Modified:  Thu Jan 07 05:12:01 -0500 2010
>Originator:     Keiko Nakata
>Organization:
plt
>Submitter-Id:   unknown
>Release:        4.2.3
>Environment:
unix "Linux Dolce 2.6.28-17-generic #58-Ubuntu SMP Tue Dec 1 18:57:07 UTC 2009 i686 GNU/Linux" (i386-linux/3m) (get-display-depth) = 24
Human Language: english
(current-memory-use) 214531076

Collections:
(("/home/keiko/.plt-scheme/4.2.3/collects" non-existent-path) ("/home/keiko/opt/plt-4.2.3/lib/plt/collects" "frtime" "redex" "games" "setup" "web-server" "syntax" "icons" "slatex" "readline" "r6rs" "slideshow" "scribble" "lazy" "help" "at-exp" "parser-tools" "rnrs" "unstable" "graphics" "embedded-gui" "errortrace" "2htdp" "file" "make" "eopl" "preprocessor" "openssl" "ffi" "string-constants" "srfi" "html" "texpict" "teachpack" "s-exp" "launcher" "sgl" "hierlist" "version" "plot" "profile" "macro-debugger" "typed-scheme" "planet" "xml" "test-box-recovery" "lang" "afm" "mred" "combinator-parser" "scribblings" "tests" "algol60" "browser" "mzcom" "tex2page" "mzlib" "net" "mysterx" "scheme" "test-engine" "typed" "htdp" "mrlib" "syntax-color" "trace" "gui-debugger" "deinprogramm" "swindle" "drscheme" "info-domain" "r5rs" "stepper" "wxme" "config" "mzscheme" "framework" "dynext" "compiler" "scriblib" "defaults"))
Computer Language: (("Module") (#(#t write mixed-fraction-e #f #t debug) (default) #() "#lang scheme\n" #t))
>Description:
Hello,

This is about plt redex. 
Strange behaviour of variable-not-otherwise-memtioned and variable-expect
confuses me. I guess this is a bug. 

Please try the first three ways of defining variables; two of them are commented out. 

If I run 
(run-core '(begin (print 5) x))
I only get the expected behaviour when I use the second way.  

Some irrelevant code remains yet; but I hope it is accessible.

Kind regards,
Keiko 
>How-To-Repeat:
#lang scheme
(require redex)

(define-language lyre 
;  ((x y) (variable-not-otherwise-memtioned))
  ((x y) (variable-except print lam add letrec black add set! begin))
; ((x y z) (variable-expect @ print lam add letrec begin compound export deps freeze init import rename unit))
  (n number)
  (v n
     s
     (lam e))
  (e x
     n
     s
     (print e)
     (lam e)
     (@ e_0 e_1)
     (begin e ...))
  (cxt (print hole)
       (@ hole e)
       (@ v hole)
       (begin hole e ...))
  (ncxt hole (in-hole cxt ncxt))
  (E ((store (x_0 e_0) ...) ncxt)))

(define red-core  
  (reduction-relation lyre
   (--> (in-hole E (print v))
        ,(term-let ([_ (print (term v))])
                   (term (in-hole E v)))
        "print")
   (--> (in-hole E (@ (lam (x) e_0) v_1))
        (in-hole E (letrec ((x v_1)) e_0))
        "beta-value")
   (--> (in-hole E (begin v e e_0 ...)) 
        (in-hole E (begin e e_0 ...))
        "begin0")
   (--> (in-hole E (begin v))
        (in-hole E v)
        "begin1")))
         
(define (run-core e) (traces red-core `((store) ,e)))
>Fix:
>Audit-Trail:
From: Robby Findler <robby@eecs.northwestern.edu>
To: keiko@cs.ioc.ee, bugs@plt-scheme.org
Cc: nobody@plt-scheme.org, bug-notification@plt-scheme.org
Subject: Re: [plt-bug] all/10682: [redex] recognition of variables
Date: Wed, 6 Jan 2010 10:16:41 -0600

 For the first option, variable-not-otherwise-mentioned should not have
 parens around it. For the third, I think you wanted to put 'begin'
 into the variable-except list.
 
 Robby
 
 On Wed, Jan 6, 2010 at 10:12 AM,  <keiko@cs.ioc.ee> wrote:
 > A new problem report is waiting at
 > =C2=A0http://bugs.plt-scheme.org/query/?cmd=3Dview&pr=3D10682
 >
 > Reported by Keiko Nakata for release: 4.2.3
 >
 > *** Description:
 > Hello,
 >
 > This is about plt redex.
 > Strange behaviour of variable-not-otherwise-memtioned and variable-expect
 > confuses me. I guess this is a bug.
 >
 > Please try the first three ways of defining variables; two of them are co=
 mmented out.
 >
 > If I run
 > (run-core '(begin (print 5) x))
 > I only get the expected behaviour when I use the second way.
 >
 > Some irrelevant code remains yet; but I hope it is accessible.
 >
 > Kind regards,
 > Keiko
 >
 > *** How to repeat:
 > #lang scheme
 > (require redex)
 >
 > (define-language lyre
 > ; =C2=A0((x y) (variable-not-otherwise-memtioned))
 > =C2=A0((x y) (variable-except print lam add letrec black add set! begin))
 > ; ((x y z) (variable-expect @ print lam add letrec begin compound export =
 deps freeze init import rename unit))
 > =C2=A0(n number)
 > =C2=A0(v n
 > =C2=A0 =C2=A0 s
 > =C2=A0 =C2=A0 (lam e))
 > =C2=A0(e x
 > =C2=A0 =C2=A0 n
 > =C2=A0 =C2=A0 s
 > =C2=A0 =C2=A0 (print e)
 > =C2=A0 =C2=A0 (lam e)
 > =C2=A0 =C2=A0 (@ e_0 e_1)
 > =C2=A0 =C2=A0 (begin e ...))
 > =C2=A0(cxt (print hole)
 > =C2=A0 =C2=A0 =C2=A0 (@ hole e)
 > =C2=A0 =C2=A0 =C2=A0 (@ v hole)
 > =C2=A0 =C2=A0 =C2=A0 (begin hole e ...))
 > =C2=A0(ncxt hole (in-hole cxt ncxt))
 > =C2=A0(E ((store (x_0 e_0) ...) ncxt)))
 >
 > (define red-core
 > =C2=A0(reduction-relation lyre
 > =C2=A0 (--> (in-hole E (print v))
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0,(term-let ([_ (print (term v))])
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 (term (in-=
 hole E v)))
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0"print")
 > =C2=A0 (--> (in-hole E (@ (lam (x) e_0) v_1))
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0(in-hole E (letrec ((x v_1)) e_0))
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0"beta-value")
 > =C2=A0 (--> (in-hole E (begin v e e_0 ...))
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0(in-hole E (begin e e_0 ...))
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0"begin0")
 > =C2=A0 (--> (in-hole E (begin v))
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0(in-hole E v)
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0"begin1")))
 >
 > (define (run-core e) (traces red-core `((store) ,e)))
 >
 > *** Environment:
 > unix "Linux Dolce 2.6.28-17-generic #58-Ubuntu SMP Tue Dec 1 18:57:07 UTC=
  2009 i686 GNU/Linux" (i386-linux/3m) (get-display-depth) =3D 24
 > Human Language: english
 > (current-memory-use) 214531076
 >
 > Collections:
 > (("/home/keiko/.plt-scheme/4.2.3/collects" non-existent-path) ("/home/kei=
 ko/opt/plt-4.2.3/lib/plt/collects" "frtime" "redex" "games" "setup" "web-se=
 rver" "syntax" "icons" "slatex" "readline" "r6rs" "slideshow" "scribble" "l=
 azy" "help" "at-exp" "parser-tools" "rnrs" "unstable" "graphics" "embedded-=
 gui" "errortrace" "2htdp" "file" "make" "eopl" "preprocessor" "openssl" "ff=
 i" "string-constants" "srfi" "html" "texpict" "teachpack" "s-exp" "launcher=
 " "sgl" "hierlist" "version" "plot" "profile" "macro-debugger" "typed-schem=
 e" "planet" "xml" "test-box-recovery" "lang" "afm" "mred" "combinator-parse=
 r" "scribblings" "tests" "algol60" "browser" "mzcom" "tex2page" "mzlib" "ne=
 t" "mysterx" "scheme" "test-engine" "typed" "htdp" "mrlib" "syntax-color" "=
 trace" "gui-debugger" "deinprogramm" "swindle" "drscheme" "info-domain" "r5=
 rs" "stepper" "wxme" "config" "mzscheme" "framework" "dynext" "compiler" "s=
 criblib" "defaults"))
 > Computer Language: (("Module") (#(#t write mixed-fraction-e #f #t debug) =
 (default) #() "#lang scheme\n" #t))
 >
 >
From: Keiko Nakata <keko.nakata@gmail.com>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: keiko@cs.ioc.ee, bugs@plt-scheme.org, nobody@plt-scheme.org,
        bug-notification@plt-scheme.org
Subject: Re: [plt-bug] all/10682: [redex] recognition of variables
Date: Wed, 6 Jan 2010 18:30:12 +0200

 > For the first option, variable-not-otherwise-mentioned should not have
 > parens around it.
 
 Ah! Thanks.
 
 > For the third, I think you wanted to put 'begin'
 > into the variable-except list.
 
 I think "begin" is included.
 
 Keiko
From: Robby Findler <robby@eecs.northwestern.edu>
To: Keiko Nakata <keko.nakata@gmail.com>
Cc: keiko@cs.ioc.ee, bugs@plt-scheme.org, nobody@plt-scheme.org,
        bug-notification@plt-scheme.org
Subject: Re: [plt-bug] all/10682: [redex] recognition of variables
Date: Wed, 6 Jan 2010 10:37:08 -0600

 On Wed, Jan 6, 2010 at 10:30 AM, Keiko Nakata <keko.nakata@gmail.com> wrote:
 >> For the first option, variable-not-otherwise-mentioned should not have
 >> parens around it.
 >
 > Ah! Thanks.
 >
 >> For the third, I think you wanted to put 'begin'
 >> into the variable-except list.
 >
 > I think "begin" is included.
 
 Oh, whoops. You're right. The problem is that variable-expect should
 be variable-except.
 
 Robby

Class changed from "sw-bug" to "not-a-bug" by robby at Wed, 06 Jan 2010 11:41:03 -0500
Reason>>> This was not a bug.

Well.... perhaps it would be better if there was some kind
of keyword highlighting or something that would have helped
to explain why the third option wasn't working.

Can't think of anything for the first one, tho.

Responsible changed from "nobody" to "robby" by robby at Wed, 06 Jan 2010 11:41:03 -0500
Reason>>> rbf


State changed from "open" to "closed" by robby at Wed, 06 Jan 2010 11:41:23 -0500
Reason>>> not a bug

From: Keiko Nakata <keko.nakata@gmail.com>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: keiko@cs.ioc.ee, bugs@plt-scheme.org, nobody@plt-scheme.org,
        bug-notification@plt-scheme.org
Subject: Re: [plt-bug] all/10682: [redex] recognition of variables
Date: Wed, 6 Jan 2010 18:41:46 +0200

 > Oh, whoops. You're right. The problem is that variable-expect should
 > be variable-except.
 
 Ah! Sorry for forcing you to spell check my English...
 
 Keiko
From: Robby Findler <robby@eecs.northwestern.edu>
To: Keiko Nakata <keko.nakata@gmail.com>
Cc: keiko@cs.ioc.ee, bugs@plt-scheme.org, nobody@plt-scheme.org,
        bug-notification@plt-scheme.org
Subject: Re: [plt-bug] all/10682: [redex] recognition of variables
Date: Wed, 6 Jan 2010 10:43:02 -0600

 On Wed, Jan 6, 2010 at 10:41 AM, Keiko Nakata <keko.nakata@gmail.com> wrote:
 >> Oh, whoops. You're right. The problem is that variable-expect should
 >> be variable-except.
 >
 > Ah! Sorry for forcing you to spell check my English...
 
 This ain't English! ;)
 
 I don't even want to think about how many times I've made similar
 mistakes ......
 
 Robby
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: Keiko Nakata <keko.nakata@gmail.com>, keiko@cs.ioc.ee, bugs@plt-scheme.org,
        nobody@plt-scheme.org, bug-notification@plt-scheme.org
Subject: Re: [plt-bug] all/10682: [redex] recognition of variables
Date: Wed, 6 Jan 2010 14:12:15 -0500

 On Jan 6, 2010, at 11:43 AM, Robby Findler wrote:
 
 > On Wed, Jan 6, 2010 at 10:41 AM, Keiko Nakata  
 > <keko.nakata@gmail.com> wrote:
 >>> Oh, whoops. You're right. The problem is that variable-expect should
 >>> be variable-except.
 >>
 >> Ah! Sorry for forcing you to spell check my English...
 >
 > This ain't English! ;)
 >
 > I don't even want to think about how many times I've made similar
 > mistakes ......
 
 
 Which suggests an unwelcome brittleness in our world that we should  
 think about. 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: Keiko Nakata <keko.nakata@gmail.com>, keiko@cs.ioc.ee, bugs@plt-scheme.org,
        nobody@plt-scheme.org, bug-notification@plt-scheme.org
Subject: Re: [plt-bug] all/10682: [redex] recognition of variables
Date: Wed, 6 Jan 2010 13:23:02 -0600

 Yep. This kind of thing is the most common problem with debugging
 Redex programs. Your pattern doesn't match and you're not sure and
 where this is something silly somewhere.
 
 Robby
 
 On Wed, Jan 6, 2010 at 1:12 PM, Matthias Felleisen <matthias@ccs.neu.edu> wrote:
 >
 >
 > On Jan 6, 2010, at 11:43 AM, Robby Findler wrote:
 >
 >> On Wed, Jan 6, 2010 at 10:41 AM, Keiko Nakata <keko.nakata@gmail.com>
 >> wrote:
 >>>>
 >>>> Oh, whoops. You're right. The problem is that variable-expect should
 >>>> be variable-except.
 >>>
 >>> Ah! Sorry for forcing you to spell check my English...
 >>
 >> This ain't English! ;)
 >>
 >> I don't even want to think about how many times I've made similar
 >> mistakes ......
 >
 >
 > Which suggests an unwelcome brittleness in our world that we should think
 > about.
 >
From: Keiko Nakata <keiko@cs.ioc.ee>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: Matthias Felleisen <matthias@ccs.neu.edu>,
        Keiko Nakata <keko.nakata@gmail.com>, bugs@plt-scheme.org,
        nobody@plt-scheme.org, bug-notification@plt-scheme.org
Subject: Re: [plt-bug] all/10682: [redex] recognition of variables
Date: Wed, 06 Jan 2010 21:47:22 +0200

 Indeed, I spend most of my debugging time identifying why a term gets 
 stuck.
 But redex is suitable for my purpose :)
 
 Keiko
 
 Robby Findler wrote:
 > Yep. This kind of thing is the most common problem with debugging
 > Redex programs. Your pattern doesn't match and you're not sure and
 > where this is something silly somewhere.
 >
 > Robby
 >
 > On Wed, Jan 6, 2010 at 1:12 PM, Matthias Felleisen <matthias@ccs.neu.edu> wrote:
 >   
 >> On Jan 6, 2010, at 11:43 AM, Robby Findler wrote:
 >>
 >>     
 >>> On Wed, Jan 6, 2010 at 10:41 AM, Keiko Nakata <keko.nakata@gmail.com>
 >>> wrote:
 >>>       
 >>>>> Oh, whoops. You're right. The problem is that variable-expect should
 >>>>> be variable-except.
 >>>>>           
 >>>> Ah! Sorry for forcing you to spell check my English...
 >>>>         
 >>> This ain't English! ;)
 >>>
 >>> I don't even want to think about how many times I've made similar
 >>> mistakes ......
 >>>       
 >> Which suggests an unwelcome brittleness in our world that we should think
 >> about.
 >>
 >>     
 >
 >   
 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Keiko Nakata <keiko@cs.ioc.ee>, bugs@plt-scheme.org
Cc: 
Subject: Re: [plt-bug] all/10682: [redex] recognition of variables
Date: Wed, 6 Jan 2010 14:34:05 -0600

 You know about redex-check? It can be handy for such explorations in the re=
 pl.
 
 Robby
 
 On Wed, Jan 6, 2010 at 1:52 PM, Keiko Nakata <keiko@cs.ioc.ee> wrote:
 > The following reply was made to PR redex/10682 (noted by Gnats).
 >
 > View this PR at:
 > =C2=A0http://bugs.plt-scheme.org/query/?cmd=3Dview&pr=3D10682
 >
 > =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D
 > From: Keiko Nakata <keiko@cs.ioc.ee>
 > To: Robby Findler <robby@eecs.northwestern.edu>
 > Cc: Matthias Felleisen <matthias@ccs.neu.edu>,
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0Keiko Nakata <keko.nakata@gmail.com>, bugs@plt=
 -scheme.org,
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0nobody@plt-scheme.org, bug-notification@plt-sc=
 heme.org
 > Subject: Re: [plt-bug] all/10682: [redex] recognition of variables
 > Date: Wed, 06 Jan 2010 21:47:22 +0200
 >
 > =C2=A0Indeed, I spend most of my debugging time identifying why a term ge=
 ts
 > =C2=A0stuck.
 > =C2=A0But redex is suitable for my purpose :)
 >
 > =C2=A0Keiko
 >
 > =C2=A0Robby Findler wrote:
 > =C2=A0> Yep. This kind of thing is the most common problem with debugging
 > =C2=A0> Redex programs. Your pattern doesn't match and you're not sure an=
 d
 > =C2=A0> where this is something silly somewhere.
 > =C2=A0>
 > =C2=A0> Robby
 > =C2=A0>
 > =C2=A0> On Wed, Jan 6, 2010 at 1:12 PM, Matthias Felleisen <matthias@ccs.=
 neu.edu> wrote:
 > =C2=A0>
 > =C2=A0>> On Jan 6, 2010, at 11:43 AM, Robby Findler wrote:
 > =C2=A0>>
 > =C2=A0>>
 > =C2=A0>>> On Wed, Jan 6, 2010 at 10:41 AM, Keiko Nakata <keko.nakata@gmai=
 l.com>
 > =C2=A0>>> wrote:
 > =C2=A0>>>
 > =C2=A0>>>>> Oh, whoops. You're right. The problem is that variable-expect=
  should
 > =C2=A0>>>>> be variable-except.
 > =C2=A0>>>>>
 > =C2=A0>>>> Ah! Sorry for forcing you to spell check my English...
 > =C2=A0>>>>
 > =C2=A0>>> This ain't English! ;)
 > =C2=A0>>>
 > =C2=A0>>> I don't even want to think about how many times I've made simil=
 ar
 > =C2=A0>>> mistakes ......
 > =C2=A0>>>
 > =C2=A0>> Which suggests an unwelcome brittleness in our world that we sho=
 uld think
 > =C2=A0>> about.
 > =C2=A0>>
 > =C2=A0>>
 > =C2=A0>
 > =C2=A0>
 >
 >
From: Keiko Nakata <keiko@cs.ioc.ee>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: bugs@plt-scheme.org
Subject: Re: [plt-bug] all/10682: [redex] recognition of variables
Date: Thu, 07 Jan 2010 12:08:51 +0200

 Robby Findler wrote:
 > You know about redex-check? It can be handy for such explorations in the repl.
 
 I didn't. Thanks. I will give it a try.
 
  > Indeed, I spend most of my debugging time identifying why a term gets 
 stuck.
 
 P.S.  There have been various reasons why a term gets stuck or behaves 
 against my intention;
 typos, unwanted free variables, ill-typendness, true bugs in the 
 formalization.
 Surely it will be great if redex helps me locate them more quickly.
 
 Keiko 
 
