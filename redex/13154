From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Mon Oct  1 21:27:25 2012
Received: from mail-ie0-f172.google.com (mail-ie0-f172.google.com [209.85.223.172])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id q921RMDx012801
	for <bugs@bugs.plt-scheme.org>; Mon, 1 Oct 2012 21:27:22 -0400
Message-Id: <201210020127.q921RJpb012794@champlain.ccs.neu.edu>
Date: Mon, 1 Oct 2012 21:27:19 -0400
From: dvanhorn@ccs.neu.edu
To: bugs@racket-lang.org
Subject: Redex reduction-relation should allow 0 rules

>Number:         13154
>Category:       redex
>Synopsis:       Redex reduction-relation should allow 0 rules
>Class:          change-request
>Responsible:    robby
>Severity:       non-critical
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Mon Oct 01 21:28:01 -0400 2012
>Last-Modified:  Tue Oct 02 00:31:20 -0400 2012
>Originator:     David Van Horn
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.3.0.17--2012-08-07(7eaae20f/d)
>Environment:
macosx "Darwin doom.local 12.0.0 Darwin Kernel Version 12.0.0: Sun Jun 24 23:00:16 PDT 2012; root:xnu-2050.7.9~1/RELEASE_X86_64 x86_64" (x86_64-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 516418600
Links: (links) = ("tests" "var"); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()


Collections:
("/Users/dvanhorn/Library/Racket/5.3.0.17/collects"
 (non-existent-path))
("/Users/dvanhorn/Documents/git/racket/collects"
 (".gitignore" "2htdp" "algol60" "at-exp" "browser" "compatibility" "compiler" "config" "data" "datalog" "db" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "future-visualizer" "games" "graphics" "gui-debugger" "handin-client" "handin-server" "help" "hierlist" "honu" "htdp" "html" "icons" "images" "info-domain" "json" "lang" "launcher" "lazy" "macro-debugger" "make" "meta" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "picturing-programs" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "redex" "repo-time-stamp" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "sirmail" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-engine" "tests" "texpict" "trace" "typed" "typed-racket" "typed-scheme" "unstab!
 le" "version" "web-server" "wxme" "xml" "xrepl"))

Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #f #t ((main) (test))))
>Description:
It might be useful to allow a reduction relation to specify 0 rules, i.e., it might
be useful to write the empty relation easily.  (I've never needed to do this except
for boiling down bug report examples, but I could see how this might be needed 
for a base case on operations over sets of languages.)
>How-To-Repeat:
#lang racket
(require redex)
(define-language L)
(reduction-relation L)
>Fix:
>Audit-Trail:
From: Robby Findler <robby@eecs.northwestern.edu>
To: dvanhorn@ccs.neu.edu, bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/13154: Redex reduction-relation should allow 0 rules
Date: Mon, 1 Oct 2012 22:47:10 -0500

 When you find an actual use for this, I'd be happy to reconsider, but
 in the meantime I prefer to leave the error in.
 
 IMO, it gets easy to accidentally leave out a rule when you're using a
 complex "with" clause and you get the sense of the with backwards.
 Removing this check would lead to lots of confusion in that case.
 
 Robby
 
 On Mon, Oct 1, 2012 at 8:28 PM,  <dvanhorn@ccs.neu.edu> wrote:
 > A new problem report is waiting at
 >   http://bugs.racket-lang.org/query/?cmd=view&pr=13154
 >
 > Reported by David Van Horn for release: 5.3.0.17--2012-08-07(7eaae20f/d)
 >
 > *** Description:
 > It might be useful to allow a reduction relation to specify 0 rules, i.e., it might
 > be useful to write the empty relation easily.  (I've never needed to do this except
 > for boiling down bug report examples, but I could see how this might be needed
 > for a base case on operations over sets of languages.)
 >
 > *** How to repeat:
 > #lang racket
 > (require redex)
 > (define-language L)
 > (reduction-relation L)
 >
 > *** Environment:
 > macosx "Darwin doom.local 12.0.0 Darwin Kernel Version 12.0.0: Sun Jun 24 23:00:16 PDT 2012; root:xnu-2050.7.9~1/RELEASE_X86_64 x86_64" (x86_64-macosx/3m) (get-display-depth) = 32
 > Human Language: english
 > (current-memory-use) 516418600
 > Links: (links) = ("tests" "var"); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()
 >
 >
 > Collections:
 > ("/Users/dvanhorn/Library/Racket/5.3.0.17/collects"
 >  (non-existent-path))
 > ("/Users/dvanhorn/Documents/git/racket/collects"
 >  (".gitignore" "2htdp" "algol60" "at-exp" "browser" "compatibility" "compiler" "config" "data" "datalog" "db" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "future-visualizer" "games" "graphics" "gui-debugger" "handin-client" "handin-server" "help" "hierlist" "honu" "htdp" "html" "icons" "images" "info-domain" "json" "lang" "launcher" "lazy" "macro-debugger" "make" "meta" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "picturing-programs" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "redex" "repo-time-stamp" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "sirmail" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-engine" "tests" "texpict" "trace" "typed" "typed-racket" "typed-scheme" "unstab!
 >  le" "version" "web-server" "wxme" "xml" "xrepl"))
 >
 > Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #f #t ((main) (test))))
 >
 

