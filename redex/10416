From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Fri Aug 28 18:35:33 2009
Received: from mail-yw0-f180.google.com (mail-yw0-f180.google.com [209.85.211.180])
	by champlain.ccs.neu.edu (8.14.2/8.14.2) with ESMTP id n7SMZSrP029501
	for <bugs@bugs.plt-scheme.org>; Fri, 28 Aug 2009 18:35:28 -0400
Message-Id: <200908282235.n7SMZPYr029495@champlain.ccs.neu.edu>
Date: Fri, 28 Aug 2009 18:35:25 -0400
From: dbrown@ccs.neu.edu
To: bugs@plt-scheme.org
Subject: redex: current language identifier goes out of scope on RHS of reduction-case

>Number:         10416
>Category:       redex
>Synopsis:       redex: current language identifier goes out of scope on RHS of reduction-case
>Class:          sw-bug
>Responsible:    clklein
>Severity:       non-critical
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Fri Aug 28 18:36:02 -0400 2009
>Closed-Date:    Sat Sep 05 06:31:32 -0400 2009
>Last-Modified:  Fri Feb 05 23:19:00 -0500 2010
>Originator:     Daniel Brown
>Organization:
plt
>Submitter-Id:   unknown
>Release:        4.2.1
>Environment:
macosx "Darwin dan-2.local 9.7.0 Darwin Kernel Version 9.7.0: Tue Mar 31 22:52:17 PDT 2009; root:xnu-1228.12.14~1/RELEASE_I386 i386 i386" (i386-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 85257956

Collections:
(("/Users/danb/Library/PLT Scheme/4.2.1/collects" non-existent-path) ("/Applications/PLT Scheme v4.2.1/collects" "2htdp" "afm" "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "defaults" "deinprogramm" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "help" "hierlist" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profile" "profj" "r5rs" "r6rs" "readline" "redex" "rnrs" "s-exp" "scheme" "scribble" "scribblings" "scriblib" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "stxclass" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tex2page" "texpict" "trace" "typed" "typed-scheme" "version" "web-server" "wxme" "xml"))
Computer Language: (("Module") (#(#t write mixed-fraction-e #f #t debug) (default) #() "#lang scheme\n" #t))
>Description:
In Redex, I'm trying to write something like this:

  (define-language l ...)

  (define rr
    (reduction-relation l
      [--> A ,((term-match/single l ...)
               (f (term A)))]))

But I the following surprising error:

  term-match/single: expected a identifier defined by define-language in: l

It appears that l disappears on the RHS of the --> ! If I Î²-expand I can make the error go away:

  (define rr
    (let ([g (term-match/single l ...)])
      (reduction-relation l
        [--> A ,(g (f (term A)))])))

Even more strange -- other languages don't disappear! If I match on a language different than the one I'm using to define the reduction relation, I get no error:

  (define-language l ...)
  (define-language k ...)

  (define rr
    (reduction-relation l
      [--> A ,((term-match/single k ...)
               (f (term A)))]))
>How-To-Repeat:
#lang scheme

(require redex/reduction-semantics)

(define-language l)
(define-language k)


; term-match/single: expected a identifier defined by define-language in: l
(reduction-relation l
  [--> any ,((term-match/single l [any (term any)]) (term any))])

; ok
(let ([f (term-match/single l [any (term any)])])
  (reduction-relation l
    [--> any ,(f (term any))]))


; term-match: expected a identifier defined by define-language in: l
(reduction-relation l
  [--> any ,(term-match l)])

; ok
(reduction-relation l
  [--> any ,(term-match k)])


; reduction-relation: expected a identifier defined by define-language in: l
(reduction-relation l
  [--> any ,(reduction-relation l [--> any any])])

; ok
(reduction-relation l
  [--> any ,(reduction-relation k [--> any any])])
>Fix:
There was a lambda expression that bound the variable "lang" being generated by a macro, but I didn't realize that "lang" was already bound in the context in a with-syntax (to the "l" in the example above) which meant it shadowed the name (wrongly).
>Release-Note:
This was a contract error in a sense. That is, the error message is signalling an error that is contract-like. The corresponding type error is that the 'reduction-relation' macro changes the type of a bound variable. Not sure if that would be a type error, tho, since shadowing with a different type is generally allowed.
>Audit-Trail:
State changed from "open" to "closed" by robby at Sat, 05 Sep 2009 06:31:32 -0400
Reason>>> fixed and checked in to SVN.

Thanks for the report.


