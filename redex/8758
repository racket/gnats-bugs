From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Mon Jun 18 17:44:59 2007
Received: from wr-out-0506.google.com (wr-out-0506.google.com [64.233.184.224])
	by champlain.ccs.neu.edu (8.13.8/8.13.7) with ESMTP id l5ILixEg017028
	for <bugs@bugs.plt-scheme.org>; Mon, 18 Jun 2007 17:44:59 -0400
Message-Id: <200706182144.l5ILitln017022@champlain.ccs.neu.edu>
Date: Mon, 18 Jun 2007 17:44:55 -0400
From: ivan.gz2@gmail.com
To: bugs@plt-scheme.org
Subject: PLT Redex : apply-reduction-relation*

>Number:         8758
>Category:       redex
>Synopsis:       PLT Redex : apply-reduction-relation*
>Class:          not-a-bug
>Responsible:    robby
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Mon Jun 18 17:45:01 -0400 2007
>Closed-Date:    Mon Jun 18 18:20:18 -0400 2007
>Last-Modified:  Sat Sep 29 10:24:38 -0400 2012
>Originator:     Ivan Gazeau
>Organization:
plt
>Submitter-Id:   unknown
>Release:        370.1-svn22may2007
>Environment:
unix "Linux localhost.localdomain 2.6.20-1.2944.fc6 #1 SMP Tue Apr 10 17:27:49 EDT 2007 i686 athlon i386 GNU/Linux" (i386-linux/3m) (get-display-depth) = 24
Docs Installed:
(("/proj/scheme/plt/doc" "r5rs" "mzscheme" "mred" "help" "tour" "drscheme" "srfi" "mzlib" "misclib" "mrlib" "framework" "foreign" "mzc" "tools" "insidemz" "web-server" "swindle" "plot" "release-notes" "t-y-scheme" "tex2page" "beginning" "beginning-abbr" "intermediate" "intermediate-lambda" "advanced" "teachpack" "teachpack-htdc" "profj-beginner" "profj-intermediate" "profj-advanced") (* "/proj/scheme/typed-scheme/doc"))
Human Language: english
(current-memory-use) 256025708

Collections:
(("/home/Ivan/.plt-scheme/370.1/collects" non-existent-path) ("/proj/scheme/plt/collects" "hierlist" "r6rs" "r5rs" "combinator-parser" "slatex" "teachpack" "ffi" "handin-server" "htdp" "errortrace" "setup" "afm" "sirmail" "string-constants" "macro-debugger" "help" "xml" "srpersist" "version" "skipper" "web-server" "syntax-color" "scribble" "htdch" "embedded-gui" "swindle" "mrflow" "compiler" "stepper" "dynext" "tests" "profjWizard" "mzcom" "lazy" "repos-time-stamp" "waterworld" "texpict" "icons" "net" "defaults" "honu-module" "launcher" "framework" "drscheme" "slideshow" "mztake" "config" "handin-client" "algol60" "mzscheme" "mysterx" "mred" "readline" "planet" "mzlib" "make" "preprocessor" "trace" "lang" "openssl" "srfi" "html" "eopl" "wxme" "frtime" "plot" "browser" "info-domain" "parser-tools" "xelda" "profj" "graphics" "syntax" "mrlib" "sgl" "games" "tex2page" "guibuilder"))
Computer Language: (("Professional Languages" "(module ...)") (#6(#t write mixed-fraction-e #f #t debug) (default) #0()))
>Description:
When I want to use the function apply-reduction-relation* with a term that according to traces reduce to a single term, I have the error :

apply-reduction-relation*: term ((-> num (lambda (y num) (if (= num y) 0 num))) 1) produced non unique results:
((-> num (-> num (if (= num num) 0 num))) 1)
((-> num (-> num (if (= num num) 0 num))) 1)
((-> num (-> num (if (= num num) 0 num))) 1)
((-> num (-> num (if (= num num) 0 num))) 1)

And if I replace apply-reduction-relation* by apply-reduction-relation I just have one term  (but for my personal program I have got 2 identical term instead of 4).

Could you explain me what is happen, please ?
>How-To-Repeat:
Take types.ss in the example directory,
Replace (traces lang ... ) by (apply-reduction-relation* ... ),
Run.
That's all.

It seems that you can do that each time the reduction-relation is in-hole ...
>Fix:
>Audit-Trail:
From: "Robby Findler" <robby@cs.uchicago.edu>
To: ivan.gz2@gmail.com, bugs@plt-scheme.org
Cc: 
Subject: Re: [plt-bug] all/8758: PLT Redex : apply-reduction-relation*
Date: Mon, 18 Jun 2007 17:19:00 -0500

 The apply-reduction-relation* function has a built in special error
 check that looks for redundant parsings of a given term. It is
 important to eliminate them, for performance reasons. (If you nest
 such redundancies, you can end up with an exponential slowdown in your
 redex program.)
 
 A common example if when you write:
 
   (e (e e ...) (lambda (variable ...) e) variable)
 
 as a definition for "e" and then match it against:
 
   (lambda (x) x)
 
 This term actually parses two ways. It parses as a lambda expression,
 as you expect, but it also parses as an application of the variable
 "lambda" to two arguments, the first argument "(x)" and the second
 argument "x".
 
 Of course, you probably don't any reduction rules that apply to that
 second parsing, so it doesn't change the meaning of your semantics.
 
 But, it does have a large negative effect on the running time. If you
 write this:
 
   (lambda (x) (lambda (y) (lambda (z) (lambda (w) x)))))
 
 There aren't just 4 different parses, there are 2^4 different parses,
 and the performance can really suffer, since redex has to check them
 all to see if they match your rules.
 
 hth,
 Robby
 
 PS: feel free to bring these questions to the plt-scheme mailing list.
 That's probably better than submitting a bug (unless you really do
 think it is a bug, of course!)
 
 On 6/18/07, ivan.gz2@gmail.com <ivan.gz2@gmail.com> wrote:
 > A new problem report is waiting at
 >   http://bugs.plt-scheme.org/query/?cmd=view&pr=8758
 >
 > Reported by Ivan Gazeau for release: 370.1-svn22may2007
 >
 > *** Description:
 > When I want to use the function apply-reduction-relation* with a term that according to traces reduce to a single term, I have the error :
 >
 > apply-reduction-relation*: term ((-> num (lambda (y num) (if (= num y) 0 num))) 1) produced non unique results:
 > ((-> num (-> num (if (= num num) 0 num))) 1)
 > ((-> num (-> num (if (= num num) 0 num))) 1)
 > ((-> num (-> num (if (= num num) 0 num))) 1)
 > ((-> num (-> num (if (= num num) 0 num))) 1)
 >
 > And if I replace apply-reduction-relation* by apply-reduction-relation I just have one term  (but for my personal program I have got 2 identical term instead of 4).
 >
 > Could you explain me what is happen, please ?
 >
 > *** How to repeat:
 > Take types.ss in the example directory,
 > Replace (traces lang ... ) by (apply-reduction-relation* ... ),
 > Run.
 > That's all.
 >
 > It seems that you can do that each time the reduction-relation is in-hole ...
 >
 > *** Environment:
 > unix "Linux localhost.localdomain 2.6.20-1.2944.fc6 #1 SMP Tue Apr 10 17:27:49 EDT 2007 i686 athlon i386 GNU/Linux" (i386-linux/3m) (get-display-depth) = 24
 > Docs Installed:
 > (("/proj/scheme/plt/doc" "r5rs" "mzscheme" "mred" "help" "tour" "drscheme" "srfi" "mzlib" "misclib" "mrlib" "framework" "foreign" "mzc" "tools" "insidemz" "web-server" "swindle" "plot" "release-notes" "t-y-scheme" "tex2page" "beginning" "beginning-abbr" "intermediate" "intermediate-lambda" "advanced" "teachpack" "teachpack-htdc" "profj-beginner" "profj-intermediate" "profj-advanced") (* "/proj/scheme/typed-scheme/doc"))
 > Human Language: english
 > (current-memory-use) 256025708
 >
 > Collections:
 > (("/home/Ivan/.plt-scheme/370.1/collects" non-existent-path) ("/proj/scheme/plt/collects" "hierlist" "r6rs" "r5rs" "combinator-parser" "slatex" "teachpack" "ffi" "handin-server" "htdp" "errortrace" "setup" "afm" "sirmail" "string-constants" "macro-debugger" "help" "xml" "srpersist" "version" "skipper" "web-server" "syntax-color" "scribble" "htdch" "embedded-gui" "swindle" "mrflow" "compiler" "stepper" "dynext" "tests" "profjWizard" "mzcom" "lazy" "repos-time-stamp" "waterworld" "texpict" "icons" "net" "defaults" "honu-module" "launcher" "framework" "drscheme" "slideshow" "mztake" "config" "handin-client" "algol60" "mzscheme" "mysterx" "mred" "readline" "planet" "mzlib" "make" "preprocessor" "trace" "lang" "openssl" "srfi" "html" "eopl" "wxme" "frtime" "plot" "browser" "info-domain" "parser-tools" "xelda" "profj" "graphics" "syntax" "mrlib" "sgl" "games" "tex2page" "guibuilder"))
 > Computer Language: (("Professional Languages" "(module ...)") (#6(#t write mixed-fraction-e #f #t debug) (default) #0()))
 >
 >

Class changed from "sw-bug" to "not-a-bug" by robby at Mon, 18 Jun 2007 18:20:18 -0400
Reason>>> not a bug

State changed from "open" to "closed" by robby at Mon, 18 Jun 2007 18:20:18 -0400
Reason>>> not a bug


Responsible changed from "nobody" to "robby" by eli at Fri, 06 Jul 2007 22:59:06 -0400
Reason>>> redex


