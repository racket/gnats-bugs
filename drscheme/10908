From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Wed May 12 22:03:08 2010
Received: from mail-gx0-f228.google.com (mail-gx0-f228.google.com [209.85.217.228])
	by champlain.ccs.neu.edu (8.14.3/8.14.3) with ESMTP id o4D236OR017450
	for <bugs@bugs.plt-scheme.org>; Wed, 12 May 2010 22:03:06 -0400
Message-Id: <201005130203.o4D231BL017441@champlain.ccs.neu.edu>
Date: Wed, 12 May 2010 22:03:01 -0400
From: matthias@ccs.neu.edu
To: bugs@plt-scheme.org
Subject: check syntax on collects/racket/contract/private/provide.rkt raises error

>Number:         10908
>Category:       drscheme
>Synopsis:       check syntax on collects/racket/contract/private/provide.rkt raises error
>Class:          sw-bug
>Responsible:    robby
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Wed May 12 22:04:01 -0400 2010
>Closed-Date:    Sat Dec 25 16:53:27 -0500 2010
>Last-Modified:  Sat Dec 25 16:53:27 -0500 2010
>Originator:     matthias
>Organization:
plt
>Submitter-Id:   unknown
>Release:        4.2.5.16-svn2010-05-12(9f0d446/g)
>Environment:
macosx "Darwin africa.local 10.3.0 Darwin Kernel Version 10.3.0: Fri Feb 26 11:58:09 PST 2010; root:xnu-1504.3.12~1/RELEASE_I386 i386" (i386-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 193571428

Collections:
(("/Users/matthias/0Unison/collects/" ".DS_Store" "compiled" "date" "finance" "info-domain" "info.ss" "pdf.ss~" "session" "short" "testing" "tll-collects" "utils" "web") ("/Users/matthias/Library/Racket/4.2.5.16/collects" non-existent-path) ("/Users/matthias/plt/collects" ".gitignore" "2htdp" "afm" "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "meta" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "raclog" "raco" "racunit" "reader" "readline" "redex" "repo-time-stamp" "repos-time-stamp" "rnrs" "s-exp" "schelog" "scheme" "schemeunit" "scrib!
 ble" "scribblings" "scriblib" "setup" "sgl" "sirmail" "slatex" "slideshow" "srfi" "srpersist" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tests" "tex2page" "texpict" "tool" "trace" "typed" "typed-scheme" "unstable" "version" "waterworld" "web-server" "wxme" "xml"))
Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t))
>Description:
Here is the precise error message in a syntax window: 

define-values: cannot re-define a constant: make-pc-struct-type
>How-To-Repeat:
>Fix:
>Audit-Trail:
From: Robby Findler <robby@eecs.northwestern.edu>
To: matthias@ccs.neu.edu, bugs@plt-scheme.org
Cc: nobody@plt-scheme.org, bug-notification@plt-scheme.org
Subject: Re: [plt-bug] all/10908: check syntax on collects/racket/contract/private/provide.rkt 
	raises error
Date: Wed, 12 May 2010 21:10:47 -0500

 Assuming this is a bug (it may just be the way life works because
 drracket has to share some parts of itself with the user program; we
 try to minimize that, but this may not be avoidable (altho I think it
 should be, I'm not sure)), then this is the kind of thing that we'd
 like to avoid via a dependency checker. (Our dependency checker that
 Eli made is not currently set up to check for this, but maybe we
 should think about making it do that.)
 
 Robby
 
 On Wed, May 12, 2010 at 9:04 PM,  <matthias@ccs.neu.edu> wrote:
 > A new problem report is waiting at
 > =C2=A0http://bugs.plt-scheme.org/query/?cmd=3Dview&pr=3D10908
 >
 > Reported by matthias for release: 4.2.5.16-svn2010-05-12(9f0d446/g)
 >
 > *** Description:
 > Here is the precise error message in a syntax window:
 >
 > define-values: cannot re-define a constant: make-pc-struct-type
 >
 > *** How to repeat:
 >
 >
 > *** Environment:
 > macosx "Darwin africa.local 10.3.0 Darwin Kernel Version 10.3.0: Fri Feb =
 26 11:58:09 PST 2010; root:xnu-1504.3.12~1/RELEASE_I386 i386" (i386-macosx/=
 3m) (get-display-depth) =3D 32
 > Human Language: english
 > (current-memory-use) 193571428
 >
 > Collections:
 > (("/Users/matthias/0Unison/collects/" ".DS_Store" "compiled" "date" "fina=
 nce" "info-domain" "info.ss" "pdf.ss~" "session" "short" "testing" "tll-col=
 lects" "utils" "web") ("/Users/matthias/Library/Racket/4.2.5.16/collects" n=
 on-existent-path) ("/Users/matthias/plt/collects" ".gitignore" "2htdp" "afm=
 " "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "def=
 aults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" =
 "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debu=
 gger" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu"=
  "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugg=
 er" "make" "meta" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net"=
  "openssl" "parser-tools" "plai" "planet" "plot" "preprocessor" "profile" "=
 r5rs" "r6rs" "racket" "raclog" "raco" "racunit" "reader" "readline" "redex"=
  "repo-time-stamp" "repos-time-stamp" "rnrs" "s-exp" "schelog" "scheme" "sc=
 hemeunit" "scrib!
 > =C2=A0ble" "scribblings" "scriblib" "setup" "sgl" "sirmail" "slatex" "sli=
 deshow" "srfi" "srpersist" "stepper" "string-constants" "swindle" "syntax" =
 "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tests" "tex2p=
 age" "texpict" "tool" "trace" "typed" "typed-scheme" "unstable" "version" "=
 waterworld" "web-server" "wxme" "xml"))
 > Computer Language: (("Determine language from source") (#(#t print mixed-=
 fraction-e #f #t debug) (default) #() "#lang racket\n" #t))
 >
 >
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: bugs@plt-scheme.org, nobody@plt-scheme.org,
        bug-notification@plt-scheme.org
Subject: Re: [plt-bug] all/10908: check syntax on collects/racket/contract/private/provide.rkt  raises error
Date: Wed, 12 May 2010 22:12:36 -0400

 Huh?=20
 
 On May 12, 2010, at 10:10 PM, Robby Findler wrote:
 
 > Assuming this is a bug (it may just be the way life works because
 > drracket has to share some parts of itself with the user program; we
 > try to minimize that, but this may not be avoidable (altho I think it
 > should be, I'm not sure)), then this is the kind of thing that we'd
 > like to avoid via a dependency checker. (Our dependency checker that
 > Eli made is not currently set up to check for this, but maybe we
 > should think about making it do that.)
 >=20
 > Robby
 >=20
 > On Wed, May 12, 2010 at 9:04 PM,  <matthias@ccs.neu.edu> wrote:
 >> A new problem report is waiting at
 >>  http://bugs.plt-scheme.org/query/?cmd=3Dview&pr=3D10908
 >>=20
 >> Reported by matthias for release: 4.2.5.16-svn2010-05-12(9f0d446/g)
 >>=20
 >> *** Description:
 >> Here is the precise error message in a syntax window:
 >>=20
 >> define-values: cannot re-define a constant: make-pc-struct-type
 >>=20
 >> *** How to repeat:
 >>=20
 >>=20
 >> *** Environment:
 >> macosx "Darwin africa.local 10.3.0 Darwin Kernel Version 10.3.0: Fri =
 Feb 26 11:58:09 PST 2010; root:xnu-1504.3.12~1/RELEASE_I386 i386" =
 (i386-macosx/3m) (get-display-depth) =3D 32
 >> Human Language: english
 >> (current-memory-use) 193571428
 >>=20
 >> Collections:
 >> (("/Users/matthias/0Unison/collects/" ".DS_Store" "compiled" "date" =
 "finance" "info-domain" "info.ss" "pdf.ss~" "session" "short" "testing" =
 "tll-collects" "utils" "web") =
 ("/Users/matthias/Library/Racket/4.2.5.16/collects" non-existent-path) =
 ("/Users/matthias/plt/collects" ".gitignore" "2htdp" "afm" "algol60" =
 "at-exp" "browser" "combinator-parser" "compiler" "config" "defaults" =
 "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" =
 "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" =
 "gui-debugger" "guibuilder" "handin-client" "handin-server" "help" =
 "hierlist" "honu" "htdp" "html" "icons" "info-domain" "lang" "launcher" =
 "lazy" "macro-debugger" "make" "meta" "mred" "mrlib" "mysterx" "mzcom" =
 "mzlib" "mzscheme" "net" "openssl" "parser-tools" "plai" "planet" "plot" =
 "preprocessor" "profile" "r5rs" "r6rs" "racket" "raclog" "raco" =
 "racunit" "reader" "readline" "redex" "repo-time-stamp" =
 "repos-time-stamp" "rnrs" "s-exp" "schelog" "scheme" "schemeunit" =
 "scrib!
 >>  ble" "scribblings" "scriblib" "setup" "sgl" "sirmail" "slatex" =
 "slideshow" "srfi" "srpersist" "stepper" "string-constants" "swindle" =
 "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" =
 "tests" "tex2page" "texpict" "tool" "trace" "typed" "typed-scheme" =
 "unstable" "version" "waterworld" "web-server" "wxme" "xml"))
 >> Computer Language: (("Determine language from source") (#(#t print =
 mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t))
 >>=20
 >>=20
 
From: Ryan Culpepper <ryanc@ccs.neu.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: Robby Findler <robby@eecs.northwestern.edu>,
        "bugs@plt-scheme.org" <bugs@plt-scheme.org>,
        bug-notification@plt-scheme.org
Subject: Re: [plt-bug] all/10908: check syntax on collects/racket/contract/private/provide.rkt
  raises error
Date: Wed, 12 May 2010 22:21:50 -0600

 I think what Robby means by "the way life works..." is this: Check 
 Syntax doesn't expand programs in an empty namespace; it already 
 contains some attached module declarations (support for various tools). 
 When you try to expand a module that's already present, it interprets 
 that as trying to redefine the module's contents (see also 
 compile-enforce-module-constants).
 
 What I don't understand is why expanding the module triggers the 
 redefining-constant check. Does Check Syntax execute the module 
 declaration afterwards? Can it be simply changed to not do so?
 
 Ryan
 
 
 Matthias Felleisen wrote:
 > Huh? 
 > 
 > On May 12, 2010, at 10:10 PM, Robby Findler wrote:
 > 
 >> Assuming this is a bug (it may just be the way life works because
 >> drracket has to share some parts of itself with the user program; we
 >> try to minimize that, but this may not be avoidable (altho I think it
 >> should be, I'm not sure)), then this is the kind of thing that we'd
 >> like to avoid via a dependency checker. (Our dependency checker that
 >> Eli made is not currently set up to check for this, but maybe we
 >> should think about making it do that.)
 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Ryan Culpepper <ryanc@ccs.neu.edu>
Cc: Matthias Felleisen <matthias@ccs.neu.edu>,
        "bugs@plt-scheme.org" <bugs@plt-scheme.org>,
        bug-notification@plt-scheme.org
Subject: Re: [plt-bug] all/10908: check syntax on collects/racket/contract/private/provide.rkt 
	raises error
Date: Thu, 13 May 2010 00:20:07 -0500

 Looking at the code, Id don't think that it executes the module
 definition, but it does call eval-compile-time-part-of-top-level on
 the module. Maybe that does it? (I'm not sure.)
 
 Robby
 
 On Wed, May 12, 2010 at 11:21 PM, Ryan Culpepper <ryanc@ccs.neu.edu> wrote:
 > I think what Robby means by "the way life works..." is this: Check Syntax
 > doesn't expand programs in an empty namespace; it already contains some
 > attached module declarations (support for various tools). When you try to
 > expand a module that's already present, it interprets that as trying to
 > redefine the module's contents (see also compile-enforce-module-constants).
 >
 > What I don't understand is why expanding the module triggers the
 > redefining-constant check. Does Check Syntax execute the module declaration
 > afterwards? Can it be simply changed to not do so?
 >
 > Ryan
 >
 >
 > Matthias Felleisen wrote:
 >>
 >> Huh?
 >> On May 12, 2010, at 10:10 PM, Robby Findler wrote:
 >>
 >>> Assuming this is a bug (it may just be the way life works because
 >>> drracket has to share some parts of itself with the user program; we
 >>> try to minimize that, but this may not be avoidable (altho I think it
 >>> should be, I'm not sure)), then this is the kind of thing that we'd
 >>> like to avoid via a dependency checker. (Our dependency checker that
 >>> Eli made is not currently set up to check for this, but maybe we
 >>> should think about making it do that.)
 >
 >
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: Ryan Culpepper <ryanc@ccs.neu.edu>,
        "bugs@plt-scheme.org" <bugs@plt-scheme.org>,
        bug-notification@plt-scheme.org
Subject: Re: [plt-bug] all/10908: check syntax on collects/racket/contract/private/provide.rkt  raises error
Date: Thu, 13 May 2010 09:43:21 -0400

 I haven't seen anything that convinces me of the correctness of the  
 current behavior. Right?
 
 
 
 On May 13, 2010, at 1:20 AM, Robby Findler wrote:
 
 > Looking at the code, Id don't think that it executes the module
 > definition, but it does call eval-compile-time-part-of-top-level on
 > the module. Maybe that does it? (I'm not sure.)
 >
 > Robby
 >
 > On Wed, May 12, 2010 at 11:21 PM, Ryan Culpepper <ryanc@ccs.neu.edu>  
 > wrote:
 >> I think what Robby means by "the way life works..." is this: Check  
 >> Syntax
 >> doesn't expand programs in an empty namespace; it already contains  
 >> some
 >> attached module declarations (support for various tools). When you  
 >> try to
 >> expand a module that's already present, it interprets that as  
 >> trying to
 >> redefine the module's contents (see also compile-enforce-module- 
 >> constants).
 >>
 >> What I don't understand is why expanding the module triggers the
 >> redefining-constant check. Does Check Syntax execute the module  
 >> declaration
 >> afterwards? Can it be simply changed to not do so?
 >>
 >> Ryan
 >>
 >>
 >> Matthias Felleisen wrote:
 >>>
 >>> Huh?
 >>> On May 12, 2010, at 10:10 PM, Robby Findler wrote:
 >>>
 >>>> Assuming this is a bug (it may just be the way life works because
 >>>> drracket has to share some parts of itself with the user program;  
 >>>> we
 >>>> try to minimize that, but this may not be avoidable (altho I  
 >>>> think it
 >>>> should be, I'm not sure)), then this is the kind of thing that we'd
 >>>> like to avoid via a dependency checker. (Our dependency checker  
 >>>> that
 >>>> Eli made is not currently set up to check for this, but maybe we
 >>>> should think about making it do that.)
 >>
 >>
 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: Matthias Felleisen <matthias@ccs.neu.edu>,
        Ryan Culpepper <ryanc@ccs.neu.edu>,
        "bugs@plt-scheme.org" <bugs@plt-scheme.org>,
        "bug-notification@plt-scheme.org" <bug-notification@plt-scheme.org>
Subject: Re: [plt-bug] all/10908: check syntax on collects/racket/contract/private/provide.rkt 
	raises error
Date: Thu, 13 May 2010 08:55:50 -0500

 (and the dependency may be valid)
 
 On Thursday, May 13, 2010, Robby Findler <robby@eecs.northwestern.edu> wrote:
 > The only potential bug I see is that somewhere there is an extra
 > dependency on that file that should not be there but I do not know
 > where that dependency would be coming from.
 >
 > On Thursday, May 13, 2010, Matthias Felleisen <matthias@ccs.neu.edu> wrote:
 >>
 >> I haven't seen anything that convinces me of the correctness of the current behavior. Right?
 >>
 >>
 >>
 >> On May 13, 2010, at 1:20 AM, Robby Findler wrote:
 >>
 >>
 >> Looking at the code, Id don't think that it executes the module
 >> definition, but it does call eval-compile-time-part-of-top-level on
 >> the module. Maybe that does it? (I'm not sure.)
 >>
 >> Robby
 >>
 >> On Wed, May 12, 2010 at 11:21 PM, Ryan Culpepper <ryanc@ccs.neu.edu> wrote:
 >>
 >> I think what Robby means by "the way life works..." is this: Check Syntax
 >> doesn't expand programs in an empty namespace; it already contains some
 >> attached module declarations (support for various tools). When you try to
 >> expand a module that's already present, it interprets that as trying to
 >> redefine the module's contents (see also compile-enforce-module-constants).
 >>
 >> What I don't understand is why expanding the module triggers the
 >> redefining-constant check. Does Check Syntax execute the module declaration
 >> afterwards? Can it be simply changed to not do so?
 >>
 >> Ryan
 >>
 >>
 >> Matthias Felleisen wrote:
 >>
 >>
 >> Huh?
 >> On May 12, 2010, at 10:10 PM, Robby Findler wrote:
 >>
 >>
 >> Assuming this is a bug (it may just be the way life works because
 >> drracket has to share some parts of itself with the user program; we
 >> try to minimize that, but this may not be avoidable (altho I think it
 >> should be, I'm not sure)), then this is the kind of thing that we'd
 >> like to avoid via a dependency checker. (Our dependency checker that
 >> Eli made is not currently set up to check for this, but maybe we
 >> should think about making it do that.)
 >>
 >>
 >>
 >>
 >>
 >>
 >
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: Robby Findler <robby@eecs.northwestern.edu>,
        Ryan Culpepper <ryanc@ccs.neu.edu>,
        "bugs@plt-scheme.org" <bugs@plt-scheme.org>,
        "bug-notification@plt-scheme.org" <bug-notification@plt-scheme.org>
Subject: Re: [plt-bug] all/10908: check syntax on collects/racket/contract/private/provide.rkt 
	raises error
Date: Thu, 13 May 2010 08:55:06 -0500

 The only potential bug I see is that somewhere there is an extra
 dependency on that file that should not be there but I do not know
 where that dependency would be coming from.
 
 On Thursday, May 13, 2010, Matthias Felleisen <matthias@ccs.neu.edu> wrote:
 >
 > I haven't seen anything that convinces me of the correctness of the current behavior. Right?
 >
 >
 >
 > On May 13, 2010, at 1:20 AM, Robby Findler wrote:
 >
 >
 > Looking at the code, Id don't think that it executes the module
 > definition, but it does call eval-compile-time-part-of-top-level on
 > the module. Maybe that does it? (I'm not sure.)
 >
 > Robby
 >
 > On Wed, May 12, 2010 at 11:21 PM, Ryan Culpepper <ryanc@ccs.neu.edu> wrote:
 >
 > I think what Robby means by "the way life works..." is this: Check Syntax
 > doesn't expand programs in an empty namespace; it already contains some
 > attached module declarations (support for various tools). When you try to
 > expand a module that's already present, it interprets that as trying to
 > redefine the module's contents (see also compile-enforce-module-constants).
 >
 > What I don't understand is why expanding the module triggers the
 > redefining-constant check. Does Check Syntax execute the module declaration
 > afterwards? Can it be simply changed to not do so?
 >
 > Ryan
 >
 >
 > Matthias Felleisen wrote:
 >
 >
 > Huh?
 > On May 12, 2010, at 10:10 PM, Robby Findler wrote:
 >
 >
 > Assuming this is a bug (it may just be the way life works because
 > drracket has to share some parts of itself with the user program; we
 > try to minimize that, but this may not be avoidable (altho I think it
 > should be, I'm not sure)), then this is the kind of thing that we'd
 > like to avoid via a dependency checker. (Our dependency checker that
 > Eli made is not currently set up to check for this, but maybe we
 > should think about making it do that.)
 >
 >
 >
 >
 >
 >
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: Ryan Culpepper <ryanc@ccs.neu.edu>,
        "bugs@plt-scheme.org" <bugs@plt-scheme.org>,
        "bug-notification@plt-scheme.org" <bug-notification@plt-scheme.org>
Subject: Re: [plt-bug] all/10908: check syntax on collects/racket/contract/private/provide.rkt  raises error
Date: Thu, 13 May 2010 10:00:50 -0400

 As far as I am concerned, Check Syntax must work on every file.
 Everything else is a bug.
 
 
 On May 13, 2010, at 9:55 AM, Robby Findler wrote:
 
 > The only potential bug I see is that somewhere there is an extra
 > dependency on that file that should not be there but I do not know
 > where that dependency would be coming from.
 >
 > On Thursday, May 13, 2010, Matthias Felleisen <matthias@ccs.neu.edu>  
 > wrote:
 >>
 >> I haven't seen anything that convinces me of the correctness of the  
 >> current behavior. Right?
 >>
 >>
 >>
 >> On May 13, 2010, at 1:20 AM, Robby Findler wrote:
 >>
 >>
 >> Looking at the code, Id don't think that it executes the module
 >> definition, but it does call eval-compile-time-part-of-top-level on
 >> the module. Maybe that does it? (I'm not sure.)
 >>
 >> Robby
 >>
 >> On Wed, May 12, 2010 at 11:21 PM, Ryan Culpepper  
 >> <ryanc@ccs.neu.edu> wrote:
 >>
 >> I think what Robby means by "the way life works..." is this: Check  
 >> Syntax
 >> doesn't expand programs in an empty namespace; it already contains  
 >> some
 >> attached module declarations (support for various tools). When you  
 >> try to
 >> expand a module that's already present, it interprets that as  
 >> trying to
 >> redefine the module's contents (see also compile-enforce-module- 
 >> constants).
 >>
 >> What I don't understand is why expanding the module triggers the
 >> redefining-constant check. Does Check Syntax execute the module  
 >> declaration
 >> afterwards? Can it be simply changed to not do so?
 >>
 >> Ryan
 >>
 >>
 >> Matthias Felleisen wrote:
 >>
 >>
 >> Huh?
 >> On May 12, 2010, at 10:10 PM, Robby Findler wrote:
 >>
 >>
 >> Assuming this is a bug (it may just be the way life works because
 >> drracket has to share some parts of itself with the user program; we
 >> try to minimize that, but this may not be avoidable (altho I think it
 >> should be, I'm not sure)), then this is the kind of thing that we'd
 >> like to avoid via a dependency checker. (Our dependency checker that
 >> Eli made is not currently set up to check for this, but maybe we
 >> should think about making it do that.)
 >>
 >>
 >>
 >>
 >>
 >>
 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: Ryan Culpepper <ryanc@ccs.neu.edu>,
        "bugs@plt-scheme.org" <bugs@plt-scheme.org>,
        "bug-notification@plt-scheme.org" <bug-notification@plt-scheme.org>
Subject: Re: [plt-bug] all/10908: check syntax on collects/racket/contract/private/provide.rkt 
	raises error
Date: Thu, 13 May 2010 09:56:49 -0500

 On Thu, May 13, 2010 at 9:00 AM, Matthias Felleisen
 <matthias@ccs.neu.edu> wrote:
 >
 > As far as I am concerned, Check Syntax must work on every file.
 > Everything else is a bug.
 
 Ah, righto. Well, at the moment I think the situation is that we might
 need a change in the way racket works to make that happen because some
 of the files that are shared between check syntax's implementation and
 the files that are being check syntax'd cause problems.
 
 After thinking about it for a few minutes, I agree that this should be
 no fundamental limitation embodied in the above truth -- it should be
 possible to set things up so that compilation of a file that is
 already instantiated in the current namespace should still be
 possible. (Maybe?)
 
 Robby
From: Ryan Culpepper <ryanc@ccs.neu.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: Matthias Felleisen <matthias@ccs.neu.edu>,
        "bugs@plt-scheme.org" <bugs@plt-scheme.org>,
        bug-notification@plt-scheme.org
Subject: Re: [plt-bug] all/10908: check syntax on collects/racket/contract/private/provide.rkt
 	raises error
Date: Thu, 13 May 2010 10:26:36 -0600

 On 05/12/2010 11:20 PM, Robby Findler wrote:
 > Looking at the code, Id don't think that it executes the module
 > definition, but it does call eval-compile-time-part-of-top-level on
 > the module. Maybe that does it? (I'm not sure.)
 
 Yes, it does.
 
 I think when the language is set to "Determine language from source"
 (ie, the program is a full module), Check Syntax should just use
 'expand'. IIUC, the only time 'eval-compile-time...' is needed is for
 legacy "top-level" languages like R5RS and Pretty Big.
 
 Ryan
 
 
 > On Wed, May 12, 2010 at 11:21 PM, Ryan Culpepper<ryanc@ccs.neu.edu>
 > wrote:
 >> I think what Robby means by "the way life works..." is this: Check
 >> Syntax doesn't expand programs in an empty namespace; it already
 >> contains some attached module declarations (support for various
 >> tools). When you try to expand a module that's already present, it
 >> interprets that as trying to redefine the module's contents (see
 >> also compile-enforce-module-constants).
 >>
 >> What I don't understand is why expanding the module triggers the
 >> redefining-constant check. Does Check Syntax execute the module
 >> declaration afterwards? Can it be simply changed to not do so?
 >>
 >> Ryan
 >>
 >>
 >> Matthias Felleisen wrote:
 >>>
 >>> Huh? On May 12, 2010, at 10:10 PM, Robby Findler wrote:
 >>>
 >>>> Assuming this is a bug (it may just be the way life works
 >>>> because drracket has to share some parts of itself with the
 >>>> user program; we try to minimize that, but this may not be
 >>>> avoidable (altho I think it should be, I'm not sure)), then
 >>>> this is the kind of thing that we'd like to avoid via a
 >>>> dependency checker. (Our dependency checker that Eli made is
 >>>> not currently set up to check for this, but maybe we should
 >>>> think about making it do that.)
 >>
 >>

From: Robby Findler <robby@eecs.northwestern.edu>
To: Ryan Culpepper <ryanc@ccs.neu.edu>
Cc: Matthias Felleisen <matthias@ccs.neu.edu>,
        "bugs@plt-scheme.org" <bugs@plt-scheme.org>,
        bug-notification@plt-scheme.org
Subject: Re: [plt-bug] all/10908: check syntax on collects/racket/contract/private/provide.rkt
 raises error
Date: Sat, 25 Dec 2010 15:39:31 -0600

 On Thu, May 13, 2010 at 10:26 AM, Ryan Culpepper <ryanc@ccs.neu.edu> wrote:
 > On 05/12/2010 11:20 PM, Robby Findler wrote:
 >>
 >> Looking at the code, Id don't think that it executes the module
 >> definition, but it does call eval-compile-time-part-of-top-level on
 >> the module. Maybe that does it? (I'm not sure.)
 >
 > Yes, it does.
 >
 > I think when the language is set to "Determine language from source"
 > (ie, the program is a full module), Check Syntax should just use
 > 'expand'. IIUC, the only time 'eval-compile-time...' is needed is for
 > legacy "top-level" languages like R5RS and Pretty Big.
 
 Thanks, Ryan. That was it.
 
 Robby
State changed from "open" to "closed" by robby@racket-lang.org at Sat, 25 Dec 2010 16:53:27 -0500
Reason>>> A commit by robby@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/dd531dde9e
