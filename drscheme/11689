From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Tue Feb  1 08:56:15 2011
Received: from mail-fx0-f44.google.com (mail-fx0-f44.google.com [209.85.161.44])
	by champlain.ccs.neu.edu (8.14.4/8.14.3) with ESMTP id p11DuC2S002535
	for <bugs@bugs.plt-scheme.org>; Tue, 1 Feb 2011 08:56:12 -0500
Message-Id: <201102011356.p11Du6mj002528@champlain.ccs.neu.edu>
Date: Tue, 1 Feb 2011 08:56:06 -0500
From: mflatt@cs.utah.edu
To: bugs@racket-lang.org
Subject: image literals and operations in stand-alone exe

>Number:         11689
>Category:       drscheme
>Synopsis:       image literals and operations in stand-alone exe
>Class:          sw-bug
>Responsible:    robby
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Tue Feb 01 09:00:01 -0500 2011
>Last-Modified:  Fri Feb 04 07:32:02 -0500 2011
>Originator:     Matthew
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.1.0.2--2011-02-01(d97f6ff/g)
>Environment:
macosx "Darwin Matthew-Flatts-MacBook-Pro.local 10.6.0 Darwin Kernel Version 10.6.0: Wed Nov 10 18:13:17 PST 2010; root:xnu-1504.9.26~3/RELEASE_I386 i386" (i386-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 237172220

Collections:
("/Users/mflatt/Library/Racket/5.1.0.2/collects"
 (non-existent-path))
("/home/mflatt/proj/plt/collects"
 (".gitignore" "2htdp" "algol60" "at-exp" "b.rkt~" "browser" "combinator-parser" "compiler" "config" "data" "datalog" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "meta" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "picturing-programs" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "redex" "repo-time-stamp" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "sirmail" "slatex" "slideshow" "srfi" "srpersist" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tests" "tex2page" "texpict" "trace" "typed" "typed-sc!
 heme" "unstable" "version" "waterworld" "web-server" "wxme" "xml"))

Computer Language: (("Teaching Languages" "How to Design Programs" "Beginning Student") (#(#t constructor repeating-decimal #f #t none) #f ((lib "image.ss" "teachpack" "2htdp"))))
>Description:
>How-To-Repeat:
Create a BSL program

 (image-width <literal-image>)

where <literal-image> is replaced by a literal
image constant. The program runs fine, but when you create
a stand-alone executable and run it, the result is

 image-width: expected <image> as first argument, given:
 (object:image% ...)
>Fix:
>Audit-Trail:
From: Robby Findler <robby@eecs.northwestern.edu>
To: mflatt@cs.utah.edu, bugs@racket-lang.org
Cc: 
Subject: Re: [racket-bug] all/11689: image literals and operations in
 stand-alone exe
Date: Tue, 1 Feb 2011 14:19:07 -0600

 I feel like I should know the answer here, but I'm forgetting and I
 can't recall where to look in the manual anymore either :(
 
 Anyways, run I run this in drracket, I get #t, but in racket (and
 gracket), I get #f:
 
 #lang racket/base
 (require racket/snip racket/class)
 (is-a? <insert image here> image-snip%)
 
 What does it become?
 
 Robby
From: Matthew Flatt <mflatt@cs.utah.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: bugs@racket-lang.org
Subject: Re: [racket-bug] all/11689: image literals and operations in
 stand-alone exe
Date: Tue, 1 Feb 2011 13:38:54 -0700

 At Tue, 1 Feb 2011 14:19:07 -0600, Robby Findler wrote:
 > I feel like I should know the answer here, but I'm forgetting and I
 > can't recall where to look in the manual anymore either :(
 > 
 > Anyways, run I run this in drracket, I get #t, but in racket (and
 > gracket), I get #f:
 > 
 > #lang racket/base
 > (require racket/snip racket/class)
 > (is-a? <insert image here> image-snip%)
 > 
 > What does it become?
 
 `racket' and now `gracket' end up using the WXME reader, which
 unmarshals an image snip by creating an instance of a non-graphical
 stand-in.
 
 
 Contrast with
 
   racket -l racket/gui/init -t <prog>
 
 which installs a load handler so that the image snip is unmarshaled as
 an instance of the usual `image-snip%'.
 
 The old `gracket' was essentially like `racket -l racket/gui/init'.
 
 
 The solution for teaching-language executables may be to imitate the
 old `gracket' with
 
  (current-load text-editor-load-handler)
 
 before loading a module in source form.
 
 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: bugs@racket-lang.org
Subject: Re: [racket-bug] all/11689: image literals and operations in
 stand-alone exe
Date: Tue, 1 Feb 2011 14:59:44 -0600

 On Tue, Feb 1, 2011 at 2:38 PM, Matthew Flatt <mflatt@cs.utah.edu> wrote:
 > At Tue, 1 Feb 2011 14:19:07 -0600, Robby Findler wrote:
 >> I feel like I should know the answer here, but I'm forgetting and I
 >> can't recall where to look in the manual anymore either :(
 >>
 >> Anyways, run I run this in drracket, I get #t, but in racket (and
 >> gracket), I get #f:
 >>
 >> #lang racket/base
 >> (require racket/snip racket/class)
 >> (is-a? <insert image here> image-snip%)
 >>
 >> What does it become?
 >
 > `racket' and now `gracket' end up using the WXME reader, which
 > unmarshals an image snip by creating an instance of a non-graphical
 > stand-in.
 >
 >
 > Contrast with
 >
 >  racket -l racket/gui/init -t <prog>
 >
 > which installs a load handler so that the image snip is unmarshaled as
 > an instance of the usual `image-snip%'.
 >
 > The old `gracket' was essentially like `racket -l racket/gui/init'.
 >
 >
 > The solution for teaching-language executables may be to imitate the
 > old `gracket' with
 >
 >  (current-load text-editor-load-handler)
 >
 > before loading a module in source form.
 
 I see.
 
 In a future release is there any reason why the wxme reader can't
 create image-snip%s?
 
 If so, maybe it isn't worth fixing this, since it is hard to image a
 useful teaching language program that has image literals but doens't
 end up depending on racket/gui/base (via 2htdp/universe I suppose).
 What do you think about that?
 
 Robby
 
From: Matthew Flatt <mflatt@cs.utah.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: bugs@racket-lang.org
Subject: Re: [racket-bug] all/11689: image literals and operations in
 stand-alone exe
Date: Tue, 1 Feb 2011 14:03:21 -0700

 At Tue, 1 Feb 2011 14:59:44 -0600, Robby Findler wrote:
 > In a future release is there any reason why the wxme reader can't
 > create image-snip%s?
 
 None that I can see. Maybe it's fine to make that change now.
 
 > If so, maybe it isn't worth fixing this, since it is hard to image a
 > useful teaching language program that has image literals but doens't
 > end up depending on racket/gui/base (via 2htdp/universe I suppose).
 > What do you think about that?
 
 Doesn't work. Try importing `2htdp/universe' in your example program.
 The problem is that the read phase is so early that none of
 `racket/gui/base' is instantiated.
 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: bugs@racket-lang.org
Subject: Re: [racket-bug] all/11689: image literals and operations in
 stand-alone exe
Date: Tue, 1 Feb 2011 15:05:51 -0600

 On Tue, Feb 1, 2011 at 3:03 PM, Matthew Flatt <mflatt@cs.utah.edu> wrote:
 > At Tue, 1 Feb 2011 14:59:44 -0600, Robby Findler wrote:
 >> In a future release is there any reason why the wxme reader can't
 >> create image-snip%s?
 >
 > None that I can see. Maybe it's fine to make that change now.
 >
 >> If so, maybe it isn't worth fixing this, since it is hard to image a
 >> useful teaching language program that has image literals but doens't
 >> end up depending on racket/gui/base (via 2htdp/universe I suppose).
 >> What do you think about that?
 >
 > Doesn't work. Try importing `2htdp/universe' in your example program.
 > The problem is that the read phase is so early that none of
 > `racket/gui/base' is instantiated.
 
 Ah.
 
 So if you think the change above is too much, should I make the
 exectuable creation for the teaching languages require
 racket/gui/init?
 
 Robby
From: Matthew Flatt <mflatt@cs.utah.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: bugs@racket-lang.org
Subject: Re: [racket-bug] all/11689: image literals and operations in
 stand-alone exe
Date: Tue, 1 Feb 2011 14:07:59 -0700

 At Tue, 1 Feb 2011 15:05:51 -0600, Robby Findler wrote:
 > On Tue, Feb 1, 2011 at 3:03 PM, Matthew Flatt <mflatt@cs.utah.edu> wrote:
 > > At Tue, 1 Feb 2011 14:59:44 -0600, Robby Findler wrote:
 > >> In a future release is there any reason why the wxme reader can't
 > >> create image-snip%s?
 > >
 > > None that I can see. Maybe it's fine to make that change now.
 > >
 > >> If so, maybe it isn't worth fixing this, since it is hard to image a
 > >> useful teaching language program that has image literals but doens't
 > >> end up depending on racket/gui/base (via 2htdp/universe I suppose).
 > >> What do you think about that?
 > >
 > > Doesn't work. Try importing `2htdp/universe' in your example program.
 > > The problem is that the read phase is so early that none of
 > > `racket/gui/base' is instantiated.
 > 
 > Ah.
 > 
 > So if you think the change above is too much, should I make the
 > exectuable creation for the teaching languages require
 > racket/gui/init?
 
 Yes, requiring `racket/gui/init' before loading the main program sounds
 fine.
 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: bugs@racket-lang.org
Subject: Re: [racket-bug] all/11689: image literals and operations in
 stand-alone exe
Date: Tue, 1 Feb 2011 15:15:05 -0600

 I'm leaning towards adding -l racket/gui/init to the command-line for
 teaching language executables.
 
 Probably the wxme reader should change to actually create a bunch of
 different snips now that snips generally don't have to depend on the
 gui library so maybe better to do that all at once for the next
 release.
 
 ok?
 
 Robby
 
 On Tue, Feb 1, 2011 at 3:12 PM, Robby Findler
 <robby@eecs.northwestern.edu> wrote:
 > I'm looking at wxme.rkt and it looks like it knows the format that
 > image-snip saves files in, so it should be a matter of just exposing
 > some function somewhere that image-snip%'s snipclass calls to create
 > an image-snip via some lower-level api.
 >
 > Alternatively, it could just look and see if it has a bitmap object
 > and use that, but I'm not sure of all of the right permutations.
 >
 > Robby
 >
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: bugs@racket-lang.org
Subject: Re: [racket-bug] all/11689: image literals and operations in
 stand-alone exe
Date: Tue, 1 Feb 2011 15:12:33 -0600

 I'm looking at wxme.rkt and it looks like it knows the format that
 image-snip saves files in, so it should be a matter of just exposing
 some function somewhere that image-snip%'s snipclass calls to create
 an image-snip via some lower-level api.
 
 Alternatively, it could just look and see if it has a bitmap object
 and use that, but I'm not sure of all of the right permutations.
 
 Robby
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: bugs@racket-lang.org
Subject: Re: [racket-bug] all/11689: image literals and operations in
 stand-alone exe
Date: Tue, 1 Feb 2011 15:17:58 -0600

 On Tue, Feb 1, 2011 at 3:16 PM, Matthew Flatt <mflatt@cs.utah.edu> wrote:
 > At Tue, 1 Feb 2011 15:12:33 -0600, Robby Findler wrote:
 >> I'm looking at wxme.rkt and it looks like it knows the format that
 >> image-snip saves files in, so it should be a matter of just exposing
 >> some function somewhere that image-snip%'s snipclass calls to create
 >> an image-snip via some lower-level api.
 >
 > I don't think the image-snip% snipclass knows anything special about
 > creating `image-snip%'s. Everything about an `image-snip%' can be
 > instantiated from the outside, I believe.
 >
 > I hesitate making "wxme.rkt" depends on `racket/snip' and
 > `racket/draw'. It's probably fine, but I'd prefer to delay if we have
 > another option for HtDP executables. Then again, the problem can come
 > up with other programs that were formerly run via `gracket', so maybe
 > it's better to change now.
 
 We have an easy fix to tell people (add -l racket/gui/init to the
 command-line) and we can make a more informed decision by trying stuff
 out over the next 3 months, so I say we delay.
 
 Robby
From: Matthew Flatt <mflatt@cs.utah.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: bugs@racket-lang.org
Subject: Re: [racket-bug] all/11689: image literals and operations in
 stand-alone exe
Date: Tue, 1 Feb 2011 14:16:48 -0700

 At Tue, 1 Feb 2011 15:12:33 -0600, Robby Findler wrote:
 > I'm looking at wxme.rkt and it looks like it knows the format that
 > image-snip saves files in, so it should be a matter of just exposing
 > some function somewhere that image-snip%'s snipclass calls to create
 > an image-snip via some lower-level api.
 
 I don't think the image-snip% snipclass knows anything special about
 creating `image-snip%'s. Everything about an `image-snip%' can be
 instantiated from the outside, I believe.
 
 I hesitate making "wxme.rkt" depends on `racket/snip' and
 `racket/draw'. It's probably fine, but I'd prefer to delay if we have
 another option for HtDP executables. Then again, the problem can come
 up with other programs that were formerly run via `gracket', so maybe
 it's better to change now.
 
 
From: Matthew Flatt <mflatt@cs.utah.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: bugs@racket-lang.org
Subject: Re: [racket-bug] all/11689: image literals and operations in
 stand-alone exe
Date: Tue, 1 Feb 2011 14:18:18 -0700

 At Tue, 1 Feb 2011 15:17:58 -0600, Robby Findler wrote:
 > On Tue, Feb 1, 2011 at 3:16 PM, Matthew Flatt <mflatt@cs.utah.edu> wrote:
 > > At Tue, 1 Feb 2011 15:12:33 -0600, Robby Findler wrote:
 > >> I'm looking at wxme.rkt and it looks like it knows the format that
 > >> image-snip saves files in, so it should be a matter of just exposing
 > >> some function somewhere that image-snip%'s snipclass calls to create
 > >> an image-snip via some lower-level api.
 > >
 > > I don't think the image-snip% snipclass knows anything special about
 > > creating `image-snip%'s. Everything about an `image-snip%' can be
 > > instantiated from the outside, I believe.
 > >
 > > I hesitate making "wxme.rkt" depends on `racket/snip' and
 > > `racket/draw'. It's probably fine, but I'd prefer to delay if we have
 > > another option for HtDP executables. Then again, the problem can come
 > > up with other programs that were formerly run via `gracket', so maybe
 > > it's better to change now.
 > 
 > We have an easy fix to tell people (add -l racket/gui/init to the
 > command-line) and we can make a more informed decision by trying stuff
 > out over the next 3 months, so I say we delay.
 
 Ok, I agree.
 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: bugs@racket-lang.org
Subject: Re: [racket-bug] all/11689: image literals and operations in
 stand-alone exe
Date: Tue, 1 Feb 2011 15:27:54 -0600

 Hm. New problem. When I embed racket/gui/init I get the below. I'll
 poke around a little more about this, but if you already know the
 answer, let me know. ;)
 
 Robby
 
 write: cannot marshal value that is embedded in compiled code:
 (object:image-snip% ...)
 
  === context ===
 C:\Users\Administrator\git\plt\collects\compiler\cm.rkt:351:6
 C:\Users\Administrator\git\plt\collects\racket\private\more-scheme.rkt:149:2:
 call-with-break-parameterization
 C:\Users\Administrator\git\plt\collects\compiler\cm.rkt:171:5
 C:\Users\Administrator\git\plt\collects\compiler\cm.rkt:421:26
 C:\Users\Administrator\git\plt\collects\compiler\cm.rkt:414:42
 C:\Users\Administrator\git\plt\collects\compiler\cm.rkt:379:0: maybe-compile-zo
 C:\Users\Administrator\git\plt\collects\compiler\cm.rkt:488:2: do-check
 C:\Users\Administrator\git\plt\collects\compiler\cm.rkt:583:4:
 compilation-manager-load-handler
 standard-module-name-resolver
 C:\Users\Administrator\git\plt\collects\compiler\embed-unit.rkt:376:4: get-code
 C:\Users\Administrator\git\plt\collects\racket\private\map.rkt:45:11: for-each
 C:\Users\Administrator\git\plt\collects\compiler\embed-unit.rkt:827:4:
 do-write-module-bundle
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: bugs@racket-lang.org
Subject: Re: [racket-bug] all/11689: image literals and operations in
 stand-alone exe
Date: Tue, 1 Feb 2011 18:03:24 -0600

 Okay, I'm not really sure why this is happening now and not before,
 but it seems like a bug, but possibly just something minor in an error
 message(?).
 
 The program below, when C:\tmp.rkt contains the example from the PR
 (teaching language program with an inline image seems to be the thing)
 produces this error:
 
    write: cannot marshal value that is embedded in compiled code:
 (object:image-snip% ...)
 
 but there should not be any compilation going on because of the
 #:src-filter argument, I think.
 
 Robby
 
 #lang racket
 (require compiler/embed)
 
 (create-embedding-executable
  "C:\\tmp.zip"
  #:modules `((#f ,(string->path "C:\\tmp.rkt")))
  #:cmdline `("-l"
              "scheme/base"
              "-e"
              ,(format "~s" `(#%require 'tmp)))
  #:src-filter
  (λ (path) #t)
  #:mred? #t)
 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: bugs@racket-lang.org
Subject: Re: [racket-bug] all/11689: image literals and operations in
 stand-alone exe
Date: Tue, 1 Feb 2011 18:38:09 -0600

 I'm totally baffled -- now I get the failure to compile message in
 drracket too, but I don't see any difference in the tree between my
 version and the checked in one. I'll try the release version now, just
 to see if I'm really crazy or not.
 
 Robby
From: Matthew Flatt <mflatt@cs.utah.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: bugs@racket-lang.org
Subject: Re: [racket-bug] all/11689: image literals and operations in
 stand-alone exe
Date: Tue, 1 Feb 2011 17:38:42 -0700

 This is a multi-part message in MIME format.
 -----955523295979-----
 Content-Type: text/plain; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 I'm not able to replicate the error.
 
 Enclosed is the "img.rkt" that I was using in place of "tmp.rkt". Can
 you send me the file that you were using?
 
 At Tue, 1 Feb 2011 18:03:24 -0600, Robby Findler wrote:
 > Okay, I'm not really sure why this is happening now and not before,
 > but it seems like a bug, but possibly just something minor in an error
 > message(?).
 >=20
 > The program below, when C:\tmp.rkt contains the example from the PR
 > (teaching language program with an inline image seems to be the thing)
 > produces this error:
 >=20
 >    write: cannot marshal value that is embedded in compiled code:
 > (object:image-snip% ...)
 >=20
 > but there should not be any compilation going on because of the
 > #:src-filter argument, I think.
 >=20
 > Robby
 >=20
 > #lang racket
 > (require compiler/embed)
 >=20
 > (create-embedding-executable
 >  "C:\\tmp.zip"
 >  #:modules `((#f ,(string->path "C:\\tmp.rkt")))
 >  #:cmdline `("-l"
 >              "scheme/base"
 >              "-e"
 >              ,(format "~s" `(#%require 'tmp)))
 >  #:src-filter
 >  (=CE=BB (path) #t)
 >  #:mred? #t)
 -----955523295979-----
 Content-Type: application/octet-stream;
 	name="img.rkt"
 Content-Transfer-Encoding: base64
 Content-Disposition: attachment; 
 	filename="img.rkt"
 
 I3JlYWRlcihsaWIicmVhZC5zcyIid3htZSIpV1hNRTAxMDggIyMgCiN8CiAgIFRoaXMgZmls
 ZSB1c2VzIHRoZSBHUmFja2V0IGVkaXRvciBmb3JtYXQuCiAgIE9wZW4gdGhpcyBmaWxlIGlu
 IERyUmFja2V0IHZlcnNpb24gNS4xLjAuMiBvciBsYXRlciB0byByZWFkIGl0LgoKICAgTW9z
 dCBsaWtlbHksIGl0IHdhcyBjcmVhdGVkIGJ5IHNhdmluZyBhIHByb2dyYW0gaW4gRHJSYWNr
 ZXQsCiAgIGFuZCBpdCBwcm9iYWJseSBjb250YWlucyBhIHByb2dyYW0gd2l0aCBub24tdGV4
 dCBlbGVtZW50cwogICAoc3VjaCBhcyBpbWFnZXMgb3IgY29tbWVudCBib3hlcykuCgogICAg
 ICAgICAgICBodHRwOi8vcmFja2V0LWxhbmcub3JnLwp8IwogNDQgNyAjInd4dGV4dFwwIgoz
 IDEgNiAjInd4dGFiXDAiCjEgMSA4ICMid3hpbWFnZVwwIgoyIDAgOCAjInd4bWVkaWFcMCIK
 NCAxIDM0ICMiKGxpYiBcInN5bnRheC1icm93c2VyLnNzXCIgXCJtcmxpYlwiKVwwIgoxIDAg
 MTYgIyJkcnNjaGVtZTpudW1iZXJcMCIKMyAwIDQ0ICMiKGxpYiBcIm51bWJlci1zbmlwLnNz
 XCIgXCJkcnNjaGVtZVwiIFwicHJpdmF0ZVwiKVwwIgoxIDAgMzYgIyIobGliIFwiY29tbWVu
 dC1zbmlwLnNzXCIgXCJmcmFtZXdvcmtcIilcMCIKMSAwIDQzICMiKGxpYiBcImNvbGxhcHNl
 ZC1zbmlwY2xhc3Muc3NcIiBcImZyYW1ld29ya1wiKVwwIgowIDAgMTkgIyJkcnNjaGVtZTpz
 ZXhwLXNuaXBcMCIKMCAwIDM2ICMiKGxpYiBcImNhY2hlLWltYWdlLXNuaXAuc3NcIiBcIm1y
 bGliXCIpXDAiCjEgMCA2OAooCiAjIigobGliIFwiaW1hZ2UtY29yZS5zc1wiIFwibXJsaWJc
 IikgKGxpYiBcImltYWdlLWNvcmUtd3htZS5ya3RcIiBcIm1yIgogIyJsaWJcIikpXDAiCikg
 MSAwIDMzICMiKGxpYiBcImJ1bGxldC1zbmlwLnNzXCIgXCJicm93c2VyXCIpXDAiCjAgMCAy
 OSAjImRyc2NoZW1lOmJpbmRpbmdzLXNuaXBjbGFzcyVcMCIKMSAwIDI1ICMiKGxpYiBcIm1h
 dHJpeC5zc1wiIFwiaHRkcFwiKVwwIgoxIDAgMjIgIyJkcnNjaGVtZTpsYW1iZGEtc25pcCVc
 MCIKMSAwIDggIyJnYjpjb3JlXDAiCjUgMCAxMCAjImdiOmNhbnZhc1wwIgo1IDAgMTcgIyJn
 YjplZGl0b3ItY2FudmFzXDAiCjUgMCAxMCAjImdiOnNsaWRlclwwIgo1IDAgOSAjImdiOmdh
 dWdlXDAiCjUgMCAxMSAjImdiOmxpc3Rib3hcMCIKNSAwIDEyICMiZ2I6cmFkaW9ib3hcMCIK
 NSAwIDEwICMiZ2I6Y2hvaWNlXDAiCjUgMCA4ICMiZ2I6dGV4dFwwIgo1IDAgMTEgIyJnYjpt
 ZXNzYWdlXDAiCjUgMCAxMCAjImdiOmJ1dHRvblwwIgo1IDAgMTIgIyJnYjpjaGVja2JveFww
 Igo1IDAgMTggIyJnYjp2ZXJ0aWNhbC1wYW5lbFwwIgo1IDAgOSAjImdiOnBhbmVsXDAiCjUg
 MCAyMCAjImdiOmhvcml6b250YWwtcGFuZWxcMCIKNSAwIDMzICMiKGxpYiBcInJlYWRhYmxl
 LnNzXCIgXCJndWlidWlsZGVyXCIpXDAiCjEgMCA1NwojIihsaWIgXCJocnVsZS1zbmlwLnJr
 dFwiIFwibWFjcm8tZGVidWdnZXJcIiBcInN5bnRheC1icm93c2VyXCIpXDAiCjEgMCA0NSAj
 IihsaWIgXCJpbWFnZS1zbmlwci5zc1wiIFwic2xpZGVzaG93XCIgXCJwcml2YXRlXCIpXDAi
 CjEgMCAyNiAjImRyc2NoZW1lOnBpY3QtdmFsdWUtc25pcCVcMCIKMCAwIDM4ICMiKGxpYiBc
 InBpY3Qtc25pcGNsYXNzLnNzXCIgXCJzbGlkZXNob3dcIilcMCIKMiAwIDU1ICMiKGxpYiBc
 InZlcnRpY2FsLXNlcGFyYXRvci1zbmlwLnNzXCIgXCJzdGVwcGVyXCIgXCJwcml2YXRlXCIp
 XDAiCjEgMCAxOCAjImRyc2NoZW1lOnhtbC1zbmlwXDAiCjEgMCAzMSAjIihsaWIgXCJ4bWwt
 c25pcGNsYXNzLnNzXCIgXCJ4bWxcIilcMCIKMSAwIDIxICMiZHJzY2hlbWU6c2NoZW1lLXNu
 aXBcMCIKMiAwIDM0ICMiKGxpYiBcInNjaGVtZS1zbmlwY2xhc3Muc3NcIiBcInhtbFwiKVww
 IgoxIDAgMTAgIyJ0ZXh0LWJveCVcMCIKMSAwIDMyICMiKGxpYiBcInRleHQtc25pcGNsYXNz
 LnNzXCIgXCJ4bWxcIilcMCIKMSAwIDE1ICMidGVzdC1jYXNlLWJveCVcMCIKMiAwIDEgNiAj
 Ind4bG9jXDAiCiAgICAgICAgICAwIDAgNTAgMCAxICMiXDAiCjAgNzUgMSAjIlwwIgowIDEy
 IDkwIC0xIDkwIC0xIDMgLTEgMCAxIDAgMSAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMjU1IDI1
 NSAyNTUgMSAtMSAwIDkKIyJTdGFuZGFyZFwwIgowIDc1IDcgIyJNb25hY29cMCIKMCAxMSA5
 MCAtMSA5MCAtMSAxIC0xIDAgMSAwIDEgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDI1NSAyNTUg
 MjU1IDEgLTEgMiAxCiMiXDAiCjAgLTEgMSAjIlwwIgoxIDAgLTEgLTEgLTEgLTEgLTEgLTEg
 MCAwIDAgMCAwIDAgMSAxIDEgMSAxIDEgMCAwIDAgMCAwIDAgLTEgLTEgMiAyNAojImZyYW1l
 d29yazpkZWZhdWx0LWNvbG9yXDAiCjAgLTEgMSAjIlwwIgoxIDAgLTEgLTEgLTEgLTEgLTEg
 LTEgMCAwIDAgMCAwIDAgMCAwIDAgMSAxIDEgMCAwIDAgMCAwIDAgLTEgLTEgMiAxCiMiXDAi
 CjAgLTEgMSAjIlwwIgoxIDAgLTEgLTEgLTEgLTEgLTEgLTEgMCAwIDAgMCAwIDAgMCAwIDAg
 MSAxIDEgMTUwIDAgMTUwIDAgMCAwIC0xIC0xIDIgMTUKIyJ0ZXh0OnBvcnRzIG91dFwwIgow
 IC0xIDEgIyJcMCIKMSAwIC0xIC0xIC0xIC0xIC0xIC0xIDAgMCAwIDAgMCAwIDAgMCAwIDEg
 MSAxIDE1MCAwIDE1MCAwIDAgMCAtMSAtMSAyIDEKIyJcMCIKMCAtMSAxICMiXDAiCjEuMCAw
 IC0xIC0xIDkzIC0xIC0xIC0xIDAgMCAwIDAgMCAwIDAgMCAwIDEuMCAxLjAgMS4wIDI1NSAw
 IDAgMCAwIDAgLTEKLTEgMiAxNSAjInRleHQ6cG9ydHMgZXJyXDAiCjAgLTEgMSAjIlwwIgox
 LjAgMCAtMSAtMSA5MyAtMSAtMSAtMSAwIDAgMCAwIDAgMCAwIDAgMCAxLjAgMS4wIDEuMCAy
 NTUgMCAwIDAgMCAwIC0xCi0xIDIgMSAjIlwwIgowIC0xIDEgIyJcMCIKMSAwIC0xIC0xIC0x
 IC0xIC0xIC0xIDAgMCAwIDAgMCAwIDAgMCAwIDEgMSAxIDAgMCAxNzUgMCAwIDAgLTEgLTEg
 MiAxNwojInRleHQ6cG9ydHMgdmFsdWVcMCIKMCAtMSAxICMiXDAiCjEgMCAtMSAtMSAtMSAt
 MSAtMSAtMSAwIDAgMCAwIDAgMCAwIDAgMCAxIDEgMSAwIDAgMTc1IDAgMCAwIC0xIC0xIDIg
 MQojIlwwIgowIC0xIDEgIyJcMCIKMS4wIDAgOTIgLTEgLTEgLTEgLTEgLTEgMCAwIDAgMCAw
 IDAgMCAwIDAgMS4wIDEuMCAxLjAgMzQgMTM5IDM0IDAgMCAwIC0xCi0xIDIgMjcgIyJNYXRj
 aGluZyBQYXJlbnRoZXNpcyBTdHlsZVwwIgowIC0xIDEgIyJcMCIKMS4wIDAgOTIgLTEgLTEg
 LTEgLTEgLTEgMCAwIDAgMCAwIDAgMCAwIDAgMS4wIDEuMCAxLjAgMzQgMTM5IDM0IDAgMCAw
 IC0xCi0xIDIgMSAjIlwwIgowIC0xIDEgIyJcMCIKMSAwIC0xIC0xIC0xIC0xIC0xIC0xIDAg
 MCAwIDAgMCAwIDAgMCAwIDEgMSAxIDM4IDM4IDEyOCAwIDAgMCAtMSAtMSAyIDM3CiMiZnJh
 bWV3b3JrOnN5bnRheC1jb2xvcjpzY2hlbWU6c3ltYm9sXDAiCjAgLTEgMSAjIlwwIgoxIDAg
 LTEgLTEgLTEgLTEgLTEgLTEgMCAwIDAgMCAwIDAgMCAwIDAgMSAxIDEgMzggMzggMTI4IDAg
 MCAwIC0xIC0xIDIgMzgKIyJmcmFtZXdvcms6c3ludGF4LWNvbG9yOnNjaGVtZTprZXl3b3Jk
 XDAiCjAgLTEgMSAjIlwwIgoxIDAgLTEgLTEgLTEgLTEgLTEgLTEgMCAwIDAgMCAwIDAgMCAw
 IDAgMSAxIDEgMzggMzggMTI4IDAgMCAwIC0xIC0xIDIgMQojIlwwIgowIC0xIDEgIyJcMCIK
 MSAwIC0xIC0xIC0xIC0xIC0xIC0xIDAgMCAwIDAgMCAwIDAgMCAwIDEgMSAxIDE5NCAxMTYg
 MzEgMCAwIDAgLTEgLTEgMgozOCAjImZyYW1ld29yazpzeW50YXgtY29sb3I6c2NoZW1lOmNv
 bW1lbnRcMCIKMCAtMSAxICMiXDAiCjEgMCAtMSAtMSAtMSAtMSAtMSAtMSAwIDAgMCAwIDAg
 MCAwIDAgMCAxIDEgMSAxOTQgMTE2IDMxIDAgMCAwIC0xIC0xIDIgMQojIlwwIgowIC0xIDEg
 IyJcMCIKMSAwIC0xIC0xIC0xIC0xIC0xIC0xIDAgMCAwIDAgMCAwIDAgMCAwIDEgMSAxIDQx
 IDEyOCAzOCAwIDAgMCAtMSAtMSAyIDM3CiMiZnJhbWV3b3JrOnN5bnRheC1jb2xvcjpzY2hl
 bWU6c3RyaW5nXDAiCjAgLTEgMSAjIlwwIgoxIDAgLTEgLTEgLTEgLTEgLTEgLTEgMCAwIDAg
 MCAwIDAgMCAwIDAgMSAxIDEgNDEgMTI4IDM4IDAgMCAwIC0xIC0xIDIgMzkKIyJmcmFtZXdv
 cms6c3ludGF4LWNvbG9yOnNjaGVtZTpjb25zdGFudFwwIgowIC0xIDEgIyJcMCIKMSAwIC0x
 IC0xIC0xIC0xIC0xIC0xIDAgMCAwIDAgMCAwIDAgMCAwIDEgMSAxIDQxIDEyOCAzOCAwIDAg
 MCAtMSAtMSAyIDEKIyJcMCIKMCAtMSAxICMiXDAiCjEgMCAtMSAtMSAtMSAtMSAtMSAtMSAw
 IDAgMCAwIDAgMCAwIDAgMCAxIDEgMSAxMzIgNjAgMzYgMCAwIDAgLTEgLTEgMiA0MgojImZy
 YW1ld29yazpzeW50YXgtY29sb3I6c2NoZW1lOnBhcmVudGhlc2lzXDAiCjAgLTEgMSAjIlww
 IgoxIDAgLTEgLTEgLTEgLTEgLTEgLTEgMCAwIDAgMCAwIDAgMCAwIDAgMSAxIDEgMTMyIDYw
 IDM2IDAgMCAwIC0xIC0xIDIgMQojIlwwIgowIC0xIDEgIyJcMCIKMSAwIC0xIC0xIC0xIC0x
 IC0xIC0xIDAgMCAwIDAgMCAwIDAgMCAwIDEgMSAxIDI1NSAwIDAgMCAwIDAgLTEgLTEgMiAz
 NgojImZyYW1ld29yazpzeW50YXgtY29sb3I6c2NoZW1lOmVycm9yXDAiCjAgLTEgMSAjIlww
 IgoxIDAgLTEgLTEgLTEgLTEgLTEgLTEgMCAwIDAgMCAwIDAgMCAwIDAgMSAxIDEgMjU1IDAg
 MCAwIDAgMCAtMSAtMSAyIDEKIyJcMCIKMCAtMSAxICMiXDAiCjEgMCAtMSAtMSAtMSAtMSAt
 MSAtMSAwIDAgMCAwIDAgMCAwIDAgMCAxIDEgMSAwIDAgMCAwIDAgMCAtMSAtMSAyIDM2CiMi
 ZnJhbWV3b3JrOnN5bnRheC1jb2xvcjpzY2hlbWU6b3RoZXJcMCIKMCAtMSAxICMiXDAiCjEg
 MCAtMSAtMSAtMSAtMSAtMSAtMSAwIDAgMCAwIDAgMCAwIDAgMCAxIDEgMSAwIDAgMCAwIDAg
 MCAtMSAtMSAyIDEKIyJcMCIKMCAtMSAxICMiXDAiCjEgMCAtMSAtMSAtMSAtMSAtMSAtMSAw
 IDAgMCAwIDAgMCAwIDAgMCAxIDEgMSA4MSAxMTIgMjAzIDAgMCAwIC0xIC0xIDIKMzggIyJk
 cnJhY2tldDpjaGVjay1zeW50YXg6bGV4aWNhbGx5LWJvdW5kXDAiCjAgLTEgMSAjIlwwIgox
 IDAgLTEgLTEgLTEgLTEgLTEgLTEgMCAwIDAgMCAwIDAgMCAwIDAgMSAxIDEgODEgMTEyIDIw
 MyAwIDAgMCAtMSAtMSAyIDEKIyJcMCIKMCAtMSAxICMiXDAiCjEgMCAtMSAtMSAtMSAtMSAt
 MSAtMSAwIDAgMCAwIDAgMCAwIDAgMCAxIDEgMSAxNzggMzQgMzQgMCAwIDAgLTEgLTEgMiAy
 OAojImRycmFja2V0OmNoZWNrLXN5bnRheDpzZXQhZFwwIgowIC0xIDEgIyJcMCIKMSAwIC0x
 IC0xIC0xIC0xIC0xIC0xIDAgMCAwIDAgMCAwIDAgMCAwIDEgMSAxIDE3OCAzNCAzNCAwIDAg
 MCAtMSAtMSAyIDEKIyJcMCIKMCAtMSAxICMiXDAiCjEgMCAtMSAtMSAtMSAtMSAtMSAtMSAw
 IDAgMCAwIDAgMCAwIDAgMCAxIDEgMSA2OCAwIDIwMyAwIDAgMCAtMSAtMSAyIDMxCiMiZHJy
 YWNrZXQ6Y2hlY2stc3ludGF4OmltcG9ydGVkXDAiCjAgLTEgMSAjIlwwIgoxIDAgLTEgLTEg
 LTEgLTEgLTEgLTEgMCAwIDAgMCAwIDAgMCAwIDAgMSAxIDEgNjggMCAyMDMgMCAwIDAgLTEg
 LTEgMiA0NwojImRycmFja2V0OmNoZWNrLXN5bnRheDpteS1vYmxpZ2F0aW9uLXN0eWxlLXBy
 ZWZcMCIKMCAtMSAxICMiXDAiCjEgMCAtMSAtMSAtMSAtMSAtMSAtMSAwIDAgMCAwIDAgMCAw
 IDAgMCAxIDEgMSAxNzggMzQgMzQgMCAwIDAgLTEgLTEgMiAxCiMiXDAiCjAgLTEgMSAjIlww
 IgoxIDAgLTEgLTEgLTEgLTEgLTEgLTEgMCAwIDAgMCAwIDAgMCAwIDAgMSAxIDEgMCAxMTYg
 MCAwIDAgMCAtMSAtMSAyIDUwCiMiZHJyYWNrZXQ6Y2hlY2stc3ludGF4OnRoZWlyLW9ibGln
 YXRpb24tc3R5bGUtcHJlZlwwIgowIC0xIDEgIyJcMCIKMSAwIC0xIC0xIC0xIC0xIC0xIC0x
 IDAgMCAwIDAgMCAwIDAgMCAwIDEgMSAxIDAgMTE2IDAgMCAwIDAgLTEgLTEgMiA0OAojImRy
 cmFja2V0OmNoZWNrLXN5bnRheDp1bmstb2JsaWdhdGlvbi1zdHlsZS1wcmVmXDAiCjAgLTEg
 MSAjIlwwIgoxIDAgLTEgLTEgLTEgLTEgLTEgLTEgMCAwIDAgMCAwIDAgMCAwIDAgMSAxIDEg
 MCAwIDAgMCAwIDAgLTEgLTEgMiAxCiMiXDAiCjAgLTEgMSAjIlwwIgoxIDAgLTEgLTEgLTEg
 LTEgLTEgLTEgMCAwIDAgMCAwIDAgMCAwIDAgMSAxIDEgMTM5IDE0MiAyOCAwIDAgMCAtMSAt
 MSAyCjQ5ICMiZHJyYWNrZXQ6Y2hlY2stc3ludGF4OmJvdGgtb2JsaWdhdGlvbi1zdHlsZS1w
 cmVmXDAiCjAgLTEgMSAjIlwwIgoxIDAgLTEgLTEgLTEgLTEgLTEgLTEgMCAwIDAgMCAwIDAg
 MCAwIDAgMSAxIDEgMTM5IDE0MiAyOCAwIDAgMCAtMSAtMSA0IDEKIyJcMCIKMCA3MCAxICMi
 XDAiCjEuMCAwIC0xIC0xIC0xIC0xIC0xIC0xIDAgMCAwIDAgMCAwIDEuMCAxLjAgMS4wIDEu
 MCAxLjAgMS4wIDAgMCAwIDAgMCAwCi0xIC0xIDQgNCAjIlhNTFwwIgowIDcwIDEgIyJcMCIK
 MS4wIDAgLTEgLTEgLTEgLTEgLTEgLTEgMCAwIDAgMCAwIDAgMS4wIDEuMCAxLjAgMS4wIDEu
 MCAxLjAgMCAwIDAgMCAwIDAKLTEgLTEgNCAxICMiXDAiCjAgNzEgMSAjIlwwIgoxLjAgMCAt
 MSAtMSAtMSAtMSAtMSAtMSAwIDAgMCAwIDAgMCAxLjAgMS4wIDEuMCAxLjAgMS4wIDEuMCAw
 IDAgMCAwIDAgMAotMSAtMSA0IDEgIyJcMCIKMCAtMSAxICMiXDAiCjEuMCAwIC0xIC0xIC0x
 IC0xIC0xIC0xIDEgMCAwIDAgMCAwIDAgMCAwIDEuMCAxLjAgMS4wIDAgMCAyNTUgMCAwIDAg
 LTEKLTEgNCAxICMiXDAiCjAgNzEgMSAjIlwwIgoxLjAgMCAtMSAtMSAtMSAtMSAtMSAtMSAx
 IDAgMCAwIDAgMCAwIDAgMCAxLjAgMS4wIDEuMCAwIDAgMjU1IDAgMCAwIC0xCi0xIDQgMSAj
 IlwwIgowIDcxIDEgIyJcMCIKMS4wIDAgLTEgLTEgLTEgLTEgLTEgLTEgMCAwIDAgMCAwIDAg
 MCAwIDAgMS4wIDEuMCAxLjAgMCAxMDAgMCAwIDAgMCAtMQotMSAyIDEgIyJcMCIKMCA3MSAx
 ICMiXDAiCjEuMCAwIC0xIC0xIC0xIC0xIC0xIC0xIDAgMCAwIDAgMCAwIDEuMCAxLjAgMS4w
 IDEuMCAxLjAgMS4wIDAgMCAwIDAgMCAwCi0xIC0xIDIgMSAjIlwwIgowIDcxIDEgIyJcMCIK
 MS4wIDAgLTEgLTEgLTEgLTEgLTEgLTEgMCAwIDAgMCAwIDAgMCAwIDAgMS4wIDEuMCAxLjAg
 MCAxMDAgMCAwIDAgMCAtMQotMSAwIDEgIyJcMCIKMCAtMSAxICMiXDAiCjAgMTMgLTEgLTEg
 LTEgLTEgLTEgLTEgMCAwIDAgMCAwIDAgMS4wIDEuMCAxLjAgMS4wIDEuMCAxLjAgMCAwIDAg
 MCAwIDAKLTEgLTEgMiAxICMiXDAiCjAgLTEgMSAjIlwwIgowIDEzIC0xIC0xIC0xIC0xIC0x
 IC0xIDAgMCAwIDAgMCAwIDEuMCAxLjAgMS4wIDEuMCAxLjAgMS4wIDAgMCAwIDAgMCAwCi0x
 IC0xIDAgMSAjIlwwIgowIC0xIDEgIyJcMCIKMSAwIC0xIC0xIC0xIC0xIC0xIC0xIDAgMCAw
 IDAgMCAwIDAgMCAwIDEgMSAxIDIwMCAwIDAgMCAwIDAgLTEgLTEKICAgICAgICAgIDAgMTkg
 MCAyNiAzIDEyICMiI2xhbmcgcmFja2V0IgowIDAgNCAyOSAxICMiXG4iCjAgMCAyMiAzIDEg
 IyIoIgowIDAgMTQgMyA3ICMicmVxdWlyZSIKMCAwIDQgMyAxICMiICIKMCAwIDE0IDMgMTEg
 IyJyYWNrZXQvc25pcCIKMCAwIDQgMjkgMSAjIlxuIgowIDAgNCAzIDkgIyIgICAgICAgICAi
 CjAgMCAxNCAzIDEyICMicmFja2V0L2NsYXNzIgowIDAgMjIgMyAxICMiKSIKMCAwIDQgMjkg
 MSAjIlxuIgowIDAgMjIgMyAxICMiKCIKMCAwIDE0IDMgNSAjImlzLWE/IgowIDAgNCAzIDEg
 IyIgIgowIDIgICAgICAgICAgNDEgNCAxICMiXDAiCjIgLTEuMCAtMS4wIDAuMCAwLjAgMCAg
 ICAgICAgICAxNSA1MDAKKAogIyJcMjExUE5HXHJcblwzMlxuXDBcMFwwXHJJSERSXDBcMFww
 WFwwXDBcMFVcYiIKICMiXDZcMFwwXDBcMzE1XHYjXDM1MlwwXDBcMFw2YktHRFwwXDM3N1ww
 XDM3N1wwXDM3N1wyNDBcMjc1XDI0NyIKICMiXDIyM1wwXDBcMDM0MUlEQVR4XDIzNFwzNTVc
 MjM0eVwyMjBcMzVcMzA1XDIzNVwzNDc/XDIzMVwzNjVcMzM2XDM1M24iCiAjIlwyNjVcMjcy
 WyctXDFcMiRAXDIhQFwyMDBcMjFCXDIzMFNcMzA2XFxcdlwzMzBcMzBcMjE3PVwzIgogIyJc
 MjM2XDI2MVwyNjFnY1wzNTRcMjM1WVxlXGFcMzY2XDMxNnpcMjc0XDI3MzNcMjNcMjNeOyZi
 Z1wzNFwyNjEiCiAjIlwzNDNcMzYwXDM1NlwzMzBcMzQzXDM2NTFcMzQzXDIyNVwzMDFcMzA3
 XDMzMCIKICMiXDMwYy9cMjQ3XDI2MVwyNjAxXDM0MjBcMjA3OHQiCiAjIlx2JFwyMDRuXDI1
 MVwzMjVcMzc1XDIxNlwyNTJcMzE0XDMzN1wzNzYiCiAjIlFcMjI1VVlcMzY1XDM1MlwyNzVc
 MzU2XDMyNlwxXDI2MVwyMSIKICMiXDM3M3tRXDM2MVwzNTJcMzEwXDI1NFwzMTJcMzc0XDMy
 NjdcMjc3IgogIyJcMzcxXDM3M2VlXDIyNVwib1wyMTJcMzE2JlwzNDNcMzQiCiAjIndpXDMz
 NHlcMzEyXDMyMlx2XDIzNVwyNTVcYVwzNzJcMjQ3IgogIyJcMzAzXDMxNFwwMzEwY3pcMjQ1
 XDMyMjcgUlwzNTNcMjAzSlwwJlJcMjUyPlwyNDZUXDM3NWBcMzBcMzU2IgogIyJcMzMxXHZc
 MzMzXDM2NlwyXDM3M1wxU3JOd1wzMTUiCiAjIlwzNjFcMzEyWyxcMjUzXDIzN1wyNjdcMjMw
 X1wzMTBcMzI3XDI1MSIKICMiXDI1NFwyMzZcMjQ1XDM0N1wyNTN0KVhZXDMwMVwzMDcrIgog
 IyJUXDI2MVwzNjBcMzVcMVwzNTVcMzUzXDIzM3lcMzAyXDMxZyIKICMiLDlnXDMyMVwyNDJF
 XDM1NzhcMzYxXDMwNFwzNzFcMzQ3XDE2XDE3XDE3XDIzN1pcMjUzXHJcMzE2aTR6XDZ3Igog
 IyJcMzU2XDMyNFwyNzUvXDI3N1wyNTRcMzY1XDIxM2stXDMwNlxiIgogIyJcMjEwRVwyNjBY
 XDMzMzJcMzI2XDMyNlwzMDdcMzA0XDIxNlwzNTUiCiAjIlwxN1wyNDN9XDMzM1wyNDNwXDM0
 N1wyNTNcMzE1XDM0NlwyNDZnIgogIyJcMjE0WVwyNjcmXDIxMlwzMjZcMjc2XGJcMzU0K1xc
 XDI2MyIKICMiXDI1NFwyNzRlXDM2NS1cMjQ2L1wyNTNLXDI2MVwyNTZlIgogIyJcMzQ3bFwz
 MTNcMjUzJlwyMzBcMzYwXDI1MFwzMzBcMzYxXDM2M1wyNyIKICMiLVwyNzJcMzU0XDI2Mlwz
 MTNcMjU3WXZcMzIxXDVcMzI3LiIKICMiWFwyNjBcMzQwXDM3NFwyMzFcM1wyMDNcMzAzXDI3
 NTVcMjE1UiBcIlwyMDAgYlwxIVwyMTIsXDI1N1wyNzVcMjZxIgogIyJcMzE3XDM2N1s8XDM2
 MVwyMDRJXDM2NltcMjBBXDIyMHhcMzVBXDMwNGBcMzE0XDIzMDVmXDM1N1wzMjZ6YyIKICMi
 XDMyM29cMzUyXDI0M1wyNzdcMjczXDMxN1wyMzBcMzM3Plw0XDM2NSIKICMiXDM1NW9VXDI3
 NVwyNzJcMzMxZFwzNTdcMzEwXDM0MVwzMzAiCiAjIlwzNDBcclwzN1wzNzBcMzAwNVdcMjc3
 XDM2M1wzMjJcMzMzXDMxN1wzNlwyMzZzXDMwNVwzNTRcMjYwIgogIyI1WDk0XDJcMjI1XG5c
 MzIxaVwyNDchXDI2M2dcMjQzXDI0MihcMTgiCikgNTAwCigKICMiXDZcMzMyWlwyMTNcMjY1
 XDZcMjQ1XDRjXGZcMzY3XDMzNCIKICMiXDMyM2RcMzI1XDI1MlwyMFwzMDFcMV1cMzcwT1wz
 MFwzNiIKICMiXDM0N29cMjFcMjY2dlwyNzdRb1wyNTZcMjc1XDE3N3QiCiAjIlwzNDRcMjYx
 b1wzMDMrXDI3NyRcMjI2XDIyMlwyNjdcMzA1XDIxMiIKICMiXDBcMzAzXDMwNEAuXDMzNlwy
 MTRcMzY2XDIzMzMwMFwzNTNcMjE3blwyNzJcMzUxXDAwMzdcMjM1flwzNzJcMjc3XXQiCiAj
 InBcMzQ0XDIzNFwyNzZcMjY1L1wyNDBfeVw1dVwzNTAiCiAjIlwyMFwyMDFcMlwyMTVCTVwy
 MzdcMjAxXDM3MVwyNTNcMjc3XCIiCiAjIlwyNzRcMzU0Mmg0UnBcMjE1MVwyNzFcMTc3XDIy
 MSIKICMiXDIxMFwyNTd+XDI2NVwzMTZcMzE3XDM1NlwxN1wyMTFBXDIxNVwyMCIKICMiMSAm
 XDFcMzM1JCBcMzA3XDIyMixcMjJcMzQzaVwyNDJRXDMyM2xcMjU2XDE3N1wzNjRcMzAwXDIw
 MUdcMjc2XDIiCiAjImt+XGZcMjA0XDM0M1wzMjRjXCJ1XDIzNlwyMTR8XDI0NlwyNDBcMjE2
 XDMyN3k5K1wzNTJuXDI2MSNcMFwyNTAiCiAjIlwzNzV+XDI2NXpcMzMzXDM1NVwzMTNcMjI3
 XDMzN1wyNjVcMzIwXDIzMCIKICMiXDMwNVwyNzVcZVwzMjZcMjNcMjEwUFVQQVwyMShFXDBo
 XDIyN1wyNTFWI1wzNzRcMzA3XDI1N1wyMVwyNTZYIgogIyJcMjAxNFwzMlhrXDIxMVwyNDJc
 MjEwKFwyMTIwXDMwNlwyMEVcMjFcMzI2XDMyRkdDXDM1NlwzNzJcMzE0KFwyMzMiCiAjIjZc
 MjA1XHRcMjQwUVxmdFwyXDI2MEhcMjI0XDBuXDIzXDIwMFwzNVwzNTAgXDI2NkFcMjQzXDI2
 MVwzNTZcMjIxXDMiCiAjIlxhXDM1NlwzNzdcIlwyNzRcMzcwXDIxM1wyMjJ6XDM3MFwzNjVc
 MzUzIgogIyJcMzI0XDI0N1wyNDtcMzAwYlwzNzZSXDIwMFwyMDNcMzAyXDIxMSIKICMiXDIx
 NkQmXDMyNHJcMjcwXDM0NEtTXDM3M1wyNzd+IgogIyJcMzczXDMyNFwzNzZPXDMxNVwzMzNc
 MjczZ3ZcMzc3XDI3NlwyNzUiCiAjIkxVXDIzMkFcMjU1XDMwUFwyMzJeXDI1NVwzNTFRXDIx
 MlwyNTJSVHRcMjc0VFwzMDVcMzIyXDM2M1wzMTNfUiIKICMie1wzMTd7XDMyMFwyNjNmXDI0
 MVwxXDI1NTVaa1wyMjRSKFwyNDVcMjBcMjAxXDI3Nj5cMzE1XDM1NFwzNDNcMjRcMTciCiAj
 Ij9sXDIyM1wyMDIqUFwyNTZcdlFcMzExXDI2NldcMzBcMzQ1XDI1MlwiKFwyNDVcMjUwVGZc
 MjM2XDMyMlwzMjdcMjY3IgogIyJcMzQ0XDIwM3BcMzM0XDI1MWFcMjcwXDM0NTloXDM1Njsi
 CiAjIlwzMTR6TlwzMTJcMzRcMzAwXDI1NlwyNDRcMzc2elwzMzFSIgogIyJ2XDM0XDI0MFwz
 NzdcMjYzXDI2NVwzMzJcMzQ3XDM3NnxcMzMyXDMyMCIKICMiV1wzMTZcMzU2XDM1MVk0XDI0
 MDVDXDIwMWZQaWpaXDIzXDM1MFw0XDIxNGIuZ1wyMTU6eiIKICMiXDM0Ny5cMjAyXGVvXDMx
 NFwxXGVcMjAzXDI0XDIzM1wyNjUiCiAjIjBnXDIxNmJcMzE1XDIyM1wyMXtcMzY2ZlwzNFwy
 MTBcMjIzSFIwXDMyNXZud1xuXDIwNVwyNDAiCiAjInRFXDM2N1wzMjRcMzQ2XDIzNVtcMjUz
 XDIzNX1LXDMwXDIxNlwzNTVcMjFcMzMxXDM2NlwyMzRXJ1wzNzdcMTc3PCIKKSA1MDAKKAog
 IyJcMzQmXDI3MlwyNjQxXDI3MFwzMTRcMjcyXDI2MnohXDIzNCIKICMiXDM2MVwzNDVcMjQx
 XDI1MVwzMzd+X1wxNzdcMzc3R1wyMTZcdiIKICMiXDIwMlwzMzJQXDI0MFwyMzFcMjUyXDMq
 PlwyNTBcMjNcMjYxV19BXVwyNzBcZlwyNzVgQUdcMjIwazUiCiAjIkVcMjY1KlwyNTRebVwy
 NzVcMjE0XDIyX0JcMjI1XDIwMSxcMzExXDM2SVwyMjBcMjE2XDMxXDI1NVwyMDMpQ30iCiAj
 IlwyNzVnXDI3NFwzMjcydEJcMjRcMjc2XDI3MFwzMlwyNTAiCiAjIk9cMjYwXDIyNFwyMjNc
 MjY2XDIwMFwzMTYsLVwyNjNcMzRcMzc3IgogIyJcMzM2XDM1cFwzMzVcMzM3XDE2XHJcMjU1
 XDI3MlwyNjBcMjQ3XDM2NyIKICMiXDI3NFwzNTFBXDMwMFBcMjQwXHRcMjY0XDIzNjhcMjUw
 RSIKICMiXDMzM1wyNzZcMzVcMzY1XDI3NlwzNjdcMjQxK1wyNVwyMDIgSCIKICMiXDM0NEFS
 XDIyMEVgXDM2NmxcMzA1XDNcMTdcMzBcMzUyKSRcMzQyLVwyNDRAXDI0N1wyMjVcMzYwXDMw
 XDM1NEAiCiAjIlwyMTZcMzY3K2pcMjY1XDIzXDMxNlwxN1wzNjRcMjUxXDIyN1wyNjUiCiAj
 IlpcZX5cclwzNjVdXDM0M1wzMjRcMzM1XDI2N1wyNjJ2WFwyMjZcMjQ2VFwyMDMnYlwzNTJD
 QVwzNjBcMzIxXDI3NyIKICMiXDIzNDZcMzc1XDM1M1wyNDdcMzI1alwyNjNcMjQ3XGFcMVwy
 NzUiCiAjIlwyMDFcMzE2XDMzMlwzNDNcMzQxXDMzMlwzNTNcMjU3XDMwM1wzMTJcMjI1MCIK
 ICMidy5KXDI1MVRcMjEzXDM1XDMxMFwiXDMyMFwzMzdcMTcjXGEtXDMxNz1cMjdcYSBcMzcx
 XDIyMidcMjMyXHYiCiAjIlwzNlwyNDNcMzYzXDI2NVwyMTJcMjAxXDIyNnRcMjc1UlwyMzUx
 IgogIyJcMjU3WjlcMzc1XDIwNmZzXDM1M1wzMjNwcFwzNTMiCiAjIlwyMjFVXDI0MFwzMzV8
 XDIwMFwzMTNcMzIwKVwzMzNcMjQ3XDM3NyIKICMiXDI0NFpcMzc1XDMyNF1DXDIwM19cMjM2
 V1wyNTFcMzY0TlwwMTc0WlwzNyFcMjYwXDI3NlwzNjVcMzY3XDMwM1wyNVciCiAjIlwzMDZc
 MjdcMzY3ZFwiXDM2M1wyMjNhcFBcMjcwXDM2N15cMjAzXDIyNSxcMzQwKFwzXDI3XDMzNFxy
 SFwwXDM2NSIKICMiXDI0NCNcM15cYlwyMDJcMzc2aVwzMjVcMzUyaVwzNzciCiAjIlwyNDZc
 MzMxfFwzNDNcNVwzMzBcMjY3XDMzNitcMzE1XDIxVyIKICMiXDMxNFwzNTdcMzQ0fFdcMjQ0
 XDMxND9cNlBcMzdcMzU3IgogIyJcMjUxXDMzNHlcMzQ3XDMwMFwzNDBcMzM3XDMxNlwyNTVU
 KkMiCiAjIkFwXDM0NFwyNTQtXDMzMlwyNTZcMzM1cFwzMzNtUCIKICMiXDI1NVwiXCI5XDIx
 N1wyXDMwMFpcMzEzXDMyMFwyMjBcMzQ2IgogIyJcMjMxXDI0N0N2XDI3NFwyMzFcMzI3XDM0
 MlwzMjIlXDFcMzIxIgogIyJ1XDIwNipcMzM1R1wzNTZmXDM1MFwyNDBcMjQ3XDI3N1IiCiAj
 Ij1cMzcxXDI3MmZzXDMzM1wzNTdgXDM3N1w2XDM2MlwyMzBcMjI0XDMxMWhcMjEySVwyMDdc
 Mzc1QFwyNzNcMjdRXDQ5IgogIyJcMzI3XDMwMX0oXGJcMzc2XDM3MFwyNTZcMzAxXDI0MVwy
 NzdcMjM3IgogIyJbXDI1MSZcMzQwTlwyMFwyNjRcMzExXDMzMFwzMDFcM3BcMzU1dVwzMTBc
 MjM0OVwzNTEiCiAjIlwzMDV9XDI1MVwyNjBWXDI1MFZcMjA1MDRcMjU0Xm1jXDM3MVwzMDBc
 MjA1XDMxNyIKKSA1MDAKKAogIyI+XDIyMzNwM1wyMjZTXDM3MFwzMTdcMjU3XGFcMjcyXDI2
 N1wyNTdSOVwzNDVcMjMyZnNcMzYzXDM0MzBcMjYyXDI2NSIKICMiWFwzNzdcMzAydlwyMVwy
 NjNcMjYyXDIzM1wyMDEuOUkiCiAjIlwyNDFcMzI3XDIxMFwzNTVcMzJcMjcwXDM0MTNcMzIz
 XDIwNlwzNzZcMzU2IgogIyJcMzcwSlwyNjUyXDMwXDM0QUc2XDIxe1wzNzJcMzUxXDI2NCNy
 XDMxNFwzMjVaU1wyNTVWXDI1MVwzMjVqIgogIyIoVVwzNDVcMzQyXDIxM3tcMjMxMlwyNDVc
 MjAyUlwxKFwyMTVSQVwyNjJoXDIyNFwzMjJcMjQwXFxcMzI1XDIyXDMxNyIKICMiXDMwMi1c
 MjExXDM1N1wzNFwyNDdRKHRcMjIyJz5PXDI2NTZzXDM2NlwzMDBcMzAwe1wyNzZcNVwzXHZc
 MjEzIgogIyJcMzBQXDIxNlwyM1wyNjRcMzM3XDI2NVwzNjRcMzMwXDIwNDRcMzcwIgogIyI0
 OFwzNTNcMjc3TVwyMzNcMjY2XDM1MlwzMjRadVwzNDYiCiAjIlwyNjRjXDMwNVxcXDMzN1w2
 XDZcMzQxXDIwNlxlXDMzMlx2XDIyM1wyMDBtXDIxNGVgXDBcMjY2blwyMTV4dV0iCiAjIlwz
 MDJOXDI2MVw1XDI2XDMzM1wyMj1cMzY2XDMzMFwyMzVaIgogIyJcMjA2TVwzNDJcMjUzXDI0
 MFwyMDNcMzc2XDM1MTBraVwyND1cMzY3XDNcMjQwWSxcMzA2ZFwyNTIyXDM2XDMwMFwwIgog
 IyJcM1wzNzd9XDM1MlwzMjRcMzU3XlwzMjBcMzMzXDI2M2RmIgogIyJcMjBcMjQwXDIxNmZc
 MjA3XDMyNlwzMTFcMjMyLVwzNzBcMjAzPyIKICMiXDIwMEolXDI2N1wzMzN1eFwzMjZcMzA2
 YFwzMDVcMjM1IgogIyJdXDIzMFwyMTZcMzA0XDM0NVwyNnFcMzM2XDIwMidcZVxuIgogIyJc
 MzYyQENcMzUyNlwyNTM8XHRcMjAzXDMxMlwzNDBcMzExJlwyNTJcclhcMjczXDM2MWdHUlwy
 NVwzNTVcMjU1XDIyNyIKICMiXDVcMjNcMzUyc1wyNzVcMjY1XDI3N1hcMzIxXDMyN1wzNzNc
 MzE2IgogIyJpXDM3Mih7XHZcMzM1XDM1NFwyNjVcMjU1XDI2MGNHIgogIyJcMzUxXDI0MThc
 MzU0XDI1NSBcMjJcMjYwZElcMjE1XDI0NVwzNDdWMnlIXDI1L1wyMjNcMjAyXDI3NExcMzQw
 XDM1NSIKICMiK1x2XDMzMiBcMzZcMjA2XG5QXDI1MkpcMzM3XDIyNFwyNDVcMTc3XDJcMjEz
 bi1cMjZhXDAwMjVIXDMyM1wzNTAiCiAjIm5cMjUxXDMzNlx0XDIyN1wyNzdcMjc3XDE3N1wz
 NTJcMjc3XDIzN1wyNDYiCiAjIlwzNDNxXDIwNFwyNjdcMzE0TFw0XDMzM1wyNjdcMjI3XDM2
 ciIKICMiXDM3NnFcMjBcNFwzNjRcMzY0XDRcMzM0XDM3MlwzNzZaXDI0MiIKICMiXDI2N1wy
 NjFcMzU2XDMwNiBcMjczRVwzNDVBXDIxN1wzMTdcMzIwIgogIyJcMzQxXDI0MlwyMTFcMzZ7
 XDM3MSpBXDE3NzBcMjQ1XDM3N1wzMjIvXDEneFx0JzJWXDIyM1wyNDZcMzExeiIKICMiXDJc
 Mzc3SlwyNjFcMzY1XDE3N2JgXDM1MlwyN1wzNDZcNEFcMzM3XDMyMFwyMjFEZ1wyMDdrXDI3
 M3d3PFwzNDQiCiAjIlwyNzRcbmtcMjVcMjcvXDI1N3JcMzQyXHRcMzZcMjYwSlwyNDdcMzVc
 MjM1SlwzNzBcMjQzXDIyNFwzMTdcMzUwIgogIyJyUyRcMjAxXDIyMlJcMzYxXHJLXDIyNlpt
 eH5cMjBcXFwzNjVcMzcxXDMwM1wyNTVGXDMxLSIKKSA1MDAKKAogIyJcNVwzNDAjXDMyNVwz
 NTJHLlwzNTBcMzUxXDI3MVwyNzBfa3hcMjUzXDI0NFwzMDFcMjY3LlwzMjdUSiVcMjQxdCIK
 ICMiXDMwMFwzNDBgXDIwNVwzMzd7XDE3NzVcMzYxOFwyNjRcMzA3IgogIyJYMlwzMDBcMzMy
 XDM0NFwxXDMxMlwzMDFcMzE2XDIxNlwzMDVcMjc3IgogIyJcMzcwXDMyfX1nflwzMFwyMTZc
 MjczXDM0NFwyNjBcMjUyIgogIyJBXDI3M1wzNzdGP1xmXDM3N1wzMzZcMjI0XDI3Nk9PXDMy
 NVwyMzJcMjAxXDI0M1wzNUhMXDMyNGZcMzdcMjd3NyIKICMiXCJcMzUxXDJcMjQ0XDM3Ny5c
 MzcwMEZxXDMyNVU1XDI0Nk1zXFxxXDMyNVwzNjBcMjQ1XDI0MVwzMDBcMzM2XDI1NiIKICMi
 dVI5XDI2N05cMjQxXDI1MVRcNnprXDI2NWVcMjM3XDMqaVwyNDJcMjExLVwzMzFcMjcwXDI2
 N1wyNjdcMzYwIgogIyJcMjA3XDIyNVwzMTJcMzVcdlwyNTJcMzI1XDM3MVNcMzI1XDMzM1wz
 MDRcMzM2alxyTjghLmVhVFwzMTVcMjU1OyIKICMiXDM1XDZcMzE1XDI1NFlcMVwyNjdcMjc0
 N1wzMVwzMDZXeVwyMDBcMjEyXDM1XDIzNT86V1w2dFwyMzI3JyIKICMiXDI3XDFcMjY1XDMz
 MilcMzU3XDIwNlwzNDNcMjU2SlwyMjJ1IgogIyJcMzYye1wzMzNcMzc0YFwzNzdcMjY2XDAw
 MzBcMFwyNjNuIgogIyJcMzUwXDIzN1wzNjJcMjYxflwyNTVcMjMwXDM3MnZcMjAwXHZcMjYw
 IgogIyJcMzUwXGZcMjMwMydcMjY3XDMxMzFcMzI3N1xhdlwyNFwzMDFcMjY1XDMyN1wzMjZc
 MjMwMiVcM0d5TFQiCiAjIlwzNlwzMTBcMjNcMjYyXDIzNFxhXDIyXGEhQVwyNDVcMjc3Igog
 IyJSXDI1M11cMzYwXDI0N1wzNDRJWVwyMzJcMzMzXDMzN1wzMjBcMzA1XDAwMzdcNVwzMDF7
 XDM0N1cqXHZ6XDIyNUYiCiAjIlwyNzddXDM2MnBcMzUxXDI0NUhcMjQ1XDIyMlwyMjNcNlwz
 MzciCiAjIlwzMzRcMzUwWjZcMjBcMjQ0XDIzMTMnXDM0MFwzNzJcMzUzPFwyNzYoXDM0NVwy
 NjFcMzMxXDUpXDIzNVwzNTMjJXgiCiAjImVcMjY3SVwyNDNQVGtcMzYzXDI1NlwyMDZcMjQx
 XDM2M1wyNjNcMjEzeEk7WFFcImore2tcMzciCiAjIlwzNTJcMzIxXDIxMlwyNzZcMzExXGZc
 MjI2XDM3bVwyNzNcMzc0XDM2MiIKICMiXDIzNDxcMFwzNzFcMjQ2XDIzNVhcNnJcMzc0XDMw
 NFwzNDMiCiAjIlwzNzJcMzUzXDI1M1QqXDIwNXRcMjQ1dVwyMzBcMjE0KyIKICMiXDIzM1wz
 NzFcMzA3QVwzMjBcMzM3XDI1MytcMjEzb092IgogIyJcMjI0XDIwNVwyMDNtXDIyNlwzNjNc
 IlwzMTZcMjA1XDI0NVwyNDdXIgogIyJrXDMxMyooam9cMjd7XDIwN1wzNDdcMzAwXDI3MVwz
 NDd2TVJcMjQ2XDMxM1wzMDZcMzAwSSdcNVxcfiIKICMiWUlcMjcxXDIxN1wyNDQuaVwyNzBc
 MjdcYSBcMzI1IgogIyJcMzEySTdcMDAyM1wyNzJcMzQ0XDMxMFwyMDFcMjM1XDNcMzcwIgog
 IyJcMzEyWlwzNTVcMjQ2aUFcMzIwXDMyM1wyNTNcMjRFXCJcMjc0ZXZcMzIzTVwzMTBcMzAw
 XDBcMjIwXDIyNCIKICMiXDI2NF5cMjA3XDM3M1wzNTdcMjA3XDNcYVwzMjIkXDI3NmxcMjRc
 MjMxfVwzNzVcMzY1XDIyNVwyMTE3PClcMjIyIgopIDUwMAooCiAjIlwzMjBcMTc3XDMyXDM0
 MklcMjEyXDI3M1wyMzFKU1wyNTFcZiIKICMiXDMxNVwyMDdcMzQzL01cMjIzZVwzNzddXDI3
 NVxiXDIwMCIKICMiXDIzNlwyNDVcMzI1XDM0MFwzMzVVXDI0NVwzNTBcMzFHXDI1N1wyMTYi
 CiAjIlwyNTFcMzM1XDM3NFwzNiBcMjUxXDI1MlwyNjVcMzYwXDM3MVwzMTdcMzAzIgogIyJc
 MzA3XDM1NlwyMDBcMjc3XDM3NlwzNTNcMzQgZVwzMzJcMzRFIgogIyJcMjYwcGFcMzAwXDIz
 MVwyMTNcMjc1XDI2MlwyNDdcMzExJlYiCiAjIlwyMzcyLVwzNjZxXDMyNFwyNzJXXDVcMzAx
 XDMxMVwzMjdPXDM1MFR4XDIyMVwzMzRcMlh4UlwyNjV2ViIKICMiXDBUXDMzNi5cMzc1XDI3
 NXBcMzEsWVwyMjJVXDM0N1wyNDc/XDIwNVVcMzM3XDIxNTdWfVwyN1wzNn0iCiAjIiRcMzM2
 XDM1N1wyNjFWXG5cMjQwV1wyNTNwXDMzNVwyNjUiCiAjIlwyMDUnYVwyMjJnXDM0N1wzMDRc
 MjQyXVwzMzJcMjAyXDIyNCIKICMiXDMzMFwzMTVcdlxiXDIwMlwzNDNcMzM2XHRMXDM2NU5U
 IgogIyJcMzUyXDI0MlwyMDFcMzA3XDM0MFwyNDVcMVwzMTNcNlwyNjRcMjM2XDI0MiIKICMi
 XDMyNThcM1wyNFwzMDdcMzIyXDM1NlwzNzBoOlwyMDJcMjQ2IgogIyJcMTZcMzVcMjAyL34x
 XDE3N1wzNzRcdlwzNzdcMjVcMjMyIgogIyJcMzMxXDM1MFwyNDFcMzd8XDI3MFwzNjUwXDI0
 XDIyNi5cMzI1IgogIyJcZlxyXDMwNSNqXDM0NVwyMTRcMjA0UmxcMzc0XDIzM1wzMjVcMjA1
 XDMxMUEwdCpMWThcMjIxKlwyNDUiCiAjIlwyMjFcMzM0XDM0MkpcMzE3RXE0XDI1N1wzMzZc
 MzZxIgogIyI4eT5cMjU0XFxcMjMxXDMzNVwzNzZcMzczXDM1NlwyMDMtIgogIyJcMjMzXDM2
 MmlcMzI2XDI3NlwwXDE3P1wzMzRcMjZcMzQxXDM0NSIKICMiXDM0N1wyNjVcMzAxXDM0MFwy
 NDBcMzQyXDMxMitcMTZcMjI3JnkiCiAjIlwyNDBcMzMzTVwyNDFcMjAzXDIzNlwzNlwzMFwz
 NjZcMzM1XDI2NXEiCiAjIjU4XDIzMFwyN1wzNTAlXDM3NlwzMzBcMzIzW25cMjM3IgogIyJc
 MzcwXDRMXDIzMVwyMlwyMjdcMjU0XDMzMVwyMDRcMzc3XDM3MT8iCiAjIlwzMTJcMzIzXDM3
 NVwzMDM/XDI0MFotSFwzMDZcMjA1XDM0MyIKICMiXDI3MWtcMzFcMzIwXDM2MVwyMzQ2XDM0
 MVwyMjJLNCpcMzFcMTdcMjZcMzM0TUhcMjAwczdcMjA0PFwzMTNcMjQ1IgogIyJcMzEwXDM1
 MlwyNjJcMzQwJlwyMjFcdFwyNTVcMjQ3XDIzN1wzNDclIgogIyJcMzY2MlwyMjVEclwzNzUw
 a1wyMDZcMTZOXDIxNk9wZF5cMzE1YVwzMzFJXDI0N1wzMDBcMzE1N2ciCiAjIlwyNDV6XDM2
 MEF4XDM3MVwyNDVcMzYyXDI2NFwzMTc8XDUiCiAjIlwyMTdcMjU3RlwyMjInXDMxNVwxNlRc
 MzdcMzQ0KFwyMlwzNDZcMzE1XDMyM1wyMzR9NlwyNGUxXDMyM1wzNTRuTyIKICMiXDIwM1wz
 MTJMeWtcblwyNTVcMjA3XDI2XDMyMTlcMjUyIgogIyJcMzEzM1wzNzB4XDIzMDNcMjQwXDMy
 NVwzMTQ0XDM3NFwzNiIKICMiXDM0N1JHXDMzNVwzNTZcMjc0XDIzXDI0Nk5cMjE1S1wyNSIK
 ICMiXDIwNlwzNjBcMjI1XDI1N3RPXDM3N1wzNjVcMTc3XDMwMkZRXDIxNlwzMDFcMzU2XDM3
 SFwyMzZGIgogIyJcdlwzNTd6V14mXDIxMlwxN0ZcMzMzXDM3XDI1MVwzNDExXDI3MlskXDI1
 NFwzMjAiCikgNTAwCigKICMielwzMTI8XDM0MlwyMTZcMjU2XDMxNFwzNjJcZj5cMTZcMzQ2
 IgogIyJcMzI2XDI2NFwzNTZcMjFcMStgJlwzMzBcMzExXDM2XDI1W3xcMjZcMzM0eGNWXDIz
 NV9cMzc3XDMyXDIzNn0iCiAjIlwyNzJ7XDIzNkdcMzZcMjA2XDM0N1wyMzdcMzA3XDRBXDE2
 XFxcMzdcMzYwVlwzMTNcMjYyeFwyNjFmXDM1NlwzNGhjIgogIyJxelwyNDJiXGFXXDRcMjc0
 XDMyNDEgXDZcMjcwZyYwPVwzMzVcMzIxYVwzMjFcMDAwM2A4IgogIyJcMzU2XDM1NVwzNDJp
 XDMxNFwzNzZsXDIwM2NuXDM3N1wzNDEiCiAjIlwzMTdcMjIxXDMzNlwzMzZcMjcwXDMyNVwy
 MTBcMzAwN1wyNzYxfiIKICMiXDM2a1E/XDM3NGFcXFwzMjZcMlwyMDNcMzVcMzEwIgogIyJc
 MzI2XG5cMjc1XDI3NVwzMDJcMzI1V0NcMzZcMzAwXDMxNlwzNzIiCiAjIlwzMlteXDI0N1wz
 MTNcMjE3XHZCXDI0NVwzN1wyNTJcMzIzXDMzMlwxNlwyNFwyNlxyMFBcMjU1TlwyN0hcMzAw
 XDI1IgogIyJcIlwyMjFcdFwyNzNcMjEyR2QrXDI1N0ZcMjU2XDI3NCIKICMiMlwzMzNeXDM2
 Nyo8XDM2NFwzNDBcMjA0XDI2MlwzMTJcMjE3IgogIyJ+XDIxMFwzNTRcMzMwXDIwMVwyMjF4
 XDI2XDI3NFt8XDIyMCIKICMiXDMwM1BcMjcwXDM0MFwyMDJcMjAwXDIwMVwyNTFFdkpcMjQx
 XDIwMyt2dH4nSFwzNTZcMzQ2XDI3MFwzNDNcbl0iCiAjIlwyMDNcMzM2XDMwMVwzNjFcMzEy
 XDI1MVwxXDI1MlwzMDZcMzY0XDMwN1wwIgogIyJcdkZcMzM0fFwzNzNjXDIxNHBcMjQ1XG5c
 MjM3XDM3NSIKICMiLFwzNzBcMzE3XDM3MlwzNTZcMjc2J35cMDM2N1wyMzZcMjExYHZcMzU1
 XDIwMlwzMjVcMjUzMVpcMjY3dXJ+ZyIKICMiNzhcYitXXDI1MlwzMTRcMjIzXDMxMDFcMzFy
 XDM1NFwzNTYoXDIzbi1bV1wzNjFcMzA0XDIxMiltIgogIyJcMjExXG5cMjQ2XDFcMlwyNTVr
 XDMxXDIwM1wzMDEkQFwzN1NcMjczXDM0M1wxNjhcMzUzXDI1NFwyNTRDPXBcMCIKICMiXDI3
 NlwzNjdcMjc1XDM2MVwzNjNcdEQkJFwzNzBcMzQxXDE3IgogIyIwXDMxNVwyNDYnXHZcMjY2
 XDM0MFwyNzJZXDMwMlwzMjBcMjYyIgogIyJsXDIzMVwyNDZcMjY3J1wzMTdcMzM0cm0tXDMx
 MlwyMDNcMzA3XDM2MDZcMzU3Q1wyMDBcMjQwOl5xdVwyMjI0IgogIyJcMjM2RidgRFxiXDVa
 XDMwN1ImZlwzMTZcMjA2XDIxN1wxNzdcIlwzMzVUXDBcMjE3PFwye3YiCiAjInVcMzEyXDIy
 MVwyMzFISlwwXDM3M1wzMDRcMjNcMjYwbiIKICMiXDM1RlwyNTFcMjY2XDM2NzpcMzRcMzEw
 USRcMzE0XDIzNCIKICMiXHRcMjI3XlxuXDM1MVwyMzNJXDIzXDIyNVwyMDdcMjAyLCIKICMi
 XDI0NEVIXDMyN1wzMDdcMjQ3XDI0MVw2XGJcMjU1bVwzMzIiCiAjIlwzMDRcMjAzXDIxMFwy
 MTBcMzAxbVwyNjVcMzA1XDM1N0dcMzIxPiIKICMiXDM3N3lcMjMwPTtcMzMzXDI2NlwyNlwz
 NzZcMzQ1X1wzMDZcMzE3J1wyMFwiRFwyXDIxQlwyNEVcMjUwIgogIyJcYVwzNiBcMjAyXDI2
 NlwyNDAjXDMzM1wyMTZcMjY1eFwzMDVcMjEyXDIwMEplMlwzNjJcMzQwXGJcMzQ2XDM1XDIy
 NyIKKSA1MDAKKAogIyJsXDMyMkpcMzU0XDE2XDI1MFwzMjZ4RVwzMjZcMHVcMzU0XDMwMVxi
 IURcYlwyM3BbXDMxMVwzNzJRXDI2NyIKICMiXDIxM1dcMzAwXDMxNTdcMzQ3XDM2N1wyNzVc
 MjY0XDI2XDM2XyIKICMiXDMzNT1cMjM3XDMwNFwzNzZtJFwyMFwyMTFcMjIwXDI3NFwzNzYi
 CiAjIlwyMDJcMjcxXDM2N15kXDMxN1wzNkxcMzYyXDM2MkxcMjIxIgogIyJcMzAxXCJcMjAy
 MVwyMjZcMzMxXDI2M1wzNDFcMzQyXDM0NVwzNDRAIgogIyJcMzYyXDMzMVwzNTNcM1wyMzFc
 MzYzXDIyN1x2clwiXDIyXDI3N2RjTVwzMTNAa3RcMjc0XDM1MmpcMjAwfVwyMjYiCiAjIj1c
 MjQxZFwzMTRwIDdcMjE2NlwyMTFcMjAzXG5cMzc0XDM0N1wzNzdcMlwyNjVaflwzNzdcMzM1
 d1wyMjNcMjMzTCIKICMiXWZcMjJcMjMgXCJ+XDI3K1w2XDMyXDMxNFwyMTY3XDM0MFwzMTEn
 cz5xXDIzMVxcRFwyMjFcMzQ1IgogIyJcMzIySzVBXDM0MF5mXDI2NFwzMVwzMzBcMzUxdlwy
 MzZcMzQxXDI3NlwzNzZcbjZcMzE1XDIzXDIwM1wzMzRqQH0iCiAjIlwxNzdSXDI3MlwzNTZc
 MjE3XDIxNFwzNjZcMzAwXDIxNlwzMjBcMjEyXDMwIgogIyJiXDM3NVxyXDIwMVwyMjZAU1wy
 MlwyMjdcMzU1aFwzMzEiCiAjIlwzN1wzNzZcMjFJXDM3NFwyMzJcMzMxXDI3Nn1cMzYwXDM3
 NVwzNyIKICMidFwzMTdcMjI3SENcMjMwXDI2MFwzMjckXDM0NVwyMTIkeTNcMzU2XDM0Nz9c
 MzA3NFwyMzM5QFwyMTNyXDIxIgogIyJFXDIyNllcMjYzXDIwNFx2L1R0ZC9cMjM2XDI3Nlwy
 MTJcMzMzKk59XDI1XDIwXDIwM0hjXDIwNFwzNzAiCiAjIlwzMjVdXDM1MEJDXHJcMjYwXHZc
 MzM2XDMwXDMwM1wyMTYiCiAjIlwzMlwyNjJcMjAyO1wzNVwyNTZcMzdcMjU1XDMxNm5gMCIK
 ICMiXDM2XDMyMFwyMDFcMzE0XDIyNVwyeFwzNDBcMVwzMzBcMjY3XDI0NyIKICMic1wyNzZc
 NFRcYW5cMzE0XDM0MlwzMFhDXDMzNCIKICMiKVwzMzMnXDE3N1x2W1wyNjdcMjQ2XDIzNVwy
 MzVcMjU3XDMwMSIKICMiXDM3NlwyNjYxXDMwMlwyMTJcMjVcMzJcMjU1PVwyMzFwXDM1NCIK
 ICMiTXFcMzYyXDM0NSFcMjMzXDI3MVwyMzFJXDIxM1wzNjNcMjY1IgogIyJcMzUyO1wyMTFf
 SFwyMDdcMzIyXDMxMVwyN1wyNjFpXDIwMCIKICMiXDM1NVwyNjBjXDI3N1wyNjFvXDM3Mlwy
 MzVcXFNcMjA0XDIwNlhcMzJiaVwyMTI9clwyMjA/XDM3MSlcMjMwOyIKICMiNy5cMjE1e1wy
 NDZcMjZFXDM2MFwzNTVvd1wzMTZcMjIzejVcMzExXDIyMnRwXDI0MUBcMzUwWFxmXDIzMCIK
 ICMiKFwyMDJcMzA3XDM2XDMwM0BcZVwyNTBcMzc2XDIyXDIwNlwyMjYiCiAjIlwzNDFhWHpc
 MzZcMjEwXDI0QFwzNjVcMzA3XDIxNlwyMDUiCiAjIlRcMjJcMjYyUVwyNzBEXDMyXDIyMlwz
 NzVcMzA2XDMyNDciCiAjIlwyMjNcMjc1XDIzNVRcMzQ2XDM2M2VcMFwzXGF2XDMyXDI3M1wz
 MDFCWlwyMzFcMjQ2WFwyMzJcMlxyK1wyMTRZIgogIyJcMjExXDMzN1wyMDc4XFxcMjIwT1wy
 MzRcYVwyNjdcMzM1XDIyNjU0XDMwN1wzMzZnIgogIyJcMjM2XDIwMVwyNDdcMzI3dFw0XDMy
 N29JTlwyNjZcMzRcMjYwPlwyMDNcclwyMDIiCikgNTAwCigKICMifVwzNTBBXDM0NFwzNDBB
 bFx0XDI2MHlcMjY3XDMxNSIKICMiclwzMTFcblwyMDVWXDIzNVwyNjRcMjY3XDIzNVwzMDVC
 XDI0NlwzMzFiI0RCXDIyNFwzMzJcMzczYlJcMzIyMlwzNDYiCiAjIlwyNDZcMzMzXDM1MXBc
 MzMzXDI2XGU9XGUlXDM3NlwyNTdcMjUzTFwzMzRcMzIxXDMwNTIxJi5cMjI6XGZcMjAwIgog
 IyJcMzU3XDM3NDQyMFwyMjBdXDMyNVwyMTVcMjA3flwzNTNbXDI0NVwzMDBcIkIoNlxhXDI1
 NlwwMDM2TFgiCiAjIlwyMzNpcFwzMTRqXDI3M21cZVwyNTR9XDIxXDIyMyIKICMiXDIxNFwy
 M1wyNzNcMzIwXDI3MVxiXDI2MjFcMjI2XDM0MWFcMzA1IgogIyI5XDM0N2RaXDM0XzZzXDMx
 NVwzNzRcMzE2LFwzMjNcMzM0ZCBBXCJcMjU0XDMxXDMwM1wzMzJcMjc1T3kiCiAjIiUuXDI1
 M0VcMTZgXlwyMTFcMzU0XDI1N1wyMzNcMzMwIgogIyJcMjQ0XHRcMzA2XDI1XDIxMVwzNDUh
 XDIyNlwyMTNcMjcyWFwzNTIiCiAjIklcMzA1XDI2MVwyMjNcMHpcMzQxXCJcMjcwXDM1MVwy
 NDZcMjY2IgogIyJZXDMyalwzNDNGXDI3MFwzNjcnbVwzMDVcMjJcYVwyNTIrXGFcNVwyMTFI
 XDMwMSVcMDAzN2E0XDIxNyIKICMiPFwzMlwzXDMzM1wyNDZcMjc1SVwzNjAvXDM2MTtcMzZc
 MzI2XG4rVihcMjI0KlwzNjNcMzRcXDBcMjIyXDM3NSIKICMiZ1wyMDBHXGJcMjFcMzA2XDM2
 PFwwXDIwN1wyMzYtXDNcMjY0aClcMzAwXDM1M1wzNDBcMzUxPVwzMDZcMzU2MmkiCiAjIlwy
 MDUgXDI2NFwyNjEnUVwyNjdcMjI2UVxlXDI2M1wyNzApXDMyMHBcMzM2XDMwNURcMjAwXDI3
 NlwzNjNcMzIzSF9fIgogIyJ+XDIzNFwwXDM0MlwyNjA4bGVcMzA1XDI2M1wzNjFcMzE1a1wy
 MTJcMjQ0XDM2TFx2SWUhXHIwXDIyMlwyNjIiCiAjImVcMzQwXDMwNlJcMjFcdFwyMzA1a1wz
 MjJcMSAiCiAjIlwyMzdcMzA1XDMwNVwyNDFcMzE0WFwyMTNcMjVLXDIyNlwyMjBcMyIKICMi
 M1x2OlwyMlwzNjZcMjQ2XDIzNVwyMzNjXDI1N0EkIgogIyJcMzA0XDIzMlwzNzUvXDBcMzU2
 XDIzNVwyNzJuXDIxN1wyMTRUXG5cMzYwPnh9a2RcMjM2XDIxNHU4dlwyMTMiCiAjIlwyMzJc
 MzA0XDIyXDM0MVwyMjZRa3NcMjU0biRcMjE0IgogIyJcMjZcMjMzXDI0XDI1NihcMzYzXDM0
 NyxcMjA1a1wyNTZcMzExIgogIyJcMzQxLUpcMzAxXDIzNj1cMzYwXDMxN1wzMzdJXDIwMVwy
 MTUiCiAjIiRcMjc2XDIyNlwzXDI2NlwzNTFpXDI1N1tcXFwzMTNcMjEyIgogIyJcMzA3IVwy
 Mk9cIlwzNjFcMzMzI1wyMjJcMjAxXDI1MmZcMzVcMjM2fTYnXDIzXDIzNVwyMzZ6WGtZXDI3
 NiIKICMiXDMzND1WSnBNXDMzNTdcMzc3XGVcMDI0NidcMTdiXDIzM1wyMTBcMzU0fFwyMjBc
 MzU0XDMyM1xiXVw0IgogIyI8XDMxXDI1NkxcMzE0PlwzMjdqXDM3NVwyNjRcMzMwLFwyMzVH
 UVwyNjdcMjExXDI2XDMzM1wzMFwyMTR6IgogIyJcbjxcMzYxelwzMDJcMzAwKGlcMjA2WFwz
 MDFcMzc0XDMzMVwyMzdcMzIxXDI1NFZcdFstXDMwMjAiCikgNTAwCigKICMiXDI0NFwzMzFs
 XDMyMlwyNjRcMjI2XDM2MFwyNzZcMjM3XDIyXDM1NlwzMzEiCiAjIk0rXDIyMVwyMzVmXDIy
 Mj9jbV4mXCJcMzEway9CZDNwXDIxNVwzMzMnYFwxNzdcMzY1IgogIyJcMzBcMjY2XlwzMTdc
 MzUxb1wyMzFcMjZHXDIyMTA8XDI1NDhcMzUzXDI1NFwyRlwyMjJcMVwyMzJ+XDIwM0IsIgog
 IyJcMzI2XDMxMVwyMDNcMzFpXDMwMVwyMzZcMzczXDMwNmlcMjY3XDI1MVwzNDVcMzM2Mnlc
 Mn52XDIzNVwyNjV7Z2k9IgogIyJcMjQzRVwzMjFcMjcxXDI2M2A1SlwzMDdcMjU1XDI0Nlwy
 NTIiCiAjIlwzNDJcMjQ2XDMxIFwzMTFbXHJcMjQwJFwzNTZcMjM1NSIKICMiXDMwMFwyNjJl
 XDI2NFwyMjYvR1wyMTVcMjE0XDM0MEZcMjQ3IgogIyIsXDMwMFwyNDFDVFwyNzdcMzcxLSRc
 MzIxXDMxNlwzNDIiCiAjIlxiXDIzNlwzNzdcMzU3JCFcMjI1XDIwMFwzNDRcMzA2XDM3M1wz
 MTQiCiAjInVcMzQwXDIzMkQuXDM1NFwyMDZcclwzMTBcMjI2LVwzMzB5XDM2M1wzMzJcMjMw
 W1xmQEBcMjcwXDM1MFwiXDMxNVx2IgogIyIvWlwyNTRcMzc3XDM0NVwyMjRcMzY0XDIxNSVc
 YVwyNjZBIgogIyJsXDIxMFwzMzAmXDMwNlwzNTR+XDZCX1wxNzdcMjEzXDM0NnpPVWQwXGFg
 XDMyM1wzMTNhXDM1M1wzNDciCiAjIlwyaVwyNjNcMzY0XDIzM2lcMjNcMzEzWFwzMDJcMzQ0
 XDI0NiIKICMiXDM0NFwzNDVcMjQzXDIzNlwzNG8kXDI1NDxcMzY0XDMyMVwyMTciCiAjIlwz
 MDVcMzE0XDM2XGVcMjQzXDMyMWhQXDI1N1wzMjdpXDMwIgogIyJDXDM3MFwyMzNcMzM3XDMy
 MHhcMzQxXDM3MVwzMzBcckwkXDI1MClCM2FwXDI2NlwzNzBcMzZcMjE1XDIwYlwyMjMiCiAj
 IjJJLlwyNTJzXDM0MGY3R1wzNDBcMjUxXDI0NyIKICMiXDM0MlwyMzNWXDMwMlwzMzRcMzQy
 XDMwXDMwNVwzNjBcMjYwXDM0MlwzMTQzM2lcMjEwP1wzNDZhcV9TQUxcMzAyIgogIyJcMzM2
 XDIwa1wxNyFcMzYyXDM3MipcMzMyX1wzNTVcMzYyIgogIyJNXDM3NFwzNzdcMjY2XDMxMVwz
 XDI1M0NcMzYzXDI3N0ZcMjE1NU5cMjcjXDMyN1wzNDFcYjRtXDM1NFlcMjE0WiIKICMiXDMx
 M1wyMzBcMjY1XDVAYlwzMWlcMjEwUFwyNzd4XDVjXDM0N1wyMzZLa2RcMjA0RlwyNjNJXDI0
 M1wzMjEiCiAjIlwyNDBcMzMxbFwzMjJcMzBcZSNaXDI2NVwyMTJcMjQ2XDMzMDhcMjU1XDM2
 NVwzXDMydyMpXDM1MFwyNTclTFwzNjQiCiAjIjlKXDB3bHYsT1wzMDFNWlwyMDI8XDM3MSRc
 MzY2XDMwMFwyMDE2XDIzN1wyNzA4UVwzMDVcMzMyIgogIyJcMzcwXDM3N1wzMDJ3KFxcJ1wz
 NDZYLFhcMzA0XDMwNmBcMzA3XDM1NG1cMjBFXDI3M1wzMzdcMjA0XDI3NVwzNjd0IgogIyJc
 MVwyNjdcMzE1XDM3NGlcMjBcblwzNDBcNXhkXVwyND5uIFwzNjZFXDM1XDMxMFwzMzBcMzRr
 XDM1M1w1IgogIyJAUlwyNDBcMjAxXDI2MVwzMzNvXDI0N2FcZlwyMTVGI1tcMzAyIgogIyJc
 MjIwXDM1MFwzMjVXaT5cMzY0YFwzMTJaXGFqXDMyMztcMjA3XDM3MyIKKSA1MDAKKAogIyJ3
 fUFLIFwyNjRcMzQyXDIwMVwyMzNcMzUwbVwzMTYiCiAjIlwyMTNcMzEwXDMwMFwyNjVcMnZc
 MzU3blhcMjc3XDM2XDMyMSIKICMiXDMyKWFcMjU2XDI3N1wyMDRcMjQxXDM0NVwyNzBcMzQz
 YFwzNzYiCiAjIilcMjc2RFwyMzBcMjI0XDMxMTF7W1g7XDIxMlwyNjVcMzMzXDI3Nlx2XDI3
 NFZcMjAyXDI0MypcMzQyXDM1MCwoIgogIyI5YEJrR1wyMjZUXDIwMlwzNjdrXDIyNUxbVlwy
 MDBkXDM1N0daXDMwN1wyMDJkamdcMzQ2IgogIyJcMzEwQHRcMzI1SlwyMzJcMjY3XDMzNFwy
 MDJpNHIiCiAjIlwzMTdcMzEyXDIxNFwzMjZwXDM2N1wzMzVcMjMwXDI0N1wzMjZkIS5xaFwz
 NiVcMjU0XGZcMzUrXDIxMT1cMjMxVCIKICMiXDIxM3NcMjU0TVwzMDZcMzdcMzEwM1wzMjc6
 cFwyMjNcMTc3XDIxITpcMzczbExcMzYyeFwyNzdcMzE0XDIzM3AiCiAjIlwzMDBcMjAzXDI0
 MVZcMjYzXDI1NH0pXDMxNElcMjAzYCIKICMiXDIwXGVcMjAzXGVcMjA1O1wzNjZcMjExXDI3
 NFwzNjJxXDI0MCIKICMiXDMxM1wzMDBJXDI3M1UoaFw2XDMwMFwzMlwzNzBcMzExIgogIyIl
 UVwzNjRcMzUwWVwzMjVcMzMyXDI1LVwzNDdcMjAwKyIKICMiXDI2MFwyNDJSXDI1N1wzMjFc
 MjQyXDI2MFZcMjEwXDIyNFwyNDVcMjQ2IgogIyJcMjIyXDMxMVwyMzZcMjI1XG5cMzQ2XDMy
 NltcMjIxVlx2ZSIKICMiTFwzNjYhXHJcMjQ1UFwzNzNcMzY3Iz9cMzc2XDMyN1wyNDRyXDM1
 NkZcMzQ1XDM0XDI0M1wzMjRcMjQ3XDI1XGFgXDIiCiAjIlwyNDJ4IFwzMiFcNVwzMjdcMjI2
 XDIwMGtcMjM0XDI2NyIKICMiXDM3MFwzMDJcMzYzXDMxMFwzNTZcMzM1XDMzMFwzMDFcMzAx
 UlwzNDZcMzcyIgogIyJPXDI0MVwyMTVcMjYxXDMxNFwyMzUrXDMxNFwyMzZlXDMzMVwyNzEi
 CiAjIlwzMTMkXDMyMlwyMjB0bFwzMjJEXDM1NFwzMFwzMjZcMjc2IgogIyJcMzc2XHJcMzQw
 XDIyNVwzMTFcMjAwXHZcMjM1PyljXDM2NiIKICMiWVwzNzNcMzcyXDIyMkBcMTc3XDI2MFwy
 NDJ0XDIzMkZcMzc0IgogIyJZXDI0MSpcNlwzMDdcMVwiXDIwMFwyNzVcMzc2XDZcMzAyIgog
 IyJcMjUzXDI1N1wzMDZcMjY2WlwyNzExWVwyNDM1XDM1MlciCiAjIlwyNzdcMzAyXDM3Nlwz
 NDJcMzQ3JFwzMzdcMjA1XDMxMlwzNjRcMjIzXDIzMCIKICMiXDMwMVwzNzFcMjQ2XDAzNjNc
 MzI2XDIyMjV9XDM2NzBcMzI2IgogIyJcMjRcMzIyXDI0NVwyMzZcMjEwXDM0N1wyMjFcMjEw
 XDMwNFwzNTczXDMzMyIKICMiXDMzMVwyNjNcMjYxJ1wyMzVcMjA0eFwzMDFGcVwyNDRcMzE1
 LUpZXDIxNFwyMTFcMzMwXDI2NDluW1ZcIkQiCiAjIlwzMlg7RlwyNG17XWRcMzM1XDM3XDNc
 YSdcMjAwaU5cIlwyMTJcMzU3aFwyNDRaXDM2MioiCiAjIjxcMjY0XDI0NlwyNX4nXCJcMzI2
 SDdcMjZcMjIwXDM3MlwyNTFcMjZPS1wyNDFeXDI1NTJ2XDMzNXVcMjY0IgogIyJcMzJcclpc
 MjExXDMzN1wzMzNqXDI2NWhcMjY2WlwyNjRGR1wyMTFcMzU2XDI3NTdcMzIxa2hZaFkiCiAj
 Ii9cNHZcMzQ3XDMwNVxlKVwzMDNFb1wzMzFcMjE1XDM2MCVcMzAzeVxmXDI0NVwzNDAmXDM1
 M1wzNTJcMjMxZyIKKSA1MDAKKAogIyJcMjIwVmtcXHBcMjE1MVwyNjRaXDIxXDM2M1wzNDZc
 dFwzMjVcMjEyL1xydVwyMTRcMzM1XDIxM1wyNjVcZVwyNzdAIgogIyJcMjU0XDI3NVwyNDVc
 MjNcMzc0OmxcMjQ3XDBcMjczXDIxNVwyNDIiCiAjIlRcMzEwXDI3N1pcMzczXDIyN1wyNTdH
 ZlwyNjNcM1wzMzEiCiAjIlwyNzFJLXFcMjIxXDIyN1xlM1wyNjZcMzI0XDMzN1wzNjUuXDM1
 MjNnXDAyMjZcMzIpXDI3MFwyNTVWK1wzNjYiCiAjImNfeVwyMzFcMzYwXDM3MVwzNDdzY1xu
 IVwzMjBcMjAyXDMwNDtcMzYwXDZzOlwwXDIzM1wyMTVcNSdcMzIiCiAjIlwyMzRKXDIwMlwy
 NDRcMjAwWlwxN1xcQVwyNjBcMjMzNyIKICMiXDMwMVwzMTY3XDMyM3lsXDIzNVwzMDBcMjE1
 XDI3N1wzMjNmIgogIyJcMzUwXDM1NTVcMjM0fFwyNjJcMzA1XDMzMlwyNlZcMzJYIgogIyI7
 XDIwMlwyMTFeXDM3N1w1XDM0XDM3MCdcMTdcMjMzXDM0MiIKICMiXDMyMm1cMTc3XDM2N1wy
 NTdORXBcMjYwblwzMTRcMzY2IgogIyJcMzIzXDI2NX5vXDI0MFwyMjV2XDIzXDM1M1wzMjMz
 XDI1MiIKICMiJFwzMzJcMzU1XDM1NSVcMzcyXDM2MEcwXDI3NVwyNzVcMzUxIgogIyJcMjM0
 MUhcMzZEKlwyMDVcMjcyXDM0N1wzNzNcMzMwXHJcZVwzNjJBXDV4XDMzM3l9XDMxNTRcMjY2
 IFxhIgogIyJcMjU2XDNcMzYzWFwyMzNEXDMzM1wyMzFcXFwyMjFpXDI3MlwwMDAyNFwyMTVo
 XDM3NnxcMzA0e15XXDRcMzI3IgogIyJcMzc3XDBcMzZcMjY0WFwyNzdcMjQxXDIxNjVcMjA3
 XGJcMzAzXDM1NTtFXlwyNzZccnhcMjQzXGVOXDMzNWxcMzM0IgogIyJcMzE3elwyNzVcMS9c
 MzY1XDIxM1wzMTRcMjMwXDI3XDRcMzEzIgogIyJcMzVcMjQwXDIxNlwzNjRcMjIyXDIwMCBX
 XDI3N1wyMzNcMzYwXDM3NCIKICMiXDM2M1wyMU97XDM1XDI3MFwzNTRcMzMyXDIwNVwzNzJc
 MzMyXDMyNyIKICMiMFFYXDE2XDI2MFwzMDdcMjcyMmBcMzM1XDI3MlwyNVwyMTdcMjMxXDE2
 ZFwyNTdcZm5WXDIyMk8hXHYwIgogIyI6XDIxMjlcMzQ3XDMzNHRcMjA0XDI1NVxlXDMxMGFc
 MzB3alxlN1wyMTZSb1wzNTRcMjY0Yl9cMzc2UyIKICMiXGJcMzc3XDMxN1wzNDFcMjAyXHZc
 MzcxUFwzMzFcMjA1eEUiCiAjIlwyMjNcMzdbXDM3M1wyMzdmXDI2N1wzMDIlZ1wzMjZcMjUy
 Ky1gXDIzXDIxN1wyNDJcMjQyQFwzNjdcMzY0XDIwXnQiCiAjIlwyMVwyNTJcMzIxXDMwMFwy
 MjBcMjc1XDI1MFwyNTVcMjY1RlwzNjdcMzY2IgogIyJSe1wzNjJJXDI0ND5cMjA2clwyNVwz
 NjZPTH5cMjE0XDMxMGdeOlwyMDNBXDI2MnxlXDI1NFwzMTUiCiAjIlwzMjJLXDE2XDMzMFwy
 MjRcMzQ1b1wyNzRcMjAxXDMzMVwyNzZcMjM1IgogIyJoXDMxNlwzNFwyNTRcYVwyNjBcMzE3
 XFxcYW5cMjQzXDMyMSIKICMiIFwyMTJcMzUyXGZNXDMzM1wzMTdcMzc2XDM3NVwyMzNcMjc2
 XGYiCiAjIlwyNDNcMzM3LFwyNFwzMzFvXDMwMEVpLVwzNDIiCiAjIlwzMzBcMjYqXDIyN1wy
 MDFcMzUzbFwzNDRcMjM3XDIxNVwzNzFcMzMwXDM0NlwzMTBcMjU0XHJcMjIzIgogIyJcMzEw
 XDMxNlwyMTV+XDI2NS5eQWtoXDIxMFwyNjBcMzMxJFxmXDMwM1wyMzRcMzc2IgopIDUwMAoo
 CiAjIlwyNjZcMTZcMzYkfFwzNzBcMzQxNFwyMnRRV1wyMjQuXlwzMjBcMzQwXDM3NFwzMzVE
 XDE3N1wyMTV4XDIyMiEiCiAjIlwzNTVaXDIzM0lcdm5cMzA0NltcMjIyXDM2NG4iCiAjInBc
 MzEwXDI1Nl9cMjM3XDIzM1wzMDNcMzI2XHRcMzM0XDI2MVwyNjEiCiAjIjFcMzY2XDM1Nlwz
 MzVHXDI1M1wyNzFcMzQ1R1wzNjBcMzQ2XyIKICMiXDIyNFwzNDBQXDI0NlwyNzNlaVwzMjJc
 Mzc3XDM0MkdcMjIxIgogIyI6XDI3NVwyMjZEXDRcMzczN1lcMzczXDM3MHxcMjU1XDI1Nlwz
 NTdTalwzMTBcMlJcMjUzYm9cMjcxXDVcMzMzIgogIyJcMzIzXDIwMy1cMzE0R1wyNjBaXDMw
 M1wzMDZcMjE1XDMxMFwzNzUiCiAjIj9cMzEzXDI0MixFXDIxNlwyNDFcMzA1XDI0NlwzNTVY
 XDM1MSIKICMiXDMzMFwyMzRvXDM3NlwzMVwzMzNcMzIzXDM1NVwyMlwzMjZcMjcyXGUiCiAj
 IlwzNDFcMzc0ZFx2XDMzMEZcMjM1XDM1MFwzMTRcMzA1bVwyMzUiCiAjIls7XDI3MHtcMzMx
 XDI2MmVcMzEzXDI0M1tcMjY2bCIKICMiXDM3MFwyMFwyMzFLXDMyNlx0XDIyM1wzNjFcMjc0
 XGJcMzQ1XDMiCiAjIlwyMTR3XDI0MGhcMzUxXDI3NjFcMzMwXDM2MVwyMzJcMjYxTyIKICMi
 XDIzNFwyNDRcMzI1NX1KXHJcMjMyXHZcMjI3YVwzMTY5XGFcMjIyJ1w2KVwyNzBcIlwyMTBS
 XDM1MFxhXDM2IgogIyJAXDI2Nm5cMzExMVwzMTNVXDMzMlwzMjdcMzM1XGZcMjQ0IgogIyJM
 a1wyNzNcMVtcMjQ2XDI2NVwzMjZcMDAzNlwyMTNcMzcwXDIyMlxlOzpKdFwzMzJpRFwyNzVc
 Mjc1XDIzMFwyMDQiCiAjIlwyNjVcMTZcMzM0ZlwyNjNcMjMxXDIwMlwyNzN1XDM1M1wzMjZc
 MzA3IgogIyJcMzI3XDI1NVtcMzY3QVwzNDBcMzE1XDIyXDM0XDE2XDMxM1wzMTIiCiAjIkJc
 MzQ1XDM0MlwzMjNcMjM1XDMzNFwzNzJcYlwyNzRcMjc2XDMzNlwzMzAiCiAjIlwzMDdcMzQ3
 XDVcMzAxVVwyNzVcMzI3XTdcMzM1XDM2NFwzNjYiCiAjImJcMjNHXDM2XDMwMFwzMTVgXDIy
 NFwyMjFcMjFcMzI0XDIxN35cMjA0bVwyNjZyYFwzMVwyNTd5Z1wzMzZBYSIKICMiaVwzXDMy
 NFwzNjNcIjxQU1wyNjZ6XDMzM1wzNzY5XDMyMlwzMzFcMjQyXDJmXDMzMjRcMzAyXDM0MWFM
 XDMwIgogIyJcMjJFUTxcMzcwXDIyNFwyMTRcMzYyXDM1NVwzMzNcMjY3XDIxNyIKICMiXDMx
 NVwyMzM3P1wyNzRuXDMzNVwyNzJcMzM3XGFcMzEyP1wyNjVSbl1cMzd4OlwyMDBLXDE3eFwz
 NzNcMzA0IgogIyJbV1wwdVwzMzBcMjY2XDMyMVwyMzBcYWctXFxcMjcwbGpcMTc3XDM3N1wz
 NjFcMzA2Yy1aY1wyNTNVIgogIyJcMzY0Sy8hT1wyNTVcMzExXDEkXDIwNXFcdlwzNzdYXDIx
 cFwzNDMxXDMzNVwzNzBcMzUxXDI3NHFcZlwxNzciCiAjIlxcXDMwMlwxN1wyNTVcMzVcMjAz
 Uz9cMjMyeFwzNTAyPFwzNjVUXDMwMlZcMjEzZlwyNjNJXDI3NV5ndCIKICMibFwyMTR9e1wz
 NjdcMjYycVwzMzVcMjcyXDM1N21cMzM0XDI3NFwzNzFcMzAzXDMwMFwzMTZcdFwyMDI6XDM2
 ZlwyNTEiCiAjIlwyNVwxXDM1NlwzMjZcMzIxXDM3MVwzNTFUXDM1dj5cMzY3XDMzNHM/XDMx
 XDM0XDM0PGVGXDI2NVwyNzIiCikgNTAwCigKICMiWFwzNTVcMzM3XDIxN1wyNzRcMzYxXDZc
 MjU0X1wyMTd6XDM1NiIKICMid1wyNTBcMzA3XDM3XDMwN1wzMjZcMzUzWTNXXDI1Mk0iCiAj
 IlwxNzdcMzEzWFwzNTJcMjAzWVwzMTJSXDI2MlwyNjBcMjcyXDMzMCIKICMiMnxpXDM2MG9C
 XDIwNFwyMFwyMTVcMzRcMjQyOVwxNzc+XHJcMjQ1XDI1MFwyMTdcMjE2clwzNjBcMzIwIXZc
 MzU3IgogIyJcMzMwXDIxXDI3NVwyNzJ2XDM1NVwyMjdcMjY2XDI3NVwzNzFcMzQ2JyIKICMi
 XDIwMUNcMzVcMFwzNTNcblwzNDBkXDIyT1wyNFwzNDBcMjQyVS9cMjU0VFwzNTZaXDZcMjM3
 XGVcMzIyemoiCiAjIlwzNzRcMjQ2KFwzMzZcMjI3XDI1NlVcMzA3T1xhXDI3SyIKICMiXDMz
 MlwyNkpcMjcyRVwzNjJcMzVcMjMyXDI3Nz9cMzU1XDMxMCIKICMiXDI3NGAjXDM1NVwzNjBc
 MjJcMzAwXVwzNzBcMzM1WFwyNjJcMjA0Q1x2XDI2cFwzNjBcMzQwQXZvXDMzMVwyNjJ1Igog
 IyJcMzc1XDMwNlwyMTVcMjM3OWRcMjE0Pyl5XCJcMzBMXG4nV2dhclxmXDI0NlwyMzB2Nlxc
 IgogIyJ6RVwyMHxcMzUxXDIyNCBcMjcwXDI3MFwyMzIkXG4iCiAjIlRcMzM0RFwyXDMyNVwz
 NzZcMzU1XDI0N1wzNzRcdFwyMjNcMzAwIgogIyJcMzA1O2VpXGZcMjMyelwzMVwzNTZcMjAx
 XDE2XDI3MU5cMzIxXDI0NXNcMzAwXDI3MkF6XDM2N3R6VFwyMDQiCiAjIn19fWxcMjUzVFwz
 NTZcMzM2cFwzNDBcMzAwXDE3N1wwMDQ2XDIyNFwzMjRtMlwwXDIxN1wyMzNcMjc2XDI1NGNc
 MzYzIgogIyJcMzAxLjpcMzI2XDMyMiUtXDMwMFwzMjRcMzYzXDM0MFwzMzdcMjM1XDM3XDR3
 TlwxN1wyMDJhXDM2N3FcMjU1XDMwZCIKICMiXDMyN1wyNDMmQ1wyMzNcMjUyXDM3NE5cMjEx
 XDI2N1wyMjFcMjAxIgogIyJcXFwzNjBcMzIkLzFcMjMxXDMyNFwzMDRsdlwyMTR1XDMwMFwz
 MjZFOFw0XDM1NFwyNjRcMzY2XDMwNU1cMzYwNyIKICMiXGFhVUlcMzc1JlwyMDJTJytcMzQy
 XDIyMlwzNTYrMlwyNzBYXDI2N05cMjU1XDI3MFwzNTRcMzE2XDI0NVwzNzMiCiAjInpcMzQw
 XDMyNHdoXDM3NVwzMTEzXDIyNFwyNzJ9IFwzMjBcMzIzXDIzNVQ4XDIyN1wzMDVcMjYxWVwy
 NTM8XDI1M3MiCiAjIkBcMjczXDM3N1wyMzRvXDIzNFxhXDMyNVwyNjFcMzI1XDIwMVwzNTIi
 CiAjIlwyMDY1XDMwM1wyXDI2MHtcMjU0XDMzNVwzNzRcMzJ8dSIKICMiXDI3XDM3NCNcMjYw
 XDI2N1BcMzQ2XDM2MVwzNTJVXDMzNFwzMzciCiAjIlwyMTV8bVwzNDdcMjMwXDIyNGBPXDMy
 NmpwXDM0NnlaXDE3N1wzNjRUXDM3MFwzMDBcMjY0IDhcMjYxVlwzMjAiCiAjImJcMzA3XDM0
 Nm5cMjU3XDM1N1wzNDZcMjAxXDMxNVwyNDRBXDMyMiIKICMiXDIxNixcMDAzNX4qXDIyXDIx
 N1wzNzJcMzVcNFwzNjZYXDM3M1wzMDJ2XDM3MFwzNDZOXDM3MFwxNlBcMzc2KVwzMDEiCiAj
 IlwzMTFcMzMzXDI0NDVcMzcwaF1cMjQwXDMzM1wyMDVcMzQ3LlwyMDRcZU9RXDM1MlwzMjZh
 XDI1NVwyMjZcMzY3IgogIyIpPVBRKlxhXDI2NlwyNDZ9XDI1NFwzMDJZXDMwNlwzMzJ8XDIw
 N1wyNk9cMjYnXDIyNVwyMDIiCikgMjkyCigKICMiJjBcIlwyNjJzXDI2N1wzMTAjXDMzM1wz
 NDFcMTc3XDIxNyIKICMiXDMwMFwzXDMwMFwzMTBhXDMyNFwyNjFcMjMzXDAzNTZcMzAwXDIz
 NSIKICMiXDM0NFwzNDBcMjEwL1wzNDJcMzQ3XDI1M1wzMDFcMzEnXDMwMVwyNSIKICMic1wy
 MjVaOVwzNVwzMTZcMjMzXDI1MlwzMjRcMjc0XlwyNTVcMjUzfmdQbGtcMzA2XDNcMzI2Qjpc
 MjIzXDI0NyIKICMiXDMxd1xcYyNcIlwyMzNcMzY2XDMwMW9cMzY3XDMwMFwzXDM3M1wzNDAx
 XDMxMlwzN0x2XDI1MlxhJVwyMjdcMjM0IgogIyJoXDM3Mk5pSiViPFwyMDBcMjczaVwzNjVE
 XG5XZlwzMjNcMjQ2XDMwMGlcMjYzYFwzNjEgXDIzNCIKICMiXDMyMVwyNTdZUFwwMjM1XDI2
 N1xhXDI0NmtcMzUwXDI1N0AtXDItYFwiaFwyNjVcMzQwUEtkXDM2NyIKICMiXDMwbFxlXDIw
 M1wzNjVcYVwzNDBcMjQ1XDI3NVwzNjBcMjJcMjYwXHRcMzArKW9ZPVwyNzJcMjQ1XDMxXDI1
 N3VcMzYiCiAjIjZcMzAwXDIzNUBcMjMzXDMyMElcMjE2XDIwMVwzNjVcMj0iCiAjIlwyMDBc
 MzYzXDM3MFwyMDRYXlxldFwyMzdcMzY0cTgiCiAjIlwzNDVcMjMybFwyMzYjXDI1MlwzNzMx
 XDM1NVwzNjRcMjcyXFwiCiAjIlwzNjNoXVwyNjdcMzUzXDI3MFwzMDAxXDI3MkZcMzI3XDM1
 M1wyNGdcMzY2dGpcMzZHalwyMz1HJ1wyMDAiCiAjIlwzMDZcMzEzP1wzMzY4SlwyNDdcMjY0
 b1x0XDI0MVwzMzYiCiAjIlwzNjJcdlwzNzY/blwyMjNcMzAyXDMxMH1cMjYzZ1wyNjIiCiAj
 IlwzMVwxNydtXDI0NzxcMjUyXDI2MFwzNFwzNTZ1IgogIyJcMjEyXDM1MVwxN1wyNDdcMzI1
 XDM0c1wyMDJcMzc1XDE3N1w2XDM3ZVwzNzNcMjc3OVwzNzQiCiAjIlwyM1wxNzdcMzc0SVwy
 MjZcMjIyXDBcMFwwXDBJRU5EXDI1NkJgXDIwMiIKKSAwIDAgNCAzIDEgIyIgIgowIDAgMTQg
 MyAxMSAjImltYWdlLXNuaXAlIgowIDAgMjIgMyAxICMiKSIKMCAwIDQgMjkgMSAjIlxuIgow
 ICAgICAgICAgICAwCg==
 -----955523295979-------
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: bugs@racket-lang.org
Subject: Re: [racket-bug] all/11689: image literals and operations in
 stand-alone exe
Date: Tue, 1 Feb 2011 18:40:16 -0600

 --0016361e89328fbaae049b41e441
 Content-Type: text/plain; charset=UTF-8
 
 On Tue, Feb 1, 2011 at 6:38 PM, Matthew Flatt <mflatt@cs.utah.edu> wrote:
 > I'm not able to replicate the error.
 
 Looks like it doesn't happen in the release candidate (just finished
 the promised experiment from my previous message).
 
 > Enclosed is the "img.rkt" that I was using in place of "tmp.rkt". Can
 > you send me the file that you were using?
 
 Enclosed.
 
 Robby
 
 --0016361e89328fbaae049b41e441
 Content-Type: application/octet-stream; name="tmp.rkt"
 Content-Disposition: attachment; filename="tmp.rkt"
 Content-Transfer-Encoding: base64
 X-Attachment-Id: f_gjniffbz1
 
 I3JlYWRlcihsaWIicmVhZC5zcyIid3htZSIpV1hNRTAxMDggIyMgCiN8CiAgIFRoaXMgZmlsZSB1
 c2VzIHRoZSBHUmFja2V0IGVkaXRvciBmb3JtYXQuCiAgIE9wZW4gdGhpcyBmaWxlIGluIERyUmFj
 a2V0IHZlcnNpb24gNS4xLjAuMiBvciBsYXRlciB0byByZWFkIGl0LgoKICAgTW9zdCBsaWtlbHks
 IGl0IHdhcyBjcmVhdGVkIGJ5IHNhdmluZyBhIHByb2dyYW0gaW4gRHJSYWNrZXQsCiAgIGFuZCBp
 dCBwcm9iYWJseSBjb250YWlucyBhIHByb2dyYW0gd2l0aCBub24tdGV4dCBlbGVtZW50cwogICAo
 c3VjaCBhcyBpbWFnZXMgb3IgY29tbWVudCBib3hlcykuCgogICAgICAgICAgICBodHRwOi8vcmFj
 a2V0LWxhbmcub3JnLwp8IwogNDQgNyAjInd4dGV4dFwwIgozIDEgNiAjInd4dGFiXDAiCjEgMSA4
 ICMid3hpbWFnZVwwIgoyIDAgOCAjInd4bWVkaWFcMCIKNCAxIDM0ICMiKGxpYiBcInN5bnRheC1i
 cm93c2VyLnNzXCIgXCJtcmxpYlwiKVwwIgoxIDAgMTYgIyJkcnNjaGVtZTpudW1iZXJcMCIKMyAw
 IDQ0ICMiKGxpYiBcIm51bWJlci1zbmlwLnNzXCIgXCJkcnNjaGVtZVwiIFwicHJpdmF0ZVwiKVww
 IgoxIDAgMzYgIyIobGliIFwiY29tbWVudC1zbmlwLnNzXCIgXCJmcmFtZXdvcmtcIilcMCIKMSAw
 IDQzICMiKGxpYiBcImNvbGxhcHNlZC1zbmlwY2xhc3Muc3NcIiBcImZyYW1ld29ya1wiKVwwIgow
 IDAgMTkgIyJkcnNjaGVtZTpzZXhwLXNuaXBcMCIKMCAwIDM2ICMiKGxpYiBcImNhY2hlLWltYWdl
 LXNuaXAuc3NcIiBcIm1ybGliXCIpXDAiCjEgMCA2OAooCiAjIigobGliIFwiaW1hZ2UtY29yZS5z
 c1wiIFwibXJsaWJcIikgKGxpYiBcImltYWdlLWNvcmUtd3htZS5ya3RcIiBcIm1yIgogIyJsaWJc
 IikpXDAiCikgMSAwIDMzICMiKGxpYiBcImJ1bGxldC1zbmlwLnNzXCIgXCJicm93c2VyXCIpXDAi
 CjAgMCAyOSAjImRyc2NoZW1lOmJpbmRpbmdzLXNuaXBjbGFzcyVcMCIKMSAwIDI1ICMiKGxpYiBc
 Im1hdHJpeC5zc1wiIFwiaHRkcFwiKVwwIgoxIDAgMjIgIyJkcnNjaGVtZTpsYW1iZGEtc25pcCVc
 MCIKMSAwIDggIyJnYjpjb3JlXDAiCjUgMCAxMCAjImdiOmNhbnZhc1wwIgo1IDAgMTcgIyJnYjpl
 ZGl0b3ItY2FudmFzXDAiCjUgMCAxMCAjImdiOnNsaWRlclwwIgo1IDAgOSAjImdiOmdhdWdlXDAi
 CjUgMCAxMSAjImdiOmxpc3Rib3hcMCIKNSAwIDEyICMiZ2I6cmFkaW9ib3hcMCIKNSAwIDEwICMi
 Z2I6Y2hvaWNlXDAiCjUgMCA4ICMiZ2I6dGV4dFwwIgo1IDAgMTEgIyJnYjptZXNzYWdlXDAiCjUg
 MCAxMCAjImdiOmJ1dHRvblwwIgo1IDAgMTIgIyJnYjpjaGVja2JveFwwIgo1IDAgMTggIyJnYjp2
 ZXJ0aWNhbC1wYW5lbFwwIgo1IDAgOSAjImdiOnBhbmVsXDAiCjUgMCAyMCAjImdiOmhvcml6b250
 YWwtcGFuZWxcMCIKNSAwIDMzICMiKGxpYiBcInJlYWRhYmxlLnNzXCIgXCJndWlidWlsZGVyXCIp
 XDAiCjEgMCA1NwojIihsaWIgXCJocnVsZS1zbmlwLnJrdFwiIFwibWFjcm8tZGVidWdnZXJcIiBc
 InN5bnRheC1icm93c2VyXCIpXDAiCjEgMCA0NSAjIihsaWIgXCJpbWFnZS1zbmlwci5zc1wiIFwi
 c2xpZGVzaG93XCIgXCJwcml2YXRlXCIpXDAiCjEgMCAyNiAjImRyc2NoZW1lOnBpY3QtdmFsdWUt
 c25pcCVcMCIKMCAwIDM4ICMiKGxpYiBcInBpY3Qtc25pcGNsYXNzLnNzXCIgXCJzbGlkZXNob3dc
 IilcMCIKMiAwIDU1ICMiKGxpYiBcInZlcnRpY2FsLXNlcGFyYXRvci1zbmlwLnNzXCIgXCJzdGVw
 cGVyXCIgXCJwcml2YXRlXCIpXDAiCjEgMCAxOCAjImRyc2NoZW1lOnhtbC1zbmlwXDAiCjEgMCAz
 MSAjIihsaWIgXCJ4bWwtc25pcGNsYXNzLnNzXCIgXCJ4bWxcIilcMCIKMSAwIDIxICMiZHJzY2hl
 bWU6c2NoZW1lLXNuaXBcMCIKMiAwIDM0ICMiKGxpYiBcInNjaGVtZS1zbmlwY2xhc3Muc3NcIiBc
 InhtbFwiKVwwIgoxIDAgMTAgIyJ0ZXh0LWJveCVcMCIKMSAwIDMyICMiKGxpYiBcInRleHQtc25p
 cGNsYXNzLnNzXCIgXCJ4bWxcIilcMCIKMSAwIDE1ICMidGVzdC1jYXNlLWJveCVcMCIKMiAwIDEg
 NiAjInd4bG9jXDAiCiAgICAgICAgICAwIDAgNTAgMCAxICMiXDAiCjAgNzUgMSAjIlwwIgowIDEw
 IDkwIC0xIDkwIC0xIDMgLTEgMCAxIDAgMSAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMjU1IDI1NSAy
 NTUgMSAtMSAwIDkKIyJTdGFuZGFyZFwwIgowIDc1IDI1ICMiQml0c3RyZWFtIFZlcmEgU2FucyBN
 b25vXDAiCjAgMTAgOTAgLTEgOTAgLTEgMyAtMSAwIDEgMCAxIDAgMCAwIDAgMCAwIDAgMCAwIDAg
 MCAyNTUgMjU1IDI1NSAxIC0xIDIgMQojIlwwIgowIC0xIDEgIyJcMCIKMSAwIC0xIC0xIC0xIC0x
 IC0xIC0xIDAgMCAwIDAgMCAwIDEgMSAxIDEgMSAxIDAgMCAwIDAgMCAwIC0xIC0xIDIgMjQKIyJm
 cmFtZXdvcms6ZGVmYXVsdC1jb2xvclwwIgowIC0xIDEgIyJcMCIKMSAwIC0xIC0xIC0xIC0xIC0x
 IC0xIDAgMCAwIDAgMCAwIDAgMCAwIDEgMSAxIDAgMCAwIDAgMCAwIC0xIC0xIDIgMQojIlwwIgow
 IC0xIDEgIyJcMCIKMSAwIC0xIC0xIC0xIC0xIC0xIC0xIDAgMCAwIDAgMCAwIDAgMCAwIDEgMSAx
 IDE1MCAwIDE1MCAwIDAgMCAtMSAtMSAyIDE1CiMidGV4dDpwb3J0cyBvdXRcMCIKMCAtMSAxICMi
 XDAiCjEgMCAtMSAtMSAtMSAtMSAtMSAtMSAwIDAgMCAwIDAgMCAwIDAgMCAxIDEgMSAxNTAgMCAx
 NTAgMCAwIDAgLTEgLTEgMiAxCiMiXDAiCjAgLTEgMSAjIlwwIgoxLjAgMCAtMSAtMSA5MyAtMSAt
 MSAtMSAwIDAgMCAwIDAgMCAwIDAgMCAxLjAgMS4wIDEuMCAyNTUgMCAwIDAgMCAwIC0xCi0xIDIg
 MTUgIyJ0ZXh0OnBvcnRzIGVyclwwIgowIC0xIDEgIyJcMCIKMS4wIDAgLTEgLTEgOTMgLTEgLTEg
 LTEgMCAwIDAgMCAwIDAgMCAwIDAgMS4wIDEuMCAxLjAgMjU1IDAgMCAwIDAgMCAtMQotMSAyIDEg
 IyJcMCIKMCAtMSAxICMiXDAiCjEgMCAtMSAtMSAtMSAtMSAtMSAtMSAwIDAgMCAwIDAgMCAwIDAg
 MCAxIDEgMSAwIDAgMTc1IDAgMCAwIC0xIC0xIDIgMTcKIyJ0ZXh0OnBvcnRzIHZhbHVlXDAiCjAg
 LTEgMSAjIlwwIgoxIDAgLTEgLTEgLTEgLTEgLTEgLTEgMCAwIDAgMCAwIDAgMCAwIDAgMSAxIDEg
 MCAwIDE3NSAwIDAgMCAtMSAtMSAyIDEKIyJcMCIKMCAtMSAxICMiXDAiCjEuMCAwIDkyIC0xIC0x
 IC0xIC0xIC0xIDAgMCAwIDAgMCAwIDAgMCAwIDEuMCAxLjAgMS4wIDM0IDEzOSAzNCAwIDAgMCAt
 MQotMSAyIDI3ICMiTWF0Y2hpbmcgUGFyZW50aGVzaXMgU3R5bGVcMCIKMCAtMSAxICMiXDAiCjEu
 MCAwIDkyIC0xIC0xIC0xIC0xIC0xIDAgMCAwIDAgMCAwIDAgMCAwIDEuMCAxLjAgMS4wIDM0IDEz
 OSAzNCAwIDAgMCAtMQotMSAyIDEgIyJcMCIKMCAtMSAxICMiXDAiCjEgMCAtMSAtMSAtMSAtMSAt
 MSAtMSAwIDAgMCAwIDAgMCAwIDAgMCAxIDEgMSAzOCAzOCAxMjggMCAwIDAgLTEgLTEgMiAzNwoj
 ImZyYW1ld29yazpzeW50YXgtY29sb3I6c2NoZW1lOnN5bWJvbFwwIgowIC0xIDEgIyJcMCIKMSAw
 IC0xIC0xIC0xIC0xIC0xIC0xIDAgMCAwIDAgMCAwIDAgMCAwIDEgMSAxIDM4IDM4IDEyOCAwIDAg
 MCAtMSAtMSAyIDM4CiMiZnJhbWV3b3JrOnN5bnRheC1jb2xvcjpzY2hlbWU6a2V5d29yZFwwIgow
 IC0xIDEgIyJcMCIKMSAwIC0xIC0xIC0xIC0xIC0xIC0xIDAgMCAwIDAgMCAwIDAgMCAwIDEgMSAx
 IDM4IDM4IDEyOCAwIDAgMCAtMSAtMSAyIDEKIyJcMCIKMCAtMSAxICMiXDAiCjEgMCAtMSAtMSAt
 MSAtMSAtMSAtMSAwIDAgMCAwIDAgMCAwIDAgMCAxIDEgMSAxOTQgMTE2IDMxIDAgMCAwIC0xIC0x
 IDIKMzggIyJmcmFtZXdvcms6c3ludGF4LWNvbG9yOnNjaGVtZTpjb21tZW50XDAiCjAgLTEgMSAj
 IlwwIgoxIDAgLTEgLTEgLTEgLTEgLTEgLTEgMCAwIDAgMCAwIDAgMCAwIDAgMSAxIDEgMTk0IDEx
 NiAzMSAwIDAgMCAtMSAtMSAyIDEKIyJcMCIKMCAtMSAxICMiXDAiCjEgMCAtMSAtMSAtMSAtMSAt
 MSAtMSAwIDAgMCAwIDAgMCAwIDAgMCAxIDEgMSA0MSAxMjggMzggMCAwIDAgLTEgLTEgMiAzNwoj
 ImZyYW1ld29yazpzeW50YXgtY29sb3I6c2NoZW1lOnN0cmluZ1wwIgowIC0xIDEgIyJcMCIKMSAw
 IC0xIC0xIC0xIC0xIC0xIC0xIDAgMCAwIDAgMCAwIDAgMCAwIDEgMSAxIDQxIDEyOCAzOCAwIDAg
 MCAtMSAtMSAyIDM5CiMiZnJhbWV3b3JrOnN5bnRheC1jb2xvcjpzY2hlbWU6Y29uc3RhbnRcMCIK
 MCAtMSAxICMiXDAiCjEgMCAtMSAtMSAtMSAtMSAtMSAtMSAwIDAgMCAwIDAgMCAwIDAgMCAxIDEg
 MSA0MSAxMjggMzggMCAwIDAgLTEgLTEgMiAxCiMiXDAiCjAgLTEgMSAjIlwwIgoxIDAgLTEgLTEg
 LTEgLTEgLTEgLTEgMCAwIDAgMCAwIDAgMCAwIDAgMSAxIDEgMTMyIDYwIDM2IDAgMCAwIC0xIC0x
 IDIgNDIKIyJmcmFtZXdvcms6c3ludGF4LWNvbG9yOnNjaGVtZTpwYXJlbnRoZXNpc1wwIgowIC0x
 IDEgIyJcMCIKMSAwIC0xIC0xIC0xIC0xIC0xIC0xIDAgMCAwIDAgMCAwIDAgMCAwIDEgMSAxIDEz
 MiA2MCAzNiAwIDAgMCAtMSAtMSAyIDEKIyJcMCIKMCAtMSAxICMiXDAiCjEgMCAtMSAtMSAtMSAt
 MSAtMSAtMSAwIDAgMCAwIDAgMCAwIDAgMCAxIDEgMSAyNTUgMCAwIDAgMCAwIC0xIC0xIDIgMzYK
 IyJmcmFtZXdvcms6c3ludGF4LWNvbG9yOnNjaGVtZTplcnJvclwwIgowIC0xIDEgIyJcMCIKMSAw
 IC0xIC0xIC0xIC0xIC0xIC0xIDAgMCAwIDAgMCAwIDAgMCAwIDEgMSAxIDI1NSAwIDAgMCAwIDAg
 LTEgLTEgMiAxCiMiXDAiCjAgLTEgMSAjIlwwIgoxIDAgLTEgLTEgLTEgLTEgLTEgLTEgMCAwIDAg
 MCAwIDAgMCAwIDAgMSAxIDEgMCAwIDAgMCAwIDAgLTEgLTEgMiAzNgojImZyYW1ld29yazpzeW50
 YXgtY29sb3I6c2NoZW1lOm90aGVyXDAiCjAgLTEgMSAjIlwwIgoxIDAgLTEgLTEgLTEgLTEgLTEg
 LTEgMCAwIDAgMCAwIDAgMCAwIDAgMSAxIDEgMCAwIDAgMCAwIDAgLTEgLTEgMiAxCiMiXDAiCjAg
 LTEgMSAjIlwwIgoxIDAgLTEgLTEgLTEgLTEgLTEgLTEgMCAwIDAgMCAwIDAgMCAwIDAgMSAxIDEg
 ODEgMTEyIDIwMyAwIDAgMCAtMSAtMSAyCjM4ICMiZHJyYWNrZXQ6Y2hlY2stc3ludGF4OmxleGlj
 YWxseS1ib3VuZFwwIgowIC0xIDEgIyJcMCIKMSAwIC0xIC0xIC0xIC0xIC0xIC0xIDAgMCAwIDAg
 MCAwIDAgMCAwIDEgMSAxIDgxIDExMiAyMDMgMCAwIDAgLTEgLTEgMiAxCiMiXDAiCjAgLTEgMSAj
 IlwwIgoxIDAgLTEgLTEgLTEgLTEgLTEgLTEgMCAwIDAgMCAwIDAgMCAwIDAgMSAxIDEgMTc4IDM0
 IDM0IDAgMCAwIC0xIC0xIDIgMjgKIyJkcnJhY2tldDpjaGVjay1zeW50YXg6c2V0IWRcMCIKMCAt
 MSAxICMiXDAiCjEgMCAtMSAtMSAtMSAtMSAtMSAtMSAwIDAgMCAwIDAgMCAwIDAgMCAxIDEgMSAx
 NzggMzQgMzQgMCAwIDAgLTEgLTEgMiAxCiMiXDAiCjAgLTEgMSAjIlwwIgoxIDAgLTEgLTEgLTEg
 LTEgLTEgLTEgMCAwIDAgMCAwIDAgMCAwIDAgMSAxIDEgNjggMCAyMDMgMCAwIDAgLTEgLTEgMiAz
 MQojImRycmFja2V0OmNoZWNrLXN5bnRheDppbXBvcnRlZFwwIgowIC0xIDEgIyJcMCIKMSAwIC0x
 IC0xIC0xIC0xIC0xIC0xIDAgMCAwIDAgMCAwIDAgMCAwIDEgMSAxIDY4IDAgMjAzIDAgMCAwIC0x
 IC0xIDIgNDcKIyJkcnJhY2tldDpjaGVjay1zeW50YXg6bXktb2JsaWdhdGlvbi1zdHlsZS1wcmVm
 XDAiCjAgLTEgMSAjIlwwIgoxIDAgLTEgLTEgLTEgLTEgLTEgLTEgMCAwIDAgMCAwIDAgMCAwIDAg
 MSAxIDEgMTc4IDM0IDM0IDAgMCAwIC0xIC0xIDIgMQojIlwwIgowIC0xIDEgIyJcMCIKMSAwIC0x
 IC0xIC0xIC0xIC0xIC0xIDAgMCAwIDAgMCAwIDAgMCAwIDEgMSAxIDAgMTE2IDAgMCAwIDAgLTEg
 LTEgMiA1MAojImRycmFja2V0OmNoZWNrLXN5bnRheDp0aGVpci1vYmxpZ2F0aW9uLXN0eWxlLXBy
 ZWZcMCIKMCAtMSAxICMiXDAiCjEgMCAtMSAtMSAtMSAtMSAtMSAtMSAwIDAgMCAwIDAgMCAwIDAg
 MCAxIDEgMSAwIDExNiAwIDAgMCAwIC0xIC0xIDIgNDgKIyJkcnJhY2tldDpjaGVjay1zeW50YXg6
 dW5rLW9ibGlnYXRpb24tc3R5bGUtcHJlZlwwIgowIC0xIDEgIyJcMCIKMSAwIC0xIC0xIC0xIC0x
 IC0xIC0xIDAgMCAwIDAgMCAwIDAgMCAwIDEgMSAxIDAgMCAwIDAgMCAwIC0xIC0xIDIgMQojIlww
 IgowIC0xIDEgIyJcMCIKMSAwIC0xIC0xIC0xIC0xIC0xIC0xIDAgMCAwIDAgMCAwIDAgMCAwIDEg
 MSAxIDEzOSAxNDIgMjggMCAwIDAgLTEgLTEgMgo0OSAjImRycmFja2V0OmNoZWNrLXN5bnRheDpi
 b3RoLW9ibGlnYXRpb24tc3R5bGUtcHJlZlwwIgowIC0xIDEgIyJcMCIKMSAwIC0xIC0xIC0xIC0x
 IC0xIC0xIDAgMCAwIDAgMCAwIDAgMCAwIDEgMSAxIDEzOSAxNDIgMjggMCAwIDAgLTEgLTEgNCAx
 CiMiXDAiCjAgNzAgMSAjIlwwIgoxLjAgMCAtMSAtMSAtMSAtMSAtMSAtMSAwIDAgMCAwIDAgMCAx
 LjAgMS4wIDEuMCAxLjAgMS4wIDEuMCAwIDAgMCAwIDAgMAotMSAtMSA0IDQgIyJYTUxcMCIKMCA3
 MCAxICMiXDAiCjEuMCAwIC0xIC0xIC0xIC0xIC0xIC0xIDAgMCAwIDAgMCAwIDEuMCAxLjAgMS4w
 IDEuMCAxLjAgMS4wIDAgMCAwIDAgMCAwCi0xIC0xIDQgMSAjIlwwIgowIDcxIDEgIyJcMCIKMS4w
 IDAgLTEgLTEgLTEgLTEgLTEgLTEgMCAwIDAgMCAwIDAgMS4wIDEuMCAxLjAgMS4wIDEuMCAxLjAg
 MCAwIDAgMCAwIDAKLTEgLTEgNCAxICMiXDAiCjAgLTEgMSAjIlwwIgoxLjAgMCAtMSAtMSAtMSAt
 MSAtMSAtMSAxIDAgMCAwIDAgMCAwIDAgMCAxLjAgMS4wIDEuMCAwIDAgMjU1IDAgMCAwIC0xCi0x
 IDQgMSAjIlwwIgowIDcxIDEgIyJcMCIKMS4wIDAgLTEgLTEgLTEgLTEgLTEgLTEgMSAwIDAgMCAw
 IDAgMCAwIDAgMS4wIDEuMCAxLjAgMCAwIDI1NSAwIDAgMCAtMQotMSA0IDEgIyJcMCIKMCA3MSAx
 ICMiXDAiCjEuMCAwIC0xIC0xIC0xIC0xIC0xIC0xIDAgMCAwIDAgMCAwIDAgMCAwIDEuMCAxLjAg
 MS4wIDAgMTAwIDAgMCAwIDAgLTEKLTEgMCAxICMiXDAiCjAgLTEgMSAjIlwwIgowIDEyIC0xIC0x
 IC0xIC0xIC0xIC0xIDAgMCAxIDAgMCAwIDEuMCAxLjAgMS4wIDEuMCAxLjAgMS4wIDAgMCAwIDAg
 MCAwCi0xIC0xIDIgMSAjIlwwIgowIC0xIDEgIyJcMCIKMCAxMiAtMSAtMSAtMSAtMSAtMSAtMSAw
 IDAgMSAwIDAgMCAxLjAgMS4wIDEuMCAxLjAgMS4wIDEuMCAwIDAgMCAwIDAgMAotMSAtMSAwIDEg
 IyJcMCIKMCAtMSAxICMiXDAiCjEgMCAtMSAtMSAtMSAtMSAtMSAtMSAwIDAgMCAwIDAgMCAwIDAg
 MCAxIDEgMSAyMDAgMCAwIDAgMCAwIC0xIC0xIDQgMQojIlwwIgowIC0xIDEgIyJcMCIKMS4wIDAg
 OTIgLTEgLTEgLTEgLTEgLTEgMCAwIDAgMCAwIDEgMCAwIDAgMCAwIDAgMCAwIDAgMjU1IDI1NSAw
 IC0xIC0xIDAKMSAjIlwwIgowIDc1IDI1ICMiQml0c3RyZWFtIFZlcmEgU2FucyBNb25vXDAiCjAu
 MCAxMCA5MCAtMSA5MCAtMSAzIC0xIDAgMSAwIDEgMCAwIDAuMCAwLjAgMC4wIDAuMCAwLjAgMC4w
 IDAgMCAwIDI1NQoyNTUgMjU1IDEgLTEgICAgICAgICAgIDAgMTggMCA0IDMgODUKKAogIyI7OyBU
 aGUgZmlyc3QgdGhyZWUgbGluZXMgb2YgdGhpcyBmaWxlIHdlcmUgaW5zZXJ0ZWQgYnkgRHJSYWNr
 ZXQuIFRoZSIKICMieSByZWNvcmQgbWV0YWRhdGEiCikgMCAwIDQgMjkgMSAjIlxuIgowIDAgNCAz
 IDg1CigKICMiOzsgYWJvdXQgdGhlIGxhbmd1YWdlIGxldmVsIG9mIHRoaXMgZmlsZSBpbiBhIGZv
 cm0gdGhhdCBvdXIgdG9vbHMgY2EiCiAjIm4gZWFzaWx5IHByb2Nlc3MuIgopIDAgMCA0IDI5IDEg
 IyJcbiIKMCAwIDQgMyAxNzAKKAogIyIjcmVhZGVyKGxpYiBcImh0ZHAtYmVnaW5uZXItcmVhZGVy
 LnNzXCIgXCJsYW5nXCIpKChtb2RuYW1lIHRtcCkgKHJlYSIKICMiZC1jYXNlLXNlbnNpdGl2ZSAj
 dCkgKHRlYWNocGFja3MgKCkpIChodGRwLXNldHRpbmdzICMoI3QgY29uc3RydWN0b3IiCiAjIiBy
 ZXBlYXRpbmctZGVjaW1hbCAjZiAjdCBub25lICNmICgpKSkpIgopIDAgMCA0IDI5IDEgIyJcbiIK
 MCAwIDIyIDMgMSAjIigiCjAgMCAxNCAzIDcgIyJyZXF1aXJlIgowIDAgNCAzIDEgIyIgIgowIDAg
 MTQgMyAxMSAjIjJodGRwL2ltYWdlIgowIDAgMjIgMyAxICMiKSIKMCAwIDQgMjkgMSAjIlxuIgow
 IDAgMjIgMyAxICMiKCIKMCAwIDE0IDMgMTEgIyJpbWFnZS13aWR0aCIKMCAwIDE3IDMgMSAjIiAi
 CjAgMiAgICAgICAgICAxMyAxNyAxICMiXDAiCjIgLTEuMCAtMS4wIDAuMCAwLjAgMCAgICAgICAg
 ICAgMSAzNTYKKAogIyJcMjExUE5HXHJcblwzMlxuXDBcMFwwXHJJSERSXDBcMFwwXDIxXDBcMFww
 XDIxXGIiCiAjIlw2XDBcMFwwO21HXDM3MlwwXDBcMFw2YktHRFwwXDM3N1wwXDM3N1wwXDM3N1wy
 NDBcMjc1XDI0NyIKICMiXDIyM1wwXDBcMVwzMUlEQVQ4XDIxNVwyNDVcMzIyTStcMzA0UVwzMFw1
 XDM2MFwzMzdoZDFJIgogIyJcMjMyXDE3IFwzNDJcMyBcMjYzXCJfQFwyMjFcMjI1IgogIyJcMjYx
 QFwzMjZKU1wyNjJcMjYzU1wyNjJcMjYwXDI2MlwyNjIiCiAjIlwyNjJUXDI2M1wzNjVcMzYyXHRk
 ZVwyMTdcMzM1JFwyNDUiCiAjIlwyNFwzMzFIXlw2XDIxM1wzNzdcMjM1XDM2MW9yXDMxNSIKICMi
 XGZcMjQ3blwzMzVcMjI3XDM0N1wyMzRcMzQ3XDIzNFwzNTZcMjIzXDMyMSIKICMiPlwzNjIoXDIw
 NlwzNzVcMVwzNTZcMzc3XCJQXDMwMWdYXDI1XDM0NFwyNjNtXDIxMlwyNFwzMjFcMjA3XDM2MXA+
 RSIKICMiXDI2MVwyNDNcdGlcNFwzNTNcMzUwbVwyNjNZXDM1PVwyNzBcMjIyXDMzMH5cMzAyXDM2
 dn1HXDI1MVwzMDdcMjExXHQiCiAjImRwXDIxMFwyNyxcNVwyMDFcMzQ3QDxcMzAzSlh5XDIxMFwz
 MDVZXDMwNlwyNFZRRlwyNV14IgogIyJcMzA3IG4wXDMyXDIzNC5cMzA0XDIzNFwzNjRjXDIxY1wy
 NzBcZlwiXDMzM1wyMzBIRXlcMzAwflwyNTBcMjE1IgogIyJiXGFcMjU3XDIyMlwzMzRcMjIzXDI1
 MVwzNzNcMjJmXDMyMVwzNzEiCiAjIlxlXDMxXG5cMjUxXDIxNlwzMjdcMzMwXDMwNFAzUiNcMjE2
 cVwyMDd5XDM0XDM0MS1cYlwyMjZaXDI1XDIzMFwzMDEiCiAjIlwyMDdkPmpcMjMwXDE2XCJzXDMx
 NVwzMTBcNVwyMzQiCiAjIlw0XDIwMUdcMzQ0Um9bXDIyMlwzNTdcMzU2XDIxNlwyMjFcMjA3U1wz
 NDRcMjczXDM0MCBcMzI3UHNcMjAxW2xcMjEwIgogIyJcMzc0XDMwNlpcMjYwWlwzNzZcMjAxXFxc
 MzAzY1wyNTAiCiAjIlwyNTFcMjEyXDMxNEVcMjZcMzQ3XDIyMlwxXDM3MlwyN1w2YlwzNVpcMzAx
 XDI3XDM3M1wzMzMiCiAjIkVlXDM1M1xmXDM0NiRcMFwwXDBcMElFTkRcMjU2QmBcMjAyIgopIDAg
 MCAyMiAzIDEgIyIpIgowIDAgNCAyOSAxICMiXG4iCjAgICAgICAgICAgIDAK
 --0016361e89328fbaae049b41e441--
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: bugs@racket-lang.org
Subject: Re: [racket-bug] all/11689: image literals and operations in
 stand-alone exe
Date: Tue, 1 Feb 2011 18:43:02 -0600

 On Tue, Feb 1, 2011 at 6:40 PM, Robby Findler
 <robby@eecs.northwestern.edu> wrote:
 > On Tue, Feb 1, 2011 at 6:38 PM, Matthew Flatt <mflatt@cs.utah.edu> wrote:
 >> I'm not able to replicate the error.
 >
 > Looks like it doesn't happen in the release candidate (just finished
 > the promised experiment from my previous message).
 
 [replying to myself]
 
 I just flipped thru the git history and I don't see any obviously
 related commits that would lead to this.
 
 I'll just make sure that the patch I had in mind to the release
 version actually works there (by editing my copy I downloaded and
 installed in "C:\Program Files (x86)\Racket-Full" and then I guess
 we'll go from there.
 
 Robby
From: Matthew Flatt <mflatt@cs.utah.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: bugs@racket-lang.org
Subject: Re: [racket-bug] all/11689: image literals and operations in
 stand-alone exe
Date: Tue, 1 Feb 2011 17:44:25 -0700

 At Tue, 1 Feb 2011 18:40:16 -0600, Robby Findler wrote:
 > On Tue, Feb 1, 2011 at 6:38 PM, Matthew Flatt <mflatt@cs.utah.edu> wrote:
 > > I'm not able to replicate the error.
 > 
 > Looks like it doesn't happen in the release candidate (just finished
 > the promised experiment from my previous message).
 > 
 > > Enclosed is the "img.rkt" that I was using in place of "tmp.rkt". Can
 > > you send me the file that you were using?
 > 
 > Enclosed.
 
 Hm... still works for me, Mac and Windows.
 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: bugs@racket-lang.org
Subject: Re: [racket-bug] all/11689: image literals and operations in
 stand-alone exe
Date: Tue, 1 Feb 2011 18:45:56 -0600

 On Tue, Feb 1, 2011 at 6:44 PM, Matthew Flatt <mflatt@cs.utah.edu> wrote:
 > At Tue, 1 Feb 2011 18:40:16 -0600, Robby Findler wrote:
 >> On Tue, Feb 1, 2011 at 6:38 PM, Matthew Flatt <mflatt@cs.utah.edu> wrote:
 >> > I'm not able to replicate the error.
 >>
 >> Looks like it doesn't happen in the release candidate (just finished
 >> the promised experiment from my previous message).
 >>
 >> > Enclosed is the "img.rkt" that I was using in place of "tmp.rkt". Can
 >> > you send me the file that you were using?
 >>
 >> Enclosed.
 >
 > Hm... still works for me, Mac and Windows.
 
 Does it work the second time, if you put the file in C:\tmp.rkt and
 create the executable in C:\tmp.zip?
 
 Robby
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: bugs@racket-lang.org
Subject: Re: [racket-bug] all/11689: image literals and operations in
 stand-alone exe
Date: Tue, 1 Feb 2011 18:52:35 -0600

 Oh, stupid me. It is the PLTDRCM environment variable that is somehow
 interfering. (I think)
 
 Robby
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: bugs@racket-lang.org
Subject: Re: [racket-bug] all/11689: image literals and operations in
 stand-alone exe
Date: Tue, 1 Feb 2011 19:30:05 -0600

 Okay, latest problem: I'm having trouble figuring out the right
 arguments to make sure that racket/gui/init is run before the embedded
 module is compiled. This didn't work:
 
                    (create-embedding-executable
                     exe-name
                     #:literal-expression (compile #'(require racket/gui/init)
                     #:modules `((#f racket/gui/init) (#f ,program-filename))
                     #:cmdline `("-l"
                                 "scheme/base"
                                 "-e"
                                 ,(format "~s" `(#%require
 ',(filename->require-symbol program-filename))))
 
 and this didn't either:
 
                    (create-embedding-executable
                     exe-name
                     #:modules `((#f racket/gui/init) (#f ,program-filename))
                     #:cmdline `("-l"
                                 "scheme/base"
                                 "-l"
                                 "racket/gui/init"
                                 "-e"
                                 ,(format "~s" `(#%require
 ',(filename->require-symbol program-filename))))
 
 
 It wasn't clear to me in the docs if there is a way to do something
 before those embedded modules are compiled.
 
 Robby
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: bugs@racket-lang.org
Subject: Re: [racket-bug] all/11689: image literals and operations in
 stand-alone exe
Date: Tue, 1 Feb 2011 19:44:45 -0600

 This attempt:
 
                    (define temp-file (make-temporary-file
 "htdp-lang-tmp-file-~a"))
                    (call-with-output-file temp-file
                      (λ (port)
                        (fprintf port "#lang racket/base\n~s\n~s\n~s\n"
                                 '(require (for-syntax racket/base))
                                 '(define-syntax (m stx)
 (dynamic-require 'racket/gui/init #f) #'1)
                                 '(m)))
                      #:exists 'truncate)
 
                    (create-embedding-executable
                     exe-name
                     #:modules `((#f racket/gui/init) (#f ,temp-file)
 (#f ,program-filename))
                     #:cmdline `("-l"
                                 "scheme/base"
                                 "-e"
                                 ,(format "~s" `(#%require
 ',(filename->require-symbol program-filename))))
 
 
 fails while creating the distribution with:
 
   cannot instantiate `racket/gui/base' a second time in the same process
 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: bugs@racket-lang.org
Subject: Re: [racket-bug] all/11689: image literals and operations in
 stand-alone exe
Date: Tue, 1 Feb 2011 19:57:22 -0600

 Is there something along these lines that can be made to work?
 
                    (create-embedding-executable
                     exe-name
                     #:configure-via-first-module? #t
                     #:modules `((#f racket/gui) (#f ,program-filename))
                     #:cmdline `("-l"
                                 "scheme/base"
                                 "-e"
                                 ,(format "~s" `(#%require
 ',(filename->require-symbol program-filename))))
 
 (this doesn't).
 
 Robby
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: bugs@racket-lang.org
Subject: Re: [racket-bug] all/11689: image literals and operations in
 stand-alone exe
Date: Tue, 1 Feb 2011 20:02:34 -0600

 Oh, and reading the docs for create-embedding-executable, it seems
 like define-runtime-path is probably only recognized (and the things
 embedded) when the file is compiled, ie when the file does not have an
 image in it. So probably that means that 'bitmap' expanding to
 something like define-runtime-path won't work in that case.
 
 Does that sound right to you?
 
 Robby
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: bugs@racket-lang.org
Subject: Re: [racket-bug] all/11689: image literals and operations in
 stand-alone exe
Date: Tue, 1 Feb 2011 20:09:24 -0600

 Here's another, probably better attempt, that still doesn't work.
 
                    (define temp-file (make-temporary-file
 "htdp-lang-tmp-file-~a"))
                    (call-with-output-file temp-file
                      (λ (port)
                        (fprintf port "#lang racket/gui\n"))
                      #:exists 'truncate)
 
                    (create-embedding-executable
                     exe-name
                     #:configure-via-first-module? #t
                     #:modules `((#f ,temp-file) (#f ,program-filename))
                     #:cmdline `("-l"
                                 "scheme/base"
                                 "-e"
                                 ,(format "~s" `(#%require
 ',(filename->require-symbol program-filename))))
 
 I think I'm out of ideas now, except possibly avoiding the #:modules
 argument, but that seems painful.
 
 Robby
 
From: Matthew Flatt <mflatt@cs.utah.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: bugs@racket-lang.org
Subject: Re: [racket-bug] all/11689: image literals and operations in
 stand-alone exe
Date: Wed, 2 Feb 2011 06:58:36 -0700

 At Tue, 1 Feb 2011 20:02:34 -0600, Robby Findler wrote:
 > Oh, and reading the docs for create-embedding-executable, it seems
 > like define-runtime-path is probably only recognized (and the things
 > embedded) when the file is compiled, ie when the file does not have an
 > image in it. So probably that means that 'bitmap' expanding to
 > something like define-runtime-path won't work in that case.
 > 
 > Does that sound right to you?
 
 Yes, that's true.
 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: bugs@racket-lang.org
Subject: Re: [racket-bug] all/11689: image literals and operations in
 stand-alone exe
Date: Wed, 2 Feb 2011 13:08:38 -0600

 [ a recap of an out of band discussion here, just in case someone is
 actually reading this... ]
 
 Okay, after talking to Matthew on the phone, we're in agreement that
 changing the way create-executable is called is not a particularly
 good idea. The problem seems to be that create-executable isn't really
 set up to allow a change that happens before one of the modules passed
 in the #:modules argument is compiled, which is what we're need to be
 able to do here.
 
 So now we're back to the earlier rejected plan of changing the wxme reader.
 
 Robby

From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>, Eli Barzilay <eli@barzilay.org>
Cc: bugs@racket-lang.org
Subject: Re: [racket-bug] all/11689: image literals and operations in
 stand-alone exe
Date: Wed, 2 Feb 2011 20:27:37 -0600

 Okay, so this appears to work. With the changed wxme library, a
 teaching language file with an image-snip in it can be run from racket
 directly (without passing -l racket/gui/init) and can be used in a
 standalone executable. Just pushed.
 
 Eli: there is some (hopefully inconsequential) backwards
 incompatibility here. In addition to things that your scripts are
 unlikely to depend on (ie image% from the wxme library's superclass is
 now image-snip%), the image% get-filename method now returns a path,
 instead of bytes. This is to match what happens in image-snip%.
 
 Can you look over your scripts and possibly the handin server to be
 sure that this change won't break anything there?
 
 Thanks,
 Robby
From: Eli Barzilay <eli@barzilay.org>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: Matthew Flatt <mflatt@cs.utah.edu>, bugs@racket-lang.org
Subject: Re: [racket-bug] all/11689: image literals and operations in
 stand-alone exe
Date: Fri, 4 Feb 2011 04:41:18 -0500

 Two days ago, Robby Findler wrote:
 > Okay, so this appears to work. With the changed wxme library, a
 > teaching language file with an image-snip in it can be run from
 > racket directly (without passing -l racket/gui/init) and can be used
 > in a standalone executable. Just pushed.
 > 
 > Eli: there is some (hopefully inconsequential) backwards
 > incompatibility here. In addition to things that your scripts are
 > unlikely to depend on (ie image% from the wxme library's superclass
 > is now image-snip%), the image% get-filename method now returns a
 > path, instead of bytes. This is to match what happens in
 > image-snip%.
 
 I don't think that I have any scripts that deal with images.
 
 
 > Can you look over your scripts and possibly the handin server to be
 > sure that this change won't break anything there?
 
 These too shouldn't be affected -- there is no mention of `image%' or
 `get-filename'.  The closest thing to break is probably the conversion
 to text, but that's implemented at the snip level.
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!
From: Robby Findler <robby@eecs.northwestern.edu>
To: Eli Barzilay <eli@barzilay.org>
Cc: Matthew Flatt <mflatt@cs.utah.edu>, bugs@racket-lang.org
Subject: Re: [racket-bug] all/11689: image literals and operations in
 stand-alone exe
Date: Fri, 4 Feb 2011 06:28:03 -0600

 Thanks.
 
 Robby
 
 On Fri, Feb 4, 2011 at 3:41 AM, Eli Barzilay <eli@barzilay.org> wrote:
 > Two days ago, Robby Findler wrote:
 >> Okay, so this appears to work. With the changed wxme library, a
 >> teaching language file with an image-snip in it can be run from
 >> racket directly (without passing -l racket/gui/init) and can be used
 >> in a standalone executable. Just pushed.
 >>
 >> Eli: there is some (hopefully inconsequential) backwards
 >> incompatibility here. In addition to things that your scripts are
 >> unlikely to depend on (ie image% from the wxme library's superclass
 >> is now image-snip%), the image% get-filename method now returns a
 >> path, instead of bytes. This is to match what happens in
 >> image-snip%.
 >
 > I don't think that I have any scripts that deal with images.
 >
 >
 >> Can you look over your scripts and possibly the handin server to be
 >> sure that this change won't break anything there?
 >
 > These too shouldn't be affected -- there is no mention of `image%' or
 > `get-filename'.  The closest thing to break is probably the conversion
 > to text, but that's implemented at the snip level.
 >
 > --
 >          ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
 >                    http://barzilay.org/                   Maze is Life!
 >
 
