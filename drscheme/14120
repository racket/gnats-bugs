From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Thu Oct 24 15:55:12 2013
Received: from mail-oa0-f41.google.com (mail-oa0-f41.google.com [209.85.219.41])
	by winooski.ccs.neu.edu (8.14.7/8.14.7) with ESMTP id r9OJt9lq032424
	for <bugs@bugs.plt-scheme.org>; Thu, 24 Oct 2013 15:55:09 -0400
Message-Id: <201310241955.r9OJt62R032417@winooski.ccs.neu.edu>
Date: Thu, 24 Oct 2013 15:55:06 -0400
From: erik@adaptations.com
To: bugs@racket-lang.org
Subject: Cannot run programs after creating executable

>Number:         14120
>Category:       drscheme
>Synopsis:       Cannot run programs after creating executable
>Class:          sw-bug
>Responsible:    robby
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Thu Oct 24 15:56:02 -0400 2013
>Last-Modified:  Thu Oct 24 16:52:01 -0400 2013
>Originator:     Erik Pearson
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.90.0.9--2013-10-20(d6610289/d)
>Environment:
unix "Linux archie 3.11.6-1-ARCH #1 SMP PREEMPT Fri Oct 18 23:22:36 CEST 2013 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 281549140
Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (#<path:/home/epearson/work/racket/github>); (links #:user? #f #:root? #t) = ()
raco pkg (show):
/home/epearson/work/racket/plt/plt/racket/share/devel-pkgs:
 Package              Checksum    Source
 main-distribution    #f          (static-link ../../../pkgs/main-distribution)
 plt-services         #f          (static-link ../../../pkgs/plt-services)
 racket-lib           #f          (static-link ../../../pkgs/racket-pkgs/racket-lib)
 [199 auto-installed packages not shown]
Installation-wide:
 [none]
User-specific for installation "development":
 [none]



Collections:
("/home/epearson/.racket/development/collects"
 (non-existent-path))
("/home/epearson/work/racket/plt/plt/racket/collects"
 (".gitignore" "acks" "compiler" "data" "db" "dynext" "ffi" "file" "info" "info-domain" "json" "launcher" "net" "openssl" "pkg" "planet" "racket" "raco" "reader" "realm" "s-exp" "setup" "syntax" "unstable" "version" "xml"))

Recent Internal Errors: 
Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t test-coverage) (default) #() "#lang racket\n" #f #t ((main) (test)) #t))
>Description:
After using Racket > Create executable ... and in this specific case a distribution, the main racket editor window will no longer allow running of the original program.
>How-To-Repeat:
1. open up Dr. Racket. E.g. from the command line type drracket
2. by default DrRacket will open up a blank document with "#lang racket" as the only text therein. Leave that.
3. select File > Save Definitions As ... from the menu
4. enter a filename, such as test-bug.rkt, and click Save
5. select Racket > Create Executable... from the menu
6. leave the default settings, which should be "standalone" and "racket" (but I don't think it matters)
7. click the Create button
8. When this process is finished, the main DrRacket editor/ide will be the front window. 
9. Click the "Run" button.
10. Two error messages are displayed:

define-values: assignment disallowed;
 cannot re-define a constant
  constant: lang:read.1

and 

Module Language: invalid language specification in: racket
>Fix:
>Audit-Trail:
From: Robby Findler <robby@eecs.northwestern.edu>
To: Erik Pearson <erik@adaptations.com>, bugs <bugs@racket-lang.org>
Cc: nobody <nobody@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/14120: Cannot run programs after creating executable
Date: Thu, 24 Oct 2013 15:50:47 -0500

 --089e01537e42c7449f04e982c917
 Content-Type: text/plain; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 I can see the bad behavior, but I'm not able to easily narrow it down. I
 can offer this much; below is the call that DrRacket is making to create
 the executable.
 
 I'm not sure what it is about how DrRacket starts running the user's
 program that causes this to fail, tho. It doesn't fail with the definitions
 window being
 
    (module bug racket)
 
 only when it is
 
    #lang racket
 
 Maybe that's a clue?
 
 Robby
 
 #lang racket
 
 (require compiler/embed)
 (define me (let-syntax ([m (=CE=BB (x) #`'#,(syntax-source x))])
                m))
 (define-values (dir me-no-extension)
   (let-values ([(base name dir) (split-path me)])
     (values
      base
      (regexp-replace #rx"[.][^.]*$" (path->string name) ""))))
 
 (create-embedding-executable
  (build-path dir me-no-extension)
  #:gracket? #f
  #:verbose? #f
  #:modules (list (list #f me))
  #:configure-via-first-module? #t
  #:literal-expression
  (parameterize ((current-namespace (make-base-empty-namespace)))
    (namespace-require (quote racket/base))
    (compile `(namespace-require `'',(string->symbol me-no-extension))))
  #:cmdline (quote ("-U" "--")))
 
 --089e01537e42c7449f04e982c917
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 <div dir=3D"ltr">I can see the bad behavior, but I&#39;m not able to easily=
  narrow it down. I can offer this much; below is the call that DrRacket is =
 making to create the executable.<div><br></div><div>I&#39;m not sure what i=
 t is about how DrRacket starts running the user&#39;s program that causes t=
 his to fail, tho. It doesn&#39;t fail with the definitions window being</di=
 v>
 <div><br></div><div>=C2=A0 =C2=A0(module bug racket)</div><div><br></div><d=
 iv>only when it is=C2=A0</div><div><br></div><div>=C2=A0 =C2=A0#lang racket=
 </div><div><br></div><div>Maybe that&#39;s a clue?</div><div><br></div><div=
 >Robby<br><div><br></div>
 <div><div>#lang racket</div><div><br></div><div>(require compiler/embed)</d=
 iv><div>(define me (let-syntax ([m (=CE=BB (x) #`&#39;#,(syntax-source x))]=
 )</div><div>=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0m))</div=
 ><div>(define-values (dir me-no-extension)</div>
 <div>=C2=A0 (let-values ([(base name dir) (split-path me)])</div><div>=C2=
 =A0 =C2=A0 (values=C2=A0</div><div>=C2=A0 =C2=A0 =C2=A0base</div><div>=C2=
 =A0 =C2=A0 =C2=A0(regexp-replace #rx&quot;[.][^.]*$&quot; (path-&gt;string =
 name) &quot;&quot;))))</div></div><div><br></div><div>
 (create-embedding-executable<br></div><div><div>=C2=A0(build-path dir me-no=
 -extension)</div><div>=C2=A0#:gracket? #f</div><div>=C2=A0#:verbose? #f</di=
 v><div>=C2=A0#:modules (list (list #f me))</div><div>=C2=A0#:configure-via-=
 first-module? #t</div>
 <div>=C2=A0#:literal-expression=C2=A0</div><div>=C2=A0(parameterize ((curre=
 nt-namespace (make-base-empty-namespace)))</div><div>=C2=A0 =C2=A0(namespac=
 e-require (quote racket/base))</div><div>=C2=A0 =C2=A0(compile `(namespace-=
 require `&#39;&#39;,(string-&gt;symbol me-no-extension))))</div>
 <div>=C2=A0#:cmdline (quote (&quot;-U&quot; &quot;--&quot;)))</div></div><d=
 iv><br></div><div><br></div></div></div>
 
 --089e01537e42c7449f04e982c917--
