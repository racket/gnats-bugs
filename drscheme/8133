From apache@plt-scheme.org Mon Jun 19 17:06:20 2006
Received: from champlain.ccs.neu.edu (champlain.ccs.neu.edu [127.0.0.1])
	by champlain.ccs.neu.edu (8.12.10/8.12.10) with ESMTP id k5JL6DL4007012
	for <bugs@plt-scheme.org>; Mon, 19 Jun 2006 17:06:13 -0400
Message-Id: <200606192106.k5JL6DsG007007@champlain.ccs.neu.edu>
Date: Mon, 19 Jun 2006 17:06:13 -0400
From: samth@ccs.neu.edu
To: bugs@plt-scheme.org
Subject: DrScheme internal error

>Number:         8133
>Category:       drscheme
>Synopsis:       DrScheme internal error
>Class:          sw-bug
>Responsible:    robby
>Severity:       critical
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Mon Jun 19 17:10:00 -0400 2006
>Last-Modified:  Tue Jun 20 17:00:00 -0400 2006
>Originator:     Sam TH
>Organization:
plt
>Submitter-Id:   unknown
>Release:        350.1-svn18jun2006
>Environment:
unix "Linux punge 2.6.15-25-386 #1 PREEMPT Wed Jun 14 11:25:49 UTC 2006 i686 GNU/Linux" (i386-linux) (get-display-depth) = 24
Docs Installed:
(("/home/samth/sw/plt/doc" "r5rs" "mzscheme" "mred" "help" "tour" "drscheme" "srfi" "mzlib" "misclib" "mrlib" "framework" "foreign" "mzc" "tools" "insidemz" "web-server" "swindle" "plot" "release-notes" "t-y-scheme" "tex2page" "beginning" "beginning-abbr" "intermediate" "intermediate-lambda" "advanced" "teachpack" "profj-beginner" "profj-intermediate" "profj-advanced"))
Collections:
(("/home/samth/scheme" non-existent-path) ("/home/samth/.plt-scheme/350.1/collects" non-existent-path) ("/home/samth/sw/plt/collects" ".svn" "tex2page" "string-constants" "planet" "mzcom" "drscheme" "r6rs" "framework" "srpersist" "sirmail" "slideshow" "syntax-color" "srfi" "algol60" "dynext" "slibinit" "make" "plot" "lang" "web-server" "openssl" "scribble" "frtime" "mred" "guibuilder" "htdp" "setup" "graphics" "profjWizard" "afm" "config" "defaults" "icons" "skipper" "handin-client" "texpict" "profjBoxes" "browser" "teachpack" "parser-tools" "waterworld" "r5rs" "mztake" "games" "honu-module" "eopl" "tests" "html" "swindle" "handin-server" "repos-time-stamp" "mrflow" "compiler" "embedded-gui" "profj" "stepper" "readline" "hierlist" "sgl" "version" "syntax" "preprocessor" "net" "help" "htdch" "xelda" "trace" "slatex" "xml" "launcher" "ffi" "mrlib" "test-suite" "errortrace" "mzscheme" "mysterx" "mzlib" "info-domain"))
Human Language: english
Teachpack filenames: ()
Computer Language: (("Professional Languages" "PLT" "Pretty Big (includes MrEd and Advanced Student)") #6(#t write mixed-fraction-e #f #t debug))
>Description:
Put the following in DrScheme, in the module language.

(module m mzscheme
  (define-syntax rename #f)
  (require (rename mzscheme ++ +)))

Hit check syntax.

You get a DrScheme internal error.
>How-To-Repeat:
>Fix:
>Audit-Trail:
From: Robby Findler <robby@cs.uchicago.edu>
To: bugs@plt-scheme.org
Cc: mflatt@cs.utah.edu
Subject: Re: all/8133: DrScheme internal error
Date: Mon, 19 Jun 2006 16:16:48 -0500

 At Mon, 19 Jun 2006 17:10:04 -0400, samth@ccs.neu.edu wrote:
 > A new problem report is waiting at
 >   http://bugs.plt-scheme.org/query/?cmd=view&pr=8133
 > 
 > Reported by Sam TH for release: 350.1-svn18jun2006
 > 
 > *** Description:
 > Put the following in DrScheme, in the module language.
 > 
 > (module m mzscheme
 >   (define-syntax rename #f)
 >   (require (rename mzscheme ++ +)))
 > 
 > Hit check syntax.
 > 
 > You get a DrScheme internal error.
 
 I get the below. The problem is that check syntax is assuming that the
 module paths are either well-formed or that expanding the program
 results in a syntax error being raised, but that's not happening here.
 
 Is this a bad assumption?
 
 Robby
 
 standard-module-name-resolver: expects argument of type <module path>; given (rename mzscheme ++ +)
 
  === context ===
 standard-module-name-resolver
 /Users/robby/svn/exp/plt/collects/drscheme/syncheck.ss:1829:6: get-require-filename
 /Users/robby/svn/exp/plt/collects/drscheme/syncheck.ss:1807:8
 /Users/robby/svn/exp/plt/collects/drscheme/syncheck.ss:1290:10: level-loop
 /Users/robby/svn/exp/plt/collects/drscheme/syncheck.ss:1275:6: annotate-basic
 /Users/robby/svn/exp/plt/collects/drscheme/syncheck.ss:1223:16: expanded-expression
 /Users/robby/svn/exp/plt/collects/drscheme/syncheck.ss:1062:40
 /Users/robby/svn/exp/plt/collects/drscheme/syncheck.ss:1098:10: with-lock/edit-sequence method in ...drscheme/syncheck.ss:848:8
 
 
From: Matthew Flatt <mflatt@cs.utah.edu>
To: Robby Findler <robby@cs.uchicago.edu>
Cc: bugs@plt-scheme.org
Subject: Re: all/8133: DrScheme internal error
Date: Mon, 19 Jun 2006 18:04:21 -0500

 At Mon, 19 Jun 2006 16:16:48 -0500, Robby Findler wrote:
 > > Put the following in DrScheme, in the module language.
 > > 
 > > (module m mzscheme
 > >   (define-syntax rename #f)
 > >   (require (rename mzscheme ++ +)))
 > > 
 > > Hit check syntax.
 > > 
 > > You get a DrScheme internal error.
 > 
 > I get the below. The problem is that check syntax is assuming that the
 > module paths are either well-formed or that expanding the program
 > results in a syntax error being raised, but that's not happening here.
 
 The problem is that Check Syntax and MzScheme parse `require' in
 different ways. Check Syntax uses `module-identifier=?' to recognize
 require sub-forms, but MzScheme uses symbolic equality.
 
 Matthew
 
From: Robby Findler <robby@cs.uchicago.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: bugs@plt-scheme.org
Subject: Re: all/8133: DrScheme internal error
Date: Mon, 19 Jun 2006 18:42:22 -0500

 At Mon, 19 Jun 2006 18:04:21 -0500, Matthew Flatt wrote:
 > The problem is that Check Syntax and MzScheme parse `require' in
 > different ways. Check Syntax uses `module-identifier=?' to recognize
 > require sub-forms, but MzScheme uses symbolic equality.
 
 I'm assuming that symbolic equality is what check syntax should be
 using, then?
 
 I guess the module browser and other tools like that should also be
 using symbolic equality?
 
 Robby
 
From: Matthew Flatt <mflatt@cs.utah.edu>
To: Robby Findler <robby@cs.uchicago.edu>
Cc: bugs@plt-scheme.org
Subject: Re: all/8133: DrScheme internal error
Date: Mon, 19 Jun 2006 19:11:34 -0500

 At Mon, 19 Jun 2006 18:42:22 -0500, Robby Findler wrote:
 > At Mon, 19 Jun 2006 18:04:21 -0500, Matthew Flatt wrote:
 > > The problem is that Check Syntax and MzScheme parse `require' in
 > > different ways. Check Syntax uses `module-identifier=?' to recognize
 > > require sub-forms, but MzScheme uses symbolic equality.
 > 
 > I'm assuming that symbolic equality is what check syntax should be
 > using, then?
 > 
 > I guess the module browser and other tools like that should also be
 > using symbolic equality?
 
 Yes.
 
 Matthew
 

From: Robby Findler <robby@cs.uchicago.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: bugs@plt-scheme.org
Subject: Re: all/8133: DrScheme internal error
Date: Mon, 19 Jun 2006 22:24:18 -0500

 Same thing for `provide'?
 
 Robby
 
 At Mon, 19 Jun 2006 19:11:34 -0500, Matthew Flatt wrote:
 > At Mon, 19 Jun 2006 18:42:22 -0500, Robby Findler wrote:
 > > At Mon, 19 Jun 2006 18:04:21 -0500, Matthew Flatt wrote:
 > > > The problem is that Check Syntax and MzScheme parse `require' in
 > > > different ways. Check Syntax uses `module-identifier=?' to recognize
 > > > require sub-forms, but MzScheme uses symbolic equality.
 > > 
 > > I'm assuming that symbolic equality is what check syntax should be
 > > using, then?
 > > 
 > > I guess the module browser and other tools like that should also be
 > > using symbolic equality?
 > 
 > Yes.
 > 
 > Matthew
From: Robby Findler <robby@cs.uchicago.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: bugs@plt-scheme.org
Subject: Re: all/8133: DrScheme internal error
Date: Mon, 19 Jun 2006 22:42:04 -0500

 Looks like it does need to be done for provide, too.
 
 Robby
From: Robby Findler <robby@cs.uchicago.edu>
To: samth@ccs.neu.edu
Cc: bugs@plt-scheme.org, Matthew Flatt <mflatt@cs.utah.edu>,
        matthias@ccs.neu.edu
Subject: Re: all/8133: DrScheme internal error
Date: Mon, 19 Jun 2006 22:50:18 -0500

 Thanks for the excellent bug report!
 
 I've fixed the bug (and one more I found, relating to provide), but I'm
 leaving the PR open for now, since the module browser may suffer the
 same flaws (and I can't look into that right now).
 
 Robby
 
From: Matthew Flatt <mflatt@cs.utah.edu>
To: Robby Findler <robby@cs.uchicago.edu>
Cc: bugs@plt-scheme.org
Subject: Re: all/8133: DrScheme internal error
Date: Tue, 20 Jun 2006 06:37:49 -0500

 At Mon, 19 Jun 2006 22:42:04 -0500, Robby Findler wrote:
 > Looks like it does need to be done for provide, too.
 
 Yes.
 
 Matthew
 
From: Sam TH <samth@ccs.neu.edu>
To: Robby Findler <robby@cs.uchicago.edu>
Cc: bugs@plt-scheme.org, Matthew Flatt <mflatt@cs.utah.edu>,
        matthias@ccs.neu.edu
Subject: Re: all/8133: DrScheme internal error
Date: Tue, 20 Jun 2006 11:12:41 -0400

 On Mon, 2006-06-19 at 22:50 -0500, Robby Findler wrote:
 > Thanks for the excellent bug report!
 > 
 > I've fixed the bug (and one more I found, relating to provide), but I'm
 > leaving the PR open for now, since the module browser may suffer the
 > same flaws (and I can't look into that right now).
 
 I tried the module browser on the file that originally gave me trouble
 (not the cut down test-case) and it seemed to work fine.
 
 sam th
 

State changed from "open" to "closed" by robby at Tue, 20 Jun 2006 16:59:23 -0400
Reason>>> all fixed

From: Robby Findler <robby@cs.uchicago.edu>
To: Sam TH <samth@ccs.neu.edu>
Cc: bugs@plt-scheme.org, Matthew Flatt <mflatt@cs.utah.edu>,
        matthias@ccs.neu.edu
Subject: Re: all/8133: DrScheme internal error
Date: Tue, 20 Jun 2006 15:58:55 -0500

 At Tue, 20 Jun 2006 11:12:41 -0400, Sam TH wrote:
 > On Mon, 2006-06-19 at 22:50 -0500, Robby Findler wrote:
 > > Thanks for the excellent bug report!
 > > 
 > > I've fixed the bug (and one more I found, relating to provide), but I'm
 > > leaving the PR open for now, since the module browser may suffer the
 > > same flaws (and I can't look into that right now).
 > 
 > I tried the module browser on the file that originally gave me trouble
 > (not the cut down test-case) and it seemed to work fine.
 
 Thanks. A grep didn't show up anything, either, so I guess there's
 nothing (we know about :).
 
 Robby
