From nobody@cs.rice.edu  Fri Aug 15 09:21:37 1997
Received: from web.cs.rice.edu (web.cs.rice.edu [128.42.1.163]) by cs.rice.edu (8.8.5/8.7.1) with ESMTP id JAA23853 for <plt-gnats@cs.rice.edu>; Fri, 15 Aug 1997 09:21:37 -0500 (CDT)
Message-Id: <199708151421.JAA00549@web.cs.rice.edu>
Date: Fri, 15 Aug 1997 09:21:36 -0500 (CDT)
From: tmiller@cs.rice.edu
Reply-To: tmiller@cs.rice.edu
To: plt-gnats@cs.rice.edu
Subject: DrScheme does not appear to be recycling file descriptors 

>Number:         258
>Category:       drscheme
>Synopsis:       DrScheme does not appear to be recycling file descriptors
>Confidential:   no
>Severity:       serious
>Priority:       medium
>Responsible:    robby
>State:          closed
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Fri Aug 15 14:25:01 GMT 1997
>Last-Modified:  Sat Aug 23 16:54:20 MST 1997
>Originator:     Tim Miller
>Organization:
titan
>Release:        50/3:4s1
>Environment:
Solaris
>Description:
I have a program which is split into may files and also references some
libraries. I can execute the program three times without problem, but on
the fourth try I get the following error:

Internal Error: open-input-file: cannot open input file: "loadu.ss" in directory
"/home/tmiller/work/machines" (24)

This is when my file descriptors are limited to 64, but when I
unlimit my descriptors to 1024, the fourth execution succeeds. (I can only
assume that the problem is delayed until approximately the 30th execution,
since I don't have the patience to test that theory).
>How-To-Repeat:
see above
>Fix:

>Audit-Trail:

From: Matthew Flatt <mflatt@cs.rice.edu>
To: shriram@cs.rice.edu, robby@cs.rice.edu
Cc: plt-gnats@cs.rice.edu
Subject: Re: all/258: DrScheme does not appear to be recycling file descriptors 
Date: Fri, 15 Aug 1997 09:28:47 -0500 (CDT)

 Clarification: Tim's program doesn't open files. It references some
 files with (reference ...). So the problem is that some files are
 being opened and never closed by either zodiac or DrScheme's GUI.
 (This is as *opposed* to some problem where DrScheme doesn't reclaim
 file descriptors created by the program being developed.)
 
 Matthew

From: Shriram Krishnamurthi <shriram@cs.rice.edu>
To: Matthew Flatt <mflatt@cs.rice.edu>
Cc: robby@cs.rice.edu, plt-gnats@cs.rice.edu
Subject: Re: all/258: DrScheme does not appear to be recycling file descriptors 
Date: Fri, 15 Aug 1997 10:00:54 -0500 (CDT)

 In M3:
 
 - reference used outside units just turns into load/use-compiled.
 
 - reference-library turns into require-library (or (void), if it's one
   of the built-in libraries).
 
 - reference-unit and reference-unit/sig turn into load/use-compiled
   (with a (signed-)unit-hood check).
 
 - reference-library-unit and reference-library-unit/sig turn into
   require-library with a (signed-)unit-hood check.
 
 Hence, it seems unlikely the error is in M3.  I'd be happy to look
 again and in more detail if you wish.
 
 'shriram


Note from Matthew:
  (let loop () (load "x.ss") (loop)) runs out of file descriptors.
  This suggests that the load handler is at fault.

Responsible-Changed-From-To: ptg->robby
Responsible-Changed-By: robby
Responsible-Changed-When: Sat Aug 23 16:01:42 1997
Responsible-Changed-Why:

State-Changed-From-To: open-closed
State-Changed-By: robby
State-Changed-When: Sat Aug 23 16:53:58 1997
State-Changed-Why:

  (let loop () (load "x.ss") (loop)) now correctly runs forever.

>Unformatted:
