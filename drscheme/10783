From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Thu Feb 25 14:04:49 2010
Received: from mail-gy0-f172.google.com (mail-gy0-f172.google.com [209.85.160.172])
	by champlain.ccs.neu.edu (8.14.3/8.14.3) with ESMTP id o1PJ4lGD009695
	for <bugs@bugs.plt-scheme.org>; Thu, 25 Feb 2010 14:04:47 -0500
Message-Id: <201002251904.o1PJ4PBl009683@champlain.ccs.neu.edu>
Date: Thu, 25 Feb 2010 14:04:25 -0500
From: matthias@ccs.neu.edu
To: bugs@plt-scheme.org
Subject: 2htdp.image doesn't work with Save Image menu in drscheme

>Number:         10783
>Category:       drscheme
>Synopsis:       2htdp.image doesn't work with Save Image menu in drscheme
>Class:          sw-bug
>Responsible:    robby
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Thu Feb 25 14:08:01 -0500 2010
>Closed-Date:    Thu Feb 25 16:00:31 -0500 2010
>Last-Modified:  Sun Apr 25 10:14:58 -0400 2010
>Originator:     matthias
>Organization:
plt
>Submitter-Id:   unknown
>Release:        4.2.4.3-svn23feb2010
>Environment:
macosx "Darwin antarctica.ccs.neu.edu 9.8.0 Darwin Kernel Version 9.8.0: Wed Jul 15 16:55:01 PDT 2009; root:xnu-1228.15.4~1/RELEASE_I386 i386" (i386-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 199379672

Collections:
(("/Users/matthias/0Unison/collects/" ".DS_Store" "date" "finance" "info-domain" "info.ss" "pdf.ss~" "session" "short" "testing" "tll-collects" "utils" "web") ("/Users/matthias/Library/PLT Scheme/4.2.4.3/collects" non-existent-path) ("/Users/matthias/plt/collects" ".DS_Store" ".svn" "2htdp" "afm" "algol60" "at-exp" "big" "browser" "combinator-parser" "compiler" "config" "defaults" "deinprogramm" "doc" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu" "honu-module" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "little-helper" "macro-debugger" "make" "meta" "mred" "mrflow" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "mztake" "net" "openssl" "parser-tools" "plai" "planet" "plot" "preprocessor" "profile" "profj" "profjBoxes" "profjWizard" "r5rs" "r6rs" "reader" "readline" "redex" "repos-time-stamp" "rnrs" "s-exp" "scheme" !
 "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "sirmail" "skipper" "slatex" "slibinit" "slideshow" "srfi" "srpersist" "stepper" "string-constants" "stxclass" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "test-suite" "tests" "tex2page" "texpict" "trace" "typed" "typed-scheme" "unstable" "version" "waterworld" "web-server" "wxme" "xml"))
Computer Language: (("Teaching Languages" "How to Design Programs" "Beginning Student") (#(#t constructor repeating-decimal #f #t none) #f ()))
>Description:
>How-To-Repeat:
Run this program: 

; bsl
(require 2htdp/image)
(rectangle 10 20 "solid" "black")

right click on image and select save image. choose a name, and then watch failure
>Fix:
>Release-Note:
The bug was that I had started doing this... but then forgot to finish!

I'm not sure about the types. There was a variable that was bound to one of three different kinds of objects. Two of those objects accepted the get-bitmap method and the third doesn't, but that third got the method called here.

Some combination of typed scheme's occurrence typing and a way to type objects should be able to do this, but I don't know how objects work with typed scheme.

Here's the code before:

                   (when (or (is-a? snip image-snip%)
                             (is-a? snip image-core:image%)
                             (is-a? snip cache-image-snip%))
                     (add-sep)
                     (new menu-item%
                          [parent menu]
                          [label (string-constant save-image)]
                          [callback
                           (&#955; (_1 _2)
                             (let ([fn (put-file #f 
                                                 (send text get-top-level-window)
                                                 #f "untitled.png" "png")])
                               (when fn
                                 (let ([kind (filename->kind fn)])
                                   (cond
                                     [kind
                                      (send (send snip get-bitmap) save-file fn kind)]
                                     [else
                                      (message-box 
                                       (string-constant drscheme)
                                       "Must choose a filename that ends with either .png, .jpg, .xbm, or .xpm")])))))]))

and after:

                 (let ([snip (send text find-snip pos 'after-or-none)])
                   (when (or (is-a? snip image-snip%)
                             (is-a? snip image-core:image%)
                             (is-a? snip cache-image-snip%))
                     (add-sep)
                     (new menu-item%
                          [parent menu]
                          [label (string-constant save-image)]
                          [callback
                           (&#955; (_1 _2)
                             (let ([fn (put-file #f 
                                                 (send text get-top-level-window)
                                                 #f "untitled.png" "png")])
                               (when fn
                                 (let ([kind (filename->kind fn)])
                                   (cond
                                     [kind
                                      (cond
                                        [(or (is-a? snip image-snip%)
                                             (is-a? snip cache-image-snip%))
                                         (send (send snip get-bitmap) save-file fn kind)]
                                        [else
                                         (image-core:save-image-as-bitmap snip fn kind)])]
                                     [else
                                      (message-box 
                                       (string-constant drscheme)
                                       "Must choose a filename that ends with either .png, .jpg, .xbm, or .xpm")])))))])))

>Audit-Trail:
State changed from "open" to "closed" by robby at Thu, 25 Feb 2010 16:00:31 -0500
Reason>>> fixed and released to SVN.

From: Matthias Felleisen <matthias@ccs.neu.edu>
To: bugs@plt-scheme.org
Cc: robby@plt-scheme.org, nobody@plt-scheme.org
Subject: Re: [plt-bug] drscheme/10783 2htdp.image doesn't work with Save Image menu in drscheme
Date: Thu, 25 Feb 2010 17:43:41 -0500

 The fix isn't quite right. Run attached program, look at image of  
 (riot 20). Then save and compare. It's missing the rightmost  
 bottommost pixels.
 
 
 
 #| student riot |#
 
 (require 2htdp/image)
 
 ;; physical constants
 (define wseat 4)
 (define hseat 6)
 
 (define w* 10)
 (define h* 20)
 
 (define width (* w* wseat))
 (define height (* h* hseat))
 
 ;; graphical constant
 (define seat (rectangle wseat hseat "outline" "black"))
 (define baloon (circle 3 "solid" "red"))
 
 ;; N -> Image
 ;; produce a row of seats
 (define (row n)
    (cond
      [(zero? n) (rectangle 0 0 "solid" "white")]
      [else (above seat (row (- n 1)))]))
 
 ;; N Image -> Image
 (define (lecture-hall n)
    (cond
      [(zero? n) (rectangle 0 0 "solid" "white")]
      [else (beside (row h*) (lecture-hall (- n 1)))]))
 
 ;; N -> Image
 ;; simulate a student riot
 (define (riot n)
    (cond
      [(zero? n) (lecture-hall w*)]
      [else (place-image baloon (random width) (random height) (riot  
 (sub1 n)))]))
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: bugs@plt-scheme.org, nobody@plt-scheme.org
Subject: Re: [plt-bug] drscheme/10783 2htdp.image doesn't work with Save Image 
	menu in drscheme
Date: Thu, 25 Feb 2010 19:36:32 -0600

 You mean the border is missing? The same thing as this program?
 
   #lang scheme
   (require 2htdp/image)
   (rectangle 100 100 'outline 'black)
 
 ?
 
 You probably remember how we discussed that the outline of an outline
 rectangle is outside of the bounding box? That's why it goes away.
 
 Robby
 
 On Thu, Feb 25, 2010 at 4:43 PM, Matthias Felleisen
 <matthias@ccs.neu.edu> wrote:
 >
 > The fix isn't quite right. Run attached program, look at image of (riot 2=
 0).
 > Then save and compare. It's missing the rightmost bottommost pixels.
 >
 >
 >
 > #| student riot |#
 >
 > (require 2htdp/image)
 >
 > ;; physical constants
 > (define wseat 4)
 > (define hseat 6)
 >
 > (define w* 10)
 > (define h* 20)
 >
 > (define width (* w* wseat))
 > (define height (* h* hseat))
 >
 > ;; graphical constant
 > (define seat (rectangle wseat hseat "outline" "black"))
 > (define baloon (circle 3 "solid" "red"))
 >
 > ;; N -> Image
 > ;; produce a row of seats
 > (define (row n)
 > =C2=A0(cond
 > =C2=A0 =C2=A0[(zero? n) (rectangle 0 0 "solid" "white")]
 > =C2=A0 =C2=A0[else (above seat (row (- n 1)))]))
 >
 > ;; N Image -> Image
 > (define (lecture-hall n)
 > =C2=A0(cond
 > =C2=A0 =C2=A0[(zero? n) (rectangle 0 0 "solid" "white")]
 > =C2=A0 =C2=A0[else (beside (row h*) (lecture-hall (- n 1)))]))
 >
 > ;; N -> Image
 > ;; simulate a student riot
 > (define (riot n)
 > =C2=A0(cond
 > =C2=A0 =C2=A0[(zero? n) (lecture-hall w*)]
 > =C2=A0 =C2=A0[else (place-image baloon (random width) (random height) (ri=
 ot (sub1
 > n)))]))
 >
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: bugs@plt-scheme.org, nobody@plt-scheme.org
Subject: Re: [plt-bug] drscheme/10783 2htdp.image doesn't work with Save Image  menu in drscheme
Date: Thu, 25 Feb 2010 21:01:59 -0500

 Yes, I know that but saving them?=20
 
 (I am writing 2htdp/image programs to put into HtDP/2e.)
 
 
 
 On Feb 25, 2010, at 8:36 PM, Robby Findler wrote:
 
 > You mean the border is missing? The same thing as this program?
 >=20
 >  #lang scheme
 >  (require 2htdp/image)
 >  (rectangle 100 100 'outline 'black)
 >=20
 > ?
 >=20
 > You probably remember how we discussed that the outline of an outline
 > rectangle is outside of the bounding box? That's why it goes away.
 >=20
 > Robby
 >=20
 > On Thu, Feb 25, 2010 at 4:43 PM, Matthias Felleisen
 > <matthias@ccs.neu.edu> wrote:
 >>=20
 >> The fix isn't quite right. Run attached program, look at image of =
 (riot 20).
 >> Then save and compare. It's missing the rightmost bottommost pixels.
 >>=20
 >>=20
 >>=20
 >> #| student riot |#
 >>=20
 >> (require 2htdp/image)
 >>=20
 >> ;; physical constants
 >> (define wseat 4)
 >> (define hseat 6)
 >>=20
 >> (define w* 10)
 >> (define h* 20)
 >>=20
 >> (define width (* w* wseat))
 >> (define height (* h* hseat))
 >>=20
 >> ;; graphical constant
 >> (define seat (rectangle wseat hseat "outline" "black"))
 >> (define baloon (circle 3 "solid" "red"))
 >>=20
 >> ;; N -> Image
 >> ;; produce a row of seats
 >> (define (row n)
 >>  (cond
 >>    [(zero? n) (rectangle 0 0 "solid" "white")]
 >>    [else (above seat (row (- n 1)))]))
 >>=20
 >> ;; N Image -> Image
 >> (define (lecture-hall n)
 >>  (cond
 >>    [(zero? n) (rectangle 0 0 "solid" "white")]
 >>    [else (beside (row h*) (lecture-hall (- n 1)))]))
 >>=20
 >> ;; N -> Image
 >> ;; simulate a student riot
 >> (define (riot n)
 >>  (cond
 >>    [(zero? n) (lecture-hall w*)]
 >>    [else (place-image baloon (random width) (random height) (riot =
 (sub1
 >> n)))]))
 >>=20
 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: bugs@plt-scheme.org, nobody@plt-scheme.org
Subject: Re: [plt-bug] drscheme/10783 2htdp.image doesn't work with Save Image 
	menu in drscheme
Date: Thu, 25 Feb 2010 20:12:29 -0600

 On Thu, Feb 25, 2010 at 8:01 PM, Matthias Felleisen
 <matthias@ccs.neu.edu> wrote:
 >
 > Yes, I know that but saving them?
 
 We could just add one to the bounding box's size, I guess. That'll
 work for outline shapes, but won't work if someone uses a different
 pen.
 
 > (I am writing 2htdp/image programs to put into HtDP/2e.)
 
 But you don't want to be doing this for htdp2e, do you? Can't you do
 this programmatically instead of creating .png files by hand? I think
 probably I should put a helper function somewhere for you to do that.
 
 What interface would work well?
 
 Robby
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: bugs@plt-scheme.org, nobody@plt-scheme.org
Subject: Re: [plt-bug] drscheme/10783 2htdp.image doesn't work with Save Image  menu in drscheme
Date: Thu, 25 Feb 2010 21:35:42 -0500

 On Feb 25, 2010, at 9:12 PM, Robby Findler wrote:
 
 > On Thu, Feb 25, 2010 at 8:01 PM, Matthias Felleisen
 > <matthias@ccs.neu.edu> wrote:
 >>=20
 >> Yes, I know that but saving them?
 >=20
 > We could just add one to the bounding box's size, I guess. That'll
 > work for outline shapes, but won't work if someone uses a different
 > pen.
 
 Hmph.=20
 
 
 >> (I am writing 2htdp/image programs to put into HtDP/2e.)
 >=20
 > But you don't want to be doing this for htdp2e, do you? Can't you do
 > this programmatically instead of creating .png files by hand?
 
 Most of the time I use slideshow to do images like that,=20
 which is where the write-pict function comes in for which=20
 you suggested the improvement recently. When I need a picture
 for an HtDP/2e program that I actually write (exercise solution,=20
 figure) I sometimes create it by hand.=20
 
 
 > I think probably I should put a helper function somewhere for you to =
 do that.
 >=20
 > What interface would work well?
 
 Didn't John add a write png function to 2htdp/image recently?=20
 
 
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: bugs@plt-scheme.org, nobody@plt-scheme.org
Subject: Re: [plt-bug] drscheme/10783 2htdp.image doesn't work with Save Image  menu in drscheme
Date: Thu, 25 Feb 2010 21:51:32 -0500

 p.s. See
 
   http://osdir.com/ml/plt-scheme/2010-02/msg00056.html
 
 Why did John propose to add these to mrlib/image-core ? 
 
 It seems to make much more sense to put into 2htdp/image (as a re-export)
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: bugs@plt-scheme.org, nobody@plt-scheme.org
Subject: Re: [plt-bug] drscheme/10783 2htdp.image doesn't work with Save Image 
	menu in drscheme
Date: Thu, 25 Feb 2010 21:38:58 -0600

 >> We could just add one to the bounding box's size, I guess. That'll
 >> work for outline shapes, but won't work if someone uses a different
 >> pen.
 >
 > Hmph.
 
 Well, I went and did that, since I think it makes the most sense.
 
 >
 >>> (I am writing 2htdp/image programs to put into HtDP/2e.)
 >>
 >> But you don't want to be doing this for htdp2e, do you? Can't you do
 >> this programmatically instead of creating .png files by hand?
 >
 > Most of the time I use slideshow to do images like that,
 > which is where the write-pict function comes in for which
 > you suggested the improvement recently. When I need a picture
 > for an HtDP/2e program that I actually write (exercise solution,
 > figure) I sometimes create it by hand.
 
 Might as well save the code, put it in a library, and have it be
 generated automatically from that, in case things change.
 
 >> I think probably I should put a helper function somewhere for you to do that.
 >>
 >> What interface would work well?
 >
 > Didn't John add a write png function to 2htdp/image recently?
 
 Dunno.
 
 Robby
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: bugs@plt-scheme.org, nobody@plt-scheme.org
Subject: Re: [plt-bug] drscheme/10783 2htdp.image doesn't work with Save Image  menu in drscheme
Date: Fri, 26 Feb 2010 08:24:12 -0500

 On Feb 25, 2010, at 10:38 PM, Robby Findler wrote:
 
 >>> Well, I went and did that, since I think it makes the most sense.
 
 Thanks.=20
 
 > Might as well save the code, put it in a library, and have it be
 > generated automatically from that, in case things change.
 
 I always save the code in one place and re-run when needed.=20
 
 Actually not quite true. Say I have a figure in a scribble text.=20
 I do not know how to include a file in a schemeblock and worse,=20
 the file would have a #lang line, which I don't want to show yet.=20
 
 >>> I think probably I should put a helper function somewhere for you to =
 do that.
 >>>=20
 >>> What interface would work well?
 >>=20
 >> Didn't John add a write png function to 2htdp/image recently?
 >=20
 > Dunno.
 
 Let's add John's function to the 2htdp/image interface. I suspect
 students may want to be able to do this kind of stuff too.=20
 
 -- Matthias
 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: Robby Findler <robby@eecs.northwestern.edu>, bugs@plt-scheme.org,
        nobody@plt-scheme.org
Subject: Re: [plt-bug] drscheme/10783 2htdp.image doesn't work with Save Image 
	menu in drscheme
Date: Fri, 26 Feb 2010 07:35:08 -0600

 On Friday, February 26, 2010, Matthias Felleisen <matthias@ccs.neu.edu> wrote:
 >
 > On Feb 25, 2010, at 10:38 PM, Robby Findler wrote:
 >
 >> Might as well save the code, put it in a library, and have it be
 >> generated automatically from that, in case things change.
 >
 > I always save the code in one place and re-run when needed.
 >
 > Actually not quite true. Say I have a figure in a scribble text.
 > I do not know how to include a file in a schemeblock and worse,
 > the file would have a #lang line, which I don't want to show yet.
 >
 
 sounds like it is just a matter of setting up the right abstrations.
 @mr-interaction is close and I think it is probably worth your time to
 do this (I think we had a similar discussion about some other document
 where I ended up setting up the abstraction and you were initially
 resistant but then were happy to use it, but the details are eluding
 me).
 
 And yes, save-bitmap (or something with another name) is on the list.
 Should be easy to add.
 
 Robby
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: bugs@plt-scheme.org, nobody@plt-scheme.org
Subject: Re: [plt-bug] drscheme/10783 2htdp.image doesn't work with Save Image  menu in drscheme
Date: Fri, 26 Feb 2010 08:37:12 -0500

 On Feb 26, 2010, at 8:35 AM, Robby Findler wrote:
 
 > On Friday, February 26, 2010, Matthias Felleisen =
 <matthias@ccs.neu.edu> wrote:
 >>=20
 >> On Feb 25, 2010, at 10:38 PM, Robby Findler wrote:
 >>=20
 >>> Might as well save the code, put it in a library, and have it be
 >>> generated automatically from that, in case things change.
 >>=20
 >> I always save the code in one place and re-run when needed.
 >>=20
 >> Actually not quite true. Say I have a figure in a scribble text.
 >> I do not know how to include a file in a schemeblock and worse,
 >> the file would have a #lang line, which I don't want to show yet.
 >>=20
 >=20
 > sounds like it is just a matter of setting up the right abstrations.
 > @mr-interaction is close and I think it is probably worth your time to
 > do this (I think we had a similar discussion about some other document
 > where I ended up setting up the abstraction and you were initially
 > resistant but then were happy to use it, but the details are eluding
 > me).
 
 The redex book :-)=20
 
 
 > And yes, save-bitmap (or something with another name) is on the list.
 > Should be easy to add.
 
 ok
 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Sam Tobin-Hochstadt <samth@ccs.neu.edu>
Cc: Matthias Felleisen <matthias@ccs.neu.edu>,
        Stevie Strickland <sstrickl@ccs.neu.edu>, bugs@plt-scheme.org
Subject: Re: [plt-bug] drscheme/10783 what do you think, type error or not?
Date: Thu, 25 Feb 2010 15:35:10 -0600

 But the world's worst oo type system can catch this bug? (I've added
 bugs back on so I can find this later.)
 
 Robby
 
 On Thu, Feb 25, 2010 at 3:31 PM, Sam Tobin-Hochstadt <samth@ccs.neu.edu> wr=
 ote:
 > TS would definitely have caught this bug, assuming that
 > `image-core:image%' doesn't have the get-bitmap operation.
 >
 > For objects in general, right now TS has the world's worst OO type
 > system, which allows it to handle a few very limited cases. =C2=A0Stevie
 > (cc'ed) and I plan to work on making a better one using his new
 > object/class contract work, but that requires first coming up with a
 > type system for first-class classes. =C2=A0I believe that Stevie and
 > Matthias have some ideas here.
 >
 > On Thu, Feb 25, 2010 at 4:01 PM, Robby Findler
 > <robby@eecs.northwestern.edu> wrote:
 >> Would TS be able to handle this? What is the state of TS wrt to objects?
 >>
 >> =C2=A0http://bugs.plt-scheme.org/query/?cmd=3Dview&pr=3D10783
 >>
 >> Robby
 >>
 >
 >
 >
 > --
 > sam th
 > samth@ccs.neu.edu
 >
From: Sam Tobin-Hochstadt <samth@ccs.neu.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: Matthias Felleisen <matthias@ccs.neu.edu>,
        Stevie Strickland <sstrickl@ccs.neu.edu>, bugs@plt-scheme.org
Subject: Re: [plt-bug] drscheme/10783 what do you think, type error or not?
Date: Thu, 25 Feb 2010 16:39:38 -0500

 On Thu, Feb 25, 2010 at 4:35 PM, Robby Findler
 <robby@eecs.northwestern.edu> wrote:
 > But the world's worst oo type system can catch this bug? (I've added
 > bugs back on so I can find this later.)
 
 It would catch the bug, but it couldn't handle the rest of the code -
 for example, the `is-a?' checks won't tell TS anything, because the
 type system knows nothing about class values - it's all structural
 types.
 
 >
 > Robby
 >
 > On Thu, Feb 25, 2010 at 3:31 PM, Sam Tobin-Hochstadt <samth@ccs.neu.edu> =
 wrote:
 >> TS would definitely have caught this bug, assuming that
 >> `image-core:image%' doesn't have the get-bitmap operation.
 >>
 >> For objects in general, right now TS has the world's worst OO type
 >> system, which allows it to handle a few very limited cases. =A0Stevie
 >> (cc'ed) and I plan to work on making a better one using his new
 >> object/class contract work, but that requires first coming up with a
 >> type system for first-class classes. =A0I believe that Stevie and
 >> Matthias have some ideas here.
 >>
 >> On Thu, Feb 25, 2010 at 4:01 PM, Robby Findler
 >> <robby@eecs.northwestern.edu> wrote:
 >>> Would TS be able to handle this? What is the state of TS wrt to objects=
 ?
 >>>
 >>> =A0http://bugs.plt-scheme.org/query/?cmd=3Dview&pr=3D10783
 >>>
 >>> Robby
 >>>
 >>
 >>
 >>
 >> --
 >> sam th
 >> samth@ccs.neu.edu
 >>
 >
 
 
 
 --=20
 sam th
 samth@ccs.neu.edu
From: Robby Findler <robby@eecs.northwestern.edu>
To: Sam Tobin-Hochstadt <samth@ccs.neu.edu>
Cc: Matthias Felleisen <matthias@ccs.neu.edu>,
        Stevie Strickland <sstrickl@ccs.neu.edu>, bugs@plt-scheme.org
Subject: Re: [plt-bug] drscheme/10783 what do you think, type error or not?
Date: Sat, 27 Feb 2010 06:43:21 -0600

 On Thu, Feb 25, 2010 at 3:39 PM, Sam Tobin-Hochstadt <samth@ccs.neu.edu> wrote:
 > On Thu, Feb 25, 2010 at 4:35 PM, Robby Findler
 > <robby@eecs.northwestern.edu> wrote:
 >> But the world's worst oo type system can catch this bug? (I've added
 >> bugs back on so I can find this later.)
 >
 > It would catch the bug, but it couldn't handle the rest of the code -
 > for example, the `is-a?' checks won't tell TS anything, because the
 > type system knows nothing about class values - it's all structural
 > types.
 
 I'm not quite following. How would it have caught the bug if it can't
 use is-a? in conditionals?
 
 Or maybe you're saying it would have signaled a type error, but even
 the correct program would also have signaled a type error? (That
 doesn't count as a type error then, does it?)
 
 Robby
From: Sam Tobin-Hochstadt <samth@ccs.neu.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: Matthias Felleisen <matthias@ccs.neu.edu>,
        Stevie Strickland <sstrickl@ccs.neu.edu>, bugs@plt-scheme.org
Subject: Re: [plt-bug] drscheme/10783 what do you think, type error or not?
Date: Sat, 27 Feb 2010 08:42:41 -0500

 On Sat, Feb 27, 2010 at 7:43 AM, Robby Findler
 <robby@eecs.northwestern.edu> wrote:
 > On Thu, Feb 25, 2010 at 3:39 PM, Sam Tobin-Hochstadt <samth@ccs.neu.edu> wrote:
 >> On Thu, Feb 25, 2010 at 4:35 PM, Robby Findler
 >> <robby@eecs.northwestern.edu> wrote:
 >>> But the world's worst oo type system can catch this bug? (I've added
 >>> bugs back on so I can find this later.)
 >>
 >> It would catch the bug, but it couldn't handle the rest of the code -
 >> for example, the `is-a?' checks won't tell TS anything, because the
 >> type system knows nothing about class values - it's all structural
 >> types.
 >
 > I'm not quite following. How would it have caught the bug if it can't
 > use is-a? in conditionals?
 >
 > Or maybe you're saying it would have signaled a type error, but even
 > the correct program would also have signaled a type error? (That
 > doesn't count as a type error then, does it?)
 
 I guess my confusion is that I don't know what you were asking in the
 original question.  Are you asking "can I typecheck all this code
 right now, and have it catch the error"?  The answer to that is no, we
 haven't implemented enough object/class handling yet.  If the question
 is "when TS handles more of the class system, is this a bug that it
 will catch", the answer is yes, certainly.
 -- 
 sam th
 samth@ccs.neu.edu
From: Robby Findler <robby@eecs.northwestern.edu>
To: Sam Tobin-Hochstadt <samth@ccs.neu.edu>
Cc: Matthias Felleisen <matthias@ccs.neu.edu>,
        Stevie Strickland <sstrickl@ccs.neu.edu>, bugs@plt-scheme.org
Subject: Re: [plt-bug] drscheme/10783 what do you think, type error or not?
Date: Sat, 27 Feb 2010 07:46:58 -0600

 On Sat, Feb 27, 2010 at 7:42 AM, Sam Tobin-Hochstadt <samth@ccs.neu.edu> wr=
 ote:
 > On Sat, Feb 27, 2010 at 7:43 AM, Robby Findler
 > <robby@eecs.northwestern.edu> wrote:
 >> On Thu, Feb 25, 2010 at 3:39 PM, Sam Tobin-Hochstadt <samth@ccs.neu.edu>=
  wrote:
 >>> On Thu, Feb 25, 2010 at 4:35 PM, Robby Findler
 >>> <robby@eecs.northwestern.edu> wrote:
 >>>> But the world's worst oo type system can catch this bug? (I've added
 >>>> bugs back on so I can find this later.)
 >>>
 >>> It would catch the bug, but it couldn't handle the rest of the code -
 >>> for example, the `is-a?' checks won't tell TS anything, because the
 >>> type system knows nothing about class values - it's all structural
 >>> types.
 >>
 >> I'm not quite following. How would it have caught the bug if it can't
 >> use is-a? in conditionals?
 >>
 >> Or maybe you're saying it would have signaled a type error, but even
 >> the correct program would also have signaled a type error? (That
 >> doesn't count as a type error then, does it?)
 >
 > I guess my confusion is that I don't know what you were asking in the
 > original question. =C2=A0Are you asking "can I typecheck all this code
 > right now, and have it catch the error"? =C2=A0The answer to that is no, =
 we
 > haven't implemented enough object/class handling yet. =C2=A0If the questi=
 on
 > is "when TS handles more of the class system, is this a bug that it
 > will catch", the answer is yes, certainly.
 
 Thanks for the clarification.
 
 How will TS deal with the fact that classes and interfaces can be
 passed around and also used in is-a? tests that determine what method
 calls are safe? Will it have a known list of classes and interfaces or
 is there somethign more sophisticated that will happen?
 
 Robby
From: Sam Tobin-Hochstadt <samth@ccs.neu.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: Matthias Felleisen <matthias@ccs.neu.edu>,
        Stevie Strickland <sstrickl@ccs.neu.edu>, bugs@plt-scheme.org
Subject: Re: [plt-bug] drscheme/10783 what do you think, type error or not?
Date: Sat, 27 Feb 2010 08:52:51 -0500

 On Sat, Feb 27, 2010 at 8:46 AM, Robby Findler
 <robby@eecs.northwestern.edu> wrote:
 > On Sat, Feb 27, 2010 at 7:42 AM, Sam Tobin-Hochstadt <samth@ccs.neu.edu> =
 wrote:
 >> On Sat, Feb 27, 2010 at 7:43 AM, Robby Findler
 >> <robby@eecs.northwestern.edu> wrote:
 >>> On Thu, Feb 25, 2010 at 3:39 PM, Sam Tobin-Hochstadt <samth@ccs.neu.edu=
 > wrote:
 >>>> On Thu, Feb 25, 2010 at 4:35 PM, Robby Findler
 >>>> <robby@eecs.northwestern.edu> wrote:
 >>>>> But the world's worst oo type system can catch this bug? (I've added
 >>>>> bugs back on so I can find this later.)
 >>>>
 >>>> It would catch the bug, but it couldn't handle the rest of the code -
 >>>> for example, the `is-a?' checks won't tell TS anything, because the
 >>>> type system knows nothing about class values - it's all structural
 >>>> types.
 >>>
 >>> I'm not quite following. How would it have caught the bug if it can't
 >>> use is-a? in conditionals?
 >>>
 >>> Or maybe you're saying it would have signaled a type error, but even
 >>> the correct program would also have signaled a type error? (That
 >>> doesn't count as a type error then, does it?)
 >>
 >> I guess my confusion is that I don't know what you were asking in the
 >> original question. =A0Are you asking "can I typecheck all this code
 >> right now, and have it catch the error"? =A0The answer to that is no, we
 >> haven't implemented enough object/class handling yet. =A0If the question
 >> is "when TS handles more of the class system, is this a bug that it
 >> will catch", the answer is yes, certainly.
 >
 > Thanks for the clarification.
 >
 > How will TS deal with the fact that classes and interfaces can be
 > passed around and also used in is-a? tests that determine what method
 > calls are safe? Will it have a known list of classes and interfaces or
 > is there somethign more sophisticated that will happen?
 
 Stevie can perhaps give a more precise answer, but really we (or at
 least I) don't know yet.  Probably it will involve some combination of
 structural types, making some things (maybe some interfaces) more
 static, and known classes/interfaces, but that's why we do the
 research.  :)
 --=20
 sam th
 samth@ccs.neu.edu
From: Robby Findler <robby@eecs.northwestern.edu>
To: Sam Tobin-Hochstadt <samth@ccs.neu.edu>
Cc: Matthias Felleisen <matthias@ccs.neu.edu>,
        Stevie Strickland <sstrickl@ccs.neu.edu>, bugs@plt-scheme.org
Subject: Re: [plt-bug] drscheme/10783 what do you think, type error or not?
Date: Sat, 27 Feb 2010 08:40:07 -0600

 On Sat, Feb 27, 2010 at 7:52 AM, Sam Tobin-Hochstadt <samth@ccs.neu.edu> wr=
 ote:
 > On Sat, Feb 27, 2010 at 8:46 AM, Robby Findler
 > <robby@eecs.northwestern.edu> wrote:
 >> On Sat, Feb 27, 2010 at 7:42 AM, Sam Tobin-Hochstadt <samth@ccs.neu.edu>=
  wrote:
 >>> On Sat, Feb 27, 2010 at 7:43 AM, Robby Findler
 >>> <robby@eecs.northwestern.edu> wrote:
 >>>> On Thu, Feb 25, 2010 at 3:39 PM, Sam Tobin-Hochstadt <samth@ccs.neu.ed=
 u> wrote:
 >>>>> On Thu, Feb 25, 2010 at 4:35 PM, Robby Findler
 >>>>> <robby@eecs.northwestern.edu> wrote:
 >>>>>> But the world's worst oo type system can catch this bug? (I've added
 >>>>>> bugs back on so I can find this later.)
 >>>>>
 >>>>> It would catch the bug, but it couldn't handle the rest of the code -
 >>>>> for example, the `is-a?' checks won't tell TS anything, because the
 >>>>> type system knows nothing about class values - it's all structural
 >>>>> types.
 >>>>
 >>>> I'm not quite following. How would it have caught the bug if it can't
 >>>> use is-a? in conditionals?
 >>>>
 >>>> Or maybe you're saying it would have signaled a type error, but even
 >>>> the correct program would also have signaled a type error? (That
 >>>> doesn't count as a type error then, does it?)
 >>>
 >>> I guess my confusion is that I don't know what you were asking in the
 >>> original question. =C2=A0Are you asking "can I typecheck all this code
 >>> right now, and have it catch the error"? =C2=A0The answer to that is no=
 , we
 >>> haven't implemented enough object/class handling yet. =C2=A0If the ques=
 tion
 >>> is "when TS handles more of the class system, is this a bug that it
 >>> will catch", the answer is yes, certainly.
 >>
 >> Thanks for the clarification.
 >>
 >> How will TS deal with the fact that classes and interfaces can be
 >> passed around and also used in is-a? tests that determine what method
 >> calls are safe? Will it have a known list of classes and interfaces or
 >> is there somethign more sophisticated that will happen?
 >
 > Stevie can perhaps give a more precise answer, but really we (or at
 > least I) don't know yet. =C2=A0Probably it will involve some combination =
 of
 > structural types, making some things (maybe some interfaces) more
 > static, and known classes/interfaces, but that's why we do the
 > research. =C2=A0:)
 
 So, perhaps the "when" you wrote above was just an optimistic choice of wor=
 ds?
 
 So, for the purposes of this PR, we don't have a type system that can
 do this yet (even an unimplemented one).
 
 Robby
From: Sam Tobin-Hochstadt <samth@ccs.neu.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: Matthias Felleisen <matthias@ccs.neu.edu>,
        Stevie Strickland <sstrickl@ccs.neu.edu>, bugs@plt-scheme.org
Subject: Re: [plt-bug] drscheme/10783 what do you think, type error or not?
Date: Sat, 27 Feb 2010 09:52:59 -0500

 On Sat, Feb 27, 2010 at 9:40 AM, Robby Findler
 <robby@eecs.northwestern.edu> wrote:
 > On Sat, Feb 27, 2010 at 7:52 AM, Sam Tobin-Hochstadt <samth@ccs.neu.edu> =
 wrote:
 >> On Sat, Feb 27, 2010 at 8:46 AM, Robby Findler
 >> <robby@eecs.northwestern.edu> wrote:
 >>> On Sat, Feb 27, 2010 at 7:42 AM, Sam Tobin-Hochstadt <samth@ccs.neu.edu=
 > wrote:
 >>>> On Sat, Feb 27, 2010 at 7:43 AM, Robby Findler
 >>>> <robby@eecs.northwestern.edu> wrote:
 >>>>> On Thu, Feb 25, 2010 at 3:39 PM, Sam Tobin-Hochstadt <samth@ccs.neu.e=
 du> wrote:
 >>>>>> On Thu, Feb 25, 2010 at 4:35 PM, Robby Findler
 >>>>>> <robby@eecs.northwestern.edu> wrote:
 >>>>>>> But the world's worst oo type system can catch this bug? (I've adde=
 d
 >>>>>>> bugs back on so I can find this later.)
 >>>>>>
 >>>>>> It would catch the bug, but it couldn't handle the rest of the code =
 -
 >>>>>> for example, the `is-a?' checks won't tell TS anything, because the
 >>>>>> type system knows nothing about class values - it's all structural
 >>>>>> types.
 >>>>>
 >>>>> I'm not quite following. How would it have caught the bug if it can't
 >>>>> use is-a? in conditionals?
 >>>>>
 >>>>> Or maybe you're saying it would have signaled a type error, but even
 >>>>> the correct program would also have signaled a type error? (That
 >>>>> doesn't count as a type error then, does it?)
 >>>>
 >>>> I guess my confusion is that I don't know what you were asking in the
 >>>> original question. =A0Are you asking "can I typecheck all this code
 >>>> right now, and have it catch the error"? =A0The answer to that is no, =
 we
 >>>> haven't implemented enough object/class handling yet. =A0If the questi=
 on
 >>>> is "when TS handles more of the class system, is this a bug that it
 >>>> will catch", the answer is yes, certainly.
 >>>
 >>> Thanks for the clarification.
 >>>
 >>> How will TS deal with the fact that classes and interfaces can be
 >>> passed around and also used in is-a? tests that determine what method
 >>> calls are safe? Will it have a known list of classes and interfaces or
 >>> is there somethign more sophisticated that will happen?
 >>
 >> Stevie can perhaps give a more precise answer, but really we (or at
 >> least I) don't know yet. =A0Probably it will involve some combination of
 >> structural types, making some things (maybe some interfaces) more
 >> static, and known classes/interfaces, but that's why we do the
 >> research. =A0:)
 >
 > So, perhaps the "when" you wrote above was just an optimistic choice of w=
 ords?
 >
 > So, for the purposes of this PR, we don't have a type system that can
 > do this yet (even an unimplemented one).
 
 Making this case work shouldn't be nearly as hard as the general case.
  Given that Stevie and I just implemented local typed regions, I think
 I can extend the existing not-very-good class type system to handle
 this actual code quite soon, but it isn't implemented yet.
 --=20
 sam th
 samth@ccs.neu.edu
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: Sam Tobin-Hochstadt <samth@ccs.neu.edu>,
        Stevie Strickland <sstrickl@ccs.neu.edu>, bugs@plt-scheme.org
Subject: Re: [plt-bug] drscheme/10783 what do you think, type error or not?
Date: Sat, 27 Feb 2010 11:56:09 -0500

 1. If it were easy, I wouldn't have turned it into Stevie's thesis =
 topic.=20
 
 2. When you marked things in the past as "would have been caught by a =
 type system" without having a type system around, what measure of =
 reality did you apply? I think you need to give the answer in the same =
 spirit.=20
 
 -- Matthias
 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: Sam Tobin-Hochstadt <samth@ccs.neu.edu>,
        Stevie Strickland <sstrickl@ccs.neu.edu>, bugs@plt-scheme.org
Subject: Re: [plt-bug] drscheme/10783 what do you think, type error or not?
Date: Sat, 27 Feb 2010 11:01:18 -0600

 On Sat, Feb 27, 2010 at 10:56 AM, Matthias Felleisen
 <matthias@ccs.neu.edu> wrote:
 >
 > 1. If it were easy, I wouldn't have turned it into Stevie's thesis topic.
 
 Right. :)
 
 I didn't know that this was Stevie's topic!
 
 (And I was getting confused by Sam's replies; I wasn't sure if he was
 saying "yes" or "no".)
 
 > 2. When you marked things in the past as "would have been caught by a type system" without having a type system around, what measure of reality did you apply? I think you need to give the answer in the same spirit.
 
 A bad one ("what if I reimplemented this in ML?"). Option types came
 up a lot in my thinking ....
 
 So by this metric, the answer is "no". Since reimplementing it in
 typed scheme won't help.
 
 But probably this should go into a pile to be revisited when Stevie
 knows better how the type system will work -- then we can make better
 guesses about how the types would work out in this specific case.
 
 Robby
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: Sam Tobin-Hochstadt <samth@ccs.neu.edu>,
        Stevie Strickland <sstrickl@ccs.neu.edu>, bugs@plt-scheme.org
Subject: Re: [plt-bug] drscheme/10783 what do you think, type error or not?
Date: Sat, 27 Feb 2010 12:07:27 -0500

 On Feb 27, 2010, at 12:01 PM, Robby Findler wrote:
 
 > On Sat, Feb 27, 2010 at 10:56 AM, Matthias Felleisen
 > <matthias@ccs.neu.edu> wrote:
 >>=20
 >> 1. If it were easy, I wouldn't have turned it into Stevie's thesis =
 topic.
 >=20
 > I didn't know that this was Stevie's topic!
 
 Stevie's dissertation is about Typed Scheme for the class system (and if =
 we find a helper, the unit system) and the necessary extensions to the =
 contract system for classes (units). We are about to wind up the first =
 step (latter part) after spending out initial period on the type system. =
 So far we have a vague idea of how to tackle the type system, which we =
 needed to go for contracts. I still expect class contracts to change =
 once we start the implementation work on types.=20
 
 Having said that, you need to realize that even in Java you is-a?. They =
 have dynamically loaded classes but they are not first class.=20
 
 
 >> 2. When you marked things in the past as "would have been caught by a =
 type system" without having a type system around, what measure of =
 reality did you apply? I think you need to give the answer in the same =
 spirit.
 >=20
 > A bad one ("what if I reimplemented this in ML?"). Option types came
 > up a lot in my thinking ....
 >=20
 > So by this metric, the answer is "no". Since reimplementing it in
 > typed scheme won't help.
 >=20
 > But probably this should go into a pile to be revisited when Stevie
 > knows better how the type system will work -- then we can make better
 > guesses about how the types would work out in this specific case.
 
 That sounds right.=20=
