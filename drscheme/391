From mflatt@cs.rice.edu  Thu Dec 11 16:13:35 1997
Received: from africa.cs.rice.edu (africa.cs.rice.edu [128.42.1.175]) by cs.rice.edu (8.8.5/8.7.1) with ESMTP id QAA23803 for <plt-gnats@cs.rice.edu>; Thu, 11 Dec 1997 16:13:35 -0600 (CST)
Message-Id: <199712112213.QAA21629@africa.cs.rice.edu>
Date: Thu, 11 Dec 1997 16:13:34 -0600 (CST)
From: Matthew Flatt <mflatt@cs.rice.edu>
Reply-To: mflatt@cs.utah.edu
To: plt-gnats@cs.rice.edu
Subject: DrScheme read breaks when thread has error
X-Send-Pr-Version: 3.101

>Number:         391
>Category:       drscheme
>Synopsis:       DrScheme read breaks when thread reports an error
>Confidential:   no
>Severity:       serious
>Priority:       medium
>Responsible:    robby
>State:          closed
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Thu Dec 11 22:15:01 GMT 1997
>Closed-Date:    Wed Jan 14 14:01:37 EST 2004
>Last-Modified:  Wed Jan 14 14:01:37 EST 2004
>Originator:     Matthew Flatt
>Release:        unknown
>Organization:
titan
>Environment:
	drscheme -x
>Description:
	DrScheme's `thread' and `read' interaction works really well -
much better than it ever has before - but there's still a problem. When
a thread error occurs during a (non-threaded) read, the return value from
(read) is #<void>. The actual read is apparently performed, but the value
is lost.
>How-To-Repeat:
	> (thread (lambda () (sleep 8) (car 0)))
	#<thread>
	> (list (read))
        ; `read' box appears, but wait for thread error
        ; The enter a value for `read'
        (#<void>)
>Fix:

>Release-Note:

>Audit-Trail:

Responsible-Changed-From-To: ptg->robby
Responsible-Changed-By: robby
Responsible-Changed-When: Thu Dec 11 16:32:50 1997
Responsible-Changed-Why:

Fixing this bug causes another bug to show up (pr 437). Fixing both is
probably too much work if we are going to re-implement the repl in the next 
release.

Are we?

State-Changed-From-To: open-analyzed
State-Changed-By: robby
State-Changed-When: Sun Feb 22 12:35:42 1998
State-Changed-Why:

fixed for next release

State-Changed-From-To: analyzed-open
State-Changed-By: robby
State-Changed-When: Sun Feb 22 12:36:53 1998
State-Changed-Why:

oops. Wrong pr. This one will remain an open bug for the release.

Responsible-Changed-From-To: robby->steck
Responsible-Changed-By: steck
Responsible-Changed-When: Wed Mar 11 13:44:21 1998
Responsible-Changed-Why:

Responsible-Changed-From-To: steck->robby
Responsible-Changed-By: robby
Responsible-Changed-When: Mon Sep 13 15:26:42 1999
Responsible-Changed-Why:

State-Changed-From-To: open-analyzed
State-Changed-By: robby
State-Changed-When: Wed Sep 27 14:41:22 2000
State-Changed-Why:

It now returns #<eof> instead of #<void>. Hopefully that is sufficient.


State-Changed-From-To: analyzed->closed
State-Changed-By: robby
State-Changed-When: Wed Jan 14 14:01:37 2004
State-Changed-Why:
    fixed and release (don't know when, but it works now...)
>Unformatted:

