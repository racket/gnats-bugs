From apache@plt-scheme.org Mon Jul 19 16:14:33 2004
Received: from champlain.ccs.neu.edu (champlain.ccs.neu.edu [127.0.0.1])
	by champlain.ccs.neu.edu (8.12.10/8.12.10) with ESMTP id i6JKEW0u018036
	for <bugs@plt-scheme.org>; Mon, 19 Jul 2004 16:14:32 -0400
Message-Id: <200407192014.i6JKEWbp018034@champlain.ccs.neu.edu>
Date: Mon, 19 Jul 2004 16:14:32 -0400
From: gregp@ccs.neu.edu
To: bugs@plt-scheme.org
Subject: get-languagej-numbers is confusing

>Number:         6951
>Category:       drscheme
>Synopsis:       get-languagej-numbers is confusing
>Class:          doc-bug
>Responsible:    robby
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Mon Jul 19 16:15:02 -0400 2004
>Last-Modified:  Mon Jul 19 23:00:01 -0400 2004
>Originator:     Greg Pettyjohn
>Organization:
plt
>Submitter-Id:   unknown
>Release:        207
>Environment:
unknown-platform
>Description:
The get-language-numbers ... get-language-positions
interface is cleary ad-hoc and counter-intuitive.

Neither Ryan, Felix nor myself can figure how the heck this works
without resorting to trial and error.
>How-To-Repeat:
Why not send me an email explaining how this junk works. When
I'm able to understand it, you can put it in the docs.

You might CC Ryan Culpepper and Felix Clock too.

:-)
>Fix:
>Audit-Trail:
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: gregp@ccs.neu.edu, bugs@plt-scheme.org
Cc: kathyg@cs.utah.edu, goldberg@cs.utah.edu, eli@plt-scheme.org,
        sk@cs.brown.edu, nobody@plt-scheme.org, mflatt@cs.utah.edu,
        meunier@ccs.neu.edu, ptg@ccs.neu.edu, dskippy@ccs.neu.edu,
        laminatedwastrel@brinckerhoff.org, robby@cs.uchicago.edu,
        awick@cs.utah.edu, sowens@cs.utah.edu
Subject: Re: all/6951: get-languagej-numbers is confusing
Date: Mon, 19 Jul 2004 16:22:15 -0400

 Now that is a sure nicely worded documentation request.
 
 Eli, let's change its status to documentation request
 and assign it to Greg for investigative purposes. He
 seems to know the originator.
 
 -- Matthias
 
 
 On Jul 19, 2004, at 4:15 PM, gregp@ccs.neu.edu wrote:
 
 > A new problem report is waiting at
 >   http://bugs.plt-scheme.org/query/?cmd=view&pr=6951
 >
 > Reported by Greg Pettyjohn for release: 207
 >
 > *** Description:
 > The get-language-numbers ... get-language-positions
 > interface is cleary ad-hoc and counter-intuitive.
 >
 > Neither Ryan, Felix nor myself can figure how the heck this works
 > without resorting to trial and error.
 >
 > *** How to repeat:
 > Why not send me an email explaining how this junk works. When
 > I'm able to understand it, you can put it in the docs.
 >
 > You might CC Ryan Culpepper and Felix Clock too.
 >
 > :-)
 >
 > *** Environment:
 > unknown-platform
 >
 
Responsible changed from "nobody" to "robby" by robby at Mon, 19 Jul 2004 16:26:30 -0400
Reason>>> rbf

From: Eli Barzilay <eli@barzilay.org>
To: gregp@ccs.neu.edu, bugs@plt-scheme.org
Cc: robby@cs.uchicago.edu, matthias@ccs.neu.edu,
        Ryan Culpepper <ryanc@ccs.neu.edu>,
        "Felix Klock's plt proxy" <pltscheme@pnkfx.org>
Subject: Re: all/6951: get-languagej-numbers is confusing
Date: Mon, 19 Jul 2004 16:31:43 -0400

 On Jul 19, gregp@ccs.neu.edu wrote:
 > The get-language-numbers ... get-language-positions
 > interface is cleary ad-hoc and counter-intuitive.
 > 
 > Neither Ryan, Felix nor myself can figure how the heck this works
 > without resorting to trial and error.
 
 I'm surprised at this statement -- the interface did seem a little
 ad-hoc, but it wasn't difficult to understand...  Certainly not
 something that will manage to confuse three phd students...
 
 
 > Why not send me an email explaining how this junk works. When
 > I'm able to understand it, you can put it in the docs.
 
 It is just like using `drscheme-language-positions' and
 `drscheme-language-numbers', except that you get a method that should
 return the value instead of using some constant in the info file.
 
 
 > You might CC Ryan Culpepper and Felix Clock too.
 
 Done.
 
 
 On Jul 19, Matthias Felleisen wrote:
 > Now that is a sure nicely worded documentation request.
 > 
 > Eli, let's change its status to documentation request
 > and assign it to Greg for investigative purposes. He
 > seems to know the originator.
 
 I was about to move this to Robby too, but he beat me to it.  I'll let
 him change the status then...  IMO, a sufficient fix in the docs would
 be to say what I saud above, with the right references.
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                   http://www.barzilay.org/                 Maze is Life!
From: Robby Findler <robby@cs.uchicago.edu>
To: Eli Barzilay <eli@barzilay.org>
Cc: gregp@ccs.neu.edu, bugs@plt-scheme.org, matthias@ccs.neu.edu,
        Ryan Culpepper <ryanc@ccs.neu.edu>,
        "Felix Klock's plt proxy" <pltscheme@pnkfx.org>
Subject: Re: all/6951: get-languagej-numbers is confusing
Date: Mon, 19 Jul 2004 15:36:23 -0500

 At Mon, 19 Jul 2004 16:31:43 -0400, Eli Barzilay wrote:
 > On Jul 19, Matthias Felleisen wrote:
 > > Now that is a sure nicely worded documentation request.
 > > 
 > > Eli, let's change its status to documentation request
 > > and assign it to Greg for investigative purposes. He
 > > seems to know the originator.
 > 
 > I was about to move this to Robby too, but he beat me to it.  I'll let
 > him change the status then...  IMO, a sufficient fix in the docs would
 > be to say what I saud above, with the right references.
 
 I would be happy to have Greg point to the other places he has trouble
 in the PR. I doubt I'll find time to do it anytime soon.
 
 BTW, I think that this was in reference to PR 6950, not 6951.
 
 Robby
From: Eli Barzilay <eli@barzilay.org>
To: Robby Findler <robby@cs.uchicago.edu>
Cc: gregp@ccs.neu.edu, bugs@plt-scheme.org, matthias@ccs.neu.edu,
        Ryan Culpepper <ryanc@ccs.neu.edu>,
        "Felix Klock's plt proxy" <pltscheme@pnkfx.org>
Subject: Re: all/6951: get-languagej-numbers is confusing
Date: Mon, 19 Jul 2004 16:40:19 -0400

 On Jul 19, Robby Findler wrote:
 > At Mon, 19 Jul 2004 16:31:43 -0400, Eli Barzilay wrote:
 > > On Jul 19, Matthias Felleisen wrote:
 > > > Now that is a sure nicely worded documentation request.
 > > > 
 > > > Eli, let's change its status to documentation request
 > > > and assign it to Greg for investigative purposes. He
 > > > seems to know the originator.
 > > 
 > > I was about to move this to Robby too, but he beat me to it.  I'll let
 > > him change the status then...  IMO, a sufficient fix in the docs would
 > > be to say what I saud above, with the right references.
 > 
 > I would be happy to have Greg point to the other places he has trouble
 > in the PR. I doubt I'll find time to do it anytime soon.
 > 
 > BTW, I think that this was in reference to PR 6950, not 6951.
 
 No, this was about 6951 -- I think that if the docs for
 `get-language-numbers' and `...-positions' say that it serves the same
 purpose as the `drscheme-language-positions' and `...-numbers' entries
 in the info file, and have links to that documentation, then thing
 should be fine.  Seems like a minor addition that should take care of
 this.
 
 (I use "seems" because maybe there is some other confusion that manage
 to baffle three people...)
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                   http://www.barzilay.org/                 Maze is Life!
From: Robby Findler <robby@cs.uchicago.edu>
To: Eli Barzilay <eli@barzilay.org>
Cc: Greg Pettyjohn <gregp@ccs.neu.edu>,
        "Felix Klock's plt proxy" <pltscheme@pnkfx.org>,
        Matthias Felleisen <matthias@ccs.neu.edu>,
        Ryan Culpepper <ryanc@ccs.neu.edu>, bugs@plt-scheme.org
Subject: Re: all/6951: get-languagej-numbers is confusing
Date: Mon, 19 Jul 2004 20:46:47 -0500

 Sure, that seems much easier for people adding languages. I'll do that
 for 299.
 
 I'll still keep a slightly more general interface, specifying an
 arbitrary path into the tree, but with your suggestions of paring and
 defaults for the Scheme-level interface, rather than the info.ss file
 interface, but otherwise it should help there too.
 
 Thanks.
 
 Robby
 
 At Mon, 19 Jul 2004 19:06:13 -0400, Eli Barzilay wrote:
 > A summary of my discussion with Greg:
 > 
 > First of all, the basic problem was that he never saw the
 > `derscheme-language-positions' entry, which has enough information to
 > cover most of the confusion.
 > 
 > Second of all, I told him that this whole mechanism bugged in the
 > past, but I couldn't fins a better way of doing things.  We then went
 > on a chain of modifications that seems to be doing a better job of
 > placing a language than the current mechanism, something that will
 > make an easy default that is usually "the right thing" instead of the
 > current default that you describe in the docs as "rarely be correct".
 > 
 > The best I can think of demonstrating this is as a series of what
 > needs to be done to define a PLT/Foo/Beginner, .../Intermediate, and
 > .../Advanced set of languages.  (This applies to either the info
 > entry, or the methods.)  Currently, you do this:
 > 
 >   (define prof (string-constant professional-languages))
 >   (define plt  (string-constant plt))
 >   (define prof-num -1000) ; from drscheme/private/language-configuration.ss
 >   (define plt-num  -10)   ; from drscheme/private/language-configuration.ss
 >   (define foo-num  12)    ; after inspecting other entries in this file
 >   (define drscheme-language-positions
 >     (list (list prof plt "Foo" "Beginner")
 >           (list prof plt "Foo" "Intermediate")
 >           (list prof plt "Foo" "Advanced")))
 >   (define drscheme-language-numbers
 >     (list (list prof-num plt-num foo-num 1)
 >           (list prof-num plt-num foo-num 2)
 >           (list prof-num plt-num foo-num 3)))
 > 
 > The first suggested change is using a single root where you plant your
 > languages.  We get something like:
 > 
 >   (define prof (string-constant professional-languages))
 >   (define plt  (string-constant plt))
 >   (define prof-num -1000) ; from drscheme/private/language-configuration.ss
 >   (define plt-num  -10)   ; from drscheme/private/language-configuration.ss
 >   (define foo-num  12)    ; after inspecting other entries in this file
 >   (define drscheme-language-root-positions (list prof plt "Foo"))
 >   (define drscheme-language-root-numbers   (list prof-num plt-num foo-num))
 >   (define drscheme-language-positions
 >     '(("Beginner") ("Intermediate") ("Advanced")))
 >   (define drscheme-language-numbers
 >     '((1) (2) (3)))
 > 
 > Now, if we restrict these languages to a single place (I didn't see a
 > place where this is violated), we can have:
 > 
 >   (define prof (string-constant professional-languages))
 >   (define plt  (string-constant plt))
 >   (define prof-num -1000) ; from drscheme/private/language-configuration.ss
 >   (define plt-num  -10)   ; from drscheme/private/language-configuration.ss
 >   (define foo-num  12)    ; after inspecting other entries in this file
 >   (define drscheme-language-root-positions (list prof plt "Foo"))
 >   (define drscheme-language-root-numbers   (list prof-num plt-num foo-num))
 >   (define drscheme-language-positions
 >     '("Beginner" "Intermediate" "Advanced"))
 >   (define drscheme-language-numbers
 >     '(1 2 3))
 > 
 > This can just as well be done in a single definition of a language
 > name and its number:
 > 
 >   (define prof (string-constant professional-languages))
 >   (define plt  (string-constant plt))
 >   (define prof-num -1000) ; from drscheme/private/language-configuration.ss
 >   (define plt-num  -10)   ; from drscheme/private/language-configuration.ss
 >   (define foo-num  12)    ; after inspecting other entries in this file
 >   (define drscheme-language-root-positions (list prof plt "Foo"))
 >   (define drscheme-language-root-numbers   (list prof-num plt-num foo-num))
 >   (define drscheme-language-positions
 >     '(["Beginner" 1] ["Intermediate" 2] ["Advanced" 3]))
 > 
 > And the same notation can be used to specify the root:
 > 
 >   (define prof (string-constant professional-languages))
 >   (define plt  (string-constant plt))
 >   (define prof-num -1000) ; from drscheme/private/language-configuration.ss
 >   (define plt-num  -10)   ; from drscheme/private/language-configuration.ss
 >   (define foo-num  12)    ; after inspecting other entries in this file
 >   (define drscheme-language-root-positions
 >     (list (list prof prof-num) (list plt plt-num) (list "Foo" foo-num)))
 >   (define drscheme-language-positions
 >     '(["Beginner" 1] ["Intermediate" 2] ["Advanced" 3]))
 > 
 > Another extension is that the number can be omitted, and the system
 > will look for an existing one with the same name, or assign it 1 + the
 > biggest one at the appropriate level, otherwise assign 1.  Every entry
 > is now either a string (uses the default number), or a list with a
 > string and a number.  We now have:
 > 
 >   (define prof (string-constant professional-languages))
 >   (define plt  (string-constant plt))
 >   (define drscheme-language-root-positions (list prof plt "Foo"))
 >   (define drscheme-language-positions
 >     '("Beginner" "Intermediate" "Advanced"))
 > 
 > prof and plt get their existing numbers, "Foo" gets the number of
 > expander plus one, "Beginner" gets 1 (since foo is empty),
 > "Intermediate" and "Advanced" get 2 and 3.
 > 
 > Less code, no need to look at the sources to search for numbers.
 > Also, it seems like it wouldn't be hard to implement, modulo exp--299
 > complications.
 > 
 > -- 
 >           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
 >                   http://www.barzilay.org/                 Maze is Life!
From: Eli Barzilay <eli@barzilay.org>
To: Robby Findler <robby@cs.uchicago.edu>
Cc: Greg Pettyjohn <gregp@ccs.neu.edu>,
        "Felix Klock's plt proxy" <pltscheme@pnkfx.org>,
        Matthias Felleisen <matthias@ccs.neu.edu>,
        Ryan Culpepper <ryanc@ccs.neu.edu>
Subject: Re: all/6951: get-languagej-numbers is confusing
Date: Mon, 19 Jul 2004 19:06:13 -0400

 A summary of my discussion with Greg:
 
 First of all, the basic problem was that he never saw the
 `derscheme-language-positions' entry, which has enough information to
 cover most of the confusion.
 
 Second of all, I told him that this whole mechanism bugged in the
 past, but I couldn't fins a better way of doing things.  We then went
 on a chain of modifications that seems to be doing a better job of
 placing a language than the current mechanism, something that will
 make an easy default that is usually "the right thing" instead of the
 current default that you describe in the docs as "rarely be correct".
 
 The best I can think of demonstrating this is as a series of what
 needs to be done to define a PLT/Foo/Beginner, .../Intermediate, and
 .../Advanced set of languages.  (This applies to either the info
 entry, or the methods.)  Currently, you do this:
 
   (define prof (string-constant professional-languages))
   (define plt  (string-constant plt))
   (define prof-num -1000) ; from drscheme/private/language-configuration.ss
   (define plt-num  -10)   ; from drscheme/private/language-configuration.ss
   (define foo-num  12)    ; after inspecting other entries in this file
   (define drscheme-language-positions
     (list (list prof plt "Foo" "Beginner")
           (list prof plt "Foo" "Intermediate")
           (list prof plt "Foo" "Advanced")))
   (define drscheme-language-numbers
     (list (list prof-num plt-num foo-num 1)
           (list prof-num plt-num foo-num 2)
           (list prof-num plt-num foo-num 3)))
 
 The first suggested change is using a single root where you plant your
 languages.  We get something like:
 
   (define prof (string-constant professional-languages))
   (define plt  (string-constant plt))
   (define prof-num -1000) ; from drscheme/private/language-configuration.ss
   (define plt-num  -10)   ; from drscheme/private/language-configuration.ss
   (define foo-num  12)    ; after inspecting other entries in this file
   (define drscheme-language-root-positions (list prof plt "Foo"))
   (define drscheme-language-root-numbers   (list prof-num plt-num foo-num))
   (define drscheme-language-positions
     '(("Beginner") ("Intermediate") ("Advanced")))
   (define drscheme-language-numbers
     '((1) (2) (3)))
 
 Now, if we restrict these languages to a single place (I didn't see a
 place where this is violated), we can have:
 
   (define prof (string-constant professional-languages))
   (define plt  (string-constant plt))
   (define prof-num -1000) ; from drscheme/private/language-configuration.ss
   (define plt-num  -10)   ; from drscheme/private/language-configuration.ss
   (define foo-num  12)    ; after inspecting other entries in this file
   (define drscheme-language-root-positions (list prof plt "Foo"))
   (define drscheme-language-root-numbers   (list prof-num plt-num foo-num))
   (define drscheme-language-positions
     '("Beginner" "Intermediate" "Advanced"))
   (define drscheme-language-numbers
     '(1 2 3))
 
 This can just as well be done in a single definition of a language
 name and its number:
 
   (define prof (string-constant professional-languages))
   (define plt  (string-constant plt))
   (define prof-num -1000) ; from drscheme/private/language-configuration.ss
   (define plt-num  -10)   ; from drscheme/private/language-configuration.ss
   (define foo-num  12)    ; after inspecting other entries in this file
   (define drscheme-language-root-positions (list prof plt "Foo"))
   (define drscheme-language-root-numbers   (list prof-num plt-num foo-num))
   (define drscheme-language-positions
     '(["Beginner" 1] ["Intermediate" 2] ["Advanced" 3]))
 
 And the same notation can be used to specify the root:
 
   (define prof (string-constant professional-languages))
   (define plt  (string-constant plt))
   (define prof-num -1000) ; from drscheme/private/language-configuration.ss
   (define plt-num  -10)   ; from drscheme/private/language-configuration.ss
   (define foo-num  12)    ; after inspecting other entries in this file
   (define drscheme-language-root-positions
     (list (list prof prof-num) (list plt plt-num) (list "Foo" foo-num)))
   (define drscheme-language-positions
     '(["Beginner" 1] ["Intermediate" 2] ["Advanced" 3]))
 
 Another extension is that the number can be omitted, and the system
 will look for an existing one with the same name, or assign it 1 + the
 biggest one at the appropriate level, otherwise assign 1.  Every entry
 is now either a string (uses the default number), or a list with a
 string and a number.  We now have:
 
   (define prof (string-constant professional-languages))
   (define plt  (string-constant plt))
   (define drscheme-language-root-positions (list prof plt "Foo"))
   (define drscheme-language-positions
     '("Beginner" "Intermediate" "Advanced"))
 
 prof and plt get their existing numbers, "Foo" gets the number of
 expander plus one, "Beginner" gets 1 (since foo is empty),
 "Intermediate" and "Advanced" get 2 and 3.
 
 Less code, no need to look at the sources to search for numbers.
 Also, it seems like it wouldn't be hard to implement, modulo exp--299
 complications.
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                   http://www.barzilay.org/                 Maze is Life!
From: Eli Barzilay <eli@barzilay.org>
To: Robby Findler <robby@cs.uchicago.edu>
Cc: bugs@plt-scheme.org
Subject: Re: all/6951: get-languagej-numbers is confusing
Date: Mon, 19 Jul 2004 22:16:28 -0400

 On Jul 19, Robby Findler wrote:
 > Sure, that seems much easier for people adding languages. I'll do that
 > for 299.
 > 
 > I'll still keep a slightly more general interface, specifying an
 > arbitrary path into the tree, but with your suggestions of paring and
 > defaults for the Scheme-level interface, rather than the info.ss file
 > interface, but otherwise it should help there too.
 
 Actually, I thought that if you keep a general interface, then it
 should go with the scheme interface and making the info.ss interface
 the easy one...
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                   http://www.barzilay.org/                 Maze is Life!
From: Robby Findler <robby@cs.uchicago.edu>
To: Eli Barzilay <eli@barzilay.org>
Cc: bugs@plt-scheme.org
Subject: Re: all/6951: get-languagej-numbers is confusing
Date: Mon, 19 Jul 2004 21:42:04 -0500

 On Jul 19, 2004, at 9:16 PM, Eli Barzilay wrote:
 
 > On Jul 19, Robby Findler wrote:
 >> Sure, that seems much easier for people adding languages. I'll do that
 >> for 299.
 >>
 >> I'll still keep a slightly more general interface, specifying an
 >> arbitrary path into the tree, but with your suggestions of paring and
 >> defaults for the Scheme-level interface, rather than the info.ss file
 >> interface, but otherwise it should help there too.
 >
 > Actually, I thought that if you keep a general interface, then it
 > should go with the scheme interface and making the info.ss interface
 > the easy one...
 
 I wasn't clear -- I'm saying that I'll clean up the info.ss interface 
 just as you say and I'll clean up 2 of the 3 same things in the scheme 
 interface, but I'll leave the "full paths into the tree" part of the 
 scheme interface intact. Make more sense?
 
 Robby
 
From: Eli Barzilay <eli@barzilay.org>
To: Robby Findler <robby@cs.uchicago.edu>
Cc: bugs@plt-scheme.org
Subject: Re: all/6951: get-languagej-numbers is confusing
Date: Mon, 19 Jul 2004 22:56:23 -0400

 On Jul 19, Robby Findler wrote:
 > 
 > I wasn't clear -- I'm saying that I'll clean up the info.ss
 > interface just as you say and I'll clean up 2 of the 3 same things
 > in the scheme interface, but I'll leave the "full paths into the
 > tree" part of the scheme interface intact. Make more sense?
 
 Yes, exactly what I was thinking of...
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                   http://www.barzilay.org/                 Maze is Life!
