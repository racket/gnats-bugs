From eli@barzilay.org  Mon Sep 16 17:45:10 2002
Received: from localhost (IDENT:root@localhost.localdomain [127.0.0.1])
	by champlain.ccs.neu.edu (8.9.3/8.8.7) with ESMTP id RAA23007
	for <bugs>; Mon, 16 Sep 2002 17:45:09 -0400
Message-Id: <200209162145.RAA23007@champlain.ccs.neu.edu>
Date: Mon, 16 Sep 2002 17:45:09 -0400
From: Eli Barzilay <eli@barzilay.org>
To: bugs@plt-scheme.org
Subject: DrScheme and an external editor

>Number:         5826
>Category:       drscheme
>Synopsis:       DrScheme and an external editor
>Confidential:   no
>Severity:       non-critical
>Priority:       medium
>Responsible:    robby
>State:          open
>Class:          change-request
>Submitter-Id:   unknown
>Arrival-Date:   Mon Sep 16 17:50:00 EDT 2002
>Closed-Date:    
>Last-Modified:  Fri Feb 14 11:10:00 EST 2003
>Originator:     Eli Barzilay
>Release:        202
>Organization:
plt
>Environment:
unix "Linux lambda.cs.cornell.edu 2.4.18-10 #1 Wed Aug 7 11:39:21 EDT 2002 i686 unknown" (i386-linux)

Docs Installed:
("help" "mzscheme" "mzlib" "mzc" "r5rs" "icons" "drscheme" "teachpack" "misclib" "framework" "mred" "beginning" "beginning-abbr" "intermediate" "intermediate-lambda" "advanced" "tex2page" "tools" "tour" "t-y-scheme" "insidemz")

Collections:
(("/home/eli/scheme/my-plt" ("pics")) ("/home/eli/plt/collects" ("browser" "compiler" "defaults" "drscheme" "dynext" "errortrace" "framework" "games" "graphics" "help" "hierlist" "htdp" "html" "icons" "lang" "launcher" "make" "mred" "mzlib" "mzscheme" "net" "setup" "stepper" "string-constants" "syntax" "parser-tools" "xml" "slibinit" "afm" "version" "eopl" "web-server" "tex2page" "doc" "swindle")))

Human Language: english
>Description:
DrScheme is useful enough by itself, but some people can
never disconnect themselves from other editors.  A good
feature that should be easy to implement is to have an
option to revert the DrScheme buffer if the file become
newer -- doing this on every execute click (or maybe
periodically).
>How-To-Repeat:

>Fix:

>Release-Note:

>Audit-Trail:

From: Robert Bruce Findler <robby@cs.uchicago.edu>
To: Eli Barzilay <eli@barzilay.org>
Cc: bugs@plt-scheme.org
Subject: Re: all/5826: DrScheme and an external editor
Date: Mon, 16 Sep 2002 16:55:19 -0500 (CDT)

 DrScheme does check for this when you Execute the file (I believe emacs
 actually does something like this on any edit to the file, but I didn't
 want to be spinning up the disk all of the time).
 
 Robby

From: Eli Barzilay <eli@barzilay.org>
To: Robert Bruce Findler <robby@cs.uchicago.edu>
Cc: bugs@plt-scheme.org
Subject: Re: all/5826: DrScheme and an external editor
Date: Mon, 16 Sep 2002 18:21:53 -0400

 On Sep 16, Robert Bruce Findler wrote:
 > DrScheme does check for this when you Execute the file (I believe emacs
 > actually does something like this on any edit to the file, but I didn't
 > want to be spinning up the disk all of the time).
 
 Ah, I didn't know that, but in any case it's not what I was talking
 about, but it makes it much easier...  What I want is a convenient way
 to work with an external editor -- and popping up a message box
 doesn't give me that.  A better thing would be just having buttons on
 the dialog that will allow you to revert or save the current contents.
 But what I was talking about goes one step further -- when someone
 works with an external editor, it becomes a hassle to keep reverting
 the buffer -- in that case, having an option that will automatically
 revert the buffer when the file was changed (and when it wasn't
 modified in DrScheme) would be perfect.  (This was one of the changes
 I hacked in DrSwindle.)
 
 BTW, the way Emacs does it doesn't get the disks spinning all the time
 -- a buffer has a file date, and modification bit, and only when you
 change an unmodified buffer it'll just compare the internal saved file
 date and the one on disk.  It also does that right before you save a
 modified buffer (which I saw DrScheme doing too).  (This leads to the
 nice property of when you start editing a buffer that was saved, you
 know everything is in sync, and also if you manage to save a file then
 you know that there weren't any external changes.)
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                   http://www.barzilay.org/                 Maze is Life!

From: Robert Bruce Findler <robby@cs.uchicago.edu>
To: Eli Barzilay <eli@barzilay.org>
Cc: bugs@plt-scheme.org
Subject: Re: all/5826: DrScheme and an external editor
Date: Mon, 16 Sep 2002 17:47:04 -0500 (CDT)

 At Mon, 16 Sep 2002 18:21:53 -0400, Eli Barzilay wrote:
 > On Sep 16, Robert Bruce Findler wrote:
 > > DrScheme does check for this when you Execute the file (I believe emacs
 > > actually does something like this on any edit to the file, but I didn't
 > > want to be spinning up the disk all of the time).
 > 
 > Ah, I didn't know that, but in any case it's not what I was talking
 > about, but it makes it much easier...  What I want is a convenient way
 > to work with an external editor -- and popping up a message box
 > doesn't give me that.  A better thing would be just having buttons on
 > the dialog that will allow you to revert or save the current contents.
 > But what I was talking about goes one step further -- when someone
 > works with an external editor, it becomes a hassle to keep reverting
 > the buffer -- in that case, having an option that will automatically
 > revert the buffer when the file was changed (and when it wasn't
 > modified in DrScheme) would be perfect.  (This was one of the changes
 > I hacked in DrSwindle.)
 
 I can add buttons to revert and save the buffer, sure.
 
 > BTW, the way Emacs does it doesn't get the disks spinning all the time
 > -- a buffer has a file date, and modification bit, and only when you
 > change an unmodified buffer it'll just compare the internal saved file
 > date and the one on disk.  It also does that right before you save a
 > modified buffer (which I saw DrScheme doing too).  (This leads to the
 > nice property of when you start editing a buffer that was saved, you
 > know everything is in sync, and also if you manage to save a file then
 > you know that there weren't any external changes.)
 
 Ah, DrScheme could do that. Combined with the check when the file is
 saved, that seems reasonably robust (much more than the current setup).
 
 Robby

From: Eli Barzilay <eli@barzilay.org>
To: Robert Bruce Findler <robby@cs.uchicago.edu>
Cc: bugs@plt-scheme.org
Subject: Re: all/5826: DrScheme and an external editor
Date: Mon, 16 Sep 2002 18:49:26 -0400

 On Sep 16, Robert Bruce Findler wrote:
 > At Mon, 16 Sep 2002 18:21:53 -0400, Eli Barzilay wrote:
 > > Ah, I didn't know that, but in any case it's not what I was talking
 > > about, but it makes it much easier...  What I want is a convenient way
 > > to work with an external editor -- and popping up a message box
 > > doesn't give me that.  A better thing would be just having buttons on
 > > the dialog that will allow you to revert or save the current contents.
 > > But what I was talking about goes one step further -- when someone
 > > works with an external editor, it becomes a hassle to keep reverting
 > > the buffer -- in that case, having an option that will automatically
 > > revert the buffer when the file was changed (and when it wasn't
 > > modified in DrScheme) would be perfect.  (This was one of the changes
 > > I hacked in DrSwindle.)
 > 
 > I can add buttons to revert and save the buffer, sure.
 
 That will make things much better -- but what about that automatic
 reverting thing?
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                   http://www.barzilay.org/                 Maze is Life!

From: Robert Bruce Findler <robby@cs.uchicago.edu>
To: Eli Barzilay <eli@barzilay.org>
Cc: bugs@plt-scheme.org
Subject: Re: all/5826: DrScheme and an external editor
Date: Mon, 16 Sep 2002 18:42:18 -0500 (CDT)

 At Mon, 16 Sep 2002 18:49:26 -0400, Eli Barzilay wrote:
 > On Sep 16, Robert Bruce Findler wrote:
 > > At Mon, 16 Sep 2002 18:21:53 -0400, Eli Barzilay wrote:
 > > > Ah, I didn't know that, but in any case it's not what I was talking
 > > > about, but it makes it much easier...  What I want is a convenient way
 > > > to work with an external editor -- and popping up a message box
 > > > doesn't give me that.  A better thing would be just having buttons on
 > > > the dialog that will allow you to revert or save the current contents.
 > > > But what I was talking about goes one step further -- when someone
 > > > works with an external editor, it becomes a hassle to keep reverting
 > > > the buffer -- in that case, having an option that will automatically
 > > > revert the buffer when the file was changed (and when it wasn't
 > > > modified in DrScheme) would be perfect.  (This was one of the changes
 > > > I hacked in DrSwindle.)
 > > 
 > > I can add buttons to revert and save the buffer, sure.
 > 
 > That will make things much better -- but what about that automatic
 > reverting thing?
 
 That I'd be less happy with. I don't want to automatically monkey with
 someone's files (esp. to support other editors!) I've got a lot of
 trouble to make it reasonably emacs-like (at least as far as
 keybindings go). If there are one or two things that you do that
 drscheme doesn't support I would consider adding them.
 
 In the meantime, here's another work around for you (you may have
 thought of this one already) execute this program:
 
   (require "my-real-program.ss")
 
 Robby

From: Eli Barzilay <eli@barzilay.org>
To: Robert Bruce Findler <robby@cs.uchicago.edu>
Cc: bugs@plt-scheme.org
Subject: Re: all/5826: DrScheme and an external editor
Date: Mon, 16 Sep 2002 22:15:31 -0400

 On Sep 16, Robert Bruce Findler wrote:
 > 
 > That I'd be less happy with. I don't want to automatically monkey with
 > someone's files (esp. to support other editors!) I've got a lot of
 > trouble to make it reasonably emacs-like (at least as far as
 > keybindings go). If there are one or two things that you do that
 > drscheme doesn't support I would consider adding them.
 
 But it shouldn't matter if the default is off, no?  Anyway, if there
 are buttons to do it on the dialog box then that solves most of the
 problem, especially if the `revert' button would be the default if the
 buffer is not marked as modified in DrScheme...
 
 
 > In the meantime, here's another work around for you (you may have
 > thought of this one already) execute this program:
 > 
 >   (require "my-real-program.ss")
 
 But that wouldn't get me all the debugging stuff I get by just
 openning the file no?  (I don't really know since I don't use it that
 much, partly because of this problem...)
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                   http://www.barzilay.org/                 Maze is Life!
Responsible-Changed-From-To: steck->robby
Responsible-Changed-By: robby
Responsible-Changed-When: Fri Feb 14 11:08:54 2003
Responsible-Changed-Why:
    rbf

From: Robert Bruce Findler <robby@cs.uchicago.edu>
To: bugs@plt-scheme.org
Cc:  
Subject: Re: all/5826
Date: Fri, 14 Feb 2003 10:08:07 -0600

 From: Matthew Flatt <mflatt@cs.utah.edu>
 Date: Fri Nov 15, 2002  10:32:30  AM America/Chicago
 To: Robert Bruce Findler <robby@cs.uchicago.edu>
 Subject: Re: PR 5826
 X-Mailer: SirMail under MrEd 202.5 (i386-linux)
 
 At Thu, 14 Nov 2002 21:52:23 -0600, Robert Bruce Findler wrote:
 > In PR 5826, I've been asked to give a warning when the file on disk has
 > changed and the first change to a file occurs. I tried to do this by
 > overriding set-modified, but in order to make that work, I need to be
 > able to reject the modified (ie, a can-set-modified? method). Is there
 > anything I can do about this? I'd like to avoid overriding can-insert,
 > etc, if possible.
 
 `set-modified' is definitely too late; it's after the modification.
 There's no callback that is invoked in advance of any change.
 
 Why do you need to reject the modification, though? If the options are
 to either continue or reload the on-disk version, it doesn't matter
 whether the change happens, does it?
 
 Matthew
 
>Unformatted:

