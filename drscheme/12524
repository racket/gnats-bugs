From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Tue Jan 31 20:27:58 2012
Received: from mail-vw0-f44.google.com (mail-vw0-f44.google.com [209.85.212.44])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id q111Rs5L011269
	for <bugs@bugs.plt-scheme.org>; Tue, 31 Jan 2012 20:27:54 -0500
Message-Id: <201202010127.q111RqSn011263@champlain.ccs.neu.edu>
Date: Tue, 31 Jan 2012 20:27:52 -0500
From: ryanc@racket-lang.org
To: bugs@racket-lang.org
Subject: drracket language line and "#!" scripts

>Number:         12524
>Category:       drscheme
>Synopsis:       drracket language line and "#!" scripts
>Class:          sw-bug
>Responsible:    robby
>Severity:       non-critical
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Tue Jan 31 20:28:01 -0500 2012
>Closed-Date:    Sat Oct 31 06:42:58 -0400 2015
>Last-Modified:  Sat Oct 31 06:42:58 -0400 2015
>Originator:     Ryan Culpepper
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.2.1.4--2012-01-29(3bed8ae/g)
>Environment:
unix "Linux artichoke 2.6.38-13-generic #54-Ubuntu SMP Tue Jan 3 13:38:12 UTC 2012 x86_64 x86_64 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 287828432
Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()


Collections:
("/home/ryan/.racket/5.2.1.4/collects"
 (non-existent-path))
("/home/ryan/projects/racket/collects"
 (".gitignore" "slideshow" "config" "lang" "mrlib" "teachpack" "version" "dynext" "eopl" "trace" "racklog" "r6rs" "tex2page" "games" "rackunit" "guibuilder" "srfi" "schemeunit" "drracket" "picturing-programs" "typed" "string-constants" "datalog" "xrepl" "algol60" "compiler" "sirmail" "unstable" "combinator-parser" "deinprogramm" "file" "texpict" "gui-debugger" "handin-server" "images" "2htdp" "openssl" "scheme" "r5rs" "icons" "lazy" "mzcom" "mzlib" "readline" "typed-racket" "browser" "web-server" "make" "mysterx" "info-domain" "embedded-gui" "data" "preprocessor" "help" "test-engine" "planet" "handin-client" "slatex" "repo-time-stamp" "sgl" "s-exp" "typed-scheme" "frtime" "stepper" "at-exp" "redex" "plai" "test-box-recovery" "htdp" "xml" "setup" "swindle" "raco" "macro-debugger" "mred" "srpersist" "parser-tools" "graphics" "hierlist" "net" "scriblib" "syntax-color" "plot" "defaults" "errortrace" "reader" "meta" "tests" "launcher" "framework" "ffi" "profile" "afm" "drscheme" !
 "scribble" "waterworld" "scribblings" "html" "racket" "wxme" "mzscheme" "honu" "syntax" "db" "rnrs"))

Computer Language: (("Determine language from source") (#(#t trad-write mixed-fraction-e #f #t none) (default) #() "#lang racket\n" #f #f))
>Description:
If a file starts with a "#!" line, as in a unix-style script, DrRacket prints everything from the "#!" to the actual "#lang" declaration in the interactions panel as the "Language".
>How-To-Repeat:
Make sure DrRacket's language setting is "Determine language from source".

Open a new definitions buffer, delete the default "#lang racket" line, and enter the following instead:

#!/opt/bin/racket
;; Some text
;; Some more text
#lang racket
(displayln "hello!")

Run the program. The interactions panel now has the following "Language" line:

Language: /opt/bin/racket ;; Some text ;; Some more text #lang racket [custom].

It should be this instead:

Language: racket [custom].
>Fix:
>Audit-Trail:
From: Robby Findler <robby@eecs.northwestern.edu>
To: ryanc@racket-lang.org, bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12524: drracket language line and "#!" scripts
Date: Tue, 31 Jan 2012 19:35:33 -0600

 Is it possible for DrRacket to determine this somehow?
 
 Robby
 
 On Tue, Jan 31, 2012 at 7:28 PM,  <ryanc@racket-lang.org> wrote:
 > A new problem report is waiting at
 >  http://bugs.racket-lang.org/query/?cmd=view&pr=12524
 >
 > Reported by Ryan Culpepper for release: 5.2.1.4--2012-01-29(3bed8ae/g)
 >
 > *** Description:
 > If a file starts with a "#!" line, as in a unix-style script, DrRacket prints everything from the "#!" to the actual "#lang" declaration in the interactions panel as the "Language".
 >
 > *** How to repeat:
 > Make sure DrRacket's language setting is "Determine language from source".
 >
 > Open a new definitions buffer, delete the default "#lang racket" line, and enter the following instead:
 >
 > #!/opt/bin/racket
 > ;; Some text
 > ;; Some more text
 > #lang racket
 > (displayln "hello!")
 >
 > Run the program. The interactions panel now has the following "Language" line:
 >
 > Language: /opt/bin/racket ;; Some text ;; Some more text #lang racket [custom].
 >
 > It should be this instead:
 >
 > Language: racket [custom].
 >
 > *** Environment:
 > unix "Linux artichoke 2.6.38-13-generic #54-Ubuntu SMP Tue Jan 3 13:38:12 UTC 2012 x86_64 x86_64 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
 > Human Language: english
 > (current-memory-use) 287828432
 > Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()
 >
 >
 > Collections:
 > ("/home/ryan/.racket/5.2.1.4/collects"
 >  (non-existent-path))
 > ("/home/ryan/projects/racket/collects"
 >  (".gitignore" "slideshow" "config" "lang" "mrlib" "teachpack" "version" "dynext" "eopl" "trace" "racklog" "r6rs" "tex2page" "games" "rackunit" "guibuilder" "srfi" "schemeunit" "drracket" "picturing-programs" "typed" "string-constants" "datalog" "xrepl" "algol60" "compiler" "sirmail" "unstable" "combinator-parser" "deinprogramm" "file" "texpict" "gui-debugger" "handin-server" "images" "2htdp" "openssl" "scheme" "r5rs" "icons" "lazy" "mzcom" "mzlib" "readline" "typed-racket" "browser" "web-server" "make" "mysterx" "info-domain" "embedded-gui" "data" "preprocessor" "help" "test-engine" "planet" "handin-client" "slatex" "repo-time-stamp" "sgl" "s-exp" "typed-scheme" "frtime" "stepper" "at-exp" "redex" "plai" "test-box-recovery" "htdp" "xml" "setup" "swindle" "raco" "macro-debugger" "mred" "srpersist" "parser-tools" "graphics" "hierlist" "net" "scriblib" "syntax-color" "plot" "defaults" "errortrace" "reader" "meta" "tests" "launcher" "framework" "ffi" "profile" "afm" "drscheme" !
 >  "scribble" "waterworld" "scribblings" "html" "racket" "wxme" "mzscheme" "honu" "syntax" "db" "rnrs"))
 >
 > Computer Language: (("Determine language from source") (#(#t trad-write mixed-fraction-e #f #t none) (default) #() "#lang racket\n" #f #f))
 >
 
From: Ryan Culpepper <ryan@cs.utah.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: ryanc@racket-lang.org, bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12524: drracket language line and "#!" scripts
Date: Tue, 31 Jan 2012 18:43:10 -0700

 I would assume so. Without the "#!" line, it discards comments before a 
 "#lang" line correctly; it's only with the "#!" line that it gets confused.
 
 Ryan
 
 
 On 01/31/2012 06:35 PM, Robby Findler wrote:
 > Is it possible for DrRacket to determine this somehow?
 >
 > Robby
 >
 > On Tue, Jan 31, 2012 at 7:28 PM,<ryanc@racket-lang.org>  wrote:
 >> A new problem report is waiting at
 >>   http://bugs.racket-lang.org/query/?cmd=view&pr=12524
 >>
 >> Reported by Ryan Culpepper for release: 5.2.1.4--2012-01-29(3bed8ae/g)
 >>
 >> *** Description:
 >> If a file starts with a "#!" line, as in a unix-style script, DrRacket prints everything from the "#!" to the actual "#lang" declaration in the interactions panel as the "Language".
 >>
 >> *** How to repeat:
 >> Make sure DrRacket's language setting is "Determine language from source".
 >>
 >> Open a new definitions buffer, delete the default "#lang racket" line, and enter the following instead:
 >>
 >> #!/opt/bin/racket
 >> ;; Some text
 >> ;; Some more text
 >> #lang racket
 >> (displayln "hello!")
 >>
 >> Run the program. The interactions panel now has the following "Language" line:
 >>
 >> Language: /opt/bin/racket ;; Some text ;; Some more text #lang racket [custom].
 >>
 >> It should be this instead:
 >>
 >> Language: racket [custom].
 >>
 >> *** Environment:
 >> unix "Linux artichoke 2.6.38-13-generic #54-Ubuntu SMP Tue Jan 3 13:38:12 UTC 2012 x86_64 x86_64 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
 >> Human Language: english
 >> (current-memory-use) 287828432
 >> Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()
 >>
 >>
 >> Collections:
 >> ("/home/ryan/.racket/5.2.1.4/collects"
 >>   (non-existent-path))
 >> ("/home/ryan/projects/racket/collects"
 >>   (".gitignore" "slideshow" "config" "lang" "mrlib" "teachpack" "version" "dynext" "eopl" "trace" "racklog" "r6rs" "tex2page" "games" "rackunit" "guibuilder" "srfi" "schemeunit" "drracket" "picturing-programs" "typed" "string-constants" "datalog" "xrepl" "algol60" "compiler" "sirmail" "unstable" "combinator-parser" "deinprogramm" "file" "texpict" "gui-debugger" "handin-server" "images" "2htdp" "openssl" "scheme" "r5rs" "icons" "lazy" "mzcom" "mzlib" "readline" "typed-racket" "browser" "web-server" "make" "mysterx" "info-domain" "embedded-gui" "data" "preprocessor" "help" "test-engine" "planet" "handin-client" "slatex" "repo-time-stamp" "sgl" "s-exp" "typed-scheme" "frtime" "stepper" "at-exp" "redex" "plai" "test-box-recovery" "htdp" "xml" "setup" "swindle" "raco" "macro-debugger" "mred" "srpersist" "parser-tools" "graphics" "hierlist" "net" "scriblib" "syntax-color" "plot" "defaults" "errortrace" "reader" "meta" "tests" "launcher" "framework" "ffi" "profile" "afm" "drschem
 e" !
 >>   "scribble" "waterworld" "scribblings" "html" "racket" "wxme" "mzscheme" "honu" "syntax" "db" "rnrs"))
 >>
 >> Computer Language: (("Determine language from source") (#(#t trad-write mixed-fraction-e #f #t none) (default) #() "#lang racket\n" #f #f))
 >>
 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Ryan Culpepper <ryan@cs.utah.edu>
Cc: ryanc@racket-lang.org, bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12524: drracket language line and "#!" scripts
Date: Tue, 31 Jan 2012 19:48:19 -0600

 On Tue, Jan 31, 2012 at 7:43 PM, Ryan Culpepper <ryan@cs.utah.edu> wrote:
 > I would assume so. Without the "#!" line, it discards comments before a
 > "#lang" line correctly; it's only with the "#!" line that it gets confused.
 
 I can't find the docs that say how this works. Closest I came was this:
 
   "Finally, #! is an alias for #lang followed by a space when #! is
 followed by alphanumeric ASCII, +, -, or _. "
 
 which was here:
 
   plt/doc/reference/reader.html?q=read-language#(part._parse-reader)
 
 but that doesn't seem to fit with the example you're showing.
 
 Where are the docs that describe this?
 
 Robby
From: Ryan Culpepper <ryan@cs.utah.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12524: drracket language line and "#!" scripts
Date: Tue, 31 Jan 2012 18:51:58 -0700

 On 01/31/2012 06:48 PM, Robby Findler wrote:
 > On Tue, Jan 31, 2012 at 7:43 PM, Ryan Culpepper<ryan@cs.utah.edu>  wrote:
 >> I would assume so. Without the "#!" line, it discards comments before a
 >> "#lang" line correctly; it's only with the "#!" line that it gets confused.
 >
 > I can't find the docs that say how this works. Closest I came was this:
 >
 >    "Finally, #! is an alias for #lang followed by a space when #! is
 > followed by alphanumeric ASCII, +, -, or _. "
 >
 > which was here:
 >
 >    plt/doc/reference/reader.html?q=read-language#(part._parse-reader)
 >
 > but that doesn't seem to fit with the example you're showing.
 >
 > Where are the docs that describe this?
 >
 > Robby
 
 Here's one place: http://docs.racket-lang.org/guide/scripts.html
 
 Ryan
From: Robby Findler <robby@eecs.northwestern.edu>
To: Ryan Culpepper <ryan@cs.utah.edu>
Cc: bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12524: drracket language line and "#!" scripts
Date: Tue, 31 Jan 2012 20:02:37 -0600

 Oh, I see. So DrRacket's module language either has to do some
 (approximate?) command-line parsing for racket, or just treat that as
 if it isn't a valid #lang language?
 
 Hm, no. That can't be right, because read-language is apparently
 already doing something like that already (the code below shows that
 it apparently finds the #lang racket/base in there).
 
 I'm not sure, but I guess the right thing is for DrRacket to notice
 that the first chars are either "#! " or "#!/", in which case is
 should skip ahead looking for #lang?
 
 Can someone confirm this, or point me to the docs so I can confirm it myself?
 
 Robby
 
 #lang racket
 (define p (open-input-string "#! /usr/local/bin/racket -t\n\n#lang
 racket/base\n1"))
 (read-language p)
 (read-char p)
 (read-char p)
 
 On Tue, Jan 31, 2012 at 7:51 PM, Ryan Culpepper <ryan@cs.utah.edu> wrote:
 > On 01/31/2012 06:48 PM, Robby Findler wrote:
 >>
 >> On Tue, Jan 31, 2012 at 7:43 PM, Ryan Culpepper<ryan@cs.utah.edu>  wrote:
 >>>
 >>> I would assume so. Without the "#!" line, it discards comments before a
 >>> "#lang" line correctly; it's only with the "#!" line that it gets
 >>> confused.
 >>
 >>
 >> I can't find the docs that say how this works. Closest I came was this:
 >>
 >>   "Finally, #! is an alias for #lang followed by a space when #! is
 >> followed by alphanumeric ASCII, +, -, or _. "
 >>
 >> which was here:
 >>
 >>   plt/doc/reference/reader.html?q=read-language#(part._parse-reader)
 >>
 >> but that doesn't seem to fit with the example you're showing.
 >>
 >> Where are the docs that describe this?
 >>
 >> Robby
 >
 >
 > Here's one place: http://docs.racket-lang.org/guide/scripts.html
 >
 > Ryan
 
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Ryan Culpepper <ryan@cs.utah.edu>
Cc: Robby Findler <robby@eecs.northwestern.edu>, bugs@racket-lang.org,
        nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12524: drracket language line and "#!" scripts
Date: Tue, 31 Jan 2012 21:04:53 -0500

 (I started using this recently but it worked just fine.) 
 
 
 On Jan 31, 2012, at 8:51 PM, Ryan Culpepper wrote:
 
 > On 01/31/2012 06:48 PM, Robby Findler wrote:
 >> On Tue, Jan 31, 2012 at 7:43 PM, Ryan Culpepper<ryan@cs.utah.edu>  wrote:
 >>> I would assume so. Without the "#!" line, it discards comments before a
 >>> "#lang" line correctly; it's only with the "#!" line that it gets confused.
 >> 
 >> I can't find the docs that say how this works. Closest I came was this:
 >> 
 >>   "Finally, #! is an alias for #lang followed by a space when #! is
 >> followed by alphanumeric ASCII, +, -, or _. "
 >> 
 >> which was here:
 >> 
 >>   plt/doc/reference/reader.html?q=read-language#(part._parse-reader)
 >> 
 >> but that doesn't seem to fit with the example you're showing.
 >> 
 >> Where are the docs that describe this?
 >> 
 >> Robby
 > 
 > Here's one place: http://docs.racket-lang.org/guide/scripts.html
 > 
 > Ryan
 
 
From: Eli Barzilay <eli@barzilay.org>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: Ryan Culpepper <ryan@cs.utah.edu>, bugs@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12524: drracket language line and "#!" scripts
Date: Tue, 31 Jan 2012 21:36:02 -0500

 30 minutes ago, Robby Findler wrote:
 > 
 > I'm not sure, but I guess the right thing is for DrRacket to notice
 > that the first chars are either "#! " or "#!/", in which case is
 > should skip ahead looking for #lang? [...]
 
 This is described at the end of section 1.3.8 -- search for "#!/" to
 get there.  Also, it looks like the syntax colorer knows about it, os
 if you can use that it's probably better.  But in any case here's a
 (very) bad hack that extracts just the right part (there must be some
 better way to know where it starts).
 
   (define (extract-#lang str)
     (define exn
       (with-handlers ([exn:fail:read? values])
         (parameterize ([read-accept-lang #f])
           (read-syntax #f (open-input-string str)) #f)))
     (unless exn (error "no #lang?"))
     (substring
      str
      (let ([loc (exn:fail:read-srclocs exn)])
        (if (= 1 (length loc))
          (sub1 (srcloc-position (car loc)))
          (error "bad srcloc?")))
      (let ([in (open-input-string str)])
        (unless (read-language in) (error "no #lang?"))
        (file-position in))))
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!
From: Robby Findler <robby@eecs.northwestern.edu>
To: Eli Barzilay <eli@barzilay.org>
Cc: Ryan Culpepper <ryan@cs.utah.edu>, bugs@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12524: drracket language line and "#!" scripts
Date: Tue, 31 Jan 2012 20:44:52 -0600

 On Tue, Jan 31, 2012 at 8:36 PM, Eli Barzilay <eli@barzilay.org> wrote:
 > 30 minutes ago, Robby Findler wrote:
 >>
 >> I'm not sure, but I guess the right thing is for DrRacket to notice
 >> that the first chars are either "#! " or "#!/", in which case is
 >> should skip ahead looking for #lang? [...]
 >
 > This is described at the end of section 1.3.8 -- search for "#!/" to
 > get there.
 
 That just says that it is a comment to the end of the line, right? I
 guess I could use that fact to try actually parsing comments to look
 for the #lang, but that sounds tricky.
 
 > Also, it looks like the syntax colorer knows about it, os
 > if you can use that it's probably better.
 
 The syntax colorer doesn't need as intimate knowledge as the repl's
 little "what language is this" note, I believe.
 
 > But in any case here's a
 > (very) bad hack that extracts just the right part (there must be some
 > better way to know where it starts).
 >
 >  (define (extract-#lang str)
 >    (define exn
 >      (with-handlers ([exn:fail:read? values])
 >        (parameterize ([read-accept-lang #f])
 >          (read-syntax #f (open-input-string str)) #f)))
 >    (unless exn (error "no #lang?"))
 >    (substring
 >     str
 >     (let ([loc (exn:fail:read-srclocs exn)])
 >       (if (= 1 (length loc))
 >         (sub1 (srcloc-position (car loc)))
 >         (error "bad srcloc?")))
 >     (let ([in (open-input-string str)])
 >       (unless (read-language in) (error "no #lang?"))
 >       (file-position in))))
 >
 
 Nice hack!
 
 Robby
 
From: Eli Barzilay <eli@barzilay.org>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: Ryan Culpepper <ryan@cs.utah.edu>, bugs@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12524: drracket language line and "#!" scripts
Date: Tue, 31 Jan 2012 22:02:50 -0500

 A few minutes ago, Robby Findler wrote:
 > On Tue, Jan 31, 2012 at 8:36 PM, Eli Barzilay <eli@barzilay.org> wrote:
 > > 30 minutes ago, Robby Findler wrote:
 > >>
 > >> I'm not sure, but I guess the right thing is for DrRacket to notice
 > >> that the first chars are either "#! " or "#!/", in which case is
 > >> should skip ahead looking for #lang? [...]
 > >
 > > This is described at the end of section 1.3.8 -- search for "#!/" to
 > > get there.
 > 
 > That just says that it is a comment to the end of the line, right? I
 > guess I could use that fact to try actually parsing comments to look
 > for the #lang, but that sounds tricky.
 
 It can also be extended to the next line with a backslash.
 
 
 > > Also, it looks like the syntax colorer knows about it, os if you
 > > can use that it's probably better.
 > 
 > The syntax colorer doesn't need as intimate knowledge as the repl's
 > little "what language is this" note, I believe.
 
 Well, you're only skipping comments right?  If so, you can just as
 well use it to do that part.  But I think that it's better to extend
 `read-language' to make the beginning available somehow.
 
 
 > [...]
 > Nice hack!
 
 The ugly part is relying on an exception.  Here's a shorter version
 that works too -- it's bad in a different sense, parsing the whole
 body just to know where it started.
 
   (define (extract-#lang str)
     (substring
      str
      (parameterize ([read-accept-lang #t] [read-accept-reader #t])
        (sub1 (syntax-position (read-syntax #f (open-input-string str)))))
      (let ([in (open-input-string str)])
        (unless (read-language in) (error "no #lang?"))
        (file-position in))))
 
 and to make things even worse, you can't cache and reuse the result,
 since the language can decide to use a different part as the language
 spec if things change later on.
 
 
 BTW, when I try
 
   #lang at-exp     racket
 
 the language name in drr includes all of the spaces.  They might be
 significant, of course, but the displayed name is a human-readable
 thing anyway.  (Otherwise it would need to have be in monospace font,
 IMO...)
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!
From: Robby Findler <robby@eecs.northwestern.edu>
To: Eli Barzilay <eli@barzilay.org>
Cc: Ryan Culpepper <ryan@cs.utah.edu>, bugs@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12524: drracket language line and "#!" scripts
Date: Tue, 31 Jan 2012 21:13:57 -0600

 I'd be happy if read-language reported more information. Should I wait for that?
 
 Robby
 
 On Tue, Jan 31, 2012 at 9:02 PM, Eli Barzilay <eli@barzilay.org> wrote:
 > A few minutes ago, Robby Findler wrote:
 >> On Tue, Jan 31, 2012 at 8:36 PM, Eli Barzilay <eli@barzilay.org> wrote:
 >> > 30 minutes ago, Robby Findler wrote:
 >> >>
 >> >> I'm not sure, but I guess the right thing is for DrRacket to notice
 >> >> that the first chars are either "#! " or "#!/", in which case is
 >> >> should skip ahead looking for #lang? [...]
 >> >
 >> > This is described at the end of section 1.3.8 -- search for "#!/" to
 >> > get there.
 >>
 >> That just says that it is a comment to the end of the line, right? I
 >> guess I could use that fact to try actually parsing comments to look
 >> for the #lang, but that sounds tricky.
 >
 > It can also be extended to the next line with a backslash.
 >
 >
 >> > Also, it looks like the syntax colorer knows about it, os if you
 >> > can use that it's probably better.
 >>
 >> The syntax colorer doesn't need as intimate knowledge as the repl's
 >> little "what language is this" note, I believe.
 >
 > Well, you're only skipping comments right?  If so, you can just as
 > well use it to do that part.  But I think that it's better to extend
 > `read-language' to make the beginning available somehow.
 >
 >
 >> [...]
 >> Nice hack!
 >
 > The ugly part is relying on an exception.  Here's a shorter version
 > that works too -- it's bad in a different sense, parsing the whole
 > body just to know where it started.
 >
 >  (define (extract-#lang str)
 >    (substring
 >     str
 >     (parameterize ([read-accept-lang #t] [read-accept-reader #t])
 >       (sub1 (syntax-position (read-syntax #f (open-input-string str)))))
 >     (let ([in (open-input-string str)])
 >       (unless (read-language in) (error "no #lang?"))
 >       (file-position in))))
 >
 > and to make things even worse, you can't cache and reuse the result,
 > since the language can decide to use a different part as the language
 > spec if things change later on.
 >
 >
 > BTW, when I try
 >
 >  #lang at-exp     racket
 >
 > the language name in drr includes all of the spaces.  They might be
 > significant, of course, but the displayed name is a human-readable
 > thing anyway.  (Otherwise it would need to have be in monospace font,
 > IMO...)
 >
 > --
 >          ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
 >                    http://barzilay.org/                   Maze is Life!
 


State changed from "open" to "closed" by robby at Sat, 31 Oct 2015 06:42:58 -0400
Reason>>> Fixed by      
https://github.com/racket/drracket/commit/0bbe3ebd65a531c4ac161a1
b1b20e0f3958e74c9

