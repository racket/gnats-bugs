From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Sat Apr 28 18:39:12 2007
Received: from ug-out-1314.google.com (ug-out-1314.google.com [66.249.92.169])
	by champlain.ccs.neu.edu (8.13.8/8.13.7) with ESMTP id l3SMdBhK008171
	for <bugs@bugs.plt-scheme.org>; Sat, 28 Apr 2007 18:39:11 -0400
Message-Id: <200704282239.l3SMd8Bu008166@champlain.ccs.neu.edu>
Date: Sat, 28 Apr 2007 18:39:08 -0400
From: airfoil@bellsouth.net
To: bugs@plt-scheme.org
Subject: My apple-; and apple-l keys no longer function

>Number:         8636
>Category:       drscheme
>Synopsis:       My apple-; and apple-l keys no longer function
>Class:          change-request
>Responsible:    robby
>Severity:       non-critical
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Sat Apr 28 18:40:01 -0400 2007
>Last-Modified:  Sun Apr 29 23:15:01 -0400 2007
>Originator:     Kyle Smith
>Organization:
plt
>Submitter-Id:   unknown
>Release:        369.10-svn28apr2007
>Environment:
macosx "Darwin macsalot.local 8.9.1 Darwin Kernel Version 8.9.1: Thu Feb 22 20:55:00 PST 2007; root:xnu-792.18.15~1/RELEASE_I386 i386 i386" (i386-macosx/3m) (get-display-depth) = 32
Docs Installed:
(("/Applications/plt/doc" "r5rs" "mzscheme" "mred" "help" "tour" "drscheme" "srfi" "mzlib" "misclib" "mrlib" "framework" "foreign" "mzc" "tools" "insidemz" "web-server" "swindle" "plot" "release-notes" "t-y-scheme" "tex2page" "beginning" "beginning-abbr" "intermediate" "intermediate-lambda" "advanced" "teachpack" "teachpack-htdc" "profj-beginner" "profj-intermediate" "profj-advanced"))
Human Language: english
(current-memory-use) 112625144

Collections:
(("/Users/kylesmith/Library/PLT Scheme/369.10/collects" non-existent-path) ("/Applications/plt/collects" ".svn" "afm" "algol60" "browser" "combinator-parser" "compiler" "config" "defaults" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "framework" "frtime" "games" "graphics" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu-module" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrflow" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "mztake" "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profj" "profjWizard" "r5rs" "r6rs" "readline" "repos-time-stamp" "schemekeys" "scribble" "setup" "sgl" "sirmail" "skipper" "slatex" "slideshow" "srfi" "srpersist" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "tests" "tex2page" "texpict" "trace" "version" "waterworld" "web-server" "wxme" "xelda" "xml"))
Teachpack filenames: ()
Computer Language: (("FloridaKeys" "SchemeKeys") #6(#t write mixed-fraction-e #f #t debug))
>Description:
Today I took the leap and built DrScheme from svn.  Everything went smoothly until I went to go to my preferences.  First of all, my preferences, as regards color had been lost; but I remember reading something about this happening in the new version.  But next, I realized that the normal key bindings for getting to preferences and the languages menu had disappeared completely.  Why?

Also, as I was changing my colors back, I noticed that each time I checked bold, the smoothing setting switched to default.  I guess I should have reported this one under the heading of a bug.

In an editor, keybindings are something that you learn over some period of time, and it's a big hassel when they change on you.  I think it's time that DrScheme had a regular keybinding preferences dialog box, where you wouldn't need to learn some special encantation of a virtually undocumented process to come up with the correct code to use to establish a custom keybinding.  I've seen a half a dozen different ways, it seems, to make a custom keybinding, but I've never found one that works reliably.  If I'm missing something obvious, please pass it along, but everytime I look through the documentation on keybindings, it just seems like there ought to be a straight forward way of explaining it.  Like, here is the function that you call, and you express keystrokes in exactly this manner, and here is a complete and documented list of the names of all the functions that you can bind to and what they do.  

It would just be much simpler to have this done in a dialog box, so everyone can remain happy despite what the default settings might change to be from version to version.

Thanks,

--kyle
>How-To-Repeat:
>Fix:
>Audit-Trail:
From: "Robby Findler" <robby@cs.uchicago.edu>
To: airfoil@bellsouth.net, bugs@plt-scheme.org
Cc: nobody@plt-scheme.org, eli@plt-scheme.org, matthias@plt-scheme.org,
        sk@plt-scheme.org, mflatt@plt-scheme.org, clements@plt-scheme.org,
        jay@plt-scheme.org, meunier@plt-scheme.org, sowens@plt-scheme.org,
        kathyg@plt-scheme.org, awick@plt-scheme.org, jacobm@plt-scheme.org,
        cce@plt-scheme.org, dalev@plt-scheme.org, samth@plt-scheme.org,
        ryanc@plt-scheme.org
Subject: Re: [plt-bug] all/8636: My apple-; and apple-l keys no longer function
Date: Sat, 28 Apr 2007 18:42:06 -0500

 On 4/28/07, airfoil@bellsouth.net <airfoil@bellsouth.net> wrote:
 > A new problem report is waiting at
 >   http://bugs.plt-scheme.org/query/?cmd=view&pr=8636
 >
 > Reported by Kyle Smith for release: 369.10-svn28apr2007
 >
 > *** Description:
 > Today I took the leap and built DrScheme from svn.  Everything went smoothly until I went to go to my preferences.  First of all, my preferences, as regards color had been lost; but I remember reading something about this happening in the new version.  But next, I realized that the normal key bindings for getting to preferences and the languages menu had disappeared completely.  Why?
 
 That is certainly strange. The preferences keybinding has changed from
 cmd-; to cmd-, (we were not following the apple guidelines when we
 used cmd-; and someone alerted us to that) but the language menu
 keybinding shouldn't have changed.
 
 DO you see the shortcuts listed in the menus? (the language menu and
 the drscheme menu, in these cases).
 
 > Also, as I was changing my colors back, I noticed that each time I checked bold, the smoothing setting switched to default.  I guess I should have reported this one under the heading of a bug.
 
 That's a bug, yes.
 
 > In an editor, keybindings are something that you learn over some period of time, and it's a big hassel when they change on you.  I think it's time that DrScheme had a regular keybinding preferences dialog box, where you wouldn't need to learn some special encantation of a virtually undocumented process to come up with the correct code to use to establish a custom keybinding.  I've seen a half a dozen different ways, it seems, to make a custom keybinding, but I've never found one that works reliably.  If I'm missing something obvious, please pass it along, but everytime I look through the documentation on keybindings, it just seems like there ought to be a straight forward way of explaining it.  Like, here is the function that you call, and you express keystrokes in exactly this manner, and here is a complete and documented list of the names of all the functions that you can bind to and what they do.
 
 The complete list of all of the names of the function you can binding
 to and what they do is called the union of the mred, mzscheme, and
 drscheme tools manuals, not to mention everything that appears in
 planet and ... well the list is endless and includes other libraries
 you may have already writen yourself.
 
 I doubt that list in some file somewhere would be helpful.
 
 The way things are organized, drscheme provides you a way to define
 arbitrary Scheme functions and stick them in as keybindings. What
 those functions do is up to you. If you need drscheme-specific
 functionality, look in the drscheme tools manual. If you just general
 editing functionality, look in the mred manual. Etc.
 
 I'm sorry we can't offer you something that's tailored to the
 particular keybinding tasks that you need, but the language is large,
 the libraries are larger, and and that's one of the prices you have to
 pay for having a language with a large toolkit ... the docs are large
 too.
 
 Robby
From: Kyle Smith <kyle@bellsouth.net>
To: "Robby Findler" <robby@cs.uchicago.edu>
Cc: airfoil@bellsouth.net, bugs@plt-scheme.org, nobody@plt-scheme.org,
        eli@plt-scheme.org, matthias@plt-scheme.org, sk@plt-scheme.org,
        mflatt@plt-scheme.org, clements@plt-scheme.org, jay@plt-scheme.org,
        meunier@plt-scheme.org, sowens@plt-scheme.org, kathyg@plt-scheme.org,
        awick@plt-scheme.org, jacobm@plt-scheme.org, cce@plt-scheme.org,
        dalev@plt-scheme.org, samth@plt-scheme.org, ryanc@plt-scheme.org
Subject: Re: [plt-bug] all/8636: My apple-; and apple-l keys no longer function
Date: Sat, 28 Apr 2007 20:16:52 -0400

 --Apple-Mail-2--217366203
 Content-Transfer-Encoding: 7bit
 Content-Type: text/plain;
 	charset=US-ASCII;
 	delsp=yes;
 	format=flowed
 
 Hi Robby,
 
 After I sent in the report I did notice that the DrScheme menu item  
 does show the new key binding as apple-, and it works.  However,  
 despite the Choose Language menu item showing apple-L, neither apple- 
 L or what used to be apple-l, works for me.  Thats upper and lower  
 case L in case the font doesn't come through well.
 
 Robby, would it be too much to ask, if someone gets a chance, to just  
 give me a quick, one up example, of how I could set my preferences  
 back to apple-;?  I would greatly appreciate it.  It would be best if  
 the example would work inside a module language, as I spend most of  
 my time inside my own custom language that has all the srfi's,  
 libraries, and my own toolbox of functions and syntactic forms that  
 I've built a style of programming around.  I've tried examples I've  
 seen posted before, from people I respect, but they just don't seem  
 to work for me.
 
 This was the latest from Danny Yoo:
 
 (module ethan-keybindings (lib "keybinding-lang.ss" "framework")
     (keybinding "f8"
                 (lambda (editor event)
                   (send (send editor get-keymap)
                         call-function
                         "put-previous-sexp" editor event #t))))
 
 But I could never get anything to happen, regardless of the key I  
 choose, or the function I choose.
 
 Thanks,
 
 --kyle
 
 Kyle Smith
 kyle at bellsouth dot net
 schemekeys.blogspot.com
 www.schemekeys.net
 
 
 On Apr 28, 2007, at 7:42 PM, Robby Findler wrote:
 
 > On 4/28/07, airfoil@bellsouth.net <airfoil@bellsouth.net> wrote:
 >> A new problem report is waiting at
 >>   http://bugs.plt-scheme.org/query/?cmd=view&pr=8636
 >>
 >> Reported by Kyle Smith for release: 369.10-svn28apr2007
 >>
 >> *** Description:
 >> Today I took the leap and built DrScheme from svn.  Everything  
 >> went smoothly until I went to go to my preferences.  First of all,  
 >> my preferences, as regards color had been lost; but I remember  
 >> reading something about this happening in the new version.  But  
 >> next, I realized that the normal key bindings for getting to  
 >> preferences and the languages menu had disappeared completely.  Why?
 >
 > That is certainly strange. The preferences keybinding has changed from
 > cmd-; to cmd-, (we were not following the apple guidelines when we
 > used cmd-; and someone alerted us to that) but the language menu
 > keybinding shouldn't have changed.
 >
 > DO you see the shortcuts listed in the menus? (the language menu and
 > the drscheme menu, in these cases).
 >
 >> Also, as I was changing my colors back, I noticed that each time I  
 >> checked bold, the smoothing setting switched to default.  I guess  
 >> I should have reported this one under the heading of a bug.
 >
 > That's a bug, yes.
 >
 >> In an editor, keybindings are something that you learn over some  
 >> period of time, and it's a big hassel when they change on you.  I  
 >> think it's time that DrScheme had a regular keybinding preferences  
 >> dialog box, where you wouldn't need to learn some special  
 >> encantation of a virtually undocumented process to come up with  
 >> the correct code to use to establish a custom keybinding.  I've  
 >> seen a half a dozen different ways, it seems, to make a custom  
 >> keybinding, but I've never found one that works reliably.  If I'm  
 >> missing something obvious, please pass it along, but everytime I  
 >> look through the documentation on keybindings, it just seems like  
 >> there ought to be a straight forward way of explaining it.  Like,  
 >> here is the function that you call, and you express keystrokes in  
 >> exactly this manner, and here is a complete and documented list of  
 >> the names of all the functions that you can bind to and what they do.
 >
 > The complete list of all of the names of the function you can binding
 > to and what they do is called the union of the mred, mzscheme, and
 > drscheme tools manuals, not to mention everything that appears in
 > planet and ... well the list is endless and includes other libraries
 > you may have already writen yourself.
 >
 > I doubt that list in some file somewhere would be helpful.
 >
 > The way things are organized, drscheme provides you a way to define
 > arbitrary Scheme functions and stick them in as keybindings. What
 > those functions do is up to you. If you need drscheme-specific
 > functionality, look in the drscheme tools manual. If you just general
 > editing functionality, look in the mred manual. Etc.
 >
 > I'm sorry we can't offer you something that's tailored to the
 > particular keybinding tasks that you need, but the language is large,
 > the libraries are larger, and and that's one of the prices you have to
 > pay for having a language with a large toolkit ... the docs are large
 > too.
 >
 > Robby
 
 
 --Apple-Mail-2--217366203
 Content-Transfer-Encoding: quoted-printable
 Content-Type: text/html;
 	charset=ISO-8859-1
 
 <HTML><BODY style=3D"word-wrap: break-word; -khtml-nbsp-mode: space; =
 -khtml-line-break: after-white-space; "><DIV>Hi Robby,</DIV><DIV><BR =
 class=3D"khtml-block-placeholder"></DIV>After I sent in the report I did =
 notice that the DrScheme menu item does show the new key binding as =
 apple-, and it works.=A0 However, despite the Choose Language menu item =
 showing apple-L, neither apple-L or what used to be apple-l, works for =
 me.=A0 Thats upper and lower case L in case the font doesn't come =
 through well.<DIV><BR class=3D"khtml-block-placeholder"></DIV><DIV>Robby, =
 would it be too much to ask, if someone gets a chance, to just give me a =
 quick, one up example, of how I could set my preferences back to =
 apple-;?=A0 I would greatly appreciate it.=A0 It would be best if the =
 example would work inside a module language, as I spend most of my time =
 inside my own custom language that has all the srfi's, libraries, and my =
 own toolbox of functions and syntactic forms that I've built a style of =
 programming around.=A0 I've tried examples I've seen posted before, from =
 people I respect, but they just don't seem to work for me.</DIV><DIV><BR =
 class=3D"khtml-block-placeholder"></DIV><DIV>This was the latest from =
 Danny Yoo:</DIV><DIV><BR =
 class=3D"khtml-block-placeholder"></DIV><DIV>(module ethan-keybindings =
 (lib "keybinding-lang.ss" "framework")</DIV><DIV>=A0=A0 (keybinding =
 "f8"</DIV><DIV>=A0 =A0 =A0 =A0 =A0 =A0 =A0=A0 (lambda (editor =
 event)</DIV><DIV>=A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0=A0 (send (send editor =
 get-keymap)</DIV><DIV>=A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0=A0 =
 call-function</DIV><DIV>=A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0=A0 =
 "put-previous-sexp" editor event #t))))</DIV><DIV><BR =
 class=3D"khtml-block-placeholder"></DIV><DIV>But I could never get =
 anything to happen, regardless of the key I choose, or the function I =
 choose.</DIV><DIV><BR =
 class=3D"khtml-block-placeholder"></DIV><DIV>Thanks,</DIV><DIV>=A0<BR><DIV=
 > <SPAN class=3D"Apple-style-span" style=3D"border-collapse: separate; =
 border-spacing: 0px 0px; color: rgb(0, 0, 0); font-family: Arial; =
 font-size: 18px; font-style: normal; font-variant: normal; font-weight: =
 normal; letter-spacing: normal; line-height: normal; text-align: auto; =
 -khtml-text-decorations-in-effect: none; text-indent: 0px; =
 -apple-text-size-adjust: auto; text-transform: none; orphans: 2; =
 white-space: normal; widows: 2; word-spacing: 0px; "><SPAN =
 class=3D"Apple-style-span" style=3D"border-collapse: separate; =
 border-spacing: 0px 0px; color: rgb(0, 0, 0); font-family: Arial; =
 font-size: 18px; font-style: normal; font-variant: normal; font-weight: =
 normal; letter-spacing: normal; line-height: normal; text-align: auto; =
 -khtml-text-decorations-in-effect: none; text-indent: 0px; =
 -apple-text-size-adjust: auto; text-transform: none; orphans: 2; =
 white-space: normal; widows: 2; word-spacing: 0px; =
 "><DIV>--kyle</DIV><DIV><BR =
 class=3D"khtml-block-placeholder"></DIV><DIV>Kyle Smith</DIV><DIV>kyle =
 at bellsouth dot =
 net</DIV><DIV>schemekeys.blogspot.com</DIV><DIV>www.schemekeys.net</DIV><B=
 R class=3D"Apple-interchange-newline"></SPAN></SPAN> =
 </DIV><BR><DIV><DIV>On Apr 28, 2007, at 7:42 PM, Robby Findler =
 wrote:</DIV><BR class=3D"Apple-interchange-newline"><BLOCKQUOTE =
 type=3D"cite"><DIV style=3D"margin-top: 0px; margin-right: 0px; =
 margin-bottom: 0px; margin-left: 0px; ">On 4/28/07, <A =
 href=3D"mailto:airfoil@bellsouth.net">airfoil@bellsouth.net</A> &lt;<A =
 href=3D"mailto:airfoil@bellsouth.net">airfoil@bellsouth.net</A>&gt; =
 wrote:</DIV> <BLOCKQUOTE type=3D"cite"><DIV style=3D"margin-top: 0px; =
 margin-right: 0px; margin-bottom: 0px; margin-left: 0px; ">A new problem =
 report is waiting at</DIV><DIV style=3D"margin-top: 0px; margin-right: =
 0px; margin-bottom: 0px; margin-left: 0px; "><SPAN =
 class=3D"Apple-converted-space">=A0 </SPAN><A =
 href=3D"http://bugs.plt-scheme.org/query/?cmd=3Dview&pr=3D8636">http://bug=
 s.plt-scheme.org/query/?cmd=3Dview&amp;pr=3D8636</A></DIV><DIV =
 style=3D"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; =
 margin-left: 0px; min-height: 14px; "><BR></DIV><DIV style=3D"margin-top: =
 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; ">Reported =
 by Kyle Smith for release: 369.10-svn28apr2007</DIV><DIV =
 style=3D"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; =
 margin-left: 0px; min-height: 14px; "><BR></DIV><DIV style=3D"margin-top: =
 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; ">*** =
 Description:</DIV><DIV style=3D"margin-top: 0px; margin-right: 0px; =
 margin-bottom: 0px; margin-left: 0px; ">Today I took the leap and built =
 DrScheme from svn.<SPAN class=3D"Apple-converted-space">=A0 =
 </SPAN>Everything went smoothly until I went to go to my =
 preferences.<SPAN class=3D"Apple-converted-space">=A0 </SPAN>First of =
 all, my preferences, as regards color had been lost; but I remember =
 reading something about this happening in the new version.<SPAN =
 class=3D"Apple-converted-space">=A0 </SPAN>But next, I realized that the =
 normal key bindings for getting to preferences and the languages menu =
 had disappeared completely.<SPAN class=3D"Apple-converted-space">=A0 =
 </SPAN>Why?</DIV> </BLOCKQUOTE><DIV style=3D"margin-top: 0px; =
 margin-right: 0px; margin-bottom: 0px; margin-left: 0px; min-height: =
 14px; "><BR></DIV><DIV style=3D"margin-top: 0px; margin-right: 0px; =
 margin-bottom: 0px; margin-left: 0px; ">That is certainly strange. The =
 preferences keybinding has changed from</DIV><DIV style=3D"margin-top: =
 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; ">cmd-; to =
 cmd-, (we were not following the apple guidelines when we</DIV><DIV =
 style=3D"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; =
 margin-left: 0px; ">used cmd-; and someone alerted us to that) but the =
 language menu</DIV><DIV style=3D"margin-top: 0px; margin-right: 0px; =
 margin-bottom: 0px; margin-left: 0px; ">keybinding shouldn't have =
 changed.</DIV><DIV style=3D"margin-top: 0px; margin-right: 0px; =
 margin-bottom: 0px; margin-left: 0px; min-height: 14px; "><BR></DIV><DIV =
 style=3D"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; =
 margin-left: 0px; ">DO you see the shortcuts listed in the menus? (the =
 language menu and</DIV><DIV style=3D"margin-top: 0px; margin-right: 0px; =
 margin-bottom: 0px; margin-left: 0px; ">the drscheme menu, in these =
 cases).</DIV><DIV style=3D"margin-top: 0px; margin-right: 0px; =
 margin-bottom: 0px; margin-left: 0px; min-height: 14px; "><BR></DIV> =
 <BLOCKQUOTE type=3D"cite"><DIV style=3D"margin-top: 0px; margin-right: =
 0px; margin-bottom: 0px; margin-left: 0px; ">Also, as I was changing my =
 colors back, I noticed that each time I checked bold, the smoothing =
 setting switched to default.<SPAN class=3D"Apple-converted-space">=A0 =
 </SPAN>I guess I should have reported this one under the heading of a =
 bug.</DIV> </BLOCKQUOTE><DIV style=3D"margin-top: 0px; margin-right: =
 0px; margin-bottom: 0px; margin-left: 0px; min-height: 14px; =
 "><BR></DIV><DIV style=3D"margin-top: 0px; margin-right: 0px; =
 margin-bottom: 0px; margin-left: 0px; ">That's a bug, yes.</DIV><DIV =
 style=3D"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; =
 margin-left: 0px; min-height: 14px; "><BR></DIV> <BLOCKQUOTE =
 type=3D"cite"><DIV style=3D"margin-top: 0px; margin-right: 0px; =
 margin-bottom: 0px; margin-left: 0px; ">In an editor, keybindings are =
 something that you learn over some period of time, and it's a big hassel =
 when they change on you.<SPAN class=3D"Apple-converted-space">=A0 =
 </SPAN>I think it's time that DrScheme had a regular keybinding =
 preferences dialog box, where you wouldn't need to learn some special =
 encantation of a virtually undocumented process to come up with the =
 correct code to use to establish a custom keybinding.<SPAN =
 class=3D"Apple-converted-space">=A0 </SPAN>I've seen a half a dozen =
 different ways, it seems, to make a custom keybinding, but I've never =
 found one that works reliably.<SPAN class=3D"Apple-converted-space">=A0 =
 </SPAN>If I'm missing something obvious, please pass it along, but =
 everytime I look through the documentation on keybindings, it just seems =
 like there ought to be a straight forward way of explaining it.<SPAN =
 class=3D"Apple-converted-space">=A0 </SPAN>Like, here is the function =
 that you call, and you express keystrokes in exactly this manner, and =
 here is a complete and documented list of the names of all the functions =
 that you can bind to and what they do.</DIV> </BLOCKQUOTE><DIV =
 style=3D"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; =
 margin-left: 0px; min-height: 14px; "><BR></DIV><DIV style=3D"margin-top: =
 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; ">The =
 complete list of all of the names of the function you can =
 binding</DIV><DIV style=3D"margin-top: 0px; margin-right: 0px; =
 margin-bottom: 0px; margin-left: 0px; ">to and what they do is called =
 the union of the mred, mzscheme, and</DIV><DIV style=3D"margin-top: 0px; =
 margin-right: 0px; margin-bottom: 0px; margin-left: 0px; ">drscheme =
 tools manuals, not to mention everything that appears in</DIV><DIV =
 style=3D"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; =
 margin-left: 0px; ">planet and ... well the list is endless and includes =
 other libraries</DIV><DIV style=3D"margin-top: 0px; margin-right: 0px; =
 margin-bottom: 0px; margin-left: 0px; ">you may have already writen =
 yourself.</DIV><DIV style=3D"margin-top: 0px; margin-right: 0px; =
 margin-bottom: 0px; margin-left: 0px; min-height: 14px; "><BR></DIV><DIV =
 style=3D"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; =
 margin-left: 0px; ">I doubt that list in some file somewhere would be =
 helpful.</DIV><DIV style=3D"margin-top: 0px; margin-right: 0px; =
 margin-bottom: 0px; margin-left: 0px; min-height: 14px; "><BR></DIV><DIV =
 style=3D"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; =
 margin-left: 0px; ">The way things are organized, drscheme provides you =
 a way to define</DIV><DIV style=3D"margin-top: 0px; margin-right: 0px; =
 margin-bottom: 0px; margin-left: 0px; ">arbitrary Scheme functions and =
 stick them in as keybindings. What</DIV><DIV style=3D"margin-top: 0px; =
 margin-right: 0px; margin-bottom: 0px; margin-left: 0px; ">those =
 functions do is up to you. If you need drscheme-specific</DIV><DIV =
 style=3D"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; =
 margin-left: 0px; ">functionality, look in the drscheme tools manual. If =
 you just general</DIV><DIV style=3D"margin-top: 0px; margin-right: 0px; =
 margin-bottom: 0px; margin-left: 0px; ">editing functionality, look in =
 the mred manual. Etc.</DIV><DIV style=3D"margin-top: 0px; margin-right: =
 0px; margin-bottom: 0px; margin-left: 0px; min-height: 14px; =
 "><BR></DIV><DIV style=3D"margin-top: 0px; margin-right: 0px; =
 margin-bottom: 0px; margin-left: 0px; ">I'm sorry we can't offer you =
 something that's tailored to the</DIV><DIV style=3D"margin-top: 0px; =
 margin-right: 0px; margin-bottom: 0px; margin-left: 0px; ">particular =
 keybinding tasks that you need, but the language is large,</DIV><DIV =
 style=3D"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; =
 margin-left: 0px; ">the libraries are larger, and and that's one of the =
 prices you have to</DIV><DIV style=3D"margin-top: 0px; margin-right: =
 0px; margin-bottom: 0px; margin-left: 0px; ">pay for having a language =
 with a large toolkit ... the docs are large</DIV><DIV style=3D"margin-top:=
  0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; =
 ">too.</DIV><DIV style=3D"margin-top: 0px; margin-right: 0px; =
 margin-bottom: 0px; margin-left: 0px; min-height: 14px; "><BR></DIV><DIV =
 style=3D"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; =
 margin-left: 0px; ">Robby</DIV> =
 </BLOCKQUOTE></DIV><BR></DIV></BODY></HTML>=
 
 --Apple-Mail-2--217366203--
From: Kyle Smith <kyle@bellsouth.net>
To: Robby Findler <robby@cs.uchicago.edu>
Cc: airfoil@bellsouth.net, bugs@plt-scheme.org, nobody@plt-scheme.org,
        eli@plt-scheme.org, matthias@plt-scheme.org, sk@plt-scheme.org,
        mflatt@plt-scheme.org, clements@plt-scheme.org, jay@plt-scheme.org,
        meunier@plt-scheme.org, sowens@plt-scheme.org, kathyg@plt-scheme.org,
        awick@plt-scheme.org, jacobm@plt-scheme.org, cce@plt-scheme.org,
        dalev@plt-scheme.org, samth@plt-scheme.org, ryanc@plt-scheme.org
Subject: Re: [plt-bug] all/8636: My apple-; and apple-l keys no longer function
Date: Sun, 29 Apr 2007 10:19:20 -0400

 --Apple-Mail-1--166819121
 Content-Transfer-Encoding: 7bit
 Content-Type: text/plain;
 	charset=US-ASCII;
 	delsp=yes;
 	format=flowed
 
 Hi Robby,
 
 Well it turned out to be a rouge application that stole the apple-l  
 key and not a change in DrScheme.   I'm sorry if I caused anyone any  
 great effort in chasing this one down.  All seems to be as you had  
 expected it to be.  The apple-l key is now back where it belongs,  
 with DrScheme.
 
 Thanks,
 
 --kyle
 
 Kyle Smith
 kyle at bellsouth dot net
 schemekeys.blogspot.com
 www.schemekeys.net
 
 
 On Apr 28, 2007, at 7:42 PM, Robby Findler wrote:
 
 > On 4/28/07, airfoil@bellsouth.net <airfoil@bellsouth.net> wrote:
 >> A new problem report is waiting at
 >>   http://bugs.plt-scheme.org/query/?cmd=view&pr=8636
 >>
 >> Reported by Kyle Smith for release: 369.10-svn28apr2007
 >>
 >> *** Description:
 >> Today I took the leap and built DrScheme from svn.  Everything  
 >> went smoothly until I went to go to my preferences.  First of all,  
 >> my preferences, as regards color had been lost; but I remember  
 >> reading something about this happening in the new version.  But  
 >> next, I realized that the normal key bindings for getting to  
 >> preferences and the languages menu had disappeared completely.  Why?
 >
 > That is certainly strange. The preferences keybinding has changed from
 > cmd-; to cmd-, (we were not following the apple guidelines when we
 > used cmd-; and someone alerted us to that) but the language menu
 > keybinding shouldn't have changed.
 >
 > DO you see the shortcuts listed in the menus? (the language menu and
 > the drscheme menu, in these cases).
 >
 >> Also, as I was changing my colors back, I noticed that each time I  
 >> checked bold, the smoothing setting switched to default.  I guess  
 >> I should have reported this one under the heading of a bug.
 >
 > That's a bug, yes.
 >
 >> In an editor, keybindings are something that you learn over some  
 >> period of time, and it's a big hassel when they change on you.  I  
 >> think it's time that DrScheme had a regular keybinding preferences  
 >> dialog box, where you wouldn't need to learn some special  
 >> encantation of a virtually undocumented process to come up with  
 >> the correct code to use to establish a custom keybinding.  I've  
 >> seen a half a dozen different ways, it seems, to make a custom  
 >> keybinding, but I've never found one that works reliably.  If I'm  
 >> missing something obvious, please pass it along, but everytime I  
 >> look through the documentation on keybindings, it just seems like  
 >> there ought to be a straight forward way of explaining it.  Like,  
 >> here is the function that you call, and you express keystrokes in  
 >> exactly this manner, and here is a complete and documented list of  
 >> the names of all the functions that you can bind to and what they do.
 >
 > The complete list of all of the names of the function you can binding
 > to and what they do is called the union of the mred, mzscheme, and
 > drscheme tools manuals, not to mention everything that appears in
 > planet and ... well the list is endless and includes other libraries
 > you may have already writen yourself.
 >
 > I doubt that list in some file somewhere would be helpful.
 >
 > The way things are organized, drscheme provides you a way to define
 > arbitrary Scheme functions and stick them in as keybindings. What
 > those functions do is up to you. If you need drscheme-specific
 > functionality, look in the drscheme tools manual. If you just general
 > editing functionality, look in the mred manual. Etc.
 >
 > I'm sorry we can't offer you something that's tailored to the
 > particular keybinding tasks that you need, but the language is large,
 > the libraries are larger, and and that's one of the prices you have to
 > pay for having a language with a large toolkit ... the docs are large
 > too.
 >
 > Robby
 
 
 --Apple-Mail-1--166819121
 Content-Transfer-Encoding: quoted-printable
 Content-Type: text/html;
 	charset=ISO-8859-1
 
 <HTML><BODY style=3D"word-wrap: break-word; -khtml-nbsp-mode: space; =
 -khtml-line-break: after-white-space; ">Hi Robby,<DIV><BR =
 class=3D"khtml-block-placeholder"></DIV><DIV>Well it turned out to be a =
 rouge application that stole the apple-l key and not a change in =
 DrScheme.=A0 =A0I'm sorry if I caused anyone any great effort in chasing =
 this one down.=A0 All seems to be as you had expected it to be.=A0 The =
 apple-l key is now back where it belongs, with DrScheme.</DIV><DIV><BR =
 class=3D"khtml-block-placeholder"></DIV><DIV>Thanks,</DIV><DIV><BR><DIV> =
 <SPAN class=3D"Apple-style-span" style=3D"border-collapse: separate; =
 border-spacing: 0px 0px; color: rgb(0, 0, 0); font-family: Arial; =
 font-size: 18px; font-style: normal; font-variant: normal; font-weight: =
 normal; letter-spacing: normal; line-height: normal; text-align: auto; =
 -khtml-text-decorations-in-effect: none; text-indent: 0px; =
 -apple-text-size-adjust: auto; text-transform: none; orphans: 2; =
 white-space: normal; widows: 2; word-spacing: 0px; "><SPAN =
 class=3D"Apple-style-span" style=3D"border-collapse: separate; =
 border-spacing: 0px 0px; color: rgb(0, 0, 0); font-family: Arial; =
 font-size: 18px; font-style: normal; font-variant: normal; font-weight: =
 normal; letter-spacing: normal; line-height: normal; text-align: auto; =
 -khtml-text-decorations-in-effect: none; text-indent: 0px; =
 -apple-text-size-adjust: auto; text-transform: none; orphans: 2; =
 white-space: normal; widows: 2; word-spacing: 0px; =
 "><DIV>--kyle</DIV><DIV><BR =
 class=3D"khtml-block-placeholder"></DIV><DIV>Kyle Smith</DIV><DIV>kyle =
 at bellsouth dot =
 net</DIV><DIV>schemekeys.blogspot.com</DIV><DIV>www.schemekeys.net</DIV><B=
 R class=3D"Apple-interchange-newline"></SPAN></SPAN> =
 </DIV><BR><DIV><DIV>On Apr 28, 2007, at 7:42 PM, Robby Findler =
 wrote:</DIV><BR class=3D"Apple-interchange-newline"><BLOCKQUOTE =
 type=3D"cite"><DIV style=3D"margin-top: 0px; margin-right: 0px; =
 margin-bottom: 0px; margin-left: 0px; ">On 4/28/07, <A =
 href=3D"mailto:airfoil@bellsouth.net">airfoil@bellsouth.net</A> &lt;<A =
 href=3D"mailto:airfoil@bellsouth.net">airfoil@bellsouth.net</A>&gt; =
 wrote:</DIV> <BLOCKQUOTE type=3D"cite"><DIV style=3D"margin-top: 0px; =
 margin-right: 0px; margin-bottom: 0px; margin-left: 0px; ">A new problem =
 report is waiting at</DIV><DIV style=3D"margin-top: 0px; margin-right: =
 0px; margin-bottom: 0px; margin-left: 0px; "><SPAN =
 class=3D"Apple-converted-space">=A0 </SPAN><A =
 href=3D"http://bugs.plt-scheme.org/query/?cmd=3Dview&pr=3D8636">http://bug=
 s.plt-scheme.org/query/?cmd=3Dview&amp;pr=3D8636</A></DIV><DIV =
 style=3D"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; =
 margin-left: 0px; min-height: 14px; "><BR></DIV><DIV style=3D"margin-top: =
 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; ">Reported =
 by Kyle Smith for release: 369.10-svn28apr2007</DIV><DIV =
 style=3D"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; =
 margin-left: 0px; min-height: 14px; "><BR></DIV><DIV style=3D"margin-top: =
 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; ">*** =
 Description:</DIV><DIV style=3D"margin-top: 0px; margin-right: 0px; =
 margin-bottom: 0px; margin-left: 0px; ">Today I took the leap and built =
 DrScheme from svn.<SPAN class=3D"Apple-converted-space">=A0 =
 </SPAN>Everything went smoothly until I went to go to my =
 preferences.<SPAN class=3D"Apple-converted-space">=A0 </SPAN>First of =
 all, my preferences, as regards color had been lost; but I remember =
 reading something about this happening in the new version.<SPAN =
 class=3D"Apple-converted-space">=A0 </SPAN>But next, I realized that the =
 normal key bindings for getting to preferences and the languages menu =
 had disappeared completely.<SPAN class=3D"Apple-converted-space">=A0 =
 </SPAN>Why?</DIV> </BLOCKQUOTE><DIV style=3D"margin-top: 0px; =
 margin-right: 0px; margin-bottom: 0px; margin-left: 0px; min-height: =
 14px; "><BR></DIV><DIV style=3D"margin-top: 0px; margin-right: 0px; =
 margin-bottom: 0px; margin-left: 0px; ">That is certainly strange. The =
 preferences keybinding has changed from</DIV><DIV style=3D"margin-top: =
 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; ">cmd-; to =
 cmd-, (we were not following the apple guidelines when we</DIV><DIV =
 style=3D"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; =
 margin-left: 0px; ">used cmd-; and someone alerted us to that) but the =
 language menu</DIV><DIV style=3D"margin-top: 0px; margin-right: 0px; =
 margin-bottom: 0px; margin-left: 0px; ">keybinding shouldn't have =
 changed.</DIV><DIV style=3D"margin-top: 0px; margin-right: 0px; =
 margin-bottom: 0px; margin-left: 0px; min-height: 14px; "><BR></DIV><DIV =
 style=3D"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; =
 margin-left: 0px; ">DO you see the shortcuts listed in the menus? (the =
 language menu and</DIV><DIV style=3D"margin-top: 0px; margin-right: 0px; =
 margin-bottom: 0px; margin-left: 0px; ">the drscheme menu, in these =
 cases).</DIV><DIV style=3D"margin-top: 0px; margin-right: 0px; =
 margin-bottom: 0px; margin-left: 0px; min-height: 14px; "><BR></DIV> =
 <BLOCKQUOTE type=3D"cite"><DIV style=3D"margin-top: 0px; margin-right: =
 0px; margin-bottom: 0px; margin-left: 0px; ">Also, as I was changing my =
 colors back, I noticed that each time I checked bold, the smoothing =
 setting switched to default.<SPAN class=3D"Apple-converted-space">=A0 =
 </SPAN>I guess I should have reported this one under the heading of a =
 bug.</DIV> </BLOCKQUOTE><DIV style=3D"margin-top: 0px; margin-right: =
 0px; margin-bottom: 0px; margin-left: 0px; min-height: 14px; =
 "><BR></DIV><DIV style=3D"margin-top: 0px; margin-right: 0px; =
 margin-bottom: 0px; margin-left: 0px; ">That's a bug, yes.</DIV><DIV =
 style=3D"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; =
 margin-left: 0px; min-height: 14px; "><BR></DIV> <BLOCKQUOTE =
 type=3D"cite"><DIV style=3D"margin-top: 0px; margin-right: 0px; =
 margin-bottom: 0px; margin-left: 0px; ">In an editor, keybindings are =
 something that you learn over some period of time, and it's a big hassel =
 when they change on you.<SPAN class=3D"Apple-converted-space">=A0 =
 </SPAN>I think it's time that DrScheme had a regular keybinding =
 preferences dialog box, where you wouldn't need to learn some special =
 encantation of a virtually undocumented process to come up with the =
 correct code to use to establish a custom keybinding.<SPAN =
 class=3D"Apple-converted-space">=A0 </SPAN>I've seen a half a dozen =
 different ways, it seems, to make a custom keybinding, but I've never =
 found one that works reliably.<SPAN class=3D"Apple-converted-space">=A0 =
 </SPAN>If I'm missing something obvious, please pass it along, but =
 everytime I look through the documentation on keybindings, it just seems =
 like there ought to be a straight forward way of explaining it.<SPAN =
 class=3D"Apple-converted-space">=A0 </SPAN>Like, here is the function =
 that you call, and you express keystrokes in exactly this manner, and =
 here is a complete and documented list of the names of all the functions =
 that you can bind to and what they do.</DIV> </BLOCKQUOTE><DIV =
 style=3D"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; =
 margin-left: 0px; min-height: 14px; "><BR></DIV><DIV style=3D"margin-top: =
 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; ">The =
 complete list of all of the names of the function you can =
 binding</DIV><DIV style=3D"margin-top: 0px; margin-right: 0px; =
 margin-bottom: 0px; margin-left: 0px; ">to and what they do is called =
 the union of the mred, mzscheme, and</DIV><DIV style=3D"margin-top: 0px; =
 margin-right: 0px; margin-bottom: 0px; margin-left: 0px; ">drscheme =
 tools manuals, not to mention everything that appears in</DIV><DIV =
 style=3D"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; =
 margin-left: 0px; ">planet and ... well the list is endless and includes =
 other libraries</DIV><DIV style=3D"margin-top: 0px; margin-right: 0px; =
 margin-bottom: 0px; margin-left: 0px; ">you may have already writen =
 yourself.</DIV><DIV style=3D"margin-top: 0px; margin-right: 0px; =
 margin-bottom: 0px; margin-left: 0px; min-height: 14px; "><BR></DIV><DIV =
 style=3D"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; =
 margin-left: 0px; ">I doubt that list in some file somewhere would be =
 helpful.</DIV><DIV style=3D"margin-top: 0px; margin-right: 0px; =
 margin-bottom: 0px; margin-left: 0px; min-height: 14px; "><BR></DIV><DIV =
 style=3D"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; =
 margin-left: 0px; ">The way things are organized, drscheme provides you =
 a way to define</DIV><DIV style=3D"margin-top: 0px; margin-right: 0px; =
 margin-bottom: 0px; margin-left: 0px; ">arbitrary Scheme functions and =
 stick them in as keybindings. What</DIV><DIV style=3D"margin-top: 0px; =
 margin-right: 0px; margin-bottom: 0px; margin-left: 0px; ">those =
 functions do is up to you. If you need drscheme-specific</DIV><DIV =
 style=3D"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; =
 margin-left: 0px; ">functionality, look in the drscheme tools manual. If =
 you just general</DIV><DIV style=3D"margin-top: 0px; margin-right: 0px; =
 margin-bottom: 0px; margin-left: 0px; ">editing functionality, look in =
 the mred manual. Etc.</DIV><DIV style=3D"margin-top: 0px; margin-right: =
 0px; margin-bottom: 0px; margin-left: 0px; min-height: 14px; =
 "><BR></DIV><DIV style=3D"margin-top: 0px; margin-right: 0px; =
 margin-bottom: 0px; margin-left: 0px; ">I'm sorry we can't offer you =
 something that's tailored to the</DIV><DIV style=3D"margin-top: 0px; =
 margin-right: 0px; margin-bottom: 0px; margin-left: 0px; ">particular =
 keybinding tasks that you need, but the language is large,</DIV><DIV =
 style=3D"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; =
 margin-left: 0px; ">the libraries are larger, and and that's one of the =
 prices you have to</DIV><DIV style=3D"margin-top: 0px; margin-right: =
 0px; margin-bottom: 0px; margin-left: 0px; ">pay for having a language =
 with a large toolkit ... the docs are large</DIV><DIV style=3D"margin-top:=
  0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; =
 ">too.</DIV><DIV style=3D"margin-top: 0px; margin-right: 0px; =
 margin-bottom: 0px; margin-left: 0px; min-height: 14px; "><BR></DIV><DIV =
 style=3D"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; =
 margin-left: 0px; ">Robby</DIV> =
 </BLOCKQUOTE></DIV><BR></DIV></BODY></HTML>=
 
 --Apple-Mail-1--166819121--
From: "Robby Findler" <robby@cs.uchicago.edu>
To: "Kyle Smith" <kyle@bellsouth.net>, bugs@plt-scheme.org,
        "Matthew Flatt" <mflatt@cs.utah.edu>
Cc: 
Subject: Re: [plt-bug] all/8636: My apple-; and apple-l keys no longer function
Date: Sun, 29 Apr 2007 10:11:45 -0500

 [ Matthew: a question for you at the end. ]
 
 On 4/28/07, Kyle Smith <kyle@bellsouth.net> wrote:
 >
 > Robby, would it be too much to ask, if someone gets a chance, to just give
 > me a quick, one up example, of how I could set my preferences back to
 > apple-;?
 
 Sure. In this case you'd need to add a keybinding to open the
 preferences dialog. The preferences dialog is part of the framework,
 so you'd want something like this:
 
 (module tmp (lib "keybinding-lang.ss" "framework")
   (require (lib "framework.ss" "framework"))
   (keybinding "f8"
               (lambda (editor event)
                 (send (send editor get-keymap)
                       call-function
                       "put-previous-sexp" editor event #t)))
   (keybinding "d:semicolon"
               (lambda (editor event)
                 (preferences:show-dialog))))
 
 
 
 > I would greatly appreciate it.  It would be best if the example
 > would work inside a module language, as I spend most of my time inside my
 > own custom language that has all the srfi's, libraries, and my own toolbox
 > of functions and syntactic forms that I've built a style of programming
 > around.  I've tried examples I've seen posted before, from people I respect,
 > but they just don't seem to work for me.
 
 The above makes me think that maybe the way keybindings work isn't
 clear. This'll be a long explanation, but maybe it'll shed some light.
 Sorry if it was all already obvious!
 
 DrScheme keeps a strict separation between the user's program (that
 runs in the definitions window) and itself. A keybinding module is a
 little "plugin" to drscheme, ie a small program that is dynamically
 linked into drscheme itself, it doesn't run as part of the user's
 program.
 
 This separation is important for drscheme to be able to protect itself
 from rogue, or just buggy, programs running inside drscheme. We've
 worked hard to make it impossible to crash drscheme by just running a
 program inside drscheme (as a good PDE should!). Typically, such
 separation is achieved by running separate processes, but this means
 that the communication between drscheme and the program drscheme's
 running is limited to only streams of bytes -- no functions or other
 objects can be passed back and forth. This is quite limiting. For just
 some quick examples of how drscheme communicates with the user's
 program:
 
  - closing a window asks you if you want to kill the program, but it
 only asks when the program has open windows, so drs just looks at the
 user's program's gui state and finds out if there are open windows
 there
 
  - when the user's program is working, drs has a little "running"
 message in the bottom right of the window. there are objects calling
 from the user's program back into drscheme to update that.
 
 There are lots of other little ways. The point is that we want to
 allow direct communication (callbacks that supply arbitrary Scheme
 values, not just bytes) and still protect drscheme from crashing when
 the user's program does something wrong.
 
 This has been part of Matthew Flatt's research program.
 
 Anyways, all that is background to saying that keybindings should be
 able to poke at arbitrary bits of drscheme, so they are privileged
 code and errors in them can crash drscheme. Thus, they can't be run in
 the definition's window.
 
 > This was the latest from Danny Yoo:
 >
 > (module ethan-keybindings (lib "keybinding-lang.ss" "framework")
 >    (keybinding "f8"
 >                (lambda (editor event)
 >                  (send (send editor get-keymap)
 >                        call-function
 >                        "put-previous-sexp" editor event #t))))
 >
 > But I could never get anything to happen, regardless of the key I choose, or
 > the function I choose.
 
 Here's what I tried. I opened a new drscheme, and then chose the
 edit|keybindings|add user-defined keybindings ... menu and then
 selected the file containing the above code. After that, I went to the
 repl, hit f8 and sure enough I got to the previous expression.
 
 I did notice that there is a bug: if you were to set a keybindings
 file, edit the file, unset and reset the file, you don't get the new
 version of the file, you get the old one.
 
 I believe this is because of some namespace/module interaction.
 DrScheme is using dynamic-require to extract a particular (implicit)
 export from modules like the above. When the file changes on the disk,
 dynamic-require is not looking for the new file, but just getting the
 old one (which makes sense). What I don't know is if there is a way to
 tell mzscheme to get the new one, without resorting to loading the
 file in a new namespace (which would break user's keybindings -- the
 sharing is important, even for the preferences opening keybinding
 above).
 
 Matthew: am I missing something? Any hints?
 
 Thanks,
 Robby
From: "Robby Findler" <robby@cs.uchicago.edu>
To: airfoil@bellsouth.net, bugs@plt-scheme.org
Cc: 
Subject: Re: [plt-bug] all/8636: My apple-; and apple-l keys no longer function
Date: Sun, 29 Apr 2007 10:16:50 -0500

 On 4/28/07, airfoil@bellsouth.net <airfoil@bellsouth.net> wrote:
 >
 > Also, as I was changing my colors back, I noticed that each time I checked bold, the smoothing setting switched to default.  I guess I should have reported this one under the heading of a bug.
 
 I'm not able to reproduce this one. Can you give me some concrete
 steps, say what you saw, and then say what you expected? (Sorry for
 the extra pedantry, but sometimes there can be severe communication
 gaps in bug reports, so it helps us sort things out much more
 quickly.)
 
 Thanks,
 Robby

From: "Robby Findler" <robby@cs.uchicago.edu>
To: airfoil@bellsouth.net, bugs@plt-scheme.org
Cc: 
Subject: Re: [plt-bug] all/8636: My apple-; and apple-l keys no longer function
Date: Sun, 29 Apr 2007 11:32:00 -0500

 On 4/29/07, Kyle Smith <airfoil@bellsouth.net> wrote:
 >
 >  Robby Findler wrote:
 > I'm not able to reproduce this one. Can you give me some concrete
 >  steps, say what you saw, and then say what you expected? (Sorry for
 >  the extra pedantry, but sometimes there can be severe communication
 >  gaps in bug reports, so it helps us sort things out much more
 >  quickly.)
 >
 >  Thanks,
 >  Robby
 >
 >  No problem Robby.  I hit apple-, and bring up my preferences dialog box.
 > Then I select Colors.  Then select Scheme.  Now I check bold for constant,
 > which is currently set to italic and smoothed.  And straight away the box
 > for smoothing changes  to default.
 >
 >  Robby, something odd is going on here, because I played around with this
 > for a while so I could give you accurate  instructions.  The instructions
 > above worked the first time I went in today.  They also worked yesterday on
 > all the font categories, as mine were all initially set to smoothed.
 > However, as I went in and out of preferences today, it seemed to reach a
 > fixed point where this behavior stopped.  I remember something about the
 > preferences system being redone to a certain extent in this new version.  Is
 > it possible that this is only a transitional bug, that resolves after you've
 > checked bold for each font, and thus positively changed every font's weight
 > preference?
 >
 >  The best way I could explain to reproduce this error then would be to start
 > with a 369.8 version, which is what I had, and make sure all fonts
 > categories are set to smoothed.   Then upgrade it to the current version of
 > DrScheme.  After that the  instructions in the first paragraph should
 > reproduce what I saw.
 
 The change to the preferences system wrt smoothing just ignores all of
 the old settings; they won't interfere with each other. That is,
 changing your preferences for the svn version before smoothing was in
 the dialog won't have any effect on the settings in the svn version
 after smoothing was in the dialog (and vice versa).
 
 I tried just starting over with a new preferences file (quitting
 drscheme, moving org.plt-scheme.prefs.ss (in ~/Library/Preferences)
 out of the way, and then starting up drscheme) and things seemed to
 work, but the font settings are initially at "default" not smoothed. I
 changed them to smoothed, didn't see the problem, restarted drscheme,
 they were all at smoothed, and I still didn't see the problem.
 
 So, I think I'm stuck on this one. I'll keep it in mind, just in case
 something comes up as I work on the code.
 
 Thanks for the report.
 
 Robby
From: Eli Barzilay <eli@barzilay.org>
To: "Robby Findler" <robby@cs.uchicago.edu>,
        Matthew Flatt <mflatt@cs.utah.edu>
Cc: bugs@plt-scheme.org
Subject: Re: [plt-bug] all/8636: My apple-; and apple-l keys no longer function
Date: Sun, 29 Apr 2007 12:32:41 -0400

 On Apr 29, Robby Findler wrote:
 >  
 >  I believe this is because of some namespace/module interaction.
 >  DrScheme is using dynamic-require to extract a particular (implicit)
 >  export from modules like the above. When the file changes on the disk,
 >  dynamic-require is not looking for the new file, but just getting the
 >  old one (which makes sense). What I don't know is if there is a way to
 >  tell mzscheme to get the new one, without resorting to loading the
 >  file in a new namespace (which would break user's keybindings -- the
 >  sharing is important, even for the preferences opening keybinding
 >  above).
 
 There's this:
 
   collects/handin-server/private/reloadable.ss
 
 which seems appropriate for code configuration files like keybindings.
 (Perhaps it should move to a proper place if you need something
 similar?)
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                   http://www.barzilay.org/                 Maze is Life!
From: "Robby Findler" <robby@cs.uchicago.edu>
To: "Eli Barzilay" <eli@barzilay.org>
Cc: "Matthew Flatt" <mflatt@cs.utah.edu>, bugs@plt-scheme.org
Subject: Re: [plt-bug] all/8636: My apple-; and apple-l keys no longer function
Date: Sun, 29 Apr 2007 11:34:53 -0500

 On 4/29/07, Eli Barzilay <eli@barzilay.org> wrote:
 > On Apr 29, Robby Findler wrote:
 > >
 > >  I believe this is because of some namespace/module interaction.
 > >  DrScheme is using dynamic-require to extract a particular (implicit)
 > >  export from modules like the above. When the file changes on the disk,
 > >  dynamic-require is not looking for the new file, but just getting the
 > >  old one (which makes sense). What I don't know is if there is a way to
 > >  tell mzscheme to get the new one, without resorting to loading the
 > >  file in a new namespace (which would break user's keybindings -- the
 > >  sharing is important, even for the preferences opening keybinding
 > >  above).
 >
 > There's this:
 >
 >   collects/handin-server/private/reloadable.ss
 >
 > which seems appropriate for code configuration files like keybindings.
 > (Perhaps it should move to a proper place if you need something
 > similar?)
 
 Yeah, that looks about right.
 
 Shouldn't that live in a place nearby to the module-name-resolver,
 since it seems to rely on undocumented conventions of that stuff?
 
 Robby
From: Eli Barzilay <eli@barzilay.org>
To: "Robby Findler" <robby@cs.uchicago.edu>
Cc: "Matthew Flatt" <mflatt@cs.utah.edu>, bugs@plt-scheme.org
Subject: Re: [plt-bug] all/8636: My apple-; and apple-l keys no longer function
Date: Sun, 29 Apr 2007 12:58:35 -0400

 On Apr 29, Robby Findler wrote:
 > On 4/29/07, Eli Barzilay <eli@barzilay.org> wrote:
 > >
 > > There's this:
 > >
 > >   collects/handin-server/private/reloadable.ss
 > >
 > > which seems appropriate for code configuration files like
 > > keybindings.  (Perhaps it should move to a proper place if you
 > > need something similar?)
 > 
 > Yeah, that looks about right.
 > 
 > Shouldn't that live in a place nearby to the module-name-resolver,
 > since it seems to rely on undocumented conventions of that stuff?
 
 I think so, but I don't know if Matthew likes it or not...  (If he
 does, then perhaps it could be made easier to do.)
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                   http://www.barzilay.org/                 Maze is Life!
From: Matthew Flatt <mflatt@cs.utah.edu>
To: "Robby Findler" <robby@cs.uchicago.edu>
Cc: "Eli Barzilay" <eli@barzilay.org>, bugs@plt-scheme.org
Subject: Re: [plt-bug] all/8636: My apple-; and apple-l keys no longer function
Date: Mon, 30 Apr 2007 06:16:43 +0800

 At Sun, 29 Apr 2007 11:34:53 -0500, "Robby Findler" wrote:
 > On 4/29/07, Eli Barzilay <eli@barzilay.org> wrote:
 > > On Apr 29, Robby Findler wrote:
 > > >
 > > >  I believe this is because of some namespace/module interaction.
 > > >  DrScheme is using dynamic-require to extract a particular (implicit)
 > > >  export from modules like the above. When the file changes on the disk,
 > > >  dynamic-require is not looking for the new file, but just getting the
 > > >  old one (which makes sense). What I don't know is if there is a way to
 > > >  tell mzscheme to get the new one, without resorting to loading the
 > > >  file in a new namespace (which would break user's keybindings -- the
 > > >  sharing is important, even for the preferences opening keybinding
 > > >  above).
 > >
 > > There's this:
 > >
 > >   collects/handin-server/private/reloadable.ss
 > >
 > > which seems appropriate for code configuration files like keybindings.
 > > (Perhaps it should move to a proper place if you need something
 > > similar?)
 > 
 > Yeah, that looks about right.
 > 
 > Shouldn't that live in a place nearby to the module-name-resolver,
 > since it seems to rely on undocumented conventions of that stuff?
 
 I don't see that it needs to be close to the module-name resolver (and
 I'm not sure what that means). But I finally documented the path ->
 symbol conversion in the MzScheme manual, since I didn't get around to
 implementing a separate type for path-based module names.
 
 Matthew
 
From: "Robby Findler" <robby@cs.uchicago.edu>
To: "Matthew Flatt" <mflatt@cs.utah.edu>
Cc: "Eli Barzilay" <eli@barzilay.org>, bugs@plt-scheme.org
Subject: Re: [plt-bug] all/8636: My apple-; and apple-l keys no longer function
Date: Sun, 29 Apr 2007 17:24:51 -0500

 On 4/29/07, Matthew Flatt <mflatt@cs.utah.edu> wrote:
 > At Sun, 29 Apr 2007 11:34:53 -0500, "Robby Findler" wrote:
 > > On 4/29/07, Eli Barzilay <eli@barzilay.org> wrote:
 > > > On Apr 29, Robby Findler wrote:
 > > > >
 > > > >  I believe this is because of some namespace/module interaction.
 > > > >  DrScheme is using dynamic-require to extract a particular (implicit)
 > > > >  export from modules like the above. When the file changes on the disk,
 > > > >  dynamic-require is not looking for the new file, but just getting the
 > > > >  old one (which makes sense). What I don't know is if there is a way to
 > > > >  tell mzscheme to get the new one, without resorting to loading the
 > > > >  file in a new namespace (which would break user's keybindings -- the
 > > > >  sharing is important, even for the preferences opening keybinding
 > > > >  above).
 > > >
 > > > There's this:
 > > >
 > > >   collects/handin-server/private/reloadable.ss
 > > >
 > > > which seems appropriate for code configuration files like keybindings.
 > > > (Perhaps it should move to a proper place if you need something
 > > > similar?)
 > >
 > > Yeah, that looks about right.
 > >
 > > Shouldn't that live in a place nearby to the module-name-resolver,
 > > since it seems to rely on undocumented conventions of that stuff?
 >
 > I don't see that it needs to be close to the module-name resolver (and
 > I'm not sure what that means). But I finally documented the path ->
 > symbol conversion in the MzScheme manual, since I didn't get around to
 > implementing a separate type for path-based module names.
 
 All I meant is that if we have knowledge about an invariant that isn't
 documented smeared all around the code base, it is bad news when the
 invariant changes. But documenting it somehow makes it better (since I
 guess that means it is less likely to change).
 
 Robby
From: "Robby Findler" <robby@cs.uchicago.edu>
To: "Matthew Flatt" <mflatt@cs.utah.edu>
Cc: "Eli Barzilay" <eli@barzilay.org>, bugs@plt-scheme.org
Subject: Re: [plt-bug] all/8636: My apple-; and apple-l keys no longer function
Date: Sun, 29 Apr 2007 17:25:35 -0500

 PS: should I assume from your silence that no other comments on the PR
 are forthcoming and that the right path is to do something like what
 Eli's done?
 
 Thanks,
 Robby
From: Matthew Flatt <mflatt@cs.utah.edu>
To: "Robby Findler" <robby@cs.uchicago.edu>
Cc: "Eli Barzilay" <eli@barzilay.org>, bugs@plt-scheme.org
Subject: Re: [plt-bug] all/8636: My apple-; and apple-l keys no longer function
Date: Mon, 30 Apr 2007 06:31:27 +0800

 At Sun, 29 Apr 2007 17:25:35 -0500, "Robby Findler" wrote:
 > PS: should I assume from your silence that no other comments on the PR
 > are forthcoming and that the right path is to do something like what
 > Eli's done?
 
 It seems ok.
 
 I note that `compile-enforce-module-constants' doesn't work with
 bytecode, and the whole reloading approach only works for immediate
 modules (not transitive through requires). But those may be resonable
 constraints.
 
 I also worry about `compile-enforce-module-constants' and required
 modules. That is, if loading a reloadble module also triggers other
 loads via `require', then the parameter setting applies to the other
 modules. It's unlikely to ever matter in practice, though.
 
 Matthew
 
From: "Robby Findler" <robby@cs.uchicago.edu>
To: "Matthew Flatt" <mflatt@cs.utah.edu>
Cc: "Eli Barzilay" <eli@barzilay.org>, bugs@plt-scheme.org
Subject: Re: [plt-bug] all/8636: My apple-; and apple-l keys no longer function
Date: Sun, 29 Apr 2007 17:41:50 -0500

 On 4/29/07, Matthew Flatt <mflatt@cs.utah.edu> wrote:
 > At Sun, 29 Apr 2007 17:25:35 -0500, "Robby Findler" wrote:
 > > PS: should I assume from your silence that no other comments on the PR
 > > are forthcoming and that the right path is to do something like what
 > > Eli's done?
 >
 > It seems ok.
 >
 > I note that `compile-enforce-module-constants' doesn't work with
 > bytecode, and the whole reloading approach only works for immediate
 > modules (not transitive through requires). But those may be resonable
 > constraints.
 >
 > I also worry about `compile-enforce-module-constants' and required
 > modules. That is, if loading a reloadble module also triggers other
 > loads via `require', then the parameter setting applies to the other
 > modules.
 
 The more I think about this, the less I like it. In practice, one only
 wants to reload them when debugging the keybindings, but I can't think
 of any better way to make a debugging environment for them, other than
 just restarting drscheme. So that observation doesn't seem useful, but
 maybe you can make something out of it?
 
 >  It's unlikely to ever matter in practice, though.
 
 Because keybindings don't have to run fast code (or if they do, that
 code will be compiled already and hopefully won't be reloaded)?
 
 Robby
From: Eli Barzilay <eli@barzilay.org>
To: Matthew Flatt <mflatt@cs.utah.edu>,
        "Robby Findler" <robby@cs.uchicago.edu>
Cc: bugs@plt-scheme.org
Subject: Re: [plt-bug] all/8636: My apple-; and apple-l keys no longer function
Date: Sun, 29 Apr 2007 21:01:40 -0400

 On Apr 30, Matthew Flatt wrote:
 > 
 > I don't see that it needs to be close to the module-name resolver
 > (and I'm not sure what that means). [...]
 
 I thought that since this code is subtle but useful, it would be
 better to have it in a suitable collectio.
 
 
 On Apr 30, Matthew Flatt wrote:
 > 
 > I note that [1] `compile-enforce-module-constants' doesn't work with
 > bytecode, and the whole reloading approach only [2] works for
 > immediate modules (not transitive through requires). But those may
 > be resonable constraints.
 > 
 > [3] I also worry about `compile-enforce-module-constants' and
 > required modules. [...]
 
 #1 is not a problem, it would be nice if there was some solution for
 #2, but #3 is more problematic since it can "infect" other modules...
 
 
 On Apr 29, Robby Findler wrote:
 > 
 > The more I think about this, the less I like it. In practice, one
 > only wants to reload them when debugging the keybindings, but I
 > can't think of any better way to make a debugging environment for
 > them, other than just restarting drscheme. So that observation
 > doesn't seem useful, but maybe you can make something out of it?
 
 It's more than just debugging -- I can imagine some sophisticated
 system that records keyboard macros in files etc.
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                   http://www.barzilay.org/                 Maze is Life!
From: "Robby Findler" <robby@cs.uchicago.edu>
To: "Eli Barzilay" <eli@barzilay.org>
Cc: "Matthew Flatt" <mflatt@cs.utah.edu>, bugs@plt-scheme.org
Subject: Re: [plt-bug] all/8636: My apple-; and apple-l keys no longer function
Date: Sun, 29 Apr 2007 21:56:17 -0500

 On 4/29/07, Eli Barzilay <eli@barzilay.org> wrote:
 > On Apr 30, Matthew Flatt wrote:
 > >
 > > I don't see that it needs to be close to the module-name resolver
 > > (and I'm not sure what that means). [...]
 >
 > I thought that since this code is subtle but useful, it would be
 > better to have it in a suitable collectio.
 >
 >
 > On Apr 30, Matthew Flatt wrote:
 > >
 > > I note that [1] `compile-enforce-module-constants' doesn't work with
 > > bytecode, and the whole reloading approach only [2] works for
 > > immediate modules (not transitive through requires). But those may
 > > be resonable constraints.
 > >
 > > [3] I also worry about `compile-enforce-module-constants' and
 > > required modules. [...]
 >
 > #1 is not a problem, it would be nice if there was some solution for
 > #2, but #3 is more problematic since it can "infect" other modules...
 >
 >
 > On Apr 29, Robby Findler wrote:
 > >
 > > The more I think about this, the less I like it. In practice, one
 > > only wants to reload them when debugging the keybindings, but I
 > > can't think of any better way to make a debugging environment for
 > > them, other than just restarting drscheme. So that observation
 > > doesn't seem useful, but maybe you can make something out of it?
 >
 > It's more than just debugging -- I can imagine some sophisticated
 > system that records keyboard macros in files etc.
 
 Just don't save the macros as modules that you invoke?
 
 But if what you're really saying is that we need a story for module
 re-invocation, then I guess I agree.
 
 Robby
From: Eli Barzilay <eli@barzilay.org>
To: "Robby Findler" <robby@cs.uchicago.edu>
Cc: "Matthew Flatt" <mflatt@cs.utah.edu>, bugs@plt-scheme.org
Subject: Re: [plt-bug] all/8636: My apple-; and apple-l keys no longer function
Date: Sun, 29 Apr 2007 23:10:58 -0400

 On Apr 29, Robby Findler wrote:
 > On 4/29/07, Eli Barzilay <eli@barzilay.org> wrote:
 > > On Apr 30, Matthew Flatt wrote:
 > > >
 > > > I don't see that it needs to be close to the module-name resolver
 > > > (and I'm not sure what that means). [...]
 > >
 > > I thought that since this code is subtle but useful, it would be
 > > better to have it in a suitable collectio.
 > >
 > >
 > > On Apr 30, Matthew Flatt wrote:
 > > >
 > > > I note that [1] `compile-enforce-module-constants' doesn't work with
 > > > bytecode, and the whole reloading approach only [2] works for
 > > > immediate modules (not transitive through requires). But those may
 > > > be resonable constraints.
 > > >
 > > > [3] I also worry about `compile-enforce-module-constants' and
 > > > required modules. [...]
 > >
 > > #1 is not a problem, it would be nice if there was some solution for
 > > #2, but #3 is more problematic since it can "infect" other modules...
 > >
 > >
 > > On Apr 29, Robby Findler wrote:
 > > >
 > > > The more I think about this, the less I like it. In practice, one
 > > > only wants to reload them when debugging the keybindings, but I
 > > > can't think of any better way to make a debugging environment for
 > > > them, other than just restarting drscheme. So that observation
 > > > doesn't seem useful, but maybe you can make something out of it?
 > >
 > > It's more than just debugging -- I can imagine some sophisticated
 > > system that records keyboard macros in files etc.
 > 
 > Just don't save the macros as modules that you invoke?
 > 
 > But if what you're really saying is that we need a story for module
 > re-invocation, then I guess I agree.
 
 Yes.  And I think that there are a few easy steps in the general
 direction, a real solution is still open...
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                   http://www.barzilay.org/                 Maze is Life!
