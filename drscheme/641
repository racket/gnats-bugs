From matthias@cs.rice.edu  Wed Jun 10 10:40:35 1998
Received: from africa.cs.rice.edu (africa.cs.rice.edu [128.42.1.175])
          by cs.rice.edu (8.8.5/8.8.4) with ESMTP
	  id KAA29406 for <plt-gnats@cs.rice.edu>; Wed, 10 Jun 1998 10:40:35 -0500 (CDT)
Message-Id: <199806101540.KAA09824@africa.cs.rice.edu>
Date: Wed, 10 Jun 1998 10:40:34 -0500 (CDT)
From: Matthias Felleisen <matthias@cs.rice.edu>
Reply-To: matthias@rice.edu
To: plt-gnats@cs.rice.edu
Subject: ready-mouse-click no longer works
X-Send-Pr-Version: 3.101

>Number:         641
>Category:       drscheme
>Synopsis:       ready-mouse-click no longer works
>Confidential:   no
>Severity:       critical
>Priority:       high
>Responsible:    robby
>State:          closed
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Wed Jun 10 15:45:03 GMT 1998
>Last-Modified:  Tue Jul 21 13:37:28 MST 1998
>Originator:     Matthias Felleisen
>Organization:
titan
>Release:        unknown
>Environment:
	v52
>Description:
	(ready-mouse-click <window>) no longer registers mouse clicks

	This is needed for several libraries intended for the workshop. 

>How-To-Repeat:

(open-graphics)

(define w (open-viewport "Bug" 500 500))

(define (L)
  (printf "start~n")
  (let L () (printf "  looping~n") (unless (ready-mouse-click w) (L)))
  (printf "stop!~n"))


>Fix:
	
>Audit-Trail:

From: Robert Bruce Findler <robby@cs.rice.edu>
To: mflatt@cs.rice.edu, Paul Steckler <steck@cs.rice.edu>
Cc: plt-gnats@cs.rice.edu
Subject: Re: all/641: ready-mouse-click no longer works
Date: Thu, 11 Jun 1998 13:23:05 -0500 (CDT)

 	`Robert Bruce Findler' made changes to this PR.
 
 --- /tmp/gnatsa000k4	Thu Jun 11 13:22:22 1998
 +++ /tmp/gnatsb000k4	Thu Jun 11 13:22:55 1998
 @@ -49,3 +49,27 @@
  	
  >Audit-Trail:
  >Unformatted:
 +
 +Well, it turns out that the problem with this program
 +
 +(open-graphics)
 +
 +(define w (open-viewport "Bug" 500 500))
 +
 +(define (L)
 +  (printf "start~n")
 +  (let L () (printf "  looping~n") (unless (ready-mouse-click w) (L)))
 +  (printf "stop!~n"))
 +
 +(L)
 +
 +is due to the change that you suggested in the event loop. Since the
 +evaluation of the "L" loop is on the event handler thread, no clicks will
 +ever enter the queue. I have fixed it with a judicious use of wx:yield....
 +
 +On the macintosh, this program locks up MrEd. Since the "w" window appears
 +on top of the drscheme window, I cannot click on break. I cannot move the
 +window, either. On other platforms, I would be able to move the window. Is
 +that fixable? I had to use "cmd-option-esc" to kill mred.
 +
 +Robby

From: Robert Bruce Findler <robby@cs.rice.edu>
To: Paul Steckler <steck@cs.rice.edu>
Cc: plt-gnats@cs.rice.edu
Subject: Re: all/641: ready-mouse-click no longer works
Date: Thu, 11 Jun 1998 13:23:30 -0500 (CDT)

 	`Robert Bruce Findler' made changes to this PR.
 
 --- /tmp/gnatsa000k4	Thu Jun 11 13:23:08 1998
 +++ /tmp/gnatsb000k4	Thu Jun 11 13:23:27 1998
 @@ -67,6 +67,8 @@
  evaluation of the "L" loop is on the event handler thread, no clicks will
  ever enter the queue. I have fixed it with a judicious use of wx:yield....
  
 +The only changed file is plt/collects/graphics/graphicr.ss.
 +
  On the macintosh, this program locks up MrEd. Since the "w" window appears
  on top of the drscheme window, I cannot click on break. I cannot move the
  window, either. On other platforms, I would be able to move the window. Is

State-Changed-From-To: open-
State-Changed-By: robby
State-Changed-When: Wed Jul  1 14:10:44 1998
State-Changed-Why:

Responsible-Changed-From-To: steck->robby
Responsible-Changed-By: robby
Responsible-Changed-When: Wed Jul  1 14:10:48 1998
Responsible-Changed-Why:

this should create a new eventspace instead of us in wx:yield

From: robby@cs.rice.edu

Well, it turns out that the problem with this program

(open-graphics)

(define w (open-viewport "Bug" 500 500))

(define (L)
  (printf "start~n")
  (let L () (printf "  looping~n") (unless (ready-mouse-click w) (L)))
  (printf "stop!~n"))

(L)

is due to the change that you suggested in the event loop. Since the
evaluation of the "L" loop is on the event handler thread, no clicks will
ever enter the queue. I have fixed it with a judicious use of wx:yield....

The only changed file is plt/collects/graphics/graphicr.ss.

On the macintosh, this program locks up MrEd. Since the "w" window appears
on top of the drscheme window, I cannot click on break. I cannot move the
window, either. On other platforms, I would be able to move the window. Is
that fixable? I had to use "cmd-option-esc" to kill mred.

Robby

From: Matthew Flatt <mflatt@cs.rice.edu>
To: Robert Bruce Findler <robby@cs.rice.edu>
Subject: Re: 641

 Quoting Robert Bruce Findler:
 > Well, it turns out that the problem with this program
 > 
 > (open-graphics)
 > 
 > (define w (open-viewport "Bug" 500 500))
 > 
 > (define (L)
 >   (printf "start~n")
 >   (let L () (printf "  looping~n") (unless (ready-mouse-click w) (L)))
 >   (printf "stop!~n"))
 > 
 > (L)
 > 
 > is due to the change that you suggested in the event loop. Since the
 > evaluation of the "L" loop is on the event handler thread, no clicks will
 > ever enter the queue. I plan to fix it with judicious use of wx:yield....
 
 An alternative, which I prefer, is to put viewports in their own
 eventspace. Otherwise, calling ready-mouse-click will have strange
 effects for programs that mix viewports with other event-based
 objects.
 
 Conceptually, a separate eventspace make sense because viewports
 essentialy implement thier own event queues, and the user has control
 over when those events are handled. In other words, there are no
 event-based callbacks, so there's no need to keep the viewport in the
 same eventspace as anything else.
 
 Matthew

From: Robert Bruce Findler <robby@cs.rice.edu>
To: Matthew Flatt <mflatt@cs.rice.edu>
Subject: Re: 641

 Matthew Flatt writes:
 > Quoting Robert Bruce Findler:
 > > Well, it turns out that the problem with this program
 > > 
 > > (open-graphics)
 > > 
 > > (define w (open-viewport "Bug" 500 500))
 > > 
 > > (define (L)
 > >   (printf "start~n")
 > >   (let L () (printf "  looping~n") (unless (ready-mouse-click w) (L)))
 > >   (printf "stop!~n"))
 > > 
 > > (L)
 > > 
 > > is due to the change that you suggested in the event loop. Since the
 > > evaluation of the "L" loop is on the event handler thread, no clicks will
 > > ever enter the queue. I plan to fix it with judicious use of wx:yield....
 > 
 > An alternative, which I prefer, is to put viewports in their own
 > eventspace. Otherwise, calling ready-mouse-click will have strange
 > effects for programs that mix viewports with other event-based
 > objects.
 > 
 > Conceptually, a separate eventspace make sense because viewports
 > essentialy implement thier own event queues, and the user has control
 > over when those events are handled. In other words, there are no
 > event-based callbacks, so there's no need to keep the viewport in the
 > same eventspace as anything else.
 
 Ah. That makes a lot of sense. I will do that.
 
 Robby

State-Changed-From-To: open-closed
State-Changed-By: robby
State-Changed-When: Tue Jul 21 13:37:25 1998
State-Changed-Why:
