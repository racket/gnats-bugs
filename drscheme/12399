From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Mon Nov 28 04:03:36 2011
Received: from mail-yw0-f44.google.com (mail-yw0-f44.google.com [209.85.213.44])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id pAS93VC6005294
	for <bugs@bugs.plt-scheme.org>; Mon, 28 Nov 2011 04:03:31 -0500
Message-Id: <201111280903.pAS93QLI005283@champlain.ccs.neu.edu>
Date: Mon, 28 Nov 2011 04:03:26 -0500
From: vu3rdd@gmail.com
To: bugs@racket-lang.org
Subject: Annoying popup while changing the #lang line

>Number:         12399
>Category:       drscheme
>Synopsis:       Annoying popup while changing the #lang line
>Class:          sw-bug
>Responsible:    robby
>Severity:       non-critical
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Mon Nov 28 04:04:01 -0500 2011
>Closed-Date:    Mon Nov 28 22:16:49 -0500 2011
>Last-Modified:  Tue Nov 29 08:16:01 -0500 2011
>Originator:     Ramakrishnan Muthukrishnan
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.2.0.4--2010-12-09(-/f)
>Environment:
unix "Linux rkrishnanT510 3.1.0-1-amd64 #1 SMP Mon Nov 14 08:02:25 UTC 2011 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 221307624
Links: (links) = ("geiser" "gcstats" "raco-git"); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()


Collections:
("/home/rkrishnan/.racket/5.2.0.4/collects"
 (non-existent-path))
("/usr/local/racket/lib/racket/collects"
 ("rnrs" "raco" "lang" "scribblings" "repo-time-stamp" "typed-scheme" "test-engine" "texpict" "help" "guibuilder" "picturing-programs" "syntax-color" "games" "defaults" "htdp" "sgl" "r6rs" "honu" "icons" "tests" "mzcom" "at-exp" "frtime" "graphics" "info-domain" "rackunit" "sirmail" "racket" "tex2page" "readline" "lazy" "stepper" "data" "2htdp" "datalog" "racklog" "parser-tools" "combinator-parser" "drracket" "slatex" "gui-debugger" "dynext" "redex" "launcher" "reader" "errortrace" "mysterx" "test-box-recovery" "scribble" "mred" "xrepl" "file" "swindle" "config" "handin-server" "typed" "meta" "unstable" "mzlib" "eopl" "scriblib" "s-exp" "db" "openssl" "xml" "plai" "syntax" "profile" "embedded-gui" "compiler" "trace" "hierlist" "typed-racket" "html" "wxme" "framework" "schemeunit" "preprocessor" "r5rs" "string-constants" "algol60" "web-server" "plot" "srfi" "mzscheme" "drscheme" "net" "mrlib" "teachpack" "ffi" "setup" "scheme" "macro-debugger" "deinprogramm" "make" "browser" !
 "version" "slideshow" "planet" "handin-client"))

Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t))
>Description:
When there is an error while running a program, if one changes the #lang line, one get a popup which appear again and again even if "ok" is pressed.

Thanks
Ramakrishnan
>How-To-Repeat:
Paste the following code into definition window and press F5.

#lang racket
;;; Code written by Oleg Kiselyov
;; (http://pobox.com/~oleg/ftp/)
;;;
;;; Taken from leanTAP.scm
;;; http://kanren.cvs.sourceforge.net/kanren/kanren/mini/leanTAP.scm?view=log

; A simple linear pattern matcher
; It is efficient (generates code at macro-expansion time) and simple:
; it should work on any R5RS Scheme system.

; (pmatch exp <clause> ...[<else-clause>])
; <clause> ::= (<pattern> <guard> exp ...)
; <else-clause> ::= (else exp ...)
; <guard> ::= boolean exp | ()
; <pattern> :: =
;        ,var  -- matches always and binds the var
;                 pattern must be linear! No check is done
;         _    -- matches always
;        'exp  -- comparison with exp (using equal?)
;        exp   -- comparison with exp (using equal?)
;        (<pattern1> <pattern2> ...) -- matches the list of patterns
;        (<pattern1> . <pattern2>)  -- ditto
;        ()    -- matches the empty list

; Modified by Adam C. Foltzer for R6RS compatibility

(define-syntax pmatch
  (syntax-rules (else guard)
    ((_ (rator rand ...) cs ...)
     (let ((v (rator rand ...)))
       (pmatch v cs ...)))
    ((_ v) (error 'pmatch "failed: ~s" v))
    ((_ v (else e0 e ...)) (begin e0 e ...))
    ((_ v (pat (guard g ...) e0 e ...) cs ...)
     (let ((fk (lambda () (pmatch v cs ...))))
       (ppat v pat (if (and g ...) (begin e0 e ...) (fk)) (fk))))
    ((_ v (pat e0 e ...) cs ...)
     (let ((fk (lambda () (pmatch v cs ...))))
       (ppat v pat (begin e0 e ...) (fk))))))

(define-syntax ppat
  (syntax-rules (uscore quote unquote)
    ((_ v uscore kt kf)
     ; _ can't be listed in literals list in R6RS Scheme
     (and (identifier? #'uscore) (free-identifier=? #'uscore #'_))
     kt)
    ((_ v () kt kf) (if (null? v) kt kf))
    ((_ v (quote lit) kt kf) (if (equal? v (quote lit)) kt kf))
    ((_ v (unquote var) kt kf) (let ((var v)) kt))
    ((_ v (x . y) kt kf)
     (if (pair? v)
       (let ((vx (car v)) (vy (cdr v)))
	 (ppat vx x (ppat vy y kt kf) kf))
       kf))
    ((_ v lit kt kf) (if (equal? v (quote lit)) kt kf))))

There will be an error "syntax-rules: bad syntax in: (syntax-rules (uscore quote unquote) ((_ v uscore kt kf) (and (identifier? (syntax uscore)) (free-identifier=? (syntax uscore) (syntax _))) kt) ((_ v () kt kf) (if (null? v) kt kf)) ((_ v (quote lit) kt kf) (if (equal? v (quote lit)) kt kf)) ((_ v (unquote var) kt kf) (let ((var v)) kt)) ((_ v (x . y) kt kf) (if (pair? v) (let ((vx (car v)) (vy (cdr v))) (ppat vx x (ppat vy y kt kf) kf)) kf)) ((_ v lit kt kf) (if (equal? v (quote lit)) kt kf)))
> "

Ignore that for now.

Now, go and change the #lang line by going to the end of the lang line and pressing backspace. One will get a popup with the error:

exception in colorer thread: #(struct:exn:fail:contract "open-input-text-editor: start index outside the range [0,1095]: 1096" #<continuation-mark-set>)

 === context ===
/usr/local/racket/lib/racket/collects/mred/private/snipfile.rkt:24:4: core14
/usr/local/racket/lib/racket/collects/framework/private/color.rkt:452:23
/usr/local/racket/lib/racket/collects/racket/private/map.rkt:45:11: for-each


The popup never disappears even if "ok" is pressed.
>Fix:
>Audit-Trail:
From: Robby Findler <robby@eecs.northwestern.edu>
To: "vu3rdd@gmail.com" <vu3rdd@gmail.com>,
        "bugs@racket-lang.org" <bugs@racket-lang.org>
Cc: "nobody@racket-lang.org" <nobody@racket-lang.org>,
        "bug-notification@racket-lang.org" <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/12399: Annoying popup while changing the #lang line
Date: Mon, 28 Nov 2011 17:27:13 -0600

 --f46d040716c7b1b0f804b2d3d74b
 Content-Type: text/plain; charset=UTF-8
 
 Thank you for the report.
 
 Does the popup window appear reliably on your machine, when following the
 instructions below?
 
 Thanks,
 Robby
 
 On Monday, November 28, 2011, wrote:
 
 > A new problem report is waiting at
 >  http://bugs.racket-lang.org/query/?cmd=view&pr=12399
 >
 > Reported by Ramakrishnan Muthukrishnan for release:
 > 5.2.0.4--2010-12-09(-/f)
 >
 > *** Description:
 > When there is an error while running a program, if one changes the #lang
 > line, one get a popup which appear again and again even if "ok" is pressed.
 >
 > Thanks
 > Ramakrishnan
 >
 > *** How to repeat:
 > Paste the following code into definition window and press F5.
 >
 > #lang racket
 > ;;; Code written by Oleg Kiselyov
 > ;; (http://pobox.com/~oleg/ftp/)
 > ;;;
 > ;;; Taken from leanTAP.scm
 > ;;;
 > http://kanren.cvs.sourceforge.net/kanren/kanren/mini/leanTAP.scm?view=log
 >
 > ; A simple linear pattern matcher
 > ; It is efficient (generates code at macro-expansion time) and simple:
 > ; it should work on any R5RS Scheme system.
 >
 > ; (pmatch exp <clause> ...[<else-clause>])
 > ; <clause> ::= (<pattern> <guard> exp ...)
 > ; <else-clause> ::= (else exp ...)
 > ; <guard> ::= boolean exp | ()
 > ; <pattern> :: =
 > ;        ,var  -- matches always and binds the var
 > ;                 pattern must be linear! No check is done
 > ;         _    -- matches always
 > ;        'exp  -- comparison with exp (using equal?)
 > ;        exp   -- comparison with exp (using equal?)
 > ;        (<pattern1> <pattern2> ...) -- matches the list of patterns
 > ;        (<pattern1> . <pattern2>)  -- ditto
 > ;        ()    -- matches the empty list
 >
 > ; Modified by Adam C. Foltzer for R6RS compatibility
 >
 > (define-syntax pmatch
 >  (syntax-rules (else guard)
 >    ((_ (rator rand ...) cs ...)
 >     (let ((v (rator rand ...)))
 >       (pmatch v cs ...)))
 >    ((_ v) (error 'pmatch "failed: ~s" v))
 >    ((_ v (else e0 e ...)) (begin e0 e ...))
 >    ((_ v (pat (guard g ...) e0 e ...) cs ...)
 >     (let ((fk (lambda () (pmatch v cs ...))))
 >       (ppat v pat (if (and g ...) (begin e0 e ...) (fk)) (fk))))
 >    ((_ v (pat e0 e ...) cs ...)
 >     (let ((fk (lambda () (pmatch v cs ...))))
 >       (ppat v pat (begin e0 e ...) (fk))))))
 >
 > (define-syntax ppat
 >  (syntax-rules (uscore quote unquote)
 >    ((_ v uscore kt kf)
 >     ; _ can't be listed in literals list in R6RS Scheme
 >     (and (identifier? #'uscore) (free-identifier=? #'uscore #'_))
 >     kt)
 >    ((_ v () kt kf) (if (null? v) kt kf))
 >    ((_ v (quote lit) kt kf) (if (equal? v (quote lit)) kt kf))
 >    ((_ v (unquote var) kt kf) (let ((var v)) kt))
 >    ((_ v (x . y) kt kf)
 >     (if (pair? v)
 >       (let ((vx (car v)) (vy (cdr v)))
 >         (ppat vx x (ppat vy y kt kf) kf))
 >       kf))
 >    ((_ v lit kt kf) (if (equal? v (quote lit)) kt kf))))
 >
 > There will be an error "syntax-rules: bad syntax in: (syntax-rules (uscore
 > quote unquote) ((_ v uscore kt kf) (and (identifier? (syntax uscore))
 > (free-identifier=? (syntax uscore) (syntax _))) kt) ((_ v () kt kf) (if
 > (null? v) kt kf)) ((_ v (quote lit) kt kf) (if (equal? v (quote lit)) kt
 > kf)) ((_ v (unquote var) kt kf) (let ((var v)) kt)) ((_ v (x . y) kt kf)
 > (if (pair? v) (let ((vx (car v)) (vy (cdr v))) (ppat vx x (ppat vy y kt kf)
 > kf)) kf)) ((_ v lit kt kf) (if (equal? v (quote lit)) kt kf)))
 > > "
 >
 > Ignore that for now.
 >
 > Now, go and change the #lang line by going to the end of the lang line and
 > pressing backspace. One will get a popup with the error:
 >
 > exception in colorer thread: #(struct:exn:fail:contract
 > "open-input-text-editor: start index outside the range [0,1095]: 1096"
 > #<continuation-mark-set>)
 >
 >  === context ===
 > /usr/local/racket/lib/racket/collects/mred/private/snipfile.rkt:24:4:
 > core14
 > /usr/local/racket/lib/racket/collects/framework/private/color.rkt:452:23
 > /usr/local/racket/lib/racket/collects/racket/private/map.rkt:45:11:
 > for-each
 >
 >
 > The popup never disappears even if "ok" is pressed.
 >
 > *** Environment:
 > unix "Linux rkrishnanT510 3.1.0-1-amd64 #1 SMP Mon Nov 14 08:02:25 UTC
 > 2011 x86_64 GNU/Linux" (x86_64-linux/3m) (get-display-depth) = 32
 > Human Language: english
 > (current-memory-use) 221307624
 > Links: (links) = ("geiser" "gcstats" "raco-git"); (links #:user? #f) = ();
 > (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()
 >
 >
 > Collections:
 > ("/home/rkrishnan/.racket/5.2.0.4/collects"
 >  (non-existent-path))
 > ("/usr/local/racket/lib/racket/collects"
 >  ("rnrs" "raco" "lang" "scribblings" "repo-time-stamp" "typed-scheme"
 > "test-engine" "texpict" "help" "guibuilder" "picturing-programs"
 > "syntax-color" "games" "defaults" "htdp" "sgl" "r6rs" "honu" "icons"
 > "tests" "mzcom" "at-exp" "frtime" "graphics" "info-domain" "rackunit"
 > "sirmail" "racket" "tex2page" "readline" "lazy" "stepper" "data" "2htdp"
 > "datalog" "racklog" "parser-tools" "combinator-parser" "drracket" "slatex"
 > "gui-debugger" "dynext" "redex" "launcher" "reader" "errortrace" "mysterx"
 > "test-box-recovery" "scribble" "mred" "xrepl" "file" "swindle" "config"
 > "handin-server" "typed" "meta" "unstable" "mzlib" "eopl" "scriblib" "s-exp"
 > "db" "openssl" "xml" "plai" "syntax" "profile" "embedded-gui" "compiler"
 > "trace" "hierlist" "typed-racket" "html" "wxme" "framework" "schemeunit"
 > "preprocessor" "r5rs" "string-constants" "algol60" "web-server" "plot"
 > "srfi" "mzscheme" "drscheme" "net" "mrlib" "teachpack" "ffi" "setup"
 > "scheme" "macro-debugger" "deinprogramm" "make" "browser" !
 >  "version" "slideshow" "planet" "handin-client"))
 >
 > Computer Language: (("Determine language from source") (#(#t print
 > mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t))
 >
 >
 
 --f46d040716c7b1b0f804b2d3d74b
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 Thank you for the report.<div><br></div><div>Does the popup window appear r=
 eliably on your machine, when following the instructions below?</div><div><=
 br></div><div>Thanks,</div><div>Robby<br><br>On Monday, November 28, 2011, =
   wrote:<br>
 <blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1p=
 x #ccc solid;padding-left:1ex">A new problem report is waiting at<br>
  =C2=A0<a href=3D"http://bugs.racket-lang.org/query/?cmd=3Dview&amp;pr=3D12=
 399" target=3D"_blank">http://bugs.racket-lang.org/query/?cmd=3Dview&amp;pr=
 =3D12399</a><br>
 <br>
 Reported by Ramakrishnan Muthukrishnan for release: 5.2.0.4--2010-12-09(-/f=
 )<br>
 <br>
 *** Description:<br>
 When there is an error while running a program, if one changes the #lang li=
 ne, one get a popup which appear again and again even if &quot;ok&quot; is =
 pressed.<br>
 <br>
 Thanks<br>
 Ramakrishnan<br>
 <br>
 *** How to repeat:<br>
 Paste the following code into definition window and press F5.<br>
 <br>
 #lang racket<br>
 ;;; Code written by Oleg Kiselyov<br>
 ;; (<a href=3D"http://pobox.com/~oleg/ftp/" target=3D"_blank">http://pobox.=
 com/~oleg/ftp/</a>)<br>
 ;;;<br>
 ;;; Taken from leanTAP.scm<br>
 ;;; <a href=3D"http://kanren.cvs.sourceforge.net/kanren/kanren/mini/leanTAP=
 .scm?view=3Dlog" target=3D"_blank">http://kanren.cvs.sourceforge.net/kanren=
 /kanren/mini/leanTAP.scm?view=3Dlog</a><br>
 <br>
 ; A simple linear pattern matcher<br>
 ; It is efficient (generates code at macro-expansion time) and simple:<br>
 ; it should work on any R5RS Scheme system.<br>
 <br>
 ; (pmatch exp &lt;clause&gt; ...[&lt;else-clause&gt;])<br>
 ; &lt;clause&gt; ::=3D (&lt;pattern&gt; &lt;guard&gt; exp ...)<br>
 ; &lt;else-clause&gt; ::=3D (else exp ...)<br>
 ; &lt;guard&gt; ::=3D boolean exp | ()<br>
 ; &lt;pattern&gt; :: =3D<br>
 ; =C2=A0 =C2=A0 =C2=A0 =C2=A0,var =C2=A0-- matches always and binds the var=
 <br>
 ; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 pattern must be l=
 inear! No check is done<br>
 ; =C2=A0 =C2=A0 =C2=A0 =C2=A0 _ =C2=A0 =C2=A0-- matches always<br>
 ; =C2=A0 =C2=A0 =C2=A0 =C2=A0&#39;exp =C2=A0-- comparison with exp (using e=
 qual?)<br>
 ; =C2=A0 =C2=A0 =C2=A0 =C2=A0exp =C2=A0 -- comparison with exp (using equal=
 ?)<br>
 ; =C2=A0 =C2=A0 =C2=A0 =C2=A0(&lt;pattern1&gt; &lt;pattern2&gt; ...) -- mat=
 ches the list of patterns<br>
 ; =C2=A0 =C2=A0 =C2=A0 =C2=A0(&lt;pattern1&gt; . &lt;pattern2&gt;) =C2=A0--=
  ditto<br>
 ; =C2=A0 =C2=A0 =C2=A0 =C2=A0() =C2=A0 =C2=A0-- matches the empty list<br>
 <br>
 ; Modified by Adam C. Foltzer for R6RS compatibility<br>
 <br>
 (define-syntax pmatch<br>
  =C2=A0(syntax-rules (else guard)<br>
  =C2=A0 =C2=A0((_ (rator rand ...) cs ...)<br>
  =C2=A0 =C2=A0 (let ((v (rator rand ...)))<br>
  =C2=A0 =C2=A0 =C2=A0 (pmatch v cs ...)))<br>
  =C2=A0 =C2=A0((_ v) (error &#39;pmatch &quot;failed: ~s&quot; v))<br>
  =C2=A0 =C2=A0((_ v (else e0 e ...)) (begin e0 e ...))<br>
  =C2=A0 =C2=A0((_ v (pat (guard g ...) e0 e ...) cs ...)<br>
  =C2=A0 =C2=A0 (let ((fk (lambda () (pmatch v cs ...))))<br>
  =C2=A0 =C2=A0 =C2=A0 (ppat v pat (if (and g ...) (begin e0 e ...) (fk)) (f=
 k))))<br>
  =C2=A0 =C2=A0((_ v (pat e0 e ...) cs ...)<br>
  =C2=A0 =C2=A0 (let ((fk (lambda () (pmatch v cs ...))))<br>
  =C2=A0 =C2=A0 =C2=A0 (ppat v pat (begin e0 e ...) (fk))))))<br>
 <br>
 (define-syntax ppat<br>
  =C2=A0(syntax-rules (uscore quote unquote)<br>
  =C2=A0 =C2=A0((_ v uscore kt kf)<br>
  =C2=A0 =C2=A0 ; _ can&#39;t be listed in literals list in R6RS Scheme<br>
  =C2=A0 =C2=A0 (and (identifier? #&#39;uscore) (free-identifier=3D? #&#39;u=
 score #&#39;_))<br>
  =C2=A0 =C2=A0 kt)<br>
  =C2=A0 =C2=A0((_ v () kt kf) (if (null? v) kt kf))<br>
  =C2=A0 =C2=A0((_ v (quote lit) kt kf) (if (equal? v (quote lit)) kt kf))<b=
 r>
  =C2=A0 =C2=A0((_ v (unquote var) kt kf) (let ((var v)) kt))<br>
  =C2=A0 =C2=A0((_ v (x . y) kt kf)<br>
  =C2=A0 =C2=A0 (if (pair? v)<br>
  =C2=A0 =C2=A0 =C2=A0 (let ((vx (car v)) (vy (cdr v)))<br>
  =C2=A0 =C2=A0 =C2=A0 =C2=A0 (ppat vx x (ppat vy y kt kf) kf))<br>
  =C2=A0 =C2=A0 =C2=A0 kf))<br>
  =C2=A0 =C2=A0((_ v lit kt kf) (if (equal? v (quote lit)) kt kf))))<br>
 <br>
 There will be an error &quot;syntax-rules: bad syntax in: (syntax-rules (us=
 core quote unquote) ((_ v uscore kt kf) (and (identifier? (syntax uscore)) =
 (free-identifier=3D? (syntax uscore) (syntax _))) kt) ((_ v () kt kf) (if (=
 null? v) kt kf)) ((_ v (quote lit) kt kf) (if (equal? v (quote lit)) kt kf)=
 ) ((_ v (unquote var) kt kf) (let ((var v)) kt)) ((_ v (x . y) kt kf) (if (=
 pair? v) (let ((vx (car v)) (vy (cdr v))) (ppat vx x (ppat vy y kt kf) kf))=
  kf)) ((_ v lit kt kf) (if (equal? v (quote lit)) kt kf)))<br>
 
 &gt; &quot;<br>
 <br>
 Ignore that for now.<br>
 <br>
 Now, go and change the #lang line by going to the end of the lang line and =
 pressing backspace. One will get a popup with the error:<br>
 <br>
 exception in colorer thread: #(struct:exn:fail:contract &quot;open-input-te=
 xt-editor: start index outside the range [0,1095]: 1096&quot; #&lt;continua=
 tion-mark-set&gt;)<br>
 <br>
 =C2=A0=3D=3D=3D context =3D=3D=3D<br>
 /usr/local/racket/lib/racket/collects/mred/private/snipfile.rkt:24:4: core1=
 4<br>
 /usr/local/racket/lib/racket/collects/framework/private/color.rkt:452:23<br=
 >
 /usr/local/racket/lib/racket/collects/racket/private/map.rkt:45:11: for-eac=
 h<br>
 <br>
 <br>
 The popup never disappears even if &quot;ok&quot; is pressed.<br>
 <br>
 *** Environment:<br>
 unix &quot;Linux rkrishnanT510 3.1.0-1-amd64 #1 SMP Mon Nov 14 08:02:25 UTC=
  2011 x86_64 GNU/Linux&quot; (x86_64-linux/3m) (get-display-depth) =3D 32<b=
 r>
 Human Language: english<br>
 (current-memory-use) 221307624<br>
 Links: (links) =3D (&quot;geiser&quot; &quot;gcstats&quot; &quot;raco-git&q=
 uot;); (links #:user? #f) =3D (); (links #:root? #t) =3D (); (links #:user?=
  #f #:root? #t) =3D ()<br>
 <br>
 <br>
 Collections:<br>
 (&quot;/home/rkrishnan/.racket/<a href=3D"http://5.2.0.4/collects" target=
 =3D"_blank">5.2.0.4/collects</a>&quot;<br>
 =C2=A0(non-existent-path))<br>
 (&quot;/usr/local/racket/lib/racket/collects&quot;<br>
 =C2=A0(&quot;rnrs&quot; &quot;raco&quot; &quot;lang&quot; &quot;scribblings=
 &quot; &quot;repo-time-stamp&quot; &quot;typed-scheme&quot; &quot;test-engi=
 ne&quot; &quot;texpict&quot; &quot;help&quot; &quot;guibuilder&quot; &quot;=
 picturing-programs&quot; &quot;syntax-color&quot; &quot;games&quot; &quot;d=
 efaults&quot; &quot;htdp&quot; &quot;sgl&quot; &quot;r6rs&quot; &quot;honu&=
 quot; &quot;icons&quot; &quot;tests&quot; &quot;mzcom&quot; &quot;at-exp&qu=
 ot; &quot;frtime&quot; &quot;graphics&quot; &quot;info-domain&quot; &quot;r=
 ackunit&quot; &quot;sirmail&quot; &quot;racket&quot; &quot;tex2page&quot; &=
 quot;readline&quot; &quot;lazy&quot; &quot;stepper&quot; &quot;data&quot; &=
 quot;2htdp&quot; &quot;datalog&quot; &quot;racklog&quot; &quot;parser-tools=
 &quot; &quot;combinator-parser&quot; &quot;drracket&quot; &quot;slatex&quot=
 ; &quot;gui-debugger&quot; &quot;dynext&quot; &quot;redex&quot; &quot;launc=
 her&quot; &quot;reader&quot; &quot;errortrace&quot; &quot;mysterx&quot; &qu=
 ot;test-box-recovery&quot; &quot;scribble&quot; &quot;mred&quot; &quot;xrep=
 l&quot; &quot;file&quot; &quot;swindle&quot; &quot;config&quot; &quot;handi=
 n-server&quot; &quot;typed&quot; &quot;meta&quot; &quot;unstable&quot; &quo=
 t;mzlib&quot; &quot;eopl&quot; &quot;scriblib&quot; &quot;s-exp&quot; &quot=
 ;db&quot; &quot;openssl&quot; &quot;xml&quot; &quot;plai&quot; &quot;syntax=
 &quot; &quot;profile&quot; &quot;embedded-gui&quot; &quot;compiler&quot; &q=
 uot;trace&quot; &quot;hierlist&quot; &quot;typed-racket&quot; &quot;html&qu=
 ot; &quot;wxme&quot; &quot;framework&quot; &quot;schemeunit&quot; &quot;pre=
 processor&quot; &quot;r5rs&quot; &quot;string-constants&quot; &quot;algol60=
 &quot; &quot;web-server&quot; &quot;plot&quot; &quot;srfi&quot; &quot;mzsch=
 eme&quot; &quot;drscheme&quot; &quot;net&quot; &quot;mrlib&quot; &quot;teac=
 hpack&quot; &quot;ffi&quot; &quot;setup&quot; &quot;scheme&quot; &quot;macr=
 o-debugger&quot; &quot;deinprogramm&quot; &quot;make&quot; &quot;browser&qu=
 ot; !<br>
 
 =C2=A0&quot;version&quot; &quot;slideshow&quot; &quot;planet&quot; &quot;ha=
 ndin-client&quot;))<br>
 <br>
 Computer Language: ((&quot;Determine language from source&quot;) (#(#t prin=
 t mixed-fraction-e #f #t debug) (default) #() &quot;#lang racket\n&quot; #t=
  #t))<br>
 <br>
 </blockquote></div>
 
 --f46d040716c7b1b0f804b2d3d74b--
State changed from "open" to "closed" by robby@racket-lang.org at Mon, 28 Nov 2011 22:16:49 -0500
Reason>>> A commit by robby@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/11994bd4f8
From: Robby Findler <robby@eecs.northwestern.edu>
To: "vu3rdd@gmail.com" <vu3rdd@gmail.com>,
        "bugs@racket-lang.org" <bugs@racket-lang.org>
Cc: "nobody@racket-lang.org" <nobody@racket-lang.org>,
        "bug-notification@racket-lang.org" <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/12399: Annoying popup while changing the #lang line
Date: Mon, 28 Nov 2011 21:17:42 -0600

 >> A new problem report is waiting at
 >>  http://bugs.racket-lang.org/query/?cmd=view&pr=12399
 
 On Mon, Nov 28, 2011 at 5:27 PM, Robby Findler
 <robby@eecs.northwestern.edu> wrote:
 > Thank you for the report.
 > Does the popup window appear reliably on your machine, when following the
 > instructions below?
 
 Nevermind. I think I fixed it.
 
 Thanks,
 Robby
From: Ramakrishnan Muthukrishnan <vu3rdd@gmail.com>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: "bugs@racket-lang.org" <bugs@racket-lang.org>
Subject: Re: [racket-bug] all/12399: Annoying popup while changing the #lang line
Date: Tue, 29 Nov 2011 10:52:28 +0530

 On Tue, Nov 29, 2011 at 8:47 AM, Robby Findler
 <robby@eecs.northwestern.edu> wrote:
 >>> A new problem report is waiting at
 >>>  http://bugs.racket-lang.org/query/?cmd=view&pr=12399
 >
 > On Mon, Nov 28, 2011 at 5:27 PM, Robby Findler
 > <robby@eecs.northwestern.edu> wrote:
 >> Thank you for the report.
 >> Does the popup window appear reliably on your machine, when following the
 >> instructions below?
 >
 > Nevermind. I think I fixed it.
 
 Oh, thanks. Sorry, I see your message only now (morning here in
 India). Yes, I could repeat the issue every time. I will checkout the
 latest git and build it.
 
 thanks.
 -- 
   Ramakrishnan
 
From: Ramakrishnan Muthukrishnan <vu3rdd@gmail.com>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: "bugs@racket-lang.org" <bugs@racket-lang.org>
Subject: Re: [racket-bug] all/12399: Annoying popup while changing the #lang line
Date: Tue, 29 Nov 2011 18:44:53 +0530

 On Tue, Nov 29, 2011 at 10:52 AM, Ramakrishnan Muthukrishnan
 <vu3rdd@gmail.com> wrote:
 > On Tue, Nov 29, 2011 at 8:47 AM, Robby Findler
 > <robby@eecs.northwestern.edu> wrote:
 >>>> A new problem report is waiting at
 >>>>  http://bugs.racket-lang.org/query/?cmd=view&pr=12399
 >>
 >> On Mon, Nov 28, 2011 at 5:27 PM, Robby Findler
 >> <robby@eecs.northwestern.edu> wrote:
 >>> Thank you for the report.
 >>> Does the popup window appear reliably on your machine, when following the
 >>> instructions below?
 >>
 >> Nevermind. I think I fixed it.
 >
 > Oh, thanks. Sorry, I see your message only now (morning here in
 > India). Yes, I could repeat the issue every time. I will checkout the
 > latest git and build it.
 
 Thanks, Robby. I confirm that I don't see this problem anymore with
 the latest git source.
 
 Thanks!
 -- 
   Ramakrishnan
 
