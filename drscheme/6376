From nobody@champlain.ccs.neu.edu  Wed Jul 23 16:22:06 2003
Received: (from nobody@localhost)
	by champlain.ccs.neu.edu (8.9.3/8.8.7) id QAA16943
	for bugs@plt-scheme.org; Wed, 23 Jul 2003 16:22:06 -0400
Message-Id: <200307232022.QAA16943@champlain.ccs.neu.edu>
Date: Wed, 23 Jul 2003 16:22:06 -0400
From: vargasje@engr.sc.edu
To: bugs@plt-scheme.org
Subject: Your Print-Eval Loop is not right

>Number:         6376
>Category:       drscheme
>Synopsis:       Your Print-Eval Loop is not right
>Class:          sw-bug
>Responsible:    matthias
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Wed Jul 23 16:25:01 -0400 2003
>Closed-Date:    Wed Jul 23 16:30:07 -0400 2003
>Last-Modified:  Mon May 05 17:21:18 -0400 2008
>Originator:     Juan E Vargas
>Organization:
plt
>Submitter-Id:   unknown
>Release:        Windows
>Environment:
unknown-platform
>Description:
Dear Colleagues:

Although I have used and taught scheme for years, only until recently I came across with DrScheme. My first reaction is that the idea is excellent, but I think that you should adhere to the way in which scheme is actually taught.

When you enter something like:

(cons (list 1 2) (list 3 4))

The print-eval-loop should print

((1 2) 3 4)

However your implemtation writes, instead:

(cons (cons 1 (cons 2 empty)) (cons 3 (cons 4 empty)))

although the two s-expressions are technically equivalent, this is not the way to teach scheme; so unless you use the correct printeval-loop, I dfo'nt think I will use your stuff.



>How-To-Repeat:
Your Print-Eval Loop is not right
>Fix:
>Release-Note:
>Audit-Trail:
Responsible-Changed-From-To: eli->matthias
Responsible-Changed-By: matthias
Responsible-Changed-When: Wed Jul 23 16:30:07 2003
Responsible-Changed-Why:
    .
State-Changed-From-To: open->closed
State-Changed-By: matthias
State-Changed-When: Wed Jul 23 16:30:07 2003
State-Changed-Why:
    response sent out 

From: Robby Findler <robby@cs.uchicago.edu>
To: vargasje@engr.sc.edu
Cc: bugs@plt-scheme.org
Subject: Re: all/6376: Your Print-Eval Loop is not right
Date: Wed, 23 Jul 2003 15:33:38 -0500

 Please set your language level to "full scheme" if you want that
 behavior.
 
 Robby

From: Matthias Felleisen <matthias@ccs.neu.edu>
To: vargasje@engr.sc.edu
Cc: bugs@plt-scheme.org
Subject: Re: all/6376: Your Print-Eval Loop is not right
Date: Wed, 23 Jul 2003 16:38:29 -0400

 Dear Colleague -- 
 
 DrScheme comes with a Help Desk, a tour, and a paper that carefully
 explains how (and why) we have organized the environment. Two differences
 matter: 
 
 1. One important innovation is the idea of teaching subsets that
 carefully approximate Scheme in the order everyone in the world
 introduces Scheme features. We have found in years of lab observations
 that the feedback from teaching languagess is far superior to the
 conventional feedback from old-fashioned Scheme non-environments. 
 
 2. A second innovation is the idea of a constructor based printer.
 Instead of confronting poor beginners with an incomprehensible output
 syntax for lists (which looks like application as Scheme critics have
 publicly pointed out in papers since 1984) we add a printer that shows
 how the data was constructed. In 20 years of teaching, we have found
 this method far superior to teaching Scheme's special i/o synntax. 
 Students actually understand why functional/recursive programming is
 the *right* way to construct programs in Scheme, ML, or Java. 
 
 Naturally, the R5RS language level of or the full Scheme language or
 the PLT languages match the report
 
 We have spelled out the Scheme curriculum based on our experiences 
 in a book called How to Design Programs. It's also available on-line. 
 The book is used in high schools and colleges up to junior-level 
 courses. Take a look please. 
 
 With kind regards -- Matthias v 2.0 
 
 
 
 
 At Wed, 23 Jul 2003 16:22:06 -0400, vargasje@engr.sc.edu wrote:
 > You may claim or edit this problem report at
 > 
 > https://internal.plt-scheme.org/cgis-bin/gnatsweb.pl?cmd=edit&pr=6376&database=plt
 > 
 > >Number:         6376
 > >Category:       all
 > >Synopsis:       Your Print-Eval Loop is not right
 > >Confidential:   no
 > >Severity:       serious
 > >Priority:       medium
 > >Responsible:    eli
 > >State:          open
 > >Class:          sw-bug
 > >Submitter-Id:   unknown
 > >Arrival-Date:   Wed Jul 23 16:25:01 EDT 2003
 > >Closed-Date:
 > >Last-Modified:
 > >Originator:     Juan E Vargas
 > >Release:        Windows
 > >Organization:
 > plt
 > >Environment:
 > unknown-platform
 > >Description:
 > Dear Colleagues:
 > 
 > Although I have used and taught scheme for years, only until recently I came across with DrScheme. My 
 > first reaction is that the idea is excellent, but I think that you should adhere to the way in which 
 > scheme is actually taught.
 > 
 > When you enter something like:
 > 
 > (cons (list 1 2) (list 3 4))
 > 
 > The print-eval-loop should print
 > 
 > ((1 2) 3 4)
 > 
 > However your implemtation writes, instead:
 > 
 > (cons (cons 1 (cons 2 empty)) (cons 3 (cons 4 empty)))
 > 
 > although the two s-expressions are technically equivalent, this is not the way to teach scheme; so 
 > unless you use the correct printeval-loop, I dfo'nt think I will use your stuff.
 > 
 > 
 > 
 > 
 > >How-To-Repeat:
 > Your Print-Eval Loop is not right
 > >Fix:
 > >Release-Note:
 > >Audit-Trail:
 > >Unformatted:
 
>Unformatted:
