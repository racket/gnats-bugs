From matthias@ccs.neu.edu  Tue Jul 15 09:42:37 2003
Received: from localhost (IDENT:root@localhost.localdomain [127.0.0.1])
	by champlain.ccs.neu.edu (8.9.3/8.8.7) with ESMTP id JAA02498
	for <bugs>; Tue, 15 Jul 2003 09:42:36 -0400
Message-Id: <200307151342.JAA02498@champlain.ccs.neu.edu>
Date: Tue, 15 Jul 2003 09:42:36 -0400
From: matthias <matthias@ccs.neu.edu>
To: bugs@plt-scheme.org
Subject: alpha renaming fails (gracefully) for non-obvious reason

>Number:         6364
>Category:       drscheme
>Synopsis:       alpha renaming fails (gracefully) for non-obvious reason
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Tue Jul 15 09:45:01 -0400 2003
>Closed-Date:    
>Last-Modified:  Sat Mar 12 08:09:29 -0500 2005
>Originator:     matthias
>Organization:
titan
>Submitter-Id:   unknown
>Release:        204.7-cvs3jul2003
>Environment:
macosx "Darwin MATTHIAS-FELLEISENs-Computer.local. 6.6 Darwin Kernel Version 6.6: Thu May  1 21:48:54 PDT 2003; root:xnu/xnu-344.34.obj~1/RELEASE_PPC  Power Macintosh powerpc" (ppc-macosx) (get-display-depth) = 32
Docs Installed:
("advanced" "beginning" "beginning-abbr" "drscheme" "framework" "help" "insidemz" "intermediate" "intermediate-lambda" "misclib" "mred" "mzc" "mzlib" "mzscheme" "r5rs" "t-y-scheme" "tex2page" "tools" "tour")
Collections: 
(("/Users/matthias/plt/collects/mzlib/../../MrEd.app/Contents/MacOS/../../../collects" ("afm" "algol60" "browser" "compiler" "CVS" "cvs-time-stamp" "defaults" "doc" "dromedary" "drscheme" "dynext" "eopl" "errortrace" "finish-install" "framework" "games" "graphics" "guibuilder" "help" "hierlist" "htdp" "html" "icons" "lang" "launcher" "make" "mrdemo" "mred" "mrflow" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "profj" "readline" "reduction-semantics" "setup" "sgl" "sirmail" "slatex" "slibinit" "srfi" "srpersist" "stepper" "string-constants" "syntax" "test-suite" "tests" "tex2page" "texpict" "typeset" "version" "waterworld" "web-server" "xelda" "xml")))
 
Human Language: english
 
Teachpack filenames: ("/Users/matthias/plt/teachpack/htdp/draw.ss")
Computer Language: (("Teaching Languages" "How to Design Programs" "Intermediate Student with lambda") #6(#t constructor repeating-decimal #f #t none))
>Description:
check syntax the following function, try to rename i to 
platform. this fails, presumably because platform is defined
somewhere. not true.

(define-struct platform (posn shot))

(define (fly-until-down ufo i)
  (cond
    [(below-ground? ufo) (not (landed-on-platform? i ufo))]
    [(hit-shot? i ufo) (not (draw-scene ufo i))]
    [else
     (and (draw-scene ufo i)
          (sleep-for-a-while .05)
          (clear-scene ufo i)
          (fly-until-down (move-ufo ufo) (process-event i (get-key-event))))]))
>How-To-Repeat:
>Fix:
>Release-Note:
>Audit-Trail:
From: Robby Findler <robby@cs.uchicago.edu>
To: matthias <matthias@ccs.neu.edu>
Cc: bugs@plt-scheme.org, mflatt@cs.utah.edu
Subject: Re: all/6364: alpha renaming fails (gracefully) for non-obvious reason
Date: Tue, 15 Jul 2003 08:49:16 -0500

 Yes, platform *is* defined!!
 
 Robby

From: Robby Findler <robby@cs.uchicago.edu>
To: matthias <matthias@ccs.neu.edu>
Cc: bugs@plt-scheme.org, mflatt@cs.utah.edu
Subject: Re: all/6364: alpha renaming fails (gracefully) for non-obvious reason
Date: Tue, 15 Jul 2003 08:50:41 -0500

 proof:
 
 [taitung] ~/cvs/robby/papers/contract-denotation% mzscheme
 Welcome to MzScheme version 204.8, Copyright (c) 1995-2003 PLT
 loading .mzschemerc...
 > (define-struct platform (posn shot))
 > platform
 STDIN::37: platform: illegal use of syntax in: platform
 > ^D
 
 
 :)

From: Robby Findler <robby@cs.uchicago.edu>
To: matthias <matthias@ccs.neu.edu>
Cc: bugs@plt-scheme.org, mflatt@cs.utah.edu
Subject: Re: all/6364: alpha renaming fails (gracefully) for non-obvious reason
Date: Tue, 15 Jul 2003 08:52:46 -0500

 One final thought: check syntax should be smart enough to detect that
 platform isn't actually used in the scope of i and so it is okay to
 rename i to platform. I'm not sure if mz provides me enough tools to do
 that (I'll have to look into it, later) -- I seem to recall thinking
 that it didn't, but then finding out I was wrong.
 
 Robby

From: Matthew Flatt <mflatt@cs.utah.edu>
To: Robby Findler <robby@cs.uchicago.edu>
Cc: matthias <matthias@ccs.neu.edu>, bugs@plt-scheme.org
Subject: Re: all/6364: alpha renaming fails (gracefully) for non-obvious reason
Date: Tue, 15 Jul 2003 08:06:29 -0600

 At Tue, 15 Jul 2003 08:52:46 -0500, Robby Findler wrote:
 > One final thought: check syntax should be smart enough to detect that
 > platform isn't actually used in the scope of i and so it is okay to
 > rename i to platform.
 
 Note that most any use of `quote-syntax' makes the specific binding
 relevant, even if `platform' isn't referenced directly.
 
 Matthew
 

From: Robby Findler <robby@cs.uchicago.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: matthias <matthias@ccs.neu.edu>, bugs@plt-scheme.org
Subject: Re: all/6364: alpha renaming fails (gracefully) for non-obvious reason
Date: Tue, 15 Jul 2003 09:15:40 -0500

 At Tue, 15 Jul 2003 08:06:29 -0600, Matthew Flatt wrote:
 > At Tue, 15 Jul 2003 08:52:46 -0500, Robby Findler wrote:
 > > One final thought: check syntax should be smart enough to detect that
 > > platform isn't actually used in the scope of i and so it is okay to
 > > rename i to platform.
 > 
 > Note that most any use of `quote-syntax' makes the specific binding
 > relevant, even if `platform' isn't referenced directly.
 
 I don't follow. Does this mean that it isn't possible for check syntax
 to figure out that platform isn't used, in the general case?
 
 Robby

From: Matthew Flatt <mflatt@cs.utah.edu>
To: Robby Findler <robby@cs.uchicago.edu>
Cc: matthias <matthias@ccs.neu.edu>, bugs@plt-scheme.org
Subject: Re: all/6364: alpha renaming fails (gracefully) for non-obvious reason
Date: Tue, 15 Jul 2003 08:16:40 -0600

 At Tue, 15 Jul 2003 09:15:40 -0500, Robby Findler wrote:
 > At Tue, 15 Jul 2003 08:06:29 -0600, Matthew Flatt wrote:
 > > At Tue, 15 Jul 2003 08:52:46 -0500, Robby Findler wrote:
 > > > One final thought: check syntax should be smart enough to detect that
 > > > platform isn't actually used in the scope of i and so it is okay to
 > > > rename i to platform.
 > > 
 > > Note that most any use of `quote-syntax' makes the specific binding
 > > relevant, even if `platform' isn't referenced directly.
 > 
 > I don't follow. Does this mean that it isn't possible for check syntax
 > to figure out that platform isn't used, in the general case?
 
 No, because`quote-syntax' isn't generally used. If there's a use of
 `quote-syntax' in the scope of `i', then the name of the binding
 matters.
 
 Otherwise, it seems straightforward to check whether there's a use of
 `platform' in the scope of the `i' binding. Maybe I'm missing
 something.
 
 Matthew
 

From: Matthew Flatt <mflatt@cs.utah.edu>
To: Robby Findler <robby@cs.uchicago.edu>
Cc: matthias <matthias@ccs.neu.edu>, bugs@plt-scheme.org
Subject: Re: all/6364: alpha renaming fails (gracefully) for non-obvious reason
Date: Tue, 15 Jul 2003 08:18:50 -0600

 Oh, I'm forgetting that `platform' may be a syntax binding that doesn't
 appear in the output.
 
 Indeed, a name bound by `define-struct' is exactly the problem case,
 because no trace of the identifier gets left in the expansion (if the
 identifier is used by , say, `match' or a subtyping `defin-struct').
 
 Matthew
 

From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: Robby Findler <robby@cs.uchicago.edu>, bugs@plt-scheme.org
Subject: Re: all/6364: alpha renaming fails (gracefully) for non-obvious reason
Date: Tue, 15 Jul 2003 10:52:37 -0400

 I don't understand this. What is the problem with looking for an
 occurrence of 'platform' in the scope of 'i'? 
 
 If this is not possible, something is seriously wrong with the 
 macro system. The purpose of the macro system is to make scope 
 transparent (orthogonal, whatever) to macros.
 
 -- Matthias
 

From: Robby Findler <robby@cs.uchicago.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: Matthew Flatt <mflatt@cs.utah.edu>, bugs@plt-scheme.org
Subject: Re: all/6364: alpha renaming fails (gracefully) for non-obvious reason
Date: Tue, 15 Jul 2003 09:56:24 -0500

 I think that works for ordinary variables, but not macro definitions.
 
 Robby
 
 At Tue, 15 Jul 2003 10:52:37 -0400, Matthias Felleisen wrote:
 > 
 > I don't understand this. What is the problem with looking for an
 > occurrence of 'platform' in the scope of 'i'? 
 > 
 > If this is not possible, something is seriously wrong with the 
 > macro system. The purpose of the macro system is to make scope 
 > transparent (orthogonal, whatever) to macros.
 > 
 > -- Matthias
 > 
 > 
 

From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Robby Findler <robby@cs.uchicago.edu>
Cc: Matthew Flatt <mflatt@cs.utah.edu>, bugs@plt-scheme.org
Subject: Re: all/6364: alpha renaming fails (gracefully) for non-obvious reason
Date: Tue, 15 Jul 2003 16:29:23 -0400

 So, can we rename ordinary variables in our world according to ordinary
 rules? -- Matthias
 
 
 
 At Tue, 15 Jul 2003 09:56:24 -0500, Robby Findler wrote:
 > I think that works for ordinary variables, but not macro definitions.
 > 
 > Robby
 > 
 > At Tue, 15 Jul 2003 10:52:37 -0400, Matthias Felleisen wrote:
 > > 
 > > I don't understand this. What is the problem with looking for an
 > > occurrence of 'platform' in the scope of 'i'? 
 > > 
 > > If this is not possible, something is seriously wrong with the 
 > > macro system. The purpose of the macro system is to make scope 
 > > transparent (orthogonal, whatever) to macros.
 > > 
 > > -- Matthias
 > > 
 > > 
 

From: Robby Findler <robby@cs.uchicago.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: Matthew Flatt <mflatt@cs.utah.edu>, bugs@plt-scheme.org
Subject: Re: all/6364: alpha renaming fails (gracefully) for non-obvious reason
Date: Tue, 15 Jul 2003 15:41:40 -0500

 In principle, yes. I don't think that check syntax is properly
 implemented to allow it, tho.
 
 Check syntax won't let you rename the y in this program:
 
   (lambda (x) (lambda (y) 1))
 
 to x.
 
 I think that should be doable, but I haven't looked into it. I don't
 see why the general case (without quote-syntax's around) should fail.
 
 Actually, hang on. Can I rename this one safely:
 
   (lambda (x) (lambda (y) (datum->syntax-object #'here 'x)))
 
 to this one:
 
   (lambda (x) (lambda (x) (datum->syntax-object #'here 'x)))
 
 ?
 
 Robby
 
 At Tue, 15 Jul 2003 16:29:23 -0400, Matthias Felleisen wrote:
 > 
 > So, can we rename ordinary variables in our world according to ordinary
 > rules? -- Matthias
 > 
 > 
 > 
 > At Tue, 15 Jul 2003 09:56:24 -0500, Robby Findler wrote:
 > > I think that works for ordinary variables, but not macro definitions.
 > > 
 > > Robby
 > > 
 > > At Tue, 15 Jul 2003 10:52:37 -0400, Matthias Felleisen wrote:
 > > > 
 > > > I don't understand this. What is the problem with looking for an
 > > > occurrence of 'platform' in the scope of 'i'? 
 > > > 
 > > > If this is not possible, something is seriously wrong with the 
 > > > macro system. The purpose of the macro system is to make scope 
 > > > transparent (orthogonal, whatever) to macros.
 > > > 
 > > > -- Matthias
 > > > 
 > > > 
 > 
 > 
 
Responsible-Changed-From-To: eli->nobody
Responsible-Changed-By: gnats@champlain.ccs.neu.edu
Responsible-Changed-When: Fri, 26 Mar 2004 04:42:41 -0500
Responsible-Changed-Why:
Unclaimed


Responsible changed from "nobody" to "robby" by eli at Thu, 01 Apr 2004 21:25:29 -0500
Reason: DrScheme renaming

View:
  http://bugs.plt-scheme.org/query/?cmd=view+audit-trail&pr=6364
Responsible changed from "robby" to "mflatt" by robby at Sat, 12 Mar 2005 08:09:29 -0500
Reason>>> I don't think this is about check syntax; rather it's about the syntax system.

>Unformatted:
