From ethan.aubin@pobox.com  Thu Nov 27 23:18:19 2003
Received: from localhost (IDENT:root@localhost.localdomain [127.0.0.1])
	by champlain.ccs.neu.edu (8.9.3/8.9.3) with ESMTP id XAA01986
	for <bugs>; Thu, 27 Nov 2003 23:18:18 -0500
Message-Id: <200311280418.XAA01986@champlain.ccs.neu.edu>
Date: Thu, 27 Nov 2003 23:18:18 -0500
From: Ethan Aubin <ethan.aubin@pobox.com>
To: bugs@plt-scheme.org
Subject: allow variable placement of provide/contract

>Number:         6574
>Category:       drscheme
>Synopsis:       allow variable placement of provide/contract
>Confidential:   no
>Severity:       non-critical
>Priority:       low
>Responsible:    robby
>State:          closed
>Class:          change-request
>Submitter-Id:   unknown
>Arrival-Date:   Thu Nov 27 23:20:00 EST 2003
>Closed-Date:    Sun Jan 04 07:40:55 EST 2004
>Last-Modified:  Sun Jan 04 07:40:55 EST 2004
>Originator:     Ethan Aubin
>Release:        205
>Organization:
titan
>Environment:
windows "Windows NT 5.1 (Build 2600) Service Pack 1" (win32\i386) (get-display-depth) = 32
Docs Installed:
("advanced" "beginning" "beginning-abbr" "drscheme" "framework" "help" "intermediate" "intermediate-lambda" "misclib" "mred" "mzc" "mzlib" "mzscheme" "r5rs" "t-y-scheme" "teachpack" "tex2page" "tools" "tour")
Collections: 
(("C:\\Documents and Settings\\Ethan Aubin\\Application Data\\PLT Scheme\\205\\collects" "non-existent path") ("C:\\PROGRA~1\\plt\\./collects/setup/..\\..\\collects\\mzlib\\..\\..\\collects" ("afm" "browser" "compiler" "defaults" "doc" "drscheme" "dynext" "eopl" "errortrace" "framework" "games" "graphics" "help" "hierlist" "htdp" "html" "icons" "lang" "launcher" "make" "mred" "mrflow" "mrlib" "mzlib" "mzscheme" "net" "parser-tools" "profj" "setup" "slibinit" "srfi" "stepper" "string-constants" "syntax" "syntax-color" "test-suite" "tests" "tex2page" "version" "web-server" "xml")))
 
Human Language: english
 
>Description:
Hi, If I write a module like

(module test mzscheme
  (require (lib "contract.ss"))

  (provide/contract
   (struct foo ())
   (bar (foo? . -> . foo?)))

  (define (bar a b) a)

  (define-struct foo (a b)))
(require test)

I get an error message saying:

  reference to uninitialized module identifier: foo? in module: test

but if I move the provide after the define-struct this works fine. It 
would be nice to use provide/contract once at the top of a module without 
considering is relative location. Thanks! 
>How-To-Repeat:

>Fix:

>Release-Note:

>Audit-Trail:
Responsible-Changed-From-To: eli->robby
Responsible-Changed-By: robby
Responsible-Changed-When: Fri Nov 28 02:01:30 2003
Responsible-Changed-Why:
    rbf

From: Robby Findler <robby@cs.uchicago.edu>
To: Ethan Aubin <ethan.aubin@pobox.com>
Cc: bugs@plt-scheme.org
Subject: Re: all/6574: allow variable placement of provide/contract
Date: Fri, 28 Nov 2003 00:08:31 -0600

 Sadly, the evaluation order of mzscheme it "top to bottom" in a module
 so this is not possible. The arguments to -> contracts are expressions
 and since they come first, they are evaluated first.
 
 You can write this:
 
   (bar ((lambda (x) (foo? x)) . -> . (lambda (x) (foo? x))))
 
 if you really want to.
 
 Robby
 
 At Thu, 27 Nov 2003 23:18:18 -0500, Ethan Aubin wrote:
 > You may claim or edit this problem report at
 > 
 > https://internal.plt-scheme.org/cgis-bin/gnatsweb.pl?cmd=edit&pr=6574&database=plt
 > 
 > >Number:         6574
 > >Category:       all
 > >Synopsis:       allow variable placement of provide/contract
 > >Confidential:   no
 > >Severity:       non-critical
 > >Priority:       low
 > >Responsible:    eli
 > >State:          open
 > >Class:          change-request
 > >Submitter-Id:   unknown
 > >Arrival-Date:   Thu Nov 27 23:20:00 EST 2003
 > >Closed-Date:
 > >Last-Modified:
 > >Originator:     Ethan Aubin
 > >Release:        205
 > >Organization:
 > titan
 > >Environment:
 > windows "Windows NT 5.1 (Build 2600) Service Pack 1" (win32\i386) (get-display-depth) = 32
 > Docs Installed:
 > ("advanced" "beginning" "beginning-abbr" "drscheme" "framework" "help" "intermediate" 
 > "intermediate-lambda" "misclib" "mred" "mzc" "mzlib" "mzscheme" "r5rs" "t-y-scheme" 
 > "teachpack" "tex2page" "tools" "tour")
 > Collections: 
 > (("C:\\Documents and Settings\\Ethan Aubin\\Application Data\\PLT Scheme\\205\\collects" "non-
 > existent path") 
 > ("C:\\PROGRA~1\\plt\\./collects/setup/..\\..\\collects\\mzlib\\..\\..\\collects" ("afm" 
 > "browser" "compiler" "defaults" "doc" "drscheme" "dynext" "eopl" "errortrace" "framework" 
 > "games" "graphics" "help" "hierlist" "htdp" "html" "icons" "lang" "launcher" "make" "mred" 
 > "mrflow" "mrlib" "mzlib" "mzscheme" "net" "parser-tools" "profj" "setup" "slibinit" "srfi" 
 > "stepper" "string-constants" "syntax" "syntax-color" "test-suite" "tests" "tex2page" 
 > "version" "web-server" "xml")))
 >  
 > Human Language: english
 >  
 > >Description:
 > Hi, If I write a module like
 > 
 > (module test mzscheme
 >   (require (lib "contract.ss"))
 > 
 >   (provide/contract
 >    (struct foo ())
 >    (bar (foo? . -> . foo?)))
 > 
 >   (define (bar a b) a)
 > 
 >   (define-struct foo (a b)))
 > (require test)
 > 
 > I get an error message saying:
 > 
 >   reference to uninitialized module identifier: foo? in module: test
 > 
 > but if I move the provide after the define-struct this works fine. It 
 > would be nice to use provide/contract once at the top of a module without 
 > considering is relative location. Thanks! 
 > >How-To-Repeat:
 > 
 > >Fix:
 > >Release-Note:
 > >Audit-Trail:
 > >Unformatted:
 > 
 
State-Changed-From-To: open->closed
State-Changed-By: robby
State-Changed-When: Sun Jan  4 07:40:55 2004
State-Changed-Why:
    sadly, this is just the semantics of scheme (and how recursive
    binders work). Things are evaluated from the top to the bottom
    and forward references are "banged" in as they are evaluated.
>Unformatted:

