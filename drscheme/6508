From schlie@comcast.net  Mon Oct 20 20:23:57 2003
Received: from localhost (IDENT:root@localhost.localdomain [127.0.0.1])
	by champlain.ccs.neu.edu (8.9.3/8.8.7) with ESMTP id UAA27293
	for <bugs>; Mon, 20 Oct 2003 20:23:56 -0400
Message-Id: <200310210023.UAA27293@champlain.ccs.neu.edu>
Date: Mon, 20 Oct 2003 20:23:56 -0400
From: Paul Schlie <schlie@comcast.net>
To: bugs@plt-scheme.org
Subject: DrScheme OSX, seems to cosume an excessive >240MB VM space for startup.

>Number:         6508
>Category:       drscheme
>Synopsis:       DrScheme OSX, seems to cosume an excessive >240MB VM space for startup.
>Class:          sw-bug
>Responsible:    clements
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Mon Oct 20 20:25:00 -0400 2003
>Closed-Date:    Wed Oct 31 12:42:08 -0400 2007
>Last-Modified:  Wed Oct 31 12:42:08 -0400 2007
>Originator:     Paul Schlie
>Organization:
titan
>Submitter-Id:   unknown
>Release:        205.5-cvs20oct2003
>Environment:
macosx "Darwin fusion.local. 6.8 Darwin Kernel Version 6.8: Wed Sep 10 15:20:55 PDT 2003; root:xnu/xnu-344.49.obj~2/RELEASE_PPC  Power Macintosh powerpc" (ppc-macosx) (get-display-depth) = 16
Docs Installed:
("/Applications/plt-cvs/plt/collects/doc/tour" "/Applications/plt-cvs/plt/collects/doc/tools" "/Applications/plt-cvs/plt/collects/doc/tex2page" "/Applications/plt-cvs/plt/collects/doc/teachpack" "/Applications/plt-cvs/plt/collects/doc/t-y-scheme" "/Applications/plt-cvs/plt/collects/doc/r5rs" "/Applications/plt-cvs/plt/collects/doc/mzscheme" "/Applications/plt-cvs/plt/collects/doc/mzlib" "/Applications/plt-cvs/plt/collects/doc/mzc" "/Applications/plt-cvs/plt/collects/doc/mred" "/Applications/plt-cvs/plt/collects/doc/misclib" "/Applications/plt-cvs/plt/collects/doc/intermediate-lambda" "/Applications/plt-cvs/plt/collects/doc/intermediate" "/Applications/plt-cvs/plt/collects/doc/insidemz" "/Applications/plt-cvs/plt/collects/doc/icons" "/Applications/plt-cvs/plt/collects/doc/help" "/Applications/plt-cvs/plt/collects/doc/framework" "/Applications/plt-cvs/plt/collects/doc/drscheme" "/Applications/plt-cvs/plt/collects/doc/beginning-abbr" "/Applications/plt-cvs/plt/collects/doc/beginning" "/Applications/plt-cvs/plt/collects/doc/advanced")
Collections: 
(("/Users/paul/Library/PLT Scheme/205.5/collects" "non-existent path") ("/Applications/plt-cvs/plt/collects" (".DS_Store" "afm" "algol60" "browser" "compiler" "CVS" "cvs-time-stamp" "defaults" "doc" "dromedary" "drscheme" "dynext" "eopl" "errortrace" "finish-install" "framework" "games" "graphics" "guibuilder" "handin-server" "help" "hierlist" "htdp" "html" "icons" "lang" "launcher" "make" "mrdemo" "mred" "mrflow" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "profj" "readline" "reduction-semantics" "setup" "sgl" "sirmail" "slatex" "slibinit" "slideshow" "srfi" "srpersist" "stepper" "string-constants" "syntax" "syntax-color" "test-suite" "tests" "tex2page" "texpict" "typeset" "version" "waterworld" "web-server" "xelda" "xml")))
 
Human Language: english
 
Teachpack filenames: ()
Computer Language: (("Professional Languages" "PLT" "Graphical (MrEd, includes MzScheme)") #6(#f write mixed-fraction-e #t #t debug))
>Description:
Likely not a bug per-se but seems a bit excessive and often grows beyond 350MB
with a little use, although shows only ~60MB resident (presumably code, heap & stack),
although the GC memory manager reports less than ~40MB or so of scheme data/code memory
under it's allocated control?

Occasionally it seems that this causes DrScheme to thrash when other processes
are running? (the second largest process on my machine tends to be Safari and/or
Entourage which are also relative VM hogs, but only consuming ~100MB of VM, and
<30MB resident, where most others are below this).
>How-To-Repeat:
- open process viewer
- start DrScheme
- so some more stuff
>Fix:
>Release-Note:
>Audit-Trail:
From: Paul Schlie <schlie@comcast.net>
To: <bugs@plt-scheme.org>, eli@plt-scheme.org
Cc:  
Subject: Re: all/6508: DrScheme OSX, seems to consume an excessive >240MB
	VM space for startup.
Date: Wed, 22 Oct 2003 22:24:22 -0400

 ; The following test demonstrates what appears to be excessive memory use,
 ; resulting in the application thrashing, substantially slowing run-times.
 ;
 ; Simply open this code in newly opened DrScheme window, & execute.
 ;
 ; - it will run 20 iterations of 2 amb variables each with 31 values,
 ;   where by each iteration will call/cc backtrack ~2000 times generating
 ;   all value permutations.
 ;
 ; However it will print out the time and memory usage required for each
 ; iteration, demonstrating an very large variance in both time and memory
 ; requirements required for a basic call/cc code fragment which should
 ; likely only require a fraction of a second to run, as each iteration
 ; only effectively loops 2000 times; possibly due to what appears to be
 ; excessive memory use, which causes the machine to thrash, even when
 ; DrScheme is the only app running on a 600MHz 250MB ibook.
 ;
 ; The following are the results from my run, showing:
 ;
 ; start res: 59MB  VM: 242MB
 ; min cpu: 4.7s     max cpu:  8.2s (seems slow for ~2k iterations?)
 ; min run: 5.4s     max run: 71.3s (~ 10x greater worst case? thrashing?)
 ; min  gc: 0.0s     max  gc:  2.4s
 ; min mem: 81MB     max mem: 337MB (seems big for call/cc use? thrashing?)
 ; final res: 156MB VM: 553MB (likely due to above 337MB, thrashing?)
 ;
 ; current-memory-use: 34045952, reading...
 ; current-memory-use: 36233216, testing...
 ; cpu time: 7010 real time: 7191 gc time: 2270
 ; current-memory-use: 93478912, iteration: 1
 ; cpu time: 6650 real time: 6807 gc time: 1950
 ; current-memory-use: 81616896, iteration: 2
 ; cpu time: 6550 real time: 54597 gc time: 1410
 ; current-memory-use: 94031872, iteration: 3
 ; cpu time: 6560 real time: 20455 gc time: 1150
 ; current-memory-use: 92270592, iteration: 4
 ; cpu time: 6430 real time: 17810 gc time: 1200
 ; current-memory-use: 85250048, iteration: 5
 ; cpu time: 4720 real time: 5450 gc time: 0
 ; current-memory-use: 209006592, iteration: 6
 ; cpu time: 5740 real time: 9633 gc time: 790
 ; current-memory-use: 138727424, iteration: 7
 ; cpu time: 6300 real time: 20437 gc time: 1340
 ; current-memory-use: 84168704, iteration: 8
 ; cpu time: 5170 real time: 12656 gc time: 0
 ; current-memory-use: 207822848, iteration: 9
 ; cpu time: 8190 real time: 71359 gc time: 2380
 ; current-memory-use: 140673024, iteration: 10
 ; cpu time: 5920 real time: 48429 gc time: 0
 ; current-memory-use: 264658944, iteration: 11
 ; cpu time: 6520 real time: 32271 gc time: 1150
 ; current-memory-use: 142815232, iteration: 12
 ; cpu time: 5970 real time: 49400 gc time: 0
 ; current-memory-use: 266924032, iteration: 13
 ; cpu time: 6490 real time: 41181 gc time: 1240
 ; current-memory-use: 131928064, iteration: 14
 ; cpu time: 5750 real time: 46141 gc time: 0
 ; current-memory-use: 255991808, iteration: 15
 ; cpu time: 7270 real time: 50742 gc time: 1420
 ; current-memory-use: 110686208, iteration: 16
 ; cpu time: 5710 real time: 37319 gc time: 0
 ; current-memory-use: 234704896, iteration: 17
 ; cpu time: 8270 real time: 62846 gc time: 1630
 ; current-memory-use: 88993792, iteration: 18
 ; cpu time: 5740 real time: 25721 gc time: 0
 ; current-memory-use: 212840448, iteration: 19
 ; cpu time: 6310 real time: 59662 gc time: 0
 ; current-memory-use: 336969728, iteration: 20
 ; finished, collecting garbage...
 ; cpu time: 1150 real time: 16249 gc time: 1110
 ; current-memory-use: 34971648
 ; cpu time: 590 real time: 625 gc time: 590
 ; current-memory-use: 34205696
 
 ; amb code fragments adopted from John W. Small's "learn scheme now" text.
 
 (collect-garbage)
 
 (printf "current-memory-use: ~s, reading...\n" (current-memory-use))
  
 (define amb-done 'amb-done)
 
 (define amb-backtrack (lambda () amb-done))
 
 (define-syntax amb
   (syntax-rules ()
     ((_ choices ...) (call/cc (lambda (eureka)
                                (let ([previous-backtrack amb-backtrack])
                                  (amb-choices eureka choices ...)
                                  (previous-backtrack)))))
     ))
 
 (define-syntax amb-choices
   (syntax-rules ()
     ((_ eureka) #f)
     ((_ eureka c1 c2 ...) (begin
                             (call/cc (lambda (next-choice)
                                        (set! amb-backtrack (lambda ()
 (next-choice #f)))
                                        (eureka c1)))
                             (amb-choices eureka c2 ...)))
     ))
 
 (define (amb-next) (amb))
 
 (define (amb-assert applied-predicate-expression)
   (if (not applied-predicate-expression) (amb-next)))
 
 (define-syntax amb-repeat
   (syntax-rules ()
     ((_ amb-expr)
      (let ([previous-backtrack amb-backtrack]
            [solutions ()])
        (call/cc (lambda (finished)
                   (set! amb-backtrack (lambda () (finished #t)))
                   (set! solutions (cons amb-expr solutions))
                   (amb-next)))
        (set! amb-backtrack previous-backtrack)
        (reverse solutions)))
     ))
 
 (define (gen-number-between lo hi)
   (let loop ((i lo))
     (if (> i hi) (amb-next)
         (amb i (loop (+ i 1))))))
 
 (define (amb-repeat-test)
  (amb-repeat
   (let ((x (gen-number-between -15 15)) (y (gen-number-between -15 15)))
     (amb-assert (< (* x y) +30))
     (amb-assert (> (* x y) +15))
     (amb-assert (< (+ x y) +10))
     (amb-assert (> (+ x y) -10))
     (list x y)))
  )
 
 (printf "current-memory-use: ~s, testing..." (current-memory-use))
 
 (let loop ((n 1))
   (printf "\n")
   (time (amb-repeat-test))
   (printf "current-memory-use: ~s, iteration: ~s" (current-memory-use) n)
   (if (< n 20) (loop (+ n 1))))
 
 (printf "\nfinished, collecting garbage...\n")
 (printf "current-memory-use: ~s\n" (begin (time (collect-garbage))
 (current-memory-use)))
 (printf "current-memory-use: ~s\n" (begin (time (collect-garbage))
 (current-memory-use)))
 
 ; end
 
Responsible-Changed-From-To: eli->nobody
Responsible-Changed-By: gnats@champlain.ccs.neu.edu
Responsible-Changed-When: Fri, 26 Mar 2004 05:06:36 -0500
Responsible-Changed-Why:


Responsible changed from "nobody" to "clements" by eli at Thu, 01 Apr 2004 18:05:12 -0500
Reason: John, can you check this out?  I don't have a clue about 
what's fine and what's not in your favorite OS...

View:
  http://bugs.plt-scheme.org/query/?cmd=view+audit-trail&pr=6508

From: Paul Schlie <schlie@comcast.net>
To: <bugs@plt-scheme.org>, <laminatedwastrel@brinckerhoff.org>,
        <nobody@plt-scheme.org>, <eli@plt-scheme.org>
Cc: 
Subject: Re: drscheme/6508 DrScheme OSX, seems to consume an excessive
	>240MB VM space for startup.
Date: Fri, 02 Apr 2004 07:39:34 -0500

 My impression is that it's more of an idiosyncrasy of the GC during startup,
 where some of the many data structures being allocated are simply not being
 identified as being collectable until startup completes, possibly because
 they're simply not? However if they should be, then thought any improvement
 may also help system performance in general.
 
 > From: eli@plt-scheme.org
 > Reply-To: bugs@plt-scheme.org
 > Date: Thu, 1 Apr 2004 18:05:12 -0500
 > To: laminatedwastrel@brinckerhoff.org, nobody@plt-scheme.org,
 > eli@plt-scheme.org, Paul Schlie <schlie@comcast.net>
 > Subject: Re: drscheme/6508 DrScheme OSX, seems to cosume an excessive >240MB
 > VM space for startup.
 > 
 > 
 > Responsible changed from "nobody" to "clements" by eli at Thu, 01 Apr 2004
 > 18:05:12 -0500
 > Reason: John, can you check this out?  I don't have a clue about
 > what's fine and what's not in your favorite OS...
 > 
 > View:
 > http://bugs.plt-scheme.org/query/?cmd=view+audit-trail&pr=6508
 > 
 > 
 
From: John Clements <clements@brinckerhoff.org>
To: Paul Schlie <schlie@comcast.net>, bugs@plt-scheme.org
Cc: laminatedwastrel@brinckerhoff.org
Subject: Re: drscheme/6508 DrScheme OSX, seems to consume an excessive >240MB VM space for startup.
Date: Mon, 5 Apr 2004 10:12:02 -0400

 On Apr 2, 2004, at 7:40 AM, Paul Schlie wrote:
 
 > The following reply was made to PR drscheme/6508 (noted by Gnats).
 >
 > View this PR at:
 >   http://bugs.plt-scheme.org/query/?cmd=3Dview+audit-trail&pr=3D6508
 >
 > =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D
 > From: Paul Schlie <schlie@comcast.net>
 > To: <bugs@plt-scheme.org>, <laminatedwastrel@brinckerhoff.org>,
 >         <nobody@plt-scheme.org>, <eli@plt-scheme.org>
 > Cc:
 > Subject: Re: drscheme/6508 DrScheme OSX, seems to consume an excessive
 > 	>240MB VM space for startup.
 > Date: Fri, 02 Apr 2004 07:39:34 -0500
 >
 >  My impression is that it's more of an idiosyncrasy of the GC during=20=
 
 > startup,
 >  where some of the many data structures being allocated are simply not=20=
 
 > being
 >  identified as being collectable until startup completes, possibly=20
 > because
 >  they're simply not? However if they should be, then thought any=20
 > improvement
 >  may also help system performance in general.
 
 Sadly, it seems that DrScheme is well within the ballpark of=20
 reasonability in this regard.  Here's a 'top' snapshot after starting=20
 DrScheme:
 
 Processes:  81 total, 2 running, 79 sleeping... 208 threads           =20=
 
 10:05:59
 Load Avg:  1.03, 0.54, 0.50     CPU usage:  15.2% user, 25.6% sys,=20
 59.2% idle
 SharedLibs: num =3D  123, resident =3D 27.7M code, 2.77M data, 7.66M=20
 LinkEdit
 MemRegions: num =3D  9569, resident =3D  284M + 15.2M private,  134M =
 shared
 PhysMem:  70.3M wired,  367M active,  191M inactive,  629M used, 10.7M=20=
 
 free
 VM: 5.74G + 83.2M   264402(0) pageins, 75716(0) pageouts
 
    PID COMMAND      %CPU   TIME   #TH #PRTS #MREGS RPRVT  RSHRD  RSIZE =20=
 
 VSIZE
 28991 top         16.9%  0:05.43   1    16    26   460K   416K   832K =20=
 
 27.1M
 28990 DrScheme     0.0%  0:17.31   3    58   188  67.6M  17.3M  86.4M  =20=
 
 192M
 28982 Acrobat Re   0.8%  0:12.85   3    75   316  10.1M  25.2M  23.8M  =20=
 
 209M
 28958 Emacs        0.0%  0:09.25   1    56    93  4.55M  12.3M  10.4M  =20=
 
 124M
 28947 SecurityAg   0.0%  0:00.97   2    75   103  1.54M  6.21M  4.86M  =20=
 
 107M
 28946 AppleSpell   0.0%  0:00.46   1    42    66   752K  1.89M  2.05M =20=
 
 63.9M
 28944 iTunes       4.8%  3:16.96   8   207   505  13.0M  17.9M  23.6M  =20=
 
 144M
 28942 Safari       0.0%  4:08.22   8   204   307  21.6M  19.4M  33.3M  =20=
 
 148M
 28935 Mail         0.0%  2:39.95  19   282   353  15.7M  27.0M  33.1M  =20=
 
 151M
 28890 bash         0.0%  0:00.20   1    12    21   180K   840K   852K =20=
 
 18.2M
 28889 login        0.0%  0:00.01   1    13    37   120K   380K   484K =20=
 
 26.9M
 28878 iChatAgent   0.0%  0:00.68   5    76    83   688K  2.88M  3.27M =20=
 
 97.9M
 28828 Virex 7.2    0.0%  0:09.11   1    78   117  1.46M  10.5M  5.83M  =20=
 
 112M
 28825 bash         0.0%  0:00.05   1    12    19   192K   824K   812K =20=
 
 18.2M
 28824 login        0.0%  0:00.02   1    13    37   128K   380K   496K =20=
 
 26.9M
 28823 iChat        0.0%  0:02.85   6   176   183  2.94M  11.4M  8.29M  =20=
 
 122M
 28822 iCalAlarmS   0.0%  0:00.39   1    60    72   660K  2.13M  2.43M =20=
 
 95.7M
 28820 MouseWorks   4.8%  0:19.85   1    54    67   488K  3.02M  1.52M =20=
 
 92.3M
 28819 LaunchBar    0.0%  0:07.74   1    70   187  6.54M  7.78M  11.2M  =20=
 
 115M
 28818 Terminal     2.4%  0:14.16   4    66   135  1.36M  14.2M  10.1M  =20=
 
 114M
 28815 Finder       0.0%  0:02.49   1    86   265  4.32M  21.7M  19.4M  =20=
 
 132M
 28814 SystemUISe   0.0%  0:02.04   1   181   164  2.57M  10.4M  6.58M  =20=
 
 117M
 28813 Dock         0.0%  0:00.98   2    81    92   504K  9.01M  2.65M =20=
 
 98.9M
 28811 pbs          0.0%  0:00.47   2    32    45   508K  1.48M  1.72M =20=
 
 44.1M
 28609 ssh-agent    0.0%  0:00.01   1     9    19   148K   376K   224K =20=
 
 26.7M
 28582 cron         0.0%  0:00.02   1     9    24    64K   348K   168K =20=
 
 27.0M
 28574 ATSServer    0.0%  0:03.36   2    62   200   728K  10.9M  3.66M  =20=
 
 153M
 28573 loginwindo   0.0%  0:02.08   4   187   145  2.69M  3.24M  5.30M =20=
 
 85.8M
 28510 lookupd      0.0%  0:03.60   2    37    65  7.29M   824K  8.08M =20=
 
 34.6M
 27356 AppleSpell   0.0%  0:00.93   1    29    68     4K  1.62M   436K =20=
 
 63.9M
 27031 Software U   0.0%  0:00.84   4    93   128    32K  5.15M  1.21M  =20=
 
 109M
 27025 ATSServer    0.0%  0:04.91   2    44   148   152K  3.38M   480K  =20=
 
 101M
 26731 AppleSpell   0.0%  0:00.60   1    29    68     4K  1.62M   428K =20=
 
 63.9M
 26470 ATSServer    0.0%  0:04.00   2    44   149    56K  2.98M   300K =20=
 
 48.7M
 26298 AppleSpell   0.0%  0:01.22   1    29    68     4K  1.62M   432K =20=
 
 63.9M
 26036 ATSServer    0.0%  0:04.89   2    45   151   372K  2.90M   336K =20=
 
 61.0M
 25826 AppleSpell   0.0%  0:00.57   1    29    68     4K  1.62M   428K =20=
 
 63.9M
 25113 ATSServer    0.0%  0:04.00   2    44   147   284K  2.84M   332K =20=
 
 48.5M
    547 mzscheme     0.0%  0:14.55   1    13    43  11.2M   824K  8.38M =20=
 
 41.9M
    546 scshvm       0.0%  0:00.28   1    11    20     4K   468K    32K =20=
 
 36.9M
    521 AppleSpell   0.0%  0:01.13   1    29    68     4K  1.62M    40K =20=
 
 63.9M
    519 qmgr         0.0%  0:02.33   1    13    32   120K   468K   352K =20=
 
 26.9M
    428 ATSServer    0.0%  0:06.12   2    44   155   152K  3.04M   232K =20=
 
 51.1M
    414 LaunchCFMA   0.8% 13:08:26   4   157   224   102M  13.9M   107M  =20=
 
 259M
    397 Finder       0.0%  0:02.11   1    85   133    20K  9.60M   484K  =20=
 
 122M
    396 SystemUISe   0.0%  0:54.47   1   154   145   796K  5.27M  1.71M  =20=
 
 109M
    395 Dock         0.0%  0:00.67   2    70    87    12K  2.43M   228K =20=
 
 98.5M
    391 pbs          0.0%  0:00.45   2    32    42     4K  1.22M    56K =20=
 
 44.1M
    388 slpd         0.0%  0:05.05   6    29    38   116K   792K   344K =20=
 
 30.4M
    372 master       0.0%  0:01.65   1    13    20    88K   348K   176K =20=
 
 26.8M
    371 xinetd       0.0%  0:00.04   1    12    21    76K   496K   220K =20=
 
 26.8M
 
 
 There are many offenders here: Acrobat actually chews up 209M, with=20
 just one .pdf open.
 
 If you really want to complain, though, complain about the resident=20
 size; DrScheme chews up more than twice as much memory as Safari, Mail,=20=
 
 i=14Tunes, etc. (FWIW, swapping those applications to the foreground =
 does=20
 not significantly increase their resident size).
 
 In summary, DrScheme's memory use is quite high, but ...
 
 ... but I'm going to close this PR, anyway, unless you have a problem=20
 with that.
 
 Thanks,
 
 john
 
State changed from "open" to "suspended" by clements at Mon, 05 Apr 2004 10:37:43 -0400
Reason>>> no obvious fix for poor performance

State changed from "suspended" to "closed" by clements at Wed, 31 Oct 2007 12:42:08 -0400
Reason>>> old bug for known problem, ongoing work to resolve, 3m probably improves 
this dramatically.

>Unformatted:
