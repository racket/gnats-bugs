From mflatt@cs.utah.edu  Wed Nov 14 11:18:30 2001
Received: from localhost (IDENT:root@localhost.localdomain [127.0.0.1])
	by champlain.ccs.neu.edu (8.9.3/8.8.7) with ESMTP id LAA20965
	for <plt-gnats>; Wed, 14 Nov 2001 11:18:29 -0500
Message-Id: <200111141618.LAA20965@champlain.ccs.neu.edu>
Date: Wed, 14 Nov 2001 11:18:29 -0500
From: mflatt@cs.utah.edu
To: bugs@plt-scheme.org
Subject: DrScheme: break during read triggers eof 

>Number:         5017
>Category:       drscheme
>Synopsis:       DrScheme: break during read triggers eof
>Confidential:   no
>Severity:       serious
>Priority:       medium
>Responsible:    robby
>State:          closed
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Wed Nov 14 11:20:00 EST 2001
>Closed-Date:    Thu Nov 15 20:51:27 EST 2001
>Last-Modified:  Thu Nov 15 20:51:27 EST 2001
>Originator:     Matthew Flatt
>Release:        200alpha1
>Organization:
titan
>Environment:
unix "FreeBSD westdip 4.1.1-RELEASE FreeBSD 4.1.1-RELEASE #2: Thu Oct  5 10:32:50 MDT 2000     mike@cognac.cs.utah.edu:/usr/src/sys/compile/UTAHUP  i386" (i386-freebsd/3m) (get-display-depth) = 24
Tools: ("CVS" "eopl")
Docs Installed:
("mred" "mzscheme" "r5rs" "icons" "help" "teach" "drscheme" "misclib" "framework" "tools" "mzc" "index.html" "docindex.html" "doctable.html" "insidemz" "beginning" "mzlib" "intermediate" "advanced" "teachpack" "beginning-abbr" "t-y-scheme" "intermediate-lambda")
Collections: 
(("/home/mflatt/lib/mzscheme" "non-existant path") ("/home/mflatt/proj/plt/collects" ("CVS" "mzlib" "icons" "readline" "mzscheme" "make" "compiler" "dynext" "launcher" "afm" "cogen" "userspce" "hierlist" "help" "browser" "doc" "net" "mred" "errortrace" "texpict" "drscheme" "graphics" "framework" "htdp" "tests" "games" "stepper" "sirmail" "slib" "slatex" "mrdemo" "xml" "setup" "defaults" "slibinit" "debug" "eopl" "srfi" "schemeql" "version" "guibuilder" "lang" "syntax" "html" "string-constants" "server" "parser-tools")) ("~mflatt/proj/plt/collects" ("CVS" "mzlib" "icons" "readline" "mzscheme" "make" "compiler" "dynext" "launcher" "afm" "cogen" "userspce" "hierlist" "help" "browser" "doc" "net" "mred" "errortrace" "texpict" "drscheme" "graphics" "framework" "htdp" "tests" "games" "stepper" "sirmail" "slib" "slatex" "mrdemo" "xml" "setup" "defaults" "slibinit" "debug" "eopl" "srfi" "schemeql" "version" "guibuilder" "lang" "syntax" "html" "string-constants" "server" "parser-tools")) ("~mflatt/proj/collects" ("CVS" "calendar" "graph" "pousse" "slideshow" "solutions")))
Human Language: English
>Description:
When the `break' button is clicked during a read from
the current input port in DrScheme, an eof is placed in
the input port. Future reads see the eof.

One reason this is bad is that break in general doesn't send
eof into input; it's only if the break occurs during the read.
So there's a race condition from the perspective of the user's
program.

The eof button to the right of the `read' box also implies an
infinite stream of eofs, but it might be more useful to queue
just one (like ctl-d in a shell).

>How-To-Repeat:
; In the MzScheme language:
(read)
; click break
(read)
; gets eof instead of starting a new read

>Fix:

>Release-Note:

>Audit-Trail:
Responsible-Changed-From-To: steck->robby
Responsible-Changed-By: robby
Responsible-Changed-When: Thu Nov 15 20:51:27 2001
Responsible-Changed-Why:
    dr
State-Changed-From-To: open->closed
State-Changed-By: robby
State-Changed-When: Thu Nov 15 20:51:27 2001
State-Changed-Why:
    fixed, released.
    
    I do not think that mz's model is correct -- I can see
    how it would be useful in a terminal window, but in
    drscheme, you can just click execute again, to get
    a new stdin.
    
    In general, it seems to make more sense that there
    shouldn't be any ouput from a port, once that port 
    has sent an eof.
>Unformatted:

