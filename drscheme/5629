From sk@cs.brown.edu  Mon Jul 15 11:01:45 2002
Received: from localhost (IDENT:root@localhost.localdomain [127.0.0.1])
	by champlain.ccs.neu.edu (8.9.3/8.8.7) with ESMTP id LAA02338
	for <bugs>; Mon, 15 Jul 2002 11:01:45 -0400
Message-Id: <200207151501.LAA02338@champlain.ccs.neu.edu>
Date: Mon, 15 Jul 2002 11:01:45 -0400
From: Shriram Krishnamurthi <sk@cs.brown.edu>
Reply-To:
To: bugs@plt-scheme.org
Subject: poor error message for malformed define

>Number:         5629
>Category:       drscheme
>Synopsis:       poor error message for malformed define
>Confidential:   no
>Severity:       serious
>Priority:       medium
>Responsible:    mflatt
>State:          open
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Mon Jul 15 11:10:00 EDT 2002
>Closed-Date:    
>Last-Modified:  Mon Apr 28 13:01:05 EDT 2003
>Originator:     Shriram Krishnamurthi
>Release:        200
>Organization:
titan
>Environment:
windows "Windows NT 5.1 (Build 2600)" (win32\i386) (get-display-depth) = 32
Docs Installed:
("advanced" "beginning" "beginning-abbr" "drscheme" "framework" "help" "icons" "intermediate" "intermediate-lambda" "misclib" "mred" "mzc" "mzlib" "mzscheme" "r5rs" "t-y-scheme" "teachpack" "tex2page" "tools" "tour")
Collections: 
(("c:\\progra~1\\plt\\.\\collects\\setup\\..\\..\\collects" ("afm" "browser" "compiler" "defaults" "doc" "drscheme" "dynext" "eopl" "errortrace" "framework" "games" "graphics" "help" "hierlist" "htdp" "html" "icons" "lang" "launcher" "make" "mred" "mzlib" "mzscheme" "net" "parser-tools" "setup" "slibinit" "stepper" "string-constants" "syntax" "tex2page" "version" "web-server" "xml")))
Human Language: english
>Description:
Ex 2.4.1 and 2.4.2 are worth doing, because the
error messages are less than helpful.

1. (define (f x) + x 10)
It gives an error about the number of expressions,
whereas people asked, "Why isn't it just saying I'm
missing an open paren?"  I think this is particularly
confusing to them because if + can't be a value,
then the error is "obviously" that there's a paren
missing before +!  Maybe the define -> define-syntax
transformation takes care of this?  Otherwise, this
is a case of language level not matching the language.

2. (define h(x) (+ x 10))
The same error about too many expressions in define.
Again, this seems to be a mismatch between the language
level and language.  If you haven't yet seen the
(define const val) syntax, then this expression
doesn't make any sense.  I had to explain that it
DID make sense to write (define h ...).  Perhaps we
need a Beginner Scheme with Aliases or something?
If people are going to lapse into algebraic syntax
(not clear to me that they do ...) then it would be
useful to point to h(x) and say it doesn't match
the syntax of a definition.
>How-To-Repeat:
(void)
>Fix:

>Release-Note:

>Audit-Trail:

From: Shriram Krishnamurthi <sk@cs.brown.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: robby@cs.rice.edu, matthias@ccs.neu.edu, bugs@plt-scheme.org
Subject: Re: all/5629: poor error message for malformed define
Date: Mon, 15 Jul 2002 13:30:11 -0400 (EDT)

 Matthew Flatt wrote:
 
 >  define: expected only one expression for the function body, but found an
 >  extra part (plus 1 more)
 
 Thanks.  I'm with you on all this, but I think this parenthetical
 phrase is confusing.  I didn't even understand what it meant.  Not to
 mention, since I was looking at expressions of the form (+ x y) in
 lab, I thought it was trying to say something about a Scheme program
 of the form
 
   (plus 1 more)
 
 Only now did I understand what this means.  I wonder if this
 parenthetical phrase is necessary.  If you really want to be precise
 you could say "found at least one extra part".
 
 Shriram

From: Matthew Flatt <mflatt@cs.utah.edu>
To: Shriram Krishnamurthi <sk@cs.brown.edu>
Cc: robby@cs.rice.edu, matthias@ccs.neu.edu, bugs@plt-scheme.org
Subject: Re: all/5629: poor error message for malformed define
Date: Mon, 15 Jul 2002 11:36:25 -0600 (MDT)

 At Mon, 15 Jul 2002 13:30:11 -0400 (EDT), Shriram Krishnamurthi wrote:
 > Matthew Flatt wrote:
 > 
 > >  define: expected only one expression for the function body, but found an
 > >  extra part (plus 1 more)
 > 
 > Thanks.  I'm with you on all this, but I think this parenthetical
 > phrase is confusing.  I didn't even understand what it meant.  Not to
 > mention, since I was looking at expressions of the form (+ x y) in
 > lab, I thought it was trying to say something about a Scheme program
 > of the form
 > 
 >   (plus 1 more)
 > 
 > Only now did I understand what this means.  I wonder if this
 > parenthetical phrase is necessary.  If you really want to be precise
 > you could say "found at least one extra part".
 
 I agree that the parenthetical remark is confusing.
 
 The solution is to hilite all N extra parts, instead of just the first
 one, and say "N extra parts" in the message. We'll be able to do that
 in v202.
 
 Meanwhile, I'll go with "at least one extra part" when there are
 multiple extra parts. (I don't want to say "N extra parts" when only
 one is hilited.)
 
 Matthew
 

From: Shriram Krishnamurthi <sk@cs.brown.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: robby@cs.rice.edu, matthias@ccs.neu.edu, bugs@plt-scheme.org
Subject: Re: all/5629: poor error message for malformed define
Date: Mon, 15 Jul 2002 14:55:48 -0400 (EDT)

 Matthew Flatt wrote:
 
 > The solution is to hilite all N extra parts, instead of just the first
 > one, and say "N extra parts" in the message. We'll be able to do that
 > in v202.
 
 My fantasy interface!  That would be great, thanks.
 
 Shriram

From: John Clements <clements@brinckerhoff.org>
To: bugs@plt-scheme.org, Shriram Krishnamurthi <sk@cs.brown.edu>
Cc:  
Subject: Re: all/5629: poor error message for malformed define
Date: Tue, 16 Jul 2002 09:43:28 -0400

 At 11:01 AM -0400 7/15/02, Shriram Krishnamurthi wrote:
 >Ex 2.4.1 and 2.4.2 are worth doing, because the
 >error messages are less than helpful.
 >
 >1. (define (f x) + x 10)
 >It gives an error about the number of expressions,
 >whereas people asked, "Why isn't it just saying I'm
 >missing an open paren?"
 
 What about just having more detailed highlighting?  That is, suppose 
 the preceding error had been:
 I expected one expression, I got _these_three_ (with separate 
 highlighting for each expression).  Or you could even number them. 
 At this point, I think it would be more clear what was going on.
 
 Or maybe not... you never know.
 
 just a thought,
 
 john
Responsible-Changed-From-To: steck->mflatt
Responsible-Changed-By: mflatt
Responsible-Changed-When: Mon Apr 28 13:01:05 2003
Responsible-Changed-Why:
    teaching langs
>Unformatted:

