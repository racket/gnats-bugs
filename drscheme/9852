From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Mon Oct 20 14:34:49 2008
Received: from rv-out-0506.google.com (rv-out-0506.google.com [209.85.198.229])
	by champlain.ccs.neu.edu (8.14.2/8.14.2) with ESMTP id m9KIYdar029812
	for <bugs@bugs.plt-scheme.org>; Mon, 20 Oct 2008 14:34:39 -0400
Message-Id: <200810201834.m9KIYYUZ029805@champlain.ccs.neu.edu>
Date: Mon, 20 Oct 2008 14:34:34 -0400
From: airfoil@bellsouth.net
To: bugs@plt-scheme.org
Subject: natural-number/c appears to accept 3.0, while (exact? 3.0) -> #f

>Number:         9852
>Category:       drscheme
>Synopsis:       natural-number/c appears to accept 3.0, while (exact? 3.0) -> #f
>Class:          sw-bug
>Responsible:    robby
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Mon Oct 20 14:36:01 -0400 2008
>Last-Modified:  Mon Oct 20 16:12:01 -0400 2008
>Originator:     Kyle Smith
>Organization:
plt
>Submitter-Id:   unknown
>Release:        4.0.1.2-svn26jun2008
>Environment:
unix "OpenBSD saturn.zachary.lan 4.3 GENERIC.MP#1582 amd64" (x86_64-openbsd/3m) (get-display-depth) = 24
Human Language: english
(current-memory-use) 192452144

Collections:
(("/home/airfoil/.plt-scheme/4.0.1.2/collects" non-existent-path) ("/usr/local/plt/lib/plt/collects" "afm" "algol60" "browser" "combinator-parser" "compiler" "config" "defaults" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu" "htdch" "htdp" "html" "icons" "lang" "launcher" "lazy" "little-helper" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profj" "profjWizard" "r5rs" "r6rs" "readline" "repos-time-stamp" "rnrs" "s-exp" "scheme" "scribble" "scribblings" "setup" "sgl" "sirmail" "slatex" "slideshow" "srfi" "srpersist" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tests" "tex2page" "texpict" "trace" "typed-scheme" "version" "waterworld" "web-server" "wxme" "xml" "info-domain"))
Computer Language: (("Module") (#(#t write mixed-fraction-e #f #t none) (default) #()))
>Description:
Hi folks,  I'm working on DrScheme v4.0.1.2svn26Jun2008[3m] on an OpenBSD box.  I was just trying to work through the excellent documentation on contracts, when I came accross this annomally.  My doc says that natural-number/c is a flat-contract that requires input to be an exact non-negative number.  So I was setting up some test cases, and it appears that natural-number/c does not get violated for an integer with a decimal point, and a following zero; e.g., 3.0, while at the same time (exact? 3.0) returns #f.

This may be history by now, or maybe I don't understand something.  Thanks for looking at it.

--kyle
>How-To-Repeat:
#lang scheme
#| $Id: bug-natural-c.ss,v 1.1 2008/10/20 18:28:38 airfoil Exp $ |#
(define (write-nat n) (write n))
(provide/contract
 ; debug natural-number/c
 [write-nat (-> natural-number/c any)])

#lang scheme
#! $Id: test-suite.ss,v 1.1 2008/10/20 18:28:38 airfoil Exp $ |#
(require "bug-natural-c.ss"
         (planet "test.ss" ("schematics" "schemeunit.plt" 2))
         (planet "text-ui.ss" ("schematics" "schemeunit.plt" 2)))
 
(test/text-ui
 (test-suite
  "simple-contracts"
  (test-true "(write-nat 3.1)[domain exn:fail:contract]"
             (with-handlers ([exn:fail:contract? (lambda _ #t)])
               (write-nat 3.1) #f))
  (test-equal? "(exact? 3.0" (exact? 3.0) #f)
  (test-true "(write-nat 3.0)[domain exn:fail:contract]"
             (with-handlers ([exn:fail:contract? (lambda _ #t)])
               (write-nat 3.0) #f))
  ))

Welcome to DrScheme, version 4.0.1.2-svn26jun2008 [3m].
Language: Module custom; memory limit: 256 megabytes.
3.0
simple-contracts > (write-nat 3.0)[domain exn:fail:contract]
(write-nat 3.0)[domain exn:fail:contract] has a FAILURE
name: check-true
location: test-suite.ss:14:2
params:
#f
2 success(es) 1 failure(s) 0 error(s) 3 test(s) run
1
> 
>Fix:
I changed the implementation to match the docs.
>Release-Note:
This was not a contract violation and would not have been a type error.
>Audit-Trail:
State changed from "open" to "closed" by robby at Mon, 20 Oct 2008 14:50:08 -0400
Reason>>> fixed and released to SVN.

Thanks!

From: "Robby Findler" <robby@plt-scheme.org>
To: airfoil@bellsouth.net, bugs@plt-scheme.org
Cc: nobody@plt-scheme.org, eli@plt-scheme.org, matthias@plt-scheme.org,
        sk@plt-scheme.org, mflatt@plt-scheme.org, clements@plt-scheme.org,
        jay@plt-scheme.org, meunier@plt-scheme.org, kathyg@plt-scheme.org,
        jacobm@plt-scheme.org, cce@plt-scheme.org, samth@plt-scheme.org,
        ryanc@plt-scheme.org, gcooper@plt-scheme.org, sstrickl@plt-scheme.org
Subject: Re: [plt-bug] all/9852: natural-number/c appears to accept 3.0, while (exact? 3.0) -> #f
Date: Mon, 20 Oct 2008 15:08:11 -0500

 On Mon, Oct 20, 2008 at 1:36 PM,  <airfoil@bellsouth.net> wrote:
 > Hi folks, I'm working on DrScheme v4.0.1.2svn26Jun2008[3m] on an
 > OpenBSD box.  I was just trying to work through the excellent
 > documentation on contracts, when I came accross this annomally.  My
 > doc says that natural-number/c is a flat-contract that requires
 > input to be an exact non-negative number.  So I was setting up some
 > test cases, and it appears that natural-number/c does not get
 > violated for an integer with a decimal point, and a following zero;
 > e.g., 3.0, while at the same time (exact? 3.0) returns #f.
 
 Thanks for the report. I've changed the implementation to match the docs.
 
 Robby
