From schlie@attbi.com  Sat Dec 28 01:22:47 2002
Received: from localhost (IDENT:root@localhost.localdomain [127.0.0.1])
	by champlain.ccs.neu.edu (8.9.3/8.8.7) with ESMTP id BAA05259
	for <bugs>; Sat, 28 Dec 2002 01:22:47 -0500
Message-Id: <200212280622.BAA05259@champlain.ccs.neu.edu>
Date: Sat, 28 Dec 2002 01:22:47 -0500
From: Paul Schlie <schlie@attbi.com>
To: bugs@plt-scheme.org
Subject: DrScheme OSX; draw teachpack needs explicit needs explicit posn.ss w/mzscheme

>Number:         6042
>Category:       drscheme
>Synopsis:       DrScheme OSX; draw teachpack needs explicit needs explicit posn.ss w/mzscheme
>Class:          sw-bug
>Responsible:    matthias
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Sat Dec 28 01:25:00 -0500 2002
>Closed-Date:    Mon May 10 09:34:51 -0400 2004
>Last-Modified:  Mon May 10 09:34:51 -0400 2004
>Originator:     Paul Schlie
>Organization:
plt
>Submitter-Id:   unknown
>Release:        203
>Environment:
macosx "Darwin fusion.local. 6.3 Darwin Kernel Version 6.3: Sat Dec 14 03:11:25 PST 2002; root:xnu/xnu-344.23.obj~4/RELEASE_PPC  Power Macintosh powerpc" (ppc-macosx)

Docs installed:
(".DS_Store" "advanced" "beginning" "beginning-abbr" "CVS" "drscheme" "framework" "help" "icons" "insidemz" "intermediate" "intermediate-lambda" "misclib" "mred" "mzc" "mzlib" "mzscheme" "r5rs" "t-y-scheme" "teachpack" "tex2page" "tools" "tour")

Collections:
(("/Users/paul/Desktop/plt-cvs/plt/collects/mzlib/../../MrEd.app/Contents/MacOS/../../../collects" (".DS_Store" "afm" "algol60" "browser" "compiler" "CVS" "cvs-time-stamp" "defaults" "doc" "drscheme" "dynext" "eopl" "errortrace" "finish-install" "framework" "games" "graphics" "help" "hierlist" "htdp" "html" "icons" "lang" "launcher" "make" "mrdemo" "mred" "mrflow" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "parser-tools" "readline" "reduction-semantics" "setup" "sirmail" "slatex" "slibinit" "srpersist" "stepper" "string-constants" "syntax" "test-suite" "tests" "tex2page" "texpict" "typeset" "version" "waterworld" "web-server" "xml")))

Human language: english
Computer language: ("PLT" "Textual (MzScheme, includes R5RS)")
>Description:
likely my confusion, but since the plt/teachpack/htdp/draw.ss teachpack seems to already "require" posn.ss via big-draw.ss; why do I need to explicitly "require" it's inclusion after adding the draw.ss teachpack to the envornment?
>How-To-Repeat:
set language to mzscheme, add draw.ss teachpack, enter program: ;(require (lib "posn.ss" "lang")) (start 256 256) (draw-circle (make-posn 128 128) 64 'blue), then execute, should generate error, then un-comment the "(require ...), should then run fine. (please excuse the likely poor formating of this section, but I'm using the built-in browser, which doesn't accept "return" input charactors in this text box for some reason?)
>Fix:
>Release-Note:
>Audit-Trail:
Responsible-Changed-From-To: steck->matthias
Responsible-Changed-By: matthias
Responsible-Changed-When: Sat Dec 28 09:22:40 2002
Responsible-Changed-Why:
    mf/robby
State-Changed-From-To: open->analyzed
State-Changed-By: matthias
State-Changed-When: Sat Dec 28 09:22:40 2002
State-Changed-Why:
    Paul, this isn't a bug but intentional allocation of concepts. 
    We decided to treat posn's as "built-in" in the teaching languages
    for  pedagogic reasons. One was the problem that kids would
    define-struct posn's and thus have two distinct classes of posn
    around (our structs are generative). The other one was that
    we wanted one built-in structure to introduce use of structs
    before define's. (I am talking about HtDP.)
    
    We have never revisited this area, but perhaps we should with
    the new modules and teachpacks. 

From: Robert Bruce Findler <robby@cs.uchicago.edu>
To: Paul Schlie <schlie@attbi.com>
Cc: Matthias Felleisen <matthias@ccs.neu.edu>, bugs@plt-scheme.org,
        steck@ccs.neu.edu, mflatt@cs.utah.edu
Subject: Re: drscheme/6042
Date: Tue, 7 Jan 2003 12:33:35 -0600

 Sorry we haven't replied to this message. From what I know of the
 interactions between the toplevel and the module system, we get much of
 this necessary evil to support the r5rs-defined top-level semantics.
 For the most part, in building our own programs, we just avoid that
 toplevel and put our programs entirely in modules, thus avoiding these
 problems.
 
 Sorry I don't know more to say about that.
 
 Robby
 
 At Sat, 28 Dec 2002 20:39:28 -0500, Paul Schlie wrote:
 > I suspect the root of my confusion lies within the differences between how
 > "load and/or require" expressions are evaluated within teach-packs, vs.
 > "require"ed modules. For example, the following represent the results I get
 > when attempting to execute the following files/expressions within mzscheme:
 > 
 > ---
 > 
 > Given file: beginner1.ss
 > (define-syntax define
 >   (syntax-rules ()
 >     ((_ x y) (error "(define ...) : unsupported."))
 >     ((_ (x) y) (error "(define ...) : unsupported.")))
 >   )
 > 
 > Within mzscheme session:
 > > (load "beginner1.ss")
 > > (define x 1)
 > -> "(define ...) : unsupported."
 > [ok, but interesting, as I didn't know I could re-define define]
 > 
 > Within mzscheme session (after adding teachpack beginner1.ss):
 > > <press execute button>
 > -> "The teachpack file /.../beginner1.ss did not load properly.
 >     compile: bad syntax; function application is not allowed,
 >     because no #%app syntax transformer is bound"
 > [wasn't sure what to expect, but the system apparently didn't like it]
 > 
 > ---
 > 
 > Given file: beginner2.ss
 > (module beginner2 mzscheme
 >   (provide define)
 >   (define-syntax define
 >     (syntax-rules ()
 >       ((_ x y) (error "(define ...) : unsupported."))
 >       ((_ (x) y) (error "(define ...) : unsupported."))))
 >   )
 > 
 > Within mzscheme session:
 > > (require "beginner2.ss")
 > -> "module: identifier is already imported in: define"
 > [ok, but seems inconsistent with the beginner1.ss above; and
 >  error message could be made a little clearer (at least to me)]
 > 
 > Within mzscheme session (after adding teachpack beginner2.ss):
 > > <press execute button>
 > -> "The teachpack file /.../beginner2.ss did not load properly.
 >     module: identifier is already imported"
 > [apparently similar to attempting to "require" it's inclusion,
 >  but the error message didn't seem to complain about "define"
 >  specifically?]
 > 
 > ---
 > 
 > Given file: beginner3.ss
 > (module beginner3 mzscheme
 >   (provide (rename temp define))
 >   (define-syntax temp
 >     (syntax-rules ()
 >       ((_ x y) (error "(define ...) : unsupported."))
 >       ((_ (x) y) (error "(define ...) : unsupported."))))
 >   )
 > 
 > Within mzscheme session:
 > > (require "beginner3.ss")
 > > (define x 1)
 > -> "(define ...) : unsupported."
 > [which is at least consistent with the beginner1.ss example]
 > 
 > Within mzscheme session (after adding teach-pack beginner3.ss):
 > > <press execute button>
 > "The teachpack file /.../beginner3.ss did not load properly.
 >  teachpack: export of define from "/.../beginner.ss" conflicts
 >  with already existing definitions"
 > [now apparently not similar to attempting to "require" it's inclusion?
 >  but at least the error message did specifically complain about "define"]
 > 
 > ---
 > 
 > So overall I still don't quite appreciate the differences between adding of
 > a teachpack, vs. it's explicit inclusion via a "require"; are there any good
 > rules of thumb? (it would be nice if they were more similar / identical)
 > 
 > Thanks for your help and patience, -paul-
 > 
 > on 12/28/02 9:23 AM, Matthias Felleisen wrote:
 > > 
 > > At Sat, 28 Dec 2002 09:22:40 -0500, matthias@ccs.neu.edu wrote:
 > >> Synopsis: DrScheme OSX; draw teachpack needs explicit needs explicit posn.ss
 > >> w/mzscheme
 > >> 
 > >> Responsible-Changed-From-To: steck->matthias
 > >> Responsible-Changed-By: matthias
 > >> Responsible-Changed-When: Sat Dec 28 09:22:40 2002
 > >> Responsible-Changed-Why:
 > >>     mf/robby
 > >> State-Changed-From-To: open->analyzed
 > >> State-Changed-By: matthias
 > >> State-Changed-When: Sat Dec 28 09:22:40 2002
 > >> State-Changed-Why:
 > >>     Paul, this isn't a bug but intentional allocation of concepts.
 > >>     We decided to treat posn's as "built-in" in the teaching languages
 > >>     for  pedagogic reasons. One was the problem that kids would
 > >>     define-struct posn's and thus have two distinct classes of posn
 > >>     around (our structs are generative). The other one was that
 > >>     we wanted one built-in structure to introduce use of structs
 > >>     before define's. (I am talking about HtDP.)
 > >>     
 > >>     We have never revisited this area, but perhaps we should with
 > >>     the new modules and teachpacks.
 > >> 
 > >> http://bugs.plt-scheme.org/cgi-bin/gnats-query?pr-number=6042&query-type=pr-n
 > >> umber
 > > 
 
State changed from "analyzed" to "closed" by matthias at Mon, 10 May 2004 09:34:51 -0400
Reason>>> not  abug, forgot to close. 

>Unformatted:
