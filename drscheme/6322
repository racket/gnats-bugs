From keithf@amnis.com  Tue Jun 17 16:42:54 2003
Received: from localhost (IDENT:root@localhost.localdomain [127.0.0.1])
	by champlain.ccs.neu.edu (8.9.3/8.8.7) with ESMTP id QAA22531
	for <bugs>; Tue, 17 Jun 2003 16:42:53 -0400
Message-Id: <200306172042.QAA22531@champlain.ccs.neu.edu>
Date: Tue, 17 Jun 2003 16:42:53 -0400
From: Keith Frost <keithf@amnis.com>
To: bugs@plt-scheme.org
Subject: Parenthesis Matching in Dr Scheme fallible

>Number:         6322
>Category:       drscheme
>Synopsis:       Parenthesis Matching in Dr Scheme fallible
>Confidential:   no
>Severity:       serious
>Priority:       medium
>Responsible:    sowens
>State:          closed
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Tue Jun 17 16:45:00 EDT 2003
>Closed-Date:    Thu Jan 15 16:54:57 EST 2004
>Last-Modified:  Thu Jan 15 16:54:57 EST 2004
>Originator:     Keith Frost
>Release:        204
>Organization:
titan
>Environment:
unix "Linux frost.amnis.com 2.4.20-gentoo-r2 #1 Fri Apr 25 13:53:57 PDT 2003 i686 AMD Athlon(tm) XP 1900+ AuthenticAMD GNU/Linux" (i386-linux) (get-display-depth) = 24
Docs Installed:
("mzc" "help" "r5rs" "mred" "tour" "framework" "teachpack" "intermediate-lambda" "mzscheme" "icons" "mzlib" "tools" "t-y-scheme" "tex2page" "intermediate" "misclib" "drscheme" "beginning-abbr" "beginning" "advanced" "insidemz")
Collections: 
(("/usr/local/plt/collects" ("afm" "doc" "net" "xml" "eopl" "help" "htdp" "html" "lang" "make" "mred" "srfi" "framework" "mzscheme" "games" "icons" "mrlib" "mzlib" "graphics" "setup" "tex2page" "test-suite" "stepper" "web-server" "compiler" "dynext" "hierlist" "defaults" "drscheme" "slibinit" "errortrace" "syntax" "version" "parser-tools" "launcher" "string-constants" "browser")))
 
Human Language: english
 
Teachpack filenames: ()
Computer Language: (("Professional Languages" "(module ...)") (#6(#f write mixed-fraction-e #f #t debug) (default)))
>Description:
The parenthesis-matching algorithm used by DrScheme to highlight
in gray the region between matching parentheses is fooled by 
much of the line-noise that is c code.
Furthermore, DrScheme will not let you enter the quoted string
"{([})]"  (Try it!)
>How-To-Repeat:
(define lookup!
   (c-lambda (scheme-object scheme-object) void
              "unsigned int i, ls, lt; unsigned char *s, *t;
if (SCHEME_STRINGP(___arg1) && SCHEME_STRINGP(___arg2)
                  && (ls = SCHEME_STRLEN_VAL(___arg1))
                  && ((lt = SCHEME_STRLEN_VAL(___arg2)) >= 256))
{
 s = (unsigned char *) SCHEME_STR_VAL(___arg1);
   t = (unsigned char *) SCHEME_STR_VAL(___arg2);
   for (i=0; i<ls; i++) s[i] = t[s[i]] ; }"))

;  Parentheses not properly matched across string boundaries.

(define illegal-string?!?! "{([})];")  ; Type this one in by hand
>Fix:

>Release-Note:

>Audit-Trail:
Responsible-Changed-From-To: eli->robby
Responsible-Changed-By: robby
Responsible-Changed-When: Tue Jun 17 16:47:07 2003
Responsible-Changed-Why:
    rbf

From: Robby Findler <robby@cs.uchicago.edu>
To: Keith Frost <keithf@amnis.com>
Cc: bugs@plt-scheme.org
Subject: Re: all/6322: Parenthesis Matching in Dr Scheme fallible
Date: Tue, 17 Jun 2003 15:46:50 -0500

 Thanks for the report. These are known problems with the paren matching
 code in DrScheme. We would love to have someone tackle this problem and
 if you'd like to we welcome any code you might provide :)
 
 > Furthermore, DrScheme will not let you enter the quoted string
 > "{([})]"  (Try it!)
 
 To enter these kinds of strings, type the closing parens first and then
 the opening ones. Sorry....
 
 Robby
 
Responsible-Changed-From-To: robby->sowens
Responsible-Changed-By: robby
Responsible-Changed-When: Wed Jan 14 14:11:34 2004
Responsible-Changed-Why:
    paren matcher bug (probably good test case fodder)
State-Changed-From-To: open->closed
State-Changed-By: sowens
State-Changed-When: Thu Jan 15 16:54:57 2004
State-Changed-Why:
    Fixed by new paren-matching system
>Unformatted:

