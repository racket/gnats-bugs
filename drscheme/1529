From nobody@cs.rice.edu  Wed Jun 21 02:05:43 2000
Received: from web.cs.rice.edu (web.cs.rice.edu [128.42.1.163])
	by cs.rice.edu (8.9.0/8.9.0) with ESMTP id CAA29857
	for <plt-gnats@cs.rice.edu>; Wed, 21 Jun 2000 02:05:43 -0500 (CDT)
Message-Id: <200006210705.CAA02326@web.cs.rice.edu>
Date: Wed, 21 Jun 2000 02:05:41 -0500 (CDT)
From: bogo@cs.utexas.edu
Reply-To: bogo@cs.utexas.edu
To: plt-gnats@cs.rice.edu
Subject: error with graphicr.ss 

>Number:         1529
>Category:       drscheme
>Synopsis:       error with graphicr.ss
>Confidential:   no
>Severity:       serious
>Priority:       high
>Responsible:    robby
>State:          closed
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Wed Jun 21 07:15:04 GMT 2000
>Last-Modified:  Wed Dec 13 21:01:00 CST 2000
>Originator:     Michael Bogomolny
>Organization:
titan
>Release:        101
>Environment:
Linux
>Description:
here's the output of trying to compile a file:

MzScheme compiler (mzc) version 101, Copyright (c) 1996-99 PLT
"boxdraw.scm":
 Prefix: loading "/usr/home/bogo/cs307/drgraphics.scm"
 Prefix: loading "/usr/local/src/plt/collects/graphics/graphics.ss"
 Prefix: loading "/usr/local/src/plt/collects/graphics/graphicu.ss"
 Prefix: loading "/usr/local/src/plt/collects/mzlib/macro.ss"
 Prefix: loading "/usr/local/src/plt/collects/mzlib/invoke.ss"
 Prefix: loading "/usr/local/src/plt/collects/mzlib/invoker.ss"
 Prefix: loading "/usr/local/src/plt/collects/mzlib/macror.ss"
 Prefix: loading "/usr/local/src/plt/collects/mzlib/letplusr.ss"
 Prefix: loading "/usr/local/src/plt/collects/mzlib/files.ss"
 Prefix: loading "/usr/local/src/plt/collects/mzlib/functios.ss"
 Prefix: loading "/usr/local/src/plt/collects/mzlib/spidey.ss"
 Prefix: loading "/usr/local/src/plt/collects/mzlib/strings.ss"
 Prefix: loading "/usr/local/src/plt/collects/graphics/graphicss.ss"
 Prefix: loading "/usr/local/src/plt/collects/graphics/graphicr.ss"
 [?,?]: Error: Error at elaboration time: compiler: parsing error
 [2,1]: Error: (syntax) Exception at elaboration time: compiler: parsing error
 "/usr/home/bogo/cs307/drgraphics.scm" [8,1]: Error: (syntax) Exception at elaboration time: compiler: parsing error
 "/usr/local/src/plt/collects/graphics/graphicr.ss" [7,19]: Error: (syntax) Unbound signature name: mred^

apparently a fatal bug in graphicr.ss
>How-To-Repeat:
if you give me an email address, I'll send you a file I'm trying
to compile.

>Fix:

>Audit-Trail:

From: Shriram Krishnamurthi <shriram@cs.rice.edu>
To: plt-gnats@cs.rice.edu
Cc:  Subject: all/1529: error with graphicr.ss 
Date: Wed, 21 Jun 2000 11:45:11 -0500 (CDT)

 Here's the code (two files, separated by a line of dashes):
 
 ;(load "initdr.scm")
 (begin-elaboration-time (load "drgraphics.scm"))
 
 ; (a *formula* -180 180 16)
 ; Draw a Lisp tree as connected boxes
 ; tree is the Lisp structure to be drawn
 ; (x,y) is the top-left corner of the drawing
 ; returned value is rightmost position of drawing
 (define (a tree x y size)
   (let ((below (- y (* 2 size)))
         (right 0) (newright x))
     (if (pair? tree)
       (begin
        (aaa x y size)
        (if (null? (car tree))
          (draw-diagonal x y size)
          (begin
           (set! newright (a (car tree) x below size))
           (bb (+ x (/ size 2)) (- y (/ size 2))
                       (+ x (/ size 2)) below)))
        (set! right (max (+ x (* 2 size)) newright))
        (if (null? (cdr tree))
          (begin (aaaa (+ x size) y size)
                 right)
          (begin
           (b (+ x size (/ size 2)) (- y (/ size 2))
                        (+ right size) (- y (/ size 2)))
           (a (cdr tree) (+ right size) y size)) ) )
        (atom-draw tree x y size) ) ))
 
 ; draw a square box.  (x,y) is upper-left corner.
 (define (aa x y size)
   (position-pen x y)
   (draw-line-to (+ x size) y)
   (draw-line-to (+ x size) (- y size))
   (draw-line-to x (- y size))
   (draw-line-to x y)
   (+ x size) )
 
 (define (aaa x y size)
   (aa x y size)
   (aa (+ x size) y size) )
 
 ; draw a diagonal in half of a pair.
 ; (x,y) is upper-left corner
 (define (aaaa x y size)
   (position-pen x (- y size))
   (draw-line-to (+ x size) y) )
 
 ; draw a down arrow
 (define (bb x y xto yto)
   (position-pen x y)
   (draw-line-to xto yto)
   (draw-line-to (- xto 4) (+ yto 4))
   (position-pen xto yto)
   (draw-line-to(+ xto 4) (+ yto 4)) )
 
 ; draw a right arrow
 (define (b x y xto yto)
   (position-pen x y)
   (draw-line-to xto yto)
   (draw-line-to (- xto 4) (+ yto 4))
   (position-pen xto yto)
   (draw-line-to (- xto 4) (- yto 4)) )
 
 ; draw an atom
 (define (atom-draw atm x y size)
   (graphics-text (stringify atm)
                  (- (+ x (/ size 2)) 2)
                  (- y (/ size 2) 6))
   (+ x size))
 
 ; Make the argument into a string
 (define (stringify x)
   (if (string? x)
       x
       (if (symbol? x)
 	  (symbol->string x)
 	  (if (number? x)
 	      (number->string x)
 	      "?"))))
 
 (define (box-draw lst)
   (clear-graphics)
   (a lst -190 190 20)
   'cool!)
 
 ----------------------------------------------------------------------
 
 ; drgraphics.scm       Gordon S. Novak Jr.              07 Sep 99
 
 
 ; Some graphics routines for DrScheme: add the following to your file:
 ; (load "drgraphics.scm")
 
 ; The following is for DrScheme version 100:
 (begin-elaboration-time (require-library "graphics.ss" "graphics"))
 
 ; These routines are compatible with MacGambit and use the
 ; following conventions:
 ;    (0,0) is at the center of the window
 ;    +y is upward.
 ; You can change the size of the drawing window by changing
 ; the parameters *hsize* and *vsize* below before starting.
 
 ; Thanks to Dustin Friesenhahn for adding color.
 
 ; (clear-graphics)           ; erase the drawing window
 ; (position-pen x y)         ; move the pen to (x,y) without drawing
 ; (draw-line-to x y)         ; draw from current pen position to (x,y)
 ; (graphics-text string x y) ; draw the string in the window at (x,y)
 ;    e.g. (graphics-text "Hi, Mom!" 0 0)
 
 (define *hsize* 409)         ; horizontal size of drawing viewport
 (define *vsize* 428)         ; vertical size of drawing viewport
 (define *xoffset* 200)       ; x offset of coordinates
 (define *yoffset* 200)       ; y offset of coordinates
 (define *vp* #f)             ; viewport
 (define *lastpt* #f)         ; last point
 (define *color* (make-rgb 0 0 0))  ; init to black
 
 ; Use the viewport *vp* or open one if needed
 (define (viewport)
   (or *vp*
       (begin
 	(open-graphics)
 	(set! *vp* (open-viewport "CS 307" *hsize* *vsize*))
 	(clear-graphics)
 	*vp*)))
 
 (define (clear-graphics)
   ((clear-viewport (viewport)))
    (position-pen 0 0) )
 
 ; fix a number to be an exact integer
 (define (fix x)
   (if (and (integer? x)
 	   (exact? x))
       x
       (if (exact? x)
 	  (round x)
 	  (inexact->exact (round x)))))
 
 ; convert from upward y to downward y as used by DrScheme
 ; MacGambit uses center of window as (0,0)
 (define (yconvert y) (fix (- *yoffset* y)))
 (define (xconvert x) (fix (+ *xoffset* x)))
 
 ; position the pen to specified point
 (define (position-pen x y)
   (or *vp* (viewport))
   (set! *lastpt* (make-posn (xconvert x) (yconvert y))))
 
 ; draw a line from last point to specified point
 (define (draw-line-to x y)
   (let ((newpt (make-posn (xconvert x) (yconvert y))))
     (begin
       ((draw-line (viewport)) *lastpt* newpt *color*)
       (set! *lastpt* newpt))))
 
 ; draw a string beginning at specified (x, y)
 (define (graphics-text string x y)
   ((draw-string (viewport))
      (make-posn (xconvert x) (yconvert y))
      string *color*))
 
 ; set color to be used in drawing
 ; Each color value must be between 0 and 1.
 (define (set-color! red green blue)
   (if (and (number? red) (>= red 0) (<= red 1)
 	   (number? green) (>= green 0) (<= green 1)
 	   (number? blue) (>= blue 0) (<= blue 1))
       (set! *color* (make-rgb red green blue)) ) )

Responsible-Changed-From-To: steck->robby
Responsible-Changed-By: robby
Responsible-Changed-When: Fri Aug  4 11:36:41 2000
Responsible-Changed-Why:

State-Changed-From-To: open-closed
State-Changed-By: robby
State-Changed-When: Wed Dec 13 21:00:52 2000
State-Changed-Why:


>Unformatted:
