From nobody@cs.rice.edu  Thu Apr  8 09:21:37 1999
Received: from web.cs.rice.edu (web.cs.rice.edu [128.42.1.163])
	by cs.rice.edu (8.9.0/8.9.0) with ESMTP id JAA14789
	for <plt-gnats@cs.rice.edu>; Thu, 8 Apr 1999 09:21:37 -0500 (CDT)
Message-Id: <199904081421.JAA11215@web.cs.rice.edu>
Date: Thu, 8 Apr 1999 09:21:36 -0500 (CDT)
From: mflatt@rice.edu
Reply-To: mflatt@rice.edu
To: plt-gnats@cs.rice.edu
Subject: DrScheme: read followed by read-char 

>Number:         959
>Category:       drscheme
>Synopsis:       DrScheme: read followed by read-char
>Confidential:   no
>Severity:       serious
>Priority:       medium
>Responsible:    robby
>State:          closed
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Thu Apr  8 14:30:03 GMT 1999
>Last-Modified:  Thu Apr 22 15:05:40 MST 1999
>Originator:     Matthew
>Organization:
titan
>Release:        100d4
>Environment:
Linux
>Description:
Evalutaing (read-char) twice in a row in the REPL (each with its own
prompt) gives a new input box for each call. 

When evaluating (read) followed by (read-char), the (read-char) call
gets a leftover character from the interaction with (read). In
particular, there's always at least a newline. But subsequent (read-char)
calls produce new input boxes, even if there were more leftover
characters.
>How-To-Repeat:
> (read-char)
;  new input box - OK?
> (read-char)
;  new input box - OK?
> (read)
;  new input box - OK?
;  enter "1 2" as input
; => 1
> (read-char)
;  no new input box - BAD?
; => #\space
> (read-char)
:  new input box - OK?

>Fix:

>Audit-Trail:

Responsible-Changed-From-To: steck->robby
Responsible-Changed-By: robby
Responsible-Changed-When: Thu Apr  8 09:37:00 1999
Responsible-Changed-Why:

State-Changed-From-To: open-closed
State-Changed-By: robby
State-Changed-When: Thu Apr 22 15:05:39 1999
State-Changed-Why:


>Unformatted:
