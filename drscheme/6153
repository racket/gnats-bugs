From nobody@champlain.ccs.neu.edu  Sun Mar 16 02:00:02 2003
Received: (from nobody@localhost)
	by champlain.ccs.neu.edu (8.9.3/8.8.7) id CAA15260
	for bugs@plt-scheme.org; Sun, 16 Mar 2003 02:00:02 -0500
Message-Id: <200303160700.CAA15260@champlain.ccs.neu.edu>
Date: Sun, 16 Mar 2003 02:00:02 -0500
From: schlie@attbi.com
To: bugs@plt-scheme.org
Subject: DrScheme feature request: to be able to easily display graphical frame ouput in interaction frame.

>Number:         6153
>Category:       drscheme
>Synopsis:       snip->viewport and interactions window -- drscheme runs forever
>Confidential:   no
>Severity:       serious
>Priority:       medium
>Responsible:    robby
>State:          open
>Class:          change-request
>Submitter-Id:   unknown
>Arrival-Date:   Sun Mar 16 02:05:00 EST 2003
>Closed-Date:    
>Last-Modified:  Mon Mar 17 11:01:21 EST 2003
>Originator:     Paul Schlie
>Release:        203.6
>Organization:
plt
>Environment:
mac-ppc-osx
>Description:
As in summary, and apologize if it's already easily accomplishable;
but it would be nice to be able to to easily define an abstract
graphical <viewport> region, draw some stuff into it, and then
(display <viewport>) it; thereby inserting it into the "interaction"
output frame, rather than having to open a distinct window for graphic
output (as a separate window often gets in the way when only simple
graphical output is desired (like for drawing simple graphs, etc.)

And/Or it may even be nice to be able to specify the top frame,
traditionally the "definitions" frame, within a split window be
designated as a user-defined graphical/text frame which can be
easily drawn to using the viewport graphics library for example.
>How-To-Repeat:

>Fix:

>Release-Note:

>Audit-Trail:

From: Robby Findler <robby@cs.uchicago.edu>
To: schlie@attbi.com
Cc: bugs@plt-scheme.org
Subject: Re: all/6153: DrScheme feature request: to be able to easily display graphical frame ouput in interaction frame.
Date: Sun, 16 Mar 2003 07:51:40 -0600

 At Sun, 16 Mar 2003 02:00:02 -0500, schlie@attbi.com wrote:
 > As in summary, and apologize if it's already easily accomplishable;
 > but it would be nice to be able to to easily define an abstract
 > graphical <viewport> region, draw some stuff into it, and then
 > (display <viewport>) it; thereby inserting it into the "interaction"
 > output frame, rather than having to open a distinct window for graphic
 > output (as a separate window often gets in the way when only simple
 > graphical output is desired (like for drawing simple graphs, etc.)
 
 Sadly, this is not possible at the moment -- if you really needed that
 rather than using draw-string, you could build it with
 make-custom-output-port.
  
 > And/Or it may even be nice to be able to specify the top frame,
 > traditionally the "definitions" frame, within a split window be
 > designated as a user-defined graphical/text frame which can be
 > easily drawn to using the viewport graphics library for example.
 
 This isn't possible either, but if you look at the draw2.ss teachpack,
 you'll find something similar. I made a quick look and I didn't find
 the docs for it, but Matthew may be able to point you to them.
 
 Hth,
 Robby

From: Paul Schlie <schlie@attbi.com>
To: Robby Findler <robby@cs.uchicago.edu>
Cc: <bugs@plt-scheme.org>
Subject: Re: all/6153: DrScheme feature request: to be able to easily
	display graphical frame ouput in interaction frame.
Date: Sun, 16 Mar 2003 11:08:41 -0500

 Sorry, I likely wasn't clear enough, please see annotations below:
 
 on 3/16/03 8:51 AM, Robby Findler wrote:
 >
 > At Sun, 16 Mar 2003 02:00:02 -0500, schlie@attbi.com wrote:
 >> As in summary, and apologize if it's already easily accomplishable;
 >> but it would be nice to be able to to easily define an abstract
 >> graphical <viewport> region, draw some stuff into it, and then
 >> (display <viewport>) it; thereby inserting it into the "interaction"
 >> output frame, rather than having to open a distinct window for graphic
 >> output (as a separate window often gets in the way when only simple
 >> graphical output is desired (like for drawing simple graphs, etc.)
 > 
 > Sadly, this is not possible at the moment -- if you really needed
 > that rather than using draw-string, you could build it with
 > make-custom-output-port.
 
 - draw-string? What I meant to ask for is likely more like
   (copy-viewport ...), but am missing access to the built-in default
   view-port references to the "definitions" and "interaction" display
   frames; and with respect to the "interaction" frame, would like a
   method which by default would copy a source viewport pixmap to the
   "present cursor position" of the destination viewport, which would
   be useful if the destination viewport were the "interaction" frame
   for example.
 
 > 
 >> And/Or it may even be nice to be able to specify the top frame,
 >> traditionally the "definitions" frame, within a split window be
 >> designated as a user-defined graphical/text frame which can be
 >> easily drawn to using the viewport graphics library for example.
 > 
 > This isn't possible either, but if you look at the draw2.ss teachpack,
 > you'll find something similar. I made a quick look and I didn't find
 > the docs for it, but Matthew may be able to point you to them.
 
 - thanks, however if the above were more generally available, the
   facility could be used for both objectives I believe.
 
 > 
 > Hth,
 > Robby
 

From: Robby Findler <robby@cs.uchicago.edu>
To: Paul Schlie <schlie@attbi.com>
Cc: bugs@plt-scheme.org
Subject: Re: all/6153: DrScheme feature request: to be able to easily
	display graphical frame ouput in interaction frame.
Date: Sun, 16 Mar 2003 10:27:59 -0600

 At Sun, 16 Mar 2003 11:08:41 -0500, Paul Schlie wrote:
 > Sorry, I likely wasn't clear enough, please see annotations below:
 > 
 > on 3/16/03 8:51 AM, Robby Findler wrote:
 > >
 > > At Sun, 16 Mar 2003 02:00:02 -0500, schlie@attbi.com wrote:
 > >> As in summary, and apologize if it's already easily accomplishable;
 > >> but it would be nice to be able to to easily define an abstract
 > >> graphical <viewport> region, draw some stuff into it, and then
 > >> (display <viewport>) it; thereby inserting it into the "interaction"
 > >> output frame, rather than having to open a distinct window for graphic
 > >> output (as a separate window often gets in the way when only simple
 > >> graphical output is desired (like for drawing simple graphs, etc.)
 > > 
 > > Sadly, this is not possible at the moment -- if you really needed
 > > that rather than using draw-string, you could build it with
 > > make-custom-output-port.
 > 
 > - draw-string? What I meant to ask for is likely more like
 >   (copy-viewport ...), but am missing access to the built-in default
 >   view-port references to the "definitions" and "interaction" display
 >   frames; and with respect to the "interaction" frame, would like a
 >   method which by default would copy a source viewport pixmap to the
 >   "present cursor position" of the destination viewport, which would
 >   be useful if the destination viewport were the "interaction" frame
 >   for example.
 
 Oh, I see. turn it into a snip with viewport->snip.
 
 Robby

From: Paul Schlie <schlie@attbi.com>
To: Robby Findler <robby@cs.uchicago.edu>
Cc: <bugs@plt-scheme.org>
Subject: Re: all/6153: DrScheme feature request: to be able to easily
	display graphical frame ouput in interaction frame.
Date: Sun, 16 Mar 2003 16:38:21 -0500

 Ok, getting close, sorry if I'm I should have been able to find this
 my self, but then how do I send the snip to the interactive display
 frame at the current cursor location? (and/or to a user defined frame
 Displayed in place of the "definitions frame"?)
 
 So then something like this should work:
 
 (require (lib "graphics.ss" "graphics")
 
 (open-graphics)
 
 (define vp (open-pixmap "pm" 300 300))
 
 ((draw-line vp) (make-posn 30 30) (make-posn 100 100))
 
 (send <?display-snip?> <?interaction-frame?> (viewport->snip vp))
 
 What are the correct symbol/names for:
 
  <?display-snip?> & <?interaction frame?> &/ <?definitions-frame?>
 
 Thanks again for your help,
 
 -paul-
 
 on 3/16/03 11:27 AM, Robby Findler wrote:
 > ...
 > Oh, I see. turn it into a snip with viewport->snip.
 > 
 > Robby
 

From: Robby Findler <robby@cs.uchicago.edu>
To: Paul Schlie <schlie@attbi.com>
Cc: bugs@plt-scheme.org
Subject: Re: all/6153: DrScheme feature request: to be able to easily
	display graphical frame ouput in interaction frame.
Date: Sun, 16 Mar 2003 16:08:00 -0600

 I'm not sure where you're putting it. If you have your own editor
 frame, with an editor-canvas and a text in it, you can use the text's
 insert method. If you want them to show up in the interactions window,
 you cannot control where they appear, just like you cannot control
 where any value gets printed in the interactions window. If you want
 them to appear in the definitions window, probably the easiest thing is
 to let one be the result of a program and then copy and paste it to the
 definitions window. Note that it will not be a viewport anymore, but
 just a constant picture, once you've done that.
 
 I'm not sure if I'm getting what you want to do tho, but I hope some of
 that is useful.
 
 Robby
 
 At Sun, 16 Mar 2003 16:38:21 -0500, Paul Schlie wrote:
 > Ok, getting close, sorry if I'm I should have been able to find this
 > my self, but then how do I send the snip to the interactive display
 > frame at the current cursor location? (and/or to a user defined frame
 > Displayed in place of the "definitions frame"?)
 > 
 > So then something like this should work:
 > 
 > (require (lib "graphics.ss" "graphics")
 > 
 > (open-graphics)
 > 
 > (define vp (open-pixmap "pm" 300 300))
 > 
 > ((draw-line vp) (make-posn 30 30) (make-posn 100 100))
 > 
 > (send <?display-snip?> <?interaction-frame?> (viewport->snip vp))
 > 
 > What are the correct symbol/names for:
 > 
 >  <?display-snip?> & <?interaction frame?> &/ <?definitions-frame?>
 > 
 > Thanks again for your help,
 > 
 > -paul-
 > 
 > on 3/16/03 11:27 AM, Robby Findler wrote:
 > > ...
 > > Oh, I see. turn it into a snip with viewport->snip.
 > > 
 > > Robby
 > 
 > 
 

From: Robby Findler <robby@cs.uchicago.edu>
To: Paul Schlie <schlie@attbi.com>
Cc: bugs@plt-scheme.org
Subject: Re: all/6153: DrScheme feature request: to be able to easily
	display graphical frame ouput in interaction frame.
Date: Sun, 16 Mar 2003 16:09:59 -0600

 Here is on program that might be useful to you.
 
 (require (lib "graphics.ss" "graphics")
 
 (open-graphics)
 
 (define vp (open-pixmap "pm" 300 300))
 
 ((draw-line vp) (make-posn 30 30) (make-posn 100 100))
 
 (define f (instantiate frame% () (label "frame")))
 (define t (instantiate text% ()))
 (define ec (instantiate editor-canvas% () (parent f) (editor t)))
 (send t insert (viewport->snip vp))
 (send f show #t)
 
 Robby
 
 At Sun, 16 Mar 2003 16:38:21 -0500, Paul Schlie wrote:
 > Ok, getting close, sorry if I'm I should have been able to find this
 > my self, but then how do I send the snip to the interactive display
 > frame at the current cursor location? (and/or to a user defined frame
 > Displayed in place of the "definitions frame"?)
 > 
 > So then something like this should work:
 > 
 > (require (lib "graphics.ss" "graphics")
 > 
 > (open-graphics)
 > 
 > (define vp (open-pixmap "pm" 300 300))
 > 
 > ((draw-line vp) (make-posn 30 30) (make-posn 100 100))
 > 
 > (send <?display-snip?> <?interaction-frame?> (viewport->snip vp))
 > 
 > What are the correct symbol/names for:
 > 
 >  <?display-snip?> & <?interaction frame?> &/ <?definitions-frame?>
 > 
 > Thanks again for your help,
 > 
 > -paul-
 > 
 > on 3/16/03 11:27 AM, Robby Findler wrote:
 > > ...
 > > Oh, I see. turn it into a snip with viewport->snip.
 > > 
 > > Robby
 > 
 > 
 

From: Paul Schlie <schlie@attbi.com>
To: Robby Findler <robby@cs.uchicago.edu>
Cc: <bugs@plt-scheme.org>
Subject: Re: all/6153: DrScheme feature request: to be able to easily
	display graphical frame output in interaction frame.
Date: Sun, 16 Mar 2003 19:46:28 -0500

 I'd like to put/place/display "it" (my viewport/pixmap's) at the
 current cursor location within the "interaction" window frame (where
 ever that may be), just as text boxes are inserted upon the execution
 of a (display ...) function. (how can I do that?)
 
 Or substitute my own view port in place of the default "definitions"
 window frame within DrScheme's split/dual frame window. (how can I do
 that?)
 
 (I suspect that the misunderstanding is that I'm not trying to
  define my own app, or replace the functionality of DrScheme; but
  just trying to access/utilize it's existing facilities more flexibly.)
 
 Thanks, -paul-
 
 
 on 3/16/03 5:08 PM, Robby Findler wrote:
 > I'm not sure where you're putting it. If you have your own editor
 > frame, with an editor-canvas and a text in it, you can use the text's
 > insert method. If you want them to show up in the interactions window,
 > you cannot control where they appear, just like you cannot control
 > where any value gets printed in the interactions window. If you want
 > them to appear in the definitions window, probably the easiest thing is
 > to let one be the result of a program and then copy and paste it to the
 > definitions window. Note that it will not be a viewport anymore, but
 > just a constant picture, once you've done that.
 > 
 > I'm not sure if I'm getting what you want to do tho, but I hope some of
 > that is useful.
 > 
 > Robby
 

From: Paul Schlie <schlie@attbi.com>
To: Robby Findler <robby@cs.uchicago.edu>
Cc: <bugs@plt-scheme.org>
Subject: Re: all/6153: DrScheme feature request: to be able to easily
	display graphical frame output in interaction frame.
Date: Sun, 16 Mar 2003 20:04:41 -0500

 For example:
 
 (plot y (x -pi +pi) (sin x))
 
 -> [ plot of y = sin x, in "interaction" or upper split window,
      as a graphical result ]
 
 Like in Matlab or Mathematica for example.
 
 

From: Robby Findler <robby@cs.uchicago.edu>
To: Paul Schlie <schlie@attbi.com>
Cc: bugs@plt-scheme.org
Subject: Re: all/6153: DrScheme feature request: to be able to easily
	display graphical frame output in interaction frame.
Date: Sun, 16 Mar 2003 22:04:57 -0600

 DrScheme isn't set up for that kind of thing -- providing such
 abstractions makes it real easy to screw up DrScheme. It's hard to be
 secure against the user's program (which drscheme currently is) if such
 things were allowed. Still, if you really did want to do such things,
 you would have to make a tool. It basically lets you do anything (there
 is no protection against tools, since they are not considered the
 user's program).
 
 Beyond being able to copy and paste those snips, or using tools, I
 don't have anything to offer.
 
 Sorry,
 Robby
 
 At Sun, 16 Mar 2003 19:46:28 -0500, Paul Schlie wrote:
 > I'd like to put/place/display "it" (my viewport/pixmap's) at the
 > current cursor location within the "interaction" window frame (where
 > ever that may be), just as text boxes are inserted upon the execution
 > of a (display ...) function. (how can I do that?)
 > 
 > Or substitute my own view port in place of the default "definitions"
 > window frame within DrScheme's split/dual frame window. (how can I do
 > that?)
 > 
 > (I suspect that the misunderstanding is that I'm not trying to
 >  define my own app, or replace the functionality of DrScheme; but
 >  just trying to access/utilize it's existing facilities more flexibly.)
 > 
 > Thanks, -paul-
 > 
 > 
 > on 3/16/03 5:08 PM, Robby Findler wrote:
 > > I'm not sure where you're putting it. If you have your own editor
 > > frame, with an editor-canvas and a text in it, you can use the text's
 > > insert method. If you want them to show up in the interactions window,
 > > you cannot control where they appear, just like you cannot control
 > > where any value gets printed in the interactions window. If you want
 > > them to appear in the definitions window, probably the easiest thing is
 > > to let one be the result of a program and then copy and paste it to the
 > > definitions window. Note that it will not be a viewport anymore, but
 > > just a constant picture, once you've done that.
 > > 
 > > I'm not sure if I'm getting what you want to do tho, but I hope some of
 > > that is useful.
 > > 
 > > Robby
 > 
 > 
 

From: Robby Findler <robby@cs.uchicago.edu>
To: Paul Schlie <schlie@attbi.com>
Cc: bugs@plt-scheme.org
Subject: Re: all/6153: DrScheme feature request: to be able to easily
	display graphical frame output in interaction frame.
Date: Sun, 16 Mar 2003 23:15:36 -0600

 This you can do already with the tools we've talked about: create a
 viewport with the plot and then call viewport->snip on it. The result
 will appear in the interactions window.
 
 Robby
 
 At Sun, 16 Mar 2003 20:04:41 -0500, Paul Schlie wrote:
 > For example:
 > 
 > (plot y (x -pi +pi) (sin x))
 > 
 > -> [ plot of y = sin x, in "interaction" or upper split window,
 >      as a graphical result ]
 > 
 > Like in Matlab or Mathematica for example.
 > 
 > 
 > 
 

From: Robby Findler <robby@cs.uchicago.edu>
To: Paul Schlie <schlie@attbi.com>
Cc: bugs@plt-scheme.org
Subject: Re: all/6153: DrScheme feature request: to be able to easily
	display graphical frame output in interaction frame.
Date: Mon, 17 Mar 2003 07:19:54 -0600

 Here's some example code for this particular problem. It uses Scheme's
 function to represent matchematical functions directly, rather than
 building them up from the y=sin x style notation. 
 
 Is that what you were looking for?
 
 (require (lib "graphics.ss" "graphics"))
 (open-graphics)
 
 ;; plot : number number number number number number (number -> number) -> snip
 ;; plots the function f from x-start to x-end and displays the
 ;; result in a snip that is clipped from y-start to y-end
 ;; the snip is x-size by y-size pixels (and the graph is stretched to fit)
 (define (plot x-start x-end x-size y-start y-end y-size f)
   (let* ([x-inc (/ (- x-end x-start) x-size)]
          [vp (open-pixmap "plot" x-size y-size)]
          [plot-pixel (draw-pixel vp)])
     (let loop ([x x-start])
       (when (<= x x-end)
         (let ([y (f x)])
           (plot-pixel (make-posn 
                        (* (/ (- x x-start) (- x-end x-start)) x-size)
                        (* (/ (- y y-start) (- y-end y-start)) y-size)))
           (loop (+ x x-inc)))))
     (viewport->snip vp)))
 
 (plot -4 4 200
       -4 4 200
       (lambda (x) (+ (* x x x) (* 2 x x))))
 
 At Sun, 16 Mar 2003 20:04:41 -0500, Paul Schlie wrote:
 > For example:
 > 
 > (plot y (x -pi +pi) (sin x))
 > 
 > -> [ plot of y = sin x, in "interaction" or upper split window,
 >      as a graphical result ]
 > 
 > Like in Matlab or Mathematica for example.
 > 
 > 
 > 
 

From: Paul Schlie <schlie@attbi.com>
To: Robby Findler <robby@cs.uchicago.edu>
Cc: <bugs@plt-scheme.org>
Subject: Re: all/6153: DrScheme feature request: to be able to easily
	display graphical frame output in interaction frame.
Date: Mon, 17 Mar 2003 10:11:23 -0500

 Yes, thank you; I'm sorry I didn't realize that if a function evaluated
 from within the interaction window frame returned a "snip", that DrScheme
 would actually display it graphically in the interaction window.
 
 Within a split-definitions/interactions window, if I copy your "plot"
 function definition from (require ...) to (viewport->snip ...) into the
 definitions frame, click the Execute button, and then enter your (plot ...)
 function call into the interactions window, I get a nice little curve
 displayed in response in the interaction window.
 
 However the lower right of the interaction window indicates that the
 program is being continuously reevaluated, and if I enter and evaluate
 (plot ...) in interaction window again, DrScheme seems to lock up?
 
 Any suggestions? Thanks again,
 
 -paul-
 
 
 on 3/17/03 8:19 AM, Robby Findler wrote:
 >
 > Here's some example code for this particular problem. It uses Scheme's
 > function to represent matchematical functions directly, rather than
 > building them up from the y=sin x style notation.
 > 
 > Is that what you were looking for?
 > 
 > (require (lib "graphics.ss" "graphics"))
 > (open-graphics)
 > 
 > ;; plot : number number number number number number (number -> number) -> snip
 > ;; plots the function f from x-start to x-end and displays the
 > ;; result in a snip that is clipped from y-start to y-end
 > ;; the snip is x-size by y-size pixels (and the graph is stretched to fit)
 > (define (plot x-start x-end x-size y-start y-end y-size f)
 > (let* ([x-inc (/ (- x-end x-start) x-size)]
 >        [vp (open-pixmap "plot" x-size y-size)]
 >        [plot-pixel (draw-pixel vp)])
 >   (let loop ([x x-start])
 >     (when (<= x x-end)
 >       (let ([y (f x)])
 >         (plot-pixel (make-posn
 >                      (* (/ (- x x-start) (- x-end x-start)) x-size)
 >                      (* (/ (- y y-start) (- y-end y-start)) y-size)))
 >         (loop (+ x x-inc)))))
 >   (viewport->snip vp)))
 > 
 > (plot -4 4 200
 >     -4 4 200
 >     (lambda (x) (+ (* x x x) (* 2 x x))))
 > 
 > At Sun, 16 Mar 2003 20:04:41 -0500, Paul Schlie wrote:
 >> For example:
 >> 
 >> (plot y (x -pi +pi) (sin x))
 >> 
 >> -> [ plot of y = sin x, in "interaction" or upper split window,
 >>      as a graphical result ]
 >> 
 >> Like in Matlab or Mathematica for example.
 >> 
 > 
 

From: Robby Findler <robby@cs.uchicago.edu>
To: Paul Schlie <schlie@attbi.com>
Cc: bugs@plt-scheme.org
Subject: Re: all/6153: DrScheme feature request: to be able to easily
	display graphical frame output in interaction frame.
Date: Mon, 17 Mar 2003 09:38:10 -0600

 At Mon, 17 Mar 2003 10:11:23 -0500, Paul Schlie wrote:
 > Yes, thank you; I'm sorry I didn't realize that if a function evaluated
 > from within the interaction window frame returned a "snip", that DrScheme
 > would actually display it graphically in the interaction window.
 > 
 > Within a split-definitions/interactions window, if I copy your "plot"
 > function definition from (require ...) to (viewport->snip ...) into the
 > definitions frame, click the Execute button, and then enter your (plot ...)
 > function call into the interactions window, I get a nice little curve
 > displayed in response in the interaction window.
 
 You can also just put all of it in the definitions window. DrScheme
 shows the value of any expressions that have values in the interactions
 window, when you execute. That's how I developed it.
 
 > However the lower right of the interaction window indicates that the
 > program is being continuously reevaluated, and if I enter and evaluate
 > (plot ...) in interaction window again, DrScheme seems to lock up?
 
 This appears to be a bug in DrScheme. I'll look into it.
 
 To work around the problem, I just closed the viewport after extracting
 a snip. Below is the revised program. I also now draw lines between
 successive points, rather than just plotting the points. This is better
 (esp for the second plot) but it would be better still to sample the
 curve more often in some more clever way, I suspect.
 
 Anyways, enjoy. Still a long way to go before getting to Mathematica!
 
 (require (lib "graphics.ss" "graphics"))
 (open-graphics)
 
 ;; plot : number number number number number number (number -number) -> snip
 ;; plots the function f from x-start to x-end and displays the
 ;; result in a snip that is clipped from y-start to y-end
 ;; the snip is x-size by y-size pixels (and the graph is stretched to fit)
 (define (plot x-start x-end x-size y-start y-end y-size f)
   (let* ([x-inc (/ (- x-end x-start) x-size)]
          [vp (open-pixmap "plot" x-size y-size)]
          [line (draw-line vp)])
     (let loop ([x x-start]
                [last-x #f]
                [last-y #f])
       (when (<= x x-end)
         (let ([y (f x)])
           (let ([this-x (* (/ (- x x-start) (- x-end x-start)) x-size)]
                 [this-y (* (/ (- y y-start) (- y-end y-start)) y-size)])
             (when (and last-y last-x)
               (line (make-posn last-x last-y)
                     (make-posn this-x this-y)))
             (loop (+ x x-inc)
                   this-x
                   this-y)))))
     (begin0 (viewport->snip vp)
             (close-viewport vp))))
 
 (plot -4 4 200
       -4 4 200
       (lambda (x) (+ (* x x x) (* 2 x x))))
 
 (plot -12 12 400
       -3 3 100
       (lambda (x) (sin (* x x))))
Responsible-Changed-From-To: steck->robby
Responsible-Changed-By: robby
Responsible-Changed-When: Mon Mar 17 11:01:21 2003
Responsible-Changed-Why:
    rbf
>Unformatted:

