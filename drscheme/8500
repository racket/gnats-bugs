From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Thu Jan 25 15:16:14 2007
Received: from wx-out-0506.google.com (wx-out-0506.google.com [66.249.82.232])
	by champlain.ccs.neu.edu (8.13.8/8.13.7) with ESMTP id l0PKGD8J031462
	for <bugs@bugs.plt-scheme.org>; Thu, 25 Jan 2007 15:16:13 -0500
Message-Id: <200701252016.l0PKG9SO031457@champlain.ccs.neu.edu>
Date: Thu, 25 Jan 2007 15:16:09 -0500
From: sbloch@adelphi.edu
To: bugs@plt-scheme.org
Subject: zero-size images

>Number:         8500
>Category:       drscheme
>Synopsis:       zero-size images
>Class:          change-request
>Responsible:    robby
>Severity:       non-critical
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Thu Jan 25 15:20:01 -0500 2007
>Closed-Date:    Wed Jun 30 07:56:10 -0400 2010
>Last-Modified:  Wed Jun 30 07:56:10 -0400 2010
>Originator:     Stephen Bloch
>Organization:
plt
>Submitter-Id:   unknown
>Release:        360
>Environment:
macosx "Darwin o48410-Bloch-iMac-Core-2-Duo.local 8.8.1 Darwin Kernel Version 8.8.1: Mon Sep 25 19:42:00 PDT 2006; root:xnu-792.13.8.obj~1/RELEASE_I386 i386 i386" (i386-macosx) (get-display-depth) = 32
Docs Installed:
(("/Applications/PLT Scheme v360/doc" "r5rs" "mzscheme" "mred" "help" "tour" "drscheme" "srfi" "mzlib" "misclib" "mrlib" "framework" "foreign" "mzc" "tools" "insidemz" "web-server" "swindle" "plot" "release-notes" "t-y-scheme" "tex2page" "beginning" "beginning-abbr" "intermediate" "intermediate-lambda" "advanced" "teachpack" "teachpack-htdc" "profj-beginner" "profj-intermediate" "profj-advanced"))
Human Language: english
(current-memory-use) -1061834752

Collections:
(("/Users/sbloch/Library/PLT Scheme/360/collects" non-existent-path) ("/Applications/PLT Scheme v360/collects" ".DS_Store" "afm" "algol60" "browser" "compiler" "config" "defaults" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "framework" "frtime" "games" "graphics" "help" "hierlist" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mzlib" "mzscheme" "mztake" "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profj" "profjBoxes" "profjWizard" "r5rs" "readline" "setup" "sgl" "slatex" "slibinit" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-suite" "tex2page" "texpict" "trace" "version" "web-server" "xml"))
Teachpack filenames: (#<path:/Applications/PLT Scheme v360/collects/teachpack/htdp/image.ss> #<path:/Applications/PLT Scheme v360/collects/teachpack/tiles.ss> #<path:/Applications/PLT Scheme v360/collects/teachpack/sb-world.ss>)
Computer Language: (("Teaching Languages" "How to Design Programs" "Beginning Student") (#6(#t constructor repeating-decimal #f #t none) #f))
>Description:
Suppose I'm trying (for pedagogical purposes) to write a function that moves a picture to the right by a specified number of pixels.  My students have already seen image-beside and rectangle, so a natural way to do it is to put the given picture "beside" an invisible rectangle of the specified size.  Unfortunately, this doesn't work if the specified size happens to be zero, because "rectangle", "circle", etc. insist on positive numbers for their sizes.
Is there a good implementation reason that images with one or both dimensions equal to zero are outlawed?

A less serious issue: It doesn't make sense to talk about a rectangle with non-integer dimensions, but I think it WOULD make sense to allow a circle to have non-integer radius -- this could actually affect the coloring of some pixels.
>How-To-Repeat:
Using my "tiles" teachpack (see http://home.adelphi.edu/sbloch/class/160/tiles.plt)...

(define (move-right pic pixels)
  (image-beside (rectangle pixels 1 "solid" "white") pic))
>Fix:
>Audit-Trail:
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: sbloch@adelphi.edu, bugs@plt-scheme.org
Cc: 
Subject: Re: [plt-bug] all/8500: zero-size images
Date: Thu, 25 Jan 2007 15:27:13 -0500

 On Jan 25, 2007, at 3:20 PM, sbloch@adelphi.edu wrote:
 
 > A new problem report is waiting at
 >   http://bugs.plt-scheme.org/query/?cmd=view&pr=8500
 >
 > Reported by Stephen Bloch for release: 360
 >
 > *** Description:
 > Suppose I'm trying (for pedagogical purposes) to write a function  
 > that moves a picture to the right by a specified number of pixels.   
 > My students have already seen image-beside and rectangle, so a  
 > natural way to do it is to put the given picture "beside" an  
 > invisible rectangle of the specified size.  Unfortunately, this  
 > doesn't work if the specified size happens to be zero, because  
 > "rectangle", "circle", etc. insist on positive numbers for their  
 > sizes.
 > Is there a good implementation reason that images with one or both  
 > dimensions equal to zero are outlawed?
 
 I have not thought about that.
 
 >
 > A less serious issue: It doesn't make sense to talk about a  
 > rectangle with non-integer dimensions, but I think it WOULD make  
 > sense to allow a circle to have non-integer radius -- this could  
 > actually affect the coloring of some pixels.
 
 
 I am working on allowing arbitrary numbers.
 
 
 >
 > *** How to repeat:
 > Using my "tiles" teachpack (see http://home.adelphi.edu/sbloch/ 
 > class/160/tiles.plt)...
 >
 > (define (move-right pic pixels)
 >   (image-beside (rectangle pixels 1 "solid" "white") pic))
 >
 > *** Environment:
 > macosx "Darwin o48410-Bloch-iMac-Core-2-Duo.local 8.8.1 Darwin  
 > Kernel Version 8.8.1: Mon Sep 25 19:42:00 PDT 2006;  
 > root:xnu-792.13.8.obj~1/RELEASE_I386 i386 i386" (i386-macosx) (get- 
 > display-depth) = 32
 > Docs Installed:
 > (("/Applications/PLT Scheme v360/doc" "r5rs" "mzscheme" "mred"  
 > "help" "tour" "drscheme" "srfi" "mzlib" "misclib" "mrlib"  
 > "framework" "foreign" "mzc" "tools" "insidemz" "web-server"  
 > "swindle" "plot" "release-notes" "t-y-scheme" "tex2page"  
 > "beginning" "beginning-abbr" "intermediate" "intermediate-lambda"  
 > "advanced" "teachpack" "teachpack-htdc" "profj-beginner" "profj- 
 > intermediate" "profj-advanced"))
 > Human Language: english
 > (current-memory-use) -1061834752
 >
 > Collections:
 > (("/Users/sbloch/Library/PLT Scheme/360/collects" non-existent- 
 > path) ("/Applications/PLT Scheme v360/collects" ".DS_Store" "afm"  
 > "algol60" "browser" "compiler" "config" "defaults" "drscheme"  
 > "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "framework"  
 > "frtime" "games" "graphics" "help" "hierlist" "htdch" "htdp" "html"  
 > "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger"  
 > "make" "mred" "mrlib" "mzlib" "mzscheme" "mztake" "net" "openssl"  
 > "parser-tools" "planet" "plot" "preprocessor" "profj" "profjBoxes"  
 > "profjWizard" "r5rs" "readline" "setup" "sgl" "slatex" "slibinit"  
 > "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax"  
 > "syntax-color" "teachpack" "test-suite" "tex2page" "texpict"  
 > "trace" "version" "web-server" "xml"))
 > Teachpack filenames: (#<path:/Applications/PLT Scheme v360/collects/ 
 > teachpack/htdp/image.ss> #<path:/Applications/PLT Scheme v360/ 
 > collects/teachpack/tiles.ss> #<path:/Applications/PLT Scheme v360/ 
 > collects/teachpack/sb-world.ss>)
 > Computer Language: (("Teaching Languages" "How to Design Programs"  
 > "Beginning Student") (#6(#t constructor repeating-decimal #f #t  
 > none) #f))
 >
 
From: "Robby Findler" <robby.findler@gmail.com>
To: sbloch@adelphi.edu, bugs@plt-scheme.org
Cc: nobody@plt-scheme.org, eli@plt-scheme.org, matthias@plt-scheme.org,
        sk@plt-scheme.org, mflatt@plt-scheme.org, robby@plt-scheme.org,
        clements@plt-scheme.org, jay@plt-scheme.org, meunier@plt-scheme.org,
        sowens@plt-scheme.org, kathyg@plt-scheme.org, awick@plt-scheme.org,
        goldberg@plt-scheme.org, dskippy@plt-scheme.org, jacobm@plt-scheme.org,
        cce@plt-scheme.org, dalev@plt-scheme.org, samth@plt-scheme.org,
        ryanc@plt-scheme.org
Subject: Re: [plt-bug] all/8500: zero-size images
Date: Thu, 25 Jan 2007 15:27:25 -0600

 Images have to have some size or they don't show up. It would be
 confusing to allow it.
 
 For that function, you could just use overlay with an invisible image
 that was the size of the sum of the delta and the original image.
 
 Robby
 
 On 1/25/07, sbloch@adelphi.edu <sbloch@adelphi.edu> wrote:
 > A new problem report is waiting at
 >   http://bugs.plt-scheme.org/query/?cmd=view&pr=8500
 >
 > Reported by Stephen Bloch for release: 360
 >
 > *** Description:
 > Suppose I'm trying (for pedagogical purposes) to write a function that moves a picture to the right by a specified number of pixels.  My students have already seen image-beside and rectangle, so a natural way to do it is to put the given picture "beside" an invisible rectangle of the specified size.  Unfortunately, this doesn't work if the specified size happens to be zero, because "rectangle", "circle", etc. insist on positive numbers for their sizes.
 > Is there a good implementation reason that images with one or both dimensions equal to zero are outlawed?
 >
 > A less serious issue: It doesn't make sense to talk about a rectangle with non-integer dimensions, but I think it WOULD make sense to allow a circle to have non-integer radius -- this could actually affect the coloring of some pixels.
 >
 > *** How to repeat:
 > Using my "tiles" teachpack (see http://home.adelphi.edu/sbloch/class/160/tiles.plt)...
 >
 > (define (move-right pic pixels)
 >   (image-beside (rectangle pixels 1 "solid" "white") pic))
 >
 > *** Environment:
 > macosx "Darwin o48410-Bloch-iMac-Core-2-Duo.local 8.8.1 Darwin Kernel Version 8.8.1: Mon Sep 25 19:42:00 PDT 2006; root:xnu-792.13.8.obj~1/RELEASE_I386 i386 i386" (i386-macosx) (get-display-depth) = 32
 > Docs Installed:
 > (("/Applications/PLT Scheme v360/doc" "r5rs" "mzscheme" "mred" "help" "tour" "drscheme" "srfi" "mzlib" "misclib" "mrlib" "framework" "foreign" "mzc" "tools" "insidemz" "web-server" "swindle" "plot" "release-notes" "t-y-scheme" "tex2page" "beginning" "beginning-abbr" "intermediate" "intermediate-lambda" "advanced" "teachpack" "teachpack-htdc" "profj-beginner" "profj-intermediate" "profj-advanced"))
 > Human Language: english
 > (current-memory-use) -1061834752
 >
 > Collections:
 > (("/Users/sbloch/Library/PLT Scheme/360/collects" non-existent-path) ("/Applications/PLT Scheme v360/collects" ".DS_Store" "afm" "algol60" "browser" "compiler" "config" "defaults" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "framework" "frtime" "games" "graphics" "help" "hierlist" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mzlib" "mzscheme" "mztake" "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profj" "profjBoxes" "profjWizard" "r5rs" "readline" "setup" "sgl" "slatex" "slibinit" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-suite" "tex2page" "texpict" "trace" "version" "web-server" "xml"))
 > Teachpack filenames: (#<path:/Applications/PLT Scheme v360/collects/teachpack/htdp/image.ss> #<path:/Applications/PLT Scheme v360/collects/teachpack/tiles.ss> #<path:/Applications/PLT Scheme v360/collects/teachpack/sb-world.ss>)
 > Computer Language: (("Teaching Languages" "How to Design Programs" "Beginning Student") (#6(#t constructor repeating-decimal #f #t none) #f))
 >
 >
From: Stephen Bloch <sbloch@adelphi.edu>
To: "Robby Findler" <robby.findler@gmail.com>
Cc: bugs@plt-scheme.org, nobody@plt-scheme.org, eli@plt-scheme.org,
        matthias@plt-scheme.org, sk@plt-scheme.org, mflatt@plt-scheme.org,
        robby@plt-scheme.org, clements@plt-scheme.org, jay@plt-scheme.org,
        meunier@plt-scheme.org, sowens@plt-scheme.org, kathyg@plt-scheme.org,
        awick@plt-scheme.org, goldberg@plt-scheme.org, dskippy@plt-scheme.org,
        jacobm@plt-scheme.org, cce@plt-scheme.org, dalev@plt-scheme.org,
        samth@plt-scheme.org, ryanc@plt-scheme.org
Subject: Re: [plt-bug] all/8500: zero-size images
Date: Thu, 25 Jan 2007 17:27:10 -0500

 > Images have to have some size or they don't show up. It would be
 > confusing to allow it.
 
 Well, I'm trying to teach function application with a strong emphasis  
 on images.  In particular, I've provided primitives for horizontal  
 and vertical concatenation.  It would be awfully nice if those  
 operations had identity elements.
 
 Frankly, I don't see how it's confusing.  If somebody creates a  
 size-0 image and looks at it, what do they expect to see?  Nothing,  
 which is exactly what they WILL see.
 
 If somebody creates an image of height 0 but positive width, and  
 horizontally concatenates this with another image, what will they  
 expect?  The second image, moved over by the width, just as if they  
 had used an invisible image of positive height.  This is the only  
 reasonable consistent behavior.
 
 > For that function, you could just use overlay with an invisible image
 > that was the size of the sum of the delta and the original image.
 
 You mean overlay/xy, right?  That's more hassle, but I guess one  
 could do that.
 
 (define (move-right pic pixels)
     (image-beside (rectangle pixels 1 "solid" "white") pic))
 
 becomes
 
 (define (move-right pic pixels)
     (overlay/xy (rectangle (+ pixels (image-width pic)) 1 "solid"  
 "white")
                          pixels 0
                          pic))
 
 Oops, I forgot about the pinholes.  Perhaps
 
 (define (move-right pic pixels)
     (overlay/xy (nw:rectangle (+ pixels (image-width pic)) 1 "solid"  
 "white")
                         pixels 0
                         (put-pinhole pic 0 0)))
 
 Of course, my original version doesn't handle negative offsets  
 correctly... but neither does this one.
 
 Do you see why I might prefer the "image-beside" approach, for  
 students in their first week or two of programming?
 
 
 
 
 
 Stephen Bloch
 sbloch@adelphi.edu
 
 
 
From: "Robby Findler" <robby.findler@gmail.com>
To: "Stephen Bloch" <sbloch@adelphi.edu>
Cc: bugs@plt-scheme.org, nobody@plt-scheme.org, eli@plt-scheme.org,
        matthias@plt-scheme.org, sk@plt-scheme.org, mflatt@plt-scheme.org,
        robby@plt-scheme.org, clements@plt-scheme.org, jay@plt-scheme.org,
        meunier@plt-scheme.org, sowens@plt-scheme.org, kathyg@plt-scheme.org,
        awick@plt-scheme.org, goldberg@plt-scheme.org, dskippy@plt-scheme.org,
        jacobm@plt-scheme.org, cce@plt-scheme.org, dalev@plt-scheme.org,
        samth@plt-scheme.org, ryanc@plt-scheme.org
Subject: Re: [plt-bug] all/8500: zero-size images
Date: Thu, 25 Jan 2007 16:29:55 -0600

 I find it strange that two images can both have zero pixels and yet
 they behave differently with the image primitives. I'll think about
 adding it, but probably won't do it soon. Feel free to make an
 alternate image.ss and experiment with it.
 
 Robby
 
 On 1/25/07, Stephen Bloch <sbloch@adelphi.edu> wrote:
 > > Images have to have some size or they don't show up. It would be
 > > confusing to allow it.
 >
 > Well, I'm trying to teach function application with a strong emphasis
 > on images.  In particular, I've provided primitives for horizontal
 > and vertical concatenation.  It would be awfully nice if those
 > operations had identity elements.
 >
 > Frankly, I don't see how it's confusing.  If somebody creates a
 > size-0 image and looks at it, what do they expect to see?  Nothing,
 > which is exactly what they WILL see.
 >
 > If somebody creates an image of height 0 but positive width, and
 > horizontally concatenates this with another image, what will they
 > expect?  The second image, moved over by the width, just as if they
 > had used an invisible image of positive height.  This is the only
 > reasonable consistent behavior.
 >
 > > For that function, you could just use overlay with an invisible image
 > > that was the size of the sum of the delta and the original image.
 >
 > You mean overlay/xy, right?  That's more hassle, but I guess one
 > could do that.
 >
 > (define (move-right pic pixels)
 >     (image-beside (rectangle pixels 1 "solid" "white") pic))
 >
 > becomes
 >
 > (define (move-right pic pixels)
 >     (overlay/xy (rectangle (+ pixels (image-width pic)) 1 "solid"
 > "white")
 >                          pixels 0
 >                          pic))
 >
 > Oops, I forgot about the pinholes.  Perhaps
 >
 > (define (move-right pic pixels)
 >     (overlay/xy (nw:rectangle (+ pixels (image-width pic)) 1 "solid"
 > "white")
 >                         pixels 0
 >                         (put-pinhole pic 0 0)))
 >
 > Of course, my original version doesn't handle negative offsets
 > correctly... but neither does this one.
 >
 > Do you see why I might prefer the "image-beside" approach, for
 > students in their first week or two of programming?
 >
 >
 >
 >
 >
 > Stephen Bloch
 > sbloch@adelphi.edu
 >
 >
 >
 >
From: Stephen Bloch <sbloch@adelphi.edu>
To: Robby Findler <robby.findler@gmail.com>
Cc: bugs@plt-scheme.org, nobody@plt-scheme.org, eli@plt-scheme.org,
        matthias@plt-scheme.org, sk@plt-scheme.org, mflatt@plt-scheme.org,
        robby@plt-scheme.org, clements@plt-scheme.org, jay@plt-scheme.org,
        meunier@plt-scheme.org, sowens@plt-scheme.org, kathyg@plt-scheme.org,
        awick@plt-scheme.org, goldberg@plt-scheme.org, dskippy@plt-scheme.org,
        jacobm@plt-scheme.org, cce@plt-scheme.org, dalev@plt-scheme.org,
        samth@plt-scheme.org, ryanc@plt-scheme.org
Subject: Re: [plt-bug] all/8500: zero-size images
Date: Fri, 26 Jan 2007 12:44:19 -0500

 Robby:
 > I find it strange that two images can both have zero pixels and yet
 > they behave differently with the image primitives.
 
 I don't understand what's "strange" about this.  Two images can have  
 6 pixels (one 2x3, the other 3x2) and behave differently with respect  
 to the image primitives.
 
 If I apply "image-beside" to two images of sizes w1xh1 and w2xh2, it  
 makes sense that the result should be width w1+w2 and height max 
 (h1,h2), even if one or more of the quantities w1, h1, w2, h2 is zero.
 
 Stephen Bloch
 sbloch@adelphi.edu
 
 
 


Responsible changed from "matthias" to "robby" by matthias at Sun, 01 Jul 2007 10:00:48 -0400
Reason>>> just to resume the dialog for now 

From: "Robby Findler" <robby@cs.uchicago.edu>
To: bugs@plt-scheme.org
Cc: matthias@plt-scheme.org, sbloch@adelphi.edu
Subject: Re: [plt-bug] drscheme/8500 zero-size images
Date: Sun, 1 Jul 2007 21:30:25 -0500

 Yes, this is my bug. I'm not sure I'll be able to get to it anytime
 soon tho. Sadly.
 
 FWIW, the obvious way to implement this outside of image.ss (ie,
 making images be a disjoint union of zero-area images and the existing
 images and extending all of the primitives to cope with them) is the
 only way to implement it inside image.ss, so there's special about me
 doing this.
 
 Robby
 
 On 7/1/07, matthias@plt-scheme.org <matthias@plt-scheme.org> wrote:
 >
 > Responsible changed from "matthias" to "robby" by matthias at Sun, 01 Jul 2007 10:00:48 -0400
 > Reason>>> just to resume the dialog for now
 >
 >
 > View:
 >   http://bugs.plt-scheme.org/query/?cmd=view&pr=8500
 >
 >
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: "Robby Findler" <robby@cs.uchicago.edu>
Cc: bugs@plt-scheme.org
Subject: Re: [plt-bug] drscheme/8500 zero-size images
Date: Mon, 2 Jul 2007 11:04:02 -0400

 On Jul 1, 2007, at 10:30 PM, Robby Findler wrote:
 
 > Yes, this is my bug. I'm not sure I'll be able to get to it anytime
 > soon tho. Sadly.
 >
 > FWIW, the obvious way to implement this outside of image.ss (ie,
 > making images be a disjoint union of zero-area images and the existing
 > images and extending all of the primitives to cope with them) is the
 > only way to implement it inside image.ss, so there's special about me
 > doing this.
 
 
 I sure don't understand the grammar of this paragraph. But I suspect  
 you're right.
 
 
 >
 > Robby
 >
 > On 7/1/07, matthias@plt-scheme.org <matthias@plt-scheme.org> wrote:
 >>
 >> Responsible changed from "matthias" to "robby" by matthias at Sun,  
 >> 01 Jul 2007 10:00:48 -0400
 >> Reason>>> just to resume the dialog for now
 >>
 >>
 >> View:
 >>   http://bugs.plt-scheme.org/query/?cmd=view&pr=8500
 >>
 >>
 
From: "Robby Findler" <robby@cs.uchicago.edu>
To: "Matthias Felleisen" <matthias@ccs.neu.edu>
Cc: bugs@plt-scheme.org
Subject: Re: [plt-bug] drscheme/8500 zero-size images
Date: Mon, 2 Jul 2007 10:08:42 -0500

 I'm saying that I'm not somebody with particularly special knowledge
 when it comes to doing what is asked in this PR.
 
 The thing you could do from outside the library is the only thing I
 can do from inside the library. The problem: zero area bitmap%s aren't
 available at the mred level.
 
 So, making images be a disjoint union of non-zero area images and
 what-they-currently-are, and then adding in cases for all of the
 primitives is the only thing to do.
 
 Robby
 
 On 7/2/07, Matthias Felleisen <matthias@ccs.neu.edu> wrote:
 >
 > On Jul 1, 2007, at 10:30 PM, Robby Findler wrote:
 >
 > > Yes, this is my bug. I'm not sure I'll be able to get to it anytime
 > > soon tho. Sadly.
 > >
 > > FWIW, the obvious way to implement this outside of image.ss (ie,
 > > making images be a disjoint union of zero-area images and the existing
 > > images and extending all of the primitives to cope with them) is the
 > > only way to implement it inside image.ss, so there's special about me
 > > doing this.
 >
 >
 > I sure don't understand the grammar of this paragraph. But I suspect
 > you're right.
 >
 >
 > >
 > > Robby
 > >
 > > On 7/1/07, matthias@plt-scheme.org <matthias@plt-scheme.org> wrote:
 > >>
 > >> Responsible changed from "matthias" to "robby" by matthias at Sun,
 > >> 01 Jul 2007 10:00:48 -0400
 > >> Reason>>> just to resume the dialog for now
 > >>
 > >>
 > >> View:
 > >>   http://bugs.plt-scheme.org/query/?cmd=view&pr=8500
 > >>
 > >>
 >
 >
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: "Robby Findler" <robby@cs.uchicago.edu>
Cc: bugs@plt-scheme.org
Subject: Re: [plt-bug] drscheme/8500 zero-size images
Date: Mon, 2 Jul 2007 11:24:19 -0400

 Yes, and I think Stephen is requesting this. Strange as it is.
 
 On Jul 2, 2007, at 11:08 AM, Robby Findler wrote:
 
 > I'm saying that I'm not somebody with particularly special knowledge
 > when it comes to doing what is asked in this PR.
 >
 > The thing you could do from outside the library is the only thing I
 > can do from inside the library. The problem: zero area bitmap%s aren't
 > available at the mred level.
 >
 > So, making images be a disjoint union of non-zero area images and
 > what-they-currently-are, and then adding in cases for all of the
 > primitives is the only thing to do.
 >
 > Robby
 >
 > On 7/2/07, Matthias Felleisen <matthias@ccs.neu.edu> wrote:
 >>
 >> On Jul 1, 2007, at 10:30 PM, Robby Findler wrote:
 >>
 >> > Yes, this is my bug. I'm not sure I'll be able to get to it anytime
 >> > soon tho. Sadly.
 >> >
 >> > FWIW, the obvious way to implement this outside of image.ss (ie,
 >> > making images be a disjoint union of zero-area images and the  
 >> existing
 >> > images and extending all of the primitives to cope with them) is  
 >> the
 >> > only way to implement it inside image.ss, so there's special  
 >> about me
 >> > doing this.
 >>
 >>
 >> I sure don't understand the grammar of this paragraph. But I suspect
 >> you're right.
 >>
 >>
 >> >
 >> > Robby
 >> >
 >> > On 7/1/07, matthias@plt-scheme.org <matthias@plt-scheme.org> wrote:
 >> >>
 >> >> Responsible changed from "matthias" to "robby" by matthias at Sun,
 >> >> 01 Jul 2007 10:00:48 -0400
 >> >> Reason>>> just to resume the dialog for now
 >> >>
 >> >>
 >> >> View:
 >> >>   http://bugs.plt-scheme.org/query/?cmd=view&pr=8500
 >> >>
 >> >>
 >>
 >>
 
From: "Robby Findler" <robby@cs.uchicago.edu>
To: "Matthias Felleisen" <matthias@ccs.neu.edu>
Cc: bugs@plt-scheme.org
Subject: Re: [plt-bug] drscheme/8500 zero-size images
Date: Mon, 2 Jul 2007 10:27:09 -0500

 On 7/2/07, Matthias Felleisen <matthias@ccs.neu.edu> wrote:
 > Yes, and I think Stephen is requesting this. Strange as it is.
 
 I understand. One of the points (from my point of view) is to include
 the subtext that he can do it himself.  :)
 
 Robby
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: "Robby Findler" <robby@cs.uchicago.edu>
Cc: bugs@plt-scheme.org
Subject: Re: [plt-bug] drscheme/8500 zero-size images
Date: Mon, 2 Jul 2007 11:34:49 -0400

 On Jul 2, 2007, at 11:27 AM, Robby Findler wrote:
 
 > On 7/2/07, Matthias Felleisen <matthias@ccs.neu.edu> wrote:
 >> Yes, and I think Stephen is requesting this. Strange as it is.
 >
 > I understand. One of the points (from my point of view) is to include
 > the subtext that he can do it himself.  :)
 
 
 1. Your message was so mangled, I didn't get it. At all.
 
 2. I think that's unreasonable. I conjecture that adding this special  
 case is useful for others, too. I have personally run into this  
 situation and had to change my program's organization in one case and  
 add a blank/invisible picture in the other case.
 
 -- Matthias
 
From: Stephen Bloch <sbloch@adelphi.edu>
To: bugs@plt-scheme.org, robby@plt-scheme.org, sbloch@adelphi.edu
Cc: 
Subject: Re: drscheme/8500: zero-size images
Date: Tue, 22 Apr 2008 16:35:26 -0400

 --============_-1003225963==_ma============
 Content-Type: text/plain; charset="us-ascii" ; format="flowed"
 
 Any progress on this?  Today I taught recursion on natural numbers, 
 with some of the results being images, and my students' lives would 
 have been much easier if they'd been able to use an empty image as a 
 base case.
 -- 
 Stephen Bloch
 sbloch@adelphi.edu
 
 --============_-1003225963==_ma============
 Content-Type: text/html; charset="us-ascii"
 
 <!doctype html public "-//W3C//DTD W3 HTML//EN">
 <html><head><style type="text/css"><!--
 blockquote, dl, ul, ol, li { padding-top: 0 ; padding-bottom: 0 }
  --></style><title>Re: drscheme/8500: zero-size
 images</title></head><body>
 <div><font face="Lucida Grande" size="-3" color="#000000">Any progress
 on this?&nbsp; Today I taught recursion on natural numbers, with some
 of the results being images, and my students' lives would have been
 much easier if they'd been able to use an empty image as a base
 case.</font></div>
 <x-sigsep><pre>-- 
 </pre></x-sigsep>
 <div>Stephen Bloch<br>
 sbloch@adelphi.edu<br>
 </div>
 </body>
 </html>
 --============_-1003225963==_ma============--
From: Stephen Bloch <sbloch@adelphi.edu>
To: bugs@plt-scheme.org, Stephen Bloch <sbloch@adelphi.edu>
Cc: 
Subject: Re: drscheme/8500: zero-size images
Date: Sun, 27 Jun 2010 15:36:33 -0400

 --Apple-Mail-3-859966268
 Content-Transfer-Encoding: 7bit
 Content-Type: text/plain;
 	charset=US-ASCII;
 	format=flowed
 
 This can be closed; it's been fixed.
 
 
 
 Stephen Bloch
 sbloch@adelphi.edu
 
 
 
 
 --Apple-Mail-3-859966268
 Content-Transfer-Encoding: 7bit
 Content-Type: text/html;
 	charset=US-ASCII
 
 <html><body style="word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space; ">This can be closed; it's been fixed.<div><br></div><br><br><div> <span class="Apple-style-span" style="border-collapse: separate; color: rgb(0, 0, 0); font-family: Helvetica; font-size: 12px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-border-horizontal-spacing: 0px; -webkit-border-vertical-spacing: 0px; -webkit-text-decorations-in-effect: none; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0; "><div>Stephen Bloch</div><div><a href="mailto:sbloch@adelphi.edu">sbloch@adelphi.edu</a></div><div><br class="webkit-block-placeholder"></div></span><br class="Apple-interchange-newline"> </div><br></body></html>
 --Apple-Mail-3-859966268--

State changed from "open" to "closed" by robby at Wed, 30 Jun 2010 07:56:10 -0400
Reason>>> htdp/image and 2htdp/image support zero-sized images.

