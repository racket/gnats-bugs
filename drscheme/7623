From apache@plt-scheme.org Sat Oct  8 17:50:43 2005
Received: from champlain.ccs.neu.edu (champlain.ccs.neu.edu [127.0.0.1])
	by champlain.ccs.neu.edu (8.12.10/8.12.10) with ESMTP id j98LofZS006296
	for <bugs@plt-scheme.org>; Sat, 8 Oct 2005 17:50:41 -0400
Message-Id: <200510082150.j98LofRi006294@champlain.ccs.neu.edu>
Date: Sat, 8 Oct 2005 17:50:41 -0400
From: eli@barzilay.org
To: bugs@plt-scheme.org
Subject: Bug in use of world.ss

>Number:         7623
>Category:       drscheme
>Synopsis:       Bug in use of world.ss
>Class:          sw-bug
>Responsible:    robby
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Sat Oct 08 17:55:01 -0400 2005
>Last-Modified:  Thu Nov 24 23:06:17 -0500 2005
>Originator:     Eli Barzilay
>Organization:
plt
>Submitter-Id:   unknown
>Release:        299.401
>Environment:
unix "Linux winooski.ccs.neu.edu 2.6.10-1.771_FC2 #1 Mon Mar 28 00:50:14 EST 2005 i686 i686 i386 GNU/Linux" (i386-linux) (get-display-depth) = 16
Docs Installed:
(#<path:/home/eli/src/plt660/collects/doc/misclib> #<path:/home/eli/src/plt660/collects/doc/foreign> #<path:/home/eli/src/plt660/collects/doc/plot> #<path:/home/eli/src/plt660/collects/doc/tools> #<path:/home/eli/src/plt660/collects/doc/srfi> #<path:/home/eli/src/plt660/collects/doc/profj-advanced> #<path:/home/eli/src/plt660/collects/doc/drscheme> #<path:/home/eli/src/plt660/collects/doc/profj-beginner> #<path:/home/eli/src/plt660/collects/doc/mrlib> #<path:/home/eli/src/plt660/collects/doc/tour> #<path:/home/eli/src/plt660/collects/doc/t-y-scheme> #<path:/home/eli/src/plt660/collects/doc/teachpack> #<path:/home/eli/src/plt660/collects/doc/tex2page> #<path:/home/eli/src/plt660/collects/doc/profj-intermediate> #<path:/home/eli/src/plt660/collects/doc/mzscheme> #<path:/home/eli/src/plt660/collects/doc/beginning> #<path:/home/eli/src/plt660/collects/doc/swindle> #<path:/home/eli/src/plt660/collects/doc/mzlib> #<path:/home/eli/src/plt660/collects/doc/help> #<path:/home/eli/src/plt660/collects/doc/insidemz> #<path:/home/eli/src/plt660/collects/doc/web-server> #<path:/home/eli/src/plt660/collects/doc/framework> #<path:/home/eli/src/plt660/collects/doc/mred> #<path:/home/eli/src/plt660/collects/doc/intermediate> #<path:/home/eli/src/plt660/collects/doc/advanced> #<path:/home/eli/src/plt660/collects/doc/mzc> #<path:/home/eli/src/plt660/collects/doc/beginning-abbr> #<path:/home/eli/src/plt660/collects/doc/intermediate-lambda> #<path:/home/eli/src/plt660/collects/doc/r5rs>)
Collections:
((#<path:/home/eli/csu660-test/collects> (#<path:handin-server> #<path:CSU660> #<path:world-wrapper.ss> #<path:.svn> #<path:info-domain>)) (#<path:/home/eli/.plt-scheme/299.401/collects> "non-existent path") (#<path:/home/eli/src/plt660/collects> (#<path:browser> #<path:errortrace> #<path:htdp> #<path:htdch> #<path:version> #<path:slideshow> #<path:mztake> #<path:setup> #<path:ffi> #<path:defaults> #<path:make> #<path:slatex> #<path:openssl> #<path:embedded-gui> #<path:doc> #<path:mred> #<path:syntax-color> #<path:dynext> #<path:net> #<path:framework> #<path:games> #<path:ssax> #<path:web-server> #<path:profjWizard> #<path:help> #<path:mzlib> #<path:swindle> #<path:graphics> #<path:compiler> #<path:mzscheme> #<path:eopl> #<path:xml> #<path:lang> #<path:string-constants> #<path:frtime> #<path:tex2page> #<path:slibinit> #<path:hierlist> #<path:trace> #<path:syntax> #<path:html> #<path:mrlib> #<path:icons> #<path:profj> #<path:afm> #<path:launcher> #<path:test-suite> #<path:drscheme> #<path:algol60> #<path:info-domain> #<path:parser-tools> #<path:srfi> #<path:sgl> #<path:planet> #<path:plot> #<path:preprocessor> #<path:texpict> #<path:stepper>)))
Human Language: english
Teachpack filenames: (#<path:/home/eli/src/plt660/teachpack/htdp/world.ss>)
Computer Language: (("Teaching Languages" "How to Design Programs" "Beginning Student") (#6(#t constructor repeating-decimal #f #t none) #f))
>Description:
The code below leads to a contract error.
(reported from 299.401, but happens in svn version too.)
>How-To-Repeat:
(equal? (place-image (circle 2 'solid 'red) 3 3 (empty-scene 4 4))
        (place-image (circle 2 'solid 'red) 3 3 (empty-scene 4 4)))
>Fix:
the bug was that rationals were being put into the vector, rather than
integers. There is now a call to `floor' in the place where the vector is
updated to keep this from happening in future.
>Release-Note:
This was a contract violation, with the correct guilty party.
>Audit-Trail:
From: Eli Barzilay <eli@barzilay.org>
To: gnats@brinckerhoff.org, matthias@ccs.neu.edu, jay@kenyamountain.com,
        dskippy@ccs.neu.edu, kathyg@cs.utah.edu, meunier@ccs.neu.edu,
        goldberg@cs.utah.edu, eli@barzilay.org, bugs@plt-scheme.org,
        sowens@cs.utah.edu, jacobm@cs.uchicago.edu, robby@cs.uchicago.edu,
        awick@cs.utah.edu, cce@ccs.neu.edu, mflatt@cs.utah.edu,
        sk@cs.brown.edu
Cc: 
Subject: Re: all/7623: Bug in use of world.ss
Date: Sat, 8 Oct 2005 18:51:07 -0400

 BTW, this bug happens on Linux but not on Windows.
 
 --
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                   http://www.barzilay.org/                 Maze is Life!
 
From: Robby Findler <robby@cs.uchicago.edu>
To: Eli Barzilay <eli@barzilay.org>
Cc: bugs@plt-scheme.org, mflatt@cs.utah.edu
Subject: Re: all/7623: Bug in use of world.ss
Date: Sat, 8 Oct 2005 19:52:22 -0500

 At Sat, 8 Oct 2005 18:51:07 -0400, Eli Barzilay wrote:
 > BTW, this bug happens on Linux but not on Windows.
 
 Nor on macos x, apparently.
 
 Robby
From: Matthew Flatt <mflatt@cs.utah.edu>
To: eli@barzilay.org, bugs@plt-scheme.org
Cc: robby@cs.uchicago.edu
Subject: Re: all/7623: Bug in use of world.ss
Date: Mon, 10 Oct 2005 12:54:41 -0600

 At Sat, 8 Oct 2005 17:55:04 -0400, eli@barzilay.org wrote:
 > The code below leads to a contract error.
 > (reported from 299.401, but happens in svn version too.)
 > 
 > *** How to repeat:
 > (equal? (place-image (circle 2 'solid 'red) 3 3 (empty-scene 4 4))
 >         (place-image (circle 2 'solid 'red) 3 3 (empty-scene 4 4)))
 
 I don't get an error under Linux. Was is the actual error that you see?
 
 Matthew
 
From: Eli Barzilay <eli@barzilay.org>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: bugs@plt-scheme.org, robby@cs.uchicago.edu
Subject: Re: all/7623: Bug in use of world.ss
Date: Mon, 10 Oct 2005 15:03:35 -0400

 On Oct 10, Matthew Flatt wrote:
 > At Sat, 8 Oct 2005 17:55:04 -0400, eli@barzilay.org wrote:
 > > The code below leads to a contract error.
 > > (reported from 299.401, but happens in svn version too.)
 > > 
 > > *** How to repeat:
 > > (equal? (place-image (circle 2 'solid 'red) 3 3 (empty-scene 4 4))
 > >         (place-image (circle 2 'solid 'red) 3 3 (empty-scene 4 4)))
 > 
 > I don't get an error under Linux. Was is the actual error that you see?
 
 Hmmm -- I see it under VNC, probably with a different BPP.
 (Robby: seems like my original guess was correct after all...)
 
 The error is hard to see -- I had to use a small picture to see the
 rationals:
 
 (lib "cache-image-snip.ss" "mrlib") broke the contract 
   (-> argb? (vectorof (integer-in 0 255)))
 it had with (lib "imageeq.ss" "lang" "private") on argb-vector; expected <(vectorof (integer-in 0 255))>, given: (vector 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 255 255 255 255 0 0 0 0 61504/255 248 252 248 61504/255 248 252 248 0 1736/255 588/85 1736/255 248 248 252 248 0 0 0 0 61504/255 248 252 248 0 248 0 0 0 248 0 0 248 248 252 248 0 0 0 0 0 1736/255 588/85 1736...
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                   http://www.barzilay.org/                 Maze is Life!
From: Robby Findler <robby@cs.uchicago.edu>
To: Eli Barzilay <eli@barzilay.org>
Cc: Matthew Flatt <mflatt@cs.utah.edu>, bugs@plt-scheme.org
Subject: Re: all/7623: Bug in use of world.ss
Date: Mon, 10 Oct 2005 14:39:22 -0500

 At Mon, 10 Oct 2005 15:03:35 -0400, Eli Barzilay wrote:
 > (Robby: seems like my original guess was correct after all...)
 
 It may be ... but the problem seems to be integers vs non-integers, not
 out of range integers (perhaps I mis-understood you original comments?)
 
 Robby

From: Eli Barzilay <eli@barzilay.org>
To: robby@cs.uchicago.edu, eli@barzilay.org, bugs@plt-scheme.org
Cc: 
Subject: Re: drscheme/7623: Bug in use of world.ss
Date: Fri, 14 Oct 2005 00:25:34 -0400

 I think that I found the problem here -- the top of cache-image-snip.ss says
     When drawn to the screen, the rationals are rounded to
     their nearest integer, but the true meaning is kept inside
     the image.
 but the contracts at the bottom of the file specify vectors of 0..255 *integer*
 numbers.  I tried to simply substitute "(integer-in 0 255)" with "number?" and
 things worked fine.  Perhaps the contract is wrong?
 
 BTW, with all of these rationals things can get very slow -- wouldn't it be
 better to use inexacts?
 --
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                   http://www.barzilay.org/                 Maze is Life!
 
From: Danny Yoo <dyoo@hkn.eecs.berkeley.edu>
To: bugs@plt-scheme.org, <eli@barzilay.org>
Cc: 
Subject: Re: drscheme/7623: Bug in use of world.ss
Date: Wed, 19 Oct 2005 12:20:33 -0700 (PDT)

 Hi Eli,
 
 Would it be ok to add a rational-in contract builder?
 
 
 Here's a diff to mzlib/private/contract.ss that tries to unify most of the
 range-checking numeric contracts, since they all do pretty much the same
 thing:
 
 
 dyoo@shoebox ~/local/plt/collects/mzlib/private $ svn diff contract.ss
 Index: contract.ss
 ===================================================================
 --- contract.ss	(revision 1106)
 +++ contract.ss	(working copy)
 @@ -2681,6 +2681,7 @@
             integer-in
             exact-integer-in
  	   real-in
 +           rational-in
             natural-number/c
  	   string/len
             false/c
 @@ -2900,39 +2901,26 @@
         (and (number? x)
  	    (integer? x)
  	    (x . >= . 0)))))
 -
 -  (define (integer-in start end)
 -    (unless (and (integer? start)
 -                 (integer? end))
 -      (error 'integer-in "expected two integers as arguments, got ~e and
 ~e" start end))
 -    (flat-named-contract
 -     `(integer-in ,start ,end)
 -     (lambda (x)
 -       (and (integer? x)
 -            (<= start x end)))))
 -
 -  (define (exact-integer-in start end)
 -    (unless (and (integer? start)
 -                 (exact? start)
 -                 (integer? end)
 -                 (exact? end))
 -      (error 'integer-in "expected two exact integers as arguments, got
 ~e and ~e" start end))
 -    (flat-named-contract
 -     `(exact-integer-in ,start ,end)
 -     (lambda (x)
 -       (and (integer? x)
 -            (exact? x)
 -            (<= start x end)))))
 
 -  (define (real-in start end)
 -    (unless (and (real? start)
 -                 (real? end))
 -      (error 'real-in "expected two real numbers as arguments, got ~e and
 ~e" start end))
 -    (flat-named-contract
 -     `(real-in ,start ,end)
 -     (lambda (x)
 -       (and (real? x)
 -            (<= start x end)))))
 +  ;; typed-range-in: symbol string (object -> boolean) -> (number number
 -> contract)
 +  (define (typed-range-in contract-name plural-types type?)
 +    (lambda (start end)
 +      (unless (and (type? start)
 +                   (type? end))
 +        (error contract-name "expected two ~a as arguments, got ~e and
 ~e" plural-types start end))
 +      (flat-named-contract
 +       (list contract-name start end)
 +       (lambda (x)
 +         (and (type? x)
 +              (<= start x end))))))
 +
 +  (define integer-in (typed-range-in 'integer-in "integers" integer?))
 +
 +  (define exact-integer-in (typed-range-in 'exact-integer-in "exact
 integers" (lambda (n) (and (integer? n) (exact? n)))))
 +
 +  (define real-in (typed-range-in 'real-in "reals" real?))
 +
 +  (define rational-in (typed-range-in 'rational-in "rationals"
 rational?))
 
    (define (and/c . fs)
      (for-each
 
 
 
 
 With the additional rational-in contract building, we can then change
 collects/mrlib/cache-image-snip.ss to use it:
 
 
 dyoo@shoebox ~/local/plt/collects/mrlib $ svn diff cache-image-snip.ss
 Index: cache-image-snip.ss
 ===================================================================
 --- cache-image-snip.ss	(revision 1106)
 +++ cache-image-snip.ss	(working copy)
 @@ -639,6 +639,6 @@
     [argb->bitmap (argb? . -> . (is-a?/c bitmap%))]
 
     [argb? (any/c . -> . boolean?)]
 -   [make-argb ((vectorof (integer-in 0 255)) integer? . -> . argb?)]
 -   [argb-vector (argb? . -> . (vectorof (integer-in 0 255)))]
 -   [argb-width (argb? . -> . integer?)]))
 \ No newline at end of file
 +   [make-argb ((vectorof (rational-in 0 255)) integer? . -> . argb?)]
 +   [argb-vector (argb? . -> . (vectorof (rational-in 0 255)))]
 +   [argb-width (argb? . -> . integer?)]))
 
 
 
 I hope this helps!
 
From: Eli Barzilay <eli@barzilay.org>
To: Danny Yoo <dyoo@hkn.eecs.berkeley.edu>
Cc: bugs@plt-scheme.org
Subject: Re: drscheme/7623: Bug in use of world.ss
Date: Wed, 19 Oct 2005 18:14:09 -0400

 On Oct 19, Danny Yoo wrote:
 > Hi Eli,
 > 
 > Would it be ok to add a rational-in contract builder?
 > [...]
 
 It would have been better to CC Robby on that, I'm not sure that Gnats
 did that...  I'll tell him about it.
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                   http://www.barzilay.org/                 Maze is Life!

State changed from "open" to "closed" by robby at Thu, 24 Nov 2005 23:06:17 -0500
Reason>>> fixed and released to svn

