From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Sat Aug 13 20:03:57 2011
Received: from mail-vw0-f44.google.com (mail-vw0-f44.google.com [209.85.212.44])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id p7E03sMG005491
	for <bugs@bugs.plt-scheme.org>; Sat, 13 Aug 2011 20:03:55 -0400
Message-Id: <201108140003.p7E03pAx005486@champlain.ccs.neu.edu>
Date: Sat, 13 Aug 2011 20:03:51 -0400
From: seanreque@yahoo.com
To: bugs@racket-lang.org
Subject: Custom keybindings broken in windows when using ctrl+alt

>Number:         12113
>Category:       drscheme
>Synopsis:       Custom keybindings broken in windows when using ctrl+alt
>Class:          sw-bug
>Responsible:    robby
>Severity:       non-critical
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Sat Aug 13 20:04:01 -0400 2011
>Last-Modified:  Thu Jul 03 07:20:01 -0400 2014
>Originator:     Sean Reque
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.1.2
>Environment:
windows "Windows NT 6.1 (Build 7601) Service Pack 1" (win32\i386\3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 128072276

Collections:
("C:\\Users\\sreque\\AppData\\Roaming\\Racket\\5.1.2\\collects"
 (non-existent-path))
("C:\\Program Files (x86)\\Racket\\collects"
 ("2htdp" "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "data" "datalog" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "help" "hierlist" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "picturing-programs" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "redex" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tex2page" "texpict" "trace" "typed" "typed-scheme" "unstable" "version" "web-server" "wxme" "xml"))

Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t #t))
>Description:
I have a custom keybindings file that should work but doesn't. It's contents are:

#lang s-exp framework/keybinding-lang
(keybinding 
  "c:m:b" 
  #;(lambda (editor evt) (send editor 
                             backward-sexp 
                             (send editor get-start-position)))
    (lambda (ed ev) (send ed insert "it worked!")))


If I modify the file to make the keybinding something like "c:b" or "m:b" and then restart racket, I can use the keybinding to insert the text into the screen. However, I cannot use both the "c:" and "m:" modifier together as documented at http://docs.racket-lang.org/gui/keymap_.html#(meth._(((lib._mred/main..rkt)._keymap~25)._map-function)),
>How-To-Repeat:
1. Add the above keybindings file to the latest DrRacket Windows downloadable build.
2. Observe that the keybinding doesn't work properly.
>Fix:
>Audit-Trail:
From: Robby Findler <robby@eecs.northwestern.edu>
To: seanreque@yahoo.com, bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12113: Custom keybindings broken in windows when
 using ctrl+alt
Date: Sat, 13 Aug 2011 20:20:39 -0500

 On Sat, Aug 13, 2011 at 7:04 PM,  <seanreque@yahoo.com> wrote:
 > A new problem report is waiting at
 >  http://bugs.racket-lang.org/query/?cmd=view&pr=12113
 
 Just to check: you see "b" being inserted or you see nothing being
 inserted when you type that key? Also, are you on an american keyboard
 or some other kind?
 
 The code below also exhibits the same issue, at the lower-level
 
 (I seem to recall there is something about control-alt keybindings
 that is special on windows, but I cannot recall what anymore and I'm
 not seeing anything in the docs.)
 
 #lang racket/gui
 (define f (new frame% [label ""] [width 400] [height 600]))
 (define t (new text%))
 (define ec (new editor-canvas% [parent f] [editor t]))
 (send ec focus)
 (define k (new keymap%))
 (send k add-function "insertx" (Î» x (send t insert #\x)))
 (send t set-keymap k)
 
 (send k map-function "m:c:b" "insertx")
 
 (send f show #t)
 
From: Robby Findler <robby@eecs.northwestern.edu>
To: sean reque <seanreque@yahoo.com>
Cc: bugs <bugs@racket-lang.org>,
        bug-notification <bug-notification@racket-lang.org>
Subject: Re: [racket-bug] all/12113: Custom keybindings broken in windows when
 using ctrl+alt
Date: Sat, 13 Aug 2011 21:13:14 -0500

 Thanks (added the bug tracker back into the cc list).
 
 On Sat, Aug 13, 2011 at 8:59 PM, sean reque <seanreque@yahoo.com> wrote:
 > I see no character inserted after pressing ctrl+alt+b when trying to use the
 > key binding. I also see no character inserted in the absence of any custom
 > key bindings, so the presence of the key binding doesn't seem to change any
 > behavior.
 > I am using an American keyboard.
 > ________________________________

From: "Stahlman, Brett P." <BRETT.P.STAHLMAN@saic.com>
To: "bugs@racket-lang.org" <bugs@racket-lang.org>,
        "seanreque@yahoo.com" <seanreque@yahoo.com>,
        "robby@racket-lang.org" <robby@racket-lang.org>
Cc: 
Subject: Re: drscheme/12113: Custom keybindings broken in windows when using
 ctrl+alt
Date: Tue, 1 Jul 2014 14:38:46 +0000

 --_000_9F20C2A79C7BC945A61DC64579B1FA6929E83C61EMEXMRP103ussai_
 Content-Type: text/plain; charset="us-ascii"
 Content-Transfer-Encoding: quoted-printable
 
 Just wondering whether anything has happened with this in the nearly 3 year=
 s since it was reported... Severity listing "non-critical" seems inappropri=
 ate to me: DrRacket has so much potential as a cross-platform development e=
 nvironment, but without a working paredit capability, that potential can't =
 be realized. As far as I'm concerned, this is a show-stopper for anything b=
 ut the most casual use on Windows.
 
 Sincerely, Brett S.
 
 --_000_9F20C2A79C7BC945A61DC64579B1FA6929E83C61EMEXMRP103ussai_
 Content-Type: text/html; charset="us-ascii"
 Content-Transfer-Encoding: quoted-printable
 
 <html xmlns:v=3D"urn:schemas-microsoft-com:vml" xmlns:o=3D"urn:schemas-micr=
 osoft-com:office:office" xmlns:w=3D"urn:schemas-microsoft-com:office:word" =
 xmlns:m=3D"http://schemas.microsoft.com/office/2004/12/omml" xmlns=3D"http:=
 //www.w3.org/TR/REC-html40">
 <head>
 <meta http-equiv=3D"Content-Type" content=3D"text/html; charset=3Dus-ascii"=
 >
 <meta name=3D"Generator" content=3D"Microsoft Word 14 (filtered medium)">
 <style><!--
 /* Font Definitions */
 @font-face
 	{font-family:Calibri;
 	panose-1:2 15 5 2 2 2 4 3 2 4;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
 	{margin:0in;
 	margin-bottom:.0001pt;
 	font-size:12.0pt;
 	font-family:"Times New Roman","serif";}
 a:link, span.MsoHyperlink
 	{mso-style-priority:99;
 	color:blue;
 	text-decoration:underline;}
 a:visited, span.MsoHyperlinkFollowed
 	{mso-style-priority:99;
 	color:purple;
 	text-decoration:underline;}
 p
 	{mso-style-priority:99;
 	mso-margin-top-alt:auto;
 	margin-right:0in;
 	mso-margin-bottom-alt:auto;
 	margin-left:0in;
 	font-size:12.0pt;
 	font-family:"Times New Roman","serif";}
 span.EmailStyle18
 	{mso-style-type:personal-compose;
 	font-family:"Calibri","sans-serif";}
 .MsoChpDefault
 	{mso-style-type:export-only;
 	font-size:10.0pt;}
 @page WordSection1
 	{size:8.5in 11.0in;
 	margin:1.0in 1.0in 1.0in 1.0in;}
 div.WordSection1
 	{page:WordSection1;}
 --></style><!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext=3D"edit" spidmax=3D"1026" />
 </xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext=3D"edit">
 <o:idmap v:ext=3D"edit" data=3D"1" />
 </o:shapelayout></xml><![endif]-->
 </head>
 <body lang=3D"EN-US" link=3D"blue" vlink=3D"purple">
 <div class=3D"WordSection1">
 <p><span style=3D"font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;">J=
 ust wondering whether anything has happened with this in the
 </span>nearly 3 years since it was reported&#8230; Severity listing &#8220;=
 non-critical&#8221; seems inappropriate to me: DrRacket has so much potenti=
 al as a cross-platform development environment, but without a working pared=
 it capability, that potential can&#8217;t be realized. As
  far as I&#8217;m concerned, this is a show-stopper for anything but the mo=
 st casual use on Windows.<o:p></o:p></p>
 <p>Sincerely, Brett S.<o:p></o:p></p>
 </div>
 </body>
 </html>
 
 --_000_9F20C2A79C7BC945A61DC64579B1FA6929E83C61EMEXMRP103ussai_--
From: Robby Findler <robby@eecs.northwestern.edu>
To: "Stahlman, Brett P." <BRETT.P.STAHLMAN@saic.com>
Cc: "bugs@racket-lang.org" <bugs@racket-lang.org>,
        "seanreque@yahoo.com" <seanreque@yahoo.com>
Subject: Re: drscheme/12113: Custom keybindings broken in windows when using ctrl+alt
Date: Tue, 1 Jul 2014 10:08:48 -0500

 --047d7b4503ca16520504fd232756
 Content-Type: text/plain; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 Thank you for your interest in DrRacket and your concern for its future.
 DrRacket currently supports only a some simple "always matching parens"
 editing modes, not the full glory of paredit. A few have talked about
 adding it but so far nothing has come of it.
 
 As I am sure you are aware, DrRacket development (unless it furthers our
 research programs) is entirely voluntary. So if you wish to provide some
 volunteer support in the form of a pull request to add paredit support we
 will try to review your patch and possibly include it in a future release.
 Or, maybe, someone else will beat you to it.
 
 Robby
 
 On Tuesday, July 1, 2014, Stahlman, Brett P. <BRETT.P.STAHLMAN@saic.com>
 wrote:
 
 >  Just wondering whether anything has happened with this in the nearly 3
 > years since it was reported=E2=80=A6 Severity listing =E2=80=9Cnon-critic=
 al=E2=80=9D seems
 > inappropriate to me: DrRacket has so much potential as a cross-platform
 > development environment, but without a working paredit capability, that
 > potential can=E2=80=99t be realized. As far as I=E2=80=99m concerned, thi=
 s is a
 > show-stopper for anything but the most casual use on Windows.
 >
 > Sincerely, Brett S.
 >
 
 --047d7b4503ca16520504fd232756
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 Thank you for your interest in DrRacket and your concern for its future. Dr=
 Racket currently=C2=A0supports only a some simple &quot;always matching par=
 ens&quot; editing modes, not the full glory of paredit. A few have talked a=
 bout adding it but so far nothing has come of it.=C2=A0<div>
 <br></div><div>As I am sure you are aware, DrRacket development (unless it =
 furthers our research programs) is entirely voluntary. So if you wish to pr=
 ovide some volunteer support in the form of a pull request to add paredit s=
 upport we will try to review your patch and possibly include it in a future=
  release. Or, maybe, someone else will beat you to it.=C2=A0</div>
 <div><br></div><div>Robby<br><br>On Tuesday, July 1, 2014, Stahlman, Brett =
 P. &lt;<a href=3D"mailto:BRETT.P.STAHLMAN@saic.com">BRETT.P.STAHLMAN@saic.c=
 om</a>&gt; wrote:<br><blockquote class=3D"gmail_quote" style=3D"margin:0 0 =
 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">
 
 
 
 
 
 
 <div lang=3D"EN-US" link=3D"blue" vlink=3D"purple">
 <div>
 <p><span style=3D"font-family:&quot;Calibri&quot;,&quot;sans-serif&quot;">J=
 ust wondering whether anything has happened with this in the
 </span>nearly 3 years since it was reported=E2=80=A6 Severity listing =E2=
 =80=9Cnon-critical=E2=80=9D seems inappropriate to me: DrRacket has so much=
  potential as a cross-platform development environment, but without a worki=
 ng paredit capability, that potential can=E2=80=99t be realized. As
  far as I=E2=80=99m concerned, this is a show-stopper for anything but the =
 most casual use on Windows.<u></u><u></u></p>
 <p>Sincerely, Brett S.<u></u><u></u></p>
 </div>
 </div>
 
 </blockquote></div>
 
 --047d7b4503ca16520504fd232756--
From: "Stahlman, Brett P." <BRETT.P.STAHLMAN@saic.com>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: "bugs@racket-lang.org" <bugs@racket-lang.org>,
        "seanreque@yahoo.com" <seanreque@yahoo.com>
Subject: RE: drscheme/12113: Custom keybindings broken in windows when using
 ctrl+alt
Date: Tue, 1 Jul 2014 15:12:42 +0000

 --_000_9F20C2A79C7BC945A61DC64579B1FA6929E83C81EMEXMRP103ussai_
 Content-Type: text/plain; charset="utf-8"
 Content-Transfer-Encoding: base64
 
 Um9iYnksDQpUaGFua3MgZm9yIHRoZSBxdWljayByZXNwb25zZS4gQWN0dWFsbHksIHNvbWVvbmUg
 YWxyZWFkeSBoYXMgYWRkZWQgYSBzZXQgb2YgcGFyZWRpdCBrZXliaW5kaW5ncywgd2hpY2ggbWln
 aHQgYmUgYWRlcXVhdGUgZm9yIG15IG5lZWRzIGlmIHRoZXkgd29ya2VkIG9uIFdpbmRvd3M6DQpo
 dHRwczovL2dpdGh1Yi5jb20veWpxd3c2L2RycmFja2V0LXBhcmVkaXQNCg0KVGhlIHByb2JsZW0g
 aXMgdGhhdCBiaW5kaW5ncyBzdWNoIGFzIHRoZSBmb2xsb3dpbmcgZG9u4oCZdCB3b3JrLCBhcHBh
 cmVudGx5IGR1ZSB0byBhbiBpc3N1ZSB3aXRoIHRoZSB3YXkgcmFja2V0IGhhbmRsZXMgdGhlIGM6
 bTrigKYNCg0KKGRlZmluZS1zaG9ydGN1dCAoImM6bTpmIikgKHBhcmVkaXQtZm9yd2FyZC1zZXhw
 IGVkIGV2dCkNCiAgKGRlZmluZSBzcCAoc2VuZCBlZCBnZXQtc3RhcnQtcG9zaXRpb24pKQ0KICAo
 YW5kLWxldCogKFtkZXN0IChnZXQtcGFyZWRpdC1mb3J3YXJkLXNleHAgZWQgc3ApXSkNCiAgICAo
 c2VuZCBlZCBzZXQtcG9zaXRpb24gZGVzdCkpKQ0KDQpUaGFua3MsDQpCcmV0dCBTLg0KDQoNCg0K
 RnJvbTogUm9iYnkgRmluZGxlciBbbWFpbHRvOnJvYmJ5QGVlY3Mubm9ydGh3ZXN0ZXJuLmVkdV0N
 ClNlbnQ6IFR1ZXNkYXksIEp1bHkgMDEsIDIwMTQgMTA6MDkgQU0NClRvOiBTdGFobG1hbiwgQnJl
 dHQgUC4NCkNjOiBidWdzQHJhY2tldC1sYW5nLm9yZzsgc2VhbnJlcXVlQHlhaG9vLmNvbQ0KU3Vi
 amVjdDogUmU6IGRyc2NoZW1lLzEyMTEzOiBDdXN0b20ga2V5YmluZGluZ3MgYnJva2VuIGluIHdp
 bmRvd3Mgd2hlbiB1c2luZyBjdHJsK2FsdA0KDQpUaGFuayB5b3UgZm9yIHlvdXIgaW50ZXJlc3Qg
 aW4gRHJSYWNrZXQgYW5kIHlvdXIgY29uY2VybiBmb3IgaXRzIGZ1dHVyZS4gRHJSYWNrZXQgY3Vy
 cmVudGx5IHN1cHBvcnRzIG9ubHkgYSBzb21lIHNpbXBsZSAiYWx3YXlzIG1hdGNoaW5nIHBhcmVu
 cyIgZWRpdGluZyBtb2Rlcywgbm90IHRoZSBmdWxsIGdsb3J5IG9mIHBhcmVkaXQuIEEgZmV3IGhh
 dmUgdGFsa2VkIGFib3V0IGFkZGluZyBpdCBidXQgc28gZmFyIG5vdGhpbmcgaGFzIGNvbWUgb2Yg
 aXQuDQoNCkFzIEkgYW0gc3VyZSB5b3UgYXJlIGF3YXJlLCBEclJhY2tldCBkZXZlbG9wbWVudCAo
 dW5sZXNzIGl0IGZ1cnRoZXJzIG91ciByZXNlYXJjaCBwcm9ncmFtcykgaXMgZW50aXJlbHkgdm9s
 dW50YXJ5LiBTbyBpZiB5b3Ugd2lzaCB0byBwcm92aWRlIHNvbWUgdm9sdW50ZWVyIHN1cHBvcnQg
 aW4gdGhlIGZvcm0gb2YgYSBwdWxsIHJlcXVlc3QgdG8gYWRkIHBhcmVkaXQgc3VwcG9ydCB3ZSB3
 aWxsIHRyeSB0byByZXZpZXcgeW91ciBwYXRjaCBhbmQgcG9zc2libHkgaW5jbHVkZSBpdCBpbiBh
 IGZ1dHVyZSByZWxlYXNlLiBPciwgbWF5YmUsIHNvbWVvbmUgZWxzZSB3aWxsIGJlYXQgeW91IHRv
 IGl0Lg0KDQpSb2JieQ0KDQpPbiBUdWVzZGF5LCBKdWx5IDEsIDIwMTQsIFN0YWhsbWFuLCBCcmV0
 dCBQLiA8QlJFVFQuUC5TVEFITE1BTkBzYWljLmNvbTxtYWlsdG86QlJFVFQuUC5TVEFITE1BTkBz
 YWljLmNvbT4+IHdyb3RlOg0KDQpKdXN0IHdvbmRlcmluZyB3aGV0aGVyIGFueXRoaW5nIGhhcyBo
 YXBwZW5lZCB3aXRoIHRoaXMgaW4gdGhlIG5lYXJseSAzIHllYXJzIHNpbmNlIGl0IHdhcyByZXBv
 cnRlZOKApiBTZXZlcml0eSBsaXN0aW5nIOKAnG5vbi1jcml0aWNhbOKAnSBzZWVtcyBpbmFwcHJv
 cHJpYXRlIHRvIG1lOiBEclJhY2tldCBoYXMgc28gbXVjaCBwb3RlbnRpYWwgYXMgYSBjcm9zcy1w
 bGF0Zm9ybSBkZXZlbG9wbWVudCBlbnZpcm9ubWVudCwgYnV0IHdpdGhvdXQgYSB3b3JraW5nIHBh
 cmVkaXQgY2FwYWJpbGl0eSwgdGhhdCBwb3RlbnRpYWwgY2Fu4oCZdCBiZSByZWFsaXplZC4gQXMg
 ZmFyIGFzIEnigJltIGNvbmNlcm5lZCwgdGhpcyBpcyBhIHNob3ctc3RvcHBlciBmb3IgYW55dGhp
 bmcgYnV0IHRoZSBtb3N0IGNhc3VhbCB1c2Ugb24gV2luZG93cy4NCg0KU2luY2VyZWx5LCBCcmV0
 dCBTLg0K
 
 --_000_9F20C2A79C7BC945A61DC64579B1FA6929E83C81EMEXMRP103ussai_
 Content-Type: text/html; charset="utf-8"
 Content-Transfer-Encoding: base64
 
 PGh0bWwgeG1sbnM6dj0idXJuOnNjaGVtYXMtbWljcm9zb2Z0LWNvbTp2bWwiIHhtbG5zOm89InVy
 bjpzY2hlbWFzLW1pY3Jvc29mdC1jb206b2ZmaWNlOm9mZmljZSIgeG1sbnM6dz0idXJuOnNjaGVt
 YXMtbWljcm9zb2Z0LWNvbTpvZmZpY2U6d29yZCIgeG1sbnM6bT0iaHR0cDovL3NjaGVtYXMubWlj
 cm9zb2Z0LmNvbS9vZmZpY2UvMjAwNC8xMi9vbW1sIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcv
 VFIvUkVDLWh0bWw0MCI+DQo8aGVhZD4NCjxtZXRhIGh0dHAtZXF1aXY9IkNvbnRlbnQtVHlwZSIg
 Y29udGVudD0idGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04Ij4NCjxtZXRhIG5hbWU9IkdlbmVyYXRv
 ciIgY29udGVudD0iTWljcm9zb2Z0IFdvcmQgMTQgKGZpbHRlcmVkIG1lZGl1bSkiPg0KPHN0eWxl
 PjwhLS0NCi8qIEZvbnQgRGVmaW5pdGlvbnMgKi8NCkBmb250LWZhY2UNCgl7Zm9udC1mYW1pbHk6
 Q2FsaWJyaTsNCglwYW5vc2UtMToyIDE1IDUgMiAyIDIgNCAzIDIgNDt9DQpAZm9udC1mYWNlDQoJ
 e2ZvbnQtZmFtaWx5OlRhaG9tYTsNCglwYW5vc2UtMToyIDExIDYgNCAzIDUgNCA0IDIgNDt9DQov
 KiBTdHlsZSBEZWZpbml0aW9ucyAqLw0KcC5Nc29Ob3JtYWwsIGxpLk1zb05vcm1hbCwgZGl2Lk1z
 b05vcm1hbA0KCXttYXJnaW46MGluOw0KCW1hcmdpbi1ib3R0b206LjAwMDFwdDsNCglmb250LXNp
 emU6MTIuMHB0Ow0KCWZvbnQtZmFtaWx5OiJUaW1lcyBOZXcgUm9tYW4iLCJzZXJpZiI7fQ0KYTps
 aW5rLCBzcGFuLk1zb0h5cGVybGluaw0KCXttc28tc3R5bGUtcHJpb3JpdHk6OTk7DQoJY29sb3I6
 Ymx1ZTsNCgl0ZXh0LWRlY29yYXRpb246dW5kZXJsaW5lO30NCmE6dmlzaXRlZCwgc3Bhbi5Nc29I
 eXBlcmxpbmtGb2xsb3dlZA0KCXttc28tc3R5bGUtcHJpb3JpdHk6OTk7DQoJY29sb3I6cHVycGxl
 Ow0KCXRleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmU7fQ0KcA0KCXttc28tc3R5bGUtcHJpb3JpdHk6
 OTk7DQoJbXNvLW1hcmdpbi10b3AtYWx0OmF1dG87DQoJbWFyZ2luLXJpZ2h0OjBpbjsNCgltc28t
 bWFyZ2luLWJvdHRvbS1hbHQ6YXV0bzsNCgltYXJnaW4tbGVmdDowaW47DQoJZm9udC1zaXplOjEy
 LjBwdDsNCglmb250LWZhbWlseToiVGltZXMgTmV3IFJvbWFuIiwic2VyaWYiO30NCnNwYW4uRW1h
 aWxTdHlsZTE4DQoJe21zby1zdHlsZS10eXBlOnBlcnNvbmFsLXJlcGx5Ow0KCWZvbnQtZmFtaWx5
 OiJDYWxpYnJpIiwic2Fucy1zZXJpZiI7DQoJY29sb3I6IzFGNDk3RDt9DQouTXNvQ2hwRGVmYXVs
 dA0KCXttc28tc3R5bGUtdHlwZTpleHBvcnQtb25seTt9DQpAcGFnZSBXb3JkU2VjdGlvbjENCgl7
 c2l6ZTo4LjVpbiAxMS4waW47DQoJbWFyZ2luOjEuMGluIDEuMGluIDEuMGluIDEuMGluO30NCmRp
 di5Xb3JkU2VjdGlvbjENCgl7cGFnZTpXb3JkU2VjdGlvbjE7fQ0KLS0+PC9zdHlsZT48IS0tW2lm
 IGd0ZSBtc28gOV0+PHhtbD4NCjxvOnNoYXBlZGVmYXVsdHMgdjpleHQ9ImVkaXQiIHNwaWRtYXg9
 IjEwMjYiIC8+DQo8L3htbD48IVtlbmRpZl0tLT48IS0tW2lmIGd0ZSBtc28gOV0+PHhtbD4NCjxv
 OnNoYXBlbGF5b3V0IHY6ZXh0PSJlZGl0Ij4NCjxvOmlkbWFwIHY6ZXh0PSJlZGl0IiBkYXRhPSIx
 IiAvPg0KPC9vOnNoYXBlbGF5b3V0PjwveG1sPjwhW2VuZGlmXS0tPg0KPC9oZWFkPg0KPGJvZHkg
 bGFuZz0iRU4tVVMiIGxpbms9ImJsdWUiIHZsaW5rPSJwdXJwbGUiPg0KPGRpdiBjbGFzcz0iV29y
 ZFNlY3Rpb24xIj4NCjxwIGNsYXNzPSJNc29Ob3JtYWwiPjxzcGFuIHN0eWxlPSJmb250LXNpemU6
 MTEuMHB0O2ZvbnQtZmFtaWx5OiZxdW90O0NhbGlicmkmcXVvdDssJnF1b3Q7c2Fucy1zZXJpZiZx
 dW90Oztjb2xvcjojMUY0OTdEIj5Sb2JieSw8bzpwPjwvbzpwPjwvc3Bhbj48L3A+DQo8cCBjbGFz
 cz0iTXNvTm9ybWFsIj48c3BhbiBzdHlsZT0iZm9udC1zaXplOjExLjBwdDtmb250LWZhbWlseTom
 cXVvdDtDYWxpYnJpJnF1b3Q7LCZxdW90O3NhbnMtc2VyaWYmcXVvdDs7Y29sb3I6IzFGNDk3RCI+
 VGhhbmtzIGZvciB0aGUgcXVpY2sgcmVzcG9uc2UuIEFjdHVhbGx5LCBzb21lb25lIGFscmVhZHkg
 aGFzIGFkZGVkIGEgc2V0IG9mIHBhcmVkaXQga2V5YmluZGluZ3MsIHdoaWNoIG1pZ2h0IGJlIGFk
 ZXF1YXRlIGZvciBteSBuZWVkcyBpZiB0aGV5IHdvcmtlZCBvbiBXaW5kb3dzOjxvOnA+PC9vOnA+
 PC9zcGFuPjwvcD4NCjxwIGNsYXNzPSJNc29Ob3JtYWwiPjxzcGFuIHN0eWxlPSJmb250LXNpemU6
 MTEuMHB0O2ZvbnQtZmFtaWx5OiZxdW90O0NhbGlicmkmcXVvdDssJnF1b3Q7c2Fucy1zZXJpZiZx
 dW90Oztjb2xvcjojMUY0OTdEIj48YSBocmVmPSJodHRwczovL2dpdGh1Yi5jb20veWpxd3c2L2Ry
 cmFja2V0LXBhcmVkaXQiPmh0dHBzOi8vZ2l0aHViLmNvbS95anF3dzYvZHJyYWNrZXQtcGFyZWRp
 dDwvYT48bzpwPjwvbzpwPjwvc3Bhbj48L3A+DQo8cCBjbGFzcz0iTXNvTm9ybWFsIj48c3BhbiBz
 dHlsZT0iZm9udC1zaXplOjExLjBwdDtmb250LWZhbWlseTomcXVvdDtDYWxpYnJpJnF1b3Q7LCZx
 dW90O3NhbnMtc2VyaWYmcXVvdDs7Y29sb3I6IzFGNDk3RCI+PG86cD4mbmJzcDs8L286cD48L3Nw
 YW4+PC9wPg0KPHAgY2xhc3M9Ik1zb05vcm1hbCI+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZToxMS4w
 cHQ7Zm9udC1mYW1pbHk6JnF1b3Q7Q2FsaWJyaSZxdW90OywmcXVvdDtzYW5zLXNlcmlmJnF1b3Q7
 O2NvbG9yOiMxRjQ5N0QiPlRoZSBwcm9ibGVtIGlzIHRoYXQgYmluZGluZ3Mgc3VjaCBhcyB0aGUg
 Zm9sbG93aW5nIGRvbuKAmXQgd29yaywgYXBwYXJlbnRseSBkdWUgdG8gYW4gaXNzdWUgd2l0aCB0
 aGUgd2F5IHJhY2tldCBoYW5kbGVzIHRoZSBjOm064oCmPG86cD48L286cD48L3NwYW4+PC9wPg0K
 PHAgY2xhc3M9Ik1zb05vcm1hbCI+PHNwYW4gc3R5bGU9ImZvbnQtc2l6ZToxMS4wcHQ7Zm9udC1m
 YW1pbHk6JnF1b3Q7Q2FsaWJyaSZxdW90OywmcXVvdDtzYW5zLXNlcmlmJnF1b3Q7O2NvbG9yOiMx
 RjQ5N0QiPjxvOnA+Jm5ic3A7PC9vOnA+PC9zcGFuPjwvcD4NCjxwIGNsYXNzPSJNc29Ob3JtYWwi
 PjxzcGFuIHN0eWxlPSJmb250LXNpemU6MTEuMHB0O2ZvbnQtZmFtaWx5OiZxdW90O0NhbGlicmkm
 cXVvdDssJnF1b3Q7c2Fucy1zZXJpZiZxdW90Oztjb2xvcjojMUY0OTdEIj4oZGVmaW5lLXNob3J0
 Y3V0ICgmcXVvdDtjOm06ZiZxdW90OykgKHBhcmVkaXQtZm9yd2FyZC1zZXhwIGVkIGV2dCk8bzpw
 PjwvbzpwPjwvc3Bhbj48L3A+DQo8cCBjbGFzcz0iTXNvTm9ybWFsIj48c3BhbiBzdHlsZT0iZm9u
 dC1zaXplOjExLjBwdDtmb250LWZhbWlseTomcXVvdDtDYWxpYnJpJnF1b3Q7LCZxdW90O3NhbnMt
 c2VyaWYmcXVvdDs7Y29sb3I6IzFGNDk3RCI+Jm5ic3A7IChkZWZpbmUgc3AgKHNlbmQgZWQgZ2V0
 LXN0YXJ0LXBvc2l0aW9uKSk8bzpwPjwvbzpwPjwvc3Bhbj48L3A+DQo8cCBjbGFzcz0iTXNvTm9y
 bWFsIj48c3BhbiBzdHlsZT0iZm9udC1zaXplOjExLjBwdDtmb250LWZhbWlseTomcXVvdDtDYWxp
 YnJpJnF1b3Q7LCZxdW90O3NhbnMtc2VyaWYmcXVvdDs7Y29sb3I6IzFGNDk3RCI+Jm5ic3A7IChh
 bmQtbGV0KiAoW2Rlc3QgKGdldC1wYXJlZGl0LWZvcndhcmQtc2V4cCBlZCBzcCldKTxvOnA+PC9v
 OnA+PC9zcGFuPjwvcD4NCjxwIGNsYXNzPSJNc29Ob3JtYWwiPjxzcGFuIHN0eWxlPSJmb250LXNp
 emU6MTEuMHB0O2ZvbnQtZmFtaWx5OiZxdW90O0NhbGlicmkmcXVvdDssJnF1b3Q7c2Fucy1zZXJp
 ZiZxdW90Oztjb2xvcjojMUY0OTdEIj4mbmJzcDsmbmJzcDsmbmJzcDsgKHNlbmQgZWQgc2V0LXBv
 c2l0aW9uIGRlc3QpKSk8bzpwPjwvbzpwPjwvc3Bhbj48L3A+DQo8cCBjbGFzcz0iTXNvTm9ybWFs
 Ij48c3BhbiBzdHlsZT0iZm9udC1zaXplOjExLjBwdDtmb250LWZhbWlseTomcXVvdDtDYWxpYnJp
 JnF1b3Q7LCZxdW90O3NhbnMtc2VyaWYmcXVvdDs7Y29sb3I6IzFGNDk3RCI+PG86cD4mbmJzcDs8
 L286cD48L3NwYW4+PC9wPg0KPHAgY2xhc3M9Ik1zb05vcm1hbCI+PHNwYW4gc3R5bGU9ImZvbnQt
 c2l6ZToxMS4wcHQ7Zm9udC1mYW1pbHk6JnF1b3Q7Q2FsaWJyaSZxdW90OywmcXVvdDtzYW5zLXNl
 cmlmJnF1b3Q7O2NvbG9yOiMxRjQ5N0QiPlRoYW5rcyw8bzpwPjwvbzpwPjwvc3Bhbj48L3A+DQo8
 cCBjbGFzcz0iTXNvTm9ybWFsIj48c3BhbiBzdHlsZT0iZm9udC1zaXplOjExLjBwdDtmb250LWZh
 bWlseTomcXVvdDtDYWxpYnJpJnF1b3Q7LCZxdW90O3NhbnMtc2VyaWYmcXVvdDs7Y29sb3I6IzFG
 NDk3RCI+QnJldHQgUy48bzpwPjwvbzpwPjwvc3Bhbj48L3A+DQo8cCBjbGFzcz0iTXNvTm9ybWFs
 Ij48c3BhbiBzdHlsZT0iZm9udC1zaXplOjExLjBwdDtmb250LWZhbWlseTomcXVvdDtDYWxpYnJp
 JnF1b3Q7LCZxdW90O3NhbnMtc2VyaWYmcXVvdDs7Y29sb3I6IzFGNDk3RCI+PG86cD4mbmJzcDs8
 L286cD48L3NwYW4+PC9wPg0KPHAgY2xhc3M9Ik1zb05vcm1hbCI+PHNwYW4gc3R5bGU9ImZvbnQt
 c2l6ZToxMS4wcHQ7Zm9udC1mYW1pbHk6JnF1b3Q7Q2FsaWJyaSZxdW90OywmcXVvdDtzYW5zLXNl
 cmlmJnF1b3Q7O2NvbG9yOiMxRjQ5N0QiPjxvOnA+Jm5ic3A7PC9vOnA+PC9zcGFuPjwvcD4NCjxw
 IGNsYXNzPSJNc29Ob3JtYWwiPjxzcGFuIHN0eWxlPSJmb250LXNpemU6MTEuMHB0O2ZvbnQtZmFt
 aWx5OiZxdW90O0NhbGlicmkmcXVvdDssJnF1b3Q7c2Fucy1zZXJpZiZxdW90Oztjb2xvcjojMUY0
 OTdEIj48bzpwPiZuYnNwOzwvbzpwPjwvc3Bhbj48L3A+DQo8cCBjbGFzcz0iTXNvTm9ybWFsIj48
 Yj48c3BhbiBzdHlsZT0iZm9udC1zaXplOjEwLjBwdDtmb250LWZhbWlseTomcXVvdDtUYWhvbWEm
 cXVvdDssJnF1b3Q7c2Fucy1zZXJpZiZxdW90OyI+RnJvbTo8L3NwYW4+PC9iPjxzcGFuIHN0eWxl
 PSJmb250LXNpemU6MTAuMHB0O2ZvbnQtZmFtaWx5OiZxdW90O1RhaG9tYSZxdW90OywmcXVvdDtz
 YW5zLXNlcmlmJnF1b3Q7Ij4gUm9iYnkgRmluZGxlciBbbWFpbHRvOnJvYmJ5QGVlY3Mubm9ydGh3
 ZXN0ZXJuLmVkdV0NCjxicj4NCjxiPlNlbnQ6PC9iPiBUdWVzZGF5LCBKdWx5IDAxLCAyMDE0IDEw
 OjA5IEFNPGJyPg0KPGI+VG86PC9iPiBTdGFobG1hbiwgQnJldHQgUC48YnI+DQo8Yj5DYzo8L2I+
 IGJ1Z3NAcmFja2V0LWxhbmcub3JnOyBzZWFucmVxdWVAeWFob28uY29tPGJyPg0KPGI+U3ViamVj
 dDo8L2I+IFJlOiBkcnNjaGVtZS8xMjExMzogQ3VzdG9tIGtleWJpbmRpbmdzIGJyb2tlbiBpbiB3
 aW5kb3dzIHdoZW4gdXNpbmcgY3RybCYjNDM7YWx0PG86cD48L286cD48L3NwYW4+PC9wPg0KPHAg
 Y2xhc3M9Ik1zb05vcm1hbCI+PG86cD4mbmJzcDs8L286cD48L3A+DQo8cCBjbGFzcz0iTXNvTm9y
 bWFsIj5UaGFuayB5b3UgZm9yIHlvdXIgaW50ZXJlc3QgaW4gRHJSYWNrZXQgYW5kIHlvdXIgY29u
 Y2VybiBmb3IgaXRzIGZ1dHVyZS4gRHJSYWNrZXQgY3VycmVudGx5Jm5ic3A7c3VwcG9ydHMgb25s
 eSBhIHNvbWUgc2ltcGxlICZxdW90O2Fsd2F5cyBtYXRjaGluZyBwYXJlbnMmcXVvdDsgZWRpdGlu
 ZyBtb2Rlcywgbm90IHRoZSBmdWxsIGdsb3J5IG9mIHBhcmVkaXQuIEEgZmV3IGhhdmUgdGFsa2Vk
 IGFib3V0IGFkZGluZyBpdCBidXQgc28gZmFyDQogbm90aGluZyBoYXMgY29tZSBvZiBpdC4mbmJz
 cDs8bzpwPjwvbzpwPjwvcD4NCjxkaXY+DQo8cCBjbGFzcz0iTXNvTm9ybWFsIj48bzpwPiZuYnNw
 OzwvbzpwPjwvcD4NCjwvZGl2Pg0KPGRpdj4NCjxwIGNsYXNzPSJNc29Ob3JtYWwiPkFzIEkgYW0g
 c3VyZSB5b3UgYXJlIGF3YXJlLCBEclJhY2tldCBkZXZlbG9wbWVudCAodW5sZXNzIGl0IGZ1cnRo
 ZXJzIG91ciByZXNlYXJjaCBwcm9ncmFtcykgaXMgZW50aXJlbHkgdm9sdW50YXJ5LiBTbyBpZiB5
 b3Ugd2lzaCB0byBwcm92aWRlIHNvbWUgdm9sdW50ZWVyIHN1cHBvcnQgaW4gdGhlIGZvcm0gb2Yg
 YSBwdWxsIHJlcXVlc3QgdG8gYWRkIHBhcmVkaXQgc3VwcG9ydCB3ZSB3aWxsIHRyeSB0byByZXZp
 ZXcNCiB5b3VyIHBhdGNoIGFuZCBwb3NzaWJseSBpbmNsdWRlIGl0IGluIGEgZnV0dXJlIHJlbGVh
 c2UuIE9yLCBtYXliZSwgc29tZW9uZSBlbHNlIHdpbGwgYmVhdCB5b3UgdG8gaXQuJm5ic3A7PG86
 cD48L286cD48L3A+DQo8L2Rpdj4NCjxkaXY+DQo8cCBjbGFzcz0iTXNvTm9ybWFsIj48bzpwPiZu
 YnNwOzwvbzpwPjwvcD4NCjwvZGl2Pg0KPGRpdj4NCjxwIGNsYXNzPSJNc29Ob3JtYWwiPlJvYmJ5
 PGJyPg0KPGJyPg0KT24gVHVlc2RheSwgSnVseSAxLCAyMDE0LCBTdGFobG1hbiwgQnJldHQgUC4g
 Jmx0OzxhIGhyZWY9Im1haWx0bzpCUkVUVC5QLlNUQUhMTUFOQHNhaWMuY29tIj5CUkVUVC5QLlNU
 QUhMTUFOQHNhaWMuY29tPC9hPiZndDsgd3JvdGU6PG86cD48L286cD48L3A+DQo8ZGl2Pg0KPGRp
 dj4NCjxwPjxzcGFuIHN0eWxlPSJmb250LWZhbWlseTomcXVvdDtDYWxpYnJpJnF1b3Q7LCZxdW90
 O3NhbnMtc2VyaWYmcXVvdDsiPkp1c3Qgd29uZGVyaW5nIHdoZXRoZXIgYW55dGhpbmcgaGFzIGhh
 cHBlbmVkIHdpdGggdGhpcyBpbiB0aGUNCjwvc3Bhbj5uZWFybHkgMyB5ZWFycyBzaW5jZSBpdCB3
 YXMgcmVwb3J0ZWTigKYgU2V2ZXJpdHkgbGlzdGluZyDigJxub24tY3JpdGljYWzigJ0gc2VlbXMg
 aW5hcHByb3ByaWF0ZSB0byBtZTogRHJSYWNrZXQgaGFzIHNvIG11Y2ggcG90ZW50aWFsIGFzIGEg
 Y3Jvc3MtcGxhdGZvcm0gZGV2ZWxvcG1lbnQgZW52aXJvbm1lbnQsIGJ1dCB3aXRob3V0IGEgd29y
 a2luZyBwYXJlZGl0IGNhcGFiaWxpdHksIHRoYXQgcG90ZW50aWFsIGNhbuKAmXQgYmUgcmVhbGl6
 ZWQuIEFzDQogZmFyIGFzIEnigJltIGNvbmNlcm5lZCwgdGhpcyBpcyBhIHNob3ctc3RvcHBlciBm
 b3IgYW55dGhpbmcgYnV0IHRoZSBtb3N0IGNhc3VhbCB1c2Ugb24gV2luZG93cy48bzpwPjwvbzpw
 PjwvcD4NCjxwPlNpbmNlcmVseSwgQnJldHQgUy48bzpwPjwvbzpwPjwvcD4NCjwvZGl2Pg0KPC9k
 aXY+DQo8L2Rpdj4NCjwvZGl2Pg0KPC9ib2R5Pg0KPC9odG1sPg0K
 
 --_000_9F20C2A79C7BC945A61DC64579B1FA6929E83C81EMEXMRP103ussai_--
From: Robby Findler <robby@eecs.northwestern.edu>
To: "Stahlman, Brett P." <BRETT.P.STAHLMAN@saic.com>
Cc: "bugs@racket-lang.org" <bugs@racket-lang.org>,
        "seanreque@yahoo.com" <seanreque@yahoo.com>
Subject: Re: drscheme/12113: Custom keybindings broken in windows when using ctrl+alt
Date: Tue, 1 Jul 2014 19:30:40 -0500

 On Tue, Jul 1, 2014 at 10:12 AM, Stahlman, Brett P.
 <BRETT.P.STAHLMAN@saic.com> wrote:
 > Robby,
 >
 > Thanks for the quick response. Actually, someone already has added a set of
 > paredit keybindings, which might be adequate for my needs if they worked on
 > Windows:
 >
 > https://github.com/yjqww6/drracket-paredit
 >
 >
 >
 > The problem is that bindings such as the following donât work, apparently
 > due to an issue with the way racket handles the c:m:â¦
 >
 >
 >
 > (define-shortcut ("c:m:f") (paredit-forward-sexp ed evt)
 >
 >   (define sp (send ed get-start-position))
 >
 >   (and-let* ([dest (get-paredit-forward-sexp ed sp)])
 >
 >     (send ed set-position dest)))
 >
 
 Can you say a little bit more about what you mean by doesn't work,
 please? I guess that nothing happens when you type alt-control-f, is
 that right? And other keybindings in the given code do work?
 
 Thanks,
 Robby
 
From: "Stahlman, Brett P." <BRETT.P.STAHLMAN@saic.com>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: "bugs@racket-lang.org" <bugs@racket-lang.org>,
        "seanreque@yahoo.com" <seanreque@yahoo.com>
Subject: RE: drscheme/12113: Custom keybindings broken in windows when using
 ctrl+alt
Date: Wed, 2 Jul 2014 00:46:36 +0000

 -----Original Message-----
 From: Robby Findler [mailto:robby@eecs.northwestern.edu] 
 Sent: Tuesday, July 01, 2014 7:31 PM
 To: Stahlman, Brett P.
 Cc: bugs@racket-lang.org; seanreque@yahoo.com
 Subject: Re: drscheme/12113: Custom keybindings broken in windows when using ctrl+alt
 
 On Tue, Jul 1, 2014 at 10:12 AM, Stahlman, Brett P.
 <BRETT.P.STAHLMAN@saic.com> wrote:
 > Robby,
 >
 > Thanks for the quick response. Actually, someone already has added a 
 > set of paredit keybindings, which might be adequate for my needs if 
 > they worked on
 > Windows:
 >
 > https://github.com/yjqww6/drracket-paredit
 >
 >
 >
 > The problem is that bindings such as the following donât work, 
 > apparently due to an issue with the way racket handles the c:m:â¦
 >
 >
 >
 > (define-shortcut ("c:m:f") (paredit-forward-sexp ed evt)
 >
 >   (define sp (send ed get-start-position))
 >
 >   (and-let* ([dest (get-paredit-forward-sexp ed sp)])
 >
 >     (send ed set-position dest)))
 >
 
 >> Can you say a little bit more about what you mean by doesn't work, please? I guess that nothing happens when you type alt-control-f, is that right? And other keybindings in the given code do work?
 
 Correct. Interestingly, the "Show Active Keybindings" dialog lists only 1 binding for paredit-forward-sexp:
 (esc;c:f)
 I believe this one is explained by the fact that paredit.rkt contains logic for adding "esc; equivalent key bindings for all the meta bindings". It appears that define-shortcut is called for "c:m:f", but apparently the attempt to bind "c:m:f" fails for some reason, leaving only the "esc;c:f" binding (which does work, by the way).
 
 Thanks,
 Brett S.
 
 >> Thanks,
 >> Robby
 
From: Robby Findler <robby@eecs.northwestern.edu>
To: "Stahlman, Brett P." <BRETT.P.STAHLMAN@saic.com>
Cc: "bugs@racket-lang.org" <bugs@racket-lang.org>,
        "seanreque@yahoo.com" <seanreque@yahoo.com>
Subject: Re: drscheme/12113: Custom keybindings broken in windows when using ctrl+alt
Date: Tue, 1 Jul 2014 21:01:11 -0500

 I don't see this mentioned in the docs, but I believe that c:m
 keybindings (control-alt) are discarded under windows. I am forgetting
 the details now, tho, sorry.
 
 Robby
 
 On Tue, Jul 1, 2014 at 7:46 PM, Stahlman, Brett P.
 <BRETT.P.STAHLMAN@saic.com> wrote:
 >
 >
 > -----Original Message-----
 > From: Robby Findler [mailto:robby@eecs.northwestern.edu]
 > Sent: Tuesday, July 01, 2014 7:31 PM
 > To: Stahlman, Brett P.
 > Cc: bugs@racket-lang.org; seanreque@yahoo.com
 > Subject: Re: drscheme/12113: Custom keybindings broken in windows when using ctrl+alt
 >
 > On Tue, Jul 1, 2014 at 10:12 AM, Stahlman, Brett P.
 > <BRETT.P.STAHLMAN@saic.com> wrote:
 >> Robby,
 >>
 >> Thanks for the quick response. Actually, someone already has added a
 >> set of paredit keybindings, which might be adequate for my needs if
 >> they worked on
 >> Windows:
 >>
 >> https://github.com/yjqww6/drracket-paredit
 >>
 >>
 >>
 >> The problem is that bindings such as the following donât work,
 >> apparently due to an issue with the way racket handles the c:m:â¦
 >>
 >>
 >>
 >> (define-shortcut ("c:m:f") (paredit-forward-sexp ed evt)
 >>
 >>   (define sp (send ed get-start-position))
 >>
 >>   (and-let* ([dest (get-paredit-forward-sexp ed sp)])
 >>
 >>     (send ed set-position dest)))
 >>
 >
 >>> Can you say a little bit more about what you mean by doesn't work, please? I guess that nothing happens when you type alt-control-f, is that right? And other keybindings in the given code do work?
 >
 > Correct. Interestingly, the "Show Active Keybindings" dialog lists only 1 binding for paredit-forward-sexp:
 > (esc;c:f)
 > I believe this one is explained by the fact that paredit.rkt contains logic for adding "esc; equivalent key bindings for all the meta bindings". It appears that define-shortcut is called for "c:m:f", but apparently the attempt to bind "c:m:f" fails for some reason, leaving only the "esc;c:f" binding (which does work, by the way).
 >
 > Thanks,
 > Brett S.
 >
 >>> Thanks,
 >>> Robby
 
From: "Stahlman, Brett P." <BRETT.P.STAHLMAN@saic.com>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: "bugs@racket-lang.org" <bugs@racket-lang.org>,
        "seanreque@yahoo.com" <seanreque@yahoo.com>
Subject: RE: drscheme/12113: Custom keybindings broken in windows when using
 ctrl+alt
Date: Wed, 2 Jul 2014 03:38:09 +0000

 I assume you mean DrRacket is discarding them; not that Windows is discarding them. I just verified that C-M-f works as expected in the latest GNU Emacs on Windows, so there doesn't appear to be any fundamental Windows problem with the key sequence. I appreciate your looking into it...
 Thanks,
 Brett S.
 
 -----Original Message-----
 From: Robby Findler [mailto:robby@eecs.northwestern.edu] 
 Sent: Tuesday, July 01, 2014 9:01 PM
 To: Stahlman, Brett P.
 Cc: bugs@racket-lang.org; seanreque@yahoo.com
 Subject: Re: drscheme/12113: Custom keybindings broken in windows when using ctrl+alt
 
 I don't see this mentioned in the docs, but I believe that c:m keybindings (control-alt) are discarded under windows. I am forgetting the details now, tho, sorry.
 
 Robby
 
 On Tue, Jul 1, 2014 at 7:46 PM, Stahlman, Brett P.
 <BRETT.P.STAHLMAN@saic.com> wrote:
 >
 >
 > -----Original Message-----
 > From: Robby Findler [mailto:robby@eecs.northwestern.edu]
 > Sent: Tuesday, July 01, 2014 7:31 PM
 > To: Stahlman, Brett P.
 > Cc: bugs@racket-lang.org; seanreque@yahoo.com
 > Subject: Re: drscheme/12113: Custom keybindings broken in windows when 
 > using ctrl+alt
 >
 > On Tue, Jul 1, 2014 at 10:12 AM, Stahlman, Brett P.
 > <BRETT.P.STAHLMAN@saic.com> wrote:
 >> Robby,
 >>
 >> Thanks for the quick response. Actually, someone already has added a 
 >> set of paredit keybindings, which might be adequate for my needs if 
 >> they worked on
 >> Windows:
 >>
 >> https://github.com/yjqww6/drracket-paredit
 >>
 >>
 >>
 >> The problem is that bindings such as the following donât work, 
 >> apparently due to an issue with the way racket handles the c:m:â¦
 >>
 >>
 >>
 >> (define-shortcut ("c:m:f") (paredit-forward-sexp ed evt)
 >>
 >>   (define sp (send ed get-start-position))
 >>
 >>   (and-let* ([dest (get-paredit-forward-sexp ed sp)])
 >>
 >>     (send ed set-position dest)))
 >>
 >
 >>> Can you say a little bit more about what you mean by doesn't work, please? I guess that nothing happens when you type alt-control-f, is that right? And other keybindings in the given code do work?
 >
 > Correct. Interestingly, the "Show Active Keybindings" dialog lists only 1 binding for paredit-forward-sexp:
 > (esc;c:f)
 > I believe this one is explained by the fact that paredit.rkt contains logic for adding "esc; equivalent key bindings for all the meta bindings". It appears that define-shortcut is called for "c:m:f", but apparently the attempt to bind "c:m:f" fails for some reason, leaving only the "esc;c:f" binding (which does work, by the way).
 >
 > Thanks,
 > Brett S.
 >
 >>> Thanks,
 >>> Robby
 
From: Robby Findler <robby@eecs.northwestern.edu>
To: "Stahlman, Brett P." <BRETT.P.STAHLMAN@saic.com>
Cc: "bugs@racket-lang.org" <bugs@racket-lang.org>,
        "seanreque@yahoo.com" <seanreque@yahoo.com>
Subject: Re: drscheme/12113: Custom keybindings broken in windows when using ctrl+alt
Date: Wed, 2 Jul 2014 22:16:18 -0500

 On Tue, Jul 1, 2014 at 10:38 PM, Stahlman, Brett P.
 <BRETT.P.STAHLMAN@saic.com> wrote:
 > I assume you mean DrRacket is discarding them; not that Windows is discarding them. I just verified that C-M-f works as expected in the latest GNU Emacs on Windows, so there doesn't appear to be any fundamental Windows problem with the key sequence. I appreciate your looking into it...
 
 I'm actually not sure what is discarding the key strokes. I've gotten
 as far as this program:
 
 #lang racket/gui
 (define f (new frame% [label ""] [width 100] [height 100]))
 (define c (new (class canvas%
                  (define/override (on-char event)
                    (printf "~s\n" (list (send event get-key-code)
                                         (send event get-other-shift-key-code)
                                         (send event get-other-altgr-key-code)
                                         (send event
 get-other-shift-altgr-key-code)
                                         (send event get-other-caps-key-code)
                                         (send event get-shift-down)
                                         (send event get-control-down)
                                         (send event get-alt-down))))
                  (super-new [parent f2]))))
 (send f show #t)
 
 which demonstrates that a fairly low-level in the system is not
 getting control-alt keystrokes in the same way that it gets others.
 Specifically, I see that when I type a control-alt keystroke, this
 code doesn't get called with the corresponding character in the
 key-code field of the event, but that it does get called that way when
 just control or just alt is used. (More concretely, the first element
 of the list never seems to be a character with control-alt
 combinations, but it does with control combinations and with alt
 combinations).
 
 It looks like the function maybe-make-key-event in
 pkgs/gui-pkgs/gui-lib/mred/private/wx/win32/key.rkt is doing some work
 to deal with the altgr keyboard modifier that is probably relevant
 here, but I'm not really up to date on my win32 api calls and whatnot
 to understand the rationale for what it is doing.
 
 I do know that we've had trouble with control-alt keyboard
 combinations in the past making international keyboards not work
 properly, tho.
 
 (I conducted experiments under windows 7, running in a virtualbox vm,
 if that matters.)
 
 Robby
 
From: "Stahlman, Brett P." <BRETT.P.STAHLMAN@saic.com>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: "bugs@racket-lang.org" <bugs@racket-lang.org>,
        "seanreque@yahoo.com" <seanreque@yahoo.com>
Subject: RE: drscheme/12113: Custom keybindings broken in windows when using
 ctrl+alt
Date: Thu, 3 Jul 2014 11:18:53 +0000

 > 
 >  
 > 
 > -----Original Message-----
 > From: Robby Findler [mailto:robby@eecs.northwestern.edu] 
 > Sent: Wednesday, July 02, 2014 10:16 PM
 > To: Stahlman, Brett P.
 > Cc: bugs@racket-lang.org; seanreque@yahoo.com
 > Subject: Re: drscheme/12113: Custom keybindings broken in windows when using ctrl+alt
 > 
 > On Tue, Jul 1, 2014 at 10:38 PM, Stahlman, Brett P.
 > <BRETT.P.STAHLMAN@saic.com> wrote:
 > > I assume you mean DrRacket is discarding them; not that Windows is discarding them. I just verified that C-M-f works as expected in the latest GNU Emacs on Windows, so there doesn't appear to be any fundamental Windows problem with the key sequence. I appreciate your looking into it...
 > 
 > I'm actually not sure what is discarding the key strokes. I've gotten as far as this program:
 > 
 > #lang racket/gui
 > (define f (new frame% [label ""] [width 100] [height 100])) (define c (new (class canvas%
 >                  (define/override (on-char event)
 >                    (printf "~s\n" (list (send event get-key-code)
 >                                         (send event get-other-shift-key-code)
 >                                         (send event get-other-altgr-key-code)
 >                                         (send event
 > get-other-shift-altgr-key-code)
 >                                         (send event get-other-caps-key-code)
 >                                         (send event get-shift-down)
 >                                         (send event get-control-down)
 >                                         (send event get-alt-down))))
 >                  (super-new [parent f2])))) (send f show #t)
 > 
 > which demonstrates that a fairly low-level in the system is not getting control-alt keystrokes in the same way that it gets others.
 > Specifically, I see that when I type a control-alt keystroke, this code doesn't get called with the corresponding character in the key-code field of the event, but that it does get called that way when just control or just alt is used. (More concretely, the first element of the list never seems to be a character with control-alt combinations, but it does with control combinations and with alt combinations).
 > 
 > It looks like the function maybe-make-key-event in pkgs/gui-pkgs/gui-lib/mred/private/wx/win32/key.rkt is doing some work to deal with the altgr keyboard modifier that is probably relevant here, but I'm not really up to date on my win32 api calls and whatnot to understand the rationale for what it is doing.
 > 
 > I do know that we've had trouble with control-alt keyboard combinations in the past making international keyboards not work properly, tho.
 > 
 > (I conducted experiments under windows 7, running in a virtualbox vm, if that matters.)
 > 
 > Robby
 
 Robby,
 Yes. I've had a quick look in that file, and I agree that maybe-make-key-event looks to be a very likely culprit. I may dig into the details if I get some time over the next few weeks. I appreciate your help in getting it narrowed down...
 
 Brett S.
 
