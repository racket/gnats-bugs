From mflatt@cs.utah.edu  Sat Nov  3 19:23:24 2001
Return-Path: <mflatt@cs.utah.edu>
Received: from localhost (localhost [127.0.0.1])
	by cs.rice.edu (Postfix) with ESMTP id CB5E3190B
	for <plt-gnats@cs.rice.edu>; Sat,  3 Nov 2001 19:23:23 -0600 (CST)
Message-Id: <200111040123.UAA24770@champlain.ccs.neu.edu>
Date: Sat, 3 Nov 2001 20:23:20 -0500
From: mflatt@cs.utah.edu
To: bugs@plt-scheme.org
Subject: print to PS doesn't work in Help Desk

>Number:         2143
>Category:       drscheme
>Synopsis:       print to PS doesn't work in Help Desk
>Confidential:   no
>Severity:       serious
>Priority:       medium
>Responsible:    robby
>State:          closed
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Sun Nov  4 01:30:01 GMT 2001
>Closed-Date:    Wed Nov 28 20:39:26 EST 2001
>Last-Modified:  Wed Nov 28 20:39:26 EST 2001
>Originator:     Matthew
>Release:        199.28d7
>Organization:
titan
>Environment:
windows "Windows NT 5.0 (Build 2195) Service Pack 2" (win32\i386) (get-display-depth) = 16
Tools: ("CVS" "analysis" "debug" "project-manager" "search" "spidey2" "stepper" "syncheck" "typeset" "unit-bundle")
Docs Installed:
("help" "teachpack" "icons" "r5rs" "mzscheme" "mred" "drscheme")
Collections: 
(("e:\\matthew\\plt\\collects" ("CVS" "mzlib" "mred" "syntax" "compiler" "xml" "afm" "browser" "dynext" "errortrace" "games" "hierlist" "html" "mzscheme" "net" "setup" "sirmail" "slatex" "slibinit" "texpict" "drscheme" "framework" "help" "userspce" "debug" "defaults" "lang" "launcher" "make" "graphics" "string-constants" "icons" "doc" "parser-tools")))
Human Language: English
>Description:
The "automatically print to postscript" option
works in DrScheme, but not Help Desk.
>How-To-Repeat:
Start Help Desk within DrScheme in Windows
Check the "automatically print to postscript" box
  in "General" options
Select "Print" in the Help Desk window

>Fix:

>Release-Note:

>Audit-Trail:

From: Robert Bruce Findler <robby@cs.rice.edu>
To: mflatt@cs.utah.edu
Cc: bugs@plt-scheme.org
Subject: Re: all/2143: print to PS doesn't work in Help Desk
Date: Mon, 5 Nov 2001 14:39:45 -0500 (EST)

 I just fixed this (I believe) but mred crashed when I was testing it --
 I tried to print Help Desk's front page. I was testing on unix, not
 windows. I didn't get a useful core file, but this was the output:
 
   MrEd Warning: Cannot open AFM file for Times-Bold; guessing font sizes.
   (Silently guessing fonts for future AFM failures.)
   Segmentation fault (core dumped)
 
 I have committed a new plt/collects/help/private/helpwin.ss that should
 fix the bug under windows. I don't have (easy) access to a windows
 machine, but I am pretty confident of the fix. Perhaps you can check it
 out, while you see if the core dump reproduces for you?
 
 Robby

From: Matthew Flatt <mflatt@cs.utah.edu>
To: Robert Bruce Findler <robby@cs.rice.edu>
Cc: bugs@plt-scheme.org
Subject: Re: all/2143: print to PS doesn't work in Help Desk
Date: Mon, 5 Nov 2001 13:59:04 -0700 (MST)

 I wasn't able to reproduce the crash. 
 
 Was Times-Bold not found because you don't have an "afm" collection. or
 did something else go wrong?
 
 Matthew
 
 Quoting Robert Bruce Findler:
 > I just fixed this (I believe) but mred crashed when I was testing it --
 > I tried to print Help Desk's front page. I was testing on unix, not
 > windows. I didn't get a useful core file, but this was the output:
 > 
 >   MrEd Warning: Cannot open AFM file for Times-Bold; guessing font sizes.
 >   (Silently guessing fonts for future AFM failures.)
 >   Segmentation fault (core dumped)
 > 
 > I have committed a new plt/collects/help/private/helpwin.ss that should
 > fix the bug under windows. I don't have (easy) access to a windows
 > machine, but I am pretty confident of the fix. Perhaps you can check it
 > out, while you see if the core dump reproduces for you?
 > 
 > Robby
 > 
 

From: Robert Bruce Findler <robby@cs.rice.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: bugs@plt-scheme.org
Subject: Re: all/2143: print to PS doesn't work in Help Desk
Date: Mon, 5 Nov 2001 16:46:43 -0500 (EST)

 This is a multi-part message in MIME format.
 -----86593672467-----
 Content-Type: text/plain; charset=us-ascii
 Content-Transfer-Encoding: 7bit
 
 Quoting Matthew Flatt:
 > I wasn't able to reproduce the crash. 
 > 
 > Was Times-Bold not found because you don't have an "afm" collection. or
 > did something else go wrong?
 
 Indeed, I didn't have the afm collection. I still get a crash when I
 add it in, however. This time I got a stack trace, tho. I've attached
 it.
 
 Robby
 -----86593672467-----
 Content-Type: text/plain;
 	name="OUTPUT"
 Content-Transfer-Encoding: 7bit
 
 GNU gdb 5.0
 Copyright 2000 Free Software Foundation, Inc.
 GDB is free software, covered by the GNU General Public License, and you are
 welcome to change it and/or distribute copies of it under certain conditions.
 Type "show copying" to see the conditions.
 There is absolutely no warranty for GDB.  Type "show warranty" for details.
 This GDB was configured as "ppc-redhat-linux"...
 Core was generated by `/home/robby/cvs/plt/bin/mred -mqvL help.ss help --'.
 Program terminated with signal 11, Segmentation fault.
 Reading symbols from /usr/X11R6/lib/libSM.so.6...done.
 Loaded symbols for /usr/X11R6/lib/libSM.so.6
 Reading symbols from /usr/X11R6/lib/libICE.so.6...done.
 Loaded symbols for /usr/X11R6/lib/libICE.so.6
 Reading symbols from /usr/X11R6/lib/libXaw.so.6...done.
 Loaded symbols for /usr/X11R6/lib/libXaw.so.6
 Reading symbols from /usr/X11R6/lib/libXmu.so.6...done.
 Loaded symbols for /usr/X11R6/lib/libXmu.so.6
 Reading symbols from /usr/X11R6/lib/libXt.so.6...done.
 Loaded symbols for /usr/X11R6/lib/libXt.so.6
 Reading symbols from /usr/X11R6/lib/libX11.so.6...done.
 Loaded symbols for /usr/X11R6/lib/libX11.so.6
 Reading symbols from /usr/X11R6/lib/libXext.so.6...done.
 Loaded symbols for /usr/X11R6/lib/libXext.so.6
 Reading symbols from /lib/libdl.so.2...done.
 Loaded symbols for /lib/libdl.so.2
 Reading symbols from /usr/lib/libstdc++-libc6.1-2.so.3...done.
 Loaded symbols for /usr/lib/libstdc++-libc6.1-2.so.3
 Reading symbols from /lib/libm.so.6...done.
 Loaded symbols for /lib/libm.so.6
 Reading symbols from /lib/libc.so.6...done.
 Loaded symbols for /lib/libc.so.6
 Reading symbols from /lib/ld.so.1...done.
 Loaded symbols for /lib/ld.so.1
 Reading symbols from /lib/libnss_files.so.2...done.
 Loaded symbols for /lib/libnss_files.so.2
 #0  scheme_do_eval (obj=0x0, num_rands=2, rands=0x110b0488, get_value=-1)
     at ./eval.c:2587
 2587	    type = _SCHEME_TYPE(obj);
 (gdb) where
 #0  scheme_do_eval (obj=0x0, num_rands=2, rands=0x110b0488, get_value=-1)
     at ./eval.c:2587
 #1  0x100600a4 in apply_k () at ./fun.c:1065
 #2  0x1005fe9c in scheme_top_level_do (k=0x10060060 <apply_k>, eb=0)
     at ./fun.c:988
 #3  0x100600e8 in _apply (rator=0x0, num_rands=2, rands=0x110b0488, multi=-1, 
     eb=275001344) at ./fun.c:1080
 #4  0x10060138 in scheme_apply_multi (rator=0x0, num_rands=2, rands=0x110b0488)
     at ./fun.c:1092
 #5  0x100d6868 in wxsExecute (argv=0x7fffd0f8) at ./wxscheme.cxx:1718
 #6  0x1018c3c0 in wxPostScriptDC::EndDoc (this=0x10d4d000)
     at DeviceContexts/../../../wxcommon/PSDC.cxx:1483
 #7  0x10158b38 in wxMediaBuffer::Print (this=0x10c58710, 
     interactive=285935312, fitToPage=1, parent=0x10d4d000)
     at ./wx_mbuf.cxx:1338
 #8  0x10114070 in os_wxMediaBufferPrint (n=5, p=0x10643d68)
     at ./wxs_medi.cxx:2228
 #9  0x100581ec in scheme_do_eval (obj=0x103d5ac0, num_rands=5, 
     rands=0x10643d68, get_value=-1) at ./eval.c:2622
 #10 0x1006258c in do_dyn_wind (d=0x0) at ./fun.c:2259
 #11 0x10062898 in scheme_dynamic_wind (pre=0, act=0x1006256c <do_dyn_wind>, 
     post=0x1006259c <post_dyn_wind>, jmp_handler=0, data=0x110b6900)
     at ./fun.c:2348
 #12 0x10062664 in dynamic_wind (c=0, p=0x10643d94) at ./fun.c:2286
 #13 0x100581ec in scheme_do_eval (obj=0x103816f8, num_rands=3, 
     rands=0x10643d94, get_value=-1) at ./eval.c:2622
 #14 0x10061774 in call_with_values (argc=2, argv=0x10643dac) at ./fun.c:1770
 #15 0x100581ec in scheme_do_eval (obj=0x10362f64, num_rands=2, 
     rands=0x10643dac, get_value=-1) at ./eval.c:2622
 #16 0x1006258c in do_dyn_wind (d=0x0) at ./fun.c:2259
 #17 0x10062898 in scheme_dynamic_wind (pre=0, act=0x1006256c <do_dyn_wind>, 
     post=0x1006259c <post_dyn_wind>, jmp_handler=0, data=0x110b6918)
     at ./fun.c:2348
 #18 0x10062664 in dynamic_wind (c=0, p=0x10643db8) at ./fun.c:2286
 #19 0x100581ec in scheme_do_eval (obj=0x103816f8, num_rands=3, 
     rands=0x10643db8, get_value=-1) at ./eval.c:2622
 #20 0x10061914 in do_call_ec (ec=0x10270000) at ./fun.c:1854
 #21 0x10062898 in scheme_dynamic_wind (pre=0, act=0x100618ec <do_call_ec>, 
     post=0x100618e0 <post_call_ec>, jmp_handler=0x10061924 <handle_call_ec>, 
     data=0x10ca5690) at ./fun.c:2348
 #22 0x10061a68 in scheme_call_ec (argc=-1, argv=0x10643dd0) at ./fun.c:1893
 #23 0x100581ec in scheme_do_eval (obj=0x10362f14, num_rands=1, 
     rands=0x10643dd0, get_value=1) at ./eval.c:2622
 #24 0x10058b5c in scheme_do_eval (obj=0x104f9fa0, num_rands=0, 
     rands=0x10643dc0, get_value=1) at ./eval.c:3053
 #25 0x100600a4 in apply_k () at ./fun.c:1065
 #26 0x1005fe9c in scheme_top_level_do (k=0x10060060 <apply_k>, eb=0)
     at ./fun.c:988
 #27 0x100600e8 in _apply (rator=0x0, num_rands=2, rands=0x110b0488, multi=-1, 
     eb=275001344) at ./fun.c:1080
 #28 0x10060110 in scheme_apply (rator=0x0, num_rands=2, rands=0x110b0488)
     at ./fun.c:1086
 #29 0x101027b0 in KMCallbackToScheme (media=0x0, event=0x2, data=0x10b00af0)
     at ./wxs_madm.cxx:4494
 #30 0x10156598 in wxKMFunc::Call (this=0x10270000, media=0x2, event=0x110b0488)
     at ./wx_keym.cxx:1058
 #31 0x10156240 in wxKeymap::CallFunction (this=0x10fb48a0, 
     name=0x10d48930 "menu-item", media=0x10dc4f00, event=0x1101d7a8, 
     try_chained=0) at ./wx_keym.cxx:970
 #32 0x10155744 in wxKeymap::ChainHandleKeyEvent (this=0x10fb48a0, 
     media=0x10dc4f00, event=0x1101d7a8, grab=0, grabData=0x0, try_state=-1, 
     score=21) at ./wx_keym.cxx:728
 #33 0x1015553c in wxKeymap::OtherHandleKeyEvent (this=0x10fb4c38, 
     media=0x10dc4f00, event=0x1101d7a8, grab=0, grabData=0x0, try_state=-1, 
     score=21) at ./wx_keym.cxx:676
 #34 0x101557b8 in wxKeymap::ChainHandleKeyEvent (this=0x10fb4c38, 
     media=0x10dc4f00, event=0x1101d7a8, grab=0, grabData=0x0, try_state=-1, 
     score=21) at ./wx_keym.cxx:741
 #35 0x1015553c in wxKeymap::OtherHandleKeyEvent (this=0x10fb4d4c, 
     media=0x10dc4f00, event=0x1101d7a8, grab=0, grabData=0x0, try_state=-1, 
     score=21) at ./wx_keym.cxx:676
 #36 0x101557b8 in wxKeymap::ChainHandleKeyEvent (this=0x10fb4d4c, 
     media=0x10dc4f00, event=0x1101d7a8, grab=0, grabData=0x0, try_state=-1, 
     score=21) at ./wx_keym.cxx:741
 #37 0x1015544c in wxKeymap::HandleKeyEvent (this=0x10fb4d4c, media=0x10dc4f00, 
     event=0x1101d7a8) at ./wx_keym.cxx:656
 #38 0x10102190 in os_wxKeymapHandleKeyEvent (n=285934728, p=0x10f71280)
     at ./wxs_madm.cxx:4315
 #39 0x100581ec in scheme_do_eval (obj=0x103d86a0, num_rands=3, 
     rands=0x10643ddc, get_value=1) at ./eval.c:2622
 #40 0x10058ff0 in scheme_do_eval (obj=0x10539cfc, num_rands=0, rands=0x0, 
     get_value=-1) at ./eval.c:3295
 #41 0x1006258c in do_dyn_wind (d=0x0) at ./fun.c:2259
 #42 0x10062898 in scheme_dynamic_wind (pre=0, act=0x1006256c <do_dyn_wind>, 
     post=0x1006259c <post_dyn_wind>, jmp_handler=0, data=0x110b69cc)
     at ./fun.c:2348
 #43 0x10062664 in dynamic_wind (c=0, p=0x10643e04) at ./fun.c:2286
 #44 0x100581ec in scheme_do_eval (obj=0x103816f8, num_rands=3, 
     rands=0x10643e04, get_value=-1) at ./eval.c:2622
 #45 0x10061774 in call_with_values (argc=2, argv=0x10643e1c) at ./fun.c:1770
 #46 0x100581ec in scheme_do_eval (obj=0x10362f64, num_rands=2, 
     rands=0x10643e1c, get_value=-1) at ./eval.c:2622
 #47 0x1006258c in do_dyn_wind (d=0x0) at ./fun.c:2259
 #48 0x10062898 in scheme_dynamic_wind (pre=0, act=0x1006256c <do_dyn_wind>, 
     post=0x1006259c <post_dyn_wind>, jmp_handler=0, data=0x110b1da4)
     at ./fun.c:2348
 #49 0x10062664 in dynamic_wind (c=0, p=0x10643e28) at ./fun.c:2286
 #50 0x100581ec in scheme_do_eval (obj=0x103816f8, num_rands=3, 
     rands=0x10643e28, get_value=-1) at ./eval.c:2622
 #51 0x10061914 in do_call_ec (ec=0x10270000) at ./fun.c:1854
 #52 0x10062898 in scheme_dynamic_wind (pre=0, act=0x100618ec <do_call_ec>, 
     post=0x100618e0 <post_call_ec>, jmp_handler=0x10061924 <handle_call_ec>, 
     data=0x10ca5b18) at ./fun.c:2348
 #53 0x10061a68 in scheme_call_ec (argc=-1, argv=0x10643e40) at ./fun.c:1893
 #54 0x100581ec in scheme_do_eval (obj=0x10362f14, num_rands=1, 
     rands=0x10643e40, get_value=1) at ./eval.c:2622
 #55 0x10058b5c in scheme_do_eval (obj=0x104f9fa0, num_rands=0, 
     rands=0x10643e38, get_value=1) at ./eval.c:3053
 #56 0x10058ff0 in scheme_do_eval (obj=0x10528e10, num_rands=3, 
     rands=0x10643e1c, get_value=-1) at ./eval.c:3295
 #57 0x1006258c in do_dyn_wind (d=0x0) at ./fun.c:2259
 #58 0x10062898 in scheme_dynamic_wind (pre=0, act=0x1006256c <do_dyn_wind>, 
     post=0x1006259c <post_dyn_wind>, jmp_handler=0, data=0x110b1dc8)
     at ./fun.c:2348
 #59 0x10062664 in dynamic_wind (c=0, p=0x10643e6c) at ./fun.c:2286
 #60 0x100581ec in scheme_do_eval (obj=0x103816f8, num_rands=3, 
     rands=0x10643e6c, get_value=-1) at ./eval.c:2622
 #61 0x10061774 in call_with_values (argc=2, argv=0x10643e84) at ./fun.c:1770
 #62 0x100581ec in scheme_do_eval (obj=0x10362f64, num_rands=2, 
     rands=0x10643e84, get_value=-1) at ./eval.c:2622
 #63 0x1006258c in do_dyn_wind (d=0x0) at ./fun.c:2259
 #64 0x10062898 in scheme_dynamic_wind (pre=0, act=0x1006256c <do_dyn_wind>, 
     post=0x1006259c <post_dyn_wind>, jmp_handler=0, data=0x110b1de0)
     at ./fun.c:2348
 #65 0x10062664 in dynamic_wind (c=0, p=0x10643e90) at ./fun.c:2286
 #66 0x100581ec in scheme_do_eval (obj=0x103816f8, num_rands=3, 
     rands=0x10643e90, get_value=-1) at ./eval.c:2622
 #67 0x10061914 in do_call_ec (ec=0x10270000) at ./fun.c:1854
 #68 0x10062898 in scheme_dynamic_wind (pre=0, act=0x100618ec <do_call_ec>, 
     post=0x100618e0 <post_call_ec>, jmp_handler=0x10061924 <handle_call_ec>, 
     data=0x10ca5b40) at ./fun.c:2348
 #69 0x10061a68 in scheme_call_ec (argc=-1, argv=0x10643ea8) at ./fun.c:1893
 #70 0x100581ec in scheme_do_eval (obj=0x10362f14, num_rands=1, 
     rands=0x10643ea8, get_value=1) at ./eval.c:2622
 #71 0x10058b5c in scheme_do_eval (obj=0x104f9fa0, num_rands=0, 
     rands=0x10643e98, get_value=1) at ./eval.c:3053
 #72 0x100600a4 in apply_k () at ./fun.c:1065
 #73 0x1005fe9c in scheme_top_level_do (k=0x10060060 <apply_k>, eb=0)
     at ./fun.c:988
 #74 0x100600e8 in _apply (rator=0x0, num_rands=2, rands=0x110b0488, multi=-1, 
     eb=275001344) at ./fun.c:1080
 #75 0x10060110 in scheme_apply (rator=0x0, num_rands=2, rands=0x110b0488)
     at ./fun.c:1086
 #76 0x100ea638 in os_wxFrame::PreOnChar (this=0x110aa420, x0=0x10270000, 
     x1=0x1101d7a8) at ./wxs_fram.cxx:292
 #77 0x101b0268 in wxWindow::CallPreOnChar (this=0x10d4d124, win=0x110aa420, 
     event=0x1101d7a8) at ./Windows/Window.cc:1036
 #78 0x101b0234 in wxWindow::CallPreOnChar (this=0x10d4d124, win=0x10ec4c24, 
     event=0x1101d7a8) at ./Windows/Window.cc:1036
 #79 0x101b0234 in wxWindow::CallPreOnChar (this=0x10d4d124, win=0x10ec49d4, 
     event=0x1101d7a8) at ./Windows/Window.cc:1036
 #80 0x101b0234 in wxWindow::CallPreOnChar (this=0x10d4d124, win=0x10ec4784, 
     event=0x1101d7a8) at ./Windows/Window.cc:1036
 #81 0x101b0234 in wxWindow::CallPreOnChar (this=0x10d4d124, win=0x10834e74, 
     event=0x1101d7a8) at ./Windows/Window.cc:1036
 #82 0x101b0234 in wxWindow::CallPreOnChar (this=0x10d4d124, win=0x10d4d124, 
     event=0x1101d7a8) at ./Windows/Window.cc:1036
 #83 0x101b111c in wxWindow::WindowEventHandler (w=0x0, winp=0x2, 
     xev=0x7fffebc8, continue_to_dispatch_return=0x7fffeae8 "")
     at ./Windows/Window.cc:1575
 #84 0xfea36e4 in XtDispatchEventToWidget () from /usr/X11R6/lib/libXt.so.6
 #85 0xfea4354 in _XtDefaultDispatcher () from /usr/X11R6/lib/libXt.so.6
 #86 0xfea4568 in XtDispatchEvent () from /usr/X11R6/lib/libXt.so.6
 #87 0x100d1f70 in MrEdDispatchEvent (event=0x7fffebc8) at ./mredx.cxx:405
 #88 0x100cfd08 in GoAhead (c=0x110b0488) at ./mred.cxx:895
 #89 0x100cfe98 in DoTheEvent (c=0x105fdd10) at ./mred.cxx:945
 #90 0x100d005c in MrEdDoNextEvent (c=0x105fdd10, 
     alt=0x100cf8f0 <check_eventspace_inactive(void *)>, altdata=0x105fdd10)
     at ./mred.cxx:1002
 #91 0x100d094c in wxDispatchEventsUntil (
     f=0x100cf8f0 <check_eventspace_inactive(void *)>, data=0x105fdd10)
     at ./mred.cxx:1355
 #92 0x100cfa28 in mred_wait_eventspace () at ./mred.cxx:804
 #93 0x10048818 in yield_indefinitely () at ./mrmain.cxx:58
 #94 0x10048d30 in finish_cmd_line_run (fa=0x104dc240, 
     repl=0x10049974 <do_graph_repl(Scheme_Env *)>)
     at ../mzscheme/cmdline.inc:181
 #95 0x100499e0 in finish_cmd_line_run () at ./mrmain.cxx:195
 #96 0x100d1700 in MrEdApp::RealInit (this=0x0) at ./mred.cxx:2729
 #97 0x100d0358 in handle_events (cx=0x0) at ./mred.cxx:1108
 #98 0x10058634 in scheme_do_eval (obj=0x10619438, num_rands=0, rands=0x0, 
     get_value=-1) at ./eval.c:2807
 #99 0x100600a4 in apply_k () at ./fun.c:1065
 #100 0x1005fe9c in scheme_top_level_do (k=0x10060060 <apply_k>, eb=0)
     at ./fun.c:988
 #101 0x100600e8 in _apply (rator=0x0, num_rands=2, rands=0x110b0488, multi=-1, 
     eb=275001344) at ./fun.c:1080
 #102 0x10060138 in scheme_apply_multi (rator=0x0, num_rands=2, 
     rands=0x110b0488) at ./fun.c:1092
 #103 0x100b538c in start_child (child=0x10642000, return_to_thread=0x0, 
     child_eval=0x10619438) at ./thread.c:1414
 #104 0x100b54b8 in make_subprocess (child_thunk=0x10619438, 
     child_start=0x7ffff458, config=0x10642000, mgr=0x0) at ./thread.c:1457
 #105 0x100b5894 in scheme_thread_w_custodian (thunk=0x10619438, 
     config=0x10449330, mgr=0x0) at ./thread.c:1622
 Current language:  auto; currently c
 (gdb) quit
 
 -----86593672467-------
 

From: Matthew Flatt <mflatt@cs.utah.edu>
To: Robert Bruce Findler <robby@cs.rice.edu>
Cc: bugs@plt-scheme.org
Subject: Re: all/2143: print to PS doesn't work in Help Desk
Date: Mon, 5 Nov 2001 15:10:49 -0700 (MST)

 Quoting Robert Bruce Findler:
 > Indeed, I didn't have the afm collection. I still get a crash when I
 > add it in, however. This time I got a stack trace, tho.
 
 That looks useful.
 
 Can you verify that your plt/collects/mred/mred.ss contains a call to
 `wx:set-executer' (sic)?
 
 Thanks,
 Matthew
 

From: Robert Bruce Findler <robby@cs.rice.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: bugs@plt-scheme.org
Subject: Re: all/2143: print to PS doesn't work in Help Desk
Date: Mon, 5 Nov 2001 17:18:25 -0500 (EST)

 Quoting Matthew Flatt:
 > Can you verify that your plt/collects/mred/mred.ss contains a call to
 > `wx:set-executer' (sic)?
 
 yep, it's got one.
 

From: Matthew Flatt <mflatt@cs.utah.edu>
To: Robert Bruce Findler <robby@cs.rice.edu>
Cc: bugs@plt-scheme.org
Subject: Re: all/2143: print to PS doesn't work in Help Desk
Date: Mon, 5 Nov 2001 15:34:05 -0700 (MST)

 Quoting Robert Bruce Findler:
 > Quoting Matthew Flatt:
 > > Can you verify that your plt/collects/mred/mred.ss contains a call to
 > > `wx:set-executer' (sic)?
 > 
 > yep, it's got one.
 
 I'm stumped. Can you check (with gdb) whether SetExecuter gets called
 when MrEd starts?
 
 

From: Robert Bruce Findler <robby@cs.rice.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: bugs@plt-scheme.org
Subject: Re: all/2143: print to PS doesn't work in Help Desk
Date: Mon, 5 Nov 2001 17:59:19 -0500 (EST)

 okay, something funny is going on. Now, I have no problems with
 printing, and in the interim I was on the wrong file system. So, I'm
 not entirely sure what was going on, anymore (I'm esp. confused, since
 sirmail can only attach files on my laptop, so I *must* have gotten
 that OUTPUT file from my laptop)
 
 Since there doesn't seem to be a problem now, I say forget it.
 
 In the meantime, do you have ready access to a windows machine to test
 that the original problem of this PR was fixed? I can do it when I
 return to Houston if you'd prefer.
 
 Robby

From: Matthew Flatt <mflatt@cs.utah.edu>
To: Robert Bruce Findler <robby@cs.rice.edu>
Cc: bugs@plt-scheme.org
Subject: Re: all/2143: print to PS doesn't work in Help Desk
Date: Mon, 5 Nov 2001 16:01:03 -0700 (MST)

 Quoting Robert Bruce Findler:
 > In the meantime, do you have ready access to a windows machine to test
 > that the original problem of this PR was fixed?
 
 I think I'll be able to try tonight.
 
 Matthew
 

From: Matthew Flatt <mflatt@cs.utah.edu>
To: Robert Bruce Findler <robby@cs.rice.edu>
Cc: bugs@plt-scheme.org
Subject: Re: all/2143: print to PS doesn't work in Help Desk
Date: Mon, 5 Nov 2001 20:47:40 -0700 (MST)

 Quoting Robert Bruce Findler:
 > In the meantime, do you have ready access to a windows machine to test
 > that the original problem of this PR was fixed?
 
 Works fine.
 
 Matthew
 
Responsible-Changed-From-To: steck->robby
Responsible-Changed-By: robby
Responsible-Changed-When: Thu Nov  8 12:15:47 2001
Responsible-Changed-Why:
    because
State-Changed-From-To: open->closed
State-Changed-By: robby
State-Changed-When: Wed Nov 28 20:39:26 2001
State-Changed-Why:
    fixed
>Unformatted:

