From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Mon Sep 14 14:11:37 2009
Received: from mail-yw0-f187.google.com (mail-yw0-f187.google.com [209.85.211.187])
	by champlain.ccs.neu.edu (8.14.2/8.14.2) with ESMTP id n8EIBVTl008072
	for <bugs@bugs.plt-scheme.org>; Mon, 14 Sep 2009 14:11:31 -0400
Message-Id: <200909141811.n8EIBTAW008064@champlain.ccs.neu.edu>
Date: Mon, 14 Sep 2009 14:11:29 -0400
From: cce@ccs.neu.edu
To: bugs@plt-scheme.org
Subject: Using drscheme/tool-lib results in reference to identifiers before their definition

>Number:         10457
>Category:       drscheme
>Synopsis:       Using drscheme/tool-lib results in reference to identifiers before their definition
>Class:          sw-bug
>Responsible:    robby
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Mon Sep 14 14:12:01 -0400 2009
>Last-Modified:  Thu May 12 17:37:18 -0400 2011
>Originator:     Carl Eastlund
>Organization:
plt
>Submitter-Id:   unknown
>Release:        4.2.1.8
>Environment:
MacPPC / Mozilla/5.0 (Macintosh; U; PPC Mac OS X 10.5; en-US; rv:1.9.0.1) Gecko/2008070206 Firefox/3.0.1
>Description:
If I try to use drscheme/tool-lib to build a DrScheme plugin, I get an error like this from the first reference to an imported definition:


Error invoking tool #<path:/Users/cce/Desktop/bug/>;("tool.ss")

reference to an identifier before its definition: drscheme:language:module-based-language->language-mixin in module: "/Users/cce/plt/trunk/collects/drscheme/tool-lib.ss"

 === context ===
/Users/cce/plt/trunk/collects/drscheme/private/tools.ss:265:4
/Users/cce/plt/trunk/collects/scheme/private/map.ss:45:11: for-each
/Users/cce/plt/trunk/collects/drscheme/private/tools.ss:62:0: load/invoke-all-tools
>How-To-Repeat:
Create a directory for a collection or planet development link containing these three files:

info.ss:

#lang setup/infotab
(define name "Bug Report")
(define tools (list (list "tool.ss")))
(define tool-names (list "Tool-Lib Error"))


tool.ss:

#lang scheme/gui
(require drscheme/tool "helper.ss")
(provide tool@)
(define-unit tool@
  (import drscheme:tool^)
  (export drscheme:tool-exports^)
  (define (phase1) (void))
  (define (phase2) (void)))


helper.ss:

#lang scheme/gui
(require drscheme/tool-lib)
(define simple-language-level%
  (drscheme:language:module-based-language->language-mixin
   (drscheme:language:simple-module-based-language->module-based-language-mixin
    drscheme:language:simple-module-based-language%)))


Run DrScheme with the new tool installed (e.g. with new collection or planet package installed and compiled).  On startup, while invoking the tool, DrScheme will produce the above error.
>Fix:
>Audit-Trail:
From: Robby Findler <robby@eecs.northwestern.edu>
To: cce@ccs.neu.edu, bugs@plt-scheme.org
Cc: nobody@plt-scheme.org, bug-notification@plt-scheme.org
Subject: Re: [plt-bug] all/10457: Using drscheme/tool-lib results in reference 
	to identifiers before their definition
Date: Mon, 14 Sep 2009 13:40:19 -0500

 Ah yes, I see why that is. You cannot refer to those identifiers in
 the top-level of a file required by the tool. They will work if you
 delay the variable reference until later (say during a gui callback or
 something).
 
 It isn't immediately obvious to me how to fix this.
 
 Robby
 
 On Mon, Sep 14, 2009 at 1:12 PM,  <cce@ccs.neu.edu> wrote:
 > A new problem report is waiting at
 > =C2=A0http://bugs.plt-scheme.org/query/?cmd=3Dview&pr=3D10457
 >
 > Reported by Carl Eastlund for release: 4.2.1.8
 >
 > *** Description:
 > If I try to use drscheme/tool-lib to build a DrScheme plugin, I get an er=
 ror like this from the first reference to an imported definition:
 >
 >
 > Error invoking tool #<path:/Users/cce/Desktop/bug/>;("tool.ss")
 >
 > reference to an identifier before its definition: drscheme:language:modul=
 e-based-language->language-mixin in module: "/Users/cce/plt/trunk/collects/=
 drscheme/tool-lib.ss"
 >
 > =C2=A0=3D=3D=3D context =3D=3D=3D
 > /Users/cce/plt/trunk/collects/drscheme/private/tools.ss:265:4
 > /Users/cce/plt/trunk/collects/scheme/private/map.ss:45:11: for-each
 > /Users/cce/plt/trunk/collects/drscheme/private/tools.ss:62:0: load/invoke=
 -all-tools
 >
 > *** How to repeat:
 > Create a directory for a collection or planet development link containing=
  these three files:
 >
 > info.ss:
 >
 > #lang setup/infotab
 > (define name "Bug Report")
 > (define tools (list (list "tool.ss")))
 > (define tool-names (list "Tool-Lib Error"))
 >
 >
 > tool.ss:
 >
 > #lang scheme/gui
 > (require drscheme/tool "helper.ss")
 > (provide tool@)
 > (define-unit tool@
 > =C2=A0(import drscheme:tool^)
 > =C2=A0(export drscheme:tool-exports^)
 > =C2=A0(define (phase1) (void))
 > =C2=A0(define (phase2) (void)))
 >
 >
 > helper.ss:
 >
 > #lang scheme/gui
 > (require drscheme/tool-lib)
 > (define simple-language-level%
 > =C2=A0(drscheme:language:module-based-language->language-mixin
 > =C2=A0 (drscheme:language:simple-module-based-language->module-based-lang=
 uage-mixin
 > =C2=A0 =C2=A0drscheme:language:simple-module-based-language%)))
 >
 >
 > Run DrScheme with the new tool installed (e.g. with new collection or pla=
 net package installed and compiled). =C2=A0On startup, while invoking the t=
 ool, DrScheme will produce the above error.
 >
 > *** Environment:
 > MacPPC / Mozilla/5.0 (Macintosh; U; PPC Mac OS X 10.5; en-US; rv:1.9.0.1)=
  Gecko/2008070206 Firefox/3.0.1
 >
 >
From: Carl Eastlund <cce@ccs.neu.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: bugs@plt-scheme.org, nobody@plt-scheme.org,
        bug-notification@plt-scheme.org
Subject: Re: [plt-bug] all/10457: Using drscheme/tool-lib results in reference 
	to identifiers before their definition
Date: Mon, 14 Sep 2009 14:46:59 -0400

 Documenting this restriction would be fine for now, so users know to
 either use the earlier unit version or otherwise delay execution.  For
 instance I imagine if everything from the library were referenced only
 in functions, mixins, and classes, and they were only ever invoked
 from either the tool unit or a GUI callback, there should be no
 problem.  Right?  As is there's just no description of where's OK and
 where's not.
 
 --Carl
 
 On Mon, Sep 14, 2009 at 2:40 PM, Robby Findler
 <robby@eecs.northwestern.edu> wrote:
 > Ah yes, I see why that is. You cannot refer to those identifiers in
 > the top-level of a file required by the tool. They will work if you
 > delay the variable reference until later (say during a gui callback or
 > something).
 >
 > It isn't immediately obvious to me how to fix this.
 >
 > Robby
 >
 > On Mon, Sep 14, 2009 at 1:12 PM, =A0<cce@ccs.neu.edu> wrote:
 >> A new problem report is waiting at
 >> =A0http://bugs.plt-scheme.org/query/?cmd=3Dview&pr=3D10457
 >>
 >> Reported by Carl Eastlund for release: 4.2.1.8
 >>
 >> *** Description:
 >> If I try to use drscheme/tool-lib to build a DrScheme plugin, I get an e=
 rror like this from the first reference to an imported definition:
 
 [snip]
From: Robby Findler <robby@eecs.northwestern.edu>
To: Carl Eastlund <cce@ccs.neu.edu>
Cc: bugs@plt-scheme.org, nobody@plt-scheme.org,
        bug-notification@plt-scheme.org
Subject: Re: [plt-bug] all/10457: Using drscheme/tool-lib results in reference 
	to identifiers before their definition
Date: Mon, 14 Sep 2009 14:17:24 -0500

 Yes, I think that's an accurate summary, but I'm not 100% sure. I
 would prefer to change it rather than document it, so I'll think about
 it some more first. If that's troublesome, you'd be more than welcome
 to write the docs yourself.
 
 The issue is that the tools are being loaded via a dynamic-require
 that happens before the tool-lib module is fully instantiated, but
 after it is required.
 
 Robby
 
 On Mon, Sep 14, 2009 at 1:46 PM, Carl Eastlund <cce@ccs.neu.edu> wrote:
 > Documenting this restriction would be fine for now, so users know to
 > either use the earlier unit version or otherwise delay execution. =C2=A0F=
 or
 > instance I imagine if everything from the library were referenced only
 > in functions, mixins, and classes, and they were only ever invoked
 > from either the tool unit or a GUI callback, there should be no
 > problem. =C2=A0Right? =C2=A0As is there's just no description of where's =
 OK and
 > where's not.
 >
 > --Carl
 >
 > On Mon, Sep 14, 2009 at 2:40 PM, Robby Findler
 > <robby@eecs.northwestern.edu> wrote:
 >> Ah yes, I see why that is. You cannot refer to those identifiers in
 >> the top-level of a file required by the tool. They will work if you
 >> delay the variable reference until later (say during a gui callback or
 >> something).
 >>
 >> It isn't immediately obvious to me how to fix this.
 >>
 >> Robby
 >>
 >> On Mon, Sep 14, 2009 at 1:12 PM, =C2=A0<cce@ccs.neu.edu> wrote:
 >>> A new problem report is waiting at
 >>> =C2=A0http://bugs.plt-scheme.org/query/?cmd=3Dview&pr=3D10457
 >>>
 >>> Reported by Carl Eastlund for release: 4.2.1.8
 >>>
 >>> *** Description:
 >>> If I try to use drscheme/tool-lib to build a DrScheme plugin, I get an =
 error like this from the first reference to an imported definition:
 >
 > [snip]
 >
From: Carl Eastlund <cce@ccs.neu.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: bugs@plt-scheme.org, nobody@plt-scheme.org,
        bug-notification@plt-scheme.org
Subject: Re: [plt-bug] all/10457: Using drscheme/tool-lib results in reference 
	to identifiers before their definition
Date: Mon, 14 Sep 2009 15:24:56 -0400

 If you think you can come up with a fix or at least a better setup,
 that's great.  I'm in no rush -- I can get by on the old unit-based
 interface just fine, where the order of instantiation is handled for
 me.
 
 Carl Eastlund
 
 On Mon, Sep 14, 2009 at 3:17 PM, Robby Findler
 <robby@eecs.northwestern.edu> wrote:
 > Yes, I think that's an accurate summary, but I'm not 100% sure. I
 > would prefer to change it rather than document it, so I'll think about
 > it some more first. If that's troublesome, you'd be more than welcome
 > to write the docs yourself.
 >
 > The issue is that the tools are being loaded via a dynamic-require
 > that happens before the tool-lib module is fully instantiated, but
 > after it is required.
 >
 > Robby
 >
 > On Mon, Sep 14, 2009 at 1:46 PM, Carl Eastlund <cce@ccs.neu.edu> wrote:
 >> Documenting this restriction would be fine for now, so users know to
 >> either use the earlier unit version or otherwise delay execution. =A0For
 >> instance I imagine if everything from the library were referenced only
 >> in functions, mixins, and classes, and they were only ever invoked
 >> from either the tool unit or a GUI callback, there should be no
 >> problem. =A0Right? =A0As is there's just no description of where's OK an=
 d
 >> where's not.
 >>
 >> --Carl

