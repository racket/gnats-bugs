From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Sat Oct  2 09:04:58 2010
Received: from mail-yx0-f172.google.com (mail-yx0-f172.google.com [209.85.213.172])
	by champlain.ccs.neu.edu (8.14.3/8.14.3) with ESMTP id o92D4uPj016031
	for <bugs@bugs.plt-scheme.org>; Sat, 2 Oct 2010 09:04:56 -0400
Message-Id: <201010021304.o92D4sGg016024@champlain.ccs.neu.edu>
Date: Sat, 2 Oct 2010 09:04:54 -0400
From: sk@cs.brown.edu
To: bugs@racket-lang.org
Subject: purple arrows considered harmful

>Number:         11278
>Category:       drscheme
>Synopsis:       purple arrows considered harmful
>Class:          sw-bug
>Responsible:    robby
>Notify-List:    ryanc@racket-lang.org
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Sat Oct 02 09:08:01 -0400 2010
>Last-Modified:  Wed Oct 06 17:10:28 -0400 2010
>Originator:     Shriram Krishnamurthi
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.0.1
>Environment:
windows "Windows NT 6.1 (Build 7600)" (win32\i386\3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 277547968

Collections:
(("C:\\Users\\sk\\AppData\\Roaming\\Racket\\5.0.1\\collects" "info-domain" "installed-teachpacks" "margrave" "plai") ("C:\\Program Files (x86)\\Racket\\5.0.1\\collects" "2htdp" "afm" "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "datalog" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "help" "hierlist" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "redex" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tex2page" "texpict" "trace" "!
 typed" "typed-scheme" "unstable" "version" "web-server" "wxme" "xml"))
Computer Language: (("Teaching Languages" "How to Design Programs" "Intermediate Student with lambda") (#(#t constructor repeating-decimal #f #t none) #f ((lib "cs019.rkt" "installed-teachpacks"))))
>Description:
Here's a simple program intended to illustrate static scope:

(: d/dx ((Number -> Number) -> (Number -> Number)))

(define dx 0.00001)

(define (d/dx f)
  (lambda (x)
    (/ (- (f (+ x dx))
          (f x))
       dx)))

(define (^2 n) (* n n))

(define d/dx-of-^2 (d/dx ^2))
(check-within (d/dx-of-^2 10) 20 dx)
(check-within (d/dx-of-^2 100) 200 dx)

(define (f x) (* x x x))
(check-within ((d/dx f) 10) 300 1)

Mousing over the binding of f in d/dx gives you THREE arrows: two to
the bound instances, and on FROM the top-level f, in purple w/ a
question-mark.

I suppose this is DrRacket trying to be helpful and show some kind of
possible dataflow, but it's awful in a pedagogic context.  It shows
ONLY the dataflow arrow I *don't* want it to show.  If it at least
also showed a purple-with-? for ^2, it would be easier to explain to
students that DrRacket is trying to be helpful.  But it doesn't.

The worst part is if you mouse over the f in (define (f x) ...), and
it shows one blue arrow (to the next line) and three purple arrows,
reaching right into the body of d/dx.

I unfortunately discovered this on-the-fly in class yesterday.  My TAs
chuckled at how quickly I moved my mouse away from f.  At first I
thought, "Aha, this is because I'm in ASL, and there's probably a
stateful operation that can cause the purple arrow...so Matthias can
say `I told you so' about ASL".  But in fact the same arrows appear in
ISL + ,\, and ain't no state there.

These additional arrows are pedagogically terrible.  Can we at least
then them off by default?  In *SL, getting basic pedagogy right should
always trump clever guesses.

Shriram
>How-To-Repeat:
>Fix:
>Audit-Trail:
From: Sam Tobin-Hochstadt <samth@ccs.neu.edu>
To: sk@cs.brown.edu, bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11278: purple arrows considered harmful
Date: Sat, 2 Oct 2010 09:17:40 -0400

 On Sat, Oct 2, 2010 at 9:08 AM,  <sk@cs.brown.edu> wrote:
 >
 > These additional arrows are pedagogically terrible. =A0Can we at least
 > then them off by default? =A0In *SL, getting basic pedagogy right should
 > always trump clever guesses.
 
 The purple arrows represent identifiers that appear under a
 `quote-syntax', not data flow.  Here's a simple program that shows
 both kinds of arrows:
 
 #lang racket
 
 (define x 1)
 x
 #'x
 
 I assume that the implementation of signatures is quoting the identifier.
 --=20
 sam th
 samth@ccs.neu.edu
From: Robby Findler <robby@eecs.northwestern.edu>
To: sk@cs.brown.edu, bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11278: purple arrows considered harmful
Date: Sat, 2 Oct 2010 08:36:35 -0500

 Boy, this long tirade is just wrong wrong wrong. You might want to try
 reading the check syntax documentation (scroll down a little from the
 link below).
 
   http://docs.racket-lang.org/drracket/buttons.html
 
 Robby
 
 On Sat, Oct 2, 2010 at 8:08 AM,  <sk@cs.brown.edu> wrote:
 > A new problem report is waiting at
 > =C2=A0http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D11278
 >
 > Reported by Shriram Krishnamurthi for release: 5.0.1
 >
 > *** Description:
 > Here's a simple program intended to illustrate static scope:
 >
 > (: d/dx ((Number -> Number) -> (Number -> Number)))
 >
 > (define dx 0.00001)
 >
 > (define (d/dx f)
 > =C2=A0(lambda (x)
 > =C2=A0 =C2=A0(/ (- (f (+ x dx))
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(f x))
 > =C2=A0 =C2=A0 =C2=A0 dx)))
 >
 > (define (^2 n) (* n n))
 >
 > (define d/dx-of-^2 (d/dx ^2))
 > (check-within (d/dx-of-^2 10) 20 dx)
 > (check-within (d/dx-of-^2 100) 200 dx)
 >
 > (define (f x) (* x x x))
 > (check-within ((d/dx f) 10) 300 1)
 >
 > Mousing over the binding of f in d/dx gives you THREE arrows: two to
 > the bound instances, and on FROM the top-level f, in purple w/ a
 > question-mark.
 >
 > I suppose this is DrRacket trying to be helpful and show some kind of
 > possible dataflow, but it's awful in a pedagogic context. =C2=A0It shows
 > ONLY the dataflow arrow I *don't* want it to show. =C2=A0If it at least
 > also showed a purple-with-? for ^2, it would be easier to explain to
 > students that DrRacket is trying to be helpful. =C2=A0But it doesn't.
 >
 > The worst part is if you mouse over the f in (define (f x) ...), and
 > it shows one blue arrow (to the next line) and three purple arrows,
 > reaching right into the body of d/dx.
 >
 > I unfortunately discovered this on-the-fly in class yesterday. =C2=A0My T=
 As
 > chuckled at how quickly I moved my mouse away from f. =C2=A0At first I
 > thought, "Aha, this is because I'm in ASL, and there's probably a
 > stateful operation that can cause the purple arrow...so Matthias can
 > say `I told you so' about ASL". =C2=A0But in fact the same arrows appear =
 in
 > ISL + ,\, and ain't no state there.
 >
 > These additional arrows are pedagogically terrible. =C2=A0Can we at least
 > then them off by default? =C2=A0In *SL, getting basic pedagogy right shou=
 ld
 > always trump clever guesses.
 >
 > Shriram
 >
 > *** How to repeat:
 >
 >
 > *** Environment:
 > windows "Windows NT 6.1 (Build 7600)" (win32\i386\3m) (get-display-depth)=
  =3D 32
 > Human Language: english
 > (current-memory-use) 277547968
 >
 > Collections:
 > (("C:\\Users\\sk\\AppData\\Roaming\\Racket\\5.0.1\\collects" "info-domain=
 " "installed-teachpacks" "margrave" "plai") ("C:\\Program Files (x86)\\Rack=
 et\\5.0.1\\collects" "2htdp" "afm" "algol60" "at-exp" "browser" "combinator=
 -parser" "compiler" "config" "datalog" "defaults" "deinprogramm" "drracket"=
  "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "frame=
 work" "frtime" "games" "graphics" "gui-debugger" "help" "hierlist" "htdp" "=
 html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make=
 " "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "pars=
 er-tools" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "ra=
 cket" "racklog" "rackunit" "raco" "reader" "readline" "redex" "rnrs" "s-exp=
 " "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "=
 slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" =
 "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tex2page" "te=
 xpict" "trace" "!
 > =C2=A0typed" "typed-scheme" "unstable" "version" "web-server" "wxme" "xml=
 "))
 > Computer Language: (("Teaching Languages" "How to Design Programs" "Inter=
 mediate Student with lambda") (#(#t constructor repeating-decimal #f #t non=
 e) #f ((lib "cs019.rkt" "installed-teachpacks"))))
 >
 >
From: Robby Findler <robby@eecs.northwestern.edu>
To: Michael Sperber <sperber@deinprogramm.de>
Cc: bugs@racket-lang.org
Subject: Re: [racket-bug] all/11278: purple arrows considered harmful
Date: Sat, 2 Oct 2010 08:38:51 -0500

 Is this something you know how to fix?
 
 I guess this much: the signature language is probably putting a syntax
 quoted identifier into the fully expanded program somewhere that check
 syntax is picking up. There are two possibilities I see for fixing it:
 don't do that, or change the source location so it points nowhere.
 (The right fix depends why that is happening, I expect.)
 
 Robby
 
 On Sat, Oct 2, 2010 at 8:08 AM,  <sk@cs.brown.edu> wrote:
 > A new problem report is waiting at
 > =C2=A0http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D11278
 >
 > Reported by Shriram Krishnamurthi for release: 5.0.1
 >
 > *** Description:
 > Here's a simple program intended to illustrate static scope:
 >
 > (: d/dx ((Number -> Number) -> (Number -> Number)))
 >
 > (define dx 0.00001)
 >
 > (define (d/dx f)
 > =C2=A0(lambda (x)
 > =C2=A0 =C2=A0(/ (- (f (+ x dx))
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(f x))
 > =C2=A0 =C2=A0 =C2=A0 dx)))
 >
 > (define (^2 n) (* n n))
 >
 > (define d/dx-of-^2 (d/dx ^2))
 > (check-within (d/dx-of-^2 10) 20 dx)
 > (check-within (d/dx-of-^2 100) 200 dx)
 >
 > (define (f x) (* x x x))
 > (check-within ((d/dx f) 10) 300 1)
 >
 > Mousing over the binding of f in d/dx gives you THREE arrows: two to
 > the bound instances, and on FROM the top-level f, in purple w/ a
 > question-mark.
 >
 > I suppose this is DrRacket trying to be helpful and show some kind of
 > possible dataflow, but it's awful in a pedagogic context. =C2=A0It shows
 > ONLY the dataflow arrow I *don't* want it to show. =C2=A0If it at least
 > also showed a purple-with-? for ^2, it would be easier to explain to
 > students that DrRacket is trying to be helpful. =C2=A0But it doesn't.
 >
 > The worst part is if you mouse over the f in (define (f x) ...), and
 > it shows one blue arrow (to the next line) and three purple arrows,
 > reaching right into the body of d/dx.
 >
 > I unfortunately discovered this on-the-fly in class yesterday. =C2=A0My T=
 As
 > chuckled at how quickly I moved my mouse away from f. =C2=A0At first I
 > thought, "Aha, this is because I'm in ASL, and there's probably a
 > stateful operation that can cause the purple arrow...so Matthias can
 > say `I told you so' about ASL". =C2=A0But in fact the same arrows appear =
 in
 > ISL + ,\, and ain't no state there.
 >
 > These additional arrows are pedagogically terrible. =C2=A0Can we at least
 > then them off by default? =C2=A0In *SL, getting basic pedagogy right shou=
 ld
 > always trump clever guesses.
 >
 > Shriram
 >
 > *** How to repeat:
 >
 >
 > *** Environment:
 > windows "Windows NT 6.1 (Build 7600)" (win32\i386\3m) (get-display-depth)=
  =3D 32
 > Human Language: english
 > (current-memory-use) 277547968
 >
 > Collections:
 > (("C:\\Users\\sk\\AppData\\Roaming\\Racket\\5.0.1\\collects" "info-domain=
 " "installed-teachpacks" "margrave" "plai") ("C:\\Program Files (x86)\\Rack=
 et\\5.0.1\\collects" "2htdp" "afm" "algol60" "at-exp" "browser" "combinator=
 -parser" "compiler" "config" "datalog" "defaults" "deinprogramm" "drracket"=
  "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "frame=
 work" "frtime" "games" "graphics" "gui-debugger" "help" "hierlist" "htdp" "=
 html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make=
 " "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "pars=
 er-tools" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "ra=
 cket" "racklog" "rackunit" "raco" "reader" "readline" "redex" "rnrs" "s-exp=
 " "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "=
 slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" =
 "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tex2page" "te=
 xpict" "trace" "!
 > =C2=A0typed" "typed-scheme" "unstable" "version" "web-server" "wxme" "xml=
 "))
 > Computer Language: (("Teaching Languages" "How to Design Programs" "Inter=
 mediate Student with lambda") (#(#t constructor repeating-decimal #f #t non=
 e) #f ((lib "cs019.rkt" "installed-teachpacks"))))
 >
 >
From: Shriram Krishnamurthi <sk@cs.brown.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11278: purple arrows considered harmful
Date: Sat, 2 Oct 2010 09:57:22 -0400

 I did read the documentation.  What am I supposed to get from it?
 There are no macros anywhere in ISL or ASL programs.  The concept
 simply makes no sense to a person at that level.
 
 I'm giving you the best conjecture a user can make given the concepts
 known to them.  Don't you believe in language levels?
 
 Shriram
 
 On Sat, Oct 2, 2010 at 9:36 AM, Robby Findler
 <robby@eecs.northwestern.edu> wrote:
 > Boy, this long tirade is just wrong wrong wrong. You might want to try
 > reading the check syntax documentation (scroll down a little from the
 > link below).
 >
 > =A0http://docs.racket-lang.org/drracket/buttons.html
 >
 > Robby
 >
 > On Sat, Oct 2, 2010 at 8:08 AM, =A0<sk@cs.brown.edu> wrote:
 >> A new problem report is waiting at
 >> =A0http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D11278
 >>
 >> Reported by Shriram Krishnamurthi for release: 5.0.1
 >>
 >> *** Description:
 >> Here's a simple program intended to illustrate static scope:
 >>
 >> (: d/dx ((Number -> Number) -> (Number -> Number)))
 >>
 >> (define dx 0.00001)
 >>
 >> (define (d/dx f)
 >> =A0(lambda (x)
 >> =A0 =A0(/ (- (f (+ x dx))
 >> =A0 =A0 =A0 =A0 =A0(f x))
 >> =A0 =A0 =A0 dx)))
 >>
 >> (define (^2 n) (* n n))
 >>
 >> (define d/dx-of-^2 (d/dx ^2))
 >> (check-within (d/dx-of-^2 10) 20 dx)
 >> (check-within (d/dx-of-^2 100) 200 dx)
 >>
 >> (define (f x) (* x x x))
 >> (check-within ((d/dx f) 10) 300 1)
 >>
 >> Mousing over the binding of f in d/dx gives you THREE arrows: two to
 >> the bound instances, and on FROM the top-level f, in purple w/ a
 >> question-mark.
 >>
 >> I suppose this is DrRacket trying to be helpful and show some kind of
 >> possible dataflow, but it's awful in a pedagogic context. =A0It shows
 >> ONLY the dataflow arrow I *don't* want it to show. =A0If it at least
 >> also showed a purple-with-? for ^2, it would be easier to explain to
 >> students that DrRacket is trying to be helpful. =A0But it doesn't.
 >>
 >> The worst part is if you mouse over the f in (define (f x) ...), and
 >> it shows one blue arrow (to the next line) and three purple arrows,
 >> reaching right into the body of d/dx.
 >>
 >> I unfortunately discovered this on-the-fly in class yesterday. =A0My TAs
 >> chuckled at how quickly I moved my mouse away from f. =A0At first I
 >> thought, "Aha, this is because I'm in ASL, and there's probably a
 >> stateful operation that can cause the purple arrow...so Matthias can
 >> say `I told you so' about ASL". =A0But in fact the same arrows appear in
 >> ISL + ,\, and ain't no state there.
 >>
 >> These additional arrows are pedagogically terrible. =A0Can we at least
 >> then them off by default? =A0In *SL, getting basic pedagogy right should
 >> always trump clever guesses.
 >>
 >> Shriram
 >>
 >> *** How to repeat:
 >>
 >>
 >> *** Environment:
 >> windows "Windows NT 6.1 (Build 7600)" (win32\i386\3m) (get-display-depth=
 ) =3D 32
 >> Human Language: english
 >> (current-memory-use) 277547968
 >>
 >> Collections:
 >> (("C:\\Users\\sk\\AppData\\Roaming\\Racket\\5.0.1\\collects" "info-domai=
 n" "installed-teachpacks" "margrave" "plai") ("C:\\Program Files (x86)\\Rac=
 ket\\5.0.1\\collects" "2htdp" "afm" "algol60" "at-exp" "browser" "combinato=
 r-parser" "compiler" "config" "datalog" "defaults" "deinprogramm" "drracket=
 " "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "fram=
 ework" "frtime" "games" "graphics" "gui-debugger" "help" "hierlist" "htdp" =
 "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "mak=
 e" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "par=
 ser-tools" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "r=
 acket" "racklog" "rackunit" "raco" "reader" "readline" "redex" "rnrs" "s-ex=
 p" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" =
 "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax"=
  "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tex2page" "t=
 expict" "trace" "!
 >> =A0typed" "typed-scheme" "unstable" "version" "web-server" "wxme" "xml")=
 )
 >> Computer Language: (("Teaching Languages" "How to Design Programs" "Inte=
 rmediate Student with lambda") (#(#t constructor repeating-decimal #f #t no=
 ne) #f ((lib "cs019.rkt" "installed-teachpacks"))))
 >>
 >>
 >
From: Robby Findler <robby@eecs.northwestern.edu>
To: Shriram Krishnamurthi <sk@cs.brown.edu>
Cc: bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11278: purple arrows considered harmful
Date: Sat, 2 Oct 2010 09:12:49 -0500

 On Sat, Oct 2, 2010 at 8:57 AM, Shriram Krishnamurthi <sk@cs.brown.edu> wro=
 te:
 > I did read the documentation. =C2=A0What am I supposed to get from it?
 > There are no macros anywhere in ISL or ASL programs. =C2=A0The concept
 > simply makes no sense to a person at that level.
 
 It is a bug, that much you are right on about.
 
 > I'm giving you the best conjecture a user can make given the concepts
 > known to them. =C2=A0Don't you believe in language levels?
 
 I believe in bug reports without annoying commentaries.
 
 Robby
 
 > Shriram
 >
 > On Sat, Oct 2, 2010 at 9:36 AM, Robby Findler
 > <robby@eecs.northwestern.edu> wrote:
 >> Boy, this long tirade is just wrong wrong wrong. You might want to try
 >> reading the check syntax documentation (scroll down a little from the
 >> link below).
 >>
 >> =C2=A0http://docs.racket-lang.org/drracket/buttons.html
 >>
 >> Robby
 >>
 >> On Sat, Oct 2, 2010 at 8:08 AM, =C2=A0<sk@cs.brown.edu> wrote:
 >>> A new problem report is waiting at
 >>> =C2=A0http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D11278
 >>>
 >>> Reported by Shriram Krishnamurthi for release: 5.0.1
 >>>
 >>> *** Description:
 >>> Here's a simple program intended to illustrate static scope:
 >>>
 >>> (: d/dx ((Number -> Number) -> (Number -> Number)))
 >>>
 >>> (define dx 0.00001)
 >>>
 >>> (define (d/dx f)
 >>> =C2=A0(lambda (x)
 >>> =C2=A0 =C2=A0(/ (- (f (+ x dx))
 >>> =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(f x))
 >>> =C2=A0 =C2=A0 =C2=A0 dx)))
 >>>
 >>> (define (^2 n) (* n n))
 >>>
 >>> (define d/dx-of-^2 (d/dx ^2))
 >>> (check-within (d/dx-of-^2 10) 20 dx)
 >>> (check-within (d/dx-of-^2 100) 200 dx)
 >>>
 >>> (define (f x) (* x x x))
 >>> (check-within ((d/dx f) 10) 300 1)
 >>>
 >>> Mousing over the binding of f in d/dx gives you THREE arrows: two to
 >>> the bound instances, and on FROM the top-level f, in purple w/ a
 >>> question-mark.
 >>>
 >>> I suppose this is DrRacket trying to be helpful and show some kind of
 >>> possible dataflow, but it's awful in a pedagogic context. =C2=A0It show=
 s
 >>> ONLY the dataflow arrow I *don't* want it to show. =C2=A0If it at least
 >>> also showed a purple-with-? for ^2, it would be easier to explain to
 >>> students that DrRacket is trying to be helpful. =C2=A0But it doesn't.
 >>>
 >>> The worst part is if you mouse over the f in (define (f x) ...), and
 >>> it shows one blue arrow (to the next line) and three purple arrows,
 >>> reaching right into the body of d/dx.
 >>>
 >>> I unfortunately discovered this on-the-fly in class yesterday. =C2=A0My=
  TAs
 >>> chuckled at how quickly I moved my mouse away from f. =C2=A0At first I
 >>> thought, "Aha, this is because I'm in ASL, and there's probably a
 >>> stateful operation that can cause the purple arrow...so Matthias can
 >>> say `I told you so' about ASL". =C2=A0But in fact the same arrows appea=
 r in
 >>> ISL + ,\, and ain't no state there.
 >>>
 >>> These additional arrows are pedagogically terrible. =C2=A0Can we at lea=
 st
 >>> then them off by default? =C2=A0In *SL, getting basic pedagogy right sh=
 ould
 >>> always trump clever guesses.
 >>>
 >>> Shriram
 >>>
 >>> *** How to repeat:
 >>>
 >>>
 >>> *** Environment:
 >>> windows "Windows NT 6.1 (Build 7600)" (win32\i386\3m) (get-display-dept=
 h) =3D 32
 >>> Human Language: english
 >>> (current-memory-use) 277547968
 >>>
 >>> Collections:
 >>> (("C:\\Users\\sk\\AppData\\Roaming\\Racket\\5.0.1\\collects" "info-doma=
 in" "installed-teachpacks" "margrave" "plai") ("C:\\Program Files (x86)\\Ra=
 cket\\5.0.1\\collects" "2htdp" "afm" "algol60" "at-exp" "browser" "combinat=
 or-parser" "compiler" "config" "datalog" "defaults" "deinprogramm" "drracke=
 t" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "fra=
 mework" "frtime" "games" "graphics" "gui-debugger" "help" "hierlist" "htdp"=
  "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "ma=
 ke" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "pa=
 rser-tools" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "=
 racket" "racklog" "rackunit" "raco" "reader" "readline" "redex" "rnrs" "s-e=
 xp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl"=
  "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax=
 " "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tex2page" "=
 texpict" "trace" "!
 >>> =C2=A0typed" "typed-scheme" "unstable" "version" "web-server" "wxme" "x=
 ml"))
 >>> Computer Language: (("Teaching Languages" "How to Design Programs" "Int=
 ermediate Student with lambda") (#(#t constructor repeating-decimal #f #t n=
 one) #f ((lib "cs019.rkt" "installed-teachpacks"))))
 >>>
 >>>
 >>
 >
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Shriram Krishnamurthi <sk@cs.brown.edu>
Cc: Robby Findler <robby@eecs.northwestern.edu>, bugs@racket-lang.org,
        nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11278: purple arrows considered harmful
Date: Sat, 2 Oct 2010 10:28:47 -0400

 Shriram, a long time ago I learned two things about bug reports:=20
 
 -- don't make conjectures as to what goes wrong; just report.=20
 -- don't add emotions to a bug report.=20
 
 You and the maintainer will be happier over the long run if=20
 you follow these simple rules.=20
 
 
 
 
 
 
 On Oct 2, 2010, at 9:57 AM, Shriram Krishnamurthi wrote:
 
 > I did read the documentation.  What am I supposed to get from it?
 > There are no macros anywhere in ISL or ASL programs.  The concept
 > simply makes no sense to a person at that level.
 >=20
 > I'm giving you the best conjecture a user can make given the concepts
 > known to them.  Don't you believe in language levels?
 >=20
 > Shriram
 >=20
 > On Sat, Oct 2, 2010 at 9:36 AM, Robby Findler
 > <robby@eecs.northwestern.edu> wrote:
 >> Boy, this long tirade is just wrong wrong wrong. You might want to =
 try
 >> reading the check syntax documentation (scroll down a little from the
 >> link below).
 >>=20
 >>  http://docs.racket-lang.org/drracket/buttons.html
 >>=20
 >> Robby
 >>=20
 >> On Sat, Oct 2, 2010 at 8:08 AM,  <sk@cs.brown.edu> wrote:
 >>> A new problem report is waiting at
 >>>  http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D11278
 >>>=20
 >>> Reported by Shriram Krishnamurthi for release: 5.0.1
 >>>=20
 >>> *** Description:
 >>> Here's a simple program intended to illustrate static scope:
 >>>=20
 >>> (: d/dx ((Number -> Number) -> (Number -> Number)))
 >>>=20
 >>> (define dx 0.00001)
 >>>=20
 >>> (define (d/dx f)
 >>>  (lambda (x)
 >>>    (/ (- (f (+ x dx))
 >>>          (f x))
 >>>       dx)))
 >>>=20
 >>> (define (^2 n) (* n n))
 >>>=20
 >>> (define d/dx-of-^2 (d/dx ^2))
 >>> (check-within (d/dx-of-^2 10) 20 dx)
 >>> (check-within (d/dx-of-^2 100) 200 dx)
 >>>=20
 >>> (define (f x) (* x x x))
 >>> (check-within ((d/dx f) 10) 300 1)
 >>>=20
 >>> Mousing over the binding of f in d/dx gives you THREE arrows: two to
 >>> the bound instances, and on FROM the top-level f, in purple w/ a
 >>> question-mark.
 >>>=20
 >>> I suppose this is DrRacket trying to be helpful and show some kind =
 of
 >>> possible dataflow, but it's awful in a pedagogic context.  It shows
 >>> ONLY the dataflow arrow I *don't* want it to show.  If it at least
 >>> also showed a purple-with-? for ^2, it would be easier to explain to
 >>> students that DrRacket is trying to be helpful.  But it doesn't.
 >>>=20
 >>> The worst part is if you mouse over the f in (define (f x) ...), and
 >>> it shows one blue arrow (to the next line) and three purple arrows,
 >>> reaching right into the body of d/dx.
 >>>=20
 >>> I unfortunately discovered this on-the-fly in class yesterday.  My =
 TAs
 >>> chuckled at how quickly I moved my mouse away from f.  At first I
 >>> thought, "Aha, this is because I'm in ASL, and there's probably a
 >>> stateful operation that can cause the purple arrow...so Matthias can
 >>> say `I told you so' about ASL".  But in fact the same arrows appear =
 in
 >>> ISL + ,\, and ain't no state there.
 >>>=20
 >>> These additional arrows are pedagogically terrible.  Can we at least
 >>> then them off by default?  In *SL, getting basic pedagogy right =
 should
 >>> always trump clever guesses.
 >>>=20
 >>> Shriram
 >>>=20
 >>> *** How to repeat:
 >>>=20
 >>>=20
 >>> *** Environment:
 >>> windows "Windows NT 6.1 (Build 7600)" (win32\i386\3m) =
 (get-display-depth) =3D 32
 >>> Human Language: english
 >>> (current-memory-use) 277547968
 >>>=20
 >>> Collections:
 >>> (("C:\\Users\\sk\\AppData\\Roaming\\Racket\\5.0.1\\collects" =
 "info-domain" "installed-teachpacks" "margrave" "plai") ("C:\\Program =
 Files (x86)\\Racket\\5.0.1\\collects" "2htdp" "afm" "algol60" "at-exp" =
 "browser" "combinator-parser" "compiler" "config" "datalog" "defaults" =
 "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" =
 "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" =
 "gui-debugger" "help" "hierlist" "htdp" "html" "icons" "info-domain" =
 "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" =
 "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" =
 "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" =
 "racklog" "rackunit" "raco" "reader" "readline" "redex" "rnrs" "s-exp" =
 "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" =
 "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" =
 "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" =
 "tex2page" "texpict" "trace" "!
 >>>  typed" "typed-scheme" "unstable" "version" "web-server" "wxme" =
 "xml"))
 >>> Computer Language: (("Teaching Languages" "How to Design Programs" =
 "Intermediate Student with lambda") (#(#t constructor repeating-decimal =
 #f #t none) #f ((lib "cs019.rkt" "installed-teachpacks"))))
 >>>=20
 >>>=20
 >>=20
 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Shriram Krishnamurthi <sk@cs.brown.edu>
Cc: bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11278: purple arrows considered harmful
Date: Sat, 2 Oct 2010 09:33:58 -0500

 FWIW, the "happy go lucky" kind of jokes that go in there just make me
 (as the maintainer) feel much much worse about having left the bug in
 there for you to find in the first place. They just aren't funny.
 
 A kind of dry, professional bug report is really the best thing.
 
 If you want to make a joke, do keep in mind that I will already be
 feeling bad about the fact that I embarrassed you in front of your
 class (or whatever) when you tell that joke.
 
 Robby
 
 On Sat, Oct 2, 2010 at 9:12 AM, Robby Findler
 <robby@eecs.northwestern.edu> wrote:
 > On Sat, Oct 2, 2010 at 8:57 AM, Shriram Krishnamurthi <sk@cs.brown.edu> w=
 rote:
 >> I did read the documentation. =C2=A0What am I supposed to get from it?
 >> There are no macros anywhere in ISL or ASL programs. =C2=A0The concept
 >> simply makes no sense to a person at that level.
 >
 > It is a bug, that much you are right on about.
 >
 >> I'm giving you the best conjecture a user can make given the concepts
 >> known to them. =C2=A0Don't you believe in language levels?
 >
 > I believe in bug reports without annoying commentaries.
 >
 > Robby
 >
 >> Shriram
 >>
 >> On Sat, Oct 2, 2010 at 9:36 AM, Robby Findler
 >> <robby@eecs.northwestern.edu> wrote:
 >>> Boy, this long tirade is just wrong wrong wrong. You might want to try
 >>> reading the check syntax documentation (scroll down a little from the
 >>> link below).
 >>>
 >>> =C2=A0http://docs.racket-lang.org/drracket/buttons.html
 >>>
 >>> Robby
 >>>
 >>> On Sat, Oct 2, 2010 at 8:08 AM, =C2=A0<sk@cs.brown.edu> wrote:
 >>>> A new problem report is waiting at
 >>>> =C2=A0http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D11278
 >>>>
 >>>> Reported by Shriram Krishnamurthi for release: 5.0.1
 >>>>
 >>>> *** Description:
 >>>> Here's a simple program intended to illustrate static scope:
 >>>>
 >>>> (: d/dx ((Number -> Number) -> (Number -> Number)))
 >>>>
 >>>> (define dx 0.00001)
 >>>>
 >>>> (define (d/dx f)
 >>>> =C2=A0(lambda (x)
 >>>> =C2=A0 =C2=A0(/ (- (f (+ x dx))
 >>>> =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(f x))
 >>>> =C2=A0 =C2=A0 =C2=A0 dx)))
 >>>>
 >>>> (define (^2 n) (* n n))
 >>>>
 >>>> (define d/dx-of-^2 (d/dx ^2))
 >>>> (check-within (d/dx-of-^2 10) 20 dx)
 >>>> (check-within (d/dx-of-^2 100) 200 dx)
 >>>>
 >>>> (define (f x) (* x x x))
 >>>> (check-within ((d/dx f) 10) 300 1)
 >>>>
 >>>> Mousing over the binding of f in d/dx gives you THREE arrows: two to
 >>>> the bound instances, and on FROM the top-level f, in purple w/ a
 >>>> question-mark.
 >>>>
 >>>> I suppose this is DrRacket trying to be helpful and show some kind of
 >>>> possible dataflow, but it's awful in a pedagogic context. =C2=A0It sho=
 ws
 >>>> ONLY the dataflow arrow I *don't* want it to show. =C2=A0If it at leas=
 t
 >>>> also showed a purple-with-? for ^2, it would be easier to explain to
 >>>> students that DrRacket is trying to be helpful. =C2=A0But it doesn't.
 >>>>
 >>>> The worst part is if you mouse over the f in (define (f x) ...), and
 >>>> it shows one blue arrow (to the next line) and three purple arrows,
 >>>> reaching right into the body of d/dx.
 >>>>
 >>>> I unfortunately discovered this on-the-fly in class yesterday. =C2=A0M=
 y TAs
 >>>> chuckled at how quickly I moved my mouse away from f. =C2=A0At first I
 >>>> thought, "Aha, this is because I'm in ASL, and there's probably a
 >>>> stateful operation that can cause the purple arrow...so Matthias can
 >>>> say `I told you so' about ASL". =C2=A0But in fact the same arrows appe=
 ar in
 >>>> ISL + ,\, and ain't no state there.
 >>>>
 >>>> These additional arrows are pedagogically terrible. =C2=A0Can we at le=
 ast
 >>>> then them off by default? =C2=A0In *SL, getting basic pedagogy right s=
 hould
 >>>> always trump clever guesses.
 >>>>
 >>>> Shriram
 >>>>
 >>>> *** How to repeat:
 >>>>
 >>>>
 >>>> *** Environment:
 >>>> windows "Windows NT 6.1 (Build 7600)" (win32\i386\3m) (get-display-dep=
 th) =3D 32
 >>>> Human Language: english
 >>>> (current-memory-use) 277547968
 >>>>
 >>>> Collections:
 >>>> (("C:\\Users\\sk\\AppData\\Roaming\\Racket\\5.0.1\\collects" "info-dom=
 ain" "installed-teachpacks" "margrave" "plai") ("C:\\Program Files (x86)\\R=
 acket\\5.0.1\\collects" "2htdp" "afm" "algol60" "at-exp" "browser" "combina=
 tor-parser" "compiler" "config" "datalog" "defaults" "deinprogramm" "drrack=
 et" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "fr=
 amework" "frtime" "games" "graphics" "gui-debugger" "help" "hierlist" "htdp=
 " "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "m=
 ake" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "p=
 arser-tools" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" =
 "racket" "racklog" "rackunit" "raco" "reader" "readline" "redex" "rnrs" "s-=
 exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl=
 " "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "synta=
 x" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tex2page" =
 "texpict" "trace" "!
 >>>> =C2=A0typed" "typed-scheme" "unstable" "version" "web-server" "wxme" "=
 xml"))
 >>>> Computer Language: (("Teaching Languages" "How to Design Programs" "In=
 termediate Student with lambda") (#(#t constructor repeating-decimal #f #t =
 none) #f ((lib "cs019.rkt" "installed-teachpacks"))))
 >>>>
 >>>>
 >>>
 >>
 >
From: Robby Findler <robby@eecs.northwestern.edu>
To: Shriram Krishnamurthi <sk@cs.brown.edu>
Cc: bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11278: purple arrows considered harmful
Date: Sat, 2 Oct 2010 09:52:42 -0500

 (and yes, that points out why my response was inappropriate too. Sorry
 about that.)
 
 Robby
 
 On Sat, Oct 2, 2010 at 9:33 AM, Robby Findler
 <robby@eecs.northwestern.edu> wrote:
 > FWIW, the "happy go lucky" kind of jokes that go in there just make me
 > (as the maintainer) feel much much worse about having left the bug in
 > there for you to find in the first place. They just aren't funny.
 >
 > A kind of dry, professional bug report is really the best thing.
 >
 > If you want to make a joke, do keep in mind that I will already be
 > feeling bad about the fact that I embarrassed you in front of your
 > class (or whatever) when you tell that joke.
 >
 > Robby
 >
 > On Sat, Oct 2, 2010 at 9:12 AM, Robby Findler
 > <robby@eecs.northwestern.edu> wrote:
 >> On Sat, Oct 2, 2010 at 8:57 AM, Shriram Krishnamurthi <sk@cs.brown.edu> =
 wrote:
 >>> I did read the documentation. =C2=A0What am I supposed to get from it?
 >>> There are no macros anywhere in ISL or ASL programs. =C2=A0The concept
 >>> simply makes no sense to a person at that level.
 >>
 >> It is a bug, that much you are right on about.
 >>
 >>> I'm giving you the best conjecture a user can make given the concepts
 >>> known to them. =C2=A0Don't you believe in language levels?
 >>
 >> I believe in bug reports without annoying commentaries.
 >>
 >> Robby
 >>
 >>> Shriram
 >>>
 >>> On Sat, Oct 2, 2010 at 9:36 AM, Robby Findler
 >>> <robby@eecs.northwestern.edu> wrote:
 >>>> Boy, this long tirade is just wrong wrong wrong. You might want to try
 >>>> reading the check syntax documentation (scroll down a little from the
 >>>> link below).
 >>>>
 >>>> =C2=A0http://docs.racket-lang.org/drracket/buttons.html
 >>>>
 >>>> Robby
 >>>>
 >>>> On Sat, Oct 2, 2010 at 8:08 AM, =C2=A0<sk@cs.brown.edu> wrote:
 >>>>> A new problem report is waiting at
 >>>>> =C2=A0http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D11278
 >>>>>
 >>>>> Reported by Shriram Krishnamurthi for release: 5.0.1
 >>>>>
 >>>>> *** Description:
 >>>>> Here's a simple program intended to illustrate static scope:
 >>>>>
 >>>>> (: d/dx ((Number -> Number) -> (Number -> Number)))
 >>>>>
 >>>>> (define dx 0.00001)
 >>>>>
 >>>>> (define (d/dx f)
 >>>>> =C2=A0(lambda (x)
 >>>>> =C2=A0 =C2=A0(/ (- (f (+ x dx))
 >>>>> =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(f x))
 >>>>> =C2=A0 =C2=A0 =C2=A0 dx)))
 >>>>>
 >>>>> (define (^2 n) (* n n))
 >>>>>
 >>>>> (define d/dx-of-^2 (d/dx ^2))
 >>>>> (check-within (d/dx-of-^2 10) 20 dx)
 >>>>> (check-within (d/dx-of-^2 100) 200 dx)
 >>>>>
 >>>>> (define (f x) (* x x x))
 >>>>> (check-within ((d/dx f) 10) 300 1)
 >>>>>
 >>>>> Mousing over the binding of f in d/dx gives you THREE arrows: two to
 >>>>> the bound instances, and on FROM the top-level f, in purple w/ a
 >>>>> question-mark.
 >>>>>
 >>>>> I suppose this is DrRacket trying to be helpful and show some kind of
 >>>>> possible dataflow, but it's awful in a pedagogic context. =C2=A0It sh=
 ows
 >>>>> ONLY the dataflow arrow I *don't* want it to show. =C2=A0If it at lea=
 st
 >>>>> also showed a purple-with-? for ^2, it would be easier to explain to
 >>>>> students that DrRacket is trying to be helpful. =C2=A0But it doesn't.
 >>>>>
 >>>>> The worst part is if you mouse over the f in (define (f x) ...), and
 >>>>> it shows one blue arrow (to the next line) and three purple arrows,
 >>>>> reaching right into the body of d/dx.
 >>>>>
 >>>>> I unfortunately discovered this on-the-fly in class yesterday. =C2=A0=
 My TAs
 >>>>> chuckled at how quickly I moved my mouse away from f. =C2=A0At first =
 I
 >>>>> thought, "Aha, this is because I'm in ASL, and there's probably a
 >>>>> stateful operation that can cause the purple arrow...so Matthias can
 >>>>> say `I told you so' about ASL". =C2=A0But in fact the same arrows app=
 ear in
 >>>>> ISL + ,\, and ain't no state there.
 >>>>>
 >>>>> These additional arrows are pedagogically terrible. =C2=A0Can we at l=
 east
 >>>>> then them off by default? =C2=A0In *SL, getting basic pedagogy right =
 should
 >>>>> always trump clever guesses.
 >>>>>
 >>>>> Shriram
 >>>>>
 >>>>> *** How to repeat:
 >>>>>
 >>>>>
 >>>>> *** Environment:
 >>>>> windows "Windows NT 6.1 (Build 7600)" (win32\i386\3m) (get-display-de=
 pth) =3D 32
 >>>>> Human Language: english
 >>>>> (current-memory-use) 277547968
 >>>>>
 >>>>> Collections:
 >>>>> (("C:\\Users\\sk\\AppData\\Roaming\\Racket\\5.0.1\\collects" "info-do=
 main" "installed-teachpacks" "margrave" "plai") ("C:\\Program Files (x86)\\=
 Racket\\5.0.1\\collects" "2htdp" "afm" "algol60" "at-exp" "browser" "combin=
 ator-parser" "compiler" "config" "datalog" "defaults" "deinprogramm" "drrac=
 ket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "f=
 ramework" "frtime" "games" "graphics" "gui-debugger" "help" "hierlist" "htd=
 p" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "=
 make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "=
 parser-tools" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs"=
  "racket" "racklog" "rackunit" "raco" "reader" "readline" "redex" "rnrs" "s=
 -exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sg=
 l" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "synt=
 ax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tex2page"=
  "texpict" "trace" "!
 >>>>> =C2=A0typed" "typed-scheme" "unstable" "version" "web-server" "wxme" =
 "xml"))
 >>>>> Computer Language: (("Teaching Languages" "How to Design Programs" "I=
 ntermediate Student with lambda") (#(#t constructor repeating-decimal #f #t=
  none) #f ((lib "cs019.rkt" "installed-teachpacks"))))
 >>>>>
 >>>>>
 >>>>
 >>>
 >>
 >
From: Shriram Krishnamurthi <sk@cs.brown.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11278: purple arrows considered harmful
Date: Sat, 2 Oct 2010 11:10:21 -0400

 Oh dear.  Robby, that was not at all my intent.  I just wanted to
 justify why I'd classified it as serious, since the next person might
 not be so quick to work around it.  I did that poorly -- sorry.
 
 For what it's worth:
 
 1. I wouldn't at all have felt badly about missing this.  It's pretty subtle.
 
 2. Even better, I'm actually going to be able to use this "bug" to
 illustrate a point about binding that came up in my PL class, running
 concurrently.
 
 So you actually provided (temporarily) a teaching tool.  Let's call it
 a feature until 5.0.2.  Thanks!
 
 Shriram

