From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Tue Apr 17 15:55:03 2007
Received: from an-out-0708.google.com (an-out-0708.google.com [209.85.132.247])
	by champlain.ccs.neu.edu (8.13.8/8.13.7) with ESMTP id l3HJt2qE003479
	for <bugs@bugs.plt-scheme.org>; Tue, 17 Apr 2007 15:55:03 -0400
Message-Id: <200704171954.l3HJsuD4003469@champlain.ccs.neu.edu>
Date: Tue, 17 Apr 2007 15:54:56 -0400
From: cce@ccs.neu.edu
To: bugs@plt-scheme.org
Subject: PLT Redex: <symbol>_!_<name> documentation is ambiguous

>Number:         8616
>Category:       drscheme
>Synopsis:       PLT Redex: <symbol>_!_<name> documentation is ambiguous
>Class:          doc-bug
>Responsible:    robby
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Tue Apr 17 16:00:01 -0400 2007
>Closed-Date:    Tue Apr 17 17:10:48 -0400 2007
>Last-Modified:  Tue Apr 17 18:05:01 -0400 2007
>Originator:     Carl Eastlund
>Organization:
plt
>Submitter-Id:   unknown
>Release:        369.9-svn17apr2007
>Environment:
macosx "Darwin Kauai.ccs.neu.edu 8.9.0 Darwin Kernel Version 8.9.0: Thu Feb 22 20:54:07 PST 2007; root:xnu-792.17.14~1/RELEASE_PPC Power Macintosh powerpc" (ppc-macosx/3m) (get-display-depth) = 16
Docs Installed:
(("/Users/cce/Projects/plt/doc" "r5rs" "mzscheme" "mred" "help" "tour" "drscheme" "srfi" "mzlib" "misclib" "mrlib" "framework" "foreign" "mzc" "tools" "insidemz" "web-server" "swindle" "plot" "release-notes" "t-y-scheme" "tex2page" "beginning" "beginning-abbr" "intermediate" "intermediate-lambda" "advanced" "teachpack" "teachpack-htdc" "profj-beginner" "profj-intermediate" "profj-advanced") (* "/Users/cce/Library/PLT Scheme/planet/300/369.9/cache/dalev/dracula-language.plt/1/0/acl2-html-docs"))
Human Language: english
(current-memory-use) 92550700

Collections:
(("/Users/cce/Library/PLT Scheme/369.9/collects" non-existent-path) ("/Users/cce/Projects/plt/collects" ".svn" "afm" "algol60" "browser" "combinator-parser" "compiler" "config" "defaults" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "framework" "frtime" "games" "graphics" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu-module" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrflow" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "mztake" "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profj" "profjWizard" "r5rs" "r6rs" "readline" "repos-time-stamp" "scribble" "setup" "sgl" "sirmail" "skipper" "slatex" "slideshow" "srfi" "srpersist" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "tests" "tex2page" "texpict" "trace" "version" "waterworld" "web-server" "wxme" "xelda" "xml"))
Teachpack filenames: ()
Computer Language: (("Professional Languages" "(module ...)") (#6(#t write mixed-fraction-e #f #t debug) (default) #0()))
>Description:
The PLT Redex pattern language allows <symbol>_!_<name> to stand for occurrences of nonterminal <symbol> that are given the name <name> and constrained to be "different".  It is not clear whether the matched values must each be pairwise distinct, or just that all subsequent values must be different from the first.  Neither interpretation seems to provide a way to match "an occurrence of <symbol> that does not match <symbol>_<name>", but that might also be a useful pattern.
>How-To-Repeat:
>Fix:
>Audit-Trail:
From: "Robby Findler" <robby@cs.uchicago.edu>
To: cce@ccs.neu.edu, bugs@plt-scheme.org
Cc: 
Subject: Re: [plt-bug] all/8616: PLT Redex: <symbol>_!_<name> documentation is ambiguous
Date: Tue, 17 Apr 2007 15:16:58 -0500

 I don't quite understand the comment. Maybe if you provided an example
 pattern whose semantics isn't explained properly?
 
 Thanks,
 Robby
From: "Carl Eastlund" <cce@ccs.neu.edu>
To: "Robby Findler" <robby@cs.uchicago.edu>
Cc: bugs@plt-scheme.org
Subject: Re: [plt-bug] all/8616: PLT Redex: <symbol>_!_<name> documentation is ambiguous
Date: Tue, 17 Apr 2007 16:38:50 -0400

 On 4/17/07, Robby Findler <robby@cs.uchicago.edu> wrote:
 > I don't quite understand the comment. Maybe if you provided an example
 > pattern whose semantics isn't explained properly?
 
 Sure, I tried to write up an example that illustrated what I expected
 from the 3 possible interpretations for _!_ I came up with.  Hopefully
 this makes it a little clearer.  Unfortunately I'm either using redex
 wrong or none of my interpretations is correct, because none of my
 traces takes any steps and one of them actually raises an error.
 
 If you could fill me in on what I'm doing wrong or what _!_ is
 supposed to do, I'd appreciate it.  Thanks for the support.
 
 (module redex-ambiguity mzscheme
 
   (require (planet "reduction-semantics.ss" ("robby" "redex.plt" 2 6))
            (planet "gui.ss" ("robby" "redex.plt" 2 6)))
 
   (define lang
     (language
      [sym variable]
      [syms (sym ...)]))
 
   (define reds
     (list
 
      ;; This reduction varies by the interpretation of sym_!_one:
      ;; 1. sym_!_one could mean "matches any group pairwise-distinct symbols"
      ;; 2. sym_!_one could mean "matches any group of symbols, none of
 which are the same as the first"
      ;; 3. sym_!_one could mean "anything other than sym_one"
      (reduction
       lang
       (sym_one sym_!_one sym_!_one sym_!_one)
       (term (sym_one sym_!_one)))))
 
   ;; Interpretation 3: step to '(a b)
   ;; Interpretation 1/2: will not proceed
   (define (interp-3)
     (traces lang reds '(a b b b)))
 
   ;; Interpretation 2: step to '(a a)
   ;; Interpretation 1/3: will not proceed
   (define (interp-2)
     (traces lang reds '(a a b b)))
 
   ;; Interpretation 1: step to '(a a), possibly '(a b) or '(a c) or
 maybe '(a (a b c)), not sure
   ;; Interpretation 2: step to '(a a)
   ;; Interpretation 3: will not proceed
   (define (interp-1)
     (traces lang reds '(a a b c)))
   )
 
 --Carl

State changed from "open" to "closed" by robby at Tue, 17 Apr 2007 17:10:48 -0400
Reason>>> fixed docs (not yet released to planet, tho).

From: "Robby Findler" <robby@cs.uchicago.edu>
To: "Carl Eastlund" <cce@ccs.neu.edu>
Cc: bugs@plt-scheme.org
Subject: Re: [plt-bug] all/8616: PLT Redex: <symbol>_!_<name> documentation is ambiguous
Date: Tue, 17 Apr 2007 16:10:52 -0500

 Oh! I see. It doesn't work like that at all. If the "same name" is
 used both as a _ and as a _!_ then it isn't really the same name at
 all. (The name is, in fact, the entire thing, ie "sym_one", not just
 "one".)
 
 This pattern:
 
   (sym_!_one sym_!_one sym_!_one)
 
 matches lists of three symbols, all of which are distinct (from each other).
 
 So, your pattern matches these, for example:
 
   (term (a b c d))
   (term (b b c d))
 
 but not
 
   (term (a b b d))
 
 If you want to actually get one of your interpretations, you'd need to
 use a side-condition.
 
 Robby
From: "Carl Eastlund" <cce@ccs.neu.edu>
To: "Robby Findler" <robby@cs.uchicago.edu>
Cc: bugs@plt-scheme.org
Subject: Re: [plt-bug] all/8616: PLT Redex: <symbol>_!_<name> documentation is ambiguous
Date: Tue, 17 Apr 2007 17:28:29 -0400

 Only interpretation 3 actually related a_n to a_!_n; 1 and 2 did not.
 For instance, why did my (interp-1) function fail (both in that it
 raised an exception, and produced a trace with no steps)?
 
 And thanks for the note about a side condition.  That would do what I
 want, though I have since found an elegant way to side-step this
 entire issue.
 
 --Carl
 
 On 4/17/07, Robby Findler <robby@cs.uchicago.edu> wrote:
 > Oh! I see. It doesn't work like that at all. If the "same name" is
 > used both as a _ and as a _!_ then it isn't really the same name at
 > all. (The name is, in fact, the entire thing, ie "sym_one", not just
 > "one".)
 >
 > This pattern:
 >
 >   (sym_!_one sym_!_one sym_!_one)
 >
 > matches lists of three symbols, all of which are distinct (from each other).
 >
 > So, your pattern matches these, for example:
 >
 >   (term (a b c d))
 >   (term (b b c d))
 >
 > but not
 >
 >   (term (a b b d))
 >
 > If you want to actually get one of your interpretations, you'd need to
 > use a side-condition.
 >
 > Robby
From: "Robby Findler" <robby@cs.uchicago.edu>
To: "Carl Eastlund" <cce@ccs.neu.edu>
Cc: bugs@plt-scheme.org
Subject: Re: [plt-bug] all/8616: PLT Redex: <symbol>_!_<name> documentation is ambiguous
Date: Tue, 17 Apr 2007 17:00:09 -0500

 On 4/17/07, Carl Eastlund <cce@ccs.neu.edu> wrote:
 > Only interpretation 3 actually related a_n to a_!_n; 1 and 2 did not.
 > For instance, why did my (interp-1) function fail (both in that it
 > raised an exception, and produced a trace with no steps)?
 
 Oh, whoops -- sorry I missed that. It failed because of an internal
 error in redex. The _!_ things do not actually bind names, but Redex
 is confused about that.
 
 I'll fix that and clarify the docs.
 
 Robby
