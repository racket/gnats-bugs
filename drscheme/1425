From nobody@cs.rice.edu  Sun Apr 16 13:33:08 2000
Received: from web.cs.rice.edu (web.cs.rice.edu [128.42.1.163])
	by cs.rice.edu (8.9.0/8.9.0) with ESMTP id NAA25765
	for <plt-gnats@cs.rice.edu>; Sun, 16 Apr 2000 13:33:07 -0500 (CDT)
Message-Id: <200004161833.NAA05248@web.cs.rice.edu>
Date: Sun, 16 Apr 2000 13:33:06 -0500 (CDT)
From: jwhitver@gac.edu
Reply-To: jwhitver@gac.edu
To: plt-gnats@cs.rice.edu
Subject: Dr. Scheme for Mac OS X 

>Number:         1425
>Category:       drscheme
>Synopsis:       Dr. Scheme for Mac OS X
>Class:          change-request
>Responsible:    clements
>Severity:       non-critical
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Sun Apr 16 14:45:03 -0400 2000
>Last-Modified:  Mon May 05 15:33:18 -0400 2008
>Originator:     Josh Whitver
>Organization:
titan
>Submitter-Id:   unknown
>Release:        
>Environment:
Mac PowerPC
>Description:
I would really like to see a release of Dr. Scheme for Mac OS X (Client).  This could use the Un*x (OpenBSD) code for the underlying Scheme language (which is probably really efficient), and just use Carbon for the UI (which is also really efficient).

Something like what Mozilla is doing with their Fizzila project (http://www.mozilla.org/ports/fizzilla/) would be great!
>How-To-Repeat:
>Fix:
>Audit-Trail:
From: John Clements <clements@cs.rice.edu>
To: jwhitver@gac.edu, plt-gnats@cs.rice.edu
Cc:  Subject: Re: all/1425: Dr. Scheme for Mac OS X
Date: Sun, 16 Apr 2000 14:24:23 -0500

 >I would really like to see a release of Dr. Scheme for Mac OS X 
 >(Client).  This could use the Un*x (OpenBSD) code for the underlying 
 >Scheme language (which is probably really efficient), and just use 
 >Carbon for the UI (which is also really efficient).
 
 We have every intention of carbon-izing DrScheme when OS X is 
 released.  Early looks at "Carbon Dater" (an application which gauges 
 an application's carbon-compatibility) indicate that we will have 
 some work to do.  Not an enormous amount, but not a weekend's work 
 either.
 
 As far as the "underlying code," while it's true that OS X 
 applications may have some kind of POSIX interface available, I see 
 no compelling reason to move in this direction. First, anything using 
 this POSIX interface will presumably be incompatible with earlier 
 versions of the operating system.  The vast majority of our users 
 will be using pre-OS X versions of the operating system for many 
 years to come.  Second, I don't think that rewriting the code would 
 result in a significant time savings.
 
 john

Responsible-Changed-From-To: steck->clements
Responsible-Changed-By: clements
Responsible-Changed-When: Tue Apr 25 21:09:10 2000
Responsible-Changed-Why:

State-Changed-From-To: open-closed
State-Changed-By: clements
State-Changed-When: Tue Apr 25 21:09:35 2000
State-Changed-Why:


>Unformatted:
