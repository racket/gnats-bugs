From matthias@ccs.neu.edu  Sun Jan  4 19:22:13 2004
Received: from localhost (IDENT:root@localhost.localdomain [127.0.0.1])
	by champlain.ccs.neu.edu (8.9.3/8.9.3) with ESMTP id TAA21148
	for <bugs>; Sun, 4 Jan 2004 19:22:08 -0500
Message-Id: <200401050022.TAA21148@champlain.ccs.neu.edu>
Date: Sun, 4 Jan 2004 19:22:08 -0500
From: matthias <matthias@ccs.neu.edu>
To: bugs@plt-scheme.org
Subject: paren matcher indents improperly if comments contain ( ... )

>Number:         6632
>Category:       drscheme
>Synopsis:       paren matcher indents improperly if comments contain ( ... )
>Class:          sw-bug
>Responsible:    sowens
>Notify-List:    mflatt@plt-scheme.org
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Sun Jan 04 19:25:01 -0500 2004
>Closed-Date:    Mon May 17 17:25:24 -0400 2004
>Last-Modified:  Mon May 17 17:25:24 -0400 2004
>Originator:     matthias
>Organization:
titan
>Submitter-Id:   unknown
>Release:        205.10-cvs3jan2004
>Environment:
macosx "Darwin MATTHIAS-FELLEISENs-Computer.local. 6.8 Darwin Kernel Version 6.8: Wed Sep 10 15:20:55 PDT 2003; root:xnu/xnu-344.49.obj~2/RELEASE_PPC  Power Macintosh powerpc" (ppc-macosx) (get-display-depth) = 32
Docs Installed:
("/Users/matthias/plt/collects/doc/tour" "/Users/matthias/plt/collects/doc/tools" "/Users/matthias/plt/collects/doc/tex2page" "/Users/matthias/plt/collects/doc/teachpack" "/Users/matthias/plt/collects/doc/t-y-scheme" "/Users/matthias/plt/collects/doc/mzscheme" "/Users/matthias/plt/collects/doc/mzlib" "/Users/matthias/plt/collects/doc/mzc" "/Users/matthias/plt/collects/doc/mred" "/Users/matthias/plt/collects/doc/misclib" "/Users/matthias/plt/collects/doc/intermediate-lambda" "/Users/matthias/plt/collects/doc/intermediate" "/Users/matthias/plt/collects/doc/insidemz" "/Users/matthias/plt/collects/doc/help" "/Users/matthias/plt/collects/doc/framework" "/Users/matthias/plt/collects/doc/drscheme" "/Users/matthias/plt/collects/doc/beginning-abbr" "/Users/matthias/plt/collects/doc/beginning" "/Users/matthias/plt/collects/doc/advanced")
Collections: 
(("/Users/matthias/Library/PLT Scheme/205.10/collects" "non-existent path") ("/Users/matthias/plt/collects" ("afm" "algol60" "browser" "compiler" "countdwn" "CVS" "cvs-time-stamp" "defaults" "doc" "dromedary" "drscheme" "drscheme-jr" "dynext" "eopl" "errortrace" "file-browser" "finish-install" "framework" "frtime" "games" "graphics" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "htdp" "html" "icfp-robot-gui" "icons" "lang" "launcher" "libsndfile" "make" "mrdemo" "mred" "mrflow" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "preprocessor" "profj" "python" "readline" "reduction-semantics" "setup" "sgl" "sirmail" "slatex" "slibinit" "slideshow" "srfi" "srpersist" "stepper" "string-constants" "syntax" "syntax-color" "test-suite" "tests" "tex2page" "texpict" "typeset" "version" "waterworld" "web-server" "xelda" "xml")))
 
Human Language: english
 
Teachpack filenames: ()
Computer Language: (("Teaching Languages" "How to Design Programs" "Intermediate Student with lambda") #6(#t constructor repeating-decimal #f #t none))
>Description:
>How-To-Repeat:
type this: 
#|
   A square of colors (SC)
   represent as: (Listof (Listof S))
                          
   An S is: 
    (make-square color ...)
  
   ;; create : N -> SC
   ;; a square of colors randomly
   
   ;; suck : N N SC -> SC
   ;; to "suck" a square in a SC 
     
   ;; distinct : SC -> Boolean
   ;; are all neighboring colors in a square distinct

   ;; draw-sc : SC -> true
|#

(define-struct s (color))

;; create : N -> SC 
(define (create n)
  (build-list n (lambda (i) (build-list n (lambda (j) (make-s (pick-color 0)))))))

;; N -> Color
(define ALLCOLORS '(red blue green yellow black))
(define COLORS# (length ALLCOLORS))
(define (pick-color i)
  (list-ref ALLCOLORS (random COLORS#)))

then do "indent all" and get this: 

#|
A square of colors (SC)
                    represent as: (Listof (Listof S))
                                           
                                           An S is: 
                                           (make-square color ...)
                                            
                                            ;; create : N -> SC
                                            ;; a square of colors randomly
                                            
                                            ;; suck : N N SC -> SC
                                            ;; to "suck" a square in a SC 
                                            
                                            ;; distinct : SC -> Boolean
                                            ;; are all neighboring colors in a square distinct
                                            
                                            ;; draw-sc : SC -> true
                                            |#
                                            
                                            (define-struct s (color))
                                            
                                            ;; create : N -> SC 
                                            (define (create n)
                                              (build-list n (lambda (i) (build-list n (lambda (j) (make-s (pick-color 0)))))))
                                            
                                            ;; N -> Color
                                            (define ALLCOLORS '(red blue green yellow black))
                                            (define COLORS# (length ALLCOLORS))
                                            (define (pick-color i)
                                              (list-ref ALLCOLORS (random COLORS#)))

That's simply not acceptable. 
>Fix:
>Release-Note:
>Audit-Trail:
From: Matthew Flatt <mflatt@cs.utah.edu>
To: sowens@cs.utah.edu, robby@cs.uchicago.edu
Cc: matthias <matthias@ccs.neu.edu>, bugs@plt-scheme.org
Subject: Re: all/6632: paren matcher indents improperly if comments contain ( ... )
Date: Sun, 4 Jan 2004 16:42:54 -0700

 At Sun, 4 Jan 2004 19:22:08 -0500, matthias wrote:
 > ...
 > then do "indent all" and get this: 
 > ...
 
 FWIW, the problem seems to shows up when the block comment has no
 expression before it. Here's a shorter example:
 
 #| (car null) |#
     (10)
 
 
 Matthew
 
Responsible-Changed-From-To: eli->nobody
Responsible-Changed-By: gnats@champlain.ccs.neu.edu
Responsible-Changed-When: Fri, 26 Mar 2004 05:13:00 -0500
Responsible-Changed-Why:


Responsible changed from "nobody" to "sowens" by eli at Fri, 02 Apr 2004 02:59:57 -0500
Reason>>> Indentation, looks like solved.
State changed from "open" to "closed" by sowens at Mon, 17 May 2004 17:25:24 -0400
Reason>>> It works now. 

>Unformatted:
