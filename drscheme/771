From nobody@cs.rice.edu  Thu Aug 27 14:38:47 1998
Received: from web.cs.rice.edu (web.cs.rice.edu [128.42.1.163])
	by cs.rice.edu (8.9.0/8.9.0) with ESMTP id OAA26128
	for <plt-gnats@cs.rice.edu>; Thu, 27 Aug 1998 14:38:47 -0500 (CDT)
Message-Id: <199808271938.OAA06358@web.cs.rice.edu>
Date: Thu, 27 Aug 1998 14:38:46 -0500 (CDT)
From: amitp@cs.stanford.edu
Reply-To: amitp@cs.stanford.edu
To: plt-gnats@cs.rice.edu
Subject: Comment Out command not very useful 

>Number:         771
>Category:       drscheme
>Synopsis:       Comment Out command not very useful
>Confidential:   no
>Severity:       serious
>Priority:       medium
>Responsible:    robby
>State:          closed
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Thu Aug 27 19:45:02 GMT 1998
>Last-Modified:  Mon Nov 29 18:30:30 CST 1999
>Originator:     Amit Patel
>Organization:
titan
>Release:        53
>Environment:
unknown
>Description:
The Comment Out command comments something out UNLESS it's already
commented.  This makes it nearly useless!  When I Uncomment, it
doesn't leave the program in the state it was before I Commented.

Original:

   ; here is a comment
   (print "Shriram should use XEmacs")

After using Comment Out:

   ; here is a comment
   ; (print "Shriram should use XEmacs")

After using Uncomment:

   here is a comment
   (print "Shriram should use XEmacs")

These commands cannot reliably be used to temporarily comment out
a section of code and then later put it back in, because comments 
   are turned into non-comments.  :-(

I think the behavior should be -- just add a semicolon to every
line no matter what it had on it.  This is simpler to implement,
it doesn't hurt anyone, and it's more useful in that

       X -> Comment -> Uncomment -> restores X

                        
>How-To-Repeat:

>Fix:

>Audit-Trail:

From: Matthias Felleisen <matthias@cs.rice.edu>
To: amitp@cs.stanford.edu
Cc: plt-gnats@cs.rice.edu, steck@cs.rice.edu, steck@cs.rice.edu,
        shriram@cs.rice.edu, mflatt@cs.rice.edu, robby@cs.rice.edu,
        cormac@cs.rice.edu, cobbe@cs.rice.edu
Subject: Re: all/771: Comment Out command not very useful
Date: Thu, 27 Aug 1998 16:25:37 -0500 (CDT)

 Amit, when I highlight the last two lines of the following program 
 
 ; amit : (forall (X) (X -> (list 'patel X))
 (define (amit patel)
   (list 'patel patel))
 
 and then choose Scheme|CommentOut and Scheme|Uncomment I get exactly the
 same program back. They are inverse operations. 
 
 What your mistake points out is that we need to have this little trick
 documented on the FAQ and that the FAQ for DrS probably needs to be easily
 accessible from DrScheme/ and Teaching/
 
 Thanks -- Matthias
 

From: "Robby Findler" <robby@cs.rice.edu>
To: matthias@cs.rice.edu, amitp@cs.stanford.edu, plt-gnats@cs.rice.edu
Cc:  Subject: Re: all/771: Comment Out command not very useful
Date: Thu, 27 Aug 1998 16:42:34 -0500 (CDT)

 Responding To:    Matthias Felleisen <matthias@cs.rice.edu>
 Original Date:    Thu, 27 Aug 1998 16:25:37 -0500 (CDT)
 > 
 > 
 > Amit, when I highlight the last two lines of the following program 
 
 Yes, but try highlighting all three lines.
 
 Robby
 
 > ; amit : (forall (X) (X -> (list 'patel X))
 > (define (amit patel)
 >   (list 'patel patel))
 
 
 

From: Matthias Felleisen <matthias@cs.rice.edu>
To: robby@cs.rice.edu
Cc: amitp@cs.stanford.edu, plt-gnats@cs.rice.edu
Subject: Re: all/771: Comment Out command not very useful
Date: Fri, 28 Aug 1998 07:42:01 -0500 (CDT)

    Date: Thu, 27 Aug 1998 16:42:34 -0500 (CDT)
    From: "Robby Findler" <robby@cs.rice.edu>
    Content-Type: text/plain; charset="us-ascii"
 
    Responding To:    Matthias Felleisen <matthias@cs.rice.edu>
    Original Date:    Thu, 27 Aug 1998 16:25:37 -0500 (CDT)
    > 
    > 
    > Amit, when I highlight the last two lines of the following program 
 
    Yes, but try highlighting all three lines.
 
    Robby
 
    > ; amit : (forall (X) (X -> (list 'patel X))
    > (define (amit patel)
    >   (list 'patel patel))
 
 (1) CommentOut/Uncomment work for highlighted lines. I find that correct.
 
 (2) We should document it in a FAQ.

Responsible-Changed-From-To: steck->robby
Responsible-Changed-By: robby
Responsible-Changed-When: Fri Apr  2 09:58:18 1999
Responsible-Changed-Why:

State-Changed-From-To: open-closed
State-Changed-By: robby
State-Changed-When: Mon Nov 29 18:29:56 1999
State-Changed-Why:

>Unformatted:
