From mflatt@cs.utah.edu  Tue Jan 15 07:13:27 2002
Received: from localhost (localhost.localdomain [127.0.0.1])
	by champlain.ccs.neu.edu (8.9.3/8.8.7) with ESMTP id HAA05208
	for <plt-gnats>; Tue, 15 Jan 2002 07:13:26 -0500
Message-Id: <200201151213.HAA05208@champlain.ccs.neu.edu>
Date: Tue, 15 Jan 2002 07:13:26 -0500
From: Matthew <mflatt@cs.utah.edu>
To: bugs@plt-scheme.org
Subject: printing function names

>Number:         5171
>Category:       drscheme
>Synopsis:       printing function names
>Confidential:   no
>Severity:       serious
>Priority:       medium
>Responsible:    robby
>State:          closed
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Tue Jan 15 07:20:00 EST 2002
>Closed-Date:    Tue Jul 16 12:47:55 EDT 2002
>Last-Modified:  Tue Jul 16 12:47:55 EDT 2002
>Originator:     Matthew
>Release:        200alpha9
>Organization:
titan
>Environment:
windows "Windows NT 5.0 (Build 2195) Service Pack 2" (win32\i386) (get-display-depth) = 16
Docs Installed:
("help" "teachpack" "icons" "r5rs" "drscheme" "mzscheme" "mred" "beginning")
Collections: 
(("e:\\matthew\\plt\\collects" ("CVS" "mzlib" "mred" "syntax" "compiler" "xml" "afm" "browser" "dynext" "errortrace" "games" "hierlist" "html" "mzscheme" "net" "setup" "sirmail" "slatex" "slibinit" "texpict" "drscheme" "framework" "help" "userspce" "debug" "defaults" "lang" "launcher" "make" "graphics" "string-constants" "icons" "doc" "parser-tools" "eopl" "version" "myscheme" "algol60")))
Human Language: english
>Description:
It looks like DrScheme's constructor printing uses
`eval' to check function names.

This can be a problem for non-teaching languages, 
because `(eval sym)' might not return.

>How-To-Repeat:
Execute this program in DrScheme's MzScheme language
with constructor printing:

 (define-syntax (y stx) (let loop () (loop)))
 (let ([y (lambda () 10)])
   y)

The name `y' never shows up in the interactions window,
while "write" printing mode terminates immediately with
#<procedure:y>.

>Fix:

>Release-Note:

>Audit-Trail:
Responsible-Changed-From-To: steck->robby
Responsible-Changed-By: robby
Responsible-Changed-When: Tue Jan 15 09:12:59 2002
Responsible-Changed-Why:
    print convert

From: Robert Bruce Findler <robby@cs.rice.edu>
To: Matthew <mflatt@cs.utah.edu>
Cc: bugs@plt-scheme.org
Subject: Re: all/5171: printing function names
Date: Tue, 15 Jan 2002 09:37:14 -0500

 I'm not sure how to proceed with this. If object-name (or another
 procedure) returned a syntax object, I could look at the syntax object
 to see if it is a 'lexical binding (via identifier-binding) but since
 it is a symbol I don't know what to do. Any suggestions?
 
 Just in case, the idea is that if typing `y' into the REPL doesn't
 produce the value that was just printed, I don't want to print `y' -- I
 want to print the value as if it had no name.
 
 Robby

From: Matthew Flatt <mflatt@cs.utah.edu>
To: Robert Bruce Findler <robby@cs.rice.edu>
Cc: bugs@plt-scheme.org
Subject: Re: all/5171: printing function names
Date: Tue, 15 Jan 2002 08:15:14 -0700 (MST)

 Quoting Robert Bruce Findler:
 > I'm not sure how to proceed with this.
 
 I think we need a new function in MzScheme. I'm not really happy with
 the current `namespace-...' functions, anyway.
 
 I'll claim the PR.
 
 > If object-name (or another
 > procedure) returned a syntax object, I could look at the syntax object
 > to see if it is a 'lexical binding (via identifier-binding)
 
 I think that would create as many problems as it solves. An appropriate
 namespace-inspecting function seems like a simpler and more reliable
 path.
 
 Matthew
 

From: Robert Bruce Findler <robby@cs.rice.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: bugs@plt-scheme.org
Subject: Re: all/5171: printing function names
Date: Tue, 15 Jan 2002 11:09:26 -0500

 Sounds great!
 
 Thanks,
 Robby
Responsible-Changed-From-To: robby->mflatt
Responsible-Changed-By: robby
Responsible-Changed-When: Sat Jun  8 19:00:30 2002
Responsible-Changed-Why:
    Matthew had planned to claim this (see email transcript)
Responsible-Changed-From-To: mflatt->robby
Responsible-Changed-By: robby
Responsible-Changed-When: Mon Jun 10 12:45:43 2002
Responsible-Changed-Why:
    matthew revised namespace- primitives to
    support this stuff.
State-Changed-From-To: open->closed
State-Changed-By: robby
State-Changed-When: Tue Jul 16 12:47:55 2002
State-Changed-Why:
    fixed, soon to be released.
>Unformatted:

