From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Wed Dec 19 11:20:28 2007
Received: from nf-out-0910.google.com (nf-out-0910.google.com [64.233.182.184])
	by champlain.ccs.neu.edu (8.13.8/8.13.7) with ESMTP id lBJGKSPI021266
	for <bugs@bugs.plt-scheme.org>; Wed, 19 Dec 2007 11:20:28 -0500
Message-Id: <200712191620.lBJGKM91021261@champlain.ccs.neu.edu>
Date: Wed, 19 Dec 2007 11:20:22 -0500
From: yarkun@gmail.com
To: bugs@plt-scheme.org
Subject: Calling (system ...) from process.ss library repeatedly causes DrScheme to become unstable

>Number:         9119
>Category:       drscheme
>Synopsis:       Calling (system ...) from process.ss library repeatedly causes DrScheme to become unstable
>Class:          sw-bug
>Responsible:    eli
>Severity:       critical
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Wed Dec 19 11:25:01 -0500 2007
>Closed-Date:    
>Last-Modified:  Fri Jun 06 02:12:01 -0400 2008
>Originator:     Yavuz Arkun
>Organization:
plt
>Submitter-Id:   unknown
>Release:        371.3-svn26oct2007
>Environment:
windows "Windows NT 5.1 (Build 2600) Service Pack 2" (win32\i386\3m) (get-display-depth) = 32
Docs Installed:
(("C:\\Program Files\\PLT-371.3\\doc" "r5rs" "mzscheme" "mred" "help" "tour" "drscheme" "srfi" "mzlib" "misclib" "mrlib" "framework" "foreign" "mzc" "tools" "insidemz" "web-server" "swindle" "plot" "release-notes" "t-y-scheme" "tex2page" "beginning" "beginning-abbr" "intermediate" "intermediate-lambda" "advanced" "teachpack" "teachpack-htdc" "profj-beginner" "profj-intermediate" "profj-intermediate-access" "profj-advanced"))
Human Language: english
(current-memory-use) 48574848

Collections:
(("C:\\Documents and Settings\\Yavuz\\Application Data\\PLT Scheme\\371.3\\collects" non-existent-path) ("C:\\Program Files\\PLT-371.3\\collects" "afm" "algol60" "big" "browser" "combinator-parser" "compiler" "config" "defaults" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "framework" "frtime" "games" "graphics" "help" "hierlist" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "mztake" "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profj" "profjWizard" "r5rs" "readline" "repos-time-stamp" "scribble" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "tex2page" "texpict" "trace" "version" "web-server" "wxme" "xml"))
Computer Language: (("Professional Languages" "PLT" "Textual (MzScheme, includes R5RS)") #6(#t write mixed-fraction-e #f #t debug))
>Description:
Calling (system ...) a few hundred times causes DrScheme to become unstable. It either crashes in mid-execution, or if the run ends successfully, it may crash when attemting a normal operations such as saving a file or GCing manually. Notes:

-- Running same program in MzScheme vie Emacs doesn't cause any problems, so its a DrScheme (as opposed to MzScheme) bug.
-- Setting "Scheme/Limit Memory..." to unlimited, 128MB, 256Mb, 512MB doesn't have any effect (on a 2GB PC).
-- Using "Run" button to clear MzScheme state between runs doesn't help, DrScheme still crashes when the cumulative number of (system ...) calls reaches some critical value.
-- As a wild guess, dangling ports/subprocesses left from system calls are causing some sort of resource leak, but the documentation on (system ...) doesn't say how one could clean leftovers after a call.

As a workaround, I am trying to use (execute-shell ...) but it is not a one-to-one replacement as it is asynchronous. Next I will try using (process ...) or (subprocess ...).
>How-To-Repeat:
; Run the following program 2-3 times (using the "Run" button) 
; in a fresh instance of DrScheme to reproduce the instability.
; The loop part is uncritical; any way to call (system ...)
; a few hundred times would be fine.

(require (lib "process.ss"))

(define (loop p n)
  (if (zero? n)
      (begin
        (newline)
        (display "Done"))
      (begin
        (newline)
        (display "Loop ")
        (display n)
        (p)
        (loop p (- n 1)))))

(loop (lambda () (system "netstat > crashtest.txt")) 100)
>Fix:
>Audit-Trail:
Responsible changed from "nobody" to "eli" by eli at Tue, 03 Jun 2008 13:30:11 -0400
Reason>>> .

State changed from "open" to "feedback" by eli at Tue, 03 Jun 2008 13:30:11 -0400
Reason>>> Can you please try it with the pre-release build from
pre.plt-scheme.org/installers?  Thanks.

From: Yavuz Arkun <yarkun@gmail.com>
To: bugs@plt-scheme.org
Cc: eli@plt-scheme.org
Subject: Re: [plt-bug] drscheme/9119 Calling (system ...) from process.ss
 library repeatedly causes DrScheme to become unstable
Date: Tue, 03 Jun 2008 21:08:54 +0300

 This bug was fixed in (I believe) 3.72, and I haven't encountered it 
 again. Just to be sure, I reran the code from the bug report in May 30 
 SVN build, and it doesn't cause a crash.
 
 However, it now causes a DOS console window to spawn and despawn for 
 each system call, which seems to be a new behavior.
 
 In any case, the original bug seems to have been fixed, and can be 
 closed. Thanks,
 --Yavuz
 
 eli@plt-scheme.org wrote:
 > Responsible changed from "nobody" to "eli" by eli at Tue, 03 Jun 2008 13:30:11 -0400
 > Reason>>> .
 > 
 > State changed from "open" to "feedback" by eli at Tue, 03 Jun 2008 13:30:11 -0400
 > Reason>>> Can you please try it with the pre-release build from
 > pre.plt-scheme.org/installers?  Thanks.
 > 
 > 
 > View:
 >   http://bugs.plt-scheme.org/query/?cmd=view&pr=9119
 > 

State changed from "feedback" to "closed" by eli at Fri, 06 Jun 2008 02:11:14 -0400
Reason>>> reported closed

From: Eli Barzilay <eli@barzilay.org>
To: Yavuz Arkun <yarkun@gmail.com>
Cc: bugs@plt-scheme.org
Subject: Re: [plt-bug] drscheme/9119 Calling (system ...) from process.ss
 library repeatedly causes DrScheme to become unstable
Date: Fri, 6 Jun 2008 02:10:26 -0400

 On Jun  3, Yavuz Arkun wrote:
 > However, it now causes a DOS console window to spawn and despawn for
 > each system call, which seems to be a new behavior.
 
 Did you try a recent build?  I think that this was solved recently.
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                   http://www.barzilay.org/                 Maze is Life!
