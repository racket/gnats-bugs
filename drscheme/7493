From apache@plt-scheme.org Wed Jul 13 10:39:18 2005
Received: from champlain.ccs.neu.edu (champlain.ccs.neu.edu [127.0.0.1])
	by champlain.ccs.neu.edu (8.12.10/8.12.10) with ESMTP id j6DEdFZS012165
	for <bugs@plt-scheme.org>; Wed, 13 Jul 2005 10:39:15 -0400
Message-Id: <200507131439.j6DEdFgt012163@champlain.ccs.neu.edu>
Date: Wed, 13 Jul 2005 10:39:15 -0400
From: jay@plt-scheme.org
To: bugs@plt-scheme.org
Subject: "only" module require form and Check Syntax

>Number:         7493
>Category:       drscheme
>Synopsis:       "only" module require form and Check Syntax
>Class:          sw-bug
>Responsible:    robby
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Wed Jul 13 10:40:00 -0400 2005
>Last-Modified:  Thu Jul 14 10:00:01 -0400 2005
>Originator:     Jay McCarthy
>Organization:
plt
>Submitter-Id:   unknown
>Release:        299.107-svn7jul2005
>Environment:
macosx "Darwin dhcp36-117.cs.brown.edu 8.1.0 Darwin Kernel Version 8.1.0: Tue May 10 18:16:08 PDT 2005; root:xnu-792.1.5.obj~4/RELEASE_PPC Power Macintosh powerpc" (ppc-macosx) (get-display-depth) = 32
Docs Installed:
(#<path:/Users/jay/Development/plt/src/plt/trunk/collects/doc/web-server> #<path:/Users/jay/Development/plt/src/plt/trunk/collects/doc/tour> #<path:/Users/jay/Development/plt/src/plt/trunk/collects/doc/tools> #<path:/Users/jay/Development/plt/src/plt/trunk/collects/doc/tex2page> #<path:/Users/jay/Development/plt/src/plt/trunk/collects/doc/teachpack> #<path:/Users/jay/Development/plt/src/plt/trunk/collects/doc/t-y-scheme> #<path:/Users/jay/Development/plt/src/plt/trunk/collects/doc/swindle> #<path:/Users/jay/Development/plt/src/plt/trunk/collects/doc/srfi> #<path:/Users/jay/Development/plt/src/plt/trunk/collects/doc/r5rs> #<path:/Users/jay/Development/plt/src/plt/trunk/collects/doc/profj-intermediate> #<path:/Users/jay/Development/plt/src/plt/trunk/collects/doc/profj-beginner> #<path:/Users/jay/Development/plt/src/plt/trunk/collects/doc/profj-advanced> #<path:/Users/jay/Development/plt/src/plt/trunk/collects/doc/plot> #<path:/Users/jay/Development/plt/src/plt/trunk/collects/doc/mzscheme> #<path:/Users/jay/Development/plt/src/plt/trunk/collects/doc/mzlib> #<path:/Users/jay/Development/plt/src/plt/trunk/collects/doc/mzc> #<path:/Users/jay/Development/plt/src/plt/trunk/collects/doc/mrlib> #<path:/Users/jay/Development/plt/src/plt/trunk/collects/doc/mred> #<path:/Users/jay/Development/plt/src/plt/trunk/collects/doc/misclib> #<path:/Users/jay/Development/plt/src/plt/trunk/collects/doc/intermediate-lambda> #<path:/Users/jay/Development/plt/src/plt/trunk/collects/doc/intermediate> #<path:/Users/jay/Development/plt/src/plt/trunk/collects/doc/insidemz> #<path:/Users/jay/Development/plt/src/plt/trunk/collects/doc/help> #<path:/Users/jay/Development/plt/src/plt/trunk/collects/doc/framework> #<path:/Users/jay/Development/plt/src/plt/trunk/collects/doc/foreign> #<path:/Users/jay/Development/plt/src/plt/trunk/collects/doc/drscheme> #<path:/Users/jay/Development/plt/src/plt/trunk/collects/doc/beginning-abbr> #<path:/Users/jay/Development/plt/src/plt/trunk/collects/doc/beginning> #<path:/Users/jay/Development/plt/src/plt!
 /trunk/c
ollects/doc/advanced>)
Collections:
((#<path:/Users/jay/Development/Projects> (#<path:.DS_Store> #<path:.svn> #<path:acl> #<path:applescript> #<path:automaton-workshop> #<path:ical> #<path:ical-todo> #<path:info-domain> #<path:ita> #<path:jscompiler> #<path:lambda-calculus> #<path:loyd> #<path:math> #<path:meta-help> #<path:moc> #<path:pfds> #<path:pierce> #<path:planet-submit> #<path:prefix> #<path:raid> #<path:sql-oo> #<path:sqlite> #<path:TODO.ooutline> #<path:web-components> #<path:web-movers> #<path:with-bindings> #<path:yppdb>)) (#<path:/Users/jay/Development/Projects> (#<path:.DS_Store> #<path:.svn> #<path:acl> #<path:applescript> #<path:automaton-workshop> #<path:ical> #<path:ical-todo> #<path:info-domain> #<path:ita> #<path:jscompiler> #<path:lambda-calculus> #<path:loyd> #<path:math> #<path:meta-help> #<path:moc> #<path:pfds> #<path:pierce> #<path:planet-submit> #<path:prefix> #<path:raid> #<path:sql-oo> #<path:sqlite> #<path:TODO.ooutline> #<path:web-components> #<path:web-movers> #<path:with-bindings> #<path:yppdb>)) (#<path:/Users/jay/Library/PLT Scheme/299.107/collects> ()) (#<path:/Users/jay/Development/plt/src/plt/trunk/collects> (#<path:.DS_Store> #<path:.svn> #<path:afm> #<path:algol60> #<path:browser> #<path:compiler> #<path:defaults> #<path:doc> #<path:drscheme> #<path:dynext> #<path:embedded-gui> #<path:eopl> #<path:errortrace> #<path:ffi> #<path:finish-install> #<path:framework> #<path:frtime> #<path:games> #<path:graphics> #<path:guibuilder> #<path:handin-client> #<path:handin-server> #<path:help> #<path:hierlist> #<path:honu> #<path:honu-module> #<path:htdch> #<path:htdp> #<path:html> #<path:icons> #<path:info-domain> #<path:lang> #<path:launcher> #<path:make> #<path:mred> #<path:mrflow> #<path:mrlib> #<path:mysterx> #<path:mzcom> #<path:mzlib> #<path:mzscheme> #<path:mztake> #<path:net> #<path:openssl> #<path:parser-tools> #<path:planet> #<path:plot> #<path:preprocessor> #<path:pretty-print> #<path:profj> #<path:profjBoxes> #<path:profjWizard> #<path:readline> #<path:reduction-semantics> #<path:repos-time-stamp> #<!
 path:set
up> #<path:sgl> #<path:sirmail> #<path:skipper> #<path:slatex> #<path:slibinit> #<path:slideshow> #<path:srfi> #<path:srpersist> #<path:ssax> #<path:stepper> #<path:string-constants> #<path:swindle> #<path:syntax> #<path:syntax-color> #<path:test-suite> #<path:tests> #<path:tex2page> #<path:texpict> #<path:trace> #<path:version> #<path:waterworld> #<path:web-server> #<path:xelda> #<path:xml>)))
Human Language: english
Teachpack filenames: ()
Computer Language: (("Professional Languages" "PLT" "Textual (MzScheme, includes R5RS)") #6(#t write mixed-fraction-e #f #t debug))
>Description:
Check Syntax does not seem to work if the source uses the "only" module require form.
>How-To-Repeat:
1. New file.
2. Type "(require (only (lib "list.ss") cons?))"
3. Press "Check Syntax"
4. View error:
standard-module-name-resolver: expects argument of type <module path>; given (only (lib "list.ss") cons?)
>Fix:
>Release-Note:
This is a contract violation.
>Audit-Trail:
From: Robby Findler <robby@cs.uchicago.edu>
To: mflatt@cs.utah.edu, bugs@plt-scheme.org
Cc: jay@kenyamountain.com
Subject: Re: all/7493: "only" module require form and Check Syntax
Date: Wed, 13 Jul 2005 10:12:46 -0500

 According to the bnf in the docs, the require specs cannot be nested,
 ie this:
 
   (require (prefix x: (only (lib "list.ss") cons?)))
 
 is illegal.
 
 The code in check syntax, however, (used to) recur in those places.
 
 Mz suggests that the above is illegal, but I just wanted to double
 check (since it does seem useful).
 
 Robby

Responsible changed from "nobody" to "robby" by robby at Wed, 13 Jul 2005 13:08:38 -0400
Reason>>> rbf

State changed from "open" to "closed" by robby at Wed, 13 Jul 2005 13:08:38 -0400
Reason>>> fixed & released to SVN

From: Matthew Flatt <mflatt@cs.utah.edu>
To: Robby Findler <robby@cs.uchicago.edu>
Cc: bugs@plt-scheme.org, jay@kenyamountain.com
Subject: Re: all/7493: "only" module require form and Check Syntax
Date: Thu, 14 Jul 2005 07:57:03 -0600

 At Wed, 13 Jul 2005 10:12:46 -0500, Robby Findler wrote:
 > According to the bnf in the docs, the require specs cannot be nested,
 > ie this:
 > 
 >   (require (prefix x: (only (lib "list.ss") cons?)))
 > 
 > is illegal.
 > 
 > The code in check syntax, however, (used to) recur in those places.
 > 
 > Mz suggests that the above is illegal, but I just wanted to double
 > check (since it does seem useful).
 
 The docs and MzScheme are both right.
 
 Perhaps the only improvement in the forthcoming library SRFI (compared
 to MzScheme) is a better, composable set of `require' and `provide'
 modifiers. :)
 
 Matthew
 
