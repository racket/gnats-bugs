From mflatt@cs.rice.edu  Mon Aug 25 08:48:38 1997
Received: from africa.cs.rice.edu (africa.cs.rice.edu [128.42.1.175]) by cs.rice.edu (8.8.5/8.7.1) with ESMTP id IAA24162 for <plt-gnats@cs.rice.edu>; Mon, 25 Aug 1997 08:48:38 -0500 (CDT)
Message-Id: <199708251348.IAA05902@africa.cs.rice.edu>
Date: Mon, 25 Aug 1997 08:48:37 -0500 (CDT)
From: Matthew Flatt <mflatt@cs.rice.edu>
Reply-To: mflatt@cs.rice.edu
To: plt-gnats@cs.rice.edu
Subject: DrScheme ignores error-escape-handler
X-Send-Pr-Version: 3.101

>Number:         266
>Category:       drscheme
>Synopsis:       DrScheme ignores error-escape-handler
>Confidential:   no
>Severity:       serious
>Priority:       medium
>Responsible:    robby
>State:          closed
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Mon Aug 25 13:50:01 GMT 1997
>Last-Modified:  Mon Aug 25 14:31:50 MST 1997
>Originator:     Matthew Flatt
>Organization:
titan
>Release:        unknown
>Environment:
	DrScheme -x, Solaris
>Description:
	DrScheme ignores the error-escape-handler setting of the
user's thread. For example, given this program:
  (begin   
   (let/ec exit
    (let ([oe (error-escape-handler)])
      (dynamic-wind
       (lambda () (error-escape-handler exit))
       (lambda () (car1))
       (lambda () (error-escape-handler oe)))))
   0)
The usual error message should be printed, but the program still has
the value 0. In MzScheme, running this program gives:
 reference to undefined identifier: car1
 0
 >
DrScheme, in contrast, ignores the error-escape-handler setting, so
execution does not continue after the error message is printed.

>How-To-Repeat:
	Run the above program
        or try (load "~mflatt/plt/tests/mzscheme/basic.ss") and
           see that the first use of error-test stops the program
           after the error is detected.
>Fix:
	
>Audit-Trail:

From: Robert Bruce Findler <robby@cs.rice.edu>
To: mflatt@cs.rice.edu
Cc: plt-gnats@cs.rice.edu
Subject: Re: all/266: DrScheme ignores error-escape-handler
Date: Mon, 25 Aug 1997 10:21:10 -0500 (CDT)

 BTW, it is not ignoring the setting, the evaluation is just taking place in
 nowhereville.
 
 Matthew Flatt writes:
 > 
 > >Number:         266
 > >Category:       all
 > >Synopsis:       DrScheme ignores error-escape-handler
 > >Confidential:   no
 > >Severity:       serious
 > >Priority:       medium
 > >Responsible:    ptg
 > >State:          open
 > >Class:          sw-bug
 > >Submitter-Id:   unknown
 > >Arrival-Date:   Mon Aug 25 13:50:01 GMT 1997
 > >Last-Modified:
 > >Originator:     Matthew Flatt
 > >Organization:
 > titan
 > >Release:        unknown
 > >Environment:
 > 	DrScheme -x, Solaris
 > >Description:
 > 	DrScheme ignores the error-escape-handler setting of the
 > user's thread. For example, given this program:
 >   (begin   
 >    (let/ec exit
 >     (let ([oe (error-escape-handler)])
 >       (dynamic-wind
 >        (lambda () (error-escape-handler exit))
 >        (lambda () (car1))
 >        (lambda () (error-escape-handler oe)))))
 >    0)
 > The usual error message should be printed, but the program still has
 > the value 0. In MzScheme, running this program gives:
 >  reference to undefined identifier: car1
 >  0
 >  >
 > DrScheme, in contrast, ignores the error-escape-handler setting, so
 > execution does not continue after the error message is printed.
 > 
 > >How-To-Repeat:
 > 	Run the above program
 >         or try (load "~mflatt/plt/tests/mzscheme/basic.ss") and
 >            see that the first use of error-test stops the program
 >            after the error is detected.
 > >Fix:
 > 	
 > >Audit-Trail:
 > >Unformatted:

Responsible-Changed-From-To: ptg->robby
Responsible-Changed-By: robby
Responsible-Changed-When: Mon Aug 25 14:31:40 1997
Responsible-Changed-Why:

State-Changed-From-To: open-closed
State-Changed-By: robby
State-Changed-When: Mon Aug 25 14:31:43 1997
State-Changed-Why:

fixed, released.

>Unformatted:
