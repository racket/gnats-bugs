From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Tue Apr 14 20:57:16 2009
Received: from qw-out-2122.google.com (qw-out-2122.google.com [74.125.92.25])
	by champlain.ccs.neu.edu (8.14.2/8.14.2) with ESMTP id n3F0v7tL018216
	for <bugs@bugs.plt-scheme.org>; Tue, 14 Apr 2009 20:57:07 -0400
Message-Id: <200904150057.n3F0v5CM018209@champlain.ccs.neu.edu>
Date: Tue, 14 Apr 2009 20:57:05 -0400
From: matthias@ccs.neu.edu
To: bugs@plt-scheme.org
Subject: drscheme repl behaves in strange ways

>Number:         10201
>Category:       drscheme
>Synopsis:       drscheme repl behaves in strange ways
>Class:          sw-bug
>Responsible:    robby
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Tue Apr 14 21:00:01 -0400 2009
>Last-Modified:  Sat May 09 12:26:16 -0400 2009
>Originator:     matthias
>Organization:
plt
>Submitter-Id:   unknown
>Release:        4.1.5.4-svn13apr2009
>Environment:
macosx "Darwin europe 8.11.1 Darwin Kernel Version 8.11.1: Wed Oct 10 18:23:28 PDT 2007; root:xnu-792.25.20~1/RELEASE_I386 i386 i386" (i386-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 59743852

Collections:
(("/Users/matthias/0Unison/collects/" ".DS_Store" "compiled" "date" "finance" "info-domain" "info.ss" "short" "testing" "tll-collects" "utils" "web") ("/Users/matthias/Library/PLT Scheme/4.1.5.4/collects" non-existent-path) ("/Users/matthias/plt/collects" ".svn" "2htdp" "afm" "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "defaults" "deinprogramm" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profile" "profj" "profjWizard" "r5rs" "r6rs" "readline" "redex" "repos-time-stamp" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "sirmail" "slatex" "slideshow" "srfi" "srpersi!
 st" "stepper" "string-constants" "stxclass" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tests" "tex2page" "texpict" "trace" "typed" "typed-scheme" "version" "waterworld" "web-server" "wxme" "xml"))
Computer Language: (("Module") (#(#t write mixed-fraction-e #f #t debug) (default) #() "#lang scheme\n" #t))
>Description:
when you modify the lang/ collection, 
and _run_ drscheme, you get strange 
error messages, as in 

link: module mismatch, probably from old bytecode 
whose dependencies have changed: variable not provided
(directly or indirectly) from module:
"/Users/matthias/plt/collects/lang/private/teachprims.ss"
accessed from module: '#%htdp at source phase level: 0
>How-To-Repeat:
here is how i produced such bugs three times this afternoon: 

FOR ALL unary functions random: 

I modified the lang directory, specifically I added a 
definition for the _random_ in 

file teachprim:

(define-teach beginner random
  (lambda (a)
    (random a)))

plus I exported it as beginner-random, like thus: 

 (provide
  beginner-random
  ...

Then I imported and re-exported random from 

file beginner-fun:

 ((beginner-random random) (integer -> integer)
  "to compute randomness")
 ;; this is in the provide/doc form of that file 

;; ------------- NOW ------------------------

do all the above edits inside of drscheme

strange error 1: 
-- open a brand new buffer in drscheme 
-- RUN
-- see two error messages in different colors
   about "rename-out" WITHOUT mention of random

strange error 2: 
 (well Matthias thinks perhaps I need to compile things 
 now before drscheme picks them up)

-- run setup-plt -l lang 
-- hit RUN again in this empty buffer
-- see error message mentioned in description. 

;; -------------- WOW ------------------

restart drscheme and these errors go away. 

(This is not the first time that I am making such tiny changes
to the files in lang/ and way back when drscheme was drscheme
this worked.) 
>Fix:
>Audit-Trail:
From: Robby Findler <robby@eecs.northwestern.edu>
To: matthias@ccs.neu.edu, bugs@plt-scheme.org
Cc: Matthew Flatt <mflatt@cs.utah.edu>
Subject: Re: [plt-bug] all/10201: drscheme repl behaves in strange ways
Date: Tue, 14 Apr 2009 20:02:58 -0500

 Yes, now that I see it in the full glory of Matthias's description for
 the 3rd time, I finally realize that this must be a consequence of the
 lazy loading.
 
 But as I said before, DrScheme does not take kindly to you changing
 its source while it is running. I don't see why it is reasonable to
 expect that it should (for a dynamically loaded system). It is an
 unenforceable invariant, but one that seems hard to avoid relying on.
 
 Robby
From: Matthew Flatt <mflatt@cs.utah.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: matthias@ccs.neu.edu, bugs@plt-scheme.org
Subject: Re: [plt-bug] all/10201: drscheme repl behaves in strange ways
Date: Tue, 14 Apr 2009 19:05:49 -0600

 There's no lazy loading, only lazy instantiation. I still don't see how
 the error would happen, so I'll take a look.
 
 At Tue, 14 Apr 2009 20:02:58 -0500, Robby Findler wrote:
 > Yes, now that I see it in the full glory of Matthias's description for
 > the 3rd time, I finally realize that this must be a consequence of the
 > lazy loading.
 > 
 > But as I said before, DrScheme does not take kindly to you changing
 > its source while it is running. I don't see why it is reasonable to
 > expect that it should (for a dynamically loaded system). It is an
 > unenforceable invariant, but one that seems hard to avoid relying on.
 > 
 > Robby
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: matthias@ccs.neu.edu, bugs@plt-scheme.org
Subject: Re: [plt-bug] all/10201: drscheme repl behaves in strange ways
Date: Tue, 14 Apr 2009 20:11:29 -0500

 Lazy loading is the wrong phrase sorry, but what I meant is the new
 lazy instantiation combined with the fact that DrScheme is creating
 new namespaces for the user program and sharing bits of itself with
 them (and thus different things are loaded at different times and
 instantiated at different times). Here's the precise list of what it
 is sharing, without any tools loaded.
 
     (define to-be-copied-module-specs
       (list 'mzscheme
             '(lib "mzlib/foreign.ss")
             '(lib "mred/mred.ss")
             '(lib "mrlib/cache-image-snip.ss")
             '(lib "mrlib/matrix-snip.ss")
             '(lib "mzlib/pconvert-prop.ss")
             '(lib "planet/terse-info.ss")))
 
 I see that the htdp languages share more:
 
                    ((current-module-name-resolver) '(lib
 "lang/private/set-result.ss") #f #f)
                    ((current-module-name-resolver) '(lib
 "test-engine/scheme-tests.ss") #f #f)
 
 and the mzscheme module too (via 'drscheme-secrets).
 
 I don't know if other tools share even more.
 
 Robby
 
 On Tue, Apr 14, 2009 at 8:05 PM, Matthew Flatt <mflatt@cs.utah.edu> wrote:
 > There's no lazy loading, only lazy instantiation. I still don't see how
 > the error would happen, so I'll take a look.
 >
 > At Tue, 14 Apr 2009 20:02:58 -0500, Robby Findler wrote:
 >> Yes, now that I see it in the full glory of Matthias's description for
 >> the 3rd time, I finally realize that this must be a consequence of the
 >> lazy loading.
 >>
 >> But as I said before, DrScheme does not take kindly to you changing
 >> its source while it is running. I don't see why it is reasonable to
 >> expect that it should (for a dynamically loaded system). It is an
 >> unenforceable invariant, but one that seems hard to avoid relying on.
 >>
 >> Robby
 >
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: bugs@plt-scheme.org, Matthew Flatt <mflatt@cs.utah.edu>
Subject: Re: [plt-bug] all/10201: drscheme repl behaves in strange ways
Date: Tue, 14 Apr 2009 21:19:33 -0400

 I understand that drscheme may and possibly should 'throw up' on such  
 changes. It just didn't before, for such minor changes.
 
 
 On Apr 14, 2009, at 9:02 PM, Robby Findler wrote:
 
 > Yes, now that I see it in the full glory of Matthias's description for
 > the 3rd time, I finally realize that this must be a consequence of the
 > lazy loading.
 >
 > But as I said before, DrScheme does not take kindly to you changing
 > its source while it is running. I don't see why it is reasonable to
 > expect that it should (for a dynamically loaded system). It is an
 > unenforceable invariant, but one that seems hard to avoid relying on.
 >
 > Robby
 

