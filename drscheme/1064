From matthias@cs.rice.edu  Fri Jul  2 09:00:27 1999
Received: from africa.cs.rice.edu (africa.cs.rice.edu [128.42.1.175])
	by cs.rice.edu (8.9.0/8.9.0) with ESMTP id JAA01528
	for <plt-gnats@cs.rice.edu>; Fri, 2 Jul 1999 09:00:26 -0500 (CDT)
Message-Id: <199907021400.JAA07342@africa.cs.rice.edu>
Date: Fri, 2 Jul 1999 09:00:26 -0500 (CDT)
From: Matthias Felleisen <matthias@cs.rice.edu>
Reply-To: matthias@rice.edu
To: plt-gnats@cs.rice.edu
Subject: stepper does not respect alpha-equivalence for intermediate steps
X-Send-Pr-Version: 3.101

>Number:         1064
>Category:       drscheme
>Synopsis:       stepper does not respect alpha-equivalence for intermediate steps
>Confidential:   no
>Severity:       serious
>Priority:       medium
>Responsible:    mflatt
>State:          closed
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Fri Jul  2 14:15:19 GMT 1999
>Last-Modified:  Mon Aug  2 13:34:43 CDT 1999
>Originator:     Matthias Felleisen
>Organization:
titan
>Release:        unknown
>Environment:
	100 alpha3 (africa drscheme -x)
>Description:
	(define y 3)

	(define (f x)
	  (lambda (y)
	    x))

	(define h (f (lambda (z) y)))

	(define i (h 33))

	(i 55)

	The second step displays a term that suffers from capturing 
	Of course, the final result is correct. 

>How-To-Repeat:
	sa
>Fix:

	The stepper needs to reconstruct syntax in more careful manner 
	and may need to do some alpha renaming on lambda variables (say
	y0 instead of y)
>Audit-Trail:

Responsible-Changed-From-To: steck->mflatt
Responsible-Changed-By: mflatt
Responsible-Changed-When: Mon Aug  2 13:34:13 1999
Responsible-Changed-Why:

State-Changed-From-To: open-closed
State-Changed-By: mflatt
State-Changed-When: Mon Aug  2 13:34:16 1999
State-Changed-Why:
Defined away by the constraint that Beginner allows
`lambda' only as the RHS of a definition.

>Unformatted:
