From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Tue Jul 31 13:02:49 2007
Received: from wx-out-0506.google.com (wx-out-0506.google.com [66.249.82.237])
	by champlain.ccs.neu.edu (8.13.8/8.13.7) with ESMTP id l6VH2mcO022212
	for <bugs@bugs.plt-scheme.org>; Tue, 31 Jul 2007 13:02:48 -0400
Message-Id: <200707311702.l6VH2eZI022207@champlain.ccs.neu.edu>
Date: Tue, 31 Jul 2007 13:02:40 -0400
From: mflatt@cs.utah.edu
To: bugs@plt-scheme.org
Subject: auto-save makes stepper think the program changed?

>Number:         8837
>Category:       drscheme
>Synopsis:       auto-save makes stepper think the program changed?
>Class:          sw-bug
>Responsible:    ryanc
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Tue Jul 31 13:05:01 -0400 2007
>Closed-Date:    Thu Jul 01 19:20:01 -0400 2010
>Last-Modified:  Thu Jul 01 19:20:01 -0400 2010
>Originator:     Matthew
>Organization:
plt
>Submitter-Id:   unknown
>Release:        370p2
>Environment:
macosx "Darwin wireless64.wireless.utah.edu 8.10.1 Darwin Kernel Version 8.10.1: Wed May 23 16:33:00 PDT 2007; root:xnu-792.22.5~1/RELEASE_I386 i386 i386" (i386-macosx/3m) (get-display-depth) = 32
Docs Installed:
(("/Applications/PLT Scheme v370/doc" "r5rs" "mzscheme" "mred" "help" "tour" "drscheme" "srfi" "mzlib" "misclib" "mrlib" "framework" "foreign" "mzc" "tools" "insidemz" "web-server" "swindle" "plot" "release-notes" "t-y-scheme" "tex2page" "beginning" "beginning-abbr" "intermediate" "intermediate-lambda" "advanced" "teachpack" "teachpack-htdc" "profj-beginner" "profj-intermediate" "profj-advanced"))
Human Language: english
(current-memory-use) 99923348

Collections:
(("/Users/mflatt/Library/PLT Scheme/370/collects" "installed-teachpacks") ("/Applications/PLT Scheme v370/collects" "afm" "algol60" "browser" "compiler" "config" "defaults" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "framework" "frtime" "games" "graphics" "help" "hierlist" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mzlib" "mzscheme" "mztake" "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profj" "profjWizard" "r5rs" "readline" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "tex2page" "texpict" "trace" "version" "web-server" "wxme" "xml"))
Computer Language: (("Teaching Languages" "How to Design Programs" "Beginning Student") (#6(#t constructor repeating-decimal #f #t none) #f ()))
>Description:
It seems that when
DrScheme auto-saves a buffer that I'm
currently running in the stepper, then
the stepper thinks that the program
has changed (and so a yellow warning
bar appears).
>How-To-Repeat:
Put a program in the definitions window
 (without saving it).
Click "Step".
Wait a few minutes...
 eventually the yellow warning appears
>Fix:
>Audit-Trail:
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: mflatt@cs.utah.edu, bugs@plt-scheme.org
Cc: nobody@plt-scheme.org, eli@plt-scheme.org, matthias@plt-scheme.org,
        sk@plt-scheme.org, mflatt@plt-scheme.org, robby@plt-scheme.org,
        clements@plt-scheme.org, jay@plt-scheme.org, meunier@plt-scheme.org,
        sowens@plt-scheme.org, kathyg@plt-scheme.org, awick@plt-scheme.org,
        jacobm@plt-scheme.org, cce@plt-scheme.org, dalev@plt-scheme.org,
        samth@plt-scheme.org, ryanc@plt-scheme.org
Subject: Re: [plt-bug] all/8837: auto-save makes stepper think the program changed?
Date: Tue, 31 Jul 2007 13:13:23 -0400

 YES! You figured it out. This is also true for the REPL. It's the bug  
 I reported weeks ago in an email because I couldn't reproduce it!  
 THANKS! I wasn't dreaming!
 
 
 
 On Jul 31, 2007, at 1:05 PM, mflatt@cs.utah.edu wrote:
 
 > A new problem report is waiting at
 >   http://bugs.plt-scheme.org/query/?cmd=view&pr=8837
 >
 > Reported by Matthew for release: 370p2
 >
 > *** Description:
 > It seems that when
 > DrScheme auto-saves a buffer that I'm
 > currently running in the stepper, then
 > the stepper thinks that the program
 > has changed (and so a yellow warning
 > bar appears).
 >
 > *** How to repeat:
 > Put a program in the definitions window
 >  (without saving it).
 > Click "Step".
 > Wait a few minutes...
 >  eventually the yellow warning appears
 >
 > *** Environment:
 > macosx "Darwin wireless64.wireless.utah.edu 8.10.1 Darwin Kernel  
 > Version 8.10.1: Wed May 23 16:33:00 PDT 2007; root:xnu-792.22.5~1/ 
 > RELEASE_I386 i386 i386" (i386-macosx/3m) (get-display-depth) = 32
 > Docs Installed:
 > (("/Applications/PLT Scheme v370/doc" "r5rs" "mzscheme" "mred"  
 > "help" "tour" "drscheme" "srfi" "mzlib" "misclib" "mrlib"  
 > "framework" "foreign" "mzc" "tools" "insidemz" "web-server"  
 > "swindle" "plot" "release-notes" "t-y-scheme" "tex2page"  
 > "beginning" "beginning-abbr" "intermediate" "intermediate-lambda"  
 > "advanced" "teachpack" "teachpack-htdc" "profj-beginner" "profj- 
 > intermediate" "profj-advanced"))
 > Human Language: english
 > (current-memory-use) 99923348
 >
 > Collections:
 > (("/Users/mflatt/Library/PLT Scheme/370/collects" "installed- 
 > teachpacks") ("/Applications/PLT Scheme v370/collects" "afm"  
 > "algol60" "browser" "compiler" "config" "defaults" "drscheme"  
 > "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "framework"  
 > "frtime" "games" "graphics" "help" "hierlist" "htdch" "htdp" "html"  
 > "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger"  
 > "make" "mred" "mrlib" "mzlib" "mzscheme" "mztake" "net" "openssl"  
 > "parser-tools" "planet" "plot" "preprocessor" "profj" "profjWizard"  
 > "r5rs" "readline" "setup" "sgl" "slatex" "slideshow" "srfi"  
 > "stepper" "string-constants" "swindle" "syntax" "syntax-color"  
 > "teachpack" "tex2page" "texpict" "trace" "version" "web-server"  
 > "wxme" "xml"))
 > Computer Language: (("Teaching Languages" "How to Design Programs"  
 > "Beginning Student") (#6(#t constructor repeating-decimal #f #t  
 > none) #f ()))
 >
 
From: "Robby Findler" <robby@cs.uchicago.edu>
To: mflatt@cs.utah.edu, bugs@plt-scheme.org
Cc: "John Clements" <clements@brinckerhoff.org>
Subject: Re: [plt-bug] all/8837: auto-save makes stepper think the program changed?
Date: Tue, 31 Jul 2007 12:13:00 -0500

 There is a preference you can edit to make that time shorter. Open
 your prefs file and look for autosave (I think there are two with that
 name). One is the timeout, in seconds and I think it defaults to 5
 minutes.
 
 Edit it and then start drs.
 
 Robby
 
 On 7/31/07, mflatt@cs.utah.edu <mflatt@cs.utah.edu> wrote:
 > A new problem report is waiting at
 >   http://bugs.plt-scheme.org/query/?cmd=view&pr=8837
 >
 > Reported by Matthew for release: 370p2
 >
 > *** Description:
 > It seems that when
 > DrScheme auto-saves a buffer that I'm
 > currently running in the stepper, then
 > the stepper thinks that the program
 > has changed (and so a yellow warning
 > bar appears).
 >
 > *** How to repeat:
 > Put a program in the definitions window
 >  (without saving it).
 > Click "Step".
 > Wait a few minutes...
 >  eventually the yellow warning appears
 >
 > *** Environment:
 > macosx "Darwin wireless64.wireless.utah.edu 8.10.1 Darwin Kernel Version 8.10.1: Wed May 23 16:33:00 PDT 2007; root:xnu-792.22.5~1/RELEASE_I386 i386 i386" (i386-macosx/3m) (get-display-depth) = 32
 > Docs Installed:
 > (("/Applications/PLT Scheme v370/doc" "r5rs" "mzscheme" "mred" "help" "tour" "drscheme" "srfi" "mzlib" "misclib" "mrlib" "framework" "foreign" "mzc" "tools" "insidemz" "web-server" "swindle" "plot" "release-notes" "t-y-scheme" "tex2page" "beginning" "beginning-abbr" "intermediate" "intermediate-lambda" "advanced" "teachpack" "teachpack-htdc" "profj-beginner" "profj-intermediate" "profj-advanced"))
 > Human Language: english
 > (current-memory-use) 99923348
 >
 > Collections:
 > (("/Users/mflatt/Library/PLT Scheme/370/collects" "installed-teachpacks") ("/Applications/PLT Scheme v370/collects" "afm" "algol60" "browser" "compiler" "config" "defaults" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "framework" "frtime" "games" "graphics" "help" "hierlist" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mzlib" "mzscheme" "mztake" "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profj" "profjWizard" "r5rs" "readline" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "tex2page" "texpict" "trace" "version" "web-server" "wxme" "xml"))
 > Computer Language: (("Teaching Languages" "How to Design Programs" "Beginning Student") (#6(#t constructor repeating-decimal #f #t none) #f ()))
 >
 >
From: John Clements <clements@brinckerhoff.org>
To: mflatt@cs.utah.edu, bugs@plt-scheme.org
Cc: robby@plt-scheme.org
Subject: Re: [plt-bug] all/8837: auto-save makes stepper think the program changed?
Date: Tue, 31 Jul 2007 13:16:20 -0400

 On Jul 31, 2007, at 1:05 PM, mflatt@cs.utah.edu wrote:
 
 > A new problem report is waiting at
 >   http://bugs.plt-scheme.org/query/?cmd=view&pr=8837
 >
 > Reported by Matthew for release: 370p2
 >
 > *** Description:
 > It seems that when
 > DrScheme auto-saves a buffer that I'm
 > currently running in the stepper, then
 > the stepper thinks that the program
 > has changed (and so a yellow warning
 > bar appears).
 
 Robby, I extend the DrScheme definitions window like this:
 
        ;; stepper-definitions-text-mixin : a mixin for the  
 definitions text that
        ;; alerts thet stepper when the definitions text is altered or  
 destroyed
        (define (stepper-definitions-text-mixin %)
          (class %
 
            (inherit get-top-level-window)
            (define/private (notify-stepper-frame-of-change)
              (let ([win (get-top-level-window)])
                ;; should only be #f when win is #f
                (when (is-a? win stepper-unit-frame<%>)
                  (let ([stepper-window (send win get-stepper-frame)])
                    (when stepper-window
                      (send stepper-window original-program-changed))))))
 
            (define/augment (on-insert x y)
              (notify-stepper-frame-of-change)
              (inner (void) on-insert x y))
 
            (define/augment (on-delete x y)
              (notify-stepper-frame-of-change)
              (inner (void) on-delete x y))
 
            (define/augment (after-set-next-settings s)
              (let ([tlw (get-top-level-window)])
                (when tlw
                  (send tlw check-current-language-for-stepper)))
              (inner (void) after-set-next-settings s))
 
            (super-new)))
 
 ... In particular, I simply assume that any call to "on-insert" or  
 "on-delete" should trigger the warning box.  Is there a better way to  
 check for this?  Is there some way to fence out calls to on-insert  
 that are associated with things like auto-save?
 
 I don't imagine that reading the docs for on-insert would answer this  
 question, but feel free to RTFM me if appropriate.
 
 Thanks,
 
 John
 
From: Matthew Flatt <mflatt@cs.utah.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: bugs@plt-scheme.org, robby@cs.uchicago.edu, clements@plt-scheme.org
Subject: Re: [plt-bug] all/8837: auto-save makes stepper think the program changed?
Date: Tue, 31 Jul 2007 11:24:22 -0600

 At Tue, 31 Jul 2007 13:13:23 -0400, Matthias Felleisen wrote:
 > YES! You figured it out. This is also true for the REPL. It's the bug  
 > I reported weeks ago in an email because I couldn't reproduce it!  
 > THANKS! I wasn't dreaming!
 
 Yes --- I think I just saw it with the REPL. I'm trying one more time
 to be more sure...
 
 Matthew
 
From: "Robby Findler" <robby@cs.uchicago.edu>
To: "John Clements" <clements@brinckerhoff.org>
Cc: mflatt@cs.utah.edu, bugs@plt-scheme.org
Subject: Re: [plt-bug] all/8837: auto-save makes stepper think the program changed?
Date: Tue, 31 Jul 2007 12:25:31 -0500

 Oh, I see. It is an interaction with the automatic insertion of the
 teaching language metadata during saving that triggers the problem.
 
 How about this revised strategy (for the stepper): don't do anything
 during an edit sequence. At the end of an edit sequence, check to see
 if the file is modified (and set the yellow bar in that case). If an
 insert/delete happens when the editor isn't in an edit sequence then
 do the usual thing (as currently happens).
 
 Sound doable?
 
 Robby
From: Matthew Flatt <mflatt@cs.utah.edu>
To: "Robby Findler" <robby@cs.uchicago.edu>
Cc: "John Clements" <clements@brinckerhoff.org>, bugs@plt-scheme.org,
        matthias@ccs.neu.edu
Subject: Re: [plt-bug] all/8837: auto-save makes stepper think the program changed?
Date: Tue, 31 Jul 2007 11:27:13 -0600

 At Tue, 31 Jul 2007 12:25:31 -0500, "Robby Findler" wrote:
 > Oh, I see. It is an interaction with the automatic insertion of the
 > teaching language metadata during saving that triggers the problem.
 
 Just to confirm, autosaving triggers a yellow banner in the REPL, too.
 
 Matthew
 
From: John Clements <clements@brinckerhoff.org>
To: "Robby Findler" <robby@cs.uchicago.edu>
Cc: mflatt@cs.utah.edu, bugs@plt-scheme.org
Subject: Re: [plt-bug] all/8837: auto-save makes stepper think the program changed?
Date: Tue, 31 Jul 2007 13:51:16 -0400

 On Jul 31, 2007, at 1:25 PM, Robby Findler wrote:
 
 > Oh, I see. It is an interaction with the automatic insertion of the
 > teaching language metadata during saving that triggers the problem.
 >
 > How about this revised strategy (for the stepper): don't do anything
 > during an edit sequence. At the end of an edit sequence, check to see
 > if the file is modified (and set the yellow bar in that case). If an
 > insert/delete happens when the editor isn't in an edit sequence then
 > do the usual thing (as currently happens).
 >
 > Sound doable?
 
 Hmm, what about the following sequence:
 
 user types a program without saving, so is-modified? returns #t.
 user starts stepper, runs a few steps
 somehow user triggers edit-sequence that makes no net change in  
 defn's window.
 Stepper sees end of edit-sequence, checks is-modified, sees that it's  
 true (as it has been all along) and displays the yellow bar!
 
 Another, more problematic sequence:
 
 user types a program and saves it, is-modified returns #f.
 User starts stepping.
 User triggers edit-sequence that makes major change to the  
 definitions window and then saves it.
 Stepper sees that is-modified is #f, doesn't show yellow box, even  
 though the defn's window has changed substantially.
 
 
 That is, it seems that "is-modified?" is entirely different from  
 "does the defn's window now look different to the user," or even  
 "does the program now do a different thing," which is really what we  
 want.
 
 One strategy could be to require saving before running the stepper...
 
 John
 
From: "Robby Findler" <robby@cs.uchicago.edu>
To: "John Clements" <clements@brinckerhoff.org>
Cc: mflatt@cs.utah.edu, bugs@plt-scheme.org
Subject: Re: [plt-bug] all/8837: auto-save makes stepper think the program changed?
Date: Tue, 31 Jul 2007 12:55:27 -0500

 On 7/31/07, John Clements <clements@brinckerhoff.org> wrote:
 > That is, it seems that "is-modified?" is entirely different from
 > "does the defn's window now look different to the user," or even
 > "does the program now do a different thing," which is really what we
 > want.
 
 Yeah, you're right. We want something like "is-modified" but something
 that starts at some arbitrary point in time (ie, "has-been-modified
 since X") whereas "is-modified" starts the last time drs was saved.
 
 > One strategy could be to require saving before running the stepper...
 
 I don't think we want that one!
 
 How about I just add a "I'm modifying the buffer because of metadata
 saving" flag?
 
 Or, maybe Matthew knows a way I should be using text% better? Matthew?
 
 Robby
From: John Clements <clements@brinckerhoff.org>
To: "Robby Findler" <robby@cs.uchicago.edu>
Cc: mflatt@cs.utah.edu, bugs@plt-scheme.org
Subject: Re: [plt-bug] all/8837: auto-save makes stepper think the program changed?
Date: Tue, 31 Jul 2007 13:58:56 -0400

 On Jul 31, 2007, at 1:55 PM, Robby Findler wrote:
 
 > On 7/31/07, John Clements <clements@brinckerhoff.org> wrote:
 >> That is, it seems that "is-modified?" is entirely different from
 >> "does the defn's window now look different to the user," or even
 >> "does the program now do a different thing," which is really what we
 >> want.
 >
 > Yeah, you're right. We want something like "is-modified" but something
 > that starts at some arbitrary point in time (ie, "has-been-modified
 > since X") whereas "is-modified" starts the last time drs was saved.
 >
 >> One strategy could be to require saving before running the stepper...
 >
 > I don't think we want that one!
 >
 > How about I just add a "I'm modifying the buffer because of metadata
 > saving" flag?
 >
 > Or, maybe Matthew knows a way I should be using text% better? Matthew?
 
 Hmm... what about overriding set-modified, rather than calling is- 
 modified?  Then you can check to see whether "set-modified" is called  
 during an edit sequence?
 
 John
 
From: "Robby Findler" <robby@cs.uchicago.edu>
To: "John Clements" <clements@brinckerhoff.org>
Cc: mflatt@cs.utah.edu, bugs@plt-scheme.org
Subject: Re: [plt-bug] all/8837: auto-save makes stepper think the program changed?
Date: Tue, 31 Jul 2007 13:08:56 -0500

 How would that knowledge help?
 
 Robby
 
 On 7/31/07, John Clements <clements@brinckerhoff.org> wrote:
 >
 > On Jul 31, 2007, at 1:55 PM, Robby Findler wrote:
 >
 > > On 7/31/07, John Clements <clements@brinckerhoff.org> wrote:
 > >> That is, it seems that "is-modified?" is entirely different from
 > >> "does the defn's window now look different to the user," or even
 > >> "does the program now do a different thing," which is really what we
 > >> want.
 > >
 > > Yeah, you're right. We want something like "is-modified" but something
 > > that starts at some arbitrary point in time (ie, "has-been-modified
 > > since X") whereas "is-modified" starts the last time drs was saved.
 > >
 > >> One strategy could be to require saving before running the stepper...
 > >
 > > I don't think we want that one!
 > >
 > > How about I just add a "I'm modifying the buffer because of metadata
 > > saving" flag?
 > >
 > > Or, maybe Matthew knows a way I should be using text% better? Matthew?
 >
 > Hmm... what about overriding set-modified, rather than calling is-
 > modified?  Then you can check to see whether "set-modified" is called
 > during an edit sequence?
 >
 > John
 >
 >
From: Matthew Flatt <mflatt@cs.utah.edu>
To: "Robby Findler" <robby@cs.uchicago.edu>
Cc: "John Clements" <clements@brinckerhoff.org>, bugs@plt-scheme.org
Subject: Re: [plt-bug] all/8837: auto-save makes stepper think the program changed?
Date: Tue, 31 Jul 2007 15:18:23 -0600

 At Tue, 31 Jul 2007 12:55:27 -0500, "Robby Findler" wrote:
 > How about I just add a "I'm modifying the buffer because of metadata
 > saving" flag?
 > 
 > Or, maybe Matthew knows a way I should be using text% better? Matthew?
 
 I can't think of anything better. It seems wrong to have to change the
 editor to save it, but I don't think that any of the current methods
 let you insert data just into the saved stream. So, adding a flag as
 you suggest is probably about as easy and effective as anything.
 
 Matthew
 
From: "Robby Findler" <robby@cs.uchicago.edu>
To: "Matthew Flatt" <mflatt@cs.utah.edu>
Cc: "John Clements" <clements@brinckerhoff.org>, bugs@plt-scheme.org
Subject: Re: [plt-bug] all/8837: auto-save makes stepper think the program changed?
Date: Tue, 31 Jul 2007 17:37:21 -0500

 On 7/31/07, Matthew Flatt <mflatt@cs.utah.edu> wrote:
 > At Tue, 31 Jul 2007 12:55:27 -0500, "Robby Findler" wrote:
 > > How about I just add a "I'm modifying the buffer because of metadata
 > > saving" flag?
 > >
 > > Or, maybe Matthew knows a way I should be using text% better? Matthew?
 >
 > I can't think of anything better. It seems wrong to have to change the
 > editor to save it,
 
 Agreed.
 
 > but I don't think that any of the current methods
 > let you insert data just into the saved stream.
 
 I only need to prefix the saved stream. Would that make it easy to add
 such a method.
 
 > So, adding a flag as
 > you suggest is probably about as easy and effective as anything.
 
 FWIW, this is now the 2rd time that callbacks have tangled in an
 unexpected way that resulted in a bug that I didn't recognize at first
 (I found a few more before my first release but since I was coding it
 up at that point, I figured them out pretty quickly.)
 
 So maybe it is time to bite the bullet and avoid modifying the editor?
 
 Robby
From: "Robby Findler" <robby@cs.uchicago.edu>
To: mflatt@cs.utah.edu, bugs@plt-scheme.org
Cc: "John Clements" <clements@brinckerhoff.org>,
        "Ryan Culpepper" <ryanc@ccs.neu.edu>
Subject: Re: [plt-bug] all/8837: auto-save makes stepper think the program changed?
Date: Tue, 31 Jul 2007 23:38:43 -0500

 Ryan: the problem in the PR probably also affects the macro debugger's
 yellow thingy.
 
 All: new code checked in; docs below. The new methods are in
 drscheme:unit:definitions-text<%> and for those not conversent in .cdb
 format: the methods take no arguments and return no results.
 
 Robby
 @method begin-metadata-changes
 
 Augment this method to be notified when DrScheme is changing
 the buffer to insert metadata. The metadata is only inserted
 during saving, so tools that track changes to DrScheme will
 need to ignore changes that occur after this method is
 called, and before
 @milink end-metadata-changes
 is called.
 
 @return : void
 
 @method end-metadata-changes
 
 Called when the changes to insert metadata are done, and the
 editor is back to its state at the time of the call to
 @milink begin-metadata-changes
 
 @return : void

Responsible changed from "nobody" to "ryanc" by eli at Tue, 07 Aug 2007 21:04:21 -0400
Reason>>> Ryan, looks like it's your ball, please pass it over
afterwards or close.

State changed from "open" to "closed" by ryanc@racket-lang.org at Thu, 01 Jul 2010 19:20:01 -0400
Reason>>> A commit by ryanc@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/b3bf2fa6f3
