From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Mon Jan 17 13:03:24 2011
Received: from mail-gy0-f172.google.com (mail-gy0-f172.google.com [209.85.160.172])
	by champlain.ccs.neu.edu (8.14.3/8.14.3) with ESMTP id p0HI3LuN008098
	for <bugs@bugs.plt-scheme.org>; Mon, 17 Jan 2011 13:03:21 -0500
Message-Id: <201101171802.p0HI2jvs008072@champlain.ccs.neu.edu>
Date: Mon, 17 Jan 2011 13:02:45 -0500
From: jsailor+plt@cs.brown.edu
To: bugs@racket-lang.org
Subject: Tail call analysis doesn't propogate through type-case

>Number:         11631
>Category:       drscheme
>Synopsis:       Tail call analysis doesn't propogate through type-case
>Class:          sw-bug
>Responsible:    robby
>Severity:       non-critical
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Mon Jan 17 13:04:01 -0500 2011
>Closed-Date:    Sat Jan 22 17:40:49 -0500 2011
>Last-Modified:  Sat Jan 22 17:40:49 -0500 2011
>Originator:     Jonathan Sailor
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.0.1
>Environment:
linux-ubuntu
>Description:
(This is about the purple arrows in "Check Syntax".) Well, at least, I presume the bodies in type-case are in tail position.
>How-To-Repeat:
>Fix:
>Audit-Trail:
From: Robby Findler <robby@eecs.northwestern.edu>
To: jsailor+plt@cs.brown.edu, bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11631: Tail call analysis doesn't propogate
 through type-case
Date: Mon, 17 Jan 2011 13:48:28 -0600

 This example seems to work:
 
 #lang plai
 
 (define-type T [a])
 
 (define (my-function x)
   (type-case T x
     [a () (my-function x)]))
 
 (my-function (a))
 
 
 On Mon, Jan 17, 2011 at 12:04 PM,  <jsailor+plt@cs.brown.edu> wrote:
 > A new problem report is waiting at
 > =C2=A0http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D11631
 >
 > Reported by Jonathan Sailor for release: 5.0.1
 >
 > *** Description:
 > (This is about the purple arrows in "Check Syntax".) Well, at least, I pr=
 esume the bodies in type-case are in tail position.
 >
 > *** How to repeat:
 >
 >
 > *** Environment:
 > linux-ubuntu
 >
 >
From: Jonathan Sailor <jon@cs.brown.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: jsailor+plt@cs.brown.edu, Eric Nicholas Dobson <endobson@cs.brown.edu>,
        bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11631: Tail call analysis doesn't propogate
 through type-case
Date: Mon, 17 Jan 2011 15:08:07 -0500 (EST)

 On Mon, 17 Jan 2011, Robby Findler wrote:
 > This example seems to work:
 
 Odd: it does. (Eric Dobson must be laughing at me so hard for not
 including a test case.)
 
 This code:
 
      #lang plai
 
      (define-type T (a (f integer?)))
 
      (define (fun x)
        (type-case T x
  		 [a (z)
  		    (if true
  			(fun x)
  			4)]))
 
 
 Generates http://cs.brown.edu/~jon/temp/1295294844-Picture%206.png under
 5.0.1 on OSX. I've seen similar behavior with more complicated examples in
 other versions.
 
 (In the screenshot, the cursor is over the paren immediately left of 'if.)
 
 ~jon.
From: Robby Findler <robby@eecs.northwestern.edu>
To: Jonathan Sailor <jon@cs.brown.edu>
Cc: jsailor+plt@cs.brown.edu, Eric Nicholas Dobson <endobson@cs.brown.edu>,
        bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11631: Tail call analysis doesn't propogate
 through type-case
Date: Mon, 17 Jan 2011 14:10:46 -0600

 It works in 5.0.2.
 
 Robby
 
 On Mon, Jan 17, 2011 at 2:08 PM, Jonathan Sailor <jon@cs.brown.edu> wrote:
 > On Mon, 17 Jan 2011, Robby Findler wrote:
 >>
 >> This example seems to work:
 >
 > Odd: it does. (Eric Dobson must be laughing at me so hard for not
 > including a test case.)
 >
 > This code:
 >
 > =C2=A0 =C2=A0#lang plai
 >
 > =C2=A0 =C2=A0(define-type T (a (f integer?)))
 >
 > =C2=A0 =C2=A0(define (fun x)
 > =C2=A0 =C2=A0 =C2=A0(type-case T x
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 [a (z)
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(if =
 true
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
 =A0 =C2=A0(fun x)
 > =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
 =A0 =C2=A04)]))
 >
 >
 > Generates http://cs.brown.edu/~jon/temp/1295294844-Picture%206.png under
 > 5.0.1 on OSX. I've seen similar behavior with more complicated examples i=
 n
 > other versions.
 >
 > (In the screenshot, the cursor is over the paren immediately left of 'if.=
 )
 >
 > ~jon.
 >
From: Jonathan Sailor <jon@cs.brown.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: Eric Nicholas Dobson <endobson@cs.brown.edu>, bugs@racket-lang.org,
        nobody@racket-lang.org, bug-notification@racket-lang.org,
        jay@racket-lang.org
Subject: Re: [racket-bug] all/11631: Tail call analysis doesn't propogate
 through type-case
Date: Mon, 17 Jan 2011 15:38:32 -0500 (EST)

   This message is in MIME format.  The first part should be readable text,
   while the remaining parts are likely unreadable without MIME-aware tools.
 
 ---1803540191-1609325971-1295296712=:22821
 Content-Type: TEXT/PLAIN; charset=UTF-8; format=flowed
 Content-Transfer-Encoding: 8BIT
 
 Okay, this is embarrassing.
 
 Jay, did you do anything that would fix this recently? If so, the
 resolution's obvious; if not, I'll try to see if I can dig up a more
 complicated test case that fails on 502.
 
 ~jon.
 
 On Mon, 17 Jan 2011, Robby Findler wrote:
 > It works in 5.0.2.
 >
 > Robby
 >
 > On Mon, Jan 17, 2011 at 2:08 PM, Jonathan Sailor <jon@cs.brown.edu> wrote:
 >> On Mon, 17 Jan 2011, Robby Findler wrote:
 >>>
 >>> This example seems to work:
 >>
 >> Odd: it does. (Eric Dobson must be laughing at me so hard for not
 >> including a test case.)
 >>
 >> This code:
 >>
 >>    #lang plai
 >>
 >>    (define-type T (a (f integer?)))
 >>
 >>    (define (fun x)
 >>      (type-case T x
 >>                 [a (z)
 >>                    (if true
 >>                        (fun x)
 >>                        4)]))
 >>
 >>
 >> Generates http://cs.brown.edu/~jon/temp/1295294844-Picture%206.png under
 >> 5.0.1 on OSX. I've seen similar behavior with more complicated examples in
 >> other versions.
 >>
 >> (In the screenshot, the cursor is over the paren immediately left of 'if.)
 >>
 >> ~jon.
 >>
 >
 
 ---1803540191-1609325971-1295296712=:22821--
From: Jay McCarthy <jay@racket-lang.org>
To: Jonathan Sailor <jon@cs.brown.edu>
Cc: Robby Findler <robby@eecs.northwestern.edu>,
        Eric Nicholas Dobson <endobson@cs.brown.edu>, bugs@racket-lang.org,
        nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11631: Tail call analysis doesn't propogate
 through type-case
Date: Mon, 17 Jan 2011 19:20:36 -0700

 Nope, not that I know of.
 
 Jay
 
 2011/1/17 Jonathan Sailor <jon@cs.brown.edu>:
 > Okay, this is embarrassing.
 >
 > Jay, did you do anything that would fix this recently? If so, the
 > resolution's obvious; if not, I'll try to see if I can dig up a more
 > complicated test case that fails on 502.
 >
 > ~jon.
 >
 > On Mon, 17 Jan 2011, Robby Findler wrote:
 >>
 >> It works in 5.0.2.
 >>
 >> Robby
 >>
 >> On Mon, Jan 17, 2011 at 2:08 PM, Jonathan Sailor <jon@cs.brown.edu> wrot=
 e:
 >>>
 >>> On Mon, 17 Jan 2011, Robby Findler wrote:
 >>>>
 >>>> This example seems to work:
 >>>
 >>> Odd: it does. (Eric Dobson must be laughing at me so hard for not
 >>> including a test case.)
 >>>
 >>> This code:
 >>>
 >>> =C2=A0 =C2=A0#lang plai
 >>>
 >>> =C2=A0 =C2=A0(define-type T (a (f integer?)))
 >>>
 >>> =C2=A0 =C2=A0(define (fun x)
 >>> =C2=A0 =C2=A0 =C2=A0(type-case T x
 >>> =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 [a (z)
 >>> =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(i=
 f true
 >>> =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =
 =C2=A0 =C2=A0(fun x)
 >>> =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =
 =C2=A0 =C2=A04)]))
 >>>
 >>>
 >>> Generates http://cs.brown.edu/~jon/temp/1295294844-Picture%206.png unde=
 r
 >>> 5.0.1 on OSX. I've seen similar behavior with more complicated examples
 >>> in
 >>> other versions.
 >>>
 >>> (In the screenshot, the cursor is over the paren immediately left of
 >>> 'if.)
 >>>
 >>> ~jon.
 >>>
 >>
 >


State changed from "open" to "closed" by robby at Sat, 22 Jan 2011 17:40:49 -0500
Reason>>> old bug

