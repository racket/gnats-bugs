From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Thu Feb  1 02:45:11 2007
Received: from wx-out-0506.google.com (wx-out-0506.google.com [66.249.82.226])
	by champlain.ccs.neu.edu (8.13.8/8.13.7) with ESMTP id l117jBZB021908
	for <bugs@bugs.plt-scheme.org>; Thu, 1 Feb 2007 02:45:11 -0500
Message-Id: <200702010745.l117j9OC021903@champlain.ccs.neu.edu>
Date: Thu, 1 Feb 2007 02:45:09 -0500
From: eli@barzilay.org
To: bugs@plt-scheme.org
Subject: Extending the tabify/brackets specs

>Number:         8512
>Category:       drscheme
>Synopsis:       Extending the tabify/brackets specs
>Class:          change-request
>Responsible:    robby
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Thu Feb 01 02:50:01 -0500 2007
>Closed-Date:    Fri May 04 05:33:05 -0400 2007
>Last-Modified:  Fri May 04 05:33:05 -0400 2007
>Originator:     Eli Barzilay
>Organization:
plt
>Submitter-Id:   unknown
>Release:        360
>Environment:
unix "Linux winooski.ccs.neu.edu 2.6.19-1.2895.fc6xen #1 SMP Wed Jan 10 19:47:12 EST 2007 i686 i686 i386 GNU/Linux" (i386-linux) (get-display-depth) = 16
Docs Installed:
(("/home/eli/plt/doc" "r5rs" "mzscheme" "mred" "help" "tour" "drscheme" "srfi" "mzlib" "misclib" "mrlib" "framework" "foreign" "mzc" "tools" "insidemz" "web-server" "swindle" "plot" "release-notes" "t-y-scheme" "tex2page" "beginning" "beginning-abbr" "intermediate" "intermediate-lambda" "advanced" "teachpack" "teachpack-htdc" "profj-beginner" "profj-intermediate" "profj-advanced"))
Human Language: english
(current-memory-use) 63533056

Collections:
(("/home/eli/scheme/my-plt" "pics") ("/home/eli/.plt-scheme/360/collects" "info-domain" "CSU660") ("/home/eli/plt/collects" "icons" "syntax-color" "trace" "tex2page" "slideshow" "texpict" "syntax" "eopl" "launcher" "teachpack" "plot" "algol60" "web-server" "graphics" "compiler" "planet" "profjWizard" "lazy" "openssl" "games" "swindle" "mrlib" "info-domain" "framework" "lang" "help" "hierlist" "profjBoxes" "readline" "config" "errortrace" "drscheme" "parser-tools" "mztake" "profj" "htdp" "string-constants" "dynext" "browser" "mred" "mzlib" "frtime" "embedded-gui" "slatex" "htdch" "srfi" "stepper" "defaults" "macro-debugger" "mzscheme" "preprocessor" "ffi" "test-suite" "version" "html" "sgl" "net" "make" "xml" "afm" "setup" "r5rs" "slibinit"))
Teachpack filenames: ()
Computer Language: (("Teaching Languages" "CSU660" "CSU660 Course Language") #6(#t current-print mixed-fraction-e #t #t test-coverage))
>Description:
My course package adds new special forms that need their own
indentation and bracket rules.  Currently, it deals with
indentation by looking for the `framework:tabify' key in the
prefs and consing new specs on it.  This happens to work
because DrScheme always writes that key -- but that's not
the case for the brackets thing.  This means that I can't
add anything to that -- if I just create the key with my
names, then only these names are used and the built-in
defaults are not used.

I thought that one inconvenient-but-still-valid way of
solving this is to use the framework itself to read the
value and cons the new things on top -- but the framework
requires mred, which is not the case with setup-plt.

(And BTW, it seems odd that the bracket thing uses strings,
and tabify uses symbols.)
>How-To-Repeat:
>Fix:
>Audit-Trail:
From: "Robby Findler" <robby.findler@gmail.com>
To: eli@barzilay.org, bugs@plt-scheme.org
Cc: nobody@plt-scheme.org, eli@plt-scheme.org, matthias@plt-scheme.org,
        sk@plt-scheme.org, mflatt@plt-scheme.org, robby@plt-scheme.org,
        clements@plt-scheme.org, jay@plt-scheme.org, meunier@plt-scheme.org,
        sowens@plt-scheme.org, kathyg@plt-scheme.org, awick@plt-scheme.org,
        goldberg@plt-scheme.org, dskippy@plt-scheme.org, jacobm@plt-scheme.org,
        cce@plt-scheme.org, dalev@plt-scheme.org, samth@plt-scheme.org,
        ryanc@plt-scheme.org
Subject: Re: [plt-bug] all/8512: Extending the tabify/brackets specs
Date: Thu, 1 Feb 2007 07:56:12 -0600

 Separating the preferences reading/writing library from the rest of
 the framework (so it didn't have to require mred) would solve your
 problem?
 
 Robby
 
 On 2/1/07, eli@barzilay.org <eli@barzilay.org> wrote:
 > A new problem report is waiting at
 >   http://bugs.plt-scheme.org/query/?cmd=view&pr=8512
 >
 > Reported by Eli Barzilay for release: 360
 >
 > *** Description:
 > My course package adds new special forms that need their own
 > indentation and bracket rules.  Currently, it deals with
 > indentation by looking for the `framework:tabify' key in the
 > prefs and consing new specs on it.  This happens to work
 > because DrScheme always writes that key -- but that's not
 > the case for the brackets thing.  This means that I can't
 > add anything to that -- if I just create the key with my
 > names, then only these names are used and the built-in
 > defaults are not used.
 >
 > I thought that one inconvenient-but-still-valid way of
 > solving this is to use the framework itself to read the
 > value and cons the new things on top -- but the framework
 > requires mred, which is not the case with setup-plt.
 >
 > (And BTW, it seems odd that the bracket thing uses strings,
 > and tabify uses symbols.)
 >
 > *** How to repeat:
 >
 >
 > *** Environment:
 > unix "Linux winooski.ccs.neu.edu 2.6.19-1.2895.fc6xen #1 SMP Wed Jan 10 19:47:12 EST 2007 i686 i686 i386 GNU/Linux" (i386-linux) (get-display-depth) = 16
 > Docs Installed:
 > (("/home/eli/plt/doc" "r5rs" "mzscheme" "mred" "help" "tour" "drscheme" "srfi" "mzlib" "misclib" "mrlib" "framework" "foreign" "mzc" "tools" "insidemz" "web-server" "swindle" "plot" "release-notes" "t-y-scheme" "tex2page" "beginning" "beginning-abbr" "intermediate" "intermediate-lambda" "advanced" "teachpack" "teachpack-htdc" "profj-beginner" "profj-intermediate" "profj-advanced"))
 > Human Language: english
 > (current-memory-use) 63533056
 >
 > Collections:
 > (("/home/eli/scheme/my-plt" "pics") ("/home/eli/.plt-scheme/360/collects" "info-domain" "CSU660") ("/home/eli/plt/collects" "icons" "syntax-color" "trace" "tex2page" "slideshow" "texpict" "syntax" "eopl" "launcher" "teachpack" "plot" "algol60" "web-server" "graphics" "compiler" "planet" "profjWizard" "lazy" "openssl" "games" "swindle" "mrlib" "info-domain" "framework" "lang" "help" "hierlist" "profjBoxes" "readline" "config" "errortrace" "drscheme" "parser-tools" "mztake" "profj" "htdp" "string-constants" "dynext" "browser" "mred" "mzlib" "frtime" "embedded-gui" "slatex" "htdch" "srfi" "stepper" "defaults" "macro-debugger" "mzscheme" "preprocessor" "ffi" "test-suite" "version" "html" "sgl" "net" "make" "xml" "afm" "setup" "r5rs" "slibinit"))
 > Teachpack filenames: ()
 > Computer Language: (("Teaching Languages" "CSU660" "CSU660 Course Language") #6(#t current-print mixed-fraction-e #t #t test-coverage))
 >
 >
From: Eli Barzilay <eli@barzilay.org>
To: "Robby Findler" <robby.findler@gmail.com>
Cc: bugs@plt-scheme.org
Subject: Re: [plt-bug] all/8512: Extending the tabify/brackets specs
Date: Thu, 1 Feb 2007 12:29:20 -0500

 On Feb  1, Robby Findler wrote:
 > Separating the preferences reading/writing library from the rest of
 > the framework (so it didn't have to require mred) would solve your
 > problem?
 
 Yes, that would be helpful -- I ended up doing this in the tool code,
 and I'm not sure if it's better done there or in the installer.  The
 advantage of doing it in the tool is that it will work even when users
 remove their preferences or when the package was installed
 system-wide, the disadvantage is that I hate making DrScheme do
 even more stuff when starting up...
 
 In any case, it looks like it's common enough of a problem to have
 some uniform solution.  Maybe some entries in the info file that will
 make DrScheme do the additions I did manually?
 
 Also -- it seems that it would make more sense to unify the two
 settings (brackets and tabify), since they're both describing an
 editor-related property of binders.
 
 
 > On 2/1/07, eli@barzilay.org <eli@barzilay.org> wrote:
 > > A new problem report is waiting at
 > >   http://bugs.plt-scheme.org/query/?cmd=view&pr=8512
 > >
 > > Reported by Eli Barzilay for release: 360
 > >
 > > *** Description:
 > > My course package adds new special forms that need their own
 > > indentation and bracket rules.  Currently, it deals with
 > > indentation by looking for the `framework:tabify' key in the
 > > prefs and consing new specs on it.  This happens to work
 > > because DrScheme always writes that key -- but that's not
 > > the case for the brackets thing.  This means that I can't
 > > add anything to that -- if I just create the key with my
 > > names, then only these names are used and the built-in
 > > defaults are not used.
 > >
 > > I thought that one inconvenient-but-still-valid way of
 > > solving this is to use the framework itself to read the
 > > value and cons the new things on top -- but the framework
 > > requires mred, which is not the case with setup-plt.
 > >
 > > (And BTW, it seems odd that the bracket thing uses strings,
 > > and tabify uses symbols.)
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                   http://www.barzilay.org/                 Maze is Life!
From: "Robby Findler" <robby.findler@gmail.com>
To: bugs@plt-scheme.org, "Eli Barzilay" <eli@barzilay.org>
Cc: 
Subject: Fwd: [plt-bug] all/8512: Extending the tabify/brackets specs
Date: Thu, 1 Feb 2007 17:56:10 -0600

 I'm not positive, but I suspect that the framework:tabify thing you're
 doing doesn't work in all situations, either.
 
 Anyways, I've just split out the preferences library from the
 framework. Checked in to SVN. Use (lib "preferences.ss" "framework").
 
 Robby
 
 On 2/1/07, Eli Barzilay <eli@barzilay.org> wrote:
 > On Feb  1, Robby Findler wrote:
 > > Separating the preferences reading/writing library from the rest of
 > > the framework (so it didn't have to require mred) would solve your
 > > problem?
 >
 > Yes, that would be helpful -- I ended up doing this in the tool code,
 > and I'm not sure if it's better done there or in the installer.  The
 > advantage of doing it in the tool is that it will work even when users
 > remove their preferences or when the package was installed
 > system-wide, the disadvantage is that I hate making DrScheme do
 > even more stuff when starting up...
 >
 > In any case, it looks like it's common enough of a problem to have
 > some uniform solution.  Maybe some entries in the info file that will
 > make DrScheme do the additions I did manually?
 >
 > Also -- it seems that it would make more sense to unify the two
 > settings (brackets and tabify), since they're both describing an
 > editor-related property of binders.
 >
 >
 > > On 2/1/07, eli@barzilay.org <eli@barzilay.org> wrote:
 > > > A new problem report is waiting at
 > > >   http://bugs.plt-scheme.org/query/?cmd=view&pr=8512
 > > >
 > > > Reported by Eli Barzilay for release: 360
 > > >
 > > > *** Description:
 > > > My course package adds new special forms that need their own
 > > > indentation and bracket rules.  Currently, it deals with
 > > > indentation by looking for the `framework:tabify' key in the
 > > > prefs and consing new specs on it.  This happens to work
 > > > because DrScheme always writes that key -- but that's not
 > > > the case for the brackets thing.  This means that I can't
 > > > add anything to that -- if I just create the key with my
 > > > names, then only these names are used and the built-in
 > > > defaults are not used.
 > > >
 > > > I thought that one inconvenient-but-still-valid way of
 > > > solving this is to use the framework itself to read the
 > > > value and cons the new things on top -- but the framework
 > > > requires mred, which is not the case with setup-plt.
 > > >
 > > > (And BTW, it seems odd that the bracket thing uses strings,
 > > > and tabify uses symbols.)
 >
 > --
 >           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
 >                   http://www.barzilay.org/                 Maze is Life!
 >
From: Eli Barzilay <eli@barzilay.org>
To: "Robby Findler" <robby.findler@gmail.com>
Cc: bugs@plt-scheme.org
Subject: Re: Fwd: [plt-bug] all/8512: Extending the tabify/brackets specs
Date: Thu, 1 Feb 2007 19:40:32 -0500

 On Feb  1, Robby Findler wrote:
 > I'm not positive, but I suspect that the framework:tabify thing
 > you're doing doesn't work in all situations, either.
 
 Why is that?  I thought that the only advantage of doing it in the
 post-installer is the fact that it's done once.  (So it's actually
 better to do it in the tool code if I want a more robust behavior.)
 
 
 > Anyways, I've just split out the preferences library from the
 > framework. Checked in to SVN. Use (lib "preferences.ss" "framework").
 
 That looks like a good idea in any case.  (And for other situations
 too.)
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                   http://www.barzilay.org/                 Maze is Life!
From: "Robby Findler" <robby.findler@gmail.com>
To: "Eli Barzilay" <eli@barzilay.org>
Cc: bugs@plt-scheme.org
Subject: Re: Fwd: [plt-bug] all/8512: Extending the tabify/brackets specs
Date: Thu, 1 Feb 2007 19:18:59 -0600

 On 2/1/07, Eli Barzilay <eli@barzilay.org> wrote:
 > On Feb  1, Robby Findler wrote:
 > > I'm not positive, but I suspect that the framework:tabify thing
 > > you're doing doesn't work in all situations, either.
 >
 > Why is that?  I thought that the only advantage of doing it in the
 > post-installer is the fact that it's done once.  (So it's actually
 > better to do it in the tool code if I want a more robust behavior.)
 
 Just that editing the file underneath the preferences library seems
 tricky and becuase you seem to be relying on the way it reads the
 filesystem, which might change.
 
 I don't really know what you're doing, but I do know that now you're
 doing something for which you can blame me if it fails, right? :)
 
 >
 > > Anyways, I've just split out the preferences library from the
 > > framework. Checked in to SVN. Use (lib "preferences.ss" "framework").
 >
 > That looks like a good idea in any case.  (And for other situations
 > too.)
 >
 > --
 >           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
 >                   http://www.barzilay.org/                 Maze is Life!
 >
From: Eli Barzilay <eli@barzilay.org>
To: "Robby Findler" <robby.findler@gmail.com>
Cc: bugs@plt-scheme.org
Subject: Re: Fwd: [plt-bug] all/8512: Extending the tabify/brackets specs
Date: Thu, 1 Feb 2007 20:31:43 -0500

 On Feb  1, Robby Findler wrote:
 > On 2/1/07, Eli Barzilay <eli@barzilay.org> wrote:
 > > On Feb  1, Robby Findler wrote:
 > > > I'm not positive, but I suspect that the framework:tabify thing
 > > > you're doing doesn't work in all situations, either.
 > >
 > > Why is that?  I thought that the only advantage of doing it in the
 > > post-installer is the fact that it's done once.  (So it's actually
 > > better to do it in the tool code if I want a more robust behavior.)
 > 
 > Just that editing the file underneath the preferences library seems
 > tricky and becuase you seem to be relying on the way it reads the
 > filesystem, which might change.
 
 I *used* to do that...  Not entirely down to tweaking the file
 manually -- I used the file.ss interface.  The proper thing is to use
 the framework interface -- which I couldn't do in the post-installer,
 so I now switched to doing the tweaking in the tool (phase2) so now it
 does work through the framework interface.
 
 And the issue was that I thought it's better to do in the
 post-installer rather than in the tool code.  But the more I think
 about it, the more I think that such code should stay in the tool code
 -- the post-installer thing will not work if installing a package in
 the plt tree (you'll get the preferences in the root homedir if
 installing in a lab).  It happens to work for me because the
 collection is always installed by users.
 
 
 > I don't really know what you're doing, but I do know that now you're
 > doing something for which you can blame me if it fails, right? :)
 
 Yes, that was the goal, of course...
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                   http://www.barzilay.org/                 Maze is Life!

State changed from "open" to "closed" by eli at Fri, 04 May 2007 05:33:05 -0400
Reason>>> solved

