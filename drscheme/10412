From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Sun Aug 23 00:29:53 2009
Received: from mail-gx0-f221.google.com (mail-gx0-f221.google.com [209.85.217.221])
	by champlain.ccs.neu.edu (8.14.2/8.14.2) with ESMTP id n7N4TmmI015655
	for <bugs@bugs.plt-scheme.org>; Sun, 23 Aug 2009 00:29:48 -0400
Message-Id: <200908230429.n7N4TkAJ015648@champlain.ccs.neu.edu>
Date: Sun, 23 Aug 2009 00:29:46 -0400
From: jsailor+plt@cs.brown.edu
To: bugs@plt-scheme.org
Subject: Default indentation of for/fold forms appears wrong

>Number:         10412
>Category:       drscheme
>Synopsis:       Default indentation of for/fold forms appears wrong
>Class:          sw-bug
>Responsible:    robby
>Severity:       non-critical
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Sun Aug 23 00:32:01 -0400 2009
>Last-Modified:  Thu May 12 17:58:56 -0400 2011
>Originator:     Jonathan Sailor
>Organization:
plt
>Submitter-Id:   unknown
>Release:        4.2.1
>Environment:
macosx "Darwin selima.local 9.8.0 Darwin Kernel Version 9.8.0: Wed Jul 15 16:55:01 PDT 2009; root:xnu-1228.15.4~1/RELEASE_I386 i386 i386" (i386-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 72497944

Collections:
(("/Users/jon/Library/PLT Scheme/4.2.1/collects" non-existent-path) ("/Applications/PLT Scheme v4.2.1/collects" "2htdp" "afm" "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "defaults" "deinprogramm" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "help" "hierlist" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profile" "profj" "r5rs" "r6rs" "readline" "redex" "rnrs" "s-exp" "scheme" "scribble" "scribblings" "scriblib" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "stxclass" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tex2page" "texpict" "trace" "typed" "typed-scheme" "version" "web-server" "wxme" "xml"))
Computer Language: (("Module") (#(#t quasiquote mixed-fraction-e #t #t none) (default) #() "#lang scheme\n" #t))
>Description:
for/fold (and for*/fold) forms have the form "(for/fold listof-bindings listof-bindings body ...)"

If the two listof-bindings are placed on the same line, it seems obiously correct to indent the body forms by two spaces, which is what DrScheme does. If, however, each listof-binding is placed on its own line, then DrScheme indents the second one two spaces; it seems like it should be aligned with the first.

The samples below are in #lang scheme
>How-To-Repeat:
;; correct, undisputed
(for/fold ([l empty]) ([i (in-range 10)])
  (cons i l))

;; what DrScheme does
(for/fold ([l empty])
  ([i (in-range 10)])
  (cons i l))

;; what looks correct
(for/fold ([l empty])
          ([i (in-range 10)])
  (cons i l))
>Fix:
>Audit-Trail:
From: Eli Barzilay <eli@barzilay.org>
To: jsailor+plt@cs.brown.edu, bugs@plt-scheme.org
Cc: nobody@plt-scheme.org, bug-notification@plt-scheme.org
Subject: Re: [plt-bug] all/10412: Default indentation of for/fold forms appears wrong
Date: Sun, 23 Aug 2009 12:07:59 -0400

 On Aug 23, jsailor+plt@cs.brown.edu wrote:
 > 
 > If the two listof-bindings are placed on the same line, it seems
 > obiously correct to indent the body forms by two spaces, which is
 > what DrScheme does. If, however, each listof-binding is placed on
 > its own line, then DrScheme indents the second one two spaces; it
 > seems like it should be aligned with the first.
 
 Right -- there are only a few categories of indentation, and
 `for/fold' appears in the lambda-like list, which in Emacs terminology
 corresponds to having the 'scheme-indent-function property set to 1.
 The other two categories correspond to a value of 0 (the begin-like
 category) and `defun' (the define-like category).  `for/fold' should
 go with a value of 2, but that has no equivalent.  You can see the
 same problem with any such form, even with `let'.
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!

