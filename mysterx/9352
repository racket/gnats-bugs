From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Tue May  6 09:45:16 2008
Received: from wf-out-1314.google.com (wf-out-1314.google.com [209.85.200.174])
	by champlain.ccs.neu.edu (8.13.8/8.13.7) with ESMTP id m46DjFfZ032712
	for <bugs@bugs.plt-scheme.org>; Tue, 6 May 2008 09:45:15 -0400
Message-Id: <200805061345.m46DjCnc032706@champlain.ccs.neu.edu>
Date: Tue, 6 May 2008 09:45:12 -0400
From: filcab@gmail.com
To: bugs@plt-scheme.org
Subject: MysterX and homogeneous arrays

>Number:         9352
>Category:       mysterx
>Synopsis:       MysterX and homogeneous arrays
>Class:          sw-bug
>Responsible:    eli
>Notify-List:    mflatt@plt-scheme.org
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Tue May 06 09:50:01 -0400 2008
>Closed-Date:    Tue May 06 14:46:18 -0400 2008
>Last-Modified:  Fri May 09 12:25:01 -0400 2008
>Originator:     Filipe Cabecinhas
>Organization:
plt
>Submitter-Id:   unknown
>Release:        latest svn
>Environment:
Win32 / Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9b5) Gecko/2008032620 Firefox/3.0b5
>Description:
MysterX always packages a scheme vector into an array of VT_VARIANT type to the COM side.
Even if I give it an array of doubles, it will marshal it as an array of VT_VARIANT to the COM side.
I have a patch to create homogeneous arrays when marshaling vectors to the COM side at: http://web.ist.utl.pt/~filipe.cabecinhas/patches/mzscheme%20mysterx-arrays.patch
>How-To-Repeat:
Create a COM method that receives an array of doubles.
From the scheme side, create a vector of doubles and try to call that method. An exception is thrown (invalid type).
>Fix:
>Audit-Trail:
From: Matthew Flatt <mflatt@cs.utah.edu>
To: filcab@gmail.com, bugs@plt-scheme.org
Cc: 
Subject: Re: [plt-bug] all/9352: MysterX and homogeneous arrays
Date: Tue, 6 May 2008 08:09:56 -0600

 Thanks - I'll apply the patch later today.
 
 Matthew
 
 At Tue, 6 May 2008 09:50:02 -0400, filcab@gmail.com wrote:
 > A new problem report is waiting at
 >   http://bugs.plt-scheme.org/query/?cmd=view&pr=9352
 > 
 > Reported by Filipe Cabecinhas for release: latest svn
 > 
 > *** Description:
 > MysterX always packages a scheme vector into an array of VT_VARIANT type to 
 > the COM side.
 > Even if I give it an array of doubles, it will marshal it as an array of 
 > VT_VARIANT to the COM side.
 > I have a patch to create homogeneous arrays when marshaling vectors to the COM 
 > side at: http://web.ist.utl.pt/~filipe.cabecinhas/patches/mzscheme%20mysterx-
 > arrays.patch
 > 
 > *** How to repeat:
 > Create a COM method that receives an array of doubles.
 > From the scheme side, create a vector of doubles and try to call that method. 
 > An exception is thrown (invalid type).
 > 
 > *** Environment:
 > Win32 / Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9b5) 
 > Gecko/2008032620 Firefox/3.0b5

Responsible changed from "nobody" to "eli" by eli at Tue, 06 May 2008 14:46:18 -0400
Reason>>> I applied the patch, and will run a new build soon.

State changed from "open" to "closed" by eli at Tue, 06 May 2008 14:46:18 -0400
Reason>>> Patch applied

From: Filipe Cabecinhas <filcab@gmail.com>
To: bugs@plt-scheme.org, filcab@gmail.com
Cc: 
Subject: Re: mysterx/9352: MysterX and homogeneous arrays
Date: Fri, 9 May 2008 00:06:26 +0100

 Hi
 
 There were two bugs in my previous patch.
 
 The first is that, when passing arguments by value that are  
 represented by a pointer in a VARIANT, variantDataPointer was  
 returning a pointer to the pointer.
 The second one is not allowing to create arrays of VARIANT (the  
 behaviour we had by default before).
 
 The small patch to fix both these bugs is at: http://web.ist.utl.pt/~filipe.cabecinhas/patches/mzscheme%20mysterx-arrays-fix.patch
 
 Thanks for everything,
 
    - Filipe Cabecinhas
 
 
 
From: Eli Barzilay <eli@barzilay.org>
To: Filipe Cabecinhas <filcab@gmail.com>
Cc: Matthew Flatt <mflatt@cs.utah.edu>, bugs@plt-scheme.org
Subject: Re: mysterx/9352: MysterX and homogeneous arrays
Date: Fri, 9 May 2008 12:23:33 -0400

 I applied it just now -- thanks!
 
 
 >  There were two bugs in my previous patch.
 >  
 >  The first is that, when passing arguments by value that are  
 >  represented by a pointer in a VARIANT, variantDataPointer was  
 >  returning a pointer to the pointer.
 >  The second one is not allowing to create arrays of VARIANT (the  
 >  behaviour we had by default before).
 >  
 >  The small patch to fix both these bugs is at: http://web.ist.utl.pt/~filipe.cabecinhas/patches/mzscheme%20mysterx-arrays-fix.patch
 >  
 >  Thanks for everything,
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                   http://www.barzilay.org/                 Maze is Life!
