From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Wed Oct 17 14:49:40 2007
Received: from wa-out-1112.google.com (wa-out-1112.google.com [209.85.146.182])
	by champlain.ccs.neu.edu (8.13.8/8.13.7) with ESMTP id l9HInext018924
	for <bugs@bugs.plt-scheme.org>; Wed, 17 Oct 2007 14:49:40 -0400
Message-Id: <200710171849.l9HIna32018919@champlain.ccs.neu.edu>
Date: Wed, 17 Oct 2007 14:49:36 -0400
From: keith.l.frost@gmail.com
To: bugs@plt-scheme.org
Subject: dc-path% makes large errors in computing bounding box

>Number:         9006
>Category:       bogus
>Synopsis:       dc-path% makes large errors in computing bounding box
>Class:          not-a-bug
>Responsible:    eli
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Wed Oct 17 14:50:01 -0400 2007
>Closed-Date:    Thu Oct 18 02:02:18 -0400 2007
>Last-Modified:  Thu Oct 18 02:02:18 -0400 2007
>Originator:     Keith Frost
>Organization:
plt
>Submitter-Id:   unknown
>Release:        371
>Environment:
unix "Linux dozier-1.desktop.amazon.com 2.4.21-37a8 #1 Thu Jun 22 19:18:06 PDT 2006 i686 i686 i386 GNU/Linux" (i386-linux/3m) (get-display-depth) = 24
Docs Installed:
(("/usr/local/plt/share/plt/doc" "r5rs" "mzscheme" "mred" "help" "tour" "drscheme" "srfi" "mzlib" "misclib" "mrlib" "framework" "foreign" "mzc" "tools" "insidemz" "web-server" "swindle" "plot" "release-notes" "t-y-scheme" "tex2page" "beginning" "beginning-abbr" "intermediate" "intermediate-lambda" "advanced" "teachpack" "teachpack-htdc" "profj-beginner" "profj-intermediate" "profj-intermediate-access" "profj-advanced"))
Human Language: english
(current-memory-use) 106764464

Collections:
(("/home/keithf/.plt-scheme/371/collects" non-existent-path) ("/usr/local/plt/lib/plt/collects" "afm" "algol60" "browser" "combinator-parser" "compiler" "config" "defaults" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "framework" "frtime" "games" "graphics" "help" "hierlist" "htdch" "htdp" "html" "icons" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mzlib" "mzscheme" "mztake" "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profj" "profjWizard" "r5rs" "readline" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "tests" "tex2page" "texpict" "trace" "version" "web-server" "wxme" "xml" "info-domain"))
Computer Language: (("Professional Languages" "(module ...)") (#6(#t write mixed-fraction-e #f #t debug) (default) #0()))
>Description:
The get-bounding-box method of dc-path% objects often returns values which are grossly in error.  It should be understood that I'm not referring to the over-estimation caused by including Bezier control points within the bounding box, but much larger errors.  See the example below.
>How-To-Repeat:
(module test-bounds mzscheme
  (require 
   (lib "class.ss")
   (lib "mred.ss" "mred")
   (lib "list.ss" "srfi" "1"))
  
  (define (for-each-n f n l)
    (unless (null? l)
      (let-values (((h t)
                    (split-at l n)))
        (apply f h)
        (for-each-n f n t))))
  
  (define apath
    '((M (0 . 0))
      (C
       (-6 . 14)   (-8 . 17)   (-12 . 28)
       (-14 . 32)  (-17 . 39)  (-18 . 42)
       (-22 . 51)  (-26 . 61)  (-32 . 75)
       (-35 . 82)  (-40 . 92)  (-42 . 97)
       (-45 . 102) (-47 . 107) (-47 . 109)
       (-47 . 112) (-53 . 118) (-59 . 120)
       (-61 . 121) (-63 . 123) (-63 . 125)
       (-62 . 128) (-59 . 128) (-42 . 128)
       (-25 . 128) (-22 . 128) (-21 . 125)
       (-21 . 122) (-23 . 121) (-27 . 120)
       (-32 . 119) (-33 . 118) (-33 . 113)
       (-33 . 109) (-32 . 104) (-30 . 101)
       (-29 . 98)  (-26 . 94)  (-25 . 90))
      (L (-23 . 85) (2 . 85) (27 . 85) (30 . 91))
      (C
       (38 . 111)  (39 . 115)  (38 . 118)
       (37 . 120)  (36 . 121)  (33 . 120)
       (31 . 120)  (28 . 121)  (26 . 122)
       (23 . 124)  (23 . 125)  (27 . 127)
       (33 . 130)  (72 . 130)  (75 . 126)
       (77 . 124)  (76 . 123)  (71 . 120)
       (65 . 117)  (62 . 110)  (48 . 79)
       (46 . 75)   (44 . 71)   (43 . 69)
       (42 . 67)   (40 . 65)   (40 . 63)
       (37 . 57)   (33 . 46)   (30 . 40)
       (28 . 36)   (26 . 30)   (24 . 27)
       (23 . 23)   (20 . 17)   (18 . 13)
       (16 . 9)    (15 . 4)    (15 . 2)
       (15 . 1)    (13 . -3)   (10 . -6))
      (L (5 . -12) (0 . 0))
      (Z)))
  
  (define dcpath 
    (let ((dcpath (new dc-path%)))
      (for-each (lambda (op)
                  (case (car op)
                    ((M) (send dcpath move-to (caadr op) (cdadr op)))
                    ((C) (for-each-n (lambda (pos1 pos2 pos3)
                                       (send dcpath curve-to
                                             (car pos1) (cdr pos1)
                                             (car pos2) (cdr pos2)
                                             (car pos3) (cdr pos3)))
                                     3 (cdr op)))
                    ((L) (for-each (lambda (pos)
                                     (send dcpath line-to (car pos) (cdr pos)))
                                   (cdr op)))
                    ((Z) (send dcpath close))))
                apath)
      dcpath))

  (define-values (x0 y0 x1 y1) (send dcpath get-bounding-box))
  
  (define all-points (apply append (map cdr apath)))
  (define all-xs (map car all-points))
  (define all-ys (map cdr all-points))
  (define u0 (apply min all-xs))
  (define v0 (apply min all-ys))
  (define u1 (apply max all-xs))
  (define v1 (apply max all-ys))
  
  (printf "x: (~a to ~a) versus (dc-path%) (~a to ~a)~n"
          u0 u1 x0 x1)
  (printf "y: (~a to ~a) versus (dc-path%) (~a to ~a)~n"
          v0 v1 y0 y1))
>Fix:
>Audit-Trail:
From: "Keith Frost" <keith.l.frost@gmail.com>
To: bugs@plt-scheme.org, keith.l.frost@gmail.com
Cc: 
Subject: Re: all/9006: dc-path% makes large errors in computing bounding box
Date: Wed, 17 Oct 2007 14:00:07 -0700

 Oh -- never mind!
 I mis-read the documentation -- the third and fourth values returned
 by get-bounding-box are the width and height.
 
 Sorry about that.

Class changed from "sw-bug" to "not-a-bug" by eli at Thu, 18 Oct 2007 02:02:18 -0400
Reason>>> See followup

Responsible changed from "nobody" to "eli" by eli at Thu, 18 Oct 2007 02:02:18 -0400
Reason>>> .

State changed from "open" to "closed" by eli at Thu, 18 Oct 2007 02:02:18 -0400
Reason>>> Not a bug -- see followup...

