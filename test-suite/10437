From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Wed Sep  9 14:31:24 2009
Received: from an-out-0708.google.com (an-out-0708.google.com [209.85.132.246])
	by champlain.ccs.neu.edu (8.14.2/8.14.2) with ESMTP id n89IVKma027313
	for <bugs@bugs.plt-scheme.org>; Wed, 9 Sep 2009 14:31:20 -0400
Message-Id: <200909091831.n89IVH5M027306@champlain.ccs.neu.edu>
Date: Wed, 9 Sep 2009 14:31:17 -0400
From: matthias@ccs.neu.edu
To: bugs@plt-scheme.org
Subject: "Trace error" in check-expect window doesn't work

>Number:         10437
>Category:       test-suite
>Synopsis:       "Trace error" in check-expect window doesn't work
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Wed Sep 09 14:32:01 -0400 2009
>Last-Modified:  Fri Sep 03 21:43:30 -0400 2010
>Originator:     matthias
>Organization:
plt
>Submitter-Id:   unknown
>Release:        4.2.1.8-svn8sep2009
>Environment:
macosx "Darwin antarctica.local 9.8.0 Darwin Kernel Version 9.8.0: Wed Jul 15 16:55:01 PDT 2009; root:xnu-1228.15.4~1/RELEASE_I386 i386" (i386-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 202768520

Collections:
(("/Users/matthias/0Unison/collects/" ".DS_Store" "date" "finance" "info-domain" "info.ss" "pdf.ss~" "session" "short" "testing" "tll-collects" "utils" "web") ("/Users/matthias/Library/PLT Scheme/4.2.1.8/collects" non-existent-path) ("/Users/matthias/plt/collects" ".DS_Store" ".svn" "2htdp" "afm" "algol60" "at-exp" "big" "browser" "combinator-parser" "compiler" "config" "defaults" "deinprogramm" "doc" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu" "honu-module" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "little-helper" "macro-debugger" "make" "mred" "mrflow" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "mztake" "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profile" "profj" "profjBoxes" "profjWizard" "r5rs" "r6rs" "reader" "readline" "redex" "repos-time-stamp" "rnrs" "s-exp" "scheme" "schem!
 eunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "sirmail" "skipper" "slatex" "slibinit" "slideshow" "srfi" "srpersist" "stepper" "string-constants" "stxclass" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "test-suite" "tests" "tex2page" "texpict" "trace" "typed" "typed-scheme" "version" "waterworld" "web-server" "wxme" "xml"))
Computer Language: (("Teaching Languages" "How to Design Programs" "Intermediate Student") (#(#t constructor repeating-decimal #f #t none) #f ()))
>Description:
run this program in ISL:


(check-expect (f 10) 10)

(define (f x)
  (if (= x 0)
      1
      (g (f (- x 1)) (* 2 x))))

(define (g y)
  y)

Click on "Trace here" link in the window that check-expect 
brings up. See internal failure:

procedure application: expected procedure, given: #(struct:exn:fail:contract:arity "procedure g: expects 1 argument, given 2: 1 2" #<continuation-mark-set>) (no arguments)

 === context ===
/Users/matthias/plt/collects/mred/private/wxme/text.ss:482:2: on-default-event method in text%
/Users/matthias/plt/collects/mred/private/wxme/editor-canvas.ss:383:2: on-event method in editor-canvas%
/Users/matthias/plt/collects/scheme/private/more-scheme.ss:158:2: call-with-break-parameterization
/Users/matthias/plt/collects/scheme/private/more-scheme.ss:274:2: call-with-exception-handler
>How-To-Repeat:
>Fix:
>Audit-Trail:
From: Robby Findler <robby@eecs.northwestern.edu>
To: matthias@ccs.neu.edu, bugs@plt-scheme.org
Cc: nobody@plt-scheme.org, bug-notification@plt-scheme.org
Subject: Re: [plt-bug] all/10437: "Trace error" in check-expect window doesn't 
	work
Date: Thu, 10 Sep 2009 01:50:02 -0500

 I don't see any way that this code could have worked. The actual
 implementation of this just seems to be missing. Specifically, nothing
 seems to be setting the parameter error-handler so its default value
 takes effect (and its default value applies an exception as if it were
 a function, which is also strange).
 
 Unless someone speaks up to the contrary, I propose making the
 function 'make-error-link' in test-engine/test-display.scm just call
 make-link and do nothing else. I won't make that change now, but as it
 gets closer to the release we know how to do this (it is an easy
 change -- comment out the second sexp in make-error-link).
 
 Robby
 
 On Wed, Sep 9, 2009 at 1:32 PM,  <matthias@ccs.neu.edu> wrote:
 > A new problem report is waiting at
 > =C2=A0http://bugs.plt-scheme.org/query/?cmd=3Dview&pr=3D10437
 >
 > Reported by matthias for release: 4.2.1.8-svn8sep2009
 >
 > *** Description:
 > run this program in ISL:
 >
 >
 > (check-expect (f 10) 10)
 >
 > (define (f x)
 > =C2=A0(if (=3D x 0)
 > =C2=A0 =C2=A0 =C2=A01
 > =C2=A0 =C2=A0 =C2=A0(g (f (- x 1)) (* 2 x))))
 >
 > (define (g y)
 > =C2=A0y)
 >
 > Click on "Trace here" link in the window that check-expect
 > brings up. See internal failure:
 >
 > procedure application: expected procedure, given: #(struct:exn:fail:contr=
 act:arity "procedure g: expects 1 argument, given 2: 1 2" #<continuation-ma=
 rk-set>) (no arguments)
 >
 > =C2=A0=3D=3D=3D context =3D=3D=3D
 > /Users/matthias/plt/collects/mred/private/wxme/text.ss:482:2: on-default-=
 event method in text%
 > /Users/matthias/plt/collects/mred/private/wxme/editor-canvas.ss:383:2: on=
 -event method in editor-canvas%
 > /Users/matthias/plt/collects/scheme/private/more-scheme.ss:158:2: call-wi=
 th-break-parameterization
 > /Users/matthias/plt/collects/scheme/private/more-scheme.ss:274:2: call-wi=
 th-exception-handler
 >
 > *** How to repeat:
 >
 >
 > *** Environment:
 > macosx "Darwin antarctica.local 9.8.0 Darwin Kernel Version 9.8.0: Wed Ju=
 l 15 16:55:01 PDT 2009; root:xnu-1228.15.4~1/RELEASE_I386 i386" (i386-macos=
 x/3m) (get-display-depth) =3D 32
 > Human Language: english
 > (current-memory-use) 202768520
 >
 > Collections:
 > (("/Users/matthias/0Unison/collects/" ".DS_Store" "date" "finance" "info-=
 domain" "info.ss" "pdf.ss~" "session" "short" "testing" "tll-collects" "uti=
 ls" "web") ("/Users/matthias/Library/PLT Scheme/4.2.1.8/collects" non-exist=
 ent-path) ("/Users/matthias/plt/collects" ".DS_Store" ".svn" "2htdp" "afm" =
 "algol60" "at-exp" "big" "browser" "combinator-parser" "compiler" "config" =
 "defaults" "deinprogramm" "doc" "drscheme" "dynext" "embedded-gui" "eopl" "=
 errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debug=
 ger" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu" =
 "honu-module" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher"=
  "lazy" "little-helper" "macro-debugger" "make" "mred" "mrflow" "mrlib" "my=
 sterx" "mzcom" "mzlib" "mzscheme" "mztake" "net" "openssl" "parser-tools" "=
 planet" "plot" "preprocessor" "profile" "profj" "profjBoxes" "profjWizard" =
 "r5rs" "r6rs" "reader" "readline" "redex" "repos-time-stamp" "rnrs" "s-exp"=
  "scheme" "schem!
 > =C2=A0eunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "sirmail" =
 "skipper" "slatex" "slibinit" "slideshow" "srfi" "srpersist" "stepper" "str=
 ing-constants" "stxclass" "swindle" "syntax" "syntax-color" "teachpack" "te=
 st-box-recovery" "test-engine" "test-suite" "tests" "tex2page" "texpict" "t=
 race" "typed" "typed-scheme" "version" "waterworld" "web-server" "wxme" "xm=
 l"))
 > Computer Language: (("Teaching Languages" "How to Design Programs" "Inter=
 mediate Student") (#(#t constructor repeating-decimal #f #t none) #f ()))
 >
 >
From: Kathy Gray <kathryn.gray@cl.cam.ac.uk>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: matthias@ccs.neu.edu, bugs@plt-scheme.org, nobody@plt-scheme.org,
        bug-notification@plt-scheme.org
Subject: Re: [plt-bug] all/10437: "Trace error" in check-expect window doesn't  work
Date: Thu, 10 Sep 2009 15:04:32 +0100

 Now isn't the time to fix this by filling in the implementation (I  
 thought I'd left the implementation commented out, oops). I've  
 commented out the body of make-error-link.
 
 -Kathy
 
 
 
 
 On 10 Sep 2009, at 7:50:02, Robby Findler wrote:
 
 > I don't see any way that this code could have worked. The actual
 > implementation of this just seems to be missing. Specifically, nothing
 > seems to be setting the parameter error-handler so its default value
 > takes effect (and its default value applies an exception as if it were
 > a function, which is also strange).
 >
 > Unless someone speaks up to the contrary, I propose making the
 > function 'make-error-link' in test-engine/test-display.scm just call
 > make-link and do nothing else. I won't make that change now, but as it
 > gets closer to the release we know how to do this (it is an easy
 > change -- comment out the second sexp in make-error-link).
 >
 > Robby
 >
 > On Wed, Sep 9, 2009 at 1:32 PM,  <matthias@ccs.neu.edu> wrote:
 >> A new problem report is waiting at
 >>  http://bugs.plt-scheme.org/query/?cmd=view&pr=10437
 >>
 >> Reported by matthias for release: 4.2.1.8-svn8sep2009
 >>
 >> *** Description:
 >> run this program in ISL:
 >>
 >>
 >> (check-expect (f 10) 10)
 >>
 >> (define (f x)
 >>  (if (= x 0)
 >>      1
 >>      (g (f (- x 1)) (* 2 x))))
 >>
 >> (define (g y)
 >>  y)
 >>
 >> Click on "Trace here" link in the window that check-expect
 >> brings up. See internal failure:
 >>
 >> procedure application: expected procedure, given:  
 >> #(struct:exn:fail:contract:arity "procedure g: expects 1 argument,  
 >> given 2: 1 2" #<continuation-mark-set>) (no arguments)
 >>
 >>  === context ===
 >> /Users/matthias/plt/collects/mred/private/wxme/text.ss:482:2: on- 
 >> default-event method in text%
 >> /Users/matthias/plt/collects/mred/private/wxme/editor-canvas.ss: 
 >> 383:2: on-event method in editor-canvas%
 >> /Users/matthias/plt/collects/scheme/private/more-scheme.ss:158:2:  
 >> call-with-break-parameterization
 >> /Users/matthias/plt/collects/scheme/private/more-scheme.ss:274:2:  
 >> call-with-exception-handler
 >>
 >> *** How to repeat:
 >>
 >>
 >> *** Environment:
 >> macosx "Darwin antarctica.local 9.8.0 Darwin Kernel Version 9.8.0:  
 >> Wed Jul 15 16:55:01 PDT 2009; root:xnu-1228.15.4~1/RELEASE_I386  
 >> i386" (i386-macosx/3m) (get-display-depth) = 32
 >> Human Language: english
 >> (current-memory-use) 202768520
 >>
 >> Collections:
 >> (("/Users/matthias/0Unison/collects/" ".DS_Store" "date" "finance"  
 >> "info-domain" "info.ss" "pdf.ss~" "session" "short" "testing" "tll- 
 >> collects" "utils" "web") ("/Users/matthias/Library/PLT Scheme/ 
 >> 4.2.1.8/collects" non-existent-path) ("/Users/matthias/plt/ 
 >> collects" ".DS_Store" ".svn" "2htdp" "afm" "algol60" "at-exp" "big"  
 >> "browser" "combinator-parser" "compiler" "config" "defaults"  
 >> "deinprogramm" "doc" "drscheme" "dynext" "embedded-gui" "eopl"  
 >> "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics"  
 >> "gui-debugger" "guibuilder" "handin-client" "handin-server" "help"  
 >> "hierlist" "honu" "honu-module" "htdch" "htdp" "html" "icons" "info- 
 >> domain" "lang" "launcher" "lazy" "little-helper" "macro-debugger"  
 >> "make" "mred" "mrflow" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme"  
 >> "mztake" "net" "openssl" "parser-tools" "planet" "plot"  
 >> "preprocessor" "profile" "profj" "profjBoxes" "profjWizard" "r5rs"  
 >> "r6rs" "reader" "readline" "redex" "repos-time-stamp" "rnrs" "s- 
 >> exp" "scheme" "schem!
 >>  eunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "sirmail"  
 >> "skipper" "slatex" "slibinit" "slideshow" "srfi" "srpersist"  
 >> "stepper" "string-constants" "stxclass" "swindle" "syntax" "syntax- 
 >> color" "teachpack" "test-box-recovery" "test-engine" "test-suite"  
 >> "tests" "tex2page" "texpict" "trace" "typed" "typed-scheme"  
 >> "version" "waterworld" "web-server" "wxme" "xml"))
 >> Computer Language: (("Teaching Languages" "How to Design Programs"  
 >> "Intermediate Student") (#(#t constructor repeating-decimal #f #t  
 >> none) #f ()))
 >>
 >>
 
From: Robby Findler <robby@eecs.northwestern.edu>
To: Kathy Gray <kathryn.gray@cl.cam.ac.uk>
Cc: matthias@ccs.neu.edu, bugs@plt-scheme.org, nobody@plt-scheme.org,
        bug-notification@plt-scheme.org
Subject: Re: [plt-bug] all/10437: "Trace error" in check-expect window doesn't 
	work
Date: Thu, 10 Sep 2009 17:59:28 -0500

 Out of curiosity, what was it supposed to do?
 
 Robby
 
 On Thu, Sep 10, 2009 at 9:04 AM, Kathy Gray <kathryn.gray@cl.cam.ac.uk> wro=
 te:
 > Now isn't the time to fix this by filling in the implementation (I though=
 t
 > I'd left the implementation commented out, oops). I've commented out the
 > body of make-error-link.
 >
 > -Kathy
 >
 >
 >
 >
 > On 10 Sep 2009, at 7:50:02, Robby Findler wrote:
 >
 >> I don't see any way that this code could have worked. The actual
 >> implementation of this just seems to be missing. Specifically, nothing
 >> seems to be setting the parameter error-handler so its default value
 >> takes effect (and its default value applies an exception as if it were
 >> a function, which is also strange).
 >>
 >> Unless someone speaks up to the contrary, I propose making the
 >> function 'make-error-link' in test-engine/test-display.scm just call
 >> make-link and do nothing else. I won't make that change now, but as it
 >> gets closer to the release we know how to do this (it is an easy
 >> change -- comment out the second sexp in make-error-link).
 >>
 >> Robby
 >>
 >> On Wed, Sep 9, 2009 at 1:32 PM, =C2=A0<matthias@ccs.neu.edu> wrote:
 >>>
 >>> A new problem report is waiting at
 >>> =C2=A0http://bugs.plt-scheme.org/query/?cmd=3Dview&pr=3D10437
 >>>
 >>> Reported by matthias for release: 4.2.1.8-svn8sep2009
 >>>
 >>> *** Description:
 >>> run this program in ISL:
 >>>
 >>>
 >>> (check-expect (f 10) 10)
 >>>
 >>> (define (f x)
 >>> =C2=A0(if (=3D x 0)
 >>> =C2=A0 =C2=A0 1
 >>> =C2=A0 =C2=A0 (g (f (- x 1)) (* 2 x))))
 >>>
 >>> (define (g y)
 >>> =C2=A0y)
 >>>
 >>> Click on "Trace here" link in the window that check-expect
 >>> brings up. See internal failure:
 >>>
 >>> procedure application: expected procedure, given:
 >>> #(struct:exn:fail:contract:arity "procedure g: expects 1 argument, give=
 n 2:
 >>> 1 2" #<continuation-mark-set>) (no arguments)
 >>>
 >>> =C2=A0=3D=3D=3D context =3D=3D=3D
 >>> /Users/matthias/plt/collects/mred/private/wxme/text.ss:482:2:
 >>> on-default-event method in text%
 >>> /Users/matthias/plt/collects/mred/private/wxme/editor-canvas.ss:383:2:
 >>> on-event method in editor-canvas%
 >>> /Users/matthias/plt/collects/scheme/private/more-scheme.ss:158:2:
 >>> call-with-break-parameterization
 >>> /Users/matthias/plt/collects/scheme/private/more-scheme.ss:274:2:
 >>> call-with-exception-handler
 >>>
 >>> *** How to repeat:
 >>>
 >>>
 >>> *** Environment:
 >>> macosx "Darwin antarctica.local 9.8.0 Darwin Kernel Version 9.8.0: Wed
 >>> Jul 15 16:55:01 PDT 2009; root:xnu-1228.15.4~1/RELEASE_I386 i386"
 >>> (i386-macosx/3m) (get-display-depth) =3D 32
 >>> Human Language: english
 >>> (current-memory-use) 202768520
 >>>
 >>> Collections:
 >>> (("/Users/matthias/0Unison/collects/" ".DS_Store" "date" "finance"
 >>> "info-domain" "info.ss" "pdf.ss~" "session" "short" "testing" "tll-coll=
 ects"
 >>> "utils" "web") ("/Users/matthias/Library/PLT Scheme/4.2.1.8/collects"
 >>> non-existent-path) ("/Users/matthias/plt/collects" ".DS_Store" ".svn"
 >>> "2htdp" "afm" "algol60" "at-exp" "big" "browser" "combinator-parser"
 >>> "compiler" "config" "defaults" "deinprogramm" "doc" "drscheme" "dynext"
 >>> "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "g=
 ames"
 >>> "graphics" "gui-debugger" "guibuilder" "handin-client" "handin-server"
 >>> "help" "hierlist" "honu" "honu-module" "htdch" "htdp" "html" "icons"
 >>> "info-domain" "lang" "launcher" "lazy" "little-helper" "macro-debugger"
 >>> "make" "mred" "mrflow" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "mz=
 take"
 >>> "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profile"
 >>> "profj" "profjBoxes" "profjWizard" "r5rs" "r6rs" "reader" "readline" "r=
 edex"
 >>> "repos-time-stamp" "rnrs" "s-exp" "scheme" "schem!
 >>> =C2=A0eunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "sirmail=
 "
 >>> "skipper" "slatex" "slibinit" "slideshow" "srfi" "srpersist" "stepper"
 >>> "string-constants" "stxclass" "swindle" "syntax" "syntax-color" "teachp=
 ack"
 >>> "test-box-recovery" "test-engine" "test-suite" "tests" "tex2page" "texp=
 ict"
 >>> "trace" "typed" "typed-scheme" "version" "waterworld" "web-server" "wxm=
 e"
 >>> "xml"))
 >>> Computer Language: (("Teaching Languages" "How to Design Programs"
 >>> "Intermediate Student") (#(#t constructor repeating-decimal #f #t none)=
  #f
 >>> ()))
 >>>
 >>>
 >
 >
From: Kathy Gray <kathryn.gray@cl.cam.ac.uk>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: matthias@ccs.neu.edu, bugs@plt-scheme.org, nobody@plt-scheme.org,
        bug-notification@plt-scheme.org
Subject: Re: [plt-bug] all/10437: "Trace error" in check-expect window doesn't  work
Date: Fri, 11 Sep 2009 00:23:48 +0100

 It's supposed to do a back trace, like the bug icon.
 This never worked properly and I gave up looking into how to hook the  
 interface up properly awhile ago  with the intention to come back to  
 it (and see if it was possible); which is why I thought I had  
 commented out the insertion of the text/link.
 
 -Kathy
 
 
 
 
 On 10 Sep 2009, at 11:59:28, Robby Findler wrote:
 
 > Out of curiosity, what was it supposed to do?
 >
 > Robby
 >
 > On Thu, Sep 10, 2009 at 9:04 AM, Kathy Gray  
 > <kathryn.gray@cl.cam.ac.uk> wrote:
 >> Now isn't the time to fix this by filling in the implementation (I  
 >> thought
 >> I'd left the implementation commented out, oops). I've commented  
 >> out the
 >> body of make-error-link.
 >>
 >> -Kathy
 >>
 >>
 >>
 >>
 >> On 10 Sep 2009, at 7:50:02, Robby Findler wrote:
 >>
 >>> I don't see any way that this code could have worked. The actual
 >>> implementation of this just seems to be missing. Specifically,  
 >>> nothing
 >>> seems to be setting the parameter error-handler so its default value
 >>> takes effect (and its default value applies an exception as if it  
 >>> were
 >>> a function, which is also strange).
 >>>
 >>> Unless someone speaks up to the contrary, I propose making the
 >>> function 'make-error-link' in test-engine/test-display.scm just call
 >>> make-link and do nothing else. I won't make that change now, but  
 >>> as it
 >>> gets closer to the release we know how to do this (it is an easy
 >>> change -- comment out the second sexp in make-error-link).
 >>>
 >>> Robby
 >>>
 >>> On Wed, Sep 9, 2009 at 1:32 PM,  <matthias@ccs.neu.edu> wrote:
 >>>>
 >>>> A new problem report is waiting at
 >>>>  http://bugs.plt-scheme.org/query/?cmd=view&pr=10437
 >>>>
 >>>> Reported by matthias for release: 4.2.1.8-svn8sep2009
 >>>>
 >>>> *** Description:
 >>>> run this program in ISL:
 >>>>
 >>>>
 >>>> (check-expect (f 10) 10)
 >>>>
 >>>> (define (f x)
 >>>>  (if (= x 0)
 >>>>     1
 >>>>     (g (f (- x 1)) (* 2 x))))
 >>>>
 >>>> (define (g y)
 >>>>  y)
 >>>>
 >>>> Click on "Trace here" link in the window that check-expect
 >>>> brings up. See internal failure:
 >>>>
 >>>> procedure application: expected procedure, given:
 >>>> #(struct:exn:fail:contract:arity "procedure g: expects 1  
 >>>> argument, given 2:
 >>>> 1 2" #<continuation-mark-set>) (no arguments)
 >>>>
 >>>>  === context ===
 >>>> /Users/matthias/plt/collects/mred/private/wxme/text.ss:482:2:
 >>>> on-default-event method in text%
 >>>> /Users/matthias/plt/collects/mred/private/wxme/editor-canvas.ss: 
 >>>> 383:2:
 >>>> on-event method in editor-canvas%
 >>>> /Users/matthias/plt/collects/scheme/private/more-scheme.ss:158:2:
 >>>> call-with-break-parameterization
 >>>> /Users/matthias/plt/collects/scheme/private/more-scheme.ss:274:2:
 >>>> call-with-exception-handler
 >>>>
 >>>> *** How to repeat:
 >>>>
 >>>>
 >>>> *** Environment:
 >>>> macosx "Darwin antarctica.local 9.8.0 Darwin Kernel Version  
 >>>> 9.8.0: Wed
 >>>> Jul 15 16:55:01 PDT 2009; root:xnu-1228.15.4~1/RELEASE_I386 i386"
 >>>> (i386-macosx/3m) (get-display-depth) = 32
 >>>> Human Language: english
 >>>> (current-memory-use) 202768520
 >>>>
 >>>> Collections:
 >>>> (("/Users/matthias/0Unison/collects/" ".DS_Store" "date" "finance"
 >>>> "info-domain" "info.ss" "pdf.ss~" "session" "short" "testing"  
 >>>> "tll-collects"
 >>>> "utils" "web") ("/Users/matthias/Library/PLT Scheme/4.2.1.8/ 
 >>>> collects"
 >>>> non-existent-path) ("/Users/matthias/plt/collects" ".DS_Store"  
 >>>> ".svn"
 >>>> "2htdp" "afm" "algol60" "at-exp" "big" "browser" "combinator- 
 >>>> parser"
 >>>> "compiler" "config" "defaults" "deinprogramm" "doc" "drscheme"  
 >>>> "dynext"
 >>>> "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework"  
 >>>> "frtime" "games"
 >>>> "graphics" "gui-debugger" "guibuilder" "handin-client" "handin- 
 >>>> server"
 >>>> "help" "hierlist" "honu" "honu-module" "htdch" "htdp" "html"  
 >>>> "icons"
 >>>> "info-domain" "lang" "launcher" "lazy" "little-helper" "macro- 
 >>>> debugger"
 >>>> "make" "mred" "mrflow" "mrlib" "mysterx" "mzcom" "mzlib"  
 >>>> "mzscheme" "mztake"
 >>>> "net" "openssl" "parser-tools" "planet" "plot" "preprocessor"  
 >>>> "profile"
 >>>> "profj" "profjBoxes" "profjWizard" "r5rs" "r6rs" "reader"  
 >>>> "readline" "redex"
 >>>> "repos-time-stamp" "rnrs" "s-exp" "scheme" "schem!
 >>>>  eunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "sirmail"
 >>>> "skipper" "slatex" "slibinit" "slideshow" "srfi" "srpersist"  
 >>>> "stepper"
 >>>> "string-constants" "stxclass" "swindle" "syntax" "syntax-color"  
 >>>> "teachpack"
 >>>> "test-box-recovery" "test-engine" "test-suite" "tests" "tex2page"  
 >>>> "texpict"
 >>>> "trace" "typed" "typed-scheme" "version" "waterworld" "web- 
 >>>> server" "wxme"
 >>>> "xml"))
 >>>> Computer Language: (("Teaching Languages" "How to Design Programs"
 >>>> "Intermediate Student") (#(#t constructor repeating-decimal #f #t  
 >>>> none) #f
 >>>> ()))
 >>>>
 >>>>
 >>
 >>
 

