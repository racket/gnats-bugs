From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Mon Aug  2 15:18:46 2010
Received: from mail-gw0-f44.google.com (mail-gw0-f44.google.com [74.125.83.44])
	by champlain.ccs.neu.edu (8.14.3/8.14.3) with ESMTP id o72JIiS2005545
	for <bugs@bugs.plt-scheme.org>; Mon, 2 Aug 2010 15:18:44 -0400
Message-Id: <201008021918.o72JIfKf005538@champlain.ccs.neu.edu>
Date: Mon, 2 Aug 2010 15:18:41 -0400
From: sbloch@adelphi.edu
To: bugs@racket-lang.org
Subject: check-expect other than at top level

>Number:         11075
>Category:       test-suite
>Synopsis:       check-expect other than at top level
>Class:          change-request
>Responsible:    mflatt
>Severity:       non-critical
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Mon Aug 02 15:20:01 -0400 2010
>Last-Modified:  Fri Sep 03 21:44:23 -0400 2010
>Originator:     Stephen Bloch
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.0.0.8--2010-07-08(56077a1/a)
>Environment:
macosx "Darwin o50478-Bloch-iMac-2.local 10.4.0 Darwin Kernel Version 10.4.0: Fri Apr 23 18:28:53 PDT 2010; root:xnu-1504.7.4~1/RELEASE_I386 i386 i386" (i386-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 139567336

Collections:
(("/Users/bloch/Library/Racket/5.0.0.8/collects" "info-domain" "installed-teachpacks") ("/Applications/Racket v5.0.0.8/collects" "2htdp" "afm" "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "datalog" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "help" "hierlist" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "redex" "repo-time-stamp" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tex2page" "texpict" "trace" "typed" "typed-scheme" !
 "unstable" "version" "web-server" "wxme" "xml"))
Computer Language: (("Teaching Languages" "How to Design Programs" "Intermediate Student") (#(#t constructor repeating-decimal #f #t none) #f ()))
>Description:
I know there are problems with putting a check-expect inside a function, but could it safely be put inside a top-level local?  For example, suppose I'm writing a function that needs to construct another function to pass as an argument, and I want to test the constructed function before moving it indoors.

(local [(define threshold 15)
        (define (too-big? num) (> num threshold)))]
   (check-expect (too-big? 14) false)
   (check-expect (too-big? 15) false)
   (check-expect (too-big? 16) true))

(local [(define threshold 10)
        (define (too-big? num) (> num threshold)))]
        ; it's a little annoying that I have to repeat
        ; the definition, but I can live with that
   (check-expect (too-big? 9) false)
   (check-expect (too-big? 10) false)
   (check-expect (too-big? 11) true))
>How-To-Repeat:
>Fix:
