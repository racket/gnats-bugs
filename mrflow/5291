From matthias@ccs.neu.edu  Wed Feb 27 10:11:40 2002
Received: from localhost (localhost.localdomain [127.0.0.1])
	by champlain.ccs.neu.edu (8.9.3/8.8.7) with ESMTP id KAA27777
	for <plt-gnats>; Wed, 27 Feb 2002 10:11:40 -0500
Message-Id: <200202271511.KAA27777@champlain.ccs.neu.edu>
Date: Wed, 27 Feb 2002 10:11:40 -0500
From: matthias <matthias@ccs.neu.edu>
To: bugs@plt-scheme.org
Subject: Analyze fails to infer a case lambda properly 

>Number:         5291
>Category:       mrflow
>Synopsis:       Analyze fails to infer a case lambda properly
>Confidential:   no
>Severity:       serious
>Priority:       medium
>Responsible:    meunier
>State:          closed
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Wed Feb 27 10:20:00 EST 2002
>Closed-Date:    Thu Feb 28 16:53:35 EST 2002
>Last-Modified:  Thu Feb 28 16:53:35 EST 2002
>Originator:     matthias
>Release:        200alpha12-cvs27feb2002
>Organization:
titan
>Environment:
unix "SunOS sualocin.ccs.neu.edu 5.8 Generic_108528-12 sun4u sparc SUNW,Sun-Blade-100" (sparc-solaris/3m) (get-display-depth) = 24
Docs Installed:
("advanced" "beginning-abbr" "beginning" "drscheme" "icons" "framework" "help" "teachpack" "r5rs" "insidemz" "misclib" "mred" "intermediate" "mzlib" "mrspidey" "mzc" "mzscheme" "t-y-scheme" "tools" "intermediate-lambda" "recipes" "tex2page" "4726file")
Collections: 
(("/home/matthias/collects/" ("web")) ("/proj/scheme/plt/collects" ("CVS" "browser" "compiler" "debug" "defaults" "drjava" "drscheme" "dynext" "errortrace" "framework" "games" "graphics" "help" "hierlist" "htdp" "html" "icons" "lang" "launcher" "make" "mred" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "readline" "setup" "slatex" "srpersist" "stepper" "string-constants" "syntax" "tests" "texpict" "parser-tools" "xml" "doc" "mrflow" "sirmail" "slibinit" "afm" "version" "typeset" "eopl" "web-server" "algol60" "cvs-time-stamp" "waterworld" "tex2page")))
Human Language: english
>Description:
see ~matthias/foo.ss (see code below, per Paul's request)

analyze, and look at printn's analysis

sum should have a value set of (at least) 0
or complex 

;(define i 0)
;
;(define sum 0)
;
;(letrec ([loop (lambda ()
;                 (unless (= i 10)
;                   (step1)))]
;         [step1 (lambda ()
;                  (set! i (+ i 1))
;                  (step2))]
;         [step2 (lambda ()
;                  (set! sum (+ sum i))
;                  (loop))])
;    (loop))
(define (goto f) (f))
(define undefined #f)
(define (check-boolean x) x)
(define (sign k x-thunk) (k 1))
(define (printn k v) (k (display (v))))
(letrec ((i undefined)
         (sum undefined)
         (other2416 (lambda () (begin (let ((val 0))
                                        (set! sum val)) (other2419))))
         (other2419 (lambda () (begin (let ((val 1))
                                        (set! i val)) (for-body2417))))
         (for-body2417 (lambda () (other2420)))
         (other2420 (lambda () (branch2424)))
         (branch2424
           (lambda ()
             (if (check-boolean (<= (* (- i 10) (sign values (lambda () 1))) 0))
                 (goto then2421)
                 (goto else2422))))
         (then2421 (lambda () (other2425)))
         (other2425 (lambda () (begin (let ((val (+ sum i)))
                                        (set! sum val))
                                      (other2426))))
         (other2426 (lambda () (begin (let ((val (+ i 1))) (set! i val)) (other2427))))
         (other2427 (lambda () (goto for-body2417)))
         (other2428 (lambda () (goto if-cont2423)))
         (else2422 (lambda () (other2429)))
         (other2429 (lambda () (if-cont2423)))
         (if-cont2423 (lambda () (other2430)))
         (other2430 (lambda () (other2431)))
         (other2431
           (lambda ()
             (printn
               (lambda (val) (void))
               (case-lambda (() sum)
                            ((val) (begin (let ((val val)) (set! sum val))
                                          (void))))))))
  (other2416))
>How-To-Repeat:

>Fix:

>Release-Note:

>Audit-Trail:
Responsible-Changed-From-To: steck->meunier
Responsible-Changed-By: meunier
Responsible-Changed-When: Thu Feb 28 16:51:05 2002
Responsible-Changed-Why:
    mrflow
State-Changed-From-To: open->closed
State-Changed-By: meunier
State-Changed-When: Thu Feb 28 16:53:35 2002
State-Changed-Why:
    fixed, set! problem
>Unformatted:

