From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Thu Apr 24 17:46:17 2008
Received: from rn-out-0910.google.com (rn-out-0910.google.com [64.233.170.188])
	by champlain.ccs.neu.edu (8.13.8/8.13.7) with ESMTP id m3OLkGO1019642
	for <bugs@bugs.plt-scheme.org>; Thu, 24 Apr 2008 17:46:16 -0400
Message-Id: <200804242146.m3OLk8Ml019637@champlain.ccs.neu.edu>
Date: Thu, 24 Apr 2008 17:46:08 -0400
From: matthias@ccs.neu.edu
To: bugs@plt-scheme.org
Subject: internal error of test engine 

>Number:         9316
>Category:       misc
>Synopsis:       internal error of test engine
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Thu Apr 24 17:50:01 -0400 2008
>Last-Modified:  Wed Jan 11 11:14:32 -0500 2017
>Originator:     matthias
>Organization:
plt
>Submitter-Id:   unknown
>Release:        3.99.0.23-svn23apr2008
>Environment:
macosx "Darwin europe.local 8.11.1 Darwin Kernel Version 8.11.1: Wed Oct 10 18:23:28 PDT 2007; root:xnu-792.25.20~1/RELEASE_I386 i386 i386" (i386-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 133994400

Collections:
(("/Users/matthias/Unison/collects/" ".DS_Store" "date" "essays" "finance" "info-domain" "testing" "utils" "web") ("/Users/matthias/Library/PLT Scheme/3.99.0.23/collects" non-existent-path) ("/Users/matthias/plt/collects" ".DS_Store" ".svn" "afm" "algol60" "big" "browser" "combinator-parser" "compiler" "config" "defaults" "doc" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu-module" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "little-helper" "macro-debugger" "make" "mred" "mrflow" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "mztake" "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profj" "profjBoxes" "profjWizard" "r5rs" "r6rs" "readline" "repos-time-stamp" "rnrs" "s-exp" "scheme" "scribble" "scribblings" "setup" "sgl" "sirmail" "skipper" "slatex" "slibinit" "slideshow" "srfi" "srpersist" "step!
 per" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "test-suite" "tests" "tex2page" "texpict" "trace" "typed-scheme" "version" "waterworld" "web-server" "wxme" "xml"))
Computer Language: (("Teaching Languages" "How to Design Programs" "Beginning Student") (#(#t constructor repeating-decimal #f #t none) #f ()))
>Description:
string-append: expects type <string> as 2nd argument, given: #<path:/Users/matthias/plt/collects/htdp/Test/arrow-gui.ss>; other arguments were: " In " " at "

 === context ===
/Users/matthias/plt/collects/test-engine/test-display.scm:145:4: format-src
/Users/matthias/plt/collects/test-engine/test-display.scm:124:4: make-link
comp-loop
/Users/matthias/plt/collects/test-engine/test-display.scm:28:4: display-results method in test-display%
>How-To-Repeat:
Run attached stupid program (beginner)

(require (lib "arrow-gui.ss" "htdp"))
(require (lib "gui.ss" "htdp"))

(define msg (make-message (make-string 22 #\space)))
(check-expect (create-window (list (list msg))) true)

(define (left b e) (draw-message msg "left"))
(define (right b e) (draw-message msg "right"))
(define (up b e) (draw-message msg "up"))
(define (down b e) (draw-message msg "down"))

(connect left right up down) 
>Fix:
>Audit-Trail:
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: matthias@ccs.neu.edu, bugs@plt-scheme.org
Cc: nobody@plt-scheme.org, eli@plt-scheme.org, matthias@plt-scheme.org,
        sk@plt-scheme.org, mflatt@plt-scheme.org, robby@plt-scheme.org,
        clements@plt-scheme.org, jay@plt-scheme.org, meunier@plt-scheme.org,
        sowens@plt-scheme.org, kathyg@plt-scheme.org, jacobm@plt-scheme.org,
        cce@plt-scheme.org, samth@plt-scheme.org, ryanc@plt-scheme.org
Subject: Re: [plt-bug] all/9316: internal error of test engine 
Date: Thu, 24 Apr 2008 19:07:24 -0400

 >
 
 This test also reveals a problem with the test engine. Uncommenting a  
 DEFINITION triggers the internal error thingie.
 
 
 > (require (lib "matrix-invisible.ss" "htdp"))
 
 
 > ;(require (lib "matrix.ss" "htdp"))
 >
 > (define r1 '((a00 a01 a02)
 >              (a10 a11 a12)))
 >
 > (define m1 (rectangle->matrix r1))
 >
 > (check-expect (matrix? m1) true)
 > (check-expect (matrix-rows m1) 2)
 > (check-expect (matrix-cols m1) 3)
 > (check-expect (matrix->rectangle m1) r1)
 >
 > (define x (random 2))
 > (define y (random 3))
 >
 > (check-expect (matrix-ref (make-matrix 2 3 '(a00 a01 a02 a10 a11  
 > a12)) x y)
 >               (matrix-ref m1 x y))
 >
 > (check-expect
 >  (matrix-ref (build-matrix 2 3 (lambda (row col) (matrix-ref m1 row  
 > col))) x y)
 >  (matrix-ref m1 x y))
 >
 > (define lpons (list (make-posn 0 0)
 >                     (make-posn 1 0)
 >                     (make-posn 0 1)
 >                     (make-posn 1 2)
 >                     (make-posn 1 1)
 >                     (make-posn 0 2)))
 >
 > (define m2
 >   (foldl (lambda (x m) (matrix-set m (posn-x x) (posn-y x) 1)) m1  
 > lpons))
 >
 > (check-expect 1  (matrix-ref m2 (random 2) (random 3)))
 >
 >
 > (define (is1 x) (= x 1))
 > (check-expect (matrix-where? m2 is1)
 >               (list (make-posn 0 0) (make-posn 0 1) (make-posn 0 2)
 >                     (make-posn 1 0) (make-posn 1 1) (make-posn 1 2)))
 >
 > (define (is2 x) (= x 2))
 > (check-expect (matrix-where? m2 is2) empty)
 >
 > (define m1-minor (matrix-minor m1 1 1))
 >
 > (check-expect (matrix-ref m1-minor 0 0) 'a00)
 > (check-expect (matrix-ref m1-minor 0 1) 'a02)
 >
 > ;; --- IMPERATIVE ---
 > (check-expect (matrix-ref m1 0 0) 'a00)
 > (define m1-modified (matrix-set! m1 0 0 'xxx)) ;; <--------  
 > uncomment this and the test engine breaks
 > ; (check-expect (matrix-ref m1 0 0) 'xxx)
 >

Responsible changed from "nobody" to "kathyg" by eli at Mon, 05 May 2008 18:17:57 -0400
Reason>>> test


Responsible changed from "kathyg" to "mflatt" by mflatt at Wed, 11 Jan 2017 11:14:32 -0500
Reason>>> taking over Kathy's old reports

