From ethan.aubin@pobox.com Sat Jun 12 08:30:09 2004
Received: from localhost (h000393e64fbb.ne.client2.attbi.com [65.96.37.11])
	by champlain.ccs.neu.edu (8.12.10/8.12.10) with ESMTP id i5CCU70u017367
	for <bugs>; Sat, 12 Jun 2004 08:30:08 -0400
Message-Id: <200406121230.i5CCU70u017367@champlain.ccs.neu.edu>
Date: Sat, 12 Jun 2004 08:30:07 -0400
From: Ethan Aubin <ethan.aubin@pobox.com>
To: bugs@plt-scheme.org
Subject: invoking nested units

>Number:         6905
>Category:       misc
>Synopsis:       invoking nested units
>Class:          not-a-bug
>Responsible:    mflatt
>Severity:       non-critical
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Sat Jun 12 08:35:00 -0400 2004
>Last-Modified:  Mon May 05 16:13:51 -0400 2008
>Originator:     Ethan Aubin
>Organization:
titan
>Submitter-Id:   unknown
>Release:        207
>Environment:
windows "Windows NT 5.1 (Build 2600) Service Pack 1" (win32\i386) (get-display-depth) = 32
Docs Installed:
("C:\\Documents and Settings\\Ethan Aubin\\Desktop\\PLT\\collects\\doc\\web-server" "C:\\Documents and Settings\\Ethan Aubin\\Desktop\\PLT\\collects\\doc\\tour" "C:\\Documents and Settings\\Ethan Aubin\\Desktop\\PLT\\collects\\doc\\tools" "C:\\Documents and Settings\\Ethan Aubin\\Desktop\\PLT\\collects\\doc\\tex2page" "C:\\Documents and Settings\\Ethan Aubin\\Desktop\\PLT\\collects\\doc\\teachpack" "C:\\Documents and Settings\\Ethan Aubin\\Desktop\\PLT\\collects\\doc\\t-y-scheme" "C:\\Documents and Settings\\Ethan Aubin\\Desktop\\PLT\\collects\\doc\\srfi" "C:\\Documents and Settings\\Ethan Aubin\\Desktop\\PLT\\collects\\doc\\r5rs" "C:\\Documents and Settings\\Ethan Aubin\\Desktop\\PLT\\collects\\doc\\profj-intermediate" "C:\\Documents and Settings\\Ethan Aubin\\Desktop\\PLT\\collects\\doc\\profj-beginner" "C:\\Documents and Settings\\Ethan Aubin\\Desktop\\PLT\\collects\\doc\\profj-advanced" "C:\\Documents and Settings\\Ethan Aubin\\Desktop\\PLT\\collects\\doc\\plot" "C:\\Documents and Settings\\Ethan Aubin\\Desktop\\PLT\\collects\\doc\\mzscheme" "C:\\Documents and Settings\\Ethan Aubin\\Desktop\\PLT\\collects\\doc\\mzlib" "C:\\Documents and Settings\\Ethan Aubin\\Desktop\\PLT\\collects\\doc\\mzc" "C:\\Documents and Settings\\Ethan Aubin\\Desktop\\PLT\\collects\\doc\\mred" "C:\\Documents and Settings\\Ethan Aubin\\Desktop\\PLT\\collects\\doc\\misclib" "C:\\Documents and Settings\\Ethan Aubin\\Desktop\\PLT\\collects\\doc\\intermediate-lambda" "C:\\Documents and Settings\\Ethan Aubin\\Desktop\\PLT\\collects\\doc\\intermediate" "C:\\Documents and Settings\\Ethan Aubin\\Desktop\\PLT\\collects\\doc\\insidemz" "C:\\Documents and Settings\\Ethan Aubin\\Desktop\\PLT\\collects\\doc\\help" "C:\\Documents and Settings\\Ethan Aubin\\Desktop\\PLT\\collects\\doc\\framework" "C:\\Documents and Settings\\Ethan Aubin\\Desktop\\PLT\\collects\\doc\\drscheme" "C:\\Documents and Settings\\Ethan Aubin\\Desktop\\PLT\\collects\\doc\\beginning-abbr" "C:\\Documents and Settings\\Ethan Aubin\\Desktop\\PLT\\collects\\doc\\beginning" "C:\\Do
cuments and Settings\\Ethan Aubin\\Desktop\\PLT\\collects\\doc\\advanced")
Collections: 
(("C:\\Documents and Settings\\Ethan Aubin\\Application Data\\PLT Scheme\\207\\collects" "non-existent path") ("C:\\Documents and Settings\\Ethan Aubin\\Desktop\\PLT\\collects" ("afm" "algol60" "browser" "compiler" "defaults" "doc" "drscheme" "dynext" "eopl" "errortrace" "framework" "frtime" "games" "graphics" "help" "hierlist" "htdch" "htdp" "html" "icons" "lang" "launcher" "make" "mred" "mrflow" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "plot" "preprocessor" "profj" "setup" "sgl" "slatex" "slibinit" "slideshow" "srfi" "stepper" "string-constants" "syntax" "syntax-color" "test-suite" "tex2page" "texpict" "version" "web-server" "xml")))
 
Human Language: english
 
>Description:
Hi, I'm trying to invoke a nested unit but get an error saying:

define-values/invoke-unit/sig: expression for "invoke" is not a signed unit: #<undefined>
[unknown source]: (verify-linkage-signature-match (quote define-values/invoke-unit/sig) (quote (invoke)) (list unit...
[unknown source]: (let-values (((unit-var) (unbox math@1))) (verify-linkage-signature-match (quote define-values/in...
[unknown source]: (let-values (((unit-to-invoke3) (let-values (((unit-var) (unbox math@1))) (verify-linkage-signatu...
[unknown source]: (let-values (((u) (let-values (((unit-to-invoke3) (let-values (((unit-var) (unbox math@1))) (veri...
[unknown source]: (set! my:plus (let-values (((u) (let-values (((unit-to-invoke3) (let-values (((unit-var) (unbox m...
[unknown source]: (begin (void) (set! my:plus (let-values (((u) (let-values (((unit-to-invoke3) (let-values (((unit...
[unknown source]: (let-values () (void) (apply (list-ref client28 1) (append (map mathmaker31 client32))) (apply (l...
[unknown source]: (let-values () (void) (apply (list-ref unit-to-invoke37 1) (append)) (apply (list-ref export-extr...

Could you look at the following and tell me if I'm missing a constraint on the unit body expressions? Thanks - EA


>How-To-Repeat:
(module sigs mzscheme
  (require (lib "unitsig.ss"))
  (provide (all-defined))
  (define-signature math-maker^ (math@))
  (define-signature math^ (plus))
  (define-signature client^ (plus)))

(module math-maker mzscheme
  (require (lib "unitsig.ss") sigs)
  (provide (all-defined))
  
  (define math-maker@
    (unit/sig math-maker^
        ;; in real life, I will have imports here which specialize math@
        (import) 

      (define math@
        (unit/sig math^ (import)
          (define plus +)))
      )))

(module client mzscheme
  (require (lib "unitsig.ss") math-maker sigs)
  (provide (all-defined))

  (define client@
    (unit/sig client^ (import math-maker^)
      ;; In real code, I'd like to link math@ from math-maker into
      ;; several compound units and also use the imported functions.

      ;; In this example, plus would work if I hide the following line
      ;; inside the lambda, but I'd like to do this only once when the
      ;; unit is invoked.
      (define-values/invoke-unit/sig math^ math@ my)

      (define plus
        (lambda (x y)
          (printf "x + y = ~a~n" (+ x y))
          (my:plus x y))))))

(require (lib "unitsig.ss") client math-maker sigs)
(define client-math@ (compound-unit/sig (import)
                             (link (CLIENT : client^ (client@ MATHMAKER))
                                   (MATHMAKER : math-maker^ (math-maker@)))
                             (export (open CLIENT))))
(define-values/invoke-unit/sig client^ client-math@)

>Fix:
>Audit-Trail:
From: Matthew Flatt <mflatt@cs.utah.edu>
To: Ethan Aubin <ethan.aubin@pobox.com>, bugs@plt-scheme.org
Cc: nobody@plt-scheme.org, eli@plt-scheme.org, matthias@ccs.neu.edu,
        sk@cs.brown.edu, robby@cs.uchicago.edu,
        laminatedwastrel@brinckerhoff.org, ptg@ccs.neu.edu,
        meunier@ccs.neu.edu, sowens@cs.utah.edu, kathyg@cs.utah.edu,
        awick@cs.utah.edu, goldberg@cs.utah.edu, dskippy@ccs.neu.edu
Subject: Re: all/6905: invoking nested units
Date: Mon, 14 Jun 2004 07:25:00 -0700

 At Sat, 12 Jun 2004 08:35:01 -0400, Ethan Aubin wrote:
 > (define client-math@ (compound-unit/sig (import)
 >                              (link (CLIENT : client^ (client@ MATHMAKER))
 >                                    (MATHMAKER : math-maker^ (math-maker@)))
 >                              (export (open CLIENT))))
 
 It's an ordering problem: MATHMAKER needs to execute before CLIENT:
 
  (define client-math@ (compound-unit/sig (import)
                              (link (MATHMAKER : math-maker^ (math-maker@))
                                    (CLIENT : client^ (client@ MATHMAKER)))
                              (export (open CLIENT))))
 
 Matthew
 

Class changed from "support" to "not-a-bug" by eli at Wed, 14 Jul 2004 14:26:32 -0400
Reason>>> Seems like this is not a bug.

Responsible changed from "nobody" to "mflatt" by eli at Wed, 14 Jul 2004 14:26:32 -0400
Reason>>> mzscheme (closed -- Seems like this is not a bug)

State changed from "open" to "closed" by eli at Wed, 14 Jul 2004 14:26:32 -0400
Reason>>> Seems like this is not a bug.


