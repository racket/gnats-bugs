From apache@plt-scheme.org Mon May 15 09:48:04 2006
Received: from champlain.ccs.neu.edu (champlain.ccs.neu.edu [127.0.0.1])
	by champlain.ccs.neu.edu (8.12.10/8.12.10) with ESMTP id k4FDm03X024657
	for <bugs@plt-scheme.org>; Mon, 15 May 2006 09:48:00 -0400
Message-Id: <200605151348.k4FDm0SI024655@champlain.ccs.neu.edu>
Date: Mon, 15 May 2006 09:48:00 -0400
From: cobbe@ccs.neu.edu
To: bugs@plt-scheme.org
Subject: feature request: can flat-named-contract accept contracts as well as predicates?

>Number:         8050
>Category:       misc
>Synopsis:       feature request: can flat-named-contract accept contracts as well as predicates?
>Class:          change-request
>Responsible:    robby
>Severity:       non-critical
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Mon May 15 09:50:00 -0400 2006
>Closed-Date:    Thu Nov 15 08:49:32 -0500 2012
>Last-Modified:  Thu Nov 15 08:49:32 -0500 2012
>Originator:     Richard Cobbe
>Organization:
plt
>Submitter-Id:   unknown
>Release:        301.14-svn9may2006
>Environment:
macosx "Darwin vetinari.ccs.neu.edu 8.6.0 Darwin Kernel Version 8.6.0: Tue Mar  7 16:58:48 PST 2006; root:xnu-792.6.70.obj~1/RELEASE_PPC Power Macintosh powerpc" (ppc-macosx) (get-display-depth) = 32
Docs Installed:
(#<path:/Users/cobbe/plt/trunk/collects/doc/r5rs> #<path:/Users/cobbe/plt/trunk/collects/doc/mzscheme> #<path:/Users/cobbe/plt/trunk/collects/doc/mred> #<path:/Users/cobbe/plt/trunk/collects/doc/help> #<path:/Users/cobbe/plt/trunk/collects/doc/tour> #<path:/Users/cobbe/plt/trunk/collects/doc/drscheme> #<path:/Users/cobbe/plt/trunk/collects/doc/srfi> #<path:/Users/cobbe/plt/trunk/collects/doc/mzlib> #<path:/Users/cobbe/plt/trunk/collects/doc/misclib> #<path:/Users/cobbe/plt/trunk/collects/doc/mrlib> #<path:/Users/cobbe/plt/trunk/collects/doc/framework> #<path:/Users/cobbe/plt/trunk/collects/doc/mzc> #<path:/Users/cobbe/plt/trunk/collects/doc/foreign> #<path:/Users/cobbe/plt/trunk/collects/doc/tools> #<path:/Users/cobbe/plt/trunk/collects/doc/insidemz> #<path:/Users/cobbe/plt/trunk/collects/doc/web-server> #<path:/Users/cobbe/plt/trunk/collects/doc/swindle> #<path:/Users/cobbe/plt/trunk/collects/doc/plot> #<path:/Users/cobbe/plt/trunk/collects/doc/t-y-scheme> #<path:/Users/cobbe/plt/trunk/collects/doc/tex2page> #<path:/Users/cobbe/plt/trunk/collects/doc/beginning> #<path:/Users/cobbe/plt/trunk/collects/doc/beginning-abbr> #<path:/Users/cobbe/plt/trunk/collects/doc/intermediate> #<path:/Users/cobbe/plt/trunk/collects/doc/intermediate-lambda> #<path:/Users/cobbe/plt/trunk/collects/doc/advanced> #<path:/Users/cobbe/plt/trunk/collects/doc/teachpack> #<path:/Users/cobbe/plt/trunk/collects/doc/profj-beginner> #<path:/Users/cobbe/plt/trunk/collects/doc/profj-intermediate> #<path:/Users/cobbe/plt/trunk/collects/doc/profj-advanced>)
Collections:
((#<path:/Users/cobbe/Library/PLT Scheme/301.14/collects> "non-existent path") (#<path:/Users/cobbe/plt/trunk/collects> (#<path:.svn> #<path:afm> #<path:algol60> #<path:browser> #<path:compiler> #<path:defaults> #<path:doc> #<path:drscheme> #<path:dynext> #<path:embedded-gui> #<path:eopl> #<path:errortrace> #<path:ffi> #<path:framework> #<path:frtime> #<path:games> #<path:graphics> #<path:guibuilder> #<path:handin-client> #<path:handin-server> #<path:help> #<path:hierlist> #<path:honu-module> #<path:htdch> #<path:htdp> #<path:html> #<path:icons> #<path:info-domain> #<path:lang> #<path:launcher> #<path:make> #<path:mred> #<path:mrflow> #<path:mrlib> #<path:mysterx> #<path:mzcom> #<path:mzlib> #<path:mzscheme> #<path:mztake> #<path:net> #<path:openssl> #<path:parser-tools> #<path:planet> #<path:plot> #<path:preprocessor> #<path:profj> #<path:profjBoxes> #<path:profjWizard> #<path:r5rs> #<path:r6rs> #<path:readline> #<path:repos-time-stamp> #<path:setup> #<path:sgl> #<path:sirmail> #<path:skipper> #<path:slatex> #<path:slibinit> #<path:slideshow> #<path:srfi> #<path:srpersist> #<path:stepper> #<path:string-constants> #<path:swindle> #<path:syntax> #<path:syntax-color> #<path:test-suite> #<path:tests> #<path:tex2page> #<path:texpict> #<path:trace> #<path:version> #<path:waterworld> #<path:web-server> #<path:xelda> #<path:xml>)))
Human Language: english
Teachpack filenames: ()
Computer Language: (("Professional Languages" "(module ...)") (#6(#t write mixed-fraction-e #f #t debug) (default) #0()))
>Description:
Would it be possible to have flat-named-contract (from contract.ss) accept flat contracts as well as predicates for its second argument?  I've recently had occasion to want to write something like the following on a couple of occasions:

(define mumble/c
  (flat-named-contract "mumble"
                       (and/c frotz/c
                              (not/c bazzle/c))))

where frotz/c and bazzle/c are both flat contracts.

Since they are both flat contracts (or, occasionally, predicates) it's not hard to write the predicate directly (or use flat-contract-predicate).  It'd be nice to be able to just write the short version above, though.

Thanks!
>How-To-Repeat:
N/A.
>Fix:
>Audit-Trail:
From: Robby Findler <robby@cs.uchicago.edu>
To: cobbe@ccs.neu.edu, bugs@plt-scheme.org
Cc: nobody@plt-scheme.org, eli@barzilay.org, matthias@ccs.neu.edu,
        sk@cs.brown.edu, mflatt@cs.utah.edu, gnats@brinckerhoff.org,
        jay@kenyamountain.com, meunier@ccs.neu.edu, sowens@cs.utah.edu,
        kathyg@cs.utah.edu, awick@cs.utah.edu, goldberg@cs.utah.edu,
        dskippy@ccs.neu.edu, jacobm@cs.uchicago.edu, cce@ccs.neu.edu,
        dalev@ccs.neu.edu
Subject: Re: all/8050: feature request: can flat-named-contract accept contracts as well as predicates?
Date: Mon, 15 May 2006 08:53:50 -0500

 That is actually intended to be the constructor for flat contracts. In
 the example below, the contract would actually already have a name.
 But, I could add a "rename" operation. I guess that would suit?
 
 Robby
From: Richard Cobbe <cobbe@ccs.neu.edu>
To: Robby Findler <robby@cs.uchicago.edu>
Cc: bugs@plt-scheme.org, nobody@plt-scheme.org, eli@barzilay.org,
        matthias@ccs.neu.edu, sk@cs.brown.edu, mflatt@cs.utah.edu,
        gnats@brinckerhoff.org, jay@kenyamountain.com, meunier@ccs.neu.edu,
        sowens@cs.utah.edu, kathyg@cs.utah.edu, awick@cs.utah.edu,
        goldberg@cs.utah.edu, dskippy@ccs.neu.edu, jacobm@cs.uchicago.edu,
        cce@ccs.neu.edu, dalev@ccs.neu.edu
Subject: Re: all/8050: feature request: can flat-named-contract accept contracts as well as predicates?
Date: Mon, 15 May 2006 14:20:09 -0400

 On Mon, May 15, 2006 at 08:53:50AM -0500, Robby Findler wrote:
 > That is actually intended to be the constructor for flat contracts. In
 > the example below, the contract would actually already have a name.
 > But, I could add a "rename" operation. I guess that would suit?
 
 Yes, that would take care of it.
 
 Thanks,
 
 Richard

Responsible changed from "nobody" to "robby" by eli at Wed, 24 May 2006 13:18:35 -0400
Reason>>> contracts (to be closed)

From: Eric Dobson <eric.n.dobson@gmail.com>
To: bugs@racket-lang.org, cobbe@ccs.neu.edu
Cc: 
Subject: Re: misc/8050: feature request: can flat-named-contract accept
 contracts as well as predicates?
Date: Wed, 14 Nov 2012 23:14:56 -0800

 --001636c92cfd85164d04ce836823
 Content-Type: text/plain; charset=UTF-8
 
 Shouldn't this be closed now, as it was actually implemented at some point.
 
 #lang racket
 
 (define frotz/c (flat-named-contract "frotz" number?))
 (define bazzle/c (flat-named-contract "bazzle" real?))
 
 
 (define mumble/c
   (flat-named-contract "mumble"
                        (and/c frotz/c
                               (not/c bazzle/c))))
 
 --001636c92cfd85164d04ce836823
 Content-Type: text/html; charset=UTF-8
 Content-Transfer-Encoding: quoted-printable
 
 <div>Shouldn&#39;t this be closed now, as it was actually implemented at so=
 me point.</div><div><br></div><div>#lang racket</div><div><br></div><div>(d=
 efine frotz/c (flat-named-contract &quot;frotz&quot; number?))</div><div>
 (define bazzle/c (flat-named-contract &quot;bazzle&quot; real?))</div><div>=
 <br></div><div><br></div><div>(define mumble/c</div><div>=C2=A0 (flat-named=
 -contract &quot;mumble&quot;</div><div>=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(and/c frotz/c</div>
 <div>=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =
 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 (not/c bazzle/c))))</div>
 
 --001636c92cfd85164d04ce836823--
State changed from "open" to "closed" by robby@racket-lang.org at Thu, 15 Nov 2012 08:49:32 -0500
Reason>>> A commit by robby@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/bfa6f374ff
