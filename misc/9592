From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Wed Jul  9 10:56:41 2008
Received: from gv-out-0910.google.com (gv-out-0910.google.com [216.239.58.188])
	by champlain.ccs.neu.edu (8.14.2/8.14.2) with ESMTP id m69EuZDh021234
	for <bugs@bugs.plt-scheme.org>; Wed, 9 Jul 2008 10:56:35 -0400
Message-Id: <200807091456.m69EuVnd021228@champlain.ccs.neu.edu>
Date: Wed, 9 Jul 2008 10:56:31 -0400
From: cce@ccs.neu.edu
To: bugs@plt-scheme.org
Subject: Internet Explorer: 'back' to search page starts from scratch

>Number:         9592
>Category:       misc
>Synopsis:       Internet Explorer: 'back' to search page starts from scratch
>Class:          doc-bug
>Responsible:    eli
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Wed Jul 09 11:00:01 -0400 2008
>Last-Modified:  Fri Jul 11 02:16:01 -0400 2008
>Originator:     Carl Eastlund
>Organization:
plt
>Submitter-Id:   unknown
>Release:        4.0.2.3
>Environment:
Win32 / x86 / Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; .NET CLR 2.0.50727; .NET CLR 3.0.04506.30; .NET CLR 3.0.04506.648; .NET CLR 3.5.21022; InfoPath.2)
>Description:
Using the search at docs.plt-scheme.org via Internet Explorer, if I do a search, click on a result, then hit back to try a different link, the search screen starts from scratch instead of returning to the search as I left it.
>How-To-Repeat:
Go to http://docs.plt-scheme.org/, Search Manuals, and enter "world".  Click on any of the links, then hit back.  The search results are gone.
>Fix:
>Audit-Trail:
Responsible changed from "nobody" to "eli" by eli at Fri, 11 Jul 2008 02:15:54 -0400
Reason>>> search

State changed from "open" to "closed" by eli at Fri, 11 Jul 2008 02:15:54 -0400
Reason>>> see log

From: Eli Barzilay <eli@barzilay.org>
To: cce@ccs.neu.edu, bugs@plt-scheme.org
Cc: matthias@plt-scheme.org, sk@plt-scheme.org, mflatt@plt-scheme.org,
        robby@plt-scheme.org, clements@plt-scheme.org, jay@plt-scheme.org,
        meunier@plt-scheme.org, kathyg@plt-scheme.org, jacobm@plt-scheme.org,
        cce@plt-scheme.org, samth@plt-scheme.org, ryanc@plt-scheme.org,
        gcooper@plt-scheme.org
Subject: Re: [plt-bug] all/9592: Internet Explorer: 'back' to search page starts from scratch
Date: Fri, 11 Jul 2008 02:15:20 -0400

 On Jul  9, cce@ccs.neu.edu wrote:
 > Using the search at docs.plt-scheme.org via Internet Explorer, if I
 > do a search, click on a result, then hit back to try a different
 > link, the search screen starts from scratch instead of returning to
 > the search as I left it.
 
 Another loss in a fight with IE.  I'm going to close this since I
 don't see anything practical that can be done about it.  The best
 advice to say here is to use middle-clicks on the result links so you
 get them in new tabs (which is what I do when I use IE).  But together
 with the previous IE loss (trying to avoid the security issue that
 disables javascript by default for file:// urls), it's getting even
 more tempting to just recommend against using IE.  By the way, I
 downloaded the IE 8 beta release, and you'll be thrilled to know that
 both of these problems are still there.  Fun.
 
 BTW#2, I tried the other major browsers (FF, Safari, Opera) on
 Windows, and they're all fine.
 
 For the record (mostly for myself if it'll become important enough),
 here's a summary of the problem and a suggested solution; read only if
 you did something wrong and feel you should punish yourself.
 
 
 
 
 In IE's defense, I found a place
 (http://support.microsoft.com/kb/q199805) where they justify this
 behavior as following this part of the HTTP 1.1 specification (section
 13.13):
 
    User agents often have history mechanisms, such as "Back" buttons
    and history lists, which can be used to redisplay an entity
    retrieved earlier in a session.
 
    History mechanisms and caches are different. In particular history
    mechanisms SHOULD NOT try to show a semantically transparent view
    of the current state of a resource. Rather, a history mechanism is
    meant to show exactly what the user saw at the time when the
    resource was retrieved.
 
 So FF and the rest diverge from this by default, since it really makes
 more sense in a world with interactive javascript pages.  Since the
 microsoft support page says that they follow this by design, it's
 probably going to behave this way.  (Note that some people read
 "current state" as the physical contents only, which makes this text
 apply only to when a browser is supposed to perform a new query.)
 
 I've read anything I could find on this; it's difficult to find
 relevant stuff, since people mostly want the opposite (FF doesn't
 reset the page when you go back -- how do you make it behave like IE).
 Another big chunk of pages deal with tweaking the history so that you
 can have checkpoints in an ajax application (like using the history
 forward/back buttons to navigate states of the javascript application)
 -- this is also irrelevant as discussed on plt-internal (no good way
 to define such checkpoints).
 
 The only thing that I see that has a chance of working is very
 involved, so given the small payoff it doesn't look like a good
 investment of effort.  Here's the possible sketch of this posible
 "solution":
 
 * IE has a way to specify elements whose state is saved when you
   navigate back into the page with the history back/forward buttons,
   based on an obscure API for "behaviors".  It involves doing this:
 
     - Add a meta tag that specifies that the kind of persistence you
       want is for history navigation:
         <meta name="save" content="history">
       (This will require hacking scribble to be able to add such
       things in the <head> section.)
 
     - Define a history-persistent field, for example
         <input type="text" style="behavior:url(#default#savehistory);">
       (It's not clear whether this will work with a hidden input)
 
   (http://msdn.microsoft.com/en-us/library/ms531422(VS.85).aspx)
 
 * Once that's done, we can use a hidden field to store some data.  Use
   it to save the state of the search page (all configurations, query
   string and hidden query string, and the place in the results that
   you're at).  This state should be set on *every* change rather than
   `onunload', since using `onunload' will make FF behave like IE (but
   will require a different solution).
 
 * Now the `onload' of the search page detects when that field has
   something, and redoes the query and jumps to the right place.  Note
   that this means a visible delay -- since saving the search results
   in the field is not a good idea.
 
 BTW, some pages can work sort of fine without all that -- I suspect
 that the main problem is the fact that most of the search page that
 you see is created dynamically with javascript code.  So things might
 improve a little if more content is a static part of the page
 (requires more scribble hacking), but the output lines are still
 generated dynamically, so doing this is (probably) still not going to
 work.
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                   http://www.barzilay.org/                 Maze is Life!
