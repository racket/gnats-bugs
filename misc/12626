From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Sun Mar 11 20:26:41 2012
Received: from mail-vx0-f172.google.com (mail-vx0-f172.google.com [209.85.220.172])
	by champlain.ccs.neu.edu (8.14.4/8.14.4) with ESMTP id q2C0QbV8021958
	for <bugs@bugs.plt-scheme.org>; Sun, 11 Mar 2012 20:26:37 -0400
Message-Id: <201203120026.q2C0QY8O021951@champlain.ccs.neu.edu>
Date: Sun, 11 Mar 2012 20:26:34 -0400
From: antirealist@gmail.com
To: bugs@racket-lang.org
Subject: XREPL is a CPU hog

>Number:         12626
>Category:       misc
>Synopsis:       XREPL is a CPU hog
>Class:          sw-bug
>Responsible:    eli
>Severity:       non-critical
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Sun Mar 11 20:28:01 -0400 2012
>Closed-Date:    Sun Feb 10 13:38:35 -0500 2013
>Last-Modified:  Sun Feb 10 13:38:35 -0500 2013
>Originator:     Stephen Austin
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.2.1
>Environment:
macosx "Darwin sja-mbp.local 11.3.0 Darwin Kernel Version 11.3.0: Thu Jan 12 18:47:41 PST 2012; root:xnu-1699.24.23~1/RELEASE_X86_64 x86_64" (x86_64-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 389463672
Links: (links) = (); (links #:user? #f) = (); (links #:root? #t) = (); (links #:user? #f #:root? #t) = ()


Collections:
("/Users/antirealist/Library/Racket/5.2.1/collects"
 (non-existent-path))
("/Applications/Racket v5.2.1/collects"
 ("2htdp" "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "data" "datalog" "db" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "help" "hierlist" "htdp" "html" "icons" "images" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "picturing-programs" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "redex" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tex2page" "texpict" "trace" "typed" "typed-racket" "typed-scheme" "unstable" "version" "web-server" "wxme" "xml" "xrepl"))

Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #f debug) (default) #() "#lang racket\n" #t #t))
>Description:
In a racket REPL, (require xrepl) drives CPU use to ~94%.

Oddly, this does not occur if racket is started with "racket -il xrepl".
>How-To-Repeat:
Start racket in a terminal.
(require xrepl)
>Fix:
>Audit-Trail:
From: Eli Barzilay <eli@barzilay.org>
To: antirealist@gmail.com, bugs@racket-lang.org
Cc: bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12626: XREPL is a CPU hog
Date: Sun, 11 Mar 2012 20:36:53 -0400

 A few minutes ago, antirealist@gmail.com wrote:
 > In a racket REPL, (require xrepl) drives CPU use to ~94%.
 > 
 > Oddly, this does not occur if racket is started with "racket -il
 > xrepl".
 
 I don't think that xrepl does anything that could lead to that by
 itself, but maybe the problem is with firing up the readline reader?
 
 Some questions:
 
 1. Do you actually get a working (x)repl after the require?
 
 2. If not, then what backtrace do you see when you hit Ctrl+C?
 
 3. What happens when you try (require readline/rep) in the repl?
 
 4. Is it also similarly broken if you put the (require xrepl) line in
    your racketrc file?
 
    To see where the file is expected to be, evaluate this:
    (find-system-path 'init-file).  (Note that the file should not have
    a `#lang' line!)
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!
From: Robby Findler <robby@eecs.northwestern.edu>
To: Eli Barzilay <eli@barzilay.org>
Cc: antirealist@gmail.com, bugs@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12626: XREPL is a CPU hog
Date: Sun, 11 Mar 2012 19:45:24 -0500

 It happens on my macosx machine, so probably you can find yourself a
 machine at NEU to reproduce this problem. I guess that'll be faster
 than this conversation.
 
 On Sun, Mar 11, 2012 at 7:36 PM, Eli Barzilay <eli@barzilay.org> wrote:
 > A few minutes ago, antirealist@gmail.com wrote:
 >> In a racket REPL, (require xrepl) drives CPU use to ~94%.
 >>
 >> Oddly, this does not occur if racket is started with "racket -il
 >> xrepl".
 >
 > I don't think that xrepl does anything that could lead to that by
 > itself, but maybe the problem is with firing up the readline reader?
 >
 > Some questions:
 >
 > 1. Do you actually get a working (x)repl after the require?
 >
 > 2. If not, then what backtrace do you see when you hit Ctrl+C?
 >
 > 3. What happens when you try (require readline/rep) in the repl?
 >
 > 4. Is it also similarly broken if you put the (require xrepl) line in
 >   your racketrc file?
 >
 >   To see where the file is expected to be, evaluate this:
 >   (find-system-path 'init-file).  (Note that the file should not have
 >   a `#lang' line!)
 >
 > --
 >          ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
 >                    http://barzilay.org/                   Maze is Life!
 
From: John Clements <clements@brinckerhoff.org>
To: Eli Barzilay <eli@barzilay.org>
Cc: antirealist@gmail.com, bugs@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/12626: XREPL is a CPU hog
Date: Mon, 12 Mar 2012 08:05:44 -0700

 --Apple-Mail=_487F7D25-93BA-4F3D-82E2-2F60EB3DD54D
 Content-Transfer-Encoding: quoted-printable
 Content-Type: text/plain;
 	charset=us-ascii
 
 
 On Mar 11, 2012, at 5:36 PM, Eli Barzilay wrote:
 
 > A few minutes ago, antirealist@gmail.com wrote:
 >> In a racket REPL, (require xrepl) drives CPU use to ~94%.
 >>=20
 >> Oddly, this does not occur if racket is started with "racket -il
 >> xrepl".
 >=20
 > I don't think that xrepl does anything that could lead to that by
 > itself, but maybe the problem is with firing up the readline reader?
 
 What the heck, students taking exams, I can reproduce this as well:
 
 > Some questions:
 >=20
 > 1. Do you actually get a working (x)repl after the require?
 
 Yes.
 
 >=20
 > 2. If not, then what backtrace do you see when you hit Ctrl+C?
 
 N/A.
 
 >=20
 > 3. What happens when you try (require readline/rep) in the repl?
 
 99% CPU, same as the above issue.
 
 >=20
 > 4. Is it also similarly broken if you put the (require xrepl) line in
 >   your racketrc file?
 
 No, putting it in my .racketrc does *not* lead to increased CPU, I see =
 the xrepl prompt and everything seems fine.
 
 John
 
 >=20
 >   To see where the file is expected to be, evaluate this:
 >   (find-system-path 'init-file).  (Note that the file should not have
 >   a `#lang' line!)
 >=20
 > --=20
 >          ((lambda (x) (x x)) (lambda (x) (x x)))          Eli =
 Barzilay:
 >                    http://barzilay.org/                   Maze is =
 Life!
 
 
 --Apple-Mail=_487F7D25-93BA-4F3D-82E2-2F60EB3DD54D
 Content-Disposition: attachment;
 	filename=smime.p7s
 Content-Type: application/pkcs7-signature;
 	name=smime.p7s
 Content-Transfer-Encoding: base64
 
 MIAGCSqGSIb3DQEHAqCAMIACAQExCzAJBgUrDgMCGgUAMIAGCSqGSIb3DQEHAQAAoIIOYzCCBnkw
 ggVhoAMCAQICAwJUJjANBgkqhkiG9w0BAQUFADCBjDELMAkGA1UEBhMCSUwxFjAUBgNVBAoTDVN0
 YXJ0Q29tIEx0ZC4xKzApBgNVBAsTIlNlY3VyZSBEaWdpdGFsIENlcnRpZmljYXRlIFNpZ25pbmcx
 ODA2BgNVBAMTL1N0YXJ0Q29tIENsYXNzIDEgUHJpbWFyeSBJbnRlcm1lZGlhdGUgQ2xpZW50IENB
 MB4XDTExMDMyMjA2MTYwMVoXDTEyMDMyMjA2MDcxMlowgZcxIDAeBgNVBA0TFzM4NjMyMy1SVENV
 Tk9qT0djeEg2MjI5MR4wHAYDVQQKExVQZXJzb25hIE5vdCBWYWxpZGF0ZWQxKTAnBgNVBAMTIFN0
 YXJ0Q29tIEZyZWUgQ2VydGlmaWNhdGUgTWVtYmVyMSgwJgYJKoZIhvcNAQkBFhljbGVtZW50c0Bi
 cmluY2tlcmhvZmYub3JnMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAu0R3uG+e0KM1
 NrTNpiDzDENXxwMkkdz2v1hYIn6l1sGcU2v7jwVzIUgXA0RTJO/IJWJCeIT/NGsXH4N4UH1uM6Cx
 PXSTbz8LOAkVqju/Ch2YvYB4nndcMNtqL5OnhKmyN0jd7bfEMw+0PefRG0bZFOgqBIoqCzc3uQNh
 35UXA88mw4U7CYXqkBk93in9NIcNeJrTaehqF8xNUTDmzCh48py9qwbMXz2sS4UD0FxtFUEciPuN
 6mvnVmEUz2eGcNwsWBvHzFi5ogOT1VX88ov8QyOMeWw3p6jAVm1bPLrs5Q0GbKhIfqARkZYLnDw4
 +7O0QWlzl6v1r4137TuGJ4BEQwIDAQABo4IC1TCCAtEwCQYDVR0TBAIwADALBgNVHQ8EBAMCBLAw
 HQYDVR0lBBYwFAYIKwYBBQUHAwIGCCsGAQUFBwMEMB0GA1UdDgQWBBQOkyhYsh+nsU9MvTkRHXyN
 4ZhlDjAfBgNVHSMEGDAWgBRTcu2SnODaywFcfH6WNU7y1LhRgjAkBgNVHREEHTAbgRljbGVtZW50
 c0BicmluY2tlcmhvZmYub3JnMIIBQgYDVR0gBIIBOTCCATUwggExBgsrBgEEAYG1NwECAjCCASAw
 LgYIKwYBBQUHAgEWImh0dHA6Ly93d3cuc3RhcnRzc2wuY29tL3BvbGljeS5wZGYwNAYIKwYBBQUH
 AgEWKGh0dHA6Ly93d3cuc3RhcnRzc2wuY29tL2ludGVybWVkaWF0ZS5wZGYwgbcGCCsGAQUFBwIC
 MIGqMBQWDVN0YXJ0Q29tIEx0ZC4wAwIBARqBkUxpbWl0ZWQgTGlhYmlsaXR5LCBzZWUgc2VjdGlv
 biAqTGVnYWwgTGltaXRhdGlvbnMqIG9mIHRoZSBTdGFydENvbSBDZXJ0aWZpY2F0aW9uIEF1dGhv
 cml0eSBQb2xpY3kgYXZhaWxhYmxlIGF0IGh0dHA6Ly93d3cuc3RhcnRzc2wuY29tL3BvbGljeS5w
 ZGYwNgYDVR0fBC8wLTAroCmgJ4YlaHR0cDovL2NybC5zdGFydHNzbC5jb20vY3J0dTEtY3JsLmNy
 bDCBjgYIKwYBBQUHAQEEgYEwfzA5BggrBgEFBQcwAYYtaHR0cDovL29jc3Auc3RhcnRzc2wuY29t
 L3N1Yi9jbGFzczEvY2xpZW50L2NhMEIGCCsGAQUFBzAChjZodHRwOi8vYWlhLnN0YXJ0c3NsLmNv
 bS9jZXJ0cy9zdWIuY2xhc3MxLmNsaWVudC5jYS5jcnQwIwYDVR0SBBwwGoYYaHR0cDovL3d3dy5z
 dGFydHNzbC5jb20vMA0GCSqGSIb3DQEBBQUAA4IBAQBwCSHgow8FpyJH1Wmt3+g0g9PLv7sb+VTA
 fXyNa/xbsAV7XzPuJy1Ojd0fT2t84bNvAnCGWSwjPSAdYULpjNZJ+SxXlodHgAwd8IQk6rwDcI6q
 No8DgkXBkrT/neLL40CH+gSJKkNcggdF0GFTNWEMTP9AQ6nr6SpizvyNZ0fFFPRDNaWIho/5oKZ4
 TDe3cileJly0HRXe3xWCwvT+STx/FVXQxusMghJECcfN4X869gZw7XQT9U3H4Xy9IJVxgfrMBO6o
 EmTbHmvVmKQe0Oi3wb58HObB5/fJr7kcL6meHP+4RPIYGs6sZ3rqoq+OKd7RfNLO3J/YkwUu1HHS
 V+SzMIIH4jCCBcqgAwIBAgIBDTANBgkqhkiG9w0BAQUFADB9MQswCQYDVQQGEwJJTDEWMBQGA1UE
 ChMNU3RhcnRDb20gTHRkLjErMCkGA1UECxMiU2VjdXJlIERpZ2l0YWwgQ2VydGlmaWNhdGUgU2ln
 bmluZzEpMCcGA1UEAxMgU3RhcnRDb20gQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNMDcxMDI0
 MjEwMTU0WhcNMTIxMDIyMjEwMTU0WjCBjDELMAkGA1UEBhMCSUwxFjAUBgNVBAoTDVN0YXJ0Q29t
 IEx0ZC4xKzApBgNVBAsTIlNlY3VyZSBEaWdpdGFsIENlcnRpZmljYXRlIFNpZ25pbmcxODA2BgNV
 BAMTL1N0YXJ0Q29tIENsYXNzIDEgUHJpbWFyeSBJbnRlcm1lZGlhdGUgQ2xpZW50IENBMIIBIjAN
 BgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxwmDzM4t2BqxKaQuE6uWvooyg4ymiEGWVUet1G8S
 D+rqvyNH4QrvnEIaFHxOhESip7vMz39ScLpNLbL1QpOlPW/tFIzNHS3qd2XRNYG5Sv9RcGE+T4qb
 LtsjjJbi6sL7Ls/f/X9ftTyhxvxWkf8KW37iKrueKsxw2HqolH7GM6FX5UfNAwAu4ZifkpmZzU1s
 lBhyWwaQPEPPZRsWoTb7q8hmgv6Nv3Hg9rmA1/VPBIOQ6SKRkHXG0Hhmq1dOFoAFI411+a/9nWm5
 rcVjGcIWZ2v/43Yksq60jExipA4l5uv9/+Hm33mbgmCszdj/Dthf13tgAv2O83hLJ0exTqfrlwID
 AQABo4IDWzCCA1cwDAYDVR0TBAUwAwEB/zALBgNVHQ8EBAMCAaYwHQYDVR0OBBYEFFNy7ZKc4NrL
 AVx8fpY1TvLUuFGCMIGoBgNVHSMEgaAwgZ2AFE4L7xqkQFulF2mHMMo0aEPQQa7yoYGBpH8wfTEL
 MAkGA1UEBhMCSUwxFjAUBgNVBAoTDVN0YXJ0Q29tIEx0ZC4xKzApBgNVBAsTIlNlY3VyZSBEaWdp
 dGFsIENlcnRpZmljYXRlIFNpZ25pbmcxKTAnBgNVBAMTIFN0YXJ0Q29tIENlcnRpZmljYXRpb24g
 QXV0aG9yaXR5ggEBMAkGA1UdEgQCMAAwPQYIKwYBBQUHAQEEMTAvMC0GCCsGAQUFBzAChiFodHRw
 Oi8vd3d3LnN0YXJ0c3NsLmNvbS9zZnNjYS5jcnQwYAYDVR0fBFkwVzAsoCqgKIYmaHR0cDovL2Nl
 cnQuc3RhcnRjb20ub3JnL3Nmc2NhLWNybC5jcmwwJ6AloCOGIWh0dHA6Ly9jcmwuc3RhcnRzc2wu
 Y29tL3Nmc2NhLmNybDCCAV0GA1UdIASCAVQwggFQMIIBTAYLKwYBBAGBtTcBAQQwggE7MC8GCCsG
 AQUFBwIBFiNodHRwOi8vY2VydC5zdGFydGNvbS5vcmcvcG9saWN5LnBkZjA1BggrBgEFBQcCARYp
 aHR0cDovL2NlcnQuc3RhcnRjb20ub3JnL2ludGVybWVkaWF0ZS5wZGYwgdAGCCsGAQUFBwICMIHD
 MCcWIFN0YXJ0IENvbW1lcmNpYWwgKFN0YXJ0Q29tKSBMdGQuMAMCAQEagZdMaW1pdGVkIExpYWJp
 bGl0eSwgcmVhZCB0aGUgc2VjdGlvbiAqTGVnYWwgTGltaXRhdGlvbnMqIG9mIHRoZSBTdGFydENv
 bSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSBQb2xpY3kgYXZhaWxhYmxlIGF0IGh0dHA6Ly9jZXJ0
 LnN0YXJ0Y29tLm9yZy9wb2xpY3kucGRmMBEGCWCGSAGG+EIBAQQEAwIABzBQBglghkgBhvhCAQ0E
 QxZBU3RhcnRDb20gQ2xhc3MgMSBQcmltYXJ5IEludGVybWVkaWF0ZSBGcmVlIFNTTCBFbWFpbCBD
 ZXJ0aWZpY2F0ZXMwDQYJKoZIhvcNAQEFBQADggIBAKqa4eBbjM4dG/wdxiwwIKC3kyb98QK2zREo
 vyn/xzDP/4H/Bc8FFDTgoJR+nX2Li0EP3U7TsjG+CaIi90+8YlShADpkPrfm/8SzjGtJtfM6Ealu
 JOhpcqMr3OyzK3aYGJP5RIeZ6vLT3fQaDZsIooXl6YSFR/0HpU4FJDc0wuyFaZmFbCrjTp8RNYyR
 WTTX6mWSv+TraOwuj3zrrddSpgUEi2WqwM9G/5o4IXQbGHx7oXTvL6zrw9IOYO3QOKZDgFNhHeKU
 gqMAUiLcg/+WhcGe+Y4umKuxghtwaYsgD/bLfIfop3NC/u5JqwDCWizAJruhmbOV4LG859MFCb2w
 /YeY55zDPVGmQ3MZdriwdOKrhlFjOjYihmm28UHOvND2G3kK0LvnuieLqjQMc6GuUcZAQOWv96pW
 4BfbiQXpAqibMMeb0PZISa7PFEzGiBc2xAuVRkM4kB9/+iieA1D/OTiRJwsf6rkoVgOsN9fCw522
 tzOmuVfiqDS4bFYv00sX/dFGwasHUUf3DsLhpDSYdejb74SKjtuqLDIOuAm2bA1axA6+7kjFeNIn
 gSU6OPSMre+xAjoc/6coaMGthFD+mimr/i/8F8wDwdyzas7oxkdCtaW8hVir8mJnbp4CbckllDMP
 keQ6qQNmxSDhOeqX1jyx2cTi/vPq+/TyxV/stlehMYIDbzCCA2sCAQEwgZQwgYwxCzAJBgNVBAYT
 AklMMRYwFAYDVQQKEw1TdGFydENvbSBMdGQuMSswKQYDVQQLEyJTZWN1cmUgRGlnaXRhbCBDZXJ0
 aWZpY2F0ZSBTaWduaW5nMTgwNgYDVQQDEy9TdGFydENvbSBDbGFzcyAxIFByaW1hcnkgSW50ZXJt
 ZWRpYXRlIENsaWVudCBDQQIDAlQmMAkGBSsOAwIaBQCgggGvMBgGCSqGSIb3DQEJAzELBgkqhkiG
 9w0BBwEwHAYJKoZIhvcNAQkFMQ8XDTEyMDMxMjE1MDU0NFowIwYJKoZIhvcNAQkEMRYEFGP9k7rm
 BcpSJfthciabN7nu/macMIGlBgkrBgEEAYI3EAQxgZcwgZQwgYwxCzAJBgNVBAYTAklMMRYwFAYD
 VQQKEw1TdGFydENvbSBMdGQuMSswKQYDVQQLEyJTZWN1cmUgRGlnaXRhbCBDZXJ0aWZpY2F0ZSBT
 aWduaW5nMTgwNgYDVQQDEy9TdGFydENvbSBDbGFzcyAxIFByaW1hcnkgSW50ZXJtZWRpYXRlIENs
 aWVudCBDQQIDAlQmMIGnBgsqhkiG9w0BCRACCzGBl6CBlDCBjDELMAkGA1UEBhMCSUwxFjAUBgNV
 BAoTDVN0YXJ0Q29tIEx0ZC4xKzApBgNVBAsTIlNlY3VyZSBEaWdpdGFsIENlcnRpZmljYXRlIFNp
 Z25pbmcxODA2BgNVBAMTL1N0YXJ0Q29tIENsYXNzIDEgUHJpbWFyeSBJbnRlcm1lZGlhdGUgQ2xp
 ZW50IENBAgMCVCYwDQYJKoZIhvcNAQEBBQAEggEAYfzEX9Ej1cZWaeRhtxaKmRkb2887G0BKvX5U
 VlYOFWLSOmAT1ZMWCOpsl+iqIOJzffFNS/vXorUd36Bjq4OBcrY0tcTSWRZa2ygdFxSPcGaiJSMn
 wtSgYduax9P7/URU8DcqtOr2lF1VGlupnIGS2gqT+BAEhLC8wUUMATf5X7VXKq8VmwZjuqjC+bZv
 JTgXu5Lu5gW2yXvSWeOqWgEmZMgn2r2MsiFh2DEp927cg669LPxEiW0CbrtGB1AXhF/9YK+C705i
 dq06UyQvnzGTQQ1K2JHIvb6/oF1PHyfe+GzsCKJIcOe/E4qI9NN4W6mAQPZDxbf68JJemYZg+lSe
 kAAAAAAAAA==
 
 --Apple-Mail=_487F7D25-93BA-4F3D-82E2-2F60EB3DD54D--

Responsible changed from "nobody" to "eli" by samth at Wed, 18 Apr 2012 16:41:35 -0400
Reason>>> xrepl


State changed from "open" to "closed" by eli at Sun, 10 Feb 2013 13:38:35 -0500
Reason>>> Fixed by Matthew.  (See PR13350.)

