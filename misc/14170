From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Mon Nov 18 11:15:33 2013
Received: from mail-ob0-f176.google.com (mail-ob0-f176.google.com [209.85.214.176])
	by winooski.ccs.neu.edu (8.14.7/8.14.7) with ESMTP id rAIGFVBj021960
	for <bugs@bugs.plt-scheme.org>; Mon, 18 Nov 2013 11:15:31 -0500
Message-Id: <201311181615.rAIGFTJF021952@winooski.ccs.neu.edu>
Date: Mon, 18 Nov 2013 11:15:29 -0500
From: ianj@ccs.neu.edu
To: bugs@racket-lang.org
Subject: ?? template does not nest properly

>Number:         14170
>Category:       misc
>Synopsis:       ?? template does not nest properly
>Class:          sw-bug
>Responsible:    ryanc
>Severity:       non-critical
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Mon Nov 18 11:16:01 -0500 2013
>Closed-Date:    Thu Dec 05 14:09:26 -0500 2013
>Last-Modified:  Thu Dec 05 14:09:26 -0500 2013
>Originator:     J. Ian Johnson
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.90.0.9
>Environment:
Linux x86_64 / Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:23.0) Gecko/20100101 Firefox/23.0
>Description:
Suppose we have an attribute a bound to #'a, and attribute b bound to #f.
One would expect (?? '(a (?? b 0)) 0) to be '(a 0), but currently we get 0.
>How-To-Repeat:
(require syntax/parse syntax/parse/experimental/template)
(equal?
'(a 0)
(syntax->datum
(syntax-parse #'(a) [(a:expr (~optional b:expr))
  (template (?? '(a (?? b 0)) 0))]))

;;Should be #t, but is #f.
>Fix:
>Audit-Trail:
Responsible changed from "nobody" to "ryanc" by ryanc at Thu, 21 Nov 2013 14:43:07 -0500
Reason>>> syntax-parse

State changed from "open" to "closed" by ryanc@racket-lang.org at Thu, 05 Dec 2013 14:09:26 -0500
Reason>>> A commit by ryanc@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/5593febba5
  | fix nested ?? in template form
  |   closes PR 14170
  | 
  | Instead of checking free pvars of first template and using that to choose
  | which template to use, just try first and on failure try second.
  | 
  | Note: ?? still only covers absent pvars; non-#f non-stx value still
  | causes error; ellipsis rep mismatch still causes error; etc.

