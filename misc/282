From nobody@cs.rice.edu  Tue Sep  2 16:37:36 1997
Received: from web.cs.rice.edu (web.cs.rice.edu [128.42.1.163]) by cs.rice.edu (8.8.5/8.7.1) with ESMTP id QAA05111 for <plt-gnats@cs.rice.edu>; Tue, 2 Sep 1997 16:37:35 -0500 (CDT)
Message-Id: <199709022137.QAA15305@web.cs.rice.edu>
Date: Tue, 2 Sep 1997 16:37:34 -0500 (CDT)
From: four@rice.edu
Reply-To: four@rice.edu
To: plt-gnats@cs.rice.edu
Subject: Windows Install does not register Environment Variables 

>Number:         282
>Category:       misc
>Synopsis:       Windows Install does not register Environment Variables
>Confidential:   no
>Severity:       serious
>Priority:       medium
>Responsible:    mflatt
>State:          closed
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Tue Sep  2 21:40:01 GMT 1997
>Last-Modified:  Mon Sep  8 15:08:44 CDT 1997
>Originator:     Sebastian Godd
>Organization:
titan
>Release:        50
>Environment:
MS Windows NT
>Description:
The plt.exe program does not register PLTHOME, even though it knows what it should be.
>How-To-Repeat:

>Fix:

>Audit-Trail:

From: Matthew Flatt <mflatt@cs.rice.edu>
To: four@rice.edu
Cc: plt-gnats@cs.rice.edu, plt-design@cs.rice.edu
Subject: Re: all/282: Windows Install does not register Environment Variables 
Date: Tue, 2 Sep 1997 17:12:27 -0500 (CDT)

 Said four@rice.edu:
 > The plt.exe program does not register PLTHOME, even though it knows what it should be.
 
 It has always bothered me that installing certain Windows programs
 hardwires a path into the installation, so that I can't simply move a
 program's directory if I want to.
 
 In any case, PLTHOME should be on its way out. The reason for PLTHOME
 was to find "libraries" such as zodiac and the compiler. Instead,
 these "libraries" should be turned into collections. The compiler
 would be started not with
   (load (build-path PLTHOME "compiler.ss"))
 but
   (require-library "compiler.ss" "compiler")
 MzScheme will find "compiler.ss" for you in the collection "compiler.ss".
 The same goes for Zodiac, MrSpidey, and DrScheme.
 
 This technique becomes especially convinient when using `reference'
 instead of `load'. `reference' is the "elaboration-time" version of
 `load'. When you `reference' a file instead of `load'ing it, MrSpidey
 can understand much more. You can still use `reference' with PLTHOME, but
 it gets ugly:
   (reference (begin-elaboration-time (build-path PLTHOME "compiler.ss")))
 and PLTHOME has to be defined at elaboration time, etc.
 This is much nicer:
   (reference-library "compiler.ss" "compile.ss")
 
 Even the `icons' directory should be in a collection. To get the
 path to icons:
   (require-library "iconpath.ss" "icons") ; returns a path obtained with
                                      ; `current-load-relative-directory'
 
 PLTHOME may serve some purpose under Unix. But I don't see any reason
 why we should keep using (getenv "PLTHOME") or mred:plt-home-directory.
 
 Matthew

Responsible-Changed-From-To: ptg->mflatt
Responsible-Changed-By: mflatt
Responsible-Changed-When: Wed Sep  3 08:53:31 1997
Responsible-Changed-Why:

State-Changed-From-To: open-analyzed
State-Changed-By: mflatt
State-Changed-When: Wed Sep  3 08:53:34 1997
State-Changed-Why:
I think we shouldn't do anything...

State-Changed-From-To: analyzed-closed
State-Changed-By: mflatt
State-Changed-When: Mon Sep  8 15:07:57 1997
State-Changed-Why:


>Unformatted:
