From apache@plt-scheme.org Wed Apr  5 11:01:50 2006
Received: from champlain.ccs.neu.edu (champlain.ccs.neu.edu [127.0.0.1])
	by champlain.ccs.neu.edu (8.12.10/8.12.10) with ESMTP id k35F1gZ4029747
	for <bugs@plt-scheme.org>; Wed, 5 Apr 2006 11:01:42 -0400
Message-Id: <200604051501.k35F1gfW029745@champlain.ccs.neu.edu>
Date: Wed, 5 Apr 2006 11:01:42 -0400
From: jos.koot@tiscali.nl
To: bugs@plt-scheme.org
Subject: unseen forward reference to global binding in PLT pretty-big

>Number:         7994
>Category:       misc
>Synopsis:       unseen forward reference to global binding in PLT pretty-big
>Class:          support
>Responsible:    robby
>Severity:       non-critical
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Wed Apr 05 11:05:00 -0400 2006
>Last-Modified:  Sat May 20 11:19:33 -0400 2006
>Originator:     Jos Koot
>Organization:
plt
>Submitter-Id:   unknown
>Release:        301
>Environment:
windows "Windows NT 5.1 (Build 2600) Service Pack 2" (win32\i386) (get-display-depth) = 32
Docs Installed:
(#<path:C:\Program Files\PLT\collects\doc\web-server> #<path:C:\Program Files\PLT\collects\doc\tour> #<path:C:\Program Files\PLT\collects\doc\tools> #<path:C:\Program Files\PLT\collects\doc\tex2page> #<path:C:\Program Files\PLT\collects\doc\teachpack> #<path:C:\Program Files\PLT\collects\doc\t-y-scheme> #<path:C:\Program Files\PLT\collects\doc\swindle> #<path:C:\Program Files\PLT\collects\doc\srfi> #<path:C:\Program Files\PLT\collects\doc\r5rs> #<path:C:\Program Files\PLT\collects\doc\profj-intermediate> #<path:C:\Program Files\PLT\collects\doc\profj-beginner> #<path:C:\Program Files\PLT\collects\doc\profj-advanced> #<path:C:\Program Files\PLT\collects\doc\plot> #<path:C:\Program Files\PLT\collects\doc\mzscheme> #<path:C:\Program Files\PLT\collects\doc\mzlib> #<path:C:\Program Files\PLT\collects\doc\mzc> #<path:C:\Program Files\PLT\collects\doc\mrlib> #<path:C:\Program Files\PLT\collects\doc\mred> #<path:C:\Program Files\PLT\collects\doc\misclib> #<path:C:\Program Files\PLT\collects\doc\intermediate-lambda> #<path:C:\Program Files\PLT\collects\doc\intermediate> #<path:C:\Program Files\PLT\collects\doc\insidemz> #<path:C:\Program Files\PLT\collects\doc\help> #<path:C:\Program Files\PLT\collects\doc\framework> #<path:C:\Program Files\PLT\collects\doc\foreign> #<path:C:\Program Files\PLT\collects\doc\drscheme> #<path:C:\Program Files\PLT\collects\doc\beginning-abbr> #<path:C:\Program Files\PLT\collects\doc\beginning> #<path:C:\Program Files\PLT\collects\doc\advanced>)
Collections:
((#<path:C:\Documents and Settings\HP_Eigenaar\Application Data\PLT Scheme\301\collects> "non-existent path") (#<path:C:\Program Files\PLT\collects> (#<path:afm> #<path:algol60> #<path:browser> #<path:compiler> #<path:defaults> #<path:doc> #<path:drscheme> #<path:dynext> #<path:embedded-gui> #<path:eopl> #<path:errortrace> #<path:ffi> #<path:framework> #<path:frtime> #<path:games> #<path:graphics> #<path:help> #<path:hierlist> #<path:htdch> #<path:htdp> #<path:html> #<path:icons> #<path:info-domain> #<path:lang> #<path:launcher> #<path:make> #<path:mred> #<path:mrlib> #<path:mysterx> #<path:mzcom> #<path:mzlib> #<path:mzscheme> #<path:mztake> #<path:net> #<path:openssl> #<path:parser-tools> #<path:planet> #<path:plot> #<path:preprocessor> #<path:profj> #<path:profjBoxes> #<path:r5rs> #<path:setup> #<path:sgl> #<path:slatex> #<path:slibinit> #<path:slideshow> #<path:srfi> #<path:ssax> #<path:stepper> #<path:string-constants> #<path:swindle> #<path:syntax> #<path:syntax-color> #<path:test-suite> #<path:tex2page> #<path:texpict> #<path:trace> #<path:version> #<path:web-server> #<path:xml>)))
Human Language: english
Teachpack filenames: ()
Computer Language: (("Professional Languages" "PLT" "Pretty Big (includes MrEd and Advanced Student)") #6(#t write mixed-fraction-e #f #t debug))
>Description:
Hi,
When run with PLT-pretty-big the 3 lines shown in the
Steps to Reproduce do not produce the result I expect.
When run with mzscheme or PLT-graphical, they do act
as I expect. Is this behaviour of PLT-pretty-big
intentional or is it a bug? I isolated the problem
from a larger context.
Regards, Jos Koot
>How-To-Repeat:
(define (monkey) coroutine)
(define coroutine 'monkey)
(monkey) --> monkey in mzscheme and PLT-graphical 
but --> #<procedure:coroutine> in PLT-pretty-big
>Fix:
>Audit-Trail:
From: Robby Findler <robby@cs.uchicago.edu>
To: jos.koot@tiscali.nl, bugs@plt-scheme.org
Cc: nobody@plt-scheme.org, eli@barzilay.org, matthias@ccs.neu.edu,
        sk@cs.brown.edu, mflatt@cs.utah.edu, gnats@brinckerhoff.org,
        jay@kenyamountain.com, meunier@ccs.neu.edu, sowens@cs.utah.edu,
        kathyg@cs.utah.edu, awick@cs.utah.edu, goldberg@cs.utah.edu,
        dskippy@ccs.neu.edu, jacobm@cs.uchicago.edu, cce@ccs.neu.edu,
        dalev@ccs.neu.edu
Subject: Re: all/7994: unseen forward reference to global binding in PLT pretty-big
Date: Wed, 5 Apr 2006 10:08:24 -0500

 At Wed, 5 Apr 2006 11:05:03 -0400, jos.koot@tiscali.nl wrote:
 > Hi,
 > When run with PLT-pretty-big the 3 lines shown in the
 > Steps to Reproduce do not produce the result I expect.
 > When run with mzscheme or PLT-graphical, they do act
 > as I expect. Is this behaviour of PLT-pretty-big
 > intentional or is it a bug? I isolated the problem
 > from a larger context.
 > Regards, Jos Koot
 > 
 > *** How to repeat:
 > (define (monkey) coroutine)
 > (define coroutine 'monkey)
 > (monkey) --> monkey in mzscheme and PLT-graphical 
 > but --> #<procedure:coroutine> in PLT-pretty-big
 
 This is just a byproduct of the fact that PLT pretty big contains a
 `coroutine' function to begin with. It is a pretty big language, after
 all :)
 
 You can find out what that function does by searching in Help Desk.
 
 Robby
From: Robby Findler <robby@cs.uchicago.edu>
To: "jos.koot@tiscali.nl" <jos.koot@tiscali.nl>
Cc: bugs@plt-scheme.org
Subject: Re: all/7994: unseen forward reference to global binding in PLT
 pretty-big
Date: Wed, 5 Apr 2006 10:22:30 -0500

 At Wed, 5 Apr 2006 17:18:02 +0200 (CEST), "jos.koot@tiscali.nl" wrote:
 > Hi,
 > Thanks for your quick reply. Of course I have seen the documentation 
 > on procedure coroutine in thread.ss. That's not the problem. My 
 > question is about PLTs intentions. Do you realy want to behave the 
 > three lines differently in different languages? I would expect either 
 > one of the following two:
 > 1) an error message because a module-provided variable is redefined.
 > 2) or, preferably, the forward reference to variable 'coroutine' to be 
 > resolved such as to point to the definition in the second line of my 
 > code.
 
 [ ... forgot to cc the bug report system on my last reply ... ]
 
 Sadly, if you want sane behavior like the above, you have to use
 modules. Our hands are tied at the top-level of Scheme, for historical
 reasons.
 
 Let me encourage you to use modules, however. All of our tools can work
 much more effectively when you do (separate compilation, check syntax,
 macros, planet distribution ...)
 
 Sorry,
 Robby
 
 

Responsible changed from "nobody" to "robby" by eli at Sat, 20 May 2006 00:33:06 -0400
Reason>>> (to be closed)


State changed from "open" to "closed" by robby at Sat, 20 May 2006 11:19:33 -0400
Reason>>> (broken top level strikes again ...)

