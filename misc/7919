From apache@plt-scheme.org Tue Feb 28 09:16:01 2006
Received: from champlain.ccs.neu.edu (champlain.ccs.neu.edu [127.0.0.1])
	by champlain.ccs.neu.edu (8.12.10/8.12.10) with ESMTP id k1SEFsY1022096
	for <bugs@plt-scheme.org>; Tue, 28 Feb 2006 09:15:54 -0500
Message-Id: <200602281415.k1SEFsJE022094@champlain.ccs.neu.edu>
Date: Tue, 28 Feb 2006 09:15:54 -0500
From: trance.diviner@gmail.com
To: bugs@plt-scheme.org
Subject: "identifier already imported" when using SRFI-13

>Number:         7919
>Category:       misc
>Synopsis:       "identifier already imported" when using SRFI-13
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Tue Feb 28 09:20:01 -0500 2006
>Closed-Date:    Wed May 14 17:15:17 -0400 2008
>Last-Modified:  Wed May 14 17:15:17 -0400 2008
>Originator:     Trance Diviner
>Organization:
plt
>Submitter-Id:   unknown
>Release:        301
>Environment:
mac-ppc-osx
>Description:
I have an application that uses SRFI-13.  If it requires a module that also uses SRFI-13, I get an error such as the following:

test1.scm:2:2: module: identifier already imported (from a different source) at: string-upcase in: (require (lib "13.ss" "srfi"))
>How-To-Repeat:
Simple test.

(module a mzscheme
  (require (lib "13.ss" "srfi"))
  (provide procedure-a)
  (define (procedure-a) (display "procedure-a\n")))

(module b mzscheme
  (require a
	   (lib "13.ss" "srfi"))
  (procedure-a))
>Fix:
>Audit-Trail:
From: Jens Axel Soegaard <jensaxel@soegaard.net>
To: bugs@plt-scheme.org, trance.diviner@gmail.com
Cc: 
Subject: Re: all/7919: "identifier already imported" when using SRFI-13
Date: Mon, 19 Nov 2007 20:20:28 +0100

 This is not a bug, but a feature.
 
 The language mzscheme and the module (lib "13.ss" "srfi"))
 both export a procedure named string-upcase, so you
 get the error message:
 
      identifier already imported (from a different source) at:
      string-upcase in: (require (lib "13.ss" "srfi"))
 
 There are several solutions. The simplest is to import all
 non-conflicting names from srfi-13, which is done by:
 
    (require (lib "string.ss" "srfi" "13"))
 
 See the mailing list archive and the Scheme cookbook for
 other solutions.
 
 (module a mzscheme
    (require (lib "string.ss" "srfi" "13"))
    (provide procedure-a)
    (define (procedure-a) (display "procedure-a\n")))
 
 (module b mzscheme
    (require a
             (lib "string.ss" "srfi" "13"))
    (procedure-a))
 
 Hth,
 -- 
 Jens Axel SÃ¸gaard

Responsible changed from "nobody" to "mflatt" by mflatt at Wed, 14 May 2008 17:15:17 -0400
Reason>>> cleaning up

State changed from "open" to "closed" by mflatt at Wed, 14 May 2008 17:15:17 -0400
Reason>>> It was a feature before, but this is actually allowed in v4.0 since a `require' can 
shadow bindings from the initial import.

