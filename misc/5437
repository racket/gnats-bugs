From agj@alum.mit.edu  Thu May 30 20:52:39 2002
Received: from mail.speakeasy.net (mail14.speakeasy.net [216.254.0.214])
	by champlain.ccs.neu.edu (8.9.3/8.8.7) with ESMTP id UAA21391
	for <bugs@plt-scheme.org>; Thu, 30 May 2002 20:52:38 -0400
Message-Id: <m17DafO-0003pSC@aubrey.jaffer>
Date: Thu, 30 May 2002 20:53:18 -0400 (EDT)
From: Aubrey Jaffer <agj@alum.mit.edu>
To: deva@media.mit.edu
Cc: bugs@plt-scheme.org
In-Reply-To: <Pine.OSF.3.91.1020529214229.16546e-100000@ml.media.mit.edu>
	(message from Deva Seetharam on Wed, 29 May 2002 21:44:25 -0400 (EDT))
Subject: Re: plt-scheme (fwd)
References: <Pine.OSF.3.91.1020529214229.16546e-100000@ml.media.mit.edu>

>Number:         5437
>Category:       misc
>Synopsis:       Re: plt-scheme (fwd)
>Class:          sw-bug
>Responsible:    eli
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Thu May 30 21:00:01 -0400 2002
>Closed-Date:    Sun Mar 28 15:49:49 -0500 2004
>Last-Modified:  Sun Mar 04 21:28:08 -0500 2012
>Originator:     
>Organization:
>Submitter-Id:   unknown
>Release:        
>Environment:
>Description:
  | Date: Wed, 29 May 2002 21:44:25 -0400 (EDT)
  | From: Deva Seetharam <deva@media.mit.edu>
  | 
  | I am using plt-scheme 200 and the slib 2d4.  i am having problems
  | with loading libraries.  after i load slib using (require (lib
  | "load.ss" "slibinit")) i am not able to load any other libraries.  i
  | get the message "reference to undefined identifier: lib".
  | 
  | although i can load multiple plt libraries such as string.ss,
  | trace.ss in sequence.  after i load slib, i am not able to load any
  | of them.
 
 You had more success than I did.  setup-plt fails here:
 
   $ uname -a
   Linux aubrey.jaffer 2.2.16-3 #1 Mon Jun 19 18:10:14 EDT 2000 i686
   $ make install
   ...
   setup-plt: Setup version is 200alpha19
   setup-plt: PLT home directory is /home/local
   setup-plt: Collection Paths are: (/home/local/collects)
   setup-plt: No need to make .zos for Dynext at /home/local/collects/dynext
   ...
   setup-plt: No need to make .zos for XML private at /home/local/collects/xml/private
   setup-plt: Making .zos for XML at /home/local/collects/xml
   make: Failed to make compiled/tool.zo; standard-module-name-resolver: collection not found: "framework" in any of: ("/home/local/collects")
   setup-plt: Done setting up
   setup-plt: 
   setup-plt: Error during Making .zos for XML (/home/local/collects/xml)
   setup-plt:   make: Failed to make compiled/tool.zo; standard-module-name-resolver: collection not found: "framework" in any of: ("/home/local/collects")
   make: *** [copy-finish] Error 1
 
 And "make install" trashed my /usr/local/bin directory by attempting to
 rewrite every file therein.  This is a reprehensible practice!
 
 The warning burried on line 126 of /usr/local/src/plt/src/README is
 *not* sufficient:
 
     In addition, this step runs the plt/install script, which updates
     script paths and builds .zo files.
 
 The lack of "make uninstall" leaves me the tedium of manually removing
 MzScheme_200.
 
 			       -=-=-=-=-
 
 SLIB was ported to mzscheme103.
 /usr/local/src/plt/notes/mzscheme/MzScheme_200.txt says:
 
   MzScheme version 200 is different from previous versions of MzScheme
   in several significant ways:
 
    * There is a new module system that supports only top-level,
      first-order modules. The library-collection system now works with
      the module system. In particular, `require-library' has been
      replaced by a `require' form.
 
 SLIB has defined the `require' procedure since 1992.
 /usr/local/src/plt/collects/slibinit/doc.txt says:
 
   SLIB is not integerated with MzScheme's module system.  Instead, SLIB
   works in the top-level environment, and it provides its own "feature"
   system that re-defines `require'.
 
 So the `require' exclusivity is deliberate in mzscheme.
 
  | do you know how to fix this?
  | 
  | thanks,
  | Deva Seetharam
 
 In the examples I found of mzscheme's new module system
 (http://www.htus.org/Book/Staging/how-to-use-modules/), `require' is
 called with strings or with the special-form `lib'.  SLIB `require' is
 always passed a single symbol argument.
 
 Thus it appears that mzscheme `require' could have been written to
 detect the difference in usage and support both systems.
 
 The code defining `require' seems to be in
 /usr/local/src/plt/src/mzscheme/src/module.c.  Good luck!
>How-To-Repeat:
>Fix:
>Release-Note:
>Audit-Trail:
Responsible-Changed-From-To: steck->eli
Responsible-Changed-By: eli
Responsible-Changed-When: Sun, 28 Mar 2004 15:49:49 -0500
Responsible-Changed-Why:
e



View:
  http://bugs.plt-scheme.org/query/gnatsweb.pl?cmd=view+audit-trail&pr=5437
Edit:
  https://internal.plt-scheme.org/bugs/gnatsweb.pl?cmd=edit&pr=5437&database=default
State-Changed-From-To: open->closed
State-Changed-By: eli
State-Changed-When: Sun, 28 Mar 2004 15:49:49 -0500
State-Changed-Why:
stale.
If anyone still cares about this issue, send an email to 
the mailing list.



View:
  http://bugs.plt-scheme.org/query/gnatsweb.pl?cmd=view+audit-trail&pr=5437
Edit:
  https://internal.plt-scheme.org/bugs/gnatsweb.pl?cmd=edit&pr=5437&database=default
>Unformatted:
