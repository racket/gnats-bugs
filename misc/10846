From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Tue Apr  6 02:15:29 2010
Received: from mail-gw0-f44.google.com (mail-gw0-f44.google.com [74.125.83.44])
	by champlain.ccs.neu.edu (8.14.3/8.14.3) with ESMTP id o366FSUu014672
	for <bugs@bugs.plt-scheme.org>; Tue, 6 Apr 2010 02:15:28 -0400
Message-Id: <201004060615.o366FPwO014664@champlain.ccs.neu.edu>
Date: Tue, 6 Apr 2010 02:15:25 -0400
From: dvanhorn@ccs.neu.edu
To: bugs@plt-scheme.org
Subject: Legacy mzlib/kw doesn't work

>Number:         10846
>Category:       misc
>Synopsis:       Legacy mzlib/kw doesn't work
>Class:          sw-bug
>Responsible:    eli
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Tue Apr 06 02:16:01 -0400 2010
>Closed-Date:    Tue Apr 06 02:39:46 -0400 2010
>Last-Modified:  Tue Apr 06 02:40:01 -0400 2010
>Originator:     David Van Horn
>Organization:
plt
>Submitter-Id:   unknown
>Release:        4.2.5.4-svn2apr2010
>Environment:
macosx "Darwin doom 10.2.0 Darwin Kernel Version 10.2.0: Tue Nov  3 10:37:10 PST 2009; root:xnu-1486.2.11~1/RELEASE_I386 i386" (i386-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 276503752

Collections:
(("/Users/dvanhorn/Library/PLT Scheme/4.2.5.4/collects" non-existent-path) ("/Applications/plt/collects" "2htdp" "afm" "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "defaults" "deinprogramm" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "meta" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "reader" "readline" "redex" "repos-time-stamp" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "sirmail" "slatex" "slideshow" "srfi" "srpersist" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tests" "tex2page" "texpict" "trace" "typed" "typed-!
 scheme" "unstable" "version" "waterworld" "web-server" "wxme" "xml"))
Computer Language: (("Determine language from source") (#(#t write mixed-fraction-e #f #t debug) (default) #() "#lang scheme\n" #t))
>Description:
This is from a v370-era code that no longer
works:

#lang scheme
(require mzlib/kw)
(define/kw (f #:all-keys xs) 7)
(f #:blah 13)
f: does not accept keyword arguments; arguments were: #:blah 13
> 
>How-To-Repeat:
>Fix:
>Audit-Trail:
Responsible changed from "nobody" to "eli" by eli at Tue, 06 Apr 2010 02:39:46 -0400
Reason>>> kw

State changed from "open" to "closed" by eli at Tue, 06 Apr 2010 02:39:46 -0400
Reason>>> see reply

From: Eli Barzilay <eli@barzilay.org>
To: dvanhorn@ccs.neu.edu, bugs@plt-scheme.org
Cc: bug-notification@plt-scheme.org
Subject: Re: [plt-bug] all/10846: Legacy mzlib/kw doesn't work
Date: Tue, 6 Apr 2010 02:38:56 -0400

 On Apr  6, dvanhorn@ccs.neu.edu wrote:
 > This is from a v370-era code that no longer works:
 > 
 > #lang scheme
 > (require mzlib/kw)
 > (define/kw (f #:all-keys xs) 7)
 > (f #:blah 13)
 > f: does not accept keyword arguments; arguments were: #:blah 13
 
 This is not a bug.
 
 The margin note (which perhaps should be more visible) at the top of
 the `mzlib/kw' documentation says:
 
   The `lambda' and procedure-application forms of `scheme/base'
   support keyword arguments, and it is *not* compatible with the
   `mzlib/kw' library.
 
 In the `mzscheme' language, keywords are self-quoting and keyword
 arguments are done in a traditional way.  In `scheme', they're passed
 through a different channel (see `keyword-apply'), and in the above
 `f' is not a function that accepts arguments this way.  If you really
 need to use this in `#lang scheme', then you can quote the keywords:
 
   (f '#:blah 13) ; works
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!
