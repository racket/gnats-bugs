From nobody@cs.rice.edu  Tue Mar 10 15:30:56 1998
Received: from web.cs.rice.edu (web.cs.rice.edu [128.42.1.163])
          by cs.rice.edu (8.8.5/8.8.4) with ESMTP
	  id PAA20605 for <plt-gnats@cs.rice.edu>; Tue, 10 Mar 1998 15:30:55 -0600 (CST)
Message-Id: <199803102130.PAA01952@web.cs.rice.edu>
Date: Tue, 10 Mar 1998 15:30:54 -0600 (CST)
From: shriram@cs.rice.edu
Reply-To: shriram@cs.rice.edu
To: plt-gnats@cs.rice.edu
Subject: with-output-to-file considered harmful 

>Number:         485
>Category:       misc
>Synopsis:       with-output-to-file considered harmful
>Confidential:   no
>Severity:       serious
>Priority:       medium
>Responsible:    mflatt
>State:          closed
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Tue Mar 10 21:45:02 GMT 1998
>Last-Modified:  Tue Mar 10 15:48:12 CST 1998
>Originator:     SK
>Organization:
titan
>Release:        mzscheme -x
>Environment:
unknown
>Description:
I currently have

		(let ((op (open-output-file
			    (string-append "datum-"
			      (number->string n)))))
		  (display title op) (newline op)
		  (newline op)
		  (display "(" op)
		  (map (lambda (x)
			 (display x op))
		    sexp)
		  (display ")" op)
		  (newline op)
		  (close-output-port op)
		  (loop "" (add1 n))))

Before this I had

  (with-output-to-file (string-append ...)
    (lambda ()
      ; same display's to stdout instead of op
      (loop "" (add1 n))))

where loop is a tail-recursive loop.  The performance picked up
dramatically and the program was able to process much more data.
Is w-o-t-f not properly tail-recursive or something?

>How-To-Repeat:

>Fix:

>Audit-Trail:

Responsible-Changed-From-To: steck->mflatt
Responsible-Changed-By: mflatt
Responsible-Changed-When: Tue Mar 10 15:45:51 1998
Responsible-Changed-Why:

State-Changed-From-To: open-closed
State-Changed-By: mflatt
State-Changed-When: Tue Mar 10 15:47:40 1998
State-Changed-Why:

Right - the procedure provided to w-o-t-f is not called
tail-recusively. It can't be, because the port must be closed and the
current output port has to be restored after the procedure returns.

>Unformatted:
