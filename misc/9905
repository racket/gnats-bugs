From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Tue Nov 11 20:19:16 2008
Received: from rv-out-0506.google.com (rv-out-0506.google.com [209.85.198.231])
	by champlain.ccs.neu.edu (8.14.2/8.14.2) with ESMTP id mAC1J3a8017269
	for <bugs@bugs.plt-scheme.org>; Tue, 11 Nov 2008 20:19:13 -0500
Message-Id: <200811120118.mAC1Iw5O017262@champlain.ccs.neu.edu>
Date: Tue, 11 Nov 2008 20:18:58 -0500
From: vyzo@media.mit.edu
To: bugs@plt-scheme.org
Subject: scheme/match: match*: else clauses broken

>Number:         9905
>Category:       misc
>Synopsis:       scheme/match: match*: else clauses broken
>Class:          sw-bug
>Responsible:    samth
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Tue Nov 11 20:20:01 -0500 2008
>Closed-Date:    Mon Mar 16 08:10:52 -0400 2009
>Last-Modified:  Mon Mar 16 08:10:52 -0400 2009
>Originator:     vyzo
>Organization:
plt
>Submitter-Id:   unknown
>Release:        4.1.2.4
>Environment:
Linux x86_64 / Mozilla/5.0 (X11; U; Linux x86_64; el; rv:1.9.0.3) Gecko/2008103015 Gentoo Firefox/3.0.3
>Description:
else clauses are broken in match*, with exception during macro expansion.
>How-To-Repeat:
(match* (1 2 3) (else 'foo))
length: expects argument of type <proper list>; given #f
>Fix:
>Audit-Trail:
From: "Sam TH" <samth@plt-scheme.org>
To: vyzo@media.mit.edu, bugs@plt-scheme.org
Cc: 
Subject: Re: [plt-bug] all/9905: scheme/match: match*: else clauses broken
Date: Tue, 11 Nov 2008 23:09:36 -0500

 I'll fix the error, but you really want:
 
 (match* '(1 2 3) [(else) 'foo]) ;; note the extra parens
 
 sam th
 
 On Tue, Nov 11, 2008 at 8:20 PM,  <vyzo@media.mit.edu> wrote:
 > A new problem report is waiting at
 >  http://bugs.plt-scheme.org/query/?cmd=view&pr=9905
 >
 > Reported by vyzo for release: 4.1.2.4
 >
 > *** Description:
 > else clauses are broken in match*, with exception during macro expansion.
 >
 > *** How to repeat:
 > (match* (1 2 3) (else 'foo))
 > length: expects argument of type <proper list>; given #f
 >
 > *** Environment:
 > Linux x86_64 / Mozilla/5.0 (X11; U; Linux x86_64; el; rv:1.9.0.3) Gecko/2008103015 Gentoo Firefox/3.0.3
 >
 >
 
 
 
 -- 
 sam th
 samth@ccs.neu.edu
From: Dimitris Vyzovitis <vyzo@media.mit.edu>
To: Sam TH <samth@plt-scheme.org>
Cc: bugs@plt-scheme.org
Subject: Re: [plt-bug] all/9905: scheme/match: match*: else clauses broken
Date: Tue, 11 Nov 2008 23:23:45 -0500 (EST)

 On Tue, 11 Nov 2008, Sam TH wrote:
 
 > I'll fix the error, but you really want:
 >
 > (match* '(1 2 3) [(else) 'foo]) ;; note the extra parens
 >
 > sam th
 
 That doesn't work either:
 
 > (match* '(1 2 3) ((else) 'foo))
 stdin::18: match: wrong number of match clauses, expected 2 and got 1 in: 
 (else)
 
 I disagree in the "you really want" part however; I find it much cleaner
 to use else directly regardless of the number of clauses since else has
 special meaning.
 
 
 >
 > On Tue, Nov 11, 2008 at 8:20 PM,  <vyzo@media.mit.edu> wrote:
 >> A new problem report is waiting at
 >>  http://bugs.plt-scheme.org/query/?cmd=view&pr=9905
 >>
 >> Reported by vyzo for release: 4.1.2.4
 >>
 >> *** Description:
 >> else clauses are broken in match*, with exception during macro expansion.
 >>
 >> *** How to repeat:
 >> (match* (1 2 3) (else 'foo))
 >> length: expects argument of type <proper list>; given #f
 >>
 >> *** Environment:
 >> Linux x86_64 / Mozilla/5.0 (X11; U; Linux x86_64; el; rv:1.9.0.3) Gecko/2008103015 Gentoo Firefox/3.0.3
 >>
 >>
 >
 >
 >
 > -- 
 > sam th
 > samth@ccs.neu.edu
 >
 
 -- vyzo
From: "Sam TH" <samth@plt-scheme.org>
To: "Dimitris Vyzovitis" <vyzo@media.mit.edu>
Cc: bugs@plt-scheme.org
Subject: Re: [plt-bug] all/9905: scheme/match: match*: else clauses broken
Date: Tue, 11 Nov 2008 23:33:34 -0500

 On Tue, Nov 11, 2008 at 11:23 PM, Dimitris Vyzovitis <vyzo@media.mit.edu> wrote:
 > On Tue, 11 Nov 2008, Sam TH wrote:
 >
 >> I'll fix the error, but you really want:
 >>
 >> (match* '(1 2 3) [(else) 'foo]) ;; note the extra parens
 >>
 >> sam th
 >
 > That doesn't work either:
 >
 >> (match* '(1 2 3) ((else) 'foo))
 >
 > stdin::18: match: wrong number of match clauses, expected 2 and got 1 in:
 > (else)
 
 Sorry, that was a mistake.  It should be:
 
 
 (match* (1 2 3) ;; matching 3 elements:
    [(_ _ _) 'foo])
 
 At least, I think that's the semantics you're going for.
 
 > I disagree in the "you really want" part however; I find it much cleaner
 > to use else directly regardless of the number of clauses since else has
 > special meaning.
 
 `else' does not have special meaning in `match'.  Only `_' has special
 meaning.
 
 Thanks,
 sam th
 
 >
 >
 >>
 >> On Tue, Nov 11, 2008 at 8:20 PM,  <vyzo@media.mit.edu> wrote:
 >>>
 >>> A new problem report is waiting at
 >>>  http://bugs.plt-scheme.org/query/?cmd=view&pr=9905
 >>>
 >>> Reported by vyzo for release: 4.1.2.4
 >>>
 >>> *** Description:
 >>> else clauses are broken in match*, with exception during macro expansion.
 >>>
 >>> *** How to repeat:
 >>> (match* (1 2 3) (else 'foo))
 >>> length: expects argument of type <proper list>; given #f
 >>>
 >>> *** Environment:
 >>> Linux x86_64 / Mozilla/5.0 (X11; U; Linux x86_64; el; rv:1.9.0.3)
 >>> Gecko/2008103015 Gentoo Firefox/3.0.3
 >>>
 >>>
 >>
 >>
 >>
 >> --
 >> sam th
 >> samth@ccs.neu.edu
 >>
 >
 > -- vyzo
 >
 
 
 
 -- 
 sam th
 samth@ccs.neu.edu
From: Dimitris Vyzovitis <vyzo@media.mit.edu>
To: Sam TH <samth@plt-scheme.org>
Cc: bugs@plt-scheme.org
Subject: Re: [plt-bug] all/9905: scheme/match: match*: else clauses broken
Date: Tue, 11 Nov 2008 23:44:23 -0500 (EST)

 On Tue, 11 Nov 2008, Sam TH wrote:
 
 > On Tue, Nov 11, 2008 at 11:23 PM, Dimitris Vyzovitis <vyzo@media.mit.edu> wrote:
 >> On Tue, 11 Nov 2008, Sam TH wrote:
 >>
 >>> I'll fix the error, but you really want:
 >>>
 >>> (match* '(1 2 3) [(else) 'foo]) ;; note the extra parens
 >>>
 >>> sam th
 >>
 >> That doesn't work either:
 >>
 >>> (match* '(1 2 3) ((else) 'foo))
 >>
 >> stdin::18: match: wrong number of match clauses, expected 2 and got 1 in:
 >> (else)
 >
 > Sorry, that was a mistake.  It should be:
 >
 >
 > (match* (1 2 3) ;; matching 3 elements:
 >   [(_ _ _) 'foo])
 >
 > At least, I think that's the semantics you're going for.
 
 Yeah, I know of this - my personal match wrapper expands to this when it 
 sees an else (fixed that when I run into the error).
 
 >
 >> I disagree in the "you really want" part however; I find it much cleaner
 >> to use else directly regardless of the number of clauses since else has
 >> special meaning.
 >
 > `else' does not have special meaning in `match'.  Only `_' has special
 > meaning.
 
 Uhm, that's a little dangerous, isn't it? Lot's of macros use else as a 
 keyword. If I recall correctly the old match did assign special meaning to 
 else.
 
 -- vyzo
From: Eli Barzilay <eli@barzilay.org>
To: Sam Tobin-Hochstadt <samth@ccs.neu.edu>,
        Dimitris Vyzovitis <vyzo@media.mit.edu>, bugs@plt-scheme.org
Cc: 
Subject: Re: [plt-bug] all/9905: scheme/match: match*: else clauses broken
Date: Wed, 12 Nov 2008 00:31:24 -0500

 On Nov 11, Dimitris Vyzovitis wrote:
 >  
 >  > `else' does not have special meaning in `match'.  Only `_' has
 >  > special meaning.
 >  
 >  Uhm, that's a little dangerous, isn't it? Lot's of macros use else
 >  as a keyword. If I recall correctly the old match did assign
 >  special meaning to else.
 
 +1  (It will save me some explaining in class that isn't really
 relevant for anything, and many people probably don't get it anyway.)
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                   http://www.barzilay.org/                 Maze is Life!
From: "Sam TH" <samth@plt-scheme.org>
To: "Dimitris Vyzovitis" <vyzo@media.mit.edu>,
        "Eli Barzilay" <eli@barzilay.org>
Cc: bugs@plt-scheme.org
Subject: Re: [plt-bug] all/9905: scheme/match: match*: else clauses broken
Date: Wed, 12 Nov 2008 08:19:52 -0500

 On Tue, Nov 11, 2008 at 11:44 PM, Dimitris Vyzovitis <vyzo@media.mit.edu> wrote:
 > On Tue, 11 Nov 2008, Sam TH wrote:
 >> On Tue, Nov 11, 2008 at 11:23 PM, Dimitris Vyzovitis <vyzo@media.mit.edu>
 >> wrote:
 >>> I disagree in the "you really want" part however; I find it much cleaner
 >>> to use else directly regardless of the number of clauses since else has
 >>> special meaning.
 >>
 >> `else' does not have special meaning in `match'.  Only `_' has special
 >> meaning.
 >
 > Uhm, that's a little dangerous, isn't it? Lot's of macros use else as a
 > keyword. If I recall correctly the old match did assign special meaning to
 > else.
 
 I don't see why it would be dangerous.  The old version of `match' did
 not assign special meaning to `else', so I'm not inclined to change
 this behavior.
 
 Eli -
 
 This will always work:
 
 (match x
    ...
    [else 'whatever])
 
 so you shouldn't worry. Dimitris' problem has to do with `match*',
 which your students aren't using.
 -- 
 sam th
 samth@ccs.neu.edu
From: Dimitris Vyzovitis <vyzo@media.mit.edu>
To: Sam TH <samth@plt-scheme.org>
Cc: Eli Barzilay <eli@barzilay.org>, bugs@plt-scheme.org
Subject: Re: [plt-bug] all/9905: scheme/match: match*: else clauses broken
Date: Wed, 12 Nov 2008 09:04:27 -0500 (EST)

 On Wed, 12 Nov 2008, Sam TH wrote:
 
 >> Uhm, that's a little dangerous, isn't it? Lot's of macros use else as a
 >> keyword. If I recall correctly the old match did assign special meaning to
 >> else.
 >
 > I don't see why it would be dangerous.  The old version of `match' did
 > not assign special meaning to `else', so I'm not inclined to change
 > this behavior.
 
 I remember it squeaking for 'unreachable else clauses' - perhaps it was 
 just treating it as a pattern variable match though. Anyway, I still think 
 it is a nice feature to have in match* and a safety guard in plain match, 
 but not changing is fine by me (my match wrapper has the feature in 
 either case).
 
 Speaking of which, would you be interested in a patch or two that do some 
 syntatic tricks for matching structs directly {(foo a b c) as opposed to 
 (struct foo (a b c))} and lists with #\[ paren-shape?
 
 >
 > Eli -
 >
 > This will always work:
 >
 > (match x
 >   ...
 >   [else 'whatever])
 >
 > so you shouldn't worry. Dimitris' problem has to do with `match*',
 > which your students aren't using.
 
 The point of 'dangerous' is that if your else body has a (cond ... (else 
 ...)) or some of its friends it will break, and I am pretty sure even 
 begining students use those.
 
 -- vyzo
From: Eli Barzilay <eli@barzilay.org>
To: Dimitris Vyzovitis <vyzo@media.mit.edu>
Cc: Sam TH <samth@plt-scheme.org>, bugs@plt-scheme.org
Subject: Re: [plt-bug] all/9905: scheme/match: match*: else clauses broken
Date: Wed, 12 Nov 2008 09:28:37 -0500

 On Nov 12, Dimitris Vyzovitis wrote:
 > > This will always work:
 > >
 > > (match x
 > >   ...
 > >   [else 'whatever])
 > >
 > > so you shouldn't worry. Dimitris' problem has to do with `match*',
 > > which your students aren't using.
 > 
 > The point of 'dangerous' is that if your else body has a (cond
 > ... (else ...)) or some of its friends it will break, and I am
 > pretty sure even begining students use those.
 
 Right -- I once had a `match' with a `cond' that was used as the last
 branch to do some other checks.  Because of that I'm always careful to
 explain to them that `else' is actually bound in the result
 expression.
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                   http://www.barzilay.org/                 Maze is Life!

Responsible changed from "nobody" to "samth" by eli at Mon, 16 Mar 2009 06:40:29 -0400
Reason>>> match


State changed from "open" to "closed" by samth at Mon, 16 Mar 2009 08:10:52 -0400
Reason>>> Bad error message fixed.  The rest of this is not going to
change.

