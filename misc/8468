From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Sun Jan  7 13:34:42 2007
Received: from wx-out-0506.google.com (wx-out-0506.google.com [66.249.82.234])
	by champlain.ccs.neu.edu (8.13.8/8.13.7) with ESMTP id l07IYbZI029829
	for <bugs@bugs.plt-scheme.org>; Sun, 7 Jan 2007 13:34:37 -0500
Message-Id: <200701071834.l07IYadl029823@champlain.ccs.neu.edu>
Date: Sun, 7 Jan 2007 13:34:36 -0500
From: eli@barzilay.org
To: bugs@plt-scheme.org
Subject: mzscheme with input from file

>Number:         8468
>Category:       misc
>Synopsis:       mzscheme with input from file
>Class:          sw-bug
>Responsible:    eli
>Notify-List:    mflatt@plt-scheme.org
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Sun Jan 07 13:35:01 -0500 2007
>Closed-Date:    Sun Jan 07 23:44:17 -0500 2007
>Last-Modified:  Sun Jan 07 23:44:17 -0500 2007
>Originator:     Eli Barzilay
>Organization:
plt
>Submitter-Id:   unknown
>Release:        369.3
>Environment:
unix "Linux winooski.ccs.neu.edu 2.6.18-1.2849.fc6xen #1 SMP Fri Nov 10 13:56:52 EST 2006 i686 i686 i386 GNU/Linux" (i386-linux) (get-display-depth) = 16
Docs Installed:
(("/home/scheme/plt/doc" "r5rs" "mzscheme" "mred" "help" "tour" "drscheme" "srfi" "mzlib" "misclib" "mrlib" "framework" "foreign" "mzc" "tools" "insidemz" "web-server" "swindle" "plot" "release-notes" "t-y-scheme" "tex2page" "beginning" "beginning-abbr" "intermediate" "intermediate-lambda" "advanced" "teachpack" "teachpack-htdc" "profj-beginner" "profj-intermediate" "profj-advanced"))
Human Language: english
(current-memory-use) 38928384

Collections:
(("/home/eli/.plt-scheme/369.3/collects" non-existent-path) ("/home/scheme/plt/collects" "icons" "syntax-color" "trace" "guibuilder" "tex2page" "slideshow" "texpict" "syntax" "eopl" "handin-server" "launcher" "teachpack" "plot" "algol60" "web-server" "graphics" "compiler" "planet" "profjWizard" "lazy" "openssl" "games" "swindle" "mrlib" "info-domain" "framework" "lang" "help" "hierlist" "srpersist" "scribble" "readline" "handin-client" "config" "errortrace" "drscheme" "parser-tools" "mztake" "profj" "repos-time-stamp" "htdp" "string-constants" "tests" "dynext" "browser" "mred" "mrflow" "mzlib" "frtime" "xelda" "mysterx" "embedded-gui" "slatex" "htdch" "srfi" "stepper" "defaults" "macro-debugger" "mzscheme" "preprocessor" "ffi" "sirmail" "version" "html" "skipper" "sgl" "mzcom" "net" "make" "xml" "r6rs" "afm" "honu-module" "setup" "r5rs" "waterworld" ".svn"))
>Description:
When mzscheme starts with input from /dev/null, it exits as
expected.  But when the input is redirected from a file, it
gets stuck in some busy loop, and it is impossible to quit
(it traps Ctrl+C, but will not read any further input).

Possibly related: closing the input port gets mzscheme to
spin in a loop too, again with no way to terminate the
process.  (This is clearly shooting my own foot, but I'd
think it would be similar to sending an eof.)
>How-To-Repeat:
echo '(printf "foo\n")' > /tmp/x ; mzscheme < /tmp/x
or: echo '...' | mzscheme

The second problem is simply
  (close-input-port (current-input-port))
>Fix:
>Audit-Trail:
From: Matthew Flatt <mflatt@cs.utah.edu>
To: eli@barzilay.org, bugs@plt-scheme.org
Cc: 
Subject: Re: [plt-bug] all/8468: mzscheme with input from file
Date: Mon, 8 Jan 2007 05:36:22 +0800

 At Sun, 7 Jan 2007 13:35:02 -0500, eli@barzilay.org wrote:
 > *** How to repeat:
 > echo '(printf "foo\n")' > /tmp/x ; mzscheme < /tmp/x
 > or: echo '...' | mzscheme
 
 Is it possibly something in your .mzschemerc? These work ok for me, and
 I would be interested in the same tests on your machine with -q.
 
 Matthew
 
From: Eli Barzilay <eli@barzilay.org>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: bugs@plt-scheme.org
Subject: Re: [plt-bug] all/8468: mzscheme with input from file
Date: Sun, 7 Jan 2007 17:35:49 -0500

 On Jan  8, Matthew Flatt wrote:
 > At Sun, 7 Jan 2007 13:35:02 -0500, eli@barzilay.org wrote:
 > > *** How to repeat:
 > > echo '(printf "foo\n")' > /tmp/x ; mzscheme < /tmp/x
 > > or: echo '...' | mzscheme
 > 
 > Is it possibly something in your .mzschemerc? These work ok for me, and
 > I would be interested in the same tests on your machine with -q.
 
 Sorry, I should have mailed a follow-up but didn't get to it.  It is
 something with my .mzschemerc -- it's readline that somehow doesn't
 work right.  I'm still looking to it.
 
 As for the second part -- closing the current-input -- I don't think
 it'll be enough to keep this PR open.  I thought that there might be a
 way to use the mzscheme-is-idle thing somehow, and make it exit if the
 main thread is seeing that there is an EOF and there is no other
 activity.  But this will probably require something else -- knowing
 that there is no other thread waiting on anything.  In any case, I
 don't see how it would happen so I'll just drop it.
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                   http://www.barzilay.org/                 Maze is Life!
From: Eli Barzilay <eli@barzilay.org>
To: Matthew Flatt <mflatt@cs.utah.edu>, bugs@plt-scheme.org
Cc: 
Subject: Re: [plt-bug] all/8468: mzscheme with input from file
Date: Sun, 7 Jan 2007 20:01:46 -0500

 On Jan  7, Eli Barzilay wrote:
 > 
 > Sorry, I should have mailed a follow-up but didn't get to it.  It is
 > something with my .mzschemerc -- it's readline that somehow doesn't
 > work right.  I'm still looking to it.
 
 It's some problem with readline, I think.  You can see it with running
 the Scheme code below, and you can see that the similar C code that
 follows works fine.
 
 The problem comes from this bit in mzrl.ss:
 
   ;; need to capture the real input port below
   (define real-input-port (current-input-port))
   (unless (eq? 'stdin (object-name real-input-port))
     (fprintf (current-error-port)
              "mzrl warning: could not capture the real input port\n"))
   ;; make it possible to run Scheme threads while waiting for input
   (set-ffi-obj! "rl_event_hook" libreadline (_fun -> _int)
                 (lambda () (sync/enable-break real-input-port) 0))
 
 probably because `real-input-port' is not the port that readline is
 using.  I changed the code to also check that `real-input-port' is
 also a terminal-port, and spit out a warning if not, but I'm not sure
 that this is the right solution.
 
 But I can't think of any other solution.  Do you want me to just close
 the bug as it is?
 
 
 1. Scheme code
 
   (require (lib "readline.ss" "readline"))
   (define (z n) (printf "~a--> ~s\n" n (readline-bytes #"Foo? ")))
   (for-each z (list 1 2 3 4))
 
 2. C code
 
   #include <stdio.h>
   #include <readline/readline.h>
   #include <readline/history.h>
   int main(int argc, char *argv[])
   {
     printf("1>>> %s\n", readline("Foo? "));
     printf("2>>> %s\n", readline("Foo? "));
   }
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                   http://www.barzilay.org/                 Maze is Life!

Responsible changed from "nobody" to "eli" by eli at Sun, 07 Jan 2007 23:44:17 -0500
Reason>>> .

State changed from "open" to "closed" by eli at Sun, 07 Jan 2007 23:44:17 -0500
Reason>>> Not much that can be done, I think.  Added some more checks
with warnings.  See discussion.

