From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Tue Apr 10 09:53:30 2007
Received: from an-out-0708.google.com (an-out-0708.google.com [209.85.132.241])
	by champlain.ccs.neu.edu (8.13.8/8.13.7) with ESMTP id l3ADrT1a015055
	for <bugs@bugs.plt-scheme.org>; Tue, 10 Apr 2007 09:53:29 -0400
Message-Id: <200704101353.l3ADrS2x015050@champlain.ccs.neu.edu>
Date: Tue, 10 Apr 2007 09:53:28 -0400
From: derick.eddington@gmail.com
To: bugs@plt-scheme.org
Subject: (lib "sandbox.ss") make-evaluator language '(lib ...) problem

>Number:         8597
>Category:       misc
>Synopsis:       (lib "sandbox.ss") make-evaluator language '(lib ...) problem
>Class:          sw-bug
>Responsible:    eli
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Tue Apr 10 09:55:01 -0400 2007
>Closed-Date:    Tue Apr 10 20:58:37 -0400 2007
>Last-Modified:  Tue Apr 10 20:58:37 -0400 2007
>Originator:     Derick Eddington
>Organization:
plt
>Submitter-Id:   unknown
>Release:        369.9-svn10apr2007
>Environment:
unix "Linux eep 2.6.17-11-generic #2 SMP Thu Feb 1 19:52:28 UTC 2007 i686 GNU/Linux" (i386-linux/3m) (get-display-depth) = 24
Docs Installed:
(("/home/d/plt/doc" "r5rs" "mzscheme" "mred" "help" "tour" "drscheme" "srfi" "mzlib" "misclib" "mrlib" "framework" "foreign" "mzc" "tools" "insidemz" "web-server" "swindle" "plot" "release-notes" "t-y-scheme" "tex2page" "beginning" "beginning-abbr" "intermediate" "intermediate-lambda" "advanced" "teachpack" "teachpack-htdc" "profj-beginner" "profj-intermediate" "profj-advanced"))
Human Language: english
(current-memory-use) 92872104

Collections:
(("/home/d/.plt-scheme/369.9/collects" non-existent-path) ("/home/d/plt/collects" "afm" "ffi" "net" "sgl" "xml" "eopl" "help" "htdp" "html" "lang" "lazy" "make" "r5rs" "r6rs" "mred" "plot" "srfi" "wxme" "framework" "teachpack" "handin-client" "mzscheme" "games" "icons" "htdch" "mrlib" "mzcom" "mzlib" "graphics" "profj" "setup" "tests" "trace" "xelda" "combinator-parser" "waterworld" "preprocessor" "sirmail" "skipper" "handin-server" "tex2page" "texpict" "profjWizard" "stepper" "scribble" "web-server" "config" "compiler" "swindle" "dynext" "hierlist" "macro-debugger" "frtime" "defaults" "guibuilder" "drscheme" "syntax-color" "mrflow" "srpersist" "mztake" "planet" "mysterx" "errortrace" "slatex" "syntax" "version" "algol60" "honu-module" "parser-tools" "openssl" "embedded-gui" "slideshow" "repos-time-stamp" "info-domain" "readline" "launcher" "string-constants" "browser"))
Teachpack filenames: ()
Computer Language: (("Professional Languages" "PLT" "Textual (MzScheme, includes R5RS)") #6(#t write mixed-fraction-e #f #t debug))
>Description:
In collects/mzlib/sandbox.ss in procedure `require-perms', the else branch of the cond evaluates to `language' (it looks like these expressions should be wrapped in an (error ...)), which causes the contract violation shown in below "Steps to Reproduce".  This also means either handling for '(lib ...) module specifications is missing from this cond, or the documentation is wrong in saying that '(lib ...) can be used.
>How-To-Repeat:
Welcome to MzScheme v369.9 [3m], Copyright (c) 2004-2007 PLT Scheme Inc.
> (require (lib "sandbox.ss"))
> (define ev 
    (make-evaluator '(lib anything) '()))
(lib "sandbox.ss") broke the contract 
  (->
   module-path-v?
   (or/c (-> path-string?) path-string? false/c)
   path?)
on resolve-module-path; expected <module-path-v?>, given: lib

 === context ===
/home/d/plt/collects/mzlib/private/contract-guts.ss:196:2: raise-contract-error
resolve-module-path
/home/d/plt/collects/mzlib/sandbox.ss:150:34
/home/d/plt/collects/mzlib/sandbox.ss:144:2: module-specs->non-lib-paths
/home/d/plt/collects/mzlib/sandbox.ss:128:2: module-specs->path-permissions
/home/d/plt/collects/mzlib/sandbox.ss:529:4: make-evaluator
>Fix:
>Audit-Trail:
From: Eli Barzilay <eli@barzilay.org>
To: derick.eddington@gmail.com, bugs@plt-scheme.org
Cc: 
Subject: Re: [plt-bug] all/8597: (lib "sandbox.ss") make-evaluator language '(lib ...) problem
Date: Tue, 10 Apr 2007 14:21:01 -0400

 On Apr 10, derick.eddington@gmail.com wrote:
 > In collects/mzlib/sandbox.ss in procedure `require-perms', the else
 > branch of the cond evaluates to `language' (it looks like these
 > expressions should be wrapped in an (error ...)), which causes the
 > contract violation shown in below "Steps to Reproduce".  This also
 > means either handling for '(lib ...) module specifications is
 > missing from this cond, or the documentation is wrong in saying that
 > '(lib ...) can be used.
 
 1. The `else' branch has an error, perhaps you were looking at an
    older version.  (To check the recent one, see
    http://svn.plt-scheme.org/plt/trunk/collects/mzlib/sandbox.svn)
 
 2. Yes, it should have not raised an error for a `(lib ...)' spec, I
    fixed that.
 
 3. The error that you see is becaue you used a bad `lib' spec.
    Testing for these things is difficult, and if I add the code, the
    only difference is that you will see a different error message.
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                   http://www.barzilay.org/                 Maze is Life!
From: Derick Eddington <derick.eddington@gmail.com>
To: Eli Barzilay <eli@barzilay.org>
Cc: bugs@plt-scheme.org
Subject: Re: [plt-bug] all/8597: (lib "sandbox.ss") make-evaluator language
	'(lib ...) problem
Date: Tue, 10 Apr 2007 15:48:37 -0700

 On Tue, 2007-04-10 at 14:21 -0400, Eli Barzilay wrote: 
 > On Apr 10, derick.eddington@gmail.com wrote:
 > > In collects/mzlib/sandbox.ss in procedure `require-perms', the else
 > > branch of the cond evaluates to `language' (it looks like these
 > > expressions should be wrapped in an (error ...)), which causes the
 > > contract violation shown in below "Steps to Reproduce".  This also
 > > means either handling for '(lib ...) module specifications is
 > > missing from this cond, or the documentation is wrong in saying that
 > > '(lib ...) can be used.
 > 
 > 1. The `else' branch has an error, perhaps you were looking at an
 >    older version.  (To check the recent one, see
 >    http://svn.plt-scheme.org/plt/trunk/collects/mzlib/sandbox.svn)
 > 
 > 2. Yes, it should have not raised an error for a `(lib ...)' spec, I
 >    fixed that.
 > 
 > 3. The error that you see is becaue you used a bad `lib' spec.
 >    Testing for these things is difficult, and if I add the code, the
 >    only difference is that you will see a different error message.
 > 
 
 I did say the else branch.  The latest SVN revision (5912) of
 trunk/collects/mzlib/sandbox.ss procedure `require-perms' still has a
 buggy cond else branch:
 
 [else 'require-perms "bad language spec: ~e" language])]
 
 which looks like it should be wrapped in (error ...) and which was
 causing the contract to get the car of `language' before 'lib was added
 to the (memq (car language) '(lib file planet)) cond branch, which is
 why I used '(lib anything) which wasn't clear of me.
 
 I just checked-out and built the latest trunk (revision 5918) and this
 else branch is still causing the same bug:
 
 Welcome to MzScheme v369.9 [3m], Copyright (c) 2004-2007 PLT Scheme Inc.
 > (require (lib "sandbox.ss"))
 > (define ev
     (make-evaluator '(oops blah) '()))
 (lib "sandbox.ss") broke the contract 
   (->
    module-path-v?
    (or/c (-> path-string?) path-string? false/c)
    path?)
 on resolve-module-path; expected <module-path-v?>, given: oops
 
  === context ===
 /home/d/t2/plt/collects/mzlib/private/contract-guts.ss:196:2: raise-contract-error
 resolve-module-path
 /home/d/t2/plt/collects/mzlib/sandbox.ss:150:34
 /home/d/t2/plt/collects/mzlib/sandbox.ss:144:2: module-specs->non-lib-paths
 /home/d/t2/plt/collects/mzlib/sandbox.ss:128:2: module-specs->path-permissions
 /home/d/t2/plt/collects/mzlib/sandbox.ss:529:4: make-evaluator
 
 
 Whereas now that 'lib was added:
 
 > (define ev
     (make-evaluator '(lib anything) '()))
 require: bad module path in: (lib anything)
 
 === context ===
 /home/d/t2/plt/collects/mzlib/sandbox.ss:186:29
 
 
 Thanks for making sandbox and thanks for all your work making the best
 programming system ever! 
 
 -- 
 : Derick
 ----------------------------------------------------------------
 
From: Eli Barzilay <eli@barzilay.org>
To: Derick Eddington <derick.eddington@gmail.com>
Cc: bugs@plt-scheme.org
Subject: Re: [plt-bug] all/8597: (lib "sandbox.ss") make-evaluator language
	'(lib ...) problem
Date: Tue, 10 Apr 2007 18:59:07 -0400

 On Apr 10, Derick Eddington wrote:
 > 
 > I did say the else branch.  The latest SVN revision (5912) of
 > trunk/collects/mzlib/sandbox.ss procedure `require-perms' still has
 > a buggy cond else branch:
 > 
 > [else 'require-perms "bad language spec: ~e" language])]
 > 
 > which looks like it should be wrapped in (error ...)
 
 Yes, I misread your original report, sorry.  Fixed now.
 
 
 > Thanks for making sandbox and thanks for all your work making the best
 > programming system ever! 
 
 That's nice to hear -- thanks again.
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                   http://www.barzilay.org/                 Maze is Life!

Responsible changed from "nobody" to "eli" by eli at Tue, 10 Apr 2007 20:58:37 -0400
Reason>>> sandbox

State changed from "open" to "closed" by eli at Tue, 10 Apr 2007 20:58:37 -0400
Reason>>> Fixed.

