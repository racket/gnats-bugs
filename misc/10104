From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Mon Mar  2 21:45:46 2009
Received: from rv-out-0506.google.com (rv-out-0506.google.com [209.85.198.233])
	by champlain.ccs.neu.edu (8.14.2/8.14.2) with ESMTP id n232jZMZ016656
	for <bugs@bugs.plt-scheme.org>; Mon, 2 Mar 2009 21:45:36 -0500
Message-Id: <200903030245.n232jXq3016650@champlain.ccs.neu.edu>
Date: Mon, 2 Mar 2009 21:45:33 -0500
From: pnkfelix@ccs.neu.edu
To: bugs@plt-scheme.org
Subject: What is input to points in PLoT library?

>Number:         10104
>Category:       misc
>Synopsis:       What is input to points in PLoT library?
>Class:          doc-bug
>Responsible:    ntoronto
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Mon Mar 02 21:48:01 -0500 2009
>Closed-Date:    Wed Oct 05 23:03:17 -0400 2011
>Last-Modified:  Wed Oct 05 23:03:17 -0400 2011
>Originator:     Felix Klock
>Organization:
plt
>Submitter-Id:   unknown
>Release:        4.1.4
>Environment:
macosx "Darwin Chimaera.local 9.6.0 Darwin Kernel Version 9.6.0: Mon Nov 24 17:37:00 PST 2008; root:xnu-1228.9.59~1/RELEASE_I386 i386 i386" (i386-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 136948960

Collections:
(("/Users/pnkfelix/Library/PLT Scheme/4.1.4/collects" non-existent-path) ("/Applications/PLT Scheme v4.1.4/collects" "2htdp" "afm" "algol60" "browser" "combinator-parser" "compiler" "config" "defaults" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "help" "hierlist" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profj" "r5rs" "r6rs" "readline" "redex" "rnrs" "s-exp" "scheme" "scribble" "scribblings" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tex2page" "texpict" "trace" "typed" "typed-scheme" "version" "web-server" "wxme" "xml"))
Computer Language: (("Module") (#(#t write mixed-fraction-e #f #t debug) (default) #() "#lang scheme\n" #t))
>Description:
In the PLoT library, 
the contract for points is listed as:
>    (points vecs [#:sym sym #:color color])
>  â†’ ((is-a?/c 2d-view%) . -> . void?)
>   vecs : (listof (vector/c real? real?))
>   sym : (or/c character? integer? symbol?) = 'fullsquare
>   color : plot-color? = 'black

but in the Quick Start section 
of the PLoT documentation, the first usage of points 
is written:

> Discrete data, such as
> 
>   (define data (list (vector 1 1 2)
>                      (vector 2 2 2)))
> 
> can be interpreted in several ways:
> 
> As points: (plot (points data))

So what does points take?  A [Listof (vector Num Num)]?
A [Listof (vector Num Num Num)]?  Or a 
(list (vector x_1 x_2 ... x_n) (vector y_1 y_2 ... y_n)) ?

Or am I to infer from the docs that the points procedure
silently ignores any extra elements on the vector?


(I am making a quick attempt to write a Typed Scheme 
wrapper module around PLoT, but issues like this flummox me.
Well, not as much as other issues, but still.)
>How-To-Repeat:
>Fix:
>Audit-Trail:
From: Eli Barzilay <eli@barzilay.org>
To: pnkfelix@ccs.neu.edu, bugs@plt-scheme.org
Cc: samth@plt-scheme.org
Subject: Re: [plt-bug] all/10104: What is input to points in PLoT library?
Date: Mon, 2 Mar 2009 21:58:29 -0500

 On Mar  2, pnkfelix@ccs.neu.edu wrote:
 > In the PLoT library,=20
 > the contract for points is listed as:
 > >    (points vecs [#:sym sym #:color color])
 > >  =1B,Ab=86=92=1B(B ((is-a=3F/c 2d-view%) . -> . void=3F)
 > >   vecs : (listof (vector/c real=3F real=3F))
 > >   sym : (or/c character=3F integer=3F symbol=3F) =3D 'fullsquare
 > >   color : plot-color=3F =3D 'black
 >=20
 > but in the Quick Start section of the PLoT documentation, the first
 > usage of points is written:
 >=20
 > > Discrete data, such as
 > >=20
 > >   (define data (list (vector 1 1 2)
 > >                      (vector 2 2 2)))
 > >=20
 > > can be interpreted in several ways:
 > >=20
 > > As points: (plot (points data))
 >=20
 > So what does points take=3F  A [Listof (vector Num Num)]=3F  A [Listo=
 f
 > (vector Num Num Num)]=3F  Or a (list (vector x=5F1 x=5F2 ... x=5Fn) (=
 vector
 > y=5F1 y=5F2 ... y=5Fn)) =3F
 >=20
 > Or am I to infer from the docs that the points procedure silently
 > ignores any extra elements on the vector=3F
 
 After a brief look at the code, I see `vector-x', `vector-y', and
 `vector-z' -- which access a vector's 0th 1st and 2nd elements.  So my
 guess is that extra items in the vector are silently ignored, which is
 probably good to fix in the typed version.  But it might be that some
 data sets can be used either in 2d or as 3d, so perhaps allow both.
 
 I'm the "maintainer", but only by inheritance, so you probably know
 much more about it now.  Feel free to send me patches for the docs or
 other broken things that you see.
 
 
 > (I am making a quick attempt to write a Typed Scheme wrapper module
 > around PLoT, but issues like this flummox me.  Well, not as much as
 > other issues, but still.)
 
 I wouldn't be surprised if you see other such things.
 
 --=20
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay=
 :
                   http://www.barzilay.org/                 Maze is Life=
 !

Responsible changed from "nobody" to "ntoronto" by eli at Wed, 05 Oct 2011 01:49:58 -0400
Reason>>> plot


State changed from "open" to "closed" by ntoronto at Wed, 05 Oct 2011 23:03:17 -0400
Reason>>> The plot library rewrite changes the contract to (listof
(vector/c real? real?)) - actual and documented. The
plot/compat module's version of points has (listof (vectorof
real?)), which should have been the contract all along.
Felix is correct; it had always silently ignored extra
elements in the vector.

