From sk@cs.brown.edu  Sat Dec  1 00:01:29 2001
Received: from localhost (localhost.localdomain [127.0.0.1])
	by champlain.ccs.neu.edu (8.9.3/8.8.7) with ESMTP id AAA30505
	for <plt-gnats>; Sat, 1 Dec 2001 00:01:29 -0500
Message-Id: <200112010501.AAA30505@champlain.ccs.neu.edu>
Date: Sat, 1 Dec 2001 00:01:29 -0500
From: sk@cs.brown.edu
To: bugs@plt-scheme.org
Subject: plist library -- wotz dat?

>Number:         5065
>Category:       misc
>Synopsis:       plist library -- wotz dat?
>Confidential:   no
>Severity:       non-critical
>Priority:       medium
>Responsible:    clements
>State:          closed
>Class:          doc-bug
>Submitter-Id:   unknown
>Arrival-Date:   Sat Dec 01 00:10:00 EST 2001
>Closed-Date:    Tue Dec 04 14:44:08 EST 2001
>Last-Modified:  Tue Dec 04 14:44:08 EST 2001
>Originator:     Shriram Krishnamurthi
>Release:        200alpha1
>Organization:
titan
>Environment:
windows "Windows NT 5.0 (Build 2195) Service Pack 2" (win32\i386) (get-display-depth) = 32
Tools: "collection-path: collection \"drscheme\" does not have sub-collection: \"tools\" in: \"c:\\\\progra~1\\\\plt\\\\.\\\\collects\\\\setup\\\\..\\\\..\\\\collects\\\\drscheme\""
Docs Installed:
("help" "mzscheme" "mzlib" "r5rs" "icons" "drscheme" "teachpack" "misclib" "beginning" "beginning-abbr" "intermediate" "intermediate-lambda" "advanced" "mred" "t-y-scheme")
Collections: 
(("c:\\progra~1\\plt\\.\\collects\\setup\\..\\..\\collects" ("browser" "compiler" "defaults" "drscheme" "dynext" "errortrace" "framework" "games" "graphics" "help" "hierlist" "htdp" "html" "icons" "lang" "launcher" "make" "mred" "mzlib" "mzscheme" "net" "setup" "string-constants" "syntax" "parser-tools" "xml" "slibinit" "afm" "version" "eopl" "web-server" "doc")))
Human Language: English
>Description:
The auto-generated documentation tip (the one in green)
for the XML library says that to load
it, you can require the "plist" library.  But in fact
requiring that doesn't give you any of the XML library
functions, which can be very confusing to a user.

I also can't tell what the heck this PList library is,
or what it's doing in the documentation of the XML
library.  The doc very helpfully says,

 The PList library provides the ability to read and write xml documents which 
 conform to the "plist" DTD, used to store 'dictionaries' of string - value
 associations.

which, uh, tells me a lot.  Furthermore, the test exprs
at the end of the lib say nothing about the expected
*output* of those expressions!
>How-To-Repeat:
Search for "xml" in Help Desk.
Click on "XML" link.
See green text at top.
PList is documented at end of that doc.
>Fix:

>Release-Note:

>Audit-Trail:

From: John Clements <clements@brinckerhoff.org>
To: bugs@plt-scheme.org, sk@cs.brown.edu
Cc: plt-design@ccs.neu.edu
Subject: Re: all/5065: plist library -- wotz dat?
Date: Sun, 2 Dec 2001 09:47:51 -0500

 Okay, here's the big picture/historical info: Apple uses a particular 
 XML language, what they call PLists, to store information.  They 
 specify this with a DTD, and they provide OS library functions for 
 reading, writing, and locating these plists.  To use them, I wrote a 
 little library on top of the xml collection to read and write them, 
 as you can see.
 
 So the question becomes, where do you hang this code? It's used in 
 several different places, so it probably belongs in a globally 
 visible place.  OTOH, I don't want to create another collection... I 
 feel like we have lots already.  So, since it's an XML language, I 
 stuck it in the XML collection.  I realize this solution is not an 
 ideal one.
 
 >The auto-generated documentation tip (the one in green)
 >for the XML library says that to load
 >it, you can require the "plist" library.  But in fact
 >requiring that doesn't give you any of the XML library
 >functions, which can be very confusing to a user.
 
 In my help desk, the text at the top says (from info.ss):
 
    (define help-desk-message "Mz/Mr: (require (lib \"xml.ss\" 
 \"xml\")) or (require (lib \"p
 list.ss\" \"xml\"))")
 
 This is the best I could do in one line of text.
 
 >I also can't tell what the heck this PList library is,
 >or what it's doing in the documentation of the XML
 >library.  The doc very helpfully says,
 >
 >  The PList library provides the ability to read and write xml documents which
 >  conform to the "plist" DTD, used to store 'dictionaries' of string - value
 >  associations.
 
 Aside from the historical context, this still seems to me to be a 
 fairly complete description of what the library does.
 
 >which, uh, tells me a lot.  Furthermore, the test exprs
 >at the end of the lib say nothing about the expected
 >*output* of those expressions!
 
 Frankly, the output of those expressions (by which I assume you mean 
 the concrete XML syntax) doesn't really matter; it happens to be 
 relatively human-readable, but that's fairly unimportant. You're not 
 going to use it to generate readable output; you're going to use it 
 to write prefs files and such.
 
 The big issue is where to put this code.  I'm open to suggestions.
 
 
 john
 
 -- 

From: Shriram Krishnamurthi <sk@cs.brown.edu>
To: bugs@plt-scheme.org, plt-design@ccs.neu.edu
Cc:  
Subject: Re: all/5065: plist library -- wotz dat?
Date: Tue, 4 Dec 2001 13:58:22 -0500 (EST)

 John Clements wrote:
 
 > So the question becomes, where do you hang this code? It's used in 
 > several different places, so it probably belongs in a globally 
 > visible place.  OTOH, I don't want to create another collection... I 
 > feel like we have lots already.  So, since it's an XML language, I 
 > stuck it in the XML collection.  I realize this solution is not an 
 > ideal one.
 
 I don't mind if it's in the same file as the XML collection (though,
 surely, it could provide a little more information for non-Mac people
 saying, in effect, "nothing for you here -- only for Mac folks").  I
 do mind the incorrect documentation.  PList is a minor concern of
 mine, while XML is a major concern.  Making it difficult to get the
 XML lib at the expense of making it not much easier to get the PList
 library is a definite no-no.
 
 > Frankly, the output of those expressions (by which I assume you mean 
 > the concrete XML syntax) doesn't really matter; it happens to be 
 > relatively human-readable, but that's fairly unimportant. You're not 
 > going to use it to generate readable output; you're going to use it 
 > to write prefs files and such.
 
 Again, documentation issue.
 
 Shriram
Responsible-Changed-From-To: steck->clements
Responsible-Changed-By: clements
Responsible-Changed-When: Tue Dec  4 14:44:08 2001
Responsible-Changed-Why:
    I made the changes.
State-Changed-From-To: open->closed
State-Changed-By: clements
State-Changed-When: Tue Dec  4 14:44:08 2001
State-Changed-Why:
    I fixed the documentation
>Unformatted:

