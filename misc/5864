From robby@cs.rice.edu  Mon Sep 30 12:22:56 2002
Received: from localhost (IDENT:root@localhost.localdomain [127.0.0.1])
	by champlain.ccs.neu.edu (8.9.3/8.8.7) with ESMTP id MAA02764
	for <bugs>; Mon, 30 Sep 2002 12:22:55 -0400
Message-Id: <200209301622.MAA02764@champlain.ccs.neu.edu>
Date: Mon, 30 Sep 2002 12:22:55 -0400
From: Robert Bruce Findler <robby@cs.rice.edu>
To: bugs@plt-scheme.org
Subject: extracting structure from syntax objects and rebuilding the syntax objects

>Number:         5864
>Category:       misc
>Synopsis:       extracting structure from syntax objects and rebuilding the syntax objects
>Class:          change-request
>Responsible:    steck
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Mon Sep 30 12:30:00 -0400 2002
>Closed-Date:    Thu Apr 24 14:27:00 -0400 2003
>Last-Modified:  Fri May 02 22:27:29 -0400 2008
>Originator:     Robert Bruce Findler
>Organization:
plt
>Submitter-Id:   unknown
>Release:        202.3
>Environment:
macosx "Darwin taitung.cs.uchicago.edu 5.5 Darwin Kernel Version 5.5: Thu May 30 14:51:26 PDT 2002; root:xnu/xnu-201.42.3.obj~1/RELEASE_PPC  Power Macintosh powerpc" (ppc-macosx)

Docs Installed:
("advanced" "beginning" "beginning-abbr" "drscheme" "framework" "help" "insidemz" "intermediate" "intermediate-lambda" "misclib" "mred" "mzc" "mzlib" "mzscheme" "r5rs" "t-y-scheme" "test.html" "tex2page" "tools" "tour")

Collections:
(("/Users/robby/cvs/exp/plt/bin/../MrEd.app/Contents/MacOS/../../../collects" ("afm" "algol60" "browser" "compiler" "CVS" "cvs-time-stamp" "defaults" "doc" "drscheme" "dynext" "eopl" "errortrace" "framework" "games" "graphics" "help" "hierlist" "htdp" "html" "icons" "lang" "launcher" "make" "mrdemo" "mred" "mrflow" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "parser-tools" "readline" "setup" "sirmail" "slatex" "slibinit" "srpersist" "stepper" "string-constants" "syntax" "tests" "tex2page" "texpict" "typeset" "version" "waterworld" "web-server" "xml")))

Human Language: english
>Description:
Right now, the expander is the only one (afaict) that
can create a generic syntax object from basic data
values.

In order to do a good job making a syntax object browser
(for the REPL in drscheme), many more operations on
syntax objects are needed. Here are some that come to
mind: the lexical information, the setting the module
source, finding out what properties are set on an object.

Basically, I'd need to be able to take a syntax object
to string and back again (to support copy/paste of the
snips that represent the syntax object)
>How-To-Repeat:
>Fix:
>Release-Note:
>Audit-Trail:
From: Paul Graunke <ptg@ccs.neu.edu>
To: Robert Bruce Findler <robby@cs.rice.edu>
Cc: bugs@plt-scheme.org
Subject: Re: all/5864: extracting structure from syntax objects and rebuilding the syntax objects
Date: Mon, 30 Sep 2002 14:48:18 -0400 (EDT)

 There are issues with copying (parts of) syntax objects, aren't there?
 For example, consider a module that exports a macro that expands into
 an expression that refers to a non-exported function. Then someone
 could print the expansion and copy and paste the reference to the
 non-exported function into the right-hand-side of (define f <paste>).
 
 Maybe they should just be able to copy the whole thing but not pieces
 of it? Maybe it's broken already? Maybe when you're debugging with
 DrScheme you don't care about protecting non-exported stuff since
 development environments are supposed to let progammers poke
 everything. On the other hand, DrScheme does need to protect itself.
 
 I'm just a little concerned about setting which module something came
 from.
 
 Paul
 
 At Mon, 30 Sep 2002 12:22:55 -0400, Robert Bruce Findler wrote:
 > You may claim or edit this problem report at
 > 
 > https://internal.plt-scheme.org/cgis-
 > bin/gnatsweb.pl?cmd=edit&pr=5864&database=plt
 > 
 > >Number:         5864
 > >Category:       all
 > >Synopsis:       extracting structure from syntax objects and rebuilding the 
 > syntax objects
 > >Confidential:   no
 > >Severity:       serious
 > >Priority:       medium
 > >Responsible:    steck
 > >State:          open
 > >Class:          change-request
 > >Submitter-Id:   unknown
 > >Arrival-Date:   Mon Sep 30 12:30:00 EDT 2002
 > >Closed-Date:
 > >Last-Modified:
 > >Originator:     Robert Bruce Findler
 > >Release:        202.3
 > >Organization:
 > plt
 > >Environment:
 > macosx "Darwin taitung.cs.uchicago.edu 5.5 Darwin Kernel Version 5.5: Thu May 
 > 30 14:51:26 PDT 2002; root:xnu/xnu-201.42.3.obj~1/RELEASE_PPC  Power Macintosh 
 > powerpc" (ppc-macosx)
 > 
 > Docs Installed:
 > ("advanced" "beginning" "beginning-abbr" "drscheme" "framework" "help" 
 > "insidemz" "intermediate" "intermediate-lambda" "misclib" "mred" "mzc" "mzlib" 
 > "mzscheme" "r5rs" "t-y-scheme" "test.html" "tex2page" "tools" "tour")
 > 
 > Collections:
 > (("/Users/robby/cvs/exp/plt/bin/../MrEd.app/Contents/MacOS/../../../collects" 
 > ("afm" "algol60" "browser" "compiler" "CVS" "cvs-time-stamp" "defaults" "doc" 
 > "drscheme" "dynext" "eopl" "errortrace" "framework" "games" "graphics" "help" 
 > "hierlist" "htdp" "html" "icons" "lang" "launcher" "make" "mrdemo" "mred" 
 > "mrflow" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "parser-tools" 
 > "readline" "setup" "sirmail" "slatex" "slibinit" "srpersist" "stepper" "string-
 > constants" "syntax" "tests" "tex2page" "texpict" "typeset" "version" 
 > "waterworld" "web-server" "xml")))
 > 
 > Human Language: english
 > >Description:
 > Right now, the expander is the only one (afaict) that
 > can create a generic syntax object from basic data
 > values.
 > 
 > In order to do a good job making a syntax object browser
 > (for the REPL in drscheme), many more operations on
 > syntax objects are needed. Here are some that come to
 > mind: the lexical information, the setting the module
 > source, finding out what properties are set on an object.
 > 
 > Basically, I'd need to be able to take a syntax object
 > to string and back again (to support copy/paste of the
 > snips that represent the syntax object)
 > >How-To-Repeat:
 > 
 > >Fix:
 > >Release-Note:
 > >Audit-Trail:
 > >Unformatted:
 

From: Robert Bruce Findler <robby@cs.uchicago.edu>
To: Paul Graunke <ptg@ccs.neu.edu>
Cc: bugs@plt-scheme.org, mflatt@cs.utah.edu
Subject: Re: all/5864: extracting structure from syntax objects and rebuilding the syntax objects
Date: Mon, 30 Sep 2002 15:06:09 -0500 (CDT)

 I think that once we've given away "eval" and/or "expand" it's really
 hard to get back.
 
 How about this:
 
 (define (make-up-syntax module-name) 
    (syntax-cadddr (expand `(module ,module-name mzscheme  ...)))
 
 Like you say, we need this to do a good job in the dev env. We also
 need to come up wit things like custodian to protect ourselves. That's
 what makes it all fun!
 
 Robby
State-Changed-From-To: open->closed
State-Changed-By: robby
State-Changed-When: Thu Apr 24 14:27:00 2003
State-Changed-Why:
    matthew told me in person: use compile.
>Unformatted:
