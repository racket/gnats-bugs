From nobody@cs.rice.edu  Mon Feb  8 18:32:16 1999
Received: from web.cs.rice.edu (web.cs.rice.edu [128.42.1.163])
	by cs.rice.edu (8.9.0/8.9.0) with ESMTP id SAA19101
	for <plt-gnats@cs.rice.edu>; Mon, 8 Feb 1999 18:32:16 -0600 (CST)
Message-Id: <199902090032.SAA11319@web.cs.rice.edu>
Date: Mon, 8 Feb 1999 18:32:15 -0600 (CST)
From: ajt@resmel.bhp.com.au
Reply-To: ajt@resmel.bhp.com.au
To: plt-gnats@cs.rice.edu
Subject: mzscheme.init bombs with slib2c5 

>Number:         875
>Category:       misc
>Synopsis:       mzscheme.init bombs with slib2c5
>Confidential:   no
>Severity:       non-critical
>Priority:       low
>Responsible:    mflatt
>State:          closed
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Tue Feb  9 00:45:03 GMT 1999
>Last-Modified:  Thu Apr 22 11:25:17 CDT 1999
>Originator:     Andrew Telford
>Organization:
titan
>Release:        100alpha1
>Environment:
MS Windows NT
>Description:
In distributed mzscheme compatibility file, in-vicinity is
defined as build-path.

The trouble is that when building a path
to usercat in  slib's require.scm, we effectively get

  (build-path "" "usercat")

Which supposed to build a path to a catalog file .\usercat.

But build-path does not accept a null string as the first argument.

Should (build-path "" ...) be the same as (build-path 'same ..) ?

Workaround for mzscheme.init
(define in-vicinity 
  (lambda (path ext)
    (cond ((equal? "" path)
	   (build-path 'same ext))
	  (else (build-path path ext)))))


>How-To-Repeat:

>Fix:

>Audit-Trail:

Responsible-Changed-From-To: steck->mflatt
Responsible-Changed-By: mflatt
Responsible-Changed-When: Thu Apr 22 11:21:57 1999
Responsible-Changed-Why:

State-Changed-From-To: open-closed
State-Changed-By: mflatt
State-Changed-When: Thu Apr 22 11:22:01 1999
State-Changed-Why:

>Unformatted:
