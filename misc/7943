From apache@plt-scheme.org Wed Mar  8 10:07:05 2006
Received: from champlain.ccs.neu.edu (champlain.ccs.neu.edu [127.0.0.1])
	by champlain.ccs.neu.edu (8.12.10/8.12.10) with ESMTP id k28F73Y1022458
	for <bugs@plt-scheme.org>; Wed, 8 Mar 2006 10:07:03 -0500
Message-Id: <200603081507.k28F73BX022456@champlain.ccs.neu.edu>
Date: Wed, 8 Mar 2006 10:07:03 -0500
From: cobbe@ccs.neu.edu
To: bugs@plt-scheme.org
Subject: arrow contracts don't give good error messages on arity errors

>Number:         7943
>Category:       misc
>Synopsis:       arrow contracts don't give good error messages on arity errors
>Class:          sw-bug
>Responsible:    robby
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Wed Mar 08 10:10:01 -0500 2006
>Last-Modified:  Tue Mar 21 00:15:33 -0500 2006
>Originator:     Richard Cobbe
>Organization:
plt
>Submitter-Id:   unknown
>Release:        301.9-svn8mar2006
>Environment:
mac-ppc-osx
>Description:
Invoking a contracted function with the wrong number of arguments gives an arity error, rather than a contract error.  What's worse, in this case adding the contract actually *removes* information from the error message, as the resulting error doesn't contain either the name of the function being applied or source location information of the invalid application.
>How-To-Repeat:
Pretty Big Language:

(module a mzscheme
  
  (require (lib "contract.ss"))
  
  (define f (lambda (x) x))
  
  (provide f)
  #;(provide/contract [f (integer? . -> . integer?)]))

(module b mzscheme
  
  (require a)
  
  (f 3 4))

Hit execute, then (require b).  Since there's no contract, you'll get a standard DrScheme arity error with the name of the function, and the incorrect application of f in b's body will be highlighted.

Now comment out the (provide f) form, uncomment the (provide/contract ...) form, re-execute, and re-require b.  You will again get an arity error (rather than a contract error), but this one is even worse than the previous one: no function name and no source highlighting.
>Fix:
the name problem was fixed by properly
getting the name from the context in the
-> contract and transmitting it in provide/contract.
>Release-Note:
this was not a contract violation
and arguably not a bug, but that is
a bit of a slipperly slope.
>Audit-Trail:
From: Robby Findler <robby@cs.uchicago.edu>
To: cobbe@ccs.neu.edu, bugs@plt-scheme.org
Cc: nobody@plt-scheme.org, eli@barzilay.org, matthias@ccs.neu.edu,
        sk@cs.brown.edu, mflatt@cs.utah.edu, gnats@brinckerhoff.org,
        jay@kenyamountain.com, meunier@ccs.neu.edu, sowens@cs.utah.edu,
        kathyg@cs.utah.edu, awick@cs.utah.edu, goldberg@cs.utah.edu,
        dskippy@ccs.neu.edu, jacobm@cs.uchicago.edu, cce@ccs.neu.edu
Subject: Re: all/7943: arrow contracts don't give good error messages on arity errors
Date: Wed, 8 Mar 2006 09:34:29 -0600

 This has come up multiple times before. I'm not sure, but I thought
 Richard is the one who brought it up most recently (but I must be
 mistaken about that one).
 
 Anyways, my current position is that this is a contract violation of
 the application operator -- it is not a violation of the function's
 contract, so the error message is correct. The arity checks associated
 with a contract are the responsibility of the function itself (ie, a
 contract with arity 4 means only that the function must be able to
 accept 4 arguments).
 
 I can kind of make a hack around this, at the cost of making every
 function call to a contracted function be like a variable arity
 function call (ie, far too expensive). If you have better ideas, please
 share.
 
 As far as the naming issue goes, I've been trying to figure out a way
 to make that work, but without success so far (again, without imposing
 a significant performance penalty but a different one this time).
 
 Robby
 
From: "Carl Eastlund" <carl.eastlund@gmail.com>
To: "Robby Findler" <robby@cs.uchicago.edu>
Cc: cobbe@ccs.neu.edu, bugs@plt-scheme.org, nobody@plt-scheme.org,
        eli@barzilay.org, matthias@ccs.neu.edu, sk@cs.brown.edu,
        mflatt@cs.utah.edu, gnats@brinckerhoff.org, jay@kenyamountain.com,
        meunier@ccs.neu.edu, sowens@cs.utah.edu, kathyg@cs.utah.edu,
        awick@cs.utah.edu, goldberg@cs.utah.edu, dskippy@ccs.neu.edu,
        jacobm@cs.uchicago.edu
Subject: Re: all/7943: arrow contracts don't give good error messages on arity errors
Date: Wed, 8 Mar 2006 10:45:02 -0500

 So how do we make a contract, and get blame, for arity violations? 
 How do we write a contract that really does enforce arity?
 
 On 3/8/06, Robby Findler <robby@cs.uchicago.edu> wrote:
 > This has come up multiple times before. I'm not sure, but I thought
 > Richard is the one who brought it up most recently (but I must be
 > mistaken about that one).
 >
 > Anyways, my current position is that this is a contract violation of
 > the application operator -- it is not a violation of the function's
 > contract, so the error message is correct. The arity checks associated
 > with a contract are the responsibility of the function itself (ie, a
 > contract with arity 4 means only that the function must be able to
 > accept 4 arguments).
 >
 > I can kind of make a hack around this, at the cost of making every
 > function call to a contracted function be like a variable arity
 > function call (ie, far too expensive). If you have better ideas, please
 > share.
 >
 > As far as the naming issue goes, I've been trying to figure out a way
 > to make that work, but without success so far (again, without imposing
 > a significant performance penalty but a different one this time).
 >
 > Robby
 
From: Robby Findler <robby@cs.uchicago.edu>
To: "Carl Eastlund" <carl.eastlund@gmail.com>
Cc: cobbe@ccs.neu.edu, bugs@plt-scheme.org, nobody@plt-scheme.org,
        eli@barzilay.org, matthias@ccs.neu.edu, sk@cs.brown.edu,
        mflatt@cs.utah.edu, gnats@brinckerhoff.org, jay@kenyamountain.com,
        meunier@ccs.neu.edu, sowens@cs.utah.edu, kathyg@cs.utah.edu,
        awick@cs.utah.edu, goldberg@cs.utah.edu, dskippy@ccs.neu.edu,
        jacobm@cs.uchicago.edu
Subject: Re: all/7943: arrow contracts don't give good error messages on arity errors
Date: Wed, 8 Mar 2006 10:47:40 -0600

 At Wed, 8 Mar 2006 10:45:02 -0500, "Carl Eastlund" wrote:
 > So how do we make a contract, and get blame, for arity violations? 
 > How do we write a contract that really does enforce arity?
 
 (I'm not sure I understood you question, so I've written the below with
 my best guess.)
 
 If you wish to ensure you only get procedures of a certain arity, write
 contracts that have that arity. For example, my function `f' can only
 accept procedures that have arity one:
 
   (module m mzscheme
     (require (lib "contract.ss"))
     (provide/contract [f (-> (-> integer? integer?) integer?)])
     (define (f g) (g 0)))
 
 so the call in the body of `f' is guaranteed not to fail the contract
 associated with the application operator (ie, apply's contract states
 that the number of arguments it receives matches the arity of the
 function it receives). If, on the other hand, I had written:
 
   (module m mzscheme
     (require (lib "contract.ss"))
     (provide/contract [f (-> (-> integer? integer?) integer?)])
     (define (f g) (g 0 1)))
 
 Then there would be a contract violation on the application in the body
 of `f' and the blame would lie with `m' (and rightly so, imo). Just as
 if I had written:
 
   (module m mzscheme
     (require (lib "contract.ss"))
     (provide/contract [f (-> (-> integer? integer?) integer?)])
     (define (f g) (+ g 0)))
 
 the contract violation would be associated with the use of + and the
 blame would fall on `m'.
 
 Robby
 
From: Robby Findler <robby@cs.uchicago.edu>
To: cobbe@ccs.neu.edu
Cc: bugs@plt-scheme.org, nobody@plt-scheme.org, eli@barzilay.org,
        matthias@ccs.neu.edu, sk@cs.brown.edu, mflatt@cs.utah.edu,
        gnats@brinckerhoff.org, jay@kenyamountain.com, meunier@ccs.neu.edu,
        sowens@cs.utah.edu, kathyg@cs.utah.edu, awick@cs.utah.edu,
        goldberg@cs.utah.edu, dskippy@ccs.neu.edu, jacobm@cs.uchicago.edu,
        "Carl Eastlund" <carl.eastlund@gmail.com>
Subject: Re: all/7943: arrow contracts don't give good error messages on arity errors
Date: Wed, 8 Mar 2006 11:27:29 -0600

 After a little investigation (and some second thoughts!), I found the
 bug that led to the procedure not having a name. I can't get good names
 in all cases, but the case that Richard points out in the second part
 of his PR should work (and it does now). (I also found a few other
 cases with the opt-> contracts that were broken and they also now
 work.)
 
 Sorry for the earlier confusion.
 
 Robby

Responsible changed from "nobody" to "robby" by eli at Thu, 16 Mar 2006 00:55:54 -0500
Reason>>> contracts


State changed from "open" to "closed" by robby at Tue, 21 Mar 2006 00:15:33 -0500
Reason>>> fixed the name problem and released to SVN.

