From apache@plt-scheme.org Mon Jan 31 12:56:24 2005
Received: from champlain.ccs.neu.edu (champlain.ccs.neu.edu [127.0.0.1])
	by champlain.ccs.neu.edu (8.12.10/8.12.10) with ESMTP id j0VHuNnN029331
	for <bugs@plt-scheme.org>; Mon, 31 Jan 2005 12:56:23 -0500
Message-Id: <200501311756.j0VHuNHM029329@champlain.ccs.neu.edu>
Date: Mon, 31 Jan 2005 12:56:23 -0500
From: awuersch@siac.com
To: bugs@plt-scheme.org
Subject: (pregexp-match-positions) should respect "^" and "$" in matching substrings

>Number:         7220
>Category:       misc
>Synopsis:       (pregexp-match-positions) should respect "^" and "$" in matching substrings
>Class:          sw-bug
>Responsible:    dorai
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Mon Jan 31 13:00:00 -0500 2005
>Last-Modified:  Mon May 02 14:40:05 -0400 2005
>Originator:     Toni Wuersch
>Organization:
plt
>Submitter-Id:   unknown
>Release:        299.27-cvs13jan2005
>Environment:
linux-other
>Description:
(pregexp-match-positions pattern string start end) should match iff
(pregexp-match-positions pattern (substring string start end)) matches.

But "^" and "$" in [pattern] are rejected in the first case based on
[string] rather than [(substring string start end)].

A bug, no?
>How-To-Repeat:
[1] (pregexp-match-positions "^yyy$" "xxx yyy" 4 7) => #f
[2] (pregexp-match-positions "^yyy$" (substring "xxx yyy" 4 7)) => ((0 . 3))

Since [2] matches, [1] should match and return ((4 . 7))
>Fix:
>Audit-Trail:
Responsible changed from "nobody" to "dorai" by eli at Tue, 01 Feb 2005 19:58:10 -0500
Reason>>> pregexp


State changed from "open" to "analyzed" by jay at Sun, 24 Apr 2005 20:12:18 -0400
Reason>>> I can't convince myself that this is a bug.  I find MzScheme's
regexp-match-positions works the way the bug reporter wants, but it seems
like a loss of good info to me at this point.  I'll possibly cave later.

http://list.cs.brown.edu/mailman/private/plt-internal/2005-April/
008894.html

From: Anthony Wuersch <awuersch@siac.com>
To: bugs@plt-scheme.org
Cc: dorai@ccs.neu.edu, eli@plt-scheme.org, jay@kenyamountain.com
Subject: Re: misc/7220 (pregexp-match-positions) should respect "^" and "$" in matching substrings
Date: Mon, 02 May 2005 12:25:40 -0400

 The use case where I sought to have "^" and "$" applied to a substring 
 of a regexp was a project to look at log file lines generated by various 
 tools and parse these lines using a tree of regular expressions to guide 
 parsing.
 
 For instance, if a line started with a log-tool-imposed prefix, define a 
 simple regexp for a prefix followed by whatever, and then seek to match 
 one from a list of regexps for the substring matching "whatever".
 
 I wanted to use match-pos representation, so not too many strings get 
 created and destroyed.
 
 But what if there are start-end barriers in the pattern at one or the 
 other end of a substring?
 
 For instance, say a log line is of the form "05-June-2005 12:13:00 
 [thread: main] message".  A first regexp could be "^05-June-2005 
 12:13:00 (.*)$".  A second regexp could be "^[thread: (.*)] (.*)$".  In 
 match-pos representation one would want to match "^[thread: (.*)] (.*)$" 
 against the substring matched by the "^05-June-2005 12:13:00 (.*)$" 
 regexp, say (22 . 44) in the log line "05-June-2005 12:13:00 [thread: 
 main] message".
 
 Alas the "^" in the second regexp doesn't match before "[", it matches 
 only the start of the entire string.  So I can't do tree-guided regexp 
 parsing and use start-end barriers in substrings unless I do substring 
 extraction and offset adjustment, which shouldn't be needed.
 
 In the actual case, fixing this situation meant changing a single line 
 of pregexp code and all works great on my edited copy of pregexp.  But I 
 think others will run into this.
 
 Match-pos representation should be a big performance win by avoiding 
 many string creations and destructions.  I wish it were more widely 
 available and/or recommended more.  My guess is it's not used a lot, so 
 its usability isn't questioned enough.
 
 Is there a use case for not fixing this and retaining the current 
 application of "^" and "$" to only the entire string and not a substring 
 as defined by optional ranges?
 
 Toni
 
 jay@kenyamountain.com wrote:
 
 >State changed from "open" to "analyzed" by jay at Sun, 24 Apr 2005 20:12:18 -0400
 >Reason>>> I can't convince myself that this is a bug.  I find MzScheme's
 >regexp-match-positions works the way the bug reporter wants, but it seems
 >like a loss of good info to me at this point.  I'll possibly cave later.
 >
 >http://list.cs.brown.edu/mailman/private/plt-internal/2005-April/
 >008894.html
 >
 >
 >View:
 >  http://bugs.plt-scheme.org/query/?cmd=view&pr=7220
 >
 >
 >
 
 
 
 -----------------------------------------
 This message and its attachments may contain  privileged and confidential
 information.  If you are not the intended recipient(s), you are prohibited
 from printing, forwarding, saving or copying this email.  If you have
 received this e-mail in error, please immediately notify the sender and
 delete this e-mail and its attachments from your computer.
 
From: Dorai Sitaram <dorai@ccs.neu.edu>
To: awuersch@siac.com
Cc: bugs@plt-scheme.org, eli@plt-scheme.org, jay@kenyamountain.com
Subject: Re: misc/7220 (pregexp-match-positions) should respect "^" and "$" in matching substrings
Date: Mon, 2 May 2005 13:24:03 -0400 (EDT)

 Hi.  I've fixed the bug as Toni suggests, and updated to cvs.
 
 --d

State changed from "analyzed" to "closed" by eli at Mon, 02 May 2005 14:40:05 -0400
Reason>>> .

