From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Fri Jun 25 13:28:44 2010
Received: from mail-gw0-f44.google.com (mail-gw0-f44.google.com [74.125.83.44])
	by champlain.ccs.neu.edu (8.14.3/8.14.3) with ESMTP id o5PHSfZf008743
	for <bugs@bugs.plt-scheme.org>; Fri, 25 Jun 2010 13:28:41 -0400
Message-Id: <201006251728.o5PHSdC3008735@champlain.ccs.neu.edu>
Date: Fri, 25 Jun 2010 13:28:39 -0400
From: rafkind@cs.utah.edu
To: bugs@plt-scheme.org
Subject: startup time from 'raco exe'

>Number:         10992
>Category:       misc
>Synopsis:       startup time from 'raco exe'
>Class:          change-request
>Responsible:    rafkind
>Severity:       non-critical
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Fri Jun 25 13:32:01 -0400 2010
>Closed-Date:    Tue May 10 20:18:10 -0400 2011
>Last-Modified:  Tue May 10 20:18:10 -0400 2011
>Originator:     Jon Rafkind
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.0.0.1
>Environment:
Linux i686 / Mozilla/5.0 (X11; U; Linux i686; en-US) AppleWebKit/534.1 (KHTML, like Gecko) Chrome/6.0.437.3 Safari/534.1
>Description:
The startup time for executables produced by raco is fairly large, usually over 0.5s.

It would be nice if the resulting binary could start executing user code in less than 0.1s or less.

I am raising this issue on behalf of a user from IRC.
>How-To-Repeat:
x.rkt:
#lang racket
(printf "hello world\n")

$ raco exe x.rkt

$ time ./x
hello world

real    0m1.631s
user    0m1.128s
sys     0m0.136s


 $ time ./x
hello world

real    0m0.658s
user    0m0.572s
sys     0m0.056s
>Fix:
>Audit-Trail:
From: Eli Barzilay <eli@barzilay.org>
To: rafkind@cs.utah.edu, bugs@racket-lang.org
Cc: bug-notification@racket-lang.org
Subject: Re: [plt-bug] all/10992: startup time from 'raco exe'
Date: Fri, 25 Jun 2010 13:41:09 -0400

 On Jun 25, rafkind@cs.utah.edu wrote:
 > The startup time for executables produced by raco is fairly large, usually over 0.5s.
 > 
 > It would be nice if the resulting binary could start executing user code in less than 0.1s or less.
 > 
 > I am raising this issue on behalf of a user from IRC.
 > 
 > *** How to repeat:
 > x.rkt:
 > #lang racket
 
 Using racket/base makes it faster.
 
 On winooski, this reduces the overall running of the executable from
 285ms to 49ms (average of 20 runs).
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!
From: Jon Rafkind <rafkind@cs.utah.edu>
To: Eli Barzilay <eli@barzilay.org>
Cc: bugs@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [plt-bug] all/10992: startup time from 'raco exe'
Date: Fri, 25 Jun 2010 11:42:16 -0600

   On 06/25/2010 11:41 AM, Eli Barzilay wrote:
 > On Jun 25, rafkind@cs.utah.edu wrote:
 >> The startup time for executables produced by raco is fairly large, usually over 0.5s.
 >>
 >> It would be nice if the resulting binary could start executing user code in less than 0.1s or less.
 >>
 >> I am raising this issue on behalf of a user from IRC.
 >>
 >> *** How to repeat:
 >> x.rkt:
 >> #lang racket
 > Using racket/base makes it faster.
 >
 > On winooski, this reduces the overall running of the executable from
 > 285ms to 49ms (average of 20 runs).
 >
 
 I see the same behavior. I think the docs should mention the fact that 
 `racket/base' is so much faster than `racket', since presumably some 
 people at least will believe that generating an exe will implicitly make 
 the program faster.
 
 I can add the text if there are no objections.
From: Eli Barzilay <eli@barzilay.org>
To: rafkind@cs.utah.edu
Cc: bugs@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [plt-bug] all/10992: startup time from 'raco exe'
Date: Fri, 25 Jun 2010 13:59:01 -0400

 On Jun 25, Jon Rafkind wrote:
 > 
 > I see the same behavior. I think the docs should mention the fact
 > that `racket/base' is so much faster than `racket', since presumably
 > some people at least will believe that generating an exe will
 > implicitly make the program faster.
 > 
 > I can add the text if there are no objections.
 
 If you do that:
 
 1. The top of the `raco exe' docs say that this is just lumping the
    racket executable with the bytecode -- so add a note there that
    there is no speed benefit that you'd get from it.
 
    (BTW, the second paragraph talks about `raco make' -- that should
    probably be `raco exe' too.)
 
 2. Add a note somewhere about `racket' being a generally big language
    that takes more time to start.  (I'm not sure where is the best
    place to add it.)
 
 3. Point to that note from the `raco exe' docs, and from the "scripts"
    section of the guide.
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!

Responsible changed from "nobody" to "rafkind" by ryanc at Tue, 10 May 2011 19:38:12 -0400
Reason>>> .

State changed from "open" to "closed" by rafkind@racket-lang.org at Tue, 10 May 2011 20:18:10 -0400
Reason>>> A commit by rafkind@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/c11a177009
