From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Mon Jan  1 22:39:42 2007
Received: from wx-out-0506.google.com (wx-out-0506.google.com [66.249.82.230])
	by champlain.ccs.neu.edu (8.13.8/8.13.7) with ESMTP id l023da42013799
	for <bugs@bugs.plt-scheme.org>; Mon, 1 Jan 2007 22:39:36 -0500
Message-Id: <200701020339.l023dYN2013708@champlain.ccs.neu.edu>
Date: Mon, 1 Jan 2007 22:39:34 -0500
From: matthias@ccs.neu.edu
To: bugs@plt-scheme.org
Subject: contract for struct blames wrong party

>Number:         8454
>Category:       misc
>Synopsis:       contract for struct blames wrong party
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Mon Jan 01 22:40:03 -0500 2007
>Closed-Date:    Mon May 27 16:14:38 -0400 2013
>Last-Modified:  Mon May 27 16:14:38 -0400 2013
>Originator:     matthias
>Organization:
plt
>Submitter-Id:   unknown
>Release:        369.2-svn20dec2006
>Environment:
macosx "Darwin europe.local 8.8.0 Darwin Kernel Version 8.8.0: Fri Sep  8 17:18:57 PDT 2006; root:xnu-792.12.6.obj~1/RELEASE_PPC Power Macintosh powerpc" (ppc-macosx/3m) (get-display-depth) = 32
Docs Installed:
(("/Users/matthias/plt/doc" "r5rs" "mzscheme" "mred" "help" "tour" "drscheme" "srfi" "mzlib" "misclib" "mrlib" "framework" "foreign" "mzc" "tools" "insidemz" "web-server" "swindle" "plot" "release-notes" "t-y-scheme" "tex2page" "beginning" "beginning-abbr" "intermediate" "intermediate-lambda" "advanced" "teachpack" "teachpack-htdc" "profj-beginner" "profj-intermediate" "profj-advanced") ("/Users/matthias/plt/collects/doc" "teachpack"))
Human Language: english
(current-memory-use) 120582760

Collections:
(("/Users/matthias/Unison/collects/" ".DS_Store" "date" "finance" "testing" "utils" "web") ("/Users/matthias/Library/PLT Scheme/369.2/collects" non-existent-path) ("/Users/matthias/plt/collects" ".svn" "afm" "algol60" "browser" "compiler" "config" "defaults" "doc" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "framework" "frtime" "games" "graphics" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu-module" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrflow" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "mztake" "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profj" "profjBoxes" "profjWizard" "r5rs" "r6rs" "readline" "repos-time-stamp" "scribble" "setup" "sgl" "sirmail" "skipper" "slatex" "slibinit" "slideshow" "srfi" "srpersist" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-suite" "tests" "tex2page" "texpict" "trace" "version" "waterworld!
 " "web-server" "xelda" "xml"))
Teachpack filenames: ()
Computer Language: (("Professional Languages" "(module ...)") (#6(#t write mixed-fraction-e #f #t debug) (default) #0()))
>Description:
I have two collaborating modules, A and B. A exports a 
constracted struct and B uses the field value accordingly.
If A breaks the contract and delivers the wrong kind of value
(say symbol instead of string) then I get an error message
blaming "top-level" and I have to figure what actually happened. 
>How-To-Repeat:
The code below shows what happens in Pretty Big but you can also 
separate them into different files and run them accordingly.
(that's how I discovered it). 

(module a mzscheme
  (require (lib "contract.ss"))
  
  (define-struct x (n))
  
  (define (mk) (make-x 'aaaa))

  (provide/contract
   [mk (-> x?)]
   [struct x ((n string?))]))

(module b mzscheme
  (require a)
  
  (printf "~a\n" (x-n (mk))))

(require b)
  
>Fix:
>Audit-Trail:
From: "Robby Findler" <robby.findler@gmail.com>
To: matthias@ccs.neu.edu, bugs@plt-scheme.org
Cc: nobody@plt-scheme.org, eli@plt-scheme.org, matthias@plt-scheme.org,
        sk@plt-scheme.org, mflatt@plt-scheme.org, robby@plt-scheme.org,
        clements@plt-scheme.org, jay@plt-scheme.org, meunier@plt-scheme.org,
        sowens@plt-scheme.org, kathyg@plt-scheme.org, awick@plt-scheme.org,
        goldberg@plt-scheme.org, dskippy@plt-scheme.org, jacobm@plt-scheme.org,
        cce@plt-scheme.org, dalev@plt-scheme.org, samth@plt-scheme.org,
        ryanc@plt-scheme.org
Subject: Re: [plt-bug] all/8454: contract for struct blames wrong party
Date: Mon, 1 Jan 2007 21:42:59 -0600

 This is a known bug. I believe I sent a message a while back about it
 -- I need more support from MzScheme's define-struct. I can't quite
 recall the details, but if this isn't ringing any bells, I'll go
 figure it out again.
 
 Robby

Responsible changed from "nobody" to "robby" by eli at Fri, 04 May 2007 03:41:21 -0400
Reason>>> contracts


Responsible changed from "robby" to "mflatt" by robby at Fri, 04 May 2007 08:02:15 -0400
Reason>>> need more support from mz


State changed from "open" to "closed" by asumu at Mon, 27 May 2013 16:14:38 -0400
Reason>>> The blame appears to be correct in Racket v5.3.4

