From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Fri Sep 11 00:29:19 2009
Received: from mail-yx0-f172.google.com (mail-yx0-f172.google.com [209.85.210.172])
	by champlain.ccs.neu.edu (8.14.2/8.14.2) with ESMTP id n8B4TFCW020277
	for <bugs@bugs.plt-scheme.org>; Fri, 11 Sep 2009 00:29:15 -0400
Message-Id: <200909110429.n8B4TDqt020269@champlain.ccs.neu.edu>
Date: Fri, 11 Sep 2009 00:29:13 -0400
From: gmarceau@gmail.com
To: bugs@plt-scheme.org
Subject: Various issues when running BSL program under scheme/sandbox (6 of 6, default security too strict)

>Number:         10449
>Category:       misc
>Synopsis:       Various issues when running BSL program under scheme/sandbox (6 of 6, default security too strict)
>Class:          sw-bug
>Responsible:    eli
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Fri Sep 11 00:32:01 -0400 2009
>Closed-Date:    Thu May 12 17:40:56 -0400 2011
>Last-Modified:  Thu May 12 17:40:56 -0400 2011
>Originator:     Guillaume Marceau
>Organization:
plt
>Submitter-Id:   unknown
>Release:        4.2.1
>Environment:
windows "Windows NT 5.1 (Build 2600) Service Pack 3" (win32\i386\3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 184617500

Collections:
(("C:\\Documents and Settings\\Guillaume\\Application Data\\PLT Scheme\\4.2.1\\collects" non-existent-path) ("C:\\Program Files\\PLT\\collects" "2htdp" "afm" "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "defaults" "deinprogramm" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "help" "hierlist" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profile" "profj" "r5rs" "r6rs" "readline" "redex" "rnrs" "s-exp" "scheme" "scribble" "scribblings" "scriblib" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "stxclass" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tex2page" "texpict" "trace" "typed" "typed-scheme" "version" "web-server" "wxme" "xml"))
Computer Language: (("Teaching Languages" "How to Design Programs" "Beginning Student") (#(#t constructor repeating-decimal #f #t none) #f ((lib "world.ss" "teachpack" "htdp"))))
>Description:
The default security permissions of the evalutors of scheme/sandbox are much tighter than those of normal DrScheme.

Running very simple beginner programs fail because

-- BSL tries to read its preferences from plt-prefs.ss
-- BSL tries to write something to /tmp (an image I think)
-- BSL tries to load the given teachpacks and cannot
-- Planet tries to fetch a package and is rebuted by the network guard
>How-To-Repeat:
;; I need to use the following wrapper to run BSL program with sandbox

(define (network-guard proc-name hostname port client-or-server)
  (unless (equal? hostname "planet.plt-scheme.org")
    (raise (format "sandbox security: ~a ~a ~a ~a" proc-name hostname port client-or-server))))

(define (with-soft-security thunk)
  (parameterize 
      ([sandbox-path-permissions `((read ,(byte-regexp #"plt-prefs"))
                                   (read ,(byte-regexp #"/logging-tool/analysis/"))
                                   (exists ,(byte-regexp #""))
                                   (write ,(byte-regexp #"^/tmp/")))]
       [sandbox-network-guard network-guard])
    (thunk)))
>Fix:
>Audit-Trail:
From: Eli Barzilay <eli@barzilay.org>
To: gmarceau@gmail.com, bugs@plt-scheme.org
Cc: bug-notification@plt-scheme.org
Subject: Re: [plt-bug] all/10449: Various issues when running BSL program under scheme/sandbox (6 of 6, default security too strict)
Date: Fri, 11 Sep 2009 00:39:40 -0400

 On Sep 11, gmarceau@gmail.com wrote:
 > The default security permissions of the evalutors of scheme/sandbox
 > are much tighter than those of normal DrScheme.
 
 Yes -- and that's by design (given the original purpose of the
 library).  There is a `call-with-trusted-sandbox-configuration' that
 removes the restrictions -- which should work for you.  It also
 removes the memory and time limits -- but you can add them back in the
 thunk.
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!

Responsible changed from "nobody" to "eli" by ryanc at Thu, 12 May 2011 17:40:56 -0400
Reason>>> sandbox

State changed from "open" to "closed" by ryanc at Thu, 12 May 2011 17:40:56 -0400
Reason>>> answered

