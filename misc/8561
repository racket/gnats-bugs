From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Tue Mar 13 12:05:50 2007
Received: from an-out-0708.google.com (an-out-0708.google.com [209.85.132.250])
	by champlain.ccs.neu.edu (8.13.8/8.13.7) with ESMTP id l2DG5oBf007966
	for <bugs@bugs.plt-scheme.org>; Tue, 13 Mar 2007 12:05:50 -0400
Message-Id: <200703131605.l2DG5mrx007960@champlain.ccs.neu.edu>
Date: Tue, 13 Mar 2007 12:05:48 -0400
From: thasu@niksula.hut.fi
To: bugs@plt-scheme.org
Subject: plt-match false mismatches when using list-no-order and "and"

>Number:         8561
>Category:       misc
>Synopsis:       plt-match false mismatches when using list-no-order and "and"
>Class:          sw-bug
>Responsible:    samth
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Tue Mar 13 12:10:01 -0400 2007
>Closed-Date:    Tue Apr 01 09:57:48 -0400 2008
>Last-Modified:  Tue Apr 01 09:57:48 -0400 2008
>Originator:     T Hasu
>Organization:
plt
>Submitter-Id:   unknown
>Release:        MzScheme v369.7 [3m]
>Environment:
linux-debian
>Description:
I may not know the semantics of plt-match.ss match patterns all that well, but it's unintuitive at the very least that the result of a "match" in some cases seems to be affected based on

* whether one uses "list" or "list-no-order" when matching a list of length 1

* the order of patterns in an "and" clause

I'd expect all of the attached sample cases to display "yes", but one of them doesn't.
>How-To-Repeat:
(require (lib "plt-match.ss"))

(display
 (match
  '((555))
  ((list-no-order (and (list 555)
		       (list-no-order 555)))
   "yes") 
  (_ "no"))) ;; prints "no"

(display
 (match
  '((555))
  ((list-no-order (and (list-no-order 555)
		       (list 555)))
   "yes") 
  (_ "no"))) ;; prints "yes"

(display
 (match
  '((555))
  ((list (and (list 555)
	      (list-no-order 555)))
   "yes") 
  (_ "no"))) ;; prints "yes"
>Fix:
>Audit-Trail:
Responsible changed from "nobody" to "samth" by eli at Fri, 04 May 2007 03:22:50 -0400
Reason>>> match


State changed from "open" to "closed" by samth at Tue, 01 Apr 2008 09:57:48 -0400
Reason>>> fixed by new implementation

