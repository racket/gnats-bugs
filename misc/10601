From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Mon Nov 23 13:28:37 2009
Received: from mail-yx0-f192.google.com (mail-yx0-f192.google.com [209.85.210.192])
	by champlain.ccs.neu.edu (8.14.2/8.14.2) with ESMTP id nANISW33002165
	for <bugs@bugs.plt-scheme.org>; Mon, 23 Nov 2009 13:28:32 -0500
Message-Id: <200911231828.nANISTid002155@champlain.ccs.neu.edu>
Date: Mon, 23 Nov 2009 13:28:29 -0500
From: wand@ccs.neu.edu
To: bugs@plt-scheme.org
Subject: uncripple require in eopl language

>Number:         10601
>Category:       misc
>Synopsis:       uncripple require in eopl language
>Class:          change-request
>Responsible:    eli
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Mon Nov 23 13:32:01 -0500 2009
>Last-Modified:  Thu May 12 16:40:04 -0400 2011
>Originator:     Mitch Wand
>Organization:
plt
>Submitter-Id:   unknown
>Release:        4.2.1
>Environment:
windows "Windows NT 6.0 (Build 6002) Service Pack 2" (win32\i386\3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 128805116

Collections:
(("C:\\Users\\wand.WAND-326-2009\\AppData\\Roaming\\PLT Scheme\\4.2.1\\collects" non-existent-path) ("C:\\Program Files\\PLT\\collects" "2htdp" "afm" "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "defaults" "deinprogramm" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "help" "hierlist" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profile" "profj" "r5rs" "r6rs" "readline" "redex" "rnrs" "s-exp" "scheme" "scribble" "scribblings" "scriblib" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "stxclass" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tex2page" "texpict" "trace" "typed" "typed-scheme" "version" "web-server" "wxme" "xml"))
Computer Language: (("Module") (#(#t write mixed-fraction-e #f #t debug) (default) #() "#lang scheme\n" #t))
>Description:
Currently, the eopl language does not support the full range of syntax for require, eg rename-in or only-in.

I don't see any reason for this restriction.  It would be handy to remove it.
>How-To-Repeat:
>Fix:
>Audit-Trail:
From: Carl Eastlund <cce@plt-scheme.org>
To: wand@ccs.neu.edu, bugs@plt-scheme.org
Cc: nobody@plt-scheme.org, bug-notification@plt-scheme.org
Subject: Re: [plt-bug] all/10601: uncripple require in eopl language
Date: Mon, 23 Nov 2009 13:41:37 -0500

 On Mon, Nov 23, 2009 at 1:32 PM,  <wand@ccs.neu.edu> wrote:
 > Currently, the eopl language does not support the full range of syntax fo=
 r require, eg rename-in or only-in.
 >
 > I don't see any reason for this restriction. =A0It would be handy to remo=
 ve it.
 
 Mitch,
 
 EOPL's require isn't crippled, it's using the older style of require
 for purposes of backwards compatibility.  See the documentation of
 #%require, which is the same as require in the eopl and mzscheme
 languages.
 
 http://docs.plt-scheme.org/reference/require.html#(form._((quote._~23~25ker=
 nel)._~23~25require))
 
 --Carl
From: Mitchell Wand <wand@ccs.neu.edu>
To: Carl Eastlund <cce@plt-scheme.org>
Cc: bugs@plt-scheme.org, nobody@plt-scheme.org,
        bug-notification@plt-scheme.org
Subject: Re: [plt-bug] all/10601: uncripple require in eopl language
Date: Mon, 23 Nov 2009 14:23:19 -0500

 --00235453093815283a04790ec2e3
 Content-Type: text/plain; charset=ISO-8859-1
 
 Foo.  Is there any reason not to use require instead of #%require ?
 
 On Mon, Nov 23, 2009 at 1:41 PM, Carl Eastlund <cce@plt-scheme.org> wrote:
 
 > On Mon, Nov 23, 2009 at 1:32 PM,  <wand@ccs.neu.edu> wrote:
 > > Currently, the eopl language does not support the full range of syntax
 > for require, eg rename-in or only-in.
 > >
 > > I don't see any reason for this restriction.  It would be handy to remove
 > it.
 >
 > Mitch,
 >
 > EOPL's require isn't crippled, it's using the older style of require
 > for purposes of backwards compatibility.  See the documentation of
 > #%require, which is the same as require in the eopl and mzscheme
 > languages.
 >
 >
 > http://docs.plt-scheme.org/reference/require.html#(form._((quote._~23~25kernel)._~23~25require))<http://docs.plt-scheme.org/reference/require.html#%28form._%28%28quote._%7E23%7E25kernel%29._%7E23%7E25require%29%29>
 >
 > --Carl
 >
 >
 
 --00235453093815283a04790ec2e3
 Content-Type: text/html; charset=ISO-8859-1
 Content-Transfer-Encoding: quoted-printable
 
 Foo.=A0 Is there any reason not to use require instead of #%require ?<br><b=
 r><div class=3D"gmail_quote">On Mon, Nov 23, 2009 at 1:41 PM, Carl Eastlund=
  <span dir=3D"ltr">&lt;<a href=3D"mailto:cce@plt-scheme.org">cce@plt-scheme=
 .org</a>&gt;</span> wrote:<br>
 <blockquote class=3D"gmail_quote" style=3D"border-left: 1px solid rgb(204, =
 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">On Mon, Nov 23, 2=
 009 at 1:32 PM, =A0&lt;<a href=3D"mailto:wand@ccs.neu.edu">wand@ccs.neu.edu=
 </a>&gt; wrote:<br>
 
 &gt; Currently, the eopl language does not support the full range of syntax=
  for require, eg rename-in or only-in.<br>
 &gt;<br>
 &gt; I don&#39;t see any reason for this restriction. =A0It would be handy =
 to remove it.<br>
 <br>
 Mitch,<br>
 <br>
 EOPL&#39;s require isn&#39;t crippled, it&#39;s using the older style of re=
 quire<br>
 for purposes of backwards compatibility. =A0See the documentation of<br>
 #%require, which is the same as require in the eopl and mzscheme<br>
 languages.<br>
 <br>
 <a href=3D"http://docs.plt-scheme.org/reference/require.html#%28form._%28%2=
 8quote._%7E23%7E25kernel%29._%7E23%7E25require%29%29" target=3D"_blank">htt=
 p://docs.plt-scheme.org/reference/require.html#(form._((quote._~23~25kernel=
 )._~23~25require))</a><br>
 
 <font color=3D"#888888"><br>
 --Carl<br>
 <br>
 </font></blockquote></div><br>
 
 --00235453093815283a04790ec2e3--
From: Carl Eastlund <cce@plt-scheme.org>
To: Mitchell Wand <wand@ccs.neu.edu>
Cc: bugs@plt-scheme.org, nobody@plt-scheme.org,
        bug-notification@plt-scheme.org
Subject: Re: [plt-bug] all/10601: uncripple require in eopl language
Date: Mon, 23 Nov 2009 14:29:42 -0500

 Backwards compatibility.  If require suddenly changes, old code that
 uses it will break.  I can't imagine there's any other reason than
 that.
 
 On Mon, Nov 23, 2009 at 2:23 PM, Mitchell Wand <wand@ccs.neu.edu> wrote:
 > Foo.=A0 Is there any reason not to use require instead of #%require ?
 >
 > On Mon, Nov 23, 2009 at 1:41 PM, Carl Eastlund <cce@plt-scheme.org> wrote=
 :
 >>
 >> Mitch,
 >>
 >> EOPL's require isn't crippled, it's using the older style of require
 >> for purposes of backwards compatibility. =A0See the documentation of
 >> #%require, which is the same as require in the eopl and mzscheme
 >> languages.
 >>
 >>
 >> http://docs.plt-scheme.org/reference/require.html#(form._((quote._~23~25=
 kernel)._~23~25require))
 >>
 >> --Carl
From: Eli Barzilay <eli@barzilay.org>
To: Mitchell Wand <wand@ccs.neu.edu>
Cc: bugs@plt-scheme.org, bug-notification@plt-scheme.org
Subject: Re: [plt-bug] all/10601: uncripple require in eopl language
Date: Mon, 23 Nov 2009 14:31:15 -0500

 On Nov 23, Mitchell Wand wrote:
 > Foo.  Is there any reason not to use require instead of #%require ?
 
 The thing that leads to this is the fact that it's based on the
 `mzscheme' language.  (I'm not sure about keeping it based on `mzscheme'
 but with with the new require/provide forms.)
 
 I've just tried converting it to `scheme/base' and it was
 straightforward.  But there are some differences: you get the plt
 keywords (for example, this breaks uses of `call-with-output-file'
 etc), you get no bindings beyond `syntax-rules' for phase 1, you get
 value printouts for toplevel non-definition expressions.  It's
 possible to change these things, but that will make the change less
 straightforward.
 
 If you're fine with these changes, then I can do the update.
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!
From: Carl Eastlund <cce@plt-scheme.org>
To: Eli Barzilay <eli@barzilay.org>
Cc: Mitchell Wand <wand@ccs.neu.edu>, bugs@plt-scheme.org,
        bug-notification@plt-scheme.org
Subject: Re: [plt-bug] all/10601: uncripple require in eopl language
Date: Mon, 23 Nov 2009 14:33:19 -0500

 On Mon, Nov 23, 2009 at 2:31 PM, Eli Barzilay <eli@barzilay.org> wrote:
 > On Nov 23, Mitchell Wand wrote:
 >> Foo. =A0Is there any reason not to use require instead of #%require ?
 >
 > The thing that leads to this is the fact that it's based on the
 > `mzscheme' language. =A0(I'm not sure about keeping it based on `mzscheme=
 '
 > but with with the new require/provide forms.)
 >
 > I've just tried converting it to `scheme/base' and it was
 > straightforward. =A0But there are some differences: you get the plt
 > keywords (for example, this breaks uses of `call-with-output-file'
 > etc), you get no bindings beyond `syntax-rules' for phase 1, you get
 > value printouts for toplevel non-definition expressions. =A0It's
 > possible to change these things, but that will make the change less
 > straightforward.
 >
 > If you're fine with these changes, then I can do the update.
 
 EOPL uses mutable pairs.  I'd suggest basing it on the R5RS language,
 and go out to scheme/base only for the PLT specific stuff like
 require.
 
 --Carl
From: Eli Barzilay <eli@barzilay.org>
To: Carl Eastlund <cce@plt-scheme.org>
Cc: Mitchell Wand <wand@ccs.neu.edu>, bugs@plt-scheme.org,
        bug-notification@plt-scheme.org
Subject: Re: [plt-bug] all/10601: uncripple require in eopl language
Date: Mon, 23 Nov 2009 14:40:46 -0500

 On Nov 23, Carl Eastlund wrote:
 > 
 > EOPL uses mutable pairs.
 
 The code doesn't use `cons' as mutable, there is some place in sllgen
 that uses mpairs, so this is already not a problem.
 
 
 > I'd suggest basing it on the R5RS language, and go out to
 > scheme/base only for the PLT specific stuff like require.
 
 Doing that will be much more work.
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!
From: Carl Eastlund <cce@plt-scheme.org>
To: Eli Barzilay <eli@barzilay.org>
Cc: Mitchell Wand <wand@ccs.neu.edu>, bugs@plt-scheme.org,
        bug-notification@plt-scheme.org
Subject: Re: [plt-bug] all/10601: uncripple require in eopl language
Date: Mon, 23 Nov 2009 14:48:51 -0500

 On Mon, Nov 23, 2009 at 2:40 PM, Eli Barzilay <eli@barzilay.org> wrote:
 > On Nov 23, Carl Eastlund wrote:
 >>
 >> EOPL uses mutable pairs.
 >
 > The code doesn't use `cons' as mutable, there is some place in sllgen
 > that uses mpairs, so this is already not a problem.
 >
 >
 >> I'd suggest basing it on the R5RS language, and go out to
 >> scheme/base only for the PLT specific stuff like require.
 >
 > Doing that will be much more work.
 
 My mistake. I thought EOPL exported set-car! and set-cdr!, since I
 recalled using them in the curriculum.  I suppose one gets by with
 set! now.  Never mind.
 
 --Carl
From: Mitchell Wand <wand@ccs.neu.edu>
To: Carl Eastlund <cce@plt-scheme.org>
Cc: Eli Barzilay <eli@barzilay.org>, bugs@plt-scheme.org,
        bug-notification@plt-scheme.org
Subject: Re: [plt-bug] all/10601: uncripple require in eopl language
Date: Tue, 24 Nov 2009 07:54:36 -0500

 --0015174bdcc8c2f17f04791d71ae
 Content-Type: text/plain; charset=ISO-8859-1
 
 OK, forget it; dunno what other folks out there have used, so I guess it's
 safer to leave it.  --Mitch
 
 On Mon, Nov 23, 2009 at 2:48 PM, Carl Eastlund <cce@plt-scheme.org> wrote:
 
 > On Mon, Nov 23, 2009 at 2:40 PM, Eli Barzilay <eli@barzilay.org> wrote:
 > > On Nov 23, Carl Eastlund wrote:
 > >>
 > >> EOPL uses mutable pairs.
 > >
 > > The code doesn't use `cons' as mutable, there is some place in sllgen
 > > that uses mpairs, so this is already not a problem.
 > >
 > >
 > >> I'd suggest basing it on the R5RS language, and go out to
 > >> scheme/base only for the PLT specific stuff like require.
 > >
 > > Doing that will be much more work.
 >
 > My mistake. I thought EOPL exported set-car! and set-cdr!, since I
 > recalled using them in the curriculum.  I suppose one gets by with
 > set! now.  Never mind.
 >
 > --Carl
 >
 >
 
 --0015174bdcc8c2f17f04791d71ae
 Content-Type: text/html; charset=ISO-8859-1
 Content-Transfer-Encoding: quoted-printable
 
 OK, forget it; dunno what other folks out there have used, so I guess it&#3=
 9;s safer to leave it.=A0 --Mitch<br><br><div class=3D"gmail_quote">On Mon,=
  Nov 23, 2009 at 2:48 PM, Carl Eastlund <span dir=3D"ltr">&lt;<a href=3D"ma=
 ilto:cce@plt-scheme.org">cce@plt-scheme.org</a>&gt;</span> wrote:<br>
 <blockquote class=3D"gmail_quote" style=3D"border-left: 1px solid rgb(204, =
 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;"><div class=3D"im"=
 >On Mon, Nov 23, 2009 at 2:40 PM, Eli Barzilay &lt;<a href=3D"mailto:eli@ba=
 rzilay.org">eli@barzilay.org</a>&gt; wrote:<br>
 
 &gt; On Nov 23, Carl Eastlund wrote:<br>
 &gt;&gt;<br>
 &gt;&gt; EOPL uses mutable pairs.<br>
 &gt;<br>
 &gt; The code doesn&#39;t use `cons&#39; as mutable, there is some place in=
  sllgen<br>
 &gt; that uses mpairs, so this is already not a problem.<br>
 &gt;<br>
 &gt;<br>
 &gt;&gt; I&#39;d suggest basing it on the R5RS language, and go out to<br>
 &gt;&gt; scheme/base only for the PLT specific stuff like require.<br>
 &gt;<br>
 &gt; Doing that will be much more work.<br>
 <br>
 </div>My mistake. I thought EOPL exported set-car! and set-cdr!, since I<br=
 >
 recalled using them in the curriculum. =A0I suppose one gets by with<br>
 set! now. =A0Never mind.<br>
 <font color=3D"#888888"><br>
 --Carl<br>
 <br>
 </font></blockquote></div><br>
 
 --0015174bdcc8c2f17f04791d71ae--
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Mitchell Wand <wand@ccs.neu.edu>
Cc: Carl Eastlund <cce@plt-scheme.org>, Eli Barzilay <eli@barzilay.org>,
        bugs@plt-scheme.org, bug-notification@plt-scheme.org
Subject: Re: [plt-bug] all/10601: uncripple require in eopl language
Date: Tue, 24 Nov 2009 08:28:35 -0500

 --Apple-Mail-108--558241938
 Content-Transfer-Encoding: quoted-printable
 Content-Type: text/plain;
 	charset=us-ascii
 
 
 Mitch, I think you'd be better off with Eli's port to scheme or =
 scheme/base.=20
 
 It's a much nicer language -- Matthias
 
 
 
 On Nov 24, 2009, at 7:54 AM, Mitchell Wand wrote:
 
 > OK, forget it; dunno what other folks out there have used, so I guess =
 it's safer to leave it.  --Mitch
 >=20
 > On Mon, Nov 23, 2009 at 2:48 PM, Carl Eastlund <cce@plt-scheme.org> =
 wrote:
 > On Mon, Nov 23, 2009 at 2:40 PM, Eli Barzilay <eli@barzilay.org> =
 wrote:
 > > On Nov 23, Carl Eastlund wrote:
 > >>
 > >> EOPL uses mutable pairs.
 > >
 > > The code doesn't use `cons' as mutable, there is some place in =
 sllgen
 > > that uses mpairs, so this is already not a problem.
 > >
 > >
 > >> I'd suggest basing it on the R5RS language, and go out to
 > >> scheme/base only for the PLT specific stuff like require.
 > >
 > > Doing that will be much more work.
 >=20
 > My mistake. I thought EOPL exported set-car! and set-cdr!, since I
 > recalled using them in the curriculum.  I suppose one gets by with
 > set! now.  Never mind.
 >=20
 > --Carl
 >=20
 >=20
 
 
 --Apple-Mail-108--558241938
 Content-Transfer-Encoding: 7bit
 Content-Type: text/html;
 	charset=us-ascii
 
 <html><head></head><body style="word-wrap: break-word; -webkit-nbsp-mode: space; -webkit-line-break: after-white-space; "><div><br></div><div>Mitch, I think you'd be better off with Eli's port to scheme or scheme/base.&nbsp;</div><div><br></div><div>It's a much nicer language -- Matthias</div><div><br></div><div><br></div><br><div><div>On Nov 24, 2009, at 7:54 AM, Mitchell Wand wrote:</div><br class="Apple-interchange-newline"><blockquote type="cite">OK, forget it; dunno what other folks out there have used, so I guess it's safer to leave it.&nbsp; --Mitch<br><br><div class="gmail_quote">On Mon, Nov 23, 2009 at 2:48 PM, Carl Eastlund <span dir="ltr">&lt;<a href="mailto:cce@plt-scheme.org">cce@plt-scheme.org</a>&gt;</span> wrote:<br>
 <blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;"><div class="im">On Mon, Nov 23, 2009 at 2:40 PM, Eli Barzilay &lt;<a href="mailto:eli@barzilay.org">eli@barzilay.org</a>&gt; wrote:<br>
 
 &gt; On Nov 23, Carl Eastlund wrote:<br>
 &gt;&gt;<br>
 &gt;&gt; EOPL uses mutable pairs.<br>
 &gt;<br>
 &gt; The code doesn't use `cons' as mutable, there is some place in sllgen<br>
 &gt; that uses mpairs, so this is already not a problem.<br>
 &gt;<br>
 &gt;<br>
 &gt;&gt; I'd suggest basing it on the R5RS language, and go out to<br>
 &gt;&gt; scheme/base only for the PLT specific stuff like require.<br>
 &gt;<br>
 &gt; Doing that will be much more work.<br>
 <br>
 </div>My mistake. I thought EOPL exported set-car! and set-cdr!, since I<br>
 recalled using them in the curriculum. &nbsp;I suppose one gets by with<br>
 set! now. &nbsp;Never mind.<br>
 <font color="#888888"><br>
 --Carl<br>
 <br>
 </font></blockquote></div><br>
 </blockquote></div><br></body></html>
 --Apple-Mail-108--558241938--
From: Eli Barzilay <eli@barzilay.org>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: Mitchell Wand <wand@ccs.neu.edu>, Carl Eastlund <cce@plt-scheme.org>,
        bugs@plt-scheme.org, bug-notification@plt-scheme.org
Subject: Re: [plt-bug] all/10601: uncripple require in eopl language
Date: Tue, 24 Nov 2009 08:44:36 -0500

 On Nov 24, Matthias Felleisen wrote:
 > Mitch, I think you'd be better off with Eli's port to scheme or
 > scheme/base.
 > 
 > It's a much nicer language -- Matthias
 
 (Another advantage is that students who wander off to try "real" code,
 get more functionality and less confusion.)
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!

Responsible changed from "nobody" to "eli" by ryanc at Thu, 12 May 2011 16:40:04 -0400
Reason>>> check in port to scheme/racket or just close

