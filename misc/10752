From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Wed Feb 10 01:01:41 2010
Received: from mail-yx0-f198.google.com (mail-yx0-f198.google.com [209.85.210.198])
	by champlain.ccs.neu.edu (8.14.3/8.14.3) with ESMTP id o1A61dee026746
	for <bugs@bugs.plt-scheme.org>; Wed, 10 Feb 2010 01:01:39 -0500
Message-Id: <201002100601.o1A61aN2026738@champlain.ccs.neu.edu>
Date: Wed, 10 Feb 2010 01:01:36 -0500
From: tankl@rocketmail.com
To: bugs@plt-scheme.org
Subject: problem with using the do loop

>Number:         10752
>Category:       misc
>Synopsis:       problem with using the do loop
>Class:          sw-bug
>Responsible:    eli
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Wed Feb 10 01:04:02 -0500 2010
>Closed-Date:    Fri Sep 03 21:28:21 -0400 2010
>Last-Modified:  Fri Sep 03 21:28:21 -0400 2010
>Originator:     Kent Tan
>Organization:
plt
>Submitter-Id:   unknown
>Release:        4.2.4
>Environment:
Win32 / x86 / Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; GTB6.4; .NET CLR 1.1.4322; .NET CLR 2.0.50727; .NET CLR 3.0.04506.30; InfoPath.2; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)
>Description:
I am trying to running this do loop :

(
		do ((vec (make-vector 5))      
		(i 0 (+ i 1)))   
 		((= i 5) vec)   
		(vector-set! vec i i)
	) 

but the result is not as expected but #(0 0 0 0 0)

similarly for :

 (define factorial
    (lambda (x)
          (do (
	      ( i x (- i 1))
	      (a 1 (* a i))
	   )
	   ((zero? i) a)	
          )
    )
)

end result is also 1 with any values for x

pls advise. thanks!
>How-To-Repeat:
>Fix:
>Audit-Trail:
From: Eli Barzilay <eli@barzilay.org>
To: tankl@rocketmail.com, bugs@plt-scheme.org
Cc: bug-notification@plt-scheme.org
Subject: Re: [plt-bug] all/10752: problem with using the do loop
Date: Wed, 10 Feb 2010 01:14:35 -0500

 Are you using the "Lazy Scheme" language by any chance?  If so, then
 its `do' seems broken since it's the default one instead of a version
 that deals with the lazy language.  But my guess is that you're using
 it because it's the only language that has "Scheme" in its name -- if
 this is correct, then you should instead use the default language:
 in the language dialog choose "Module", and make sure that your
 definition files begin with a `#lang scheme' (which would get added
 there by default).
 
 
 On Feb 10, tankl@rocketmail.com wrote:
 > I am trying to running this do loop :
 > 
 > (
 > 		do ((vec (make-vector 5))      
 > 		(i 0 (+ i 1)))   
 >  		((= i 5) vec)   
 > 		(vector-set! vec i i)
 > 	) 
 > 
 > but the result is not as expected but #(0 0 0 0 0)
 > 
 > similarly for :
 > 
 >  (define factorial
 >     (lambda (x)
 >           (do (
 > 	      ( i x (- i 1))
 > 	      (a 1 (* a i))
 > 	   )
 > 	   ((zero? i) a)	
 >           )
 >     )
 > )
 > 
 > end result is also 1 with any values for x
 > 
 > pls advise. thanks!
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!

Responsible changed from "nobody" to "eli" by eli at Fri, 03 Sep 2010 21:28:21 -0400
Reason>>> .

State changed from "open" to "closed" by eli at Fri, 03 Sep 2010 21:28:21 -0400
Reason>>> See reply

