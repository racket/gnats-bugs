From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Fri Jan 21 23:11:29 2011
Received: from mail-fx0-f44.google.com (mail-fx0-f44.google.com [209.85.161.44])
	by champlain.ccs.neu.edu (8.14.3/8.14.3) with ESMTP id p0M4BQYx015837
	for <bugs@bugs.plt-scheme.org>; Fri, 21 Jan 2011 23:11:26 -0500
Message-Id: <201101220411.p0M4BMn1015816@champlain.ccs.neu.edu>
Date: Fri, 21 Jan 2011 23:11:22 -0500
From: mwilber@uccs.edu
To: bugs@racket-lang.org
Subject: Generators that yield multiple values and in-generator are broken when called through a function

>Number:         11662
>Category:       misc
>Synopsis:       Generators that yield multiple values and in-generator are broken when called through a function
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Fri Jan 21 23:12:01 -0500 2011
>Closed-Date:    Fri Sep 14 16:58:07 -0400 2012
>Last-Modified:  Fri Sep 14 16:58:07 -0400 2012
>Originator:     Michael Wilber
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.0.2
>Environment:
unix "Linux eevee 2.6.36-ARCH #1 SMP PREEMPT Sat Jan 8 13:16:43 UTC 2011 i686 Genuine Intel(R) CPU T2400 @ 1.83GHz GenuineIntel GNU/Linux" (i386-linux/3m) (get-display-depth) = 24
Human Language: english
(current-memory-use) 355708488

Collections:
(("/home/michael/.racket/5.0.2/collects" non-existent-path) ("/usr/lib/racket/collects" "2htdp" "afm" "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "data" "datalog" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "help" "hierlist" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raco" "reader" "readline" "redex" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "slatex" "slideshow" "srfi" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tests" "tex2page" "texpict" "trace" "typed" "typed-scheme" "unstable" "version" "web-server" "wxme" "xm!
 l"))
Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t))
>Description:
The in-generator macro behaves inconsistently when embedded in a function instead of directly inside a (for) clause and when yielding multiple values. See the "Steps to Reproduce" section for details.

rapacity on IRC came up with two ugly workarounds; one involves wrapping the generator in in-producer instead:
(define (in-foo) 
  (in-producer 
   (generator () 
    (yield 1 2) 
    (yield 3 4) 
    (yield '_ '_)) 
    (lambda (a . _) (eq? a '_)))) 
(for ([(k v) (in-foo)]) 
  (displayln (list k)))

and the other is a full-blown macro definition that allows one to write their own sequence generators:
(define-syntax-rule (define-generator name body ...) 
  (define-sequence-syntax name 
    (syntax-rules () 
      [(_) 
       (in-generator body ...)]) 
    (lambda (stx) 
      (syntax-case stx () 
        [[(id (... ...)) (_)] 
         #'[(id (... ...)) (in-generator body ...)]])))) 
 
(define-generator in-foo 
  (yield 1 2) 
  (yield 3 4)) 
 
(for ([(k v) (in-foo)])
  (displayln (list k)))

But neither workaround addresses the inconsistency in in-generator.
>How-To-Repeat:
This works:
(require racket/generator)
(for ([(a b) (in-generator
              (yield 1 2)
              (yield 3 4)
              (yield 5 6))])
  (printf "~a ~a\n" a b))

This throws exceptions:
(require racket/generator) 
(define (in-some-generator)
  (in-generator
   (yield 1 2)
   (yield 3 4)
   (yield 5 6)))
(for ([(a b) (in-some-generator)])
  (printf "~a ~a\n" a b))

Fails with: "procedure .../private/for.rkt:691:17: expects 1 argument, given 2: 1 2"
>Fix:
>Release-Note:
I'm not sure exactly what changed but this already works as expected in 5.0.99.4 so it will be fixed for the 5.1 release.
>Audit-Trail:
Responsible changed from "nobody" to "rafkind" by rafkind at Sat, 22 Jan 2011 18:13:36 -0500
Reason>>> .


State changed from "open" to "closed" by rafkind at Mon, 24 Jan 2011 13:17:08 -0500
Reason>>> works in 5.0.99.4


State changed from "closed" to "open" by rafkind at Sun, 30 Jan 2011 13:36:48 -0500
Reason>>> bug still exists

From: Jon Rafkind <rafkind@cs.utah.edu>
To: bugs@racket-lang.org
Cc: rafkind@racket-lang.org, bug-notification@racket-lang.org,
        mwilber@uccs.edu
Subject: Re: [racket-bug] all/11662 Generators that yield multiple values
 and in-generator are broken when called through a function
Date: Mon, 31 Jan 2011 12:00:21 -0700

 On 01/30/2011 11:36 AM, rafkind@racket-lang.org wrote:
 > State changed from "closed" to "open" by rafkind at Sun, 30 Jan 2011 13:36:48 -0500
 > Reason>>> bug still exists
 >
 >
 > View:
 >   http://bugs.racket-lang.org/query/?cmd=view&pr=11662
 There are two issues with this, one can be solved, the other I'm not
 sure about.
 1. the `in-producer' function on line 818 of racket/private/for.rkt
 currently has
    (lambda (x) (not (eq? x stop)
 but to support multiple values this should be changed to
   (lambda xs (andmap (lambda (x) (not (eq? x stop))) xs))
 
 With this change executing the failing code above results in
 1 2
 3 4
 5 6
 context (lexical binding) expected 2 values, received 1 value: 'g409
 
 The new error message leads to the second issue
 2. The `in-generator' form only returns one stop value when used outside
 a `for' form because it doesn't know how many variables to bind.
 Normally N stop values are generated, one for each for loop variable
 that needs to be bound.
 
 I'm not sure how the `in-generator' form can communicate with the `for'
 stuff to overcome this limitation.


State changed from "open" to "analyzed" by rafkind at Wed, 02 Mar 2011 12:47:16 -0500
Reason>>> .

Responsible changed from "rafkind" to "mflatt" by mflatt@racket-lang.org at Fri, 14 Sep 2012 16:58:07 -0400
Reason>>> A commit by mflatt@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/adb5c01ac4
State changed from "analyzed" to "closed" by mflatt@racket-lang.org at Fri, 14 Sep 2012 16:58:07 -0400
Reason>>> A commit by mflatt@racket-lang.org has resolved this report
  http://git.racket-lang.org/plt/commit/adb5c01ac4
