From tenneg@cs.bgu.ac.il  Wed Jul 18 11:33:46 2001
Return-Path: <tenneg@cs.bgu.ac.il>
Received: from localhost (pop07-1-ras2-p11.barak.net.il [212.150.107.11])
	by cs.rice.edu (Postfix) with ESMTP id 1576F17B8
	for <plt-gnats>; Wed, 18 Jul 2001 11:33:41 -0500 (CDT)
Message-Id: <20010718163341.1576F17B8@cs.rice.edu>
Date: Wed, 18 Jul 2001 11:33:41 -0500 (CDT)
From: tenneg@cs.bgu.ac.il
To: plt-gnats@cs.rice.edu
Subject: adding normal order option

>Number:         1994
>Category:       misc
>Synopsis:       adding normal order option
>Class:          change-request
>Responsible:    steck
>Severity:       non-critical
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Wed Jul 18 12:45:01 -0400 2001
>Closed-Date:    Mon Dec 17 14:54:56 -0500 2001
>Last-Modified:  Mon May 05 16:26:47 -0400 2008
>Originator:     Giora Tenne
>Organization:
titan
>Submitter-Id:   unknown
>Release:        103
>Environment:
windows (win32\i386) (get-display-depth) = 32
Tools: ("project-manager" "syncheck")
Docs Installed:
("advanced" "beginning" "drscheme" "help" "icons" "intermediate" "misclib" "mred" "mzscheme" "r5rs" "teachpack")
Collections:
(("e:\\progra~1\\plt\\.\\collects\\setup\\..\\..\\collects" ("afm" "browser" "compiler" "defaults" "doc" "drscheme" "drscheme-jr" "dynext" "errortrace" "framework" "games" "graphics" "guserspce" "help" "hierlist" "htdp" "icons" "launcher" "make" "mred" "mzlib" "mzscheme" "net" "setup" "slibinit" "stepper" "stepper-graphical" "userspce" "xml" "zodiac")))
>Description:
It would be very nice and helpfull if there was an option to switch between aplicative order and normal (lazy) order.
-Giora
>How-To-Repeat:
>Fix:
>Release-Note:
>Audit-Trail:
From: "Paul A. Steckler" <psteckler@earthlink.net>
To: <tenneg@cs.bgu.ac.il>, <plt-gnats@cs.rice.edu>
Cc:  Subject: Re: all/1994: adding normal order option
Date: Wed, 18 Jul 2001 12:40:45 -0500

 > It would be very nice and helpfull if there was an option to switch between aplicative order and normal (lazy) order.
 
 Well, that wouldn't be Scheme.  Perhaps you
 could write a set of macros that thunkify 
 arguments and de-thunk them at variable 
 uses to get the laziness.
 
 But a good lazy evaluator would use a more 
 optimized strategy, like graph reduction.
 That's beyond the scope of PLT Scheme, I'd say.
 
 -- Paul
 
 
State-Changed-From-To: open->closed
State-Changed-By: steck
State-Changed-When: Mon Dec 17 14:54:56 2001
State-Changed-Why:
    No further response from user.
>Unformatted:
