From apache@plt-scheme.org Fri Nov 24 17:43:48 2006
Received: from py-out-1112.google.com (py-out-1112.google.com [64.233.166.181])
	by champlain.ccs.neu.edu (8.13.8/8.13.7) with ESMTP id kAOMhg2c023043
	for <bugs@bugs.plt-scheme.org>; Fri, 24 Nov 2006 17:43:42 -0500
Message-Id: <200611242243.kAOMhdlk023037@champlain.ccs.neu.edu>
Date: Fri, 24 Nov 2006 17:43:39 -0500
From: cobbe@ccs.neu.edu
To: bugs@plt-scheme.org
Subject: syntax/c seems to have broken between 352 and 359.100

>Number:         8403
>Category:       misc
>Synopsis:       syntax/c seems to have broken between 352 and 359.100
>Class:          sw-bug
>Responsible:    robby
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Fri Nov 24 17:45:01 -0500 2006
>Closed-Date:    Wed Dec 27 15:06:01 -0500 2006
>Last-Modified:  Sat Dec 30 07:35:01 -0500 2006
>Originator:     Richard Cobbe
>Organization:
plt
>Submitter-Id:   unknown
>Release:        360.1-svn22nov2006
>Environment:
macosx "Darwin vetinari.ccs.neu.edu 8.8.0 Darwin Kernel Version 8.8.0: Fri Sep  8 17:18:57 PDT 2006; root:xnu-792.12.6.obj~1/RELEASE_PPC Power Macintosh powerpc" (ppc-macosx/3m) (get-display-depth) = 32
Docs Installed:
(("/Users/cobbe/plt/doc" "r5rs" "mzscheme" "mred" "help" "tour" "drscheme" "srfi" "mzlib" "misclib" "mrlib" "framework" "foreign" "mzc" "tools" "insidemz" "web-server" "swindle" "plot" "release-notes" "t-y-scheme" "tex2page" "beginning" "beginning-abbr" "intermediate" "intermediate-lambda" "advanced" "teachpack" "teachpack-htdc" "profj-beginner" "profj-intermediate" "profj-advanced"))
Human Language: english
(current-memory-use) 102398656

Collections:
(("/Users/cobbe/Library/PLT Scheme/360.1/collects" non-existent-path) ("/Users/cobbe/plt/collects" "afm" "algol60" "browser" "compiler" "config" "defaults" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "framework" "frtime" "games" "graphics" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu-module" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrflow" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "mztake" "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profj" "profjBoxes" "profjWizard" "r5rs" "r6rs" "readline" "repos-time-stamp" "scribble" "setup" "sgl" "sirmail" "skipper" "slatex" "slibinit" "slideshow" "srfi" "srpersist" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-suite" "tests" "tex2page" "texpict" "trace" "version" "waterworld" "web-server" "xelda" "xml"))
Teachpack filenames: ()
Computer Language: (("Professional Languages" "PLT" "Textual (MzScheme, includes R5RS)") #6(#t write mixed-fraction-e #f #t debug))
>Description:
The syntax/c contract constructor seems to have broken between 352 and 359.100; It was still broken in SVN as of th 22nd.  It no longer accepts as many values as it used to.
>How-To-Repeat:
Enter the following code in the definitions window (textual language):

;;;;; BEGIN CODE ;;;;;;
(require (lib "contract.ss"))

(define ct (syntax/c (listof any/c)))
(define ct? (flat-contract-predicate ct))

(define (f stx)
  (syntax-case stx ()
    [(x xs ...) (ct? #'(x xs ...))]))

(list (ct? #'a)
      (ct? #'(a b c))
      (f #'(a b c)))
;;;;; END CODE ;;;;;

I'd expect this to produce (#f #t #t), as it does under DrScheme 352 (release) and MzScheme 352 (release).  Under versions 359.100 (svn as of 7nov2006) and 360.1-svn22nov2006, it returns (#f #t #f) instead.  This behavior is reproducible in MzScheme, DrScheme module language, and DrScheme textual language.
>Fix:
>Audit-Trail:
Responsible changed from "nobody" to "robby" by eli at Wed, 27 Dec 2006 14:56:35 -0500
Reason>>> contracts


State changed from "open" to "closed" by robby at Wed, 27 Dec 2006 15:06:01 -0500
Reason>>> That's just what syntax/c does. 

Maybe this PR should turn into a change-request for a
different sytnax/c, I'm not sure. I'll just close it for now.


From: "Robby Findler" <robby.findler@gmail.com>
To: bugs@plt-scheme.org, cobbe@ccs.neu.edu,
        "Matthew Flatt" <mflatt@cs.utah.edu>
Cc: 
Subject: Re: misc/8403: syntax/c seems to have broken between 352 and 359.100
Date: Wed, 27 Dec 2006 14:05:08 -0600

 These results are consistent with what MzScheme currently does. In
 particular, the argument to ct? in the third case is a dotted pair of
 syntax objects, not a list.
 
 I'm not sure if this suggests that syntax/c is just a not-very-useful
 contract combinator, tho....
 
 (define ct (syntax/c (listof any/c)))
 (define ct? (flat-contract-predicate ct))
 
 (define (f stx)
   (syntax-case stx ()
     [(x xs ...) (ct? #'(x xs ...))]))
 
 (list (ct? #'a)
       (ct? #'(a b c))
       (f #'(a b c)))
 
 Robby
