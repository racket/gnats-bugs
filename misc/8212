From apache@plt-scheme.org Tue Aug  8 10:57:31 2006
Received: from champlain.ccs.neu.edu (champlain.ccs.neu.edu [127.0.0.1])
	by champlain.ccs.neu.edu (8.13.7/8.13.7) with ESMTP id k78EvUFW020180
	for <bugs@plt-scheme.org>; Tue, 8 Aug 2006 10:57:30 -0400
Message-Id: <200608081457.k78EvUXx020179@champlain.ccs.neu.edu>
Date: Tue, 8 Aug 2006 10:57:30 -0400
From: heard@duvel.ir.iit.edu
To: bugs@plt-scheme.org
Subject: (regexp) in Swindle pattern matching

>Number:         8212
>Category:       misc
>Synopsis:       (regexp) in Swindle pattern matching
>Class:          sw-bug
>Responsible:    eli
>Severity:       non-critical
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Tue Aug 08 11:00:01 -0400 2006
>Last-Modified:  Tue May 03 16:39:42 -0400 2011
>Originator:     Jefferson Heard
>Organization:
plt
>Submitter-Id:   unknown
>Release:        352
>Environment:
windows-xp
>Description:
The syntax for regexps in let/match and its variants, as specified in the Swindle manual does not work, however regular expressions do if pre-compiled.  
>How-To-Repeat:
Choose any of the "Swindle" languages in DrScheme.  Then, in the REPL:

> (let/match (regexp "foo") "foo" (print "foo"))

BUG let/match: value did not match pattern: "foo"

> (let ((re (regexp "foo"))) (let/match re "foo" (print "foo")))

"foo"
>Fix:
>Audit-Trail:
From: Eli Barzilay <eli@barzilay.org>
To: heard@duvel.ir.iit.edu, bugs@plt-scheme.org
Cc: 
Subject: Re: all/8212: (regexp) in Swindle pattern matching
Date: Wed, 9 Aug 2006 11:42:05 -0400

 On Aug  8, heard@duvel.ir.iit.edu wrote:
 > *** Description:
 > The syntax for regexps in let/match and its variants, as specified
 > in the Swindle manual does not work, however regular expressions do
 > if pre-compiled.
 
 It does work, but...
 
 > *** How to repeat:
 > Choose any of the "Swindle" languages in DrScheme.  Then, in the REPL:
 > 
 > > (let/match (regexp "foo") "foo" (print "foo"))
 > 
 > BUG let/match: value did not match pattern: "foo"
 
 The problem here is that `regexp' used at the toplevel, and the way
 the namespace is set up, the internal `regexp' is "copied" to a
 different `regexp' binding, which affects its use as a macro keyword.
 If you do it in a module, or if you `require' Swindle, this will work
 fine.
 
 
 > > (let ((re (regexp "foo"))) (let/match re "foo" (print "foo")))
 > 
 > "foo"
 
 Right -- here you just use the `regexp' function.  BTW, the (regexp
 "...") thing is pretty old, and not to useful these days, since you
 can just use a literal regular expression: #rx"...".
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                   http://www.barzilay.org/                 Maze is Life!

Responsible changed from "nobody" to "eli" by ryanc at Tue, 03 May 2011 16:39:42 -0400
Reason>>> swindle

