From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Tue Nov 17 08:48:34 2009
Received: from mail-yx0-f192.google.com (mail-yx0-f192.google.com [209.85.210.192])
	by champlain.ccs.neu.edu (8.14.2/8.14.2) with ESMTP id nAHDmTh7027929
	for <bugs@bugs.plt-scheme.org>; Tue, 17 Nov 2009 08:48:29 -0500
Message-Id: <200911171348.nAHDmR44027923@champlain.ccs.neu.edu>
Date: Tue, 17 Nov 2009 08:48:27 -0500
From: samth@ccs.neu.edu
To: bugs@plt-scheme.org
Subject: scribble renders examples with incorrect spacing

>Number:         10584
>Category:       misc
>Synopsis:       scribble renders examples with incorrect spacing
>Class:          sw-bug
>Responsible:    mflatt
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Tue Nov 17 08:52:01 -0500 2009
>Last-Modified:  Fri Sep 03 21:21:12 -0400 2010
>Originator:     Sam TH
>Organization:
plt
>Submitter-Id:   unknown
>Release:        4.2.3.1-svn16nov2009
>Environment:
unix "Linux ajax 2.6.31-14-generic #48-Ubuntu SMP Fri Oct 16 14:04:26 UTC 2009 i686 GNU/Linux" (i386-linux/3m) (get-display-depth) = 24
Human Language: english
(current-memory-use) 228990992

Collections:
(("/home/samth/scheme" non-existent-path) ("/home/samth/.plt-scheme/4.2.3.1/collects" non-existent-path) ("/home/samth/sw/plt-trunk/collects" "ffi" "hierlist" "teachpack" ".svn" "icons" "framework" "planet" "test-engine" "trace" "unstable" "htdp" "setup" "embedded-gui" "readline" "browser" "deinprogramm" "algol60" "make" "scribblings" "mzscheme" "mrlib" "sgl" "r5rs" "xml" "redex" "repos-time-stamp" "honu" "games" "syntax-color" "launcher" "parser-tools" "reader" "slideshow" "help" "drscheme" "scheme" "dynext" "afm" "srpersist" "sirmail" "tests" "handin-client" "plot" "html" "tex2page" "handin-server" "info-domain" "graphics" "profile" "lazy" "macro-debugger" "lang" "compiler" "mzcom" "gui-debugger" "guibuilder" "mysterx" "frtime" "rnrs" "scribble" "r6rs" "stepper" "syntax" "scriblib" "2htdp" "combinator-parser" "string-constants" "waterworld" "openssl" "schemeunit" "slatex" "errortrace" "net" "eopl" "s-exp" "mzlib" "typed-scheme" "wxme" "web-server" "config" "test-box-recove!
 ry" "srfi" "svn.commit~" "mred" "version" "defaults" "at-exp" "texpict" "file" "swindle" "typed" "preprocessor"))
Computer Language: (("Module") (#(#t write mixed-fraction-e #f #t none) (default) #() "#lang scheme\n" #t))
>Description:
This is a reduced test case for bugs noticed by Jon Rafkind in the scribblings/reference/pairs.scrbl documentation.

The below file mis-renders (to HTML) the spacing in both examples.  The first example adds approximately 20 blank lines between the `list' and the argument.  The number is based on how far down in the file the call to the `test' macro is.

The second example, when the source context is removed, deletes all spaces between all of the forms, printing as '(list(12345))', which is semantically incorrect in addition to not looking right.

#lang scribble/doc
@(require scribble/eval (for-syntax scheme/base))

@(define-syntax (test stx)
   (syntax-case stx ()
     [(_ example)
      #`(examples #:eval (make-base-eval)
                  (list example)
                  (list #,(syntax->datum #'example)))]))

@(test '(1 2 3 4 5))
>How-To-Repeat:
>Fix:
>Audit-Trail:
From: Matthew Flatt <mflatt@cs.utah.edu>
To: samth@ccs.neu.edu, bugs@plt-scheme.org
Cc: nobody@plt-scheme.org, bug-notification@plt-scheme.org
Subject: Re: [plt-bug] all/10584: scribble renders examples with incorrect spacing
Date: Tue, 17 Nov 2009 08:14:18 -0700

 This isn't so much a bug as a limitation of `examples' or other things
 based on `schemeblock', which use the source locations on terms to
 determine spacing. The only solution right now is to construct terms
 whose parts have source locations that are right relative to each
 other.
 
 At Tue, 17 Nov 2009 08:52:01 -0500, samth@ccs.neu.edu wrote:
 > This is a reduced test case for bugs noticed by Jon Rafkind in the 
 > scribblings/reference/pairs.scrbl documentation.
 > 
 > The below file mis-renders (to HTML) the spacing in both examples.  The first 
 > example adds approximately 20 blank lines between the `list' and the 
 > argument.  The number is based on how far down in the file the call to the 
 > `test' macro is.
 > 
 > The second example, when the source context is removed, deletes all spaces 
 > between all of the forms, printing as '(list(12345))', which is semantically 
 > incorrect in addition to not looking right.
 > 
 > #lang scribble/doc
 > @(require scribble/eval (for-syntax scheme/base))
 > 
 > @(define-syntax (test stx)
 >    (syntax-case stx ()
 >      [(_ example)
 >       #`(examples #:eval (make-base-eval)
 >                   (list example)
 >                   (list #,(syntax->datum #'example)))]))
 > 
 > @(test '(1 2 3 4 5))
 
From: Sam TH <samth@ccs.neu.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: bugs@plt-scheme.org, nobody@plt-scheme.org,
        bug-notification@plt-scheme.org
Subject: Re: [plt-bug] all/10584: scribble renders examples with incorrect 
	spacing
Date: Tue, 17 Nov 2009 10:33:40 -0500

 On Tue, Nov 17, 2009 at 10:14 AM, Matthew Flatt <mflatt@cs.utah.edu> wrote:
 > This isn't so much a bug as a limitation of `examples' or other things
 > based on `schemeblock', which use the source locations on terms to
 > determine spacing. The only solution right now is to construct terms
 > whose parts have source locations that are right relative to each
 > other.
 
 That's reasonable, but then I think much more documentation is
 required about how `schemeblock' uses the precise source locations of
 its arguments.  For example, if one piece of syntax in the argument
 has no source location, it appears to be typeset with no spaces in
 between.  It took me about 5 minutes of experimentation to determine
 which part of the source location fields controlled what, and to be
 able to move the examples around in my output.
 
 Also, the `code' macro in Slideshow, which I thought worked similarly,
 works much better for this:
 
 @(define-syntax (m stx)
    #`(schemeblock #,(list 1 2 3 4 5)))
 
 @(m)
 
 produces no spacing, but
 
 (define-syntax (m2 stx)
     #`(code #,(list 1 2 3 4 5)))
 
 (m2)
 
 renders the way you would like it to.  Is `code' doing something different =
 here?
 
 >
 > At Tue, 17 Nov 2009 08:52:01 -0500, samth@ccs.neu.edu wrote:
 >> This is a reduced test case for bugs noticed by Jon Rafkind in the
 >> scribblings/reference/pairs.scrbl documentation.
 >>
 >> The below file mis-renders (to HTML) the spacing in both examples. =A0Th=
 e first
 >> example adds approximately 20 blank lines between the `list' and the
 >> argument. =A0The number is based on how far down in the file the call to=
  the
 >> `test' macro is.
 >>
 >> The second example, when the source context is removed, deletes all spac=
 es
 >> between all of the forms, printing as '(list(12345))', which is semantic=
 ally
 >> incorrect in addition to not looking right.
 >>
 >> #lang scribble/doc
 >> @(require scribble/eval (for-syntax scheme/base))
 >>
 >> @(define-syntax (test stx)
 >> =A0 =A0(syntax-case stx ()
 >> =A0 =A0 =A0[(_ example)
 >> =A0 =A0 =A0 #`(examples #:eval (make-base-eval)
 >> =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 (list example)
 >> =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 (list #,(syntax->datum #'example)))]=
 ))
 >>
 >> @(test '(1 2 3 4 5))
 >
 >
 
 
 
 --=20
 sam th
 samth@ccs.neu.edu
From: Matthew Flatt <mflatt@cs.utah.edu>
To: Sam TH <samth@ccs.neu.edu>
Cc: bugs@plt-scheme.org, nobody@plt-scheme.org,
        bug-notification@plt-scheme.org
Subject: Re: [plt-bug] all/10584: scribble renders examples with incorrect 
	spacing
Date: Tue, 17 Nov 2009 08:58:33 -0700

 At Tue, 17 Nov 2009 10:33:40 -0500, Sam TH wrote:
 > Also, the `code' macro in Slideshow, which I thought worked similarly,
 > works much better for this:
 > 
 > @(define-syntax (m stx)
 >    #`(schemeblock #,(list 1 2 3 4 5)))
 > 
 > @(m)
 > 
 > produces no spacing, but
 > 
 > (define-syntax (m2 stx)
 >     #`(code #,(list 1 2 3 4 5)))
 > 
 > (m2)
 > 
 > renders the way you would like it to.  Is `code' doing something different 
 > here?
 
 Yes, they're a little different. The Scribble algorithm works better
 for me overall, but both have drawbacks.
 
From: Sam TH <samth@ccs.neu.edu>
To: Matthew Flatt <mflatt@cs.utah.edu>
Cc: bugs@plt-scheme.org, nobody@plt-scheme.org,
        bug-notification@plt-scheme.org
Subject: Re: [plt-bug] all/10584: scribble renders examples with incorrect 
	spacing
Date: Tue, 17 Nov 2009 11:12:26 -0500

 On Tue, Nov 17, 2009 at 10:58 AM, Matthew Flatt <mflatt@cs.utah.edu> wrote:
 > At Tue, 17 Nov 2009 10:33:40 -0500, Sam TH wrote:
 >> Also, the `code' macro in Slideshow, which I thought worked similarly,
 >> works much better for this:
 >>
 >> @(define-syntax (m stx)
 >> =A0 =A0#`(schemeblock #,(list 1 2 3 4 5)))
 >>
 >> @(m)
 >>
 >> produces no spacing, but
 >>
 >> (define-syntax (m2 stx)
 >> =A0 =A0 #`(code #,(list 1 2 3 4 5)))
 >>
 >> (m2)
 >>
 >> renders the way you would like it to. =A0Is `code' doing something diffe=
 rent
 >> here?
 >
 > Yes, they're a little different. The Scribble algorithm works better
 > for me overall, but both have drawbacks.
 
 For this particular case, when there's no source location at all, it
 seems like the `code' algorithm is strictly better.  Is that not the
 case?
 
 --=20
 sam th
 samth@ccs.neu.edu

Responsible changed from "nobody" to "mflatt" by eli at Fri, 03 Sep 2010 21:21:12 -0400
Reason>>> scribble

