From nobody@cs.rice.edu  Thu Oct 15 08:05:06 1998
Received: from web.cs.rice.edu (web.cs.rice.edu [128.42.1.163])
	by cs.rice.edu (8.9.0/8.9.0) with ESMTP id IAA10987
	for <plt-gnats@cs.rice.edu>; Thu, 15 Oct 1998 08:05:05 -0500 (CDT)
Message-Id: <199810151305.IAA27423@web.cs.rice.edu>
Date: Thu, 15 Oct 1998 08:05:05 -0500 (CDT)
From: bianco_s@psnsbsn.navy.mil
Reply-To: bianco_s@psnsbsn.navy.mil
To: plt-gnats@cs.rice.edu
Subject: Reference error question 

>Number:         816
>Category:       misc
>Synopsis:       Reference error question
>Confidential:   no
>Severity:       non-critical
>Priority:       low
>Responsible:    mflatt
>State:          closed
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Thu Oct 15 13:15:02 GMT 1998
>Last-Modified:  Fri Dec 11 19:59:30 CST 1998
>Originator:     Stephen Bianco (617) 753-4225
>Organization:
titan
>Release:        53
>Environment:
MS Windows NT
>Description:
 I get a reference to "undefined identifier: cons-stream" error
>How-To-Repeat:
(define (stream-filter pred stream)
  (cond ((stream-null? stream) the-empty-stream)
        ((pred (stream-car stream))
         (cons-stream (stream-car stream)
                      (stream-filter pred
                                     (stream-cdr stream))))
        (else (stream-filter pred (stream-cdr stream)))))

(define (integers-starting-from n)
  (cons-stream n (integers-starting-from (+ n 1))))

(define integers (integers-starting-from 1))

(define (divisible? x y) (= (remainder x y) 0))

(define no-sevens
  (stream-filter (lambda (x) (not (divisible? x 7)))
                 integers))

 (stream-ref no-sevens 100)

;;==;> 117

;; Code from Abelson & Sussman textbok page 322 & 326 
>Fix:

>Audit-Trail:

From: Matthias Felleisen <matthias@cs.rice.edu>
To: bianco_s@psnsbsn.navy.mil
Cc: plt-gnats@cs.rice.edu, steck@cs.rice.edu, steck@cs.rice.edu,
        shriram@cs.rice.edu, mflatt@cs.rice.edu, robby@cs.rice.edu
Subject: Re: all/816: Reference error question
Date: Thu, 15 Oct 1998 08:31:50 -0500 (CDT)

 Abelson and Sussman use MIT-specific definitions for their book. These
 definitions are not included by R4RS Scheme. A teacher must supply an
 appropriate set of definitions for other Scheme implementations. Here
 are the three most basic definitions: 
   
 
   (define-macro cons-stream 
     (lambda (a b)
       `(cons ,a (delay ,b))))
 
   (define (stream-car str)
     (if (pair? str) (car str) 
         (error 'stream-car "cons cell expected, given ~s" str)))
 
   (define (stream-cdr str)
     (if (and (pair? str) (promise? (cdr str))) (force (cdr str)) 
         (error 'stream-cdr "(cons TST Promise) expected, given ~s" str)))
 
 
 It should be obvious from here how to extend this to the full stream
 language of Abelson and Sussman. 
 
 Regards -- Matthias Felleisen

Responsible-Changed-From-To: steck->mflatt
Responsible-Changed-By: mflatt
Responsible-Changed-When: Fri Dec 11 19:59:20 1998
Responsible-Changed-Why:

State-Changed-From-To: open-closed
State-Changed-By: mflatt
State-Changed-When: Fri Dec 11 19:59:23 1998
State-Changed-Why:

Matthias answered.

>Unformatted:
