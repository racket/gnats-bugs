From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Tue Apr 17 18:53:19 2007
Received: from an-out-0708.google.com (an-out-0708.google.com [209.85.132.245])
	by champlain.ccs.neu.edu (8.13.8/8.13.7) with ESMTP id l3HMrJ1j004566
	for <bugs@bugs.plt-scheme.org>; Tue, 17 Apr 2007 18:53:19 -0400
Message-Id: <200704172253.l3HMrH2l004561@champlain.ccs.neu.edu>
Date: Tue, 17 Apr 2007 18:53:17 -0400
From: dillogimp@gmail.com
To: bugs@plt-scheme.org
Subject: bug in print?

>Number:         8617
>Category:       misc
>Synopsis:       bug in print?
>Class:          not-a-bug
>Responsible:    eli
>Severity:       non-critical
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Tue Apr 17 18:55:01 -0400 2007
>Closed-Date:    Fri May 04 02:52:55 -0400 2007
>Last-Modified:  Fri May 04 02:52:55 -0400 2007
>Originator:     dillo gimp
>Organization:
plt
>Submitter-Id:   unknown
>Release:        plt-360-src-unix.tgz
>Environment:
linux-other
>Description:
vector printing bug?
cat withtop.txt accumu.txt | mzscheme 
...
            (let ((I (list->vector (take-right (take seq (+ 1 n)) n)))
                  (b (list->vector (take-right (take seq (+ 1 n m)) m)))
                  (V (list->vector (take-right (take seq (+ 1 n m v)) v)))
                 )  
                 (display (list I b V))(newline)
                 (list I b V)
            )
...

please direct your attention to "***"
I've "quoted" the problem using "***"
As you can see mzscheme print the vector stating 3 elements but printed only 2 elements. If I explicitly use "display" then the vector is printed corrently. 

((#4(0 1 1 2) #16(3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181) #19(6765 10946 17711 28657 46368 75025 121393 196418 317811 514229 832040 1346269 2178309 3524578 5702887 9227465 14930352 24157817 39088169)) *** (#3(0 1) *** #27(2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229) #9(832040 1346269 2178309 3524578 5702887 9227465 14930352 24157817 39088169)) (#2(0 1) #25(1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393) #12(196418 317811 514229 832040 1346269 2178309 3524578 5702887 9227465 14930352 24157817 39088169)) (#1(0) #19(1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181) #19(6765 10946 17711 28657 46368 75025 121393 196418 317811 514229 832040 1346269 2178309 3524578 5702887 9227465 14930352 24157817 39088169)))
>How-To-Repeat:
The code in embedded within some other codes, also there are a lot of  codes before that. It would be a bit difficult to separate out. Besides that the code uses srfi-1 list library (require (lib "list.ss" "srfi" "1")). 
>Fix:
>Audit-Trail:
From: Matthew Flatt <mflatt@cs.utah.edu>
To: dillogimp@gmail.com, bugs@plt-scheme.org
Cc: 
Subject: Re: [plt-bug] all/8617: bug in print?
Date: Wed, 18 Apr 2007 06:59:20 +0800

 At Tue, 17 Apr 2007 18:55:01 -0400, dillogimp@gmail.com wrote:
 > As you can see mzscheme print the vector stating 3 elements but printed only 2 
 > elements. If I explicitly use "display" then the vector is printed corrently. 
 
 The notation `#3(0 1)' means "a vector of three elements; the first one
 is 0, and the rest are 1". So it's equivalent to `#3(0 1 1)' or `#(0 1
 1)'.
 
 You can disable this output format with `(print-vector-length #f)'.
 
 Matthew
 
From: "Robby Findler" <robby@cs.uchicago.edu>
To: dillogimp@gmail.com, bugs@plt-scheme.org
Cc: nobody@plt-scheme.org, eli@plt-scheme.org, matthias@plt-scheme.org,
        sk@plt-scheme.org, mflatt@plt-scheme.org, clements@plt-scheme.org,
        jay@plt-scheme.org, meunier@plt-scheme.org, sowens@plt-scheme.org,
        kathyg@plt-scheme.org, awick@plt-scheme.org, jacobm@plt-scheme.org,
        cce@plt-scheme.org, dalev@plt-scheme.org, samth@plt-scheme.org,
        ryanc@plt-scheme.org
Subject: Re: [plt-bug] all/8617: bug in print?
Date: Tue, 17 Apr 2007 18:20:33 -0500

 It is actually easy to make a small example of this! Here's one:
 
   (write (vector 0 1 1))
 
 Anyways, that's not a bug, but just the way mzscheme prints vectors.
 If the last elements are all the same, mzscheme only shows one of
 them.
 
 See 11.2.5 in the mzscheme manual (search for print-vector-length in help desk).
 
 hth,
 Robby

Class changed from "sw-bug" to "not-a-bug" by eli at Fri, 04 May 2007 02:52:55 -0400
Reason>>> .

Responsible changed from "nobody" to "eli" by eli at Fri, 04 May 2007 02:52:55 -0400
Reason>>> .

State changed from "open" to "closed" by eli at Fri, 04 May 2007 02:52:55 -0400
Reason>>> not a bug

