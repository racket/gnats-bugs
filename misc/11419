From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Wed Nov 10 23:25:19 2010
Received: from mail-fx0-f44.google.com (mail-fx0-f44.google.com [209.85.161.44])
	by champlain.ccs.neu.edu (8.14.3/8.14.3) with ESMTP id oAB4PFuM007058
	for <bugs@bugs.plt-scheme.org>; Wed, 10 Nov 2010 23:25:16 -0500
Message-Id: <201011110425.oAB4PC6i007050@champlain.ccs.neu.edu>
Date: Wed, 10 Nov 2010 23:25:12 -0500
From: neil.toronto@gmail.com
To: bugs@racket-lang.org
Subject: match-define expands to a letrec-values in internal definition contexts

>Number:         11419
>Category:       misc
>Synopsis:       match-define expands to a letrec-values in internal definition contexts
>Class:          sw-bug
>Responsible:    samth
>Severity:       non-critical
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Wed Nov 10 23:28:01 -0500 2010
>Last-Modified:  Wed Nov 17 15:19:15 -0500 2010
>Originator:     Neil Toronto
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.0.2
>Environment:
unix "Linux woodstock 2.6.31-22-generic #67-Ubuntu SMP Sat Oct 16 19:10:07 UTC 2010 i686 GNU/Linux" (i386-linux/3m) (get-display-depth) = 24
Human Language: english
(current-memory-use) 256769408

Collections:
(("/home/neil/.racket/5.0.2/collects" non-existent-path) ("/usr/racket/collects" "info-domain" "file" "mrlib" "config" "stepper" "gui-debugger" "planet" "texpict" "web-server" "readline" "rackunit" "sgl" "defaults" "lazy" "rnrs" "scribble" "ffi" "eopl" "net" "srfi" "schemeunit" "preprocessor" "dynext" "afm" "swindle" "mzlib" "syntax-color" "hierlist" "icons" "typed" "setup" "raco" "redex" "test-engine" "plai" "xml" "macro-debugger" "data" "tex2page" "drscheme" "mred" "slideshow" "wxme" "lang" "openssl" "string-constants" "racket" "teachpack" "mysterx" "embedded-gui" "mzscheme" "syntax" "reader" "make" "algol60" "combinator-parser" "trace" "plot" "slatex" "parser-tools" "frtime" "datalog" "help" "scribblings" "compiler" "browser" "html" "test-box-recovery" "profile" "racklog" "typed-scheme" "errortrace" "scriblib" "htdp" "games" "s-exp" "2htdp" "r6rs" "scheme" "r5rs" "at-exp" "drracket" "deinprogramm" "version" "mzcom" "unstable" "graphics" "launcher" "framework"))
Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t))
>Description:
When match-define is in an internal definition context, it expands to a letrec-values. This causes two problems with patterns that refer to variables bound within parent patterns:

1. They actually compile.
2. When the match is carried out, the variables they refer to are undefined.

So it doesn't catch an error case at compile-time, when it could. See below.
>How-To-Repeat:
; Doesn't compile: "reference to an identifier before its definition: x"
; (highlighted within #'(equal? x y))
(match-define (list x (? (λ (y) (equal? x y)) y))
              (list 4 4))

; Compiles, and fails to match because x is bound to #<undefined>
(let ()
  (match-define (list x (? (λ (y)
                             (printf "x = ~v~n" x)
                             (equal? x y)) y))
                (list 4 4))
  (list x y))
>Fix:
>Audit-Trail:
Responsible changed from "nobody" to "samth" by ryanc at Wed, 17 Nov 2010 15:19:15 -0500
Reason>>> match

