From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Mon Dec  7 16:50:17 2009
Received: from mail-gx0-f227.google.com (mail-gx0-f227.google.com [209.85.217.227])
	by champlain.ccs.neu.edu (8.14.2/8.14.2) with ESMTP id nB7LoCOF011002
	for <bugs@bugs.plt-scheme.org>; Mon, 7 Dec 2009 16:50:12 -0500
Message-Id: <200912072150.nB7Lo8FF010994@champlain.ccs.neu.edu>
Date: Mon, 7 Dec 2009 16:50:08 -0500
From: sstrickl@ccs.neu.edu
To: bugs@plt-scheme.org
Subject: case-> should just accept arrow contracts values as clauses

>Number:         10649
>Category:       contract
>Synopsis:       case-> should just accept arrow contracts values as clauses
>Class:          sw-bug
>Responsible:    sstrickl
>Severity:       serious
>Priority:       medium
>State:          analyzed
>Confidential:   no
>Arrival-Date:   Mon Dec 07 16:52:01 -0500 2009
>Closed-Date:    
>Last-Modified:  Wed May 04 04:24:42 -0400 2011
>Originator:     Stevie Strickland
>Organization:
plt
>Submitter-Id:   unknown
>Release:        4.2.3.4-svn7dec2009
>Environment:
macosx "Darwin dublin.local 10.2.0 Darwin Kernel Version 10.2.0: Tue Nov  3 10:37:10 PST 2009; root:xnu-1486.2.11~1/RELEASE_I386 i386" (i386-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 101554156

Collections:
(("/Users/sstrickl/Library/PLT Scheme/4.2.3.4/collects" non-existent-path) ("/Users/sstrickl/plt/collects" ".DS_Store" ".svn" "2htdp" "afm" "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "defaults" "deinprogramm" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "reader" "readline" "redex" "repos-time-stamp" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "sirmail" "slatex" "slideshow" "srfi" "srpersist" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tests" "tex2page" "texpict" "trace" "typed" !
 "typed-scheme" "unstable" "version" "waterworld" "web-server" "wxme" "xml"))
Computer Language: (("Module") (#(#t write mixed-fraction-e #f #t debug) (default) #() "#lang scheme\n" #t))
>Description:
Currently case-> requires a specific syntax for its clauses.  It would seem more useful to just allow anything that evaluates to a contract arrow in a clause position.  This has been something I've been wanting to investigate for a while, and would allow true ->* and ->d contracts with case->.

One drawback to the change is that we'll have to look at the -> contract structs at runtime to catch any errors, so we'll lose errors at syntax time.  However, I'm not convinced that's more important than the flexibility gained.

Also, such a change would not be backwards compatible for anyone using the rest-arg keyword #:rest, unless we change the regular -> contract to take such a keyword.  Which... could be okay.

Anyway, putting this in so I can remember to look at it later, as I've kept forgetting without such a report in the system despite requests by Sam.  Robby, do you have anything to add to this/warn against/etc.?
>How-To-Repeat:
>Fix:
>Audit-Trail:
Responsible changed from "nobody" to "sstrickl" by sstrickl at Mon, 07 Dec 2009 16:53:36 -0500
Reason>>> Taking it on for later

State changed from "open" to "analyzed" by sstrickl at Mon, 07 Dec 2009 16:53:36 -0500
Reason>>> I know what the path forward is, if I move on this.

From: Robby Findler <robby@eecs.northwestern.edu>
To: sstrickl <sstrickl@ccs.neu.edu>, bugs <bugs@plt-scheme.org>
Cc: nobody <nobody@plt-scheme.org>,
        bug-notification <bug-notification@plt-scheme.org>
Subject: Re: [plt-bug] all/10649: case-> should just accept arrow contracts 
	values as clauses
Date: Mon, 7 Dec 2009 15:59:19 -0600

 The performance would be bad, but that seems fine. Better than not
 having it at all. And the huge performance hit in ->d seems to only
 have caused one or two complaints so far, so perhaps it is okay.
 
 Robby
 
 On Mon, Dec 7, 2009 at 3:52 PM,  <sstrickl@ccs.neu.edu> wrote:
 > A new problem report is waiting at
 > =C2=A0http://bugs.plt-scheme.org/query/?cmd=3Dview&pr=3D10649
 >
 > Reported by Stevie Strickland for release: 4.2.3.4-svn7dec2009
 >
 > *** Description:
 > Currently case-> requires a specific syntax for its clauses. =C2=A0It wou=
 ld seem more useful to just allow anything that evaluates to a contract arr=
 ow in a clause position. =C2=A0This has been something I've been wanting to=
  investigate for a while, and would allow true ->* and ->d contracts with c=
 ase->.
 >
 > One drawback to the change is that we'll have to look at the -> contract =
 structs at runtime to catch any errors, so we'll lose errors at syntax time=
 . =C2=A0However, I'm not convinced that's more important than the flexibili=
 ty gained.
 >
 > Also, such a change would not be backwards compatible for anyone using th=
 e rest-arg keyword #:rest, unless we change the regular -> contract to take=
  such a keyword. =C2=A0Which... could be okay.
 >
 > Anyway, putting this in so I can remember to look at it later, as I've ke=
 pt forgetting without such a report in the system despite requests by Sam. =
 =C2=A0Robby, do you have anything to add to this/warn against/etc.?
 >
 > *** How to repeat:
 >
 >
 > *** Environment:
 > macosx "Darwin dublin.local 10.2.0 Darwin Kernel Version 10.2.0: Tue Nov =
 =C2=A03 10:37:10 PST 2009; root:xnu-1486.2.11~1/RELEASE_I386 i386" (i386-ma=
 cosx/3m) (get-display-depth) =3D 32
 > Human Language: english
 > (current-memory-use) 101554156
 >
 > Collections:
 > (("/Users/sstrickl/Library/PLT Scheme/4.2.3.4/collects" non-existent-path=
 ) ("/Users/sstrickl/plt/collects" ".DS_Store" ".svn" "2htdp" "afm" "algol60=
 " "at-exp" "browser" "combinator-parser" "compiler" "config" "defaults" "de=
 inprogramm" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "f=
 ile" "framework" "frtime" "games" "graphics" "gui-debugger" "guibuilder" "h=
 andin-client" "handin-server" "help" "hierlist" "honu" "htdp" "html" "icons=
 " "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mr=
 lib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "p=
 lanet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "reader" "readline" "r=
 edex" "repos-time-stamp" "rnrs" "s-exp" "scheme" "schemeunit" "scribble" "s=
 cribblings" "scriblib" "setup" "sgl" "sirmail" "slatex" "slideshow" "srfi" =
 "srpersist" "stepper" "string-constants" "swindle" "syntax" "syntax-color" =
 "teachpack" "test-box-recovery" "test-engine" "tests" "tex2page" "texpict" =
 "trace" "typed" !
 > =C2=A0"typed-scheme" "unstable" "version" "waterworld" "web-server" "wxme=
 " "xml"))
 > Computer Language: (("Module") (#(#t write mixed-fraction-e #f #t debug) =
 (default) #() "#lang scheme\n" #t))
 >
 >
From: Stevie Strickland <sstrickl@ccs.neu.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: bugs <bugs@plt-scheme.org>
Subject: Re: [plt-bug] all/10649: case-> should just accept arrow contracts  values as clauses
Date: Mon, 7 Dec 2009 17:38:38 -0500

 On Dec 7, 2009, at 4:59 PM, Robby Findler wrote:
 > The performance would be bad, but that seems fine. Better than not
 > having it at all. And the huge performance hit in ->d seems to only
 > have caused one or two complaints so far, so perhaps it is okay.
 
 Okay.  Thanks!
 
 I'm taking everyone off (but the bug tracker itself just to keep it on =
 the ticket trail), since this isn't kinda off-topic, but I was just =
 curious: which huge performance hit in ->d are you talking about?  Is =
 this the change to "picky" checking of the contracts on the function =
 arguments as used in the contract?
 
 Stevie=
From: Robby Findler <robby@eecs.northwestern.edu>
To: Stevie Strickland <sstrickl@ccs.neu.edu>
Cc: bugs <bugs@plt-scheme.org>
Subject: Re: [plt-bug] all/10649: case-> should just accept arrow contracts 
	values as clauses
Date: Mon, 7 Dec 2009 16:45:47 -0600

 On Mon, Dec 7, 2009 at 4:38 PM, Stevie Strickland <sstrickl@ccs.neu.edu> wr=
 ote:
 > On Dec 7, 2009, at 4:59 PM, Robby Findler wrote:
 >> The performance would be bad, but that seems fine. Better than not
 >> having it at all. And the huge performance hit in ->d seems to only
 >> have caused one or two complaints so far, so perhaps it is okay.
 >
 > Okay. =C2=A0Thanks!
 >
 > I'm taking everyone off (but the bug tracker itself just to keep it on th=
 e ticket trail), since this isn't kinda off-topic, but I was just curious: =
 which huge performance hit in ->d are you talking about? =C2=A0Is this the =
 change to "picky" checking of the contracts on the function arguments as us=
 ed in the contract?
 
 Well, huge is relative :), but ->d actually builds the combinators
 during contract checking time and that's pretty slow compared to what
 -> does. Compare, for example a non-dependent ->d to the corresponding
 -> contract in a tight loop.
 
 The issue is that the construction of the projection is happening
 during checking with the ->d instead of before any checking, as with
 ->.
 
 I see a factor of 15 difference between these two contracts, for example:
 
 #lang scheme
 (define (go f)
   (time
    (let loop ([n 10000])
      (unless (zero? n)
        (f 1) (f 1) (f 1) (f 1) (f 1)
        (f 1) (f 1) (f 1) (f 1) (f 1)
        (f 1) (f 1) (f 1) (f 1) (f 1)
        (f 1) (f 1) (f 1) (f 1) (f 1)
        (f 1) (f 1) (f 1) (f 1) (f 1)
        (loop (- n 1))))))
 
 (go (contract (-> integer? void?) void 'pos 'neg))
 (go (contract (->d ([in integer?]) () [out void?]) void 'pos 'neg))
 
 Robby

