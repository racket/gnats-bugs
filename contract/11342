From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Fri Oct 22 21:15:07 2010
Received: from mail-iw0-f172.google.com (mail-iw0-f172.google.com [209.85.214.172])
	by champlain.ccs.neu.edu (8.14.3/8.14.3) with ESMTP id o9N1F3rK012709
	for <bugs@bugs.plt-scheme.org>; Fri, 22 Oct 2010 21:15:03 -0400
Message-Id: <201010230115.o9N1F0B0012696@champlain.ccs.neu.edu>
Date: Fri, 22 Oct 2010 21:15:00 -0400
From: jay@racket-lang.org
To: bugs@racket-lang.org
Subject: Dependent contract feature requests

>Number:         11342
>Category:       contract
>Synopsis:       Dependent contract feature requests
>Class:          change-request
>Responsible:    robby
>Severity:       serious
>Priority:       medium
>State:          open
>Confidential:   no
>Arrival-Date:   Fri Oct 22 21:16:02 -0400 2010
>Last-Modified:  Thu Oct 28 00:15:36 -0400 2010
>Originator:     Jay McCarthy
>Organization:
plt
>Submitter-Id:   unknown
>Release:        5.0.2.1--2010-10-21(34e940a/g)
>Environment:
macosx "Darwin jay-mccarthys-macbook.local 10.4.0 Darwin Kernel Version 10.4.0: Fri Apr 23 18:28:53 PDT 2010; root:xnu-1504.7.4~1/RELEASE_I386 i386" (i386-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 202241796

Collections:
(("/Users/jay/Library/Racket/5.0.2.1/collects" non-existent-path) ("/Users/jay/Dev/scm/plt/collects" ".gitignore" "2htdp" "afm" "algol60" "at-exp" "browser" "combinator-parser" "compiler" "config" "data" "datalog" "defaults" "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "meta" "mred" "mrlib" "mysterx" "mz" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "plai" "planet" "plot" "preprocessor" "profile" "r5rs" "r6rs" "racket" "racklog" "rackunit" "raclog" "raco" "racunit" "reader" "readline" "redex" "repo-time-stamp" "repos-time-stamp" "rico" "rktunit" "rnrs" "s-exp" "schelog" "scheme" "schemeunit" "scribble" "scribblings" "scriblib" "setup" "sgl" "sirmail" "slatex" "slideshow" "srfi" "srpersist" "stepper" "string-!
 constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tests" "tex2page" "texpict" "trace" "typed" "typed-scheme" "unstable" "version" "waterworld" "web-server" "wxme" "xml"))
Computer Language: (("Determine language from source") (#(#t print mixed-fraction-e #f #t debug) (default) #() "#lang racket\n" #t))
>Description:
I would like a few new features in dependent contracts.

First, I would like to be able to specify what exactly went wrong with a pre or post condition. For example, if the pre-condition is (and (p1? x) (p2? x)) it is uninformative to say "pre-condition failed".

Second, I would like to be able to communicate values from the pre-condition to the post-condition. This is important for efficiency and for stateful properties.

Third, I would like to be able to compute some information for the pre/post conditions at projection time.
>How-To-Repeat:
>Fix:
>Audit-Trail:
From: Stevie Strickland <sstrickl@ccs.neu.edu>
To: jay@racket-lang.org, bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11342: Dependent contract feature requests
Date: Fri, 22 Oct 2010 18:25:14 -0700

 On Oct 22, 2010, at 6:16 PM, jay@racket-lang.org wrote:
 > First, I would like to be able to specify what exactly went wrong with =
 a pre or post condition. For example, if the pre-condition is (and (p1? =
 x) (p2? x)) it is uninformative to say "pre-condition failed".
 
 Me too, and I have some ideas on how to do this, which I'll probably =
 implement as I also convert ->i to chaperones/proxies.
 
 > Second, I would like to be able to communicate values from the =
 pre-condition to the post-condition. This is important for efficiency =
 and for stateful properties.
 
 Given our discussions, I agree that this would be useful.  Haven't put =
 any thought on the best way to do this yet though.  If I think of =
 something while in that area, I'll run it by you and Robby to see if =
 it's reasonable.  (Similarly, if Robby has ideas, I'll be happy to =
 implement while I'm already working in that code.)
 
 > Third, I would like to be able to compute some information for the =
 pre/post conditions at projection time.
 
 Haven't thought about this yet.  Can you give me a specific use case =
 that you've already considered?
 
 Stevie=
From: Robby Findler <robby@eecs.northwestern.edu>
To: jay@racket-lang.org, bugs@racket-lang.org
Cc: nobody@racket-lang.org, bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11342: Dependent contract feature requests
Date: Fri, 22 Oct 2010 20:26:04 -0500

 On Fri, Oct 22, 2010 at 8:16 PM,  <jay@racket-lang.org> wrote:
 > A new problem report is waiting at
 > =C2=A0http://bugs.racket-lang.org/query/?cmd=3Dview&pr=3D11342
 >
 > Reported by Jay McCarthy for release: 5.0.2.1--2010-10-21(34e940a/g)
 >
 > *** Description:
 > I would like a few new features in dependent contracts.
 >
 > First, I would like to be able to specify what exactly went wrong with a =
 pre or post condition. For example, if the pre-condition is (and (p1? x) (p=
 2? x)) it is uninformative to say "pre-condition failed".
 
 How do you imagine doing this? Multiple occurrences of #:pre maybe?
 
 > Second, I would like to be able to communicate values from the pre-condit=
 ion to the post-condition. This is important for efficiency and for statefu=
 l properties.
 
 Ryan and I talked about this some at oopsla, I think I know how to help.
 
 > Third, I would like to be able to compute some information for the pre/po=
 st conditions at projection time.
 
 What time is projection time?
 
 Robby
 
 > *** How to repeat:
 >
 >
 > *** Environment:
 > macosx "Darwin jay-mccarthys-macbook.local 10.4.0 Darwin Kernel Version 1=
 0.4.0: Fri Apr 23 18:28:53 PDT 2010; root:xnu-1504.7.4~1/RELEASE_I386 i386"=
  (i386-macosx/3m) (get-display-depth) =3D 32
 > Human Language: english
 > (current-memory-use) 202241796
 >
 > Collections:
 > (("/Users/jay/Library/Racket/5.0.2.1/collects" non-existent-path) ("/User=
 s/jay/Dev/scm/plt/collects" ".gitignore" "2htdp" "afm" "algol60" "at-exp" "=
 browser" "combinator-parser" "compiler" "config" "data" "datalog" "defaults=
 " "deinprogramm" "drracket" "drscheme" "dynext" "embedded-gui" "eopl" "erro=
 rtrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger"=
  "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu" "htd=
 p" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "=
 make" "meta" "mred" "mrlib" "mysterx" "mz" "mzcom" "mzlib" "mzscheme" "net"=
  "openssl" "parser-tools" "plai" "planet" "plot" "preprocessor" "profile" "=
 r5rs" "r6rs" "racket" "racklog" "rackunit" "raclog" "raco" "racunit" "reade=
 r" "readline" "redex" "repo-time-stamp" "repos-time-stamp" "rico" "rktunit"=
  "rnrs" "s-exp" "schelog" "scheme" "schemeunit" "scribble" "scribblings" "s=
 criblib" "setup" "sgl" "sirmail" "slatex" "slideshow" "srfi" "srpersist" "s=
 tepper" "string-!
 > =C2=A0constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-=
 recovery" "test-engine" "tests" "tex2page" "texpict" "trace" "typed" "typed=
 -scheme" "unstable" "version" "waterworld" "web-server" "wxme" "xml"))
 > Computer Language: (("Determine language from source") (#(#t print mixed-=
 fraction-e #f #t debug) (default) #() "#lang racket\n" #t))
 >
 >
From: Stevie Strickland <sstrickl@ccs.neu.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: jay@racket-lang.org, bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11342: Dependent contract feature requests
Date: Fri, 22 Oct 2010 18:30:25 -0700

 On Oct 22, 2010, at 6:26 PM, Robby Findler wrote:
 > On Fri, Oct 22, 2010 at 8:16 PM,  <jay@racket-lang.org> wrote:
 >>=20
 >> First, I would like to be able to specify what exactly went wrong =
 with a pre or post condition. For example, if the pre-condition is (and =
 (p1? x) (p2? x)) it is uninformative to say "pre-condition failed".
 >=20
 > How do you imagine doing this? Multiple occurrences of #:pre maybe?
 
 I think the better thing to do here would be to have a parameter that is =
 set to a function that takes a format string and extra arguments and =
 appropriately calls raise-blame-error with the appropriate value/blame =
 during the extent of the pre/post condition.  Perhaps a syntax parameter =
 instead so that we error when not inside a precondition/postcondition =
 (or any other case where it makes sense to use this functionality)?
 
 Stevie=
From: Jay McCarthy <jay.mccarthy@gmail.com>
To: Stevie Strickland <sstrickl@ccs.neu.edu>
Cc: Robby Findler <robby@eecs.northwestern.edu>, jay@racket-lang.org,
        bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11342: Dependent contract feature requests
Date: Fri, 22 Oct 2010 19:33:36 -0600

 I was imagine a more complicated return protocol but a parameter or
 that sort of thing would work just as well.
 
 Jay
 
 On Fri, Oct 22, 2010 at 7:30 PM, Stevie Strickland <sstrickl@ccs.neu.edu> w=
 rote:
 > On Oct 22, 2010, at 6:26 PM, Robby Findler wrote:
 >> On Fri, Oct 22, 2010 at 8:16 PM, =C2=A0<jay@racket-lang.org> wrote:
 >>>
 >>> First, I would like to be able to specify what exactly went wrong with =
 a pre or post condition. For example, if the pre-condition is (and (p1? x) =
 (p2? x)) it is uninformative to say "pre-condition failed".
 >>
 >> How do you imagine doing this? Multiple occurrences of #:pre maybe?
 >
 > I think the better thing to do here would be to have a parameter that is =
 set to a function that takes a format string and extra arguments and approp=
 riately calls raise-blame-error with the appropriate value/blame during the=
  extent of the pre/post condition. =C2=A0Perhaps a syntax parameter instead=
  so that we error when not inside a precondition/postcondition (or any othe=
 r case where it makes sense to use this functionality)?
 >
 > Stevie
 
 
 
 --=20
 Jay McCarthy <jay@cs.byu.edu>
 Assistant Professor / Brigham Young University
 http://teammccarthy.org/jay
 
 "The glory of God is Intelligence" - D&C 93
From: Jay McCarthy <jay.mccarthy@gmail.com>
To: Stevie Strickland <sstrickl@ccs.neu.edu>
Cc: jay@racket-lang.org, bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11342: Dependent contract feature requests
Date: Fri, 22 Oct 2010 19:36:01 -0600

 On Fri, Oct 22, 2010 at 7:25 PM, Stevie Strickland <sstrickl@ccs.neu.edu> w=
 rote:
 >> Third, I would like to be able to compute some information for the pre/p=
 ost conditions at projection time.
 >
 > Haven't thought about this yet. =C2=A0Can you give me a specific use case=
  that you've already considered?
 
 Projection time is when the contract is applied to the function (as
 opposed to when the function is actually called or when it returns.)
 
 If you use make-contract directly, then you can compute information
 inside (lambda (f) ...) before returning the projection.
 
 I'm using this in my temporal contracts to label each projection. I
 can also imagine that it would be useful to communicate information
 about f to the pre/post, since they don't normally have access to the
 function.
 
 Jay
 
 --=20
 Jay McCarthy <jay@cs.byu.edu>
 Assistant Professor / Brigham Young University
 http://teammccarthy.org/jay
 
 "The glory of God is Intelligence" - D&C 93
From: Robby Findler <robby@eecs.northwestern.edu>
To: Stevie Strickland <sstrickl@ccs.neu.edu>
Cc: jay@racket-lang.org, bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11342: Dependent contract feature requests
Date: Fri, 22 Oct 2010 21:30:17 -0500

 Well, I'll leave this to you then, since you're already working there.
 
 I had imagined adding a #:where or #:with keyword to ->i that would
 let you bind variables and would tell you what it depended on.
 Somethign like
 
  (->i #:with x (a b) expression-to-compute-x ([a integer?] [b
 integer?] [c (x) ...] [d (x) ...]) any)
 
 would be a contract that bound 'x' in the 'c' and 'd' contracts.
 
 Please be sure to try the performance tests before finishing this (and
 if you stuck, of course, I'm happy to help).
 
 Robby
 
 On Fri, Oct 22, 2010 at 8:25 PM, Stevie Strickland <sstrickl@ccs.neu.edu> w=
 rote:
 > On Oct 22, 2010, at 6:16 PM, jay@racket-lang.org wrote:
 >> First, I would like to be able to specify what exactly went wrong with a=
  pre or post condition. For example, if the pre-condition is (and (p1? x) (=
 p2? x)) it is uninformative to say "pre-condition failed".
 >
 > Me too, and I have some ideas on how to do this, which I'll probably impl=
 ement as I also convert ->i to chaperones/proxies.
 >
 >> Second, I would like to be able to communicate values from the pre-condi=
 tion to the post-condition. This is important for efficiency and for statef=
 ul properties.
 >
 > Given our discussions, I agree that this would be useful. =C2=A0Haven't p=
 ut any thought on the best way to do this yet though. =C2=A0If I think of s=
 omething while in that area, I'll run it by you and Robby to see if it's re=
 asonable. =C2=A0(Similarly, if Robby has ideas, I'll be happy to implement =
 while I'm already working in that code.)
 >
 >> Third, I would like to be able to compute some information for the pre/p=
 ost conditions at projection time.
 >
 > Haven't thought about this yet. =C2=A0Can you give me a specific use case=
  that you've already considered?
 >
 > Stevie
From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Robby Findler <robby@eecs.northwestern.edu>
Cc: Stevie Strickland <sstrickl@ccs.neu.edu>, jay@racket-lang.org,
        bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11342: Dependent contract feature requests
Date: Fri, 22 Oct 2010 22:41:47 -0400

 How about you start with examples explaining the design you have in =
 mind. That should be a good feedback stage.=20=
From: Robby Findler <robby@eecs.northwestern.edu>
To: Matthias Felleisen <matthias@ccs.neu.edu>
Cc: Stevie Strickland <sstrickl@ccs.neu.edu>, jay@racket-lang.org,
        bugs@racket-lang.org, nobody@racket-lang.org,
        bug-notification@racket-lang.org
Subject: Re: [racket-bug] all/11342: Dependent contract feature requests
Date: Fri, 22 Oct 2010 21:42:41 -0500

 You are asking me? Better to ask Ryan or Jay. (I believe Ryan has some
 examples checked in where he's duplicating a computation because he
 has nowhere to put a 'let'.)
 
 Robby
 
 On Fri, Oct 22, 2010 at 9:41 PM, Matthias Felleisen
 <matthias@ccs.neu.edu> wrote:
 >
 > How about you start with examples explaining the design you have in mind. That should be a good feedback stage.

