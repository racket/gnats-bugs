From matthias@ccs.neu.edu  Mon Jan 19 20:05:39 2004
Received: from localhost (IDENT:root@localhost.localdomain [127.0.0.1])
	by champlain.ccs.neu.edu (8.9.3/8.9.3) with ESMTP id UAA24777
	for <bugs>; Mon, 19 Jan 2004 20:05:39 -0500
Message-Id: <200401200105.UAA24777@champlain.ccs.neu.edu>
Date: Mon, 19 Jan 2004 20:05:39 -0500
From: matthias <matthias@ccs.neu.edu>
To: bugs@plt-scheme.org
Subject: paren matcher and Emacs S-expression editing intefere

>Number:         6658
>Category:       framework
>Synopsis:       paren matcher and Emacs S-expression editing intefere
>Confidential:   no
>Severity:       serious
>Priority:       medium
>Responsible:    sowens
>State:          closed
>Class:          sw-bug
>Submitter-Id:   unknown
>Arrival-Date:   Mon Jan 19 20:10:01 EST 2004
>Closed-Date:    Wed Jan 28 03:56:51 EST 2004
>Last-Modified:  Wed Jan 28 03:56:51 EST 2004
>Originator:     matthias
>Release:        206-cvs18jan2004
>Organization:
titan
>Environment:
macosx "Darwin MATTHIAS-FELLEISENs-Computer.local. 6.8 Darwin Kernel Version 6.8: Wed Sep 10 15:20:55 PDT 2003; root:xnu/xnu-344.49.obj~2/RELEASE_PPC  Power Macintosh powerpc" (ppc-macosx) (get-display-depth) = 32
Docs Installed:
("/Users/matthias/plt/collects/doc/tour" "/Users/matthias/plt/collects/doc/tools" "/Users/matthias/plt/collects/doc/tex2page" "/Users/matthias/plt/collects/doc/teachpack" "/Users/matthias/plt/collects/doc/t-y-scheme" "/Users/matthias/plt/collects/doc/mzscheme" "/Users/matthias/plt/collects/doc/mzlib" "/Users/matthias/plt/collects/doc/mzc" "/Users/matthias/plt/collects/doc/mred" "/Users/matthias/plt/collects/doc/misclib" "/Users/matthias/plt/collects/doc/intermediate-lambda" "/Users/matthias/plt/collects/doc/intermediate" "/Users/matthias/plt/collects/doc/insidemz" "/Users/matthias/plt/collects/doc/help" "/Users/matthias/plt/collects/doc/framework" "/Users/matthias/plt/collects/doc/drscheme" "/Users/matthias/plt/collects/doc/beginning-abbr" "/Users/matthias/plt/collects/doc/beginning" "/Users/matthias/plt/collects/doc/advanced")
Collections: 
(("/Users/matthias/Library/PLT Scheme/206/collects" "non-existent path") ("/Users/matthias/plt/collects" ("afm" "algol60" "browser" "compiler" "countdwn" "CVS" "cvs-time-stamp" "defaults" "doc" "dromedary" "drscheme" "drscheme-jr" "dynext" "eopl" "errortrace" "file-browser" "finish-install" "framework" "frtime" "games" "graphics" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "htdp" "html" "icfp-robot-gui" "icons" "lang" "launcher" "libsndfile" "make" "mrdemo" "mred" "mrflow" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "preprocessor" "profj" "python" "readline" "reduction-semantics" "setup" "sgl" "sirmail" "slatex" "slibinit" "slideshow" "srfi" "srpersist" "stepper" "string-constants" "syntax" "syntax-color" "test-suite" "tests" "tex2page" "texpict" "typeset" "version" "waterworld" "web-server" "xelda" "xml")))
 
Human Language: english
 
Teachpack filenames: ("/Users/matthias/plt/teachpack/htdp/draw.ss")
Computer Language: (("Professional Languages" "(module ...)") (#6(#f write mixed-fraction-e #f #t debug) (default) #0()))
>Description:
see summary

warning: i have submitted a report before 
and scott (i think) closed it claiming the 
new matcher had eliminated it. if i am mistaken
there are two of them. 
>How-To-Repeat:
type in this: 
(define (f x)
  (cond
    [(empty? x) 0]
    [else
     (cond
       [(symbol=? (first x) 'mouse) (+ 1 (f (rest x)))]
       [else (f (rest x))])]))

place cursor on [ left to first else
ctrl-c ctrl-b
ctrl-k
tab
now you have this and your cursor is at the ( to the left of the second cond 
the paren is red because the matcher is now confused about the parentheses
(define (f x)
  (cond
    [(empty? x) 0]
    (cond
       [(symbol=? (first x) 'mouse) (+ 1 (f (rest x)))]
       [else (f (rest x))])))
>Fix:

>Release-Note:

>Audit-Trail:
Responsible-Changed-From-To: eli->sowens
Responsible-Changed-By: sowens
Responsible-Changed-When: Mon Jan 19 22:22:43 2004
Responsible-Changed-Why:
    Paren matcher

From: Robby Findler <robby@cs.uchicago.edu>
To: matthias <matthias@ccs.neu.edu>
Cc: bugs@plt-scheme.org, sowens@cs.utah.edu
Subject: Re: all/6658: paren matcher and Emacs S-expression editing intefere
Date: Fri, 23 Jan 2004 12:47:09 -0600

 As a note, you can "reset" the indenter when it gets confused by typing
 a " mark at the top of the file, and then deleting it. IN this case, it
 brings things back to working order again.
 
 Scott: is this something that can be added to a test suite? (Remember
 when we were talking about test suites in PVD? I'm just wondering, when
 you figure out this bug, what kind of bug it was and how that would
 impact the test suite).
 
 Robby

From: Scott Owens <sowens@cs.utah.edu>
To: Robby Findler <robby@cs.uchicago.edu>
Cc: matthias <matthias@ccs.neu.edu>, bugs@plt-scheme.org
Subject: Re: all/6658: paren matcher and Emacs S-expression editing intefere
Date: Fri, 23 Jan 2004 17:08:54 -0700

 On Jan 23, 2004, at 11:47 AM, Robby Findler wrote:
 
 > As a note, you can "reset" the indenter when it gets confused by typing
 > a " mark at the top of the file, and then deleting it. IN this case, it
 > brings things back to working order again.
 
 You can also select Edit->modes->Scheme Mode from the menu and the 
 buffer will be re-tokenized, rescuing you from the bad state.
 
 > Scott: is this something that can be added to a test suite? (Remember
 > when we were talking about test suites in PVD? I'm just wondering, when
 > you figure out this bug, what kind of bug it was and how that would
 > impact the test suite).
 
 This bug is a symptom of an oversimplification I made in the core of 
 the tokenizer.  It is occurring because the c-c c-b deletes two 
 non-adjacent characters very quickly.  To test this kind of thing, I 
 think I'll need to instrument the tokenizer so I can control when the 
 threads run explicitly.
 
 -Scott
 

From: Robby Findler <robby@cs.uchicago.edu>
To: Scott Owens <sowens@cs.utah.edu>
Cc: matthias <matthias@ccs.neu.edu>, bugs@plt-scheme.org
Subject: Re: all/6658: paren matcher and Emacs S-expression editing intefere
Date: Fri, 23 Jan 2004 18:28:42 -0600

 At Fri, 23 Jan 2004 17:08:54 -0700, Scott Owens wrote:
 > This bug is a symptom of an oversimplification I made in the core of 
 > the tokenizer.  It is occurring because the c-c c-b deletes two 
 > non-adjacent characters very quickly.  To test this kind of thing, I 
 > think I'll need to instrument the tokenizer so I can control when the 
 > threads run explicitly.
 
 Something like this: the tokenizer first notices that the leftmost
 position has changed and starts tokenizing. Then, before it finishes
 re-tokenizing, it notices that the rightmost position has change and
 bangs a variable somewhere, making the tokenizer "forget" to process a
 range of the editor (some portion between the two modifications)?
 
 Robby

From: Matthias Felleisen <matthias@ccs.neu.edu>
To: Robby Findler <robby@cs.uchicago.edu>
Cc: Scott Owens <sowens@cs.utah.edu>, bugs@plt-scheme.org
Subject: Re: all/6658: paren matcher and Emacs S-expression editing intefere
Date: Fri, 23 Jan 2004 20:57:27 -0500

 Is this contract worthy? A dynamic extent contract? -- Matthias
 
 
 On Friday, January 23, 2004, at 07:28 PM, Robby Findler wrote:
 
 > At Fri, 23 Jan 2004 17:08:54 -0700, Scott Owens wrote:
 >> This bug is a symptom of an oversimplification I made in the core of
 >> the tokenizer.  It is occurring because the c-c c-b deletes two
 >> non-adjacent characters very quickly.  To test this kind of thing, I
 >> think I'll need to instrument the tokenizer so I can control when the
 >> threads run explicitly.
 >
 > Something like this: the tokenizer first notices that the leftmost
 > position has changed and starts tokenizing. Then, before it finishes
 > re-tokenizing, it notices that the rightmost position has change and
 > bangs a variable somewhere, making the tokenizer "forget" to process a
 > range of the editor (some portion between the two modifications)?
 >
 > Robby
 
State-Changed-From-To: open->closed
State-Changed-By: sowens
State-Changed-When: Wed Jan 28 03:56:50 2004
State-Changed-Why:
    fixed and exp tagged
>Unformatted:

