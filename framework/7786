From apache@plt-scheme.org Fri Dec 30 01:25:30 2005
Received: from champlain.ccs.neu.edu (champlain.ccs.neu.edu [127.0.0.1])
	by champlain.ccs.neu.edu (8.12.10/8.12.10) with ESMTP id jBU6PRJT022808
	for <bugs@plt-scheme.org>; Fri, 30 Dec 2005 01:25:27 -0500
Message-Id: <200512300625.jBU6PRUU022806@champlain.ccs.neu.edu>
Date: Fri, 30 Dec 2005 01:25:27 -0500
From: richter@math.northwestern.edu
To: bugs@plt-scheme.org
Subject: Text mode freezes up with right mouse clicks

>Number:         7786
>Category:       framework
>Synopsis:       Text mode freezes up with right mouse clicks
>Class:          sw-bug
>Responsible:    robby
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Fri Dec 30 01:30:00 -0500 2005
>Last-Modified:  Sat Dec 31 09:34:44 -0500 2005
>Originator:     Bill Richter
>Organization:
plt
>Submitter-Id:   unknown
>Release:        300
>Environment:
unix "Linux whitney.math.northwestern.edu 2.6.9-22.0.1.ELsmp #1 SMP Thu Oct 27 10:53:36 CDT 2005 i686 i686 i386 GNU/Linux" (i386-linux) (get-display-depth) = 24
Docs Installed:
(#<path:/tmp_mnt/rhome/richter/plt/collects/doc/misclib> #<path:/tmp_mnt/rhome/richter/plt/collects/doc/foreign> #<path:/tmp_mnt/rhome/richter/plt/collects/doc/plot> #<path:/tmp_mnt/rhome/richter/plt/collects/doc/tools> #<path:/tmp_mnt/rhome/richter/plt/collects/doc/srfi> #<path:/tmp_mnt/rhome/richter/plt/collects/doc/profj-advanced> #<path:/tmp_mnt/rhome/richter/plt/collects/doc/drscheme> #<path:/tmp_mnt/rhome/richter/plt/collects/doc/profj-beginner> #<path:/tmp_mnt/rhome/richter/plt/collects/doc/mrlib> #<path:/tmp_mnt/rhome/richter/plt/collects/doc/tour> #<path:/tmp_mnt/rhome/richter/plt/collects/doc/t-y-scheme> #<path:/tmp_mnt/rhome/richter/plt/collects/doc/teachpack> #<path:/tmp_mnt/rhome/richter/plt/collects/doc/tex2page> #<path:/tmp_mnt/rhome/richter/plt/collects/doc/profj-intermediate> #<path:/tmp_mnt/rhome/richter/plt/collects/doc/mzscheme> #<path:/tmp_mnt/rhome/richter/plt/collects/doc/beginning> #<path:/tmp_mnt/rhome/richter/plt/collects/doc/swindle> #<path:/tmp_mnt/rhome/richter/plt/collects/doc/mzlib> #<path:/tmp_mnt/rhome/richter/plt/collects/doc/help> #<path:/tmp_mnt/rhome/richter/plt/collects/doc/insidemz> #<path:/tmp_mnt/rhome/richter/plt/collects/doc/web-server> #<path:/tmp_mnt/rhome/richter/plt/collects/doc/framework> #<path:/tmp_mnt/rhome/richter/plt/collects/doc/mred> #<path:/tmp_mnt/rhome/richter/plt/collects/doc/intermediate> #<path:/tmp_mnt/rhome/richter/plt/collects/doc/advanced> #<path:/tmp_mnt/rhome/richter/plt/collects/doc/mzc> #<path:/tmp_mnt/rhome/richter/plt/collects/doc/beginning-abbr> #<path:/tmp_mnt/rhome/richter/plt/collects/doc/intermediate-lambda> #<path:/tmp_mnt/rhome/richter/plt/collects/doc/r5rs>)
Collections:
((#<path:/rhome/richter/.plt-scheme/300/collects> "non-existent path") (#<path:/tmp_mnt/rhome/richter/plt/collects> (#<path:r5rs> #<path:browser> #<path:errortrace> #<path:htdp> #<path:version> #<path:slideshow> #<path:mztake> #<path:setup> #<path:ffi> #<path:defaults> #<path:make> #<path:slatex> #<path:openssl> #<path:embedded-gui> #<path:doc> #<path:mred> #<path:syntax-color> #<path:dynext> #<path:net> #<path:framework> #<path:games> #<path:ssax> #<path:web-server> #<path:help> #<path:mzlib> #<path:swindle> #<path:graphics> #<path:compiler> #<path:mzscheme> #<path:eopl> #<path:xml> #<path:lang> #<path:string-constants> #<path:frtime> #<path:tex2page> #<path:slibinit> #<path:hierlist> #<path:trace> #<path:syntax> #<path:html> #<path:mrlib> #<path:icons> #<path:profj> #<path:afm> #<path:launcher> #<path:test-suite> #<path:drscheme> #<path:algol60> #<path:parser-tools> #<path:srfi> #<path:sgl> #<path:planet> #<path:plot> #<path:profjBoxes> #<path:preprocessor> #<path:texpict> #<path:stepper> #<path:info-domain>)))
Human Language: english
Teachpack filenames: ()
Computer Language: (("Professional Languages" "PLT" "Pretty Big (includes MrEd and Advanced Student)") #6(#t write mixed-fraction-e #f #f debug/profile))
>Description:
I really like 2 version 300 features: tabs so you can have different files in the same frame, with just an easy click at the top to switch buffers.   
Also I like Text mode, which I've been interested in for a long time.  Why not edit letters in Drscheme?

But with 1 or 2 dumb right mouse clicks, I can disable a Text mode window.  I think that's a serious bug.
>How-To-Repeat:
This works most reliably with a large file, so I'll include one below, called sdraft. Then:

drscheme sdraft &

Click "Text Mode" from the menu
Edit -> Preferences -> Modes 

Click left mouse and then right mouse (which in Emacs will select a region), and 
watch the window pop up saying 

"backward-containing-sexp: called on a color:text<%> whose colorer is stopped."

Hit Enter to accept this excellent information.  

Now the Drscheme window freezes up, in the sense that I can scroll
with the scrollbar or middle-mouse rolling, but I can't see anything, as the 
window turns white. I can quit  Drscheme with the File menu or C-q.

This isn't entirely 100% reproducible.  For instance, my Drscheme window
became usable again right now when I also have a Bug Report form that 
I'm editing as we speak.  But in a different workspace, I just replicated this
bug 5 times in a row.  

Here's the file "sdraft":

   Thanks.  You should really pass along the kudos to the plt-scheme
   list, because I didn't implement those features.

Makes sense, Shriram, except I'd have to resubscribe to the group before I could post my message :)  Let me try to sketch for you 2 ways for subst = env:

Let's call sigma & E the 2 partial (big-step) functions defined by subst & env resp. 

*****  Simplest way ***** 

I think is what you had in mind.  Define a function phi on pairs (Expression, env) which completely substitutes the environment.   Then we show that the 2 composites of partial functions are equal

phi( E(Exp, env) ) = sigma( phi(Exp, env) ) 

This is actually a victory for your big-step approach, because I couldn't ever get a small-step (i.e. standard reduction) version of this equation to hold.

Unfortunately, the function phi is not simple to define, it has a variety of recursive definitions.   See, an env might have a binding x -> (function, env1), 
and env1 might have a binding x' -> (function', env2), etc.   My preference is to define phi to substitute the "deepest" bindingings first, and there we can be assured that all bindings are of the form x -> number.  Anyway, I never really got a good rigorous proof of this equation  
phi . E = sigma . E 
and I think the problem was the complication of phi.


*****  Standard reduction way ***** 

There's actually 2 LC_v issues about subst & env.  Why does the env method produce the right answer, and why does it terminate when it should?   As to correctness, we can easily write environments in LC_v with let syntactic sugar, i.e.

(let (... [x_i V_i] ... ) E) := (\x_1. (... (\x_n. E) V_n) ... V_1)

corresponds to X with the environment defined by x_i -> V_i.   

We can easily define a small-step "environment-reduction" move.  Then we must show that performing an environment-reduction doesn't change the beta_v equivalence class.  That's not too hard, but it gets us into zigzags.  Recall from F-F that 2 expressions E & F are *equivalent* if they're
equal modulo beta_v reduction, which means there's a "zigzag" of
beta_v reduction arrows `-->' connecting them, going in both
directions.  Here's an important example:

(let ([x V]) (\y. M))  equiv  (\y. (let ([x V]) M)), for x != y

because we have one beta_v arrow going right

(let ([x V]) (\y. M))   =  ((\x. (\y. M)) V) 

		       --> (\y. M)[x <- V]  =  (\y. M[x <- V])  

by the Barendregt variable convention, and another beta_v arrow going left

(\y. M[x <- V]) <-- (\y. (let ([x V]) M))

to make a zigzag 

(let ([x V]) (\y. M)) --> (\y. M[x <- V]) <-- (\y. (let ([x V]) M))

All right, we define a small-step "environment-reduction" move, and show it's correct, i.e. preserves the beta_v equivalence class.  This defines a partial function 

E: Expressions x Env ----> Values = Numbers + Closures

in exactly the way that F-F's & Barendregt's standard reduction function is defined.  That is, it requires no Scott models or CPO fixed point theorems.   Someday cls may understand this simple fact.   We're only interested in the trivial environment, so that's

E_0: Expressions ----> Values 

But now we have the question: Why is E_0 defined on exactly the set where F-F's standard reduction function sigma is defined?  That is, why does E_0 terminate whenever sigma terminates?   The other implication is the Standard Reduction Theorem, of which I have my own proof on my web page: if an expression is equivalent to a value, the sigma will terminate.  

OK, the only proof of this I could come up with was to prove the Standard Environment Reduction Theorem, i.e. that E_0 terminates on any expression that can be reduced a a value.   My web page proof is easily ported to prove this, but it's not as simple, as there are a few more cases to worry about.  But it's the same idea.  

I can write all this up for you if you like, but I never came up with anything simple to say about PLAI.
>Fix:
the bug was that the colorer's status was not consulted before calling backward-containing-sexp. The fix was just to not include the "collapse sexp" feature when the colorer is disabled.
>Release-Note:
this was a contract violation and right inthe right place and with the right blame.
>Audit-Trail:
From: Robby Findler <robby@cs.uchicago.edu>
To: bugs@plt-scheme.org
Cc: mflatt@cs.utah.edu, sowens@cs.utah.edu
Subject: Re: all/7786: Text mode freezes up with right mouse clicks
Date: Fri, 30 Dec 2005 09:50:49 -0600

 In order to fix this, it would be quite helpful to have an is-stopped?
 method of a color:text.
 
 Can one be added?
 
 Thanks,
 Robby

State changed from "open" to "closed" by robby at Sat, 31 Dec 2005 09:34:44 -0500
Reason>>> fixed and released to SVN. If you're curious, it happens when you click on a 
parenthesis -- it's not really related to the length of the file.

