From apache@plt-scheme.org Wed Apr 26 13:49:32 2006
Received: from champlain.ccs.neu.edu (champlain.ccs.neu.edu [127.0.0.1])
	by champlain.ccs.neu.edu (8.12.10/8.12.10) with ESMTP id k3QHnOZ4009518
	for <bugs@plt-scheme.org>; Wed, 26 Apr 2006 13:49:24 -0400
Message-Id: <200604261749.k3QHnOTv009516@champlain.ccs.neu.edu>
Date: Wed, 26 Apr 2006 13:49:24 -0400
From: ryanc@ccs.neu.edu
To: bugs@plt-scheme.org
Subject: unchecking "Correct parens" kills magic matching close paren/brackets

>Number:         8024
>Category:       framework
>Synopsis:       unchecking "Correct parens" kills magic matching close paren/brackets
>Class:          change-request
>Responsible:    robby
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Wed Apr 26 13:50:00 -0400 2006
>Last-Modified:  Fri Apr 28 04:59:49 -0400 2006
>Originator:     Ryan Culpepper
>Organization:
plt
>Submitter-Id:   unknown
>Release:        301.13-svn26apr2006
>Environment:
macosx "Darwin burundi.local 7.9.0 Darwin Kernel Version 7.9.0: Wed Mar 30 20:11:17 PST 2005; root:xnu/xnu-517.12.7.obj~1/RELEASE_PPC  Power Macintosh powerpc" (ppc-macosx) (get-display-depth) = 32
Docs Installed:
(#<path:/Users/ryanc/projects/tmp/plt/collects/doc/r5rs> #<path:/Users/ryanc/projects/tmp/plt/collects/doc/mzscheme> #<path:/Users/ryanc/projects/tmp/plt/collects/doc/mred> #<path:/Users/ryanc/projects/tmp/plt/collects/doc/help> #<path:/Users/ryanc/projects/tmp/plt/collects/doc/tour> #<path:/Users/ryanc/projects/tmp/plt/collects/doc/drscheme> #<path:/Users/ryanc/projects/tmp/plt/collects/doc/srfi> #<path:/Users/ryanc/projects/tmp/plt/collects/doc/mzlib> #<path:/Users/ryanc/projects/tmp/plt/collects/doc/misclib> #<path:/Users/ryanc/projects/tmp/plt/collects/doc/mrlib> #<path:/Users/ryanc/projects/tmp/plt/collects/doc/framework> #<path:/Users/ryanc/projects/tmp/plt/collects/doc/mzc> #<path:/Users/ryanc/projects/tmp/plt/collects/doc/foreign> #<path:/Users/ryanc/projects/tmp/plt/collects/doc/tools> #<path:/Users/ryanc/projects/tmp/plt/collects/doc/insidemz> #<path:/Users/ryanc/projects/tmp/plt/collects/doc/web-server> #<path:/Users/ryanc/projects/tmp/plt/collects/doc/swindle> #<path:/Users/ryanc/projects/tmp/plt/collects/doc/plot> #<path:/Users/ryanc/projects/tmp/plt/collects/doc/t-y-scheme> #<path:/Users/ryanc/projects/tmp/plt/collects/doc/tex2page> #<path:/Users/ryanc/projects/tmp/plt/collects/doc/beginning> #<path:/Users/ryanc/projects/tmp/plt/collects/doc/beginning-abbr> #<path:/Users/ryanc/projects/tmp/plt/collects/doc/intermediate> #<path:/Users/ryanc/projects/tmp/plt/collects/doc/intermediate-lambda> #<path:/Users/ryanc/projects/tmp/plt/collects/doc/advanced> #<path:/Users/ryanc/projects/tmp/plt/collects/doc/teachpack> #<path:/Users/ryanc/projects/tmp/plt/collects/doc/profj-beginner> #<path:/Users/ryanc/projects/tmp/plt/collects/doc/profj-intermediate> #<path:/Users/ryanc/projects/tmp/plt/collects/doc/profj-advanced>)
Collections:
((#<path:/Users/ryanc/Library/PLT Scheme/301.13/collects> "non-existent path") (#<path:/Users/ryanc/projects/tmp/plt/collects> (#<path:.svn> #<path:afm> #<path:algol60> #<path:browser> #<path:compiler> #<path:defaults> #<path:doc> #<path:drscheme> #<path:dynext> #<path:embedded-gui> #<path:eopl> #<path:errortrace> #<path:ffi> #<path:finish-install> #<path:framework> #<path:frtime> #<path:games> #<path:graphics> #<path:guibuilder> #<path:handin-client> #<path:handin-server> #<path:help> #<path:hierlist> #<path:honu-module> #<path:htdch> #<path:htdp> #<path:html> #<path:icons> #<path:info-domain> #<path:lang> #<path:launcher> #<path:make> #<path:mred> #<path:mrflow> #<path:mrlib> #<path:mysterx> #<path:mzcom> #<path:mzlib> #<path:mzscheme> #<path:mztake> #<path:net> #<path:openssl> #<path:parser-tools> #<path:plai> #<path:planet> #<path:plot> #<path:preprocessor> #<path:profj> #<path:profjBoxes> #<path:profjWizard> #<path:r5rs> #<path:r6rs> #<path:readline> #<path:repos-time-stamp> #<path:setup> #<path:sgl> #<path:sirmail> #<path:skipper> #<path:slatex> #<path:slibinit> #<path:slideshow> #<path:srfi> #<path:srpersist> #<path:stepper> #<path:string-constants> #<path:swindle> #<path:syntax> #<path:syntax-color> #<path:test-suite> #<path:tests> #<path:tex2page> #<path:texpict> #<path:trace> #<path:version> #<path:waterworld> #<path:web-server> #<path:xelda> #<path:xml>)))
Human Language: english
Teachpack filenames: ()
Computer Language: (("Professional Languages" "(module ...)") (#6(#t write mixed-fraction-e #f #t debug) (default) #0()))
>Description:
Recent versions of DrScheme only insert square brackets
in certain places, by default. There is an option to turn
off this behavior, but it also eliminates the magic 
*end* paren-or-bracket matching.

I would like to be able to configure DrScheme to use
the old behavior, where the open keys are literal and
the close keys are magic.
>How-To-Repeat:
>Fix:
>Audit-Trail:
From: Robby Findler <robby@cs.uchicago.edu>
To: ryanc@ccs.neu.edu, bugs@plt-scheme.org
Cc: 
Subject: Re: all/8024: unchecking "Correct parens" kills magic matching close paren/brackets
Date: Wed, 26 Apr 2006 17:34:26 -0500

 I didn't include that for now so that I could get feedback about what
 context doesn't work out the way you want (and maybe try to find a
 better magic-less "["-inserting keystroke).
 
 Is there anything more specific maybe you can tell me to try to make
 the magic work better so you might actually want to use it?
 
 Thanks,
 Robby
From: Ryan Culpepper <ryanc@ccs.neu.edu>
To: Robby Findler <robby@cs.uchicago.edu>, bugs@plt-scheme.org
Cc: 
Subject: Re: all/8024: unchecking "Correct parens" kills magic matching close paren/brackets
Date: Wed, 26 Apr 2006 19:46:14 -0400

 I don't think I'd be happy with any solution that made either "insert a 
 '(' definitely" or "insert a '[' definitely" any less trivial than they 
 used to be.
 
 Here's a partial list of contexts in which I've used square brackets 
 (based on a grep of a couple directories of code I've written) that 
 don't seem to be handled by DrScheme:
 
 case-lambda
 with-syntax
 with-handlers
 match
 local
 parser-tools  grammars
 inside of line comments
 "built-in" data languages like X-exprs for representing XML.
 frequently within macros that I've written
 in various places in data languages I've created
 
 For me, it's really the macros that I define that make magic 
 open-paren-like-things unusable.
 
 Ryan
 
 On Apr 26, 2006, at 6:34 PM, Robby Findler wrote:
 
 > I didn't include that for now so that I could get feedback about what
 > context doesn't work out the way you want (and maybe try to find a
 > better magic-less "["-inserting keystroke).
 >
 > Is there anything more specific maybe you can tell me to try to make
 > the magic work better so you might actually want to use it?
 >
 > Thanks,
 > Robby
 
From: Robby Findler <robby@cs.uchicago.edu>
To: Ryan Culpepper <ryanc@ccs.neu.edu>
Cc: bugs@plt-scheme.org
Subject: Re: all/8024: unchecking "Correct parens" kills magic matching close paren/brackets
Date: Wed, 26 Apr 2006 19:10:17 -0500

 At Wed, 26 Apr 2006 19:46:14 -0400, Ryan Culpepper wrote:
 > I don't think I'd be happy with any solution that made either "insert a 
 > '(' definitely" or "insert a '[' definitely" any less trivial than they 
 > used to be.
 
 I'm not following the negations in there. What do you mean?
 
 (You know about control-[ right?)
 
 > Here's a partial list of contexts in which I've used square brackets 
 > (based on a grep of a couple directories of code I've written) that 
 > don't seem to be handled by DrScheme:
 > 
 > case-lambda
 > with-syntax
 > with-handlers
 > match
 > local
 > parser-tools  grammars
 > inside of line comments
 
 This one is a bug, I think. there isn't any magic in those, supposedly.
 
 > "built-in" data languages like X-exprs for representing XML.
 > frequently within macros that I've written
 > in various places in data languages I've created
 > 
 > For me, it's really the macros that I define that make magic 
 > open-paren-like-things unusable.
 > 
 > Ryan
 > 
 > On Apr 26, 2006, at 6:34 PM, Robby Findler wrote:
 > 
 > > I didn't include that for now so that I could get feedback about what
 > > context doesn't work out the way you want (and maybe try to find a
 > > better magic-less "["-inserting keystroke).
 > >
 > > Is there anything more specific maybe you can tell me to try to make
 > > the magic work better so you might actually want to use it?
 > >
 > > Thanks,
 > > Robby
From: Ryan Culpepper <ryanc@ccs.neu.edu>
To: Robby Findler <robby@cs.uchicago.edu>
Cc: bugs@plt-scheme.org
Subject: Re: all/8024: unchecking "Correct parens" kills magic matching
	close paren/brackets
Date: Wed, 26 Apr 2006 22:02:26 -0400

 On Wed, 2006-04-26 at 19:10 -0500, Robby Findler wrote:
 > At Wed, 26 Apr 2006 19:46:14 -0400, Ryan Culpepper wrote:
 > > I don't think I'd be happy with any solution that made either "insert a 
 > > '(' definitely" or "insert a '[' definitely" any less trivial than they 
 > > used to be.
 > 
 > I'm not following the negations in there. What do you mean?
 
 I meant that I want entering a ']' character to be as simple as hitting
 the ']' key; anything more is too much. Likewise for '('. On the other
 hand, I've gotten used to closing lots of mixed open parens and open
 brackets with the ')' key.
 
 > (You know about control-[ right?)
 
 Yes, but it's one too many keystrokes to use, given muscle memory. And I
 don't know how discoverable it is (unfortunately, I don't have a recent
 DrScheme in front of me to try it out).
 
 Actually, I worry that the recently-banished "DrScheme doesn't have
 'let'!" complaints may be replaced with "DrScheme doesn't let me type
 brackets!"
 
 Right now, if I count correctly, the left-bracket key is only one of
 three "regular" keys that doesn't *always* enter the character on its
 face. Furthermore, the other two, the right-paren and right-bracket key
 in their magic closing mode, have accompanying visual feedback of
 highlighting the last s-expression in grey; that's an instant
 explanation of their unusual behavior.
 
 Ryan
 
 > > Here's a partial list of contexts in which I've used square brackets 
 > > (based on a grep of a couple directories of code I've written) that 
 > > don't seem to be handled by DrScheme:
 > > 
 > > case-lambda
 > > with-syntax
 > > with-handlers
 > > match
 > > local
 > > parser-tools  grammars
 > > inside of line comments
 > 
 > This one is a bug, I think. there isn't any magic in those, supposedly.
 > 
 > > "built-in" data languages like X-exprs for representing XML.
 > > frequently within macros that I've written
 > > in various places in data languages I've created
 > > 
 > > For me, it's really the macros that I define that make magic 
 > > open-paren-like-things unusable.
 > > 
 > > Ryan
 > > 
 > > On Apr 26, 2006, at 6:34 PM, Robby Findler wrote:
 > > 
 > > > I didn't include that for now so that I could get feedback about what
 > > > context doesn't work out the way you want (and maybe try to find a
 > > > better magic-less "["-inserting keystroke).
 > > >
 > > > Is there anything more specific maybe you can tell me to try to make
 > > > the magic work better so you might actually want to use it?
 > > >
 > > > Thanks,
 > > > Robby
 
From: Robby Findler <robby@cs.uchicago.edu>
To: Ryan Culpepper <ryanc@ccs.neu.edu>
Cc: bugs@plt-scheme.org
Subject: Re: all/8024: unchecking "Correct parens" kills magic matching
	close paren/brackets
Date: Thu, 27 Apr 2006 11:36:09 -0500

 At Wed, 26 Apr 2006 22:02:26 -0400, Ryan Culpepper wrote:
 > On Wed, 2006-04-26 at 19:10 -0500, Robby Findler wrote:
 > > At Wed, 26 Apr 2006 19:46:14 -0400, Ryan Culpepper wrote:
 > > > I don't think I'd be happy with any solution that made either "insert a 
 > > > '(' definitely" or "insert a '[' definitely" any less trivial than they 
 > > > used to be.
 > > 
 > > I'm not following the negations in there. What do you mean?
 > 
 > I meant that I want entering a ']' character to be as simple as hitting
 > the ']' key; anything more is too much. Likewise for '('. On the other
 > hand, I've gotten used to closing lots of mixed open parens and open
 > brackets with the ')' key.
 
 Just as a note: you might try typing ']' all the time, instead of ')'
 all the time. Saves the shifting.
 
 > > (You know about control-[ right?)
 > 
 > Yes, but it's one too many keystrokes to use, given muscle memory. And I
 > don't know how discoverable it is (unfortunately, I don't have a recent
 > DrScheme in front of me to try it out).
 
 Also, fwiw, if you type the first [] in some sequence (say match),
 later ones pick that up. Only the first one needs special typing.
 
 > Actually, I worry that the recently-banished "DrScheme doesn't have
 > 'let'!" complaints may be replaced with "DrScheme doesn't let me type
 > brackets!"
 >
 > Right now, if I count correctly, the left-bracket key is only one of
 > three "regular" keys that doesn't *always* enter the character on its
 > face. 
 
 Of the open-bracket keys, yes.
 
 > Furthermore, the other two, the right-paren and right-bracket key
 > in their magic closing mode, have accompanying visual feedback of
 > highlighting the last s-expression in grey; that's an instant
 > explanation of their unusual behavior.
 
 Yes, that's true.
 
 If you have any ideas on that kind of thing for the open [, do let me
 know.
 
 I'm not against turning the magic off by default, but I'd like to try a
 little longer before doing so.
 
 Robby

State changed from "open" to "closed" by robby at Fri, 28 Apr 2006 04:59:49 -0400
Reason>>> I've added the pref.

