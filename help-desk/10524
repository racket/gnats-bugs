From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Tue Oct 13 18:25:24 2009
Received: from mail-yx0-f176.google.com (mail-yx0-f176.google.com [209.85.210.176])
	by champlain.ccs.neu.edu (8.14.2/8.14.2) with ESMTP id n9DMPJK1019870
	for <bugs@bugs.plt-scheme.org>; Tue, 13 Oct 2009 18:25:20 -0400
Message-Id: <200910132225.n9DMPHgf019864@champlain.ccs.neu.edu>
Date: Tue, 13 Oct 2009 18:25:17 -0400
From: ryanc@ccs.neu.edu
To: bugs@plt-scheme.org
Subject: docs search sorting: manual titles first

>Number:         10524
>Category:       help-desk
>Synopsis:       docs search sorting: manual titles first
>Class:          sw-bug
>Responsible:    robby
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Tue Oct 13 18:28:01 -0400 2009
>Closed-Date:    Fri May 06 00:50:54 -0400 2011
>Last-Modified:  Fri May 06 00:50:54 -0400 2011
>Originator:     Ryan Culpepper
>Organization:
plt
>Submitter-Id:   unknown
>Release:        4.2.2
>Environment:
MacPPC / Mozilla/5.0 (Macintosh; U; PPC Mac OS X 10_5_4; en-us) AppleWebKit/525.18 (KHTML, like Gecko) Version/3.1.2 Safari/525.20.1
>Description:
Links to manual "roots" should be appear first (or at least, very early) in documentation search results.

For example, a search for "scribble" yields 43 hits, and "Scribble: PLT documentation tool" is number 39.

In a search for "gui", the manual "GUI: PLT Graphics Toolkit" doesn't show up until page 3. Bizarrely, the "Embedded GUI" library manual shows up on the first page.
>How-To-Repeat:
>Fix:
>Audit-Trail:
From: John Clements <clements@brinckerhoff.org>
To: ryanc@ccs.neu.edu, bugs@plt-scheme.org
Cc: nobody@plt-scheme.org, bug-notification@plt-scheme.org
Subject: Re: [plt-bug] all/10524: docs search sorting: manual titles first
Date: Tue, 13 Oct 2009 15:37:00 -0700

 On Oct 13, 2009, at 3:28 PM, ryanc@ccs.neu.edu wrote:
 
 > A new problem report is waiting at
 >  http://bugs.plt-scheme.org/query/?cmd=view&pr=10524
 >
 > Reported by Ryan Culpepper for release: 4.2.2
 >
 > *** Description:
 > Links to manual "roots" should be appear first (or at least, very  
 > early) in documentation search results.
 
 +1, though I'm willing to bet that Eli has already thought hard about  
 this and it turns out to be more work than it's worth.
 
 John
 
 
From: Eli Barzilay <eli@barzilay.org>
To: ryanc@ccs.neu.edu, bugs@plt-scheme.org
Cc: nobody@plt-scheme.org, bug-notification@plt-scheme.org
Subject: Re: [plt-bug] all/10524: docs search sorting: manual titles first
Date: Tue, 13 Oct 2009 21:01:45 -0400

 On Oct 13, ryanc@ccs.neu.edu wrote:
 > Links to manual "roots" should be appear first (or at least, very
 > early) in documentation search results.
 > 
 > For example, a search for "scribble" yields 43 hits, and "Scribble:
 > PLT documentation tool" is number 39.
 > 
 > In a search for "gui", the manual "GUI: PLT Graphics Toolkit"
 > doesn't show up until page 3. Bizarrely, the "Embedded GUI" library
 > manual shows up on the first page.
 
 1. In the current JS search code, any kind of ordering of the results
    is not feasible.  The only thing that is done now, is to have exact
    matches come first.
 
 2. The "bizarre" case should clarify what order you get right now.
    It's really not that bizzare when you realize that there is no
    ordering of the results that happens in JS.
 
 3. One cheap way to get this is to have the index contain the manual
    titles first, which will have them appear first after any exact
    matches.  However, did you consider what happens when you'll enter
    things like `and', or `car', or the fact that "Syntax Color:
    Utilities" will still come before "Syntax: Meta", etc.
 
 4. It *might* be possible to do stuff like this dynamically with the
    revised code, but it will be as bad as #3 without some "real"
    search code.
 
 5. You can imagine some TF-IDF analysis to get weights for all words.
    Computing it statically means adding all that information to the JS
    index, which makes this too expensive.  Computing it dynamically
    means a global analysis step done by JS on the browser, which makes
    it even more expensive than that.
 
 6. Even if you find some cure for these problems, the bottom line is
    that I know very little on this subject, and hand tuning results
    every time something looks like "it makes perfect sense" is a very
    bad idea.  The previous Scheme search code did that -- it used
    different weights for partial matches, full word matches, full
    search query match, terms that appear in the index in the same
    order as in the query, things that are bindings, etc.  This code
    was there for a relatively short time (IIRC, a few weeks passed
    between the time I did that, and the time I did the JS search), yet
    this whole thing was a complete mess -- my conclusion was that when
    there are more than 4 score parameters to play with, setting them
    manually is an exercise is masochism.
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                     http://barzilay.org/                   Maze is Life!

State changed from "open" to "closed" by ryanc at Fri, 06 May 2011 00:50:54 -0400
Reason>>> .

