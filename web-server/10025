From bugs+caf_=bugs=bugs.plt-scheme.org@plt-scheme.org Tue Jan 13 06:54:59 2009
Received: from rv-out-0506.google.com (rv-out-0506.google.com [209.85.198.225])
	by champlain.ccs.neu.edu (8.14.2/8.14.2) with ESMTP id n0DBsrXv014485
	for <bugs@bugs.plt-scheme.org>; Tue, 13 Jan 2009 06:54:54 -0500
Message-Id: <200901131154.n0DBsoN4014478@champlain.ccs.neu.edu>
Date: Tue, 13 Jan 2009 06:54:50 -0500
From: spdegabrielle@gmail.com
To: bugs@plt-scheme.org
Subject: error : force: reentrant promise 'MIME-TYPE-TABLE' occurs on an irregular basis

>Number:         10025
>Category:       web-server
>Synopsis:       error : force: reentrant promise 'MIME-TYPE-TABLE' occurs on an irregular basis
>Class:          sw-bug
>Responsible:    jay
>Severity:       serious
>Priority:       medium
>State:          closed
>Confidential:   no
>Arrival-Date:   Tue Jan 13 06:56:01 -0500 2009
>Last-Modified:  Fri Jan 16 09:04:02 -0500 2009
>Originator:     Stephen De Gabrielle
>Organization:
plt
>Submitter-Id:   unknown
>Release:        4.1.3.9-svn12jan2009
>Environment:
macosx "Darwin uclic36.uclic.ucl.ac.uk 8.11.1 Darwin Kernel Version 8.11.1: Wed Oct 10 18:23:28 PDT 2007; root:xnu-792.25.20~1/RELEASE_I386 i386 i386" (i386-macosx/3m) (get-display-depth) = 32
Human Language: english
(current-memory-use) 102534560

Collections:
(("/Users/stephen/Library/PLT Scheme/4.1.3.9/collects" non-existent-path) ("/Applications/PLT Scheme Full v4.1.3.9/collects" "2htdp" "afm" "algol60" "browser" "combinator-parser" "compiler" "config" "defaults" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profj" "profjWizard" "r5rs" "r6rs" "readline" "redex" "repos-time-stamp" "rnrs" "s-exp" "scheme" "scribble" "scribblings" "setup" "sgl" "sirmail" "slatex" "slideshow" "srfi" "srpersist" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tests" "tex2page" "texpict" "trace" "typed" "typed-scheme" "version" "waterworld" !
 "web-server" "wxme" "xml"))
Computer Language: (("Module") (#(#t quasiquote repeating-decimal-e #t #t debug) (default) #() "#lang scheme\n" #t))
>Description:
--
Welcome to DrScheme, version 4.1.3.9-svn12jan2009 [3m].
Language: Module custom; memory limit: 128 megabytes.
force: reentrant promise 'MIME-TYPE-TABLE
Your Web application is running at http://localhost:8000/servlets/standalone.ss.
Click 'Stop' at any time to terminate the Web Server.
--
>How-To-Repeat:
#lang web-server/insta
(require scheme/gui ;
         xml
         net/sendurl
         web-server/templates
...
(define (frame-template threads-names-file-svg threads-threads-file-svg)
   (list #"text/html" (include-template "data/frame-template.html")))

(define (start request) 
  (frame-template  threads-names-file-svg threads-threads-file-svg))
>Fix:
>Audit-Trail:
From: "Jay McCarthy" <jay.mccarthy@gmail.com>
To: "Eli Barzilay" <eli@barzilay.org>
Cc: spdegabrielle@gmail.com, bugs@plt-scheme.org
Subject: Re: [plt-bug] all/10025: error : force: reentrant promise 'MIME-TYPE-TABLE' occurs on an irregular basis
Date: Tue, 13 Jan 2009 08:22:23 -0700

 Is this the error that the docs [1] refer to:
 
 "If v is forced again before the original call to force returns, then
 the exn:fail exception is raised."
 
 ?
 
 Jay
 
 1. http://docs.plt-scheme.org/reference/Delayed_Evaluation.html#(def._((lib._scheme/promise..ss)._force))
 
 On Tue, Jan 13, 2009 at 4:56 AM,  <spdegabrielle@gmail.com> wrote:
 > A new problem report is waiting at
 >  http://bugs.plt-scheme.org/query/?cmd=view&pr=10025
 >
 > Reported by Stephen De Gabrielle for release: 4.1.3.9-svn12jan2009
 >
 > *** Description:
 > --
 > Welcome to DrScheme, version 4.1.3.9-svn12jan2009 [3m].
 > Language: Module custom; memory limit: 128 megabytes.
 > force: reentrant promise 'MIME-TYPE-TABLE
 > Your Web application is running at http://localhost:8000/servlets/standalone.ss.
 > Click 'Stop' at any time to terminate the Web Server.
 > --
 >
 > *** How to repeat:
 > #lang web-server/insta
 > (require scheme/gui ;
 >         xml
 >         net/sendurl
 >         web-server/templates
 > ...
 > (define (frame-template threads-names-file-svg threads-threads-file-svg)
 >   (list #"text/html" (include-template "data/frame-template.html")))
 >
 > (define (start request)
 >  (frame-template  threads-names-file-svg threads-threads-file-svg))
 >
 > *** Environment:
 > macosx "Darwin uclic36.uclic.ucl.ac.uk 8.11.1 Darwin Kernel Version 8.11.1: Wed Oct 10 18:23:28 PDT 2007; root:xnu-792.25.20~1/RELEASE_I386 i386 i386" (i386-macosx/3m) (get-display-depth) = 32
 > Human Language: english
 > (current-memory-use) 102534560
 >
 > Collections:
 > (("/Users/stephen/Library/PLT Scheme/4.1.3.9/collects" non-existent-path) ("/Applications/PLT Scheme Full v4.1.3.9/collects" "2htdp" "afm" "algol60" "browser" "combinator-parser" "compiler" "config" "defaults" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profj" "profjWizard" "r5rs" "r6rs" "readline" "redex" "repos-time-stamp" "rnrs" "s-exp" "scheme" "scribble" "scribblings" "setup" "sgl" "sirmail" "slatex" "slideshow" "srfi" "srpersist" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tests" "tex2page" "texpict" "trace" "typed" "typed-scheme" "version" "waterworld" !
 >  "web-server" "wxme" "xml"))
 > Computer Language: (("Module") (#(#t quasiquote repeating-decimal-e #t #t debug) (default) #() "#lang scheme\n" #t))
 >
 >
 
 
 
 -- 
 Jay McCarthy <jay@cs.byu.edu>
 Assistant Professor / Brigham Young University
 http://teammccarthy.org/jay
 
 "The glory of God is Intelligence" - D&C 93
From: "Jay McCarthy" <jay.mccarthy@gmail.com>
To: "Eli Barzilay" <eli@barzilay.org>
Cc: spdegabrielle@gmail.com, bugs@plt-scheme.org
Subject: Re: [plt-bug] all/10025: error : force: reentrant promise 'MIME-TYPE-TABLE' occurs on an irregular basis
Date: Tue, 13 Jan 2009 08:33:49 -0700

 I see that it is. In this code, it doesn't matter if the promise gets
 computed twice. Is there a way to have have a version of force that is
 "permissive" in this way, or that blocks? I notice in your code that
 not allowing reentrant promises is non-r5rs, do we have an r5rs
 promise lying around somewhere?
 
 Jay
 
 On Tue, Jan 13, 2009 at 8:22 AM, Jay McCarthy <jay.mccarthy@gmail.com> wrote:
 > Is this the error that the docs [1] refer to:
 >
 > "If v is forced again before the original call to force returns, then
 > the exn:fail exception is raised."
 >
 > ?
 >
 > Jay
 >
 > 1. http://docs.plt-scheme.org/reference/Delayed_Evaluation.html#(def._((lib._scheme/promise..ss)._force))
 >
 > On Tue, Jan 13, 2009 at 4:56 AM,  <spdegabrielle@gmail.com> wrote:
 >> A new problem report is waiting at
 >>  http://bugs.plt-scheme.org/query/?cmd=view&pr=10025
 >>
 >> Reported by Stephen De Gabrielle for release: 4.1.3.9-svn12jan2009
 >>
 >> *** Description:
 >> --
 >> Welcome to DrScheme, version 4.1.3.9-svn12jan2009 [3m].
 >> Language: Module custom; memory limit: 128 megabytes.
 >> force: reentrant promise 'MIME-TYPE-TABLE
 >> Your Web application is running at http://localhost:8000/servlets/standalone.ss.
 >> Click 'Stop' at any time to terminate the Web Server.
 >> --
 >>
 >> *** How to repeat:
 >> #lang web-server/insta
 >> (require scheme/gui ;
 >>         xml
 >>         net/sendurl
 >>         web-server/templates
 >> ...
 >> (define (frame-template threads-names-file-svg threads-threads-file-svg)
 >>   (list #"text/html" (include-template "data/frame-template.html")))
 >>
 >> (define (start request)
 >>  (frame-template  threads-names-file-svg threads-threads-file-svg))
 >>
 >> *** Environment:
 >> macosx "Darwin uclic36.uclic.ucl.ac.uk 8.11.1 Darwin Kernel Version 8.11.1: Wed Oct 10 18:23:28 PDT 2007; root:xnu-792.25.20~1/RELEASE_I386 i386 i386" (i386-macosx/3m) (get-display-depth) = 32
 >> Human Language: english
 >> (current-memory-use) 102534560
 >>
 >> Collections:
 >> (("/Users/stephen/Library/PLT Scheme/4.1.3.9/collects" non-existent-path) ("/Applications/PLT Scheme Full v4.1.3.9/collects" "2htdp" "afm" "algol60" "browser" "combinator-parser" "compiler" "config" "defaults" "drscheme" "dynext" "embedded-gui" "eopl" "errortrace" "ffi" "file" "framework" "frtime" "games" "graphics" "gui-debugger" "guibuilder" "handin-client" "handin-server" "help" "hierlist" "honu" "htdch" "htdp" "html" "icons" "info-domain" "lang" "launcher" "lazy" "macro-debugger" "make" "mred" "mrlib" "mysterx" "mzcom" "mzlib" "mzscheme" "net" "openssl" "parser-tools" "planet" "plot" "preprocessor" "profj" "profjWizard" "r5rs" "r6rs" "readline" "redex" "repos-time-stamp" "rnrs" "s-exp" "scheme" "scribble" "scribblings" "setup" "sgl" "sirmail" "slatex" "slideshow" "srfi" "srpersist" "stepper" "string-constants" "swindle" "syntax" "syntax-color" "teachpack" "test-box-recovery" "test-engine" "tests" "tex2page" "texpict" "trace" "typed" "typed-scheme" "version" "waterworld" !
 >>  "web-server" "wxme" "xml"))
 >> Computer Language: (("Module") (#(#t quasiquote repeating-decimal-e #t #t debug) (default) #() "#lang scheme\n" #t))
 >>
 >>
 >
 >
 >
 > --
 > Jay McCarthy <jay@cs.byu.edu>
 > Assistant Professor / Brigham Young University
 > http://teammccarthy.org/jay
 >
 > "The glory of God is Intelligence" - D&C 93
 >
 
 
 
 -- 
 Jay McCarthy <jay@cs.byu.edu>
 Assistant Professor / Brigham Young University
 http://teammccarthy.org/jay
 
 "The glory of God is Intelligence" - D&C 93
From: Eli Barzilay <eli@barzilay.org>
To: "Jay McCarthy" <jay.mccarthy@gmail.com>
Cc: spdegabrielle@gmail.com, bugs@plt-scheme.org
Subject: Re: [plt-bug] all/10025: error : force: reentrant promise 'MIME-TYPE-TABLE' occurs on an irregular basis
Date: Tue, 13 Jan 2009 15:52:09 -0500

 On Jan 13, Jay McCarthy wrote:
 > On Tue, Jan 13, 2009 at 8:22 AM, Jay McCarthy <jay.mccarthy@gmail.com> wrote:
 > > Is this the error that the docs [1] refer to:
 > >
 > > "If v is forced again before the original call to force returns, then
 > > the exn:fail exception is raised."
 > >
 > > ?
 
 Yes.  The simplest way to get it is:
 
   -> (define a (lazy a))
   -> (force a)
   force: reentrant promise a
 
 This is different than using `delay' -- because that introduces a
 non-composable kind of a promise which needs to be forced -- so you
 can do this to get the same error with `delay'
 
   -> (define a (delay (force a)))
   -> (force a)
   force: reentrant promise a
 
 
 > I see that it is. In this code, it doesn't matter if the promise
 > gets computed twice. Is there a way to have have a version of force
 > that is "permissive" in this way, or that blocks?
 
 Not really -- the thing is that this kind of extra check allows a
 certain (significant) optimization in forcing promises.  The srfi-45
 mailing list has the details, specifically:
 
   http://srfi.schemers.org/srfi-45/post-mail-archive/msg00011.html
 
 
 > I notice in your code that not allowing reentrant promises is
 > non-r5rs, do we have an r5rs promise lying around somewhere?
 
 Yes, it looks like Matthew added a plain r5rs-style `delay' which you
 can use, but I highly doubt it that this is really what you want...
 At least it looks like if you allow that you might end up in an
 infinite loop: the unrestricted r5rs-style `delay' is only useful when
 you use some side-effects to break the infinite loop -- and mixing
 side-effects with laziness is the usuall hole you don't want to get
 stuck in...
 
 Can you describe the problem that leads to this?
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                   http://www.barzilay.org/                 Maze is Life!
From: "Jay McCarthy" <jay.mccarthy@gmail.com>
To: "Eli Barzilay" <eli@barzilay.org>
Cc: spdegabrielle@gmail.com, bugs@plt-scheme.org
Subject: Re: [plt-bug] all/10025: error : force: reentrant promise 'MIME-TYPE-TABLE' occurs on an irregular basis
Date: Tue, 13 Jan 2009 15:01:57 -0700

 On Tue, Jan 13, 2009 at 1:52 PM, Eli Barzilay <eli@barzilay.org> wrote:
 >> I notice in your code that not allowing reentrant promises is
 >> non-r5rs, do we have an r5rs promise lying around somewhere?
 >
 > Yes, it looks like Matthew added a plain r5rs-style `delay' which you
 > can use, but I highly doubt it that this is really what you want...
 > At least it looks like if you allow that you might end up in an
 > infinite loop: the unrestricted r5rs-style `delay' is only useful when
 > you use some side-effects to break the infinite loop -- and mixing
 > side-effects with laziness is the usuall hole you don't want to get
 > stuck in...
 >
 > Can you describe the problem that leads to this?
 
 When a static file is served, its mime-type is looked up in a file.
 You (eli) requested and added a patch to make it so that the reading
 of this file was lazy, so that if static files were never requested,
 it would never be loaded. (It is a reasonably large file.) So, if two
 static requests come at the same time, then both force the promise to
 read the file, resulting in a reentrant error.
 
 I could either add a semaphore, but that might be overkill and very
 trixy to do in an efficient way (so it goes away after it has been
 forced). Or, I could have the performance penalty of parsing the file
 multiple times when there are concurrent requests. (But to do the
 latter, I'd need the reentrant version of force.)
 
 Jay
 
 -- 
 Jay McCarthy <jay@cs.byu.edu>
 Assistant Professor / Brigham Young University
 http://teammccarthy.org/jay
 
 "The glory of God is Intelligence" - D&C 93
From: Eli Barzilay <eli@barzilay.org>
To: "Jay McCarthy" <jay.mccarthy@gmail.com>
Cc: spdegabrielle@gmail.com, bugs@plt-scheme.org
Subject: Re: [plt-bug] all/10025: error : force: reentrant promise 'MIME-TYPE-TABLE' occurs on an irregular basis
Date: Tue, 13 Jan 2009 17:08:59 -0500

 On Jan 13, Jay McCarthy wrote:
 > On Tue, Jan 13, 2009 at 1:52 PM, Eli Barzilay <eli@barzilay.org> wrote:
 > > Can you describe the problem that leads to this?
 > 
 > When a static file is served, its mime-type is looked up in a file.
 > You (eli) requested and added a patch to make it so that the reading
 > of this file was lazy, so that if static files were never requested,
 > it would never be loaded. (It is a reasonably large file.) So, if
 > two static requests come at the same time, then both force the
 > promise to read the file, resulting in a reentrant error.
 > 
 > I could either add a semaphore, but that might be overkill and very
 > trixy to do in an efficient way (so it goes away after it has been
 > forced). Or, I could have the performance penalty of parsing the
 > file multiple times when there are concurrent requests. (But to do
 > the latter, I'd need the reentrant version of force.)
 
 Ah!  So there is a real race condition there...  I think that it's not
 unreasonable to expect some OS to throw an error when you try to read
 the file from two threads, so I definitely think that it's worth
 fixing somehow rather than making it parse twice when such a race
 happens.
 
 I knew that there would be a time where threading will come into the
 promises game, so I need to see if I can come up with a reasonable
 solution.
 
 (I'm going home now, so I'll get back to you shortly after I get
 there.)
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                   http://www.barzilay.org/                 Maze is Life!
From: "Stephen De Gabrielle" <spdegabrielle@gmail.com>
To: "Eli Barzilay" <eli@barzilay.org>
Cc: "Jay McCarthy" <jay.mccarthy@gmail.com>, bugs@plt-scheme.org
Subject: Re: [plt-bug] all/10025: error : force: reentrant promise 'MIME-TYPE-TABLE' occurs on an irregular basis
Date: Tue, 13 Jan 2009 22:23:28 +0000

 FYI, I'm generating a frame page, that loads two (static) svg pages,
 each in a frame.
 
 
 Stephen
 
 
 
 On Tue, Jan 13, 2009 at 10:08 PM, Eli Barzilay <eli@barzilay.org> wrote:
 > On Jan 13, Jay McCarthy wrote:
 >> On Tue, Jan 13, 2009 at 1:52 PM, Eli Barzilay <eli@barzilay.org> wrote:
 >> > Can you describe the problem that leads to this?
 >>
 >> When a static file is served, its mime-type is looked up in a file.
 >> You (eli) requested and added a patch to make it so that the reading
 >> of this file was lazy, so that if static files were never requested,
 >> it would never be loaded. (It is a reasonably large file.) So, if
 >> two static requests come at the same time, then both force the
 >> promise to read the file, resulting in a reentrant error.
 >>
 >> I could either add a semaphore, but that might be overkill and very
 >> trixy to do in an efficient way (so it goes away after it has been
 >> forced). Or, I could have the performance penalty of parsing the
 >> file multiple times when there are concurrent requests. (But to do
 >> the latter, I'd need the reentrant version of force.)
 >
 > Ah!  So there is a real race condition there...  I think that it's not
 > unreasonable to expect some OS to throw an error when you try to read
 > the file from two threads, so I definitely think that it's worth
 > fixing somehow rather than making it parse twice when such a race
 > happens.
 >
 > I knew that there would be a time where threading will come into the
 > promises game, so I need to see if I can come up with a reasonable
 > solution.
 >
 > (I'm going home now, so I'll get back to you shortly after I get
 > there.)
 >
 > --
 >          ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
 >                  http://www.barzilay.org/                 Maze is Life!
 >
 
 
 
 -- 
 Cheers,
 
 Stephen
 
 --
 Stephen De Gabrielle
 s.degabrielle@cs.ucl.ac.uk
 Telephone +44 (0)20 7679 0693 (x30693)
 Mobile                  079 851 890 45
 Project: Making Sense of Information (MaSI)
 Work:http://www.uclic.ucl.ac.uk/annb/MaSI.html
 Home:http://www.degabrielle.name/stephen
 
 
 UCL Interaction Centre
 MPEB 8th floor
 University College London
 Gower Street
 London WC1E 6BT
From: Eli Barzilay <eli@barzilay.org>
To: "Jay McCarthy" <jay.mccarthy@gmail.com>
Cc: spdegabrielle@gmail.com, bugs@plt-scheme.org
Subject: Re: [plt-bug] all/10025: error : force: reentrant promise 'MIME-TYPE-TABLE' occurs on an irregular basis
Date: Fri, 16 Jan 2009 06:32:50 -0500

 On Jan 13, Jay McCarthy wrote:
 > 
 > When a static file is served, its mime-type is looked up in a file.
 > You (eli) requested and added a patch to make it so that the reading
 > of this file was lazy, so that if static files were never requested,
 > it would never be loaded. (It is a reasonably large file.) So, if
 > two static requests come at the same time, then both force the
 > promise to read the file, resulting in a reentrant error.
 > 
 > I could either add a semaphore, but that might be overkill and very
 > trixy to do in an efficient way (so it goes away after it has been
 > forced). Or, I could have the performance penalty of parsing the
 > file multiple times when there are concurrent requests. (But to do
 > the latter, I'd need the reentrant version of force.)
 
 Sorry to get back to this so late.  I tried several approaches, but
 couldn't get something that is useful without adding a significant
 overhead on promises.  (Since they're intended to be useful for a lazy
 language, I don't want to do something like adding a semaphore to all
 promise structs...)
 
 So to get this fixed in 4.1.4, I just committed a manual piece of code
 that delays parsing the mime-types file once.  Hopefully I'll find
 some solution for promises and then it can go back to using them.
 
 (I realize that this is a relatively minor point in the web server
 which you wouldn't care much about -- but for the scheme/promise it is
 a serious problem.)
 
 -- 
           ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
                   http://www.barzilay.org/                 Maze is Life!

State changed from "open" to "closed" by jay at Fri, 16 Jan 2009 09:01:56 -0500
Reason>>> Fixed in SVN by Eli

From: Jay McCarthy <jay.mccarthy@gmail.com>
To: Eli Barzilay <eli@barzilay.org>
Cc: spdegabrielle@gmail.com, bugs@plt-scheme.org
Subject: Re: [plt-bug] all/10025: error : force: reentrant promise 
	'MIME-TYPE-TABLE' occurs on an irregular basis
Date: Fri, 16 Jan 2009 07:01:15 -0700

 Thanks for the fix Eli. I'm sure you'll think of something clever for
 scheme/promise. :)
 
 Jay
 
 On Fri, Jan 16, 2009 at 4:32 AM, Eli Barzilay <eli@barzilay.org> wrote:
 > On Jan 13, Jay McCarthy wrote:
 >>
 >> When a static file is served, its mime-type is looked up in a file.
 >> You (eli) requested and added a patch to make it so that the reading
 >> of this file was lazy, so that if static files were never requested,
 >> it would never be loaded. (It is a reasonably large file.) So, if
 >> two static requests come at the same time, then both force the
 >> promise to read the file, resulting in a reentrant error.
 >>
 >> I could either add a semaphore, but that might be overkill and very
 >> trixy to do in an efficient way (so it goes away after it has been
 >> forced). Or, I could have the performance penalty of parsing the
 >> file multiple times when there are concurrent requests. (But to do
 >> the latter, I'd need the reentrant version of force.)
 >
 > Sorry to get back to this so late.  I tried several approaches, but
 > couldn't get something that is useful without adding a significant
 > overhead on promises.  (Since they're intended to be useful for a lazy
 > language, I don't want to do something like adding a semaphore to all
 > promise structs...)
 >
 > So to get this fixed in 4.1.4, I just committed a manual piece of code
 > that delays parsing the mime-types file once.  Hopefully I'll find
 > some solution for promises and then it can go back to using them.
 >
 > (I realize that this is a relatively minor point in the web server
 > which you wouldn't care much about -- but for the scheme/promise it is
 > a serious problem.)
 >
 > --
 >          ((lambda (x) (x x)) (lambda (x) (x x)))          Eli Barzilay:
 >                  http://www.barzilay.org/                 Maze is Life!
 >
 
 
 
 -- 
 Jay McCarthy <jay@cs.byu.edu>
 Assistant Professor / Brigham Young University
 http://teammccarthy.org/jay
 
 "The glory of God is Intelligence" - D&C 93
